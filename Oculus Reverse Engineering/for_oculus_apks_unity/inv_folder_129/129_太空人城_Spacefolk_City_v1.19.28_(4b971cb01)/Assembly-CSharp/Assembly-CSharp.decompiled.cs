using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;
using AK.Wwise;
using B83.Win32;
using BezierSolution;
using City;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FSG.MeshAnimator;
using Folk;
using Il2CppDummyDll;
using InControl;
using JetBrains.Annotations;
using Microsoft.CodeAnalysis;
using Moments;
using Moments.Encoder;
using MoonMode;
using MoonMode.SaveGame;
using NaughtyAttributes;
using NewtonVR;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.Framework;
using OVRSimpleJSON;
using Oculus.Platform;
using Oculus.Platform.Models;
using Shapes;
using SignedDistanceFields;
using Sigtrap.Relays;
using SmartData.Abstract;
using SmartData.Interfaces;
using SmartData.SmartBool.Data;
using SmartData.SmartEvent;
using SmartData.SmartEvent.Data;
using SmartData.SmartFloat;
using SmartData.SmartFloat.Data;
using SmartData.SmartInt.Data;
using SmartData.SmartString.Data;
using SmartData.SmartVector3.Data;
using TMPro;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Utils;
using Vitei;
using Viveport.Internal;

[assembly: AssemblyVersion("1.0.8550.13299")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC2F4", Offset = "0x8EC2F4")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x17424E4", Offset = "0x17424E4", VA = "0x17424E4")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC32C", Offset = "0x8EC32C")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x16D900C", Offset = "0x16D900C", VA = "0x16D900C")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class AoTGeneratedClassDoNotEdit
{
	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1AA04B0", Offset = "0x1AA04B0", VA = "0x1AA04B0")]
	public static void DontCallThisItsForAOTCompilationOnly()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1AA0B8C", Offset = "0x1AA0B8C", VA = "0x1AA0B8C")]
	public AoTGeneratedClassDoNotEdit()
	{
	}
}
[Token(Token = "0x2000005")]
public class AI_Manager : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AI_Manager _instance;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<AI_Unit> _units;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1A0197C", Offset = "0x1A0197C", VA = "0x1A0197C")]
	public static void Add(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1A01B10", Offset = "0x1A01B10", VA = "0x1A01B10")]
	public static void Remove(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1A01B9C", Offset = "0x1A01B9C", VA = "0x1A01B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1A01CB8", Offset = "0x1A01CB8", VA = "0x1A01CB8")]
	public AI_Manager()
	{
	}
}
[Token(Token = "0x2000006")]
public class AI_Unit : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	public enum ActionType
	{
		[Token(Token = "0x400000F")]
		idle,
		[Token(Token = "0x4000010")]
		move,
		[Token(Token = "0x4000011")]
		die,
		[Token(Token = "0x4000012")]
		attack
	}

	[Serializable]
	[Token(Token = "0x2000008")]
	public struct AIAction
	{
		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActionType type;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshAnimationBase[] animations;
	}

	[Token(Token = "0x2000009")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC364", Offset = "0x8EC364")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AI_Unit <>4__this;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string> dieAction;

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x175A9B8", Offset = "0x175A9B8", VA = "0x175A9B8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x175A9C0", Offset = "0x175A9C0", VA = "0x175A9C0")]
		internal void <PerformAction>b__0(string anim)
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _maxMovingUnits;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _movingUnits;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshAnimatorBase meshAnimator;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIAction[] actions;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxMoveDistance;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moveSpeed;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _chooseNewAction;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AIAction _currentAction;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _actionEndTime;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _currentPosition;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _movePosition;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1A01D50", Offset = "0x1A01D50", VA = "0x1A01D50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1A01E08", Offset = "0x1A01E08", VA = "0x1A01E08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1A01CB4", Offset = "0x1A01CB4", VA = "0x1A01CB4")]
	public void Tick(float time, float deltaTime)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1A01E68", Offset = "0x1A01E68", VA = "0x1A01E68")]
	private void PerformAction(float time, float deltaTime)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1A024B8", Offset = "0x1A024B8", VA = "0x1A024B8")]
	public AI_Unit()
	{
	}
}
[Token(Token = "0x200000A")]
public class ArmySpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000B")]
	public struct Unit
	{
		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int count;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float delay;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loop;
	}

	[Token(Token = "0x200000C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC374", Offset = "0x8EC374")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmySpawner <>4__this;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <center>5__2;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <j>5__4;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0x17647F0", Offset = "0x17647F0", VA = "0x17647F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001C")]
			[Address(RVA = "0x1764838", Offset = "0x1764838", VA = "0x1764838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x1764458", Offset = "0x1764458", VA = "0x1764458")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x1764484", Offset = "0x1764484", VA = "0x1764484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x1764488", Offset = "0x1764488", VA = "0x1764488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x17647F8", Offset = "0x17647F8", VA = "0x17647F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, Stack<GameObject>> _pool;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 spawnSize;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 sizeMult;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Unit[] units;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1AA681C", Offset = "0x1AA681C", VA = "0x1AA681C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD4B4", Offset = "0x8FD4B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1AA6894", Offset = "0x1AA6894", VA = "0x1AA6894")]
	private GameObject LoadFromPool(Unit unit)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1AA6A58", Offset = "0x1AA6A58", VA = "0x1AA6A58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1AA6A98", Offset = "0x1AA6A98", VA = "0x1AA6A98")]
	public ArmySpawner()
	{
	}
}
[Token(Token = "0x200000D")]
public class DelayedDestroy : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC384", Offset = "0x8EC384")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedDestroy <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000022")]
			[Address(RVA = "0x15EE120", Offset = "0x15EE120", VA = "0x15EE120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000024")]
			[Address(RVA = "0x15EE168", Offset = "0x15EE168", VA = "0x15EE168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x15EDFF0", Offset = "0x15EDFF0", VA = "0x15EDFF0")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0x15EE01C", Offset = "0x15EE01C", VA = "0x15EE01C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x15EE020", Offset = "0x15EE020", VA = "0x15EE020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x15EE128", Offset = "0x15EE128", VA = "0x15EE128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1678AE4", Offset = "0x1678AE4", VA = "0x1678AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD564", Offset = "0x8FD564")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1678B5C", Offset = "0x1678B5C", VA = "0x1678B5C")]
	public DelayedDestroy()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EC394", Offset = "0x8EC394")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC3CC", Offset = "0x8EC3CC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AI_Unit> <>9__14_0;

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x16B4AE0", Offset = "0x16B4AE0", VA = "0x16B4AE0")]
		public <>c()
		{
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0x16B4AE8", Offset = "0x16B4AE8", VA = "0x16B4AE8")]
		internal bool <LateUpdate>b__14_0(AI_Unit x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollMult;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControlled controlled;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float x;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float y;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool locked;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1ABE894", Offset = "0x1ABE894", VA = "0x1ABE894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1ABE8CC", Offset = "0x1ABE8CC", VA = "0x1ABE8CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1ABF268", Offset = "0x1ABF268", VA = "0x1ABF268")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1ABF298", Offset = "0x1ABF298", VA = "0x1ABF298")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x2000011")]
public class PlayerControlled : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	private const string AnimIdle = "BreathingIdle";

	[Token(Token = "0x4000039")]
	private const string AnimForward = "Running";

	[Token(Token = "0x400003A")]
	private const string AnimBackward = "RunningBackward";

	[Token(Token = "0x400003B")]
	private const string AnimLeft = "Running";

	[Token(Token = "0x400003C")]
	private const string AnimRight = "Running";

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _moveSpeed;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _origTarget;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentAnim;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x191D3B0", Offset = "0x191D3B0", VA = "0x191D3B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x191D484", Offset = "0x191D484", VA = "0x191D484")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x191D574", Offset = "0x191D574", VA = "0x191D574")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x191DAD4", Offset = "0x191DAD4", VA = "0x191DAD4")]
	public PlayerControlled()
	{
	}
}
[Token(Token = "0x2000012")]
public class BoidComponent : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC3DC", Offset = "0x8EC3DC")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoidComponent <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000037")]
			[Address(RVA = "0x1767B34", Offset = "0x1767B34", VA = "0x1767B34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0x1767B7C", Offset = "0x1767B7C", VA = "0x1767B7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x17679B0", Offset = "0x17679B0", VA = "0x17679B0")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x17679DC", Offset = "0x17679DC", VA = "0x17679DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x17679E0", Offset = "0x17679E0", VA = "0x17679E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x1767B3C", Offset = "0x1767B3C", VA = "0x1767B3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion velocity;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x177B17C", Offset = "0x177B17C", VA = "0x177B17C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD614", Offset = "0x8FD614")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x177B1F4", Offset = "0x177B1F4", VA = "0x177B1F4")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x177B2D4", Offset = "0x177B2D4", VA = "0x177B2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x177B418", Offset = "0x177B418", VA = "0x177B418")]
	public BoidComponent()
	{
	}
}
[Token(Token = "0x2000014")]
public class SetRandomColor : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC3EC", Offset = "0x8EC3EC")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRandomColor <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003F")]
			[Address(RVA = "0x158AAF0", Offset = "0x158AAF0", VA = "0x158AAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x158AB38", Offset = "0x158AB38", VA = "0x158AB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x158A9A4", Offset = "0x158A9A4", VA = "0x158A9A4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x158A9D0", Offset = "0x158A9D0", VA = "0x158A9D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x158A9D4", Offset = "0x158A9D4", VA = "0x158A9D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x158AAF8", Offset = "0x158AAF8", VA = "0x158AAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x15B9D6C", Offset = "0x15B9D6C", VA = "0x15B9D6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD6C4", Offset = "0x8FD6C4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x15B9DE4", Offset = "0x15B9DE4", VA = "0x15B9DE4")]
	public SetRandomColor()
	{
	}
}
[Token(Token = "0x2000016")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	public delegate void OnClick();

	[Token(Token = "0x2000018")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000019")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200001A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC3FC", Offset = "0x8EC3FC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x15ECA58", Offset = "0x15ECA58", VA = "0x15ECA58")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x15ECA60", Offset = "0x15ECA60", VA = "0x15ECA60")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC40C", Offset = "0x8EC40C")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x15ECC84", Offset = "0x15ECC84", VA = "0x15ECC84")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x15ECC8C", Offset = "0x15ECC8C", VA = "0x15ECC8C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC41C", Offset = "0x8EC41C")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x15ECED8", Offset = "0x15ECED8", VA = "0x15ECED8")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x15ECEE0", Offset = "0x15ECEE0", VA = "0x15ECEE0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC42C", Offset = "0x8EC42C")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x15ED274", Offset = "0x15ED274", VA = "0x15ED274")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x15ED27C", Offset = "0x15ED27C", VA = "0x15ED27C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC43C", Offset = "0x8EC43C")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x15ED29C", Offset = "0x15ED29C", VA = "0x15ED29C")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0x15ED2A4", Offset = "0x15ED2A4", VA = "0x15ED2A4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000048")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000049")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400004A")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x16717A4", Offset = "0x16717A4", VA = "0x16717A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1671CD8", Offset = "0x1671CD8", VA = "0x1671CD8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x16720A0", Offset = "0x16720A0", VA = "0x16720A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x167225C", Offset = "0x167225C", VA = "0x167225C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x167249C", Offset = "0x167249C", VA = "0x167249C")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1672090", Offset = "0x1672090", VA = "0x1672090")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x16727CC", Offset = "0x16727CC", VA = "0x16727CC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1672AEC", Offset = "0x1672AEC", VA = "0x1672AEC")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1672EB4", Offset = "0x1672EB4", VA = "0x1672EB4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1672FB8", Offset = "0x1672FB8", VA = "0x1672FB8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x167319C", Offset = "0x167319C", VA = "0x167319C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1673240", Offset = "0x1673240", VA = "0x1673240")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1673430", Offset = "0x1673430", VA = "0x1673430")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1673638", Offset = "0x1673638", VA = "0x1673638")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x167393C", Offset = "0x167393C", VA = "0x167393C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1673A38", Offset = "0x1673A38", VA = "0x1673A38")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1673AE4", Offset = "0x1673AE4", VA = "0x1673AE4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000020")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1947108", Offset = "0x1947108", VA = "0x1947108")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x19471B8", Offset = "0x19471B8", VA = "0x19471B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1947278", Offset = "0x1947278", VA = "0x1947278")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x19472B4", Offset = "0x19472B4", VA = "0x19472B4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000021")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000022")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400007A")]
		On,
		[Token(Token = "0x400007B")]
		Off,
		[Token(Token = "0x400007C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000009")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x1B1B814", Offset = "0x1B1B814", VA = "0x1B1B814")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x1B1B7D0", Offset = "0x1B1B7D0", VA = "0x1B1B7D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1B1B81C", Offset = "0x1B1B81C", VA = "0x1B1B81C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1B1B878", Offset = "0x1B1B878", VA = "0x1B1B878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1B1B9BC", Offset = "0x1B1B9BC", VA = "0x1B1B9BC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1B1B9D8", Offset = "0x1B1B9D8", VA = "0x1B1B9D8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1B1BA2C", Offset = "0x1B1BA2C", VA = "0x1B1BA2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1B1BBE8", Offset = "0x1B1BBE8", VA = "0x1B1BBE8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1B1BCFC", Offset = "0x1B1BCFC", VA = "0x1B1BCFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1B1BD8C", Offset = "0x1B1BD8C", VA = "0x1B1BD8C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1B1BE58", Offset = "0x1B1BE58", VA = "0x1B1BE58")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1B1BF0C", Offset = "0x1B1BF0C", VA = "0x1B1BF0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1B1BFF8", Offset = "0x1B1BFF8", VA = "0x1B1BFF8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000023")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400007E")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400007F")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0F1C", Offset = "0x8F0F1C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0F54", Offset = "0x8F0F54")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0F8C", Offset = "0x8F0F8C")]
	public float HeightOffset;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0FC4", Offset = "0x8F0FC4")]
	public float MinimumHeight;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F0FFC", Offset = "0x8F0FFC")]
	public float MaximumHeight;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1A2802C", Offset = "0x1A2802C", VA = "0x1A2802C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1A28034", Offset = "0x1A28034", VA = "0x1A28034")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1A280C0", Offset = "0x1A280C0", VA = "0x1A280C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1A28154", Offset = "0x1A28154", VA = "0x1A28154")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1A281E8", Offset = "0x1A281E8", VA = "0x1A281E8")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1A28514", Offset = "0x1A28514", VA = "0x1A28514")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1A28744", Offset = "0x1A28744", VA = "0x1A28744")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000024")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1B21E18", Offset = "0x1B21E18", VA = "0x1B21E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1B21EE4", Offset = "0x1B21EE4", VA = "0x1B21EE4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000025")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	public enum States
	{
		[Token(Token = "0x40000AD")]
		Ready,
		[Token(Token = "0x40000AE")]
		Aim,
		[Token(Token = "0x40000AF")]
		CancelAim,
		[Token(Token = "0x40000B0")]
		PreTeleport,
		[Token(Token = "0x40000B1")]
		CancelTeleport,
		[Token(Token = "0x40000B2")]
		Teleporting,
		[Token(Token = "0x40000B3")]
		PostTeleport
	}

	[Token(Token = "0x2000027")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40000B5")]
		None,
		[Token(Token = "0x40000B6")]
		Aim,
		[Token(Token = "0x40000B7")]
		PreTeleport,
		[Token(Token = "0x40000B8")]
		Teleport
	}

	[Token(Token = "0x2000028")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40000BA")]
		Point,
		[Token(Token = "0x40000BB")]
		Sphere,
		[Token(Token = "0x40000BC")]
		Capsule
	}

	[Token(Token = "0x2000029")]
	public class AimData
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1414", Offset = "0x8F1414")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700000D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x16B2D2C", Offset = "0x16B2D2C", VA = "0x16B2D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDBEC", Offset = "0x8FDBEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000BD")]
			[Address(RVA = "0x16B2D34", Offset = "0x16B2D34", VA = "0x16B2D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDBFC", Offset = "0x8FDBFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x16B2CA8", Offset = "0x16B2CA8", VA = "0x16B2CA8")]
		public AimData()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x16B2D3C", Offset = "0x16B2D3C", VA = "0x16B2D3C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC44C", Offset = "0x8EC44C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0x16B2AF4", Offset = "0x16B2AF4", VA = "0x16B2AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C4")]
			[Address(RVA = "0x16B2B3C", Offset = "0x16B2B3C", VA = "0x16B2B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x16B29B8", Offset = "0x16B29B8", VA = "0x16B29B8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x16B29E4", Offset = "0x16B29E4", VA = "0x16B29E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x16B29E8", Offset = "0x16B29E8", VA = "0x16B29E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x16B2AFC", Offset = "0x16B2AFC", VA = "0x16B2AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC45C", Offset = "0x8EC45C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x16B2424", Offset = "0x16B2424", VA = "0x16B2424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0x16B246C", Offset = "0x16B246C", VA = "0x16B246C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x16B229C", Offset = "0x16B229C", VA = "0x16B229C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x16B22C8", Offset = "0x16B22C8", VA = "0x16B22C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x16B22CC", Offset = "0x16B22CC", VA = "0x16B22CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x16B242C", Offset = "0x16B242C", VA = "0x16B242C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC46C", Offset = "0x8EC46C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0x16B2550", Offset = "0x16B2550", VA = "0x16B2550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0x16B2598", Offset = "0x16B2598", VA = "0x16B2598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x16B2474", Offset = "0x16B2474", VA = "0x16B2474")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x16B24A0", Offset = "0x16B24A0", VA = "0x16B24A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x16B24A4", Offset = "0x16B24A4", VA = "0x16B24A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x16B2558", Offset = "0x16B2558", VA = "0x16B2558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC47C", Offset = "0x8EC47C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0x16B2968", Offset = "0x16B2968", VA = "0x16B2968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0x16B29B0", Offset = "0x16B29B0", VA = "0x16B29B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x16B284C", Offset = "0x16B284C", VA = "0x16B284C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x16B2878", Offset = "0x16B2878", VA = "0x16B2878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x16B287C", Offset = "0x16B287C", VA = "0x16B287C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x16B2970", Offset = "0x16B2970", VA = "0x16B2970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC48C", Offset = "0x8EC48C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0x16B267C", Offset = "0x16B267C", VA = "0x16B267C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0x16B26C4", Offset = "0x16B26C4", VA = "0x16B26C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x16B25A0", Offset = "0x16B25A0", VA = "0x16B25A0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x16B25CC", Offset = "0x16B25CC", VA = "0x16B25CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x16B25D0", Offset = "0x16B25D0", VA = "0x16B25D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x16B2684", Offset = "0x16B2684", VA = "0x16B2684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC49C", Offset = "0x8EC49C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x16B2C58", Offset = "0x16B2C58", VA = "0x16B2C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x16B2CA0", Offset = "0x16B2CA0", VA = "0x16B2CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x16B2B44", Offset = "0x16B2B44", VA = "0x16B2B44")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x16B2B70", Offset = "0x16B2B70", VA = "0x16B2B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x16B2B74", Offset = "0x16B2B74", VA = "0x16B2B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x16B2C60", Offset = "0x16B2C60", VA = "0x16B2C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4AC", Offset = "0x8EC4AC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x16B27FC", Offset = "0x16B27FC", VA = "0x16B27FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0x16B2844", Offset = "0x16B2844", VA = "0x16B2844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x16B26CC", Offset = "0x16B26CC", VA = "0x16B26CC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x16B26F8", Offset = "0x16B26F8", VA = "0x16B26F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x16B26FC", Offset = "0x16B26FC", VA = "0x16B26FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x16B2804", Offset = "0x16B2804", VA = "0x16B2804", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1034", Offset = "0x8F1034")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F106C", Offset = "0x8F106C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F10A4", Offset = "0x8F10A4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F10DC", Offset = "0x8F10DC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1114", Offset = "0x8F1114")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F114C", Offset = "0x8F114C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1184", Offset = "0x8F1184")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F11BC", Offset = "0x8F11BC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F11F4", Offset = "0x8F11F4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1204", Offset = "0x8F1204")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F123C", Offset = "0x8F123C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1284", Offset = "0x8F1284")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1294", Offset = "0x8F1294")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F12CC", Offset = "0x8F12CC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1304", Offset = "0x8F1304")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F133C", Offset = "0x8F133C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000A")]
	public States CurrentState
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x1B229E0", Offset = "0x1B229E0", VA = "0x1B229E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD774", Offset = "0x8FD774")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1B229E8", Offset = "0x1B229E8", VA = "0x1B229E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD784", Offset = "0x8FD784")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x1B22C0C", Offset = "0x1B22C0C", VA = "0x1B22C0C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x1B22C34", Offset = "0x1B22C34", VA = "0x1B22C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD7B4", Offset = "0x8FD7B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x1B22C3C", Offset = "0x1B22C3C", VA = "0x1B22C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD7C4", Offset = "0x8FD7C4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x1B229F0", Offset = "0x1B229F0", VA = "0x1B229F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD794", Offset = "0x8FD794")]
		add
		{
		}
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x1B22A90", Offset = "0x1B22A90", VA = "0x1B22A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD7A4", Offset = "0x8FD7A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1B2327C", Offset = "0x1B2327C", VA = "0x1B2327C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD80C", Offset = "0x8FD80C")]
		add
		{
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1B2331C", Offset = "0x1B2331C", VA = "0x1B2331C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD81C", Offset = "0x8FD81C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1B233BC", Offset = "0x1B233BC", VA = "0x1B233BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD88C", Offset = "0x8FD88C")]
		add
		{
		}
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1B2345C", Offset = "0x1B2345C", VA = "0x1B2345C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD89C", Offset = "0x8FD89C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x1B234FC", Offset = "0x1B234FC", VA = "0x1B234FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD8AC", Offset = "0x8FD8AC")]
		add
		{
		}
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1B2359C", Offset = "0x1B2359C", VA = "0x1B2359C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD8BC", Offset = "0x8FD8BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x1B236AC", Offset = "0x1B236AC", VA = "0x1B236AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD8CC", Offset = "0x8FD8CC")]
		add
		{
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x1B2374C", Offset = "0x1B2374C", VA = "0x1B2374C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD8DC", Offset = "0x8FD8DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x1B23864", Offset = "0x1B23864", VA = "0x1B23864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD94C", Offset = "0x8FD94C")]
		add
		{
		}
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x1B23904", Offset = "0x1B23904", VA = "0x1B23904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD95C", Offset = "0x8FD95C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x1B23A1C", Offset = "0x1B23A1C", VA = "0x1B23A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD9CC", Offset = "0x8FD9CC")]
		add
		{
		}
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x1B23ABC", Offset = "0x1B23ABC", VA = "0x1B23ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD9DC", Offset = "0x8FD9DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1B23BD4", Offset = "0x1B23BD4", VA = "0x1B23BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDA4C", Offset = "0x8FDA4C")]
		add
		{
		}
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1B23C74", Offset = "0x1B23C74", VA = "0x1B23C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDA5C", Offset = "0x8FDA5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x1B23D8C", Offset = "0x1B23D8C", VA = "0x1B23D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDACC", Offset = "0x8FDACC")]
		add
		{
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1B23E2C", Offset = "0x1B23E2C", VA = "0x1B23E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDADC", Offset = "0x8FDADC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x1B23F44", Offset = "0x1B23F44", VA = "0x1B23F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDB4C", Offset = "0x8FDB4C")]
		add
		{
		}
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x1B23FE4", Offset = "0x1B23FE4", VA = "0x1B23FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDB5C", Offset = "0x8FDB5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x1B240FC", Offset = "0x1B240FC", VA = "0x1B240FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDBCC", Offset = "0x8FDBCC")]
		add
		{
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1B2419C", Offset = "0x1B2419C", VA = "0x1B2419C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDBDC", Offset = "0x8FDBDC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1B2268C", Offset = "0x1B2268C", VA = "0x1B2268C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1B226B0", Offset = "0x1B226B0", VA = "0x1B226B0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1B22B30", Offset = "0x1B22B30", VA = "0x1B22B30")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1B22C44", Offset = "0x1B22C44", VA = "0x1B22C44")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1B22E90", Offset = "0x1B22E90", VA = "0x1B22E90")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8FD7D4", Offset = "0x8FD7D4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1B22F44", Offset = "0x1B22F44", VA = "0x1B22F44")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1B23044", Offset = "0x1B23044", VA = "0x1B23044")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1B23060", Offset = "0x1B23060", VA = "0x1B23060")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1B23124", Offset = "0x1B23124", VA = "0x1B23124")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1B23168", Offset = "0x1B23168", VA = "0x1B23168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1B231CC", Offset = "0x1B231CC", VA = "0x1B231CC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1B23274", Offset = "0x1B23274", VA = "0x1B23274", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1B231FC", Offset = "0x1B231FC", VA = "0x1B231FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD82C", Offset = "0x8FD82C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1B2363C", Offset = "0x1B2363C", VA = "0x1B2363C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1B237EC", Offset = "0x1B237EC", VA = "0x1B237EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD8EC", Offset = "0x8FD8EC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1B239A4", Offset = "0x1B239A4", VA = "0x1B239A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD96C", Offset = "0x8FD96C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1B23B5C", Offset = "0x1B23B5C", VA = "0x1B23B5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FD9EC", Offset = "0x8FD9EC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1B23D14", Offset = "0x1B23D14", VA = "0x1B23D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FDA6C", Offset = "0x8FDA6C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1B23ECC", Offset = "0x1B23ECC", VA = "0x1B23ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FDAEC", Offset = "0x8FDAEC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1B24084", Offset = "0x1B24084", VA = "0x1B24084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FDB6C", Offset = "0x8FDB6C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1B2423C", Offset = "0x1B2423C", VA = "0x1B2423C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1B2437C", Offset = "0x1B2437C", VA = "0x1B2437C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1B243B0", Offset = "0x1B243B0", VA = "0x1B243B0")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1B24478", Offset = "0x1B24478", VA = "0x1B24478")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1B24570", Offset = "0x1B24570", VA = "0x1B24570")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000031")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x15BD57C", Offset = "0x15BD57C", VA = "0x15BD57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE3C", Offset = "0x8FDE3C")]
		add
		{
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x15BD61C", Offset = "0x15BD61C", VA = "0x15BD61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE4C", Offset = "0x8FDE4C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x15BD6BC", Offset = "0x15BD6BC", VA = "0x15BD6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE5C", Offset = "0x8FDE5C")]
		add
		{
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x15BD75C", Offset = "0x15BD75C", VA = "0x15BD75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE6C", Offset = "0x8FDE6C")]
		remove
		{
		}
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x15BD7FC", Offset = "0x15BD7FC", VA = "0x15BD7FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x15BD8E8", Offset = "0x15BD8E8", VA = "0x15BD8E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x15BD8EC", Offset = "0x15BD8EC", VA = "0x15BD8EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x15BD960", Offset = "0x15BD960", VA = "0x15BD960")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x15BDA84", Offset = "0x15BDA84", VA = "0x15BDA84")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x15BDC6C", Offset = "0x15BDC6C", VA = "0x15BDC6C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x15BDE74", Offset = "0x15BDE74", VA = "0x15BDE74")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1880724", Offset = "0x1880724", VA = "0x1880724", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x18807C4", Offset = "0x18807C4", VA = "0x18807C4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000F6")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x18808B4", Offset = "0x18808B4", VA = "0x18808B4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1444", Offset = "0x8F1444")]
	public float Range;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x18808C4", Offset = "0x18808C4", VA = "0x18808C4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x18809C0", Offset = "0x18809C0", VA = "0x18809C0")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F147C", Offset = "0x8F147C")]
	public float Range;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F14B4", Offset = "0x8F14B4")]
	public float MinimumElevation;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F14EC", Offset = "0x8F14EC")]
	public float Gravity;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1524", Offset = "0x8F1524")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1524", Offset = "0x8F1524")]
	public float AimVelocity;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1580", Offset = "0x8F1580")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1580", Offset = "0x8F1580")]
	public float AimStep;

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x18809D0", Offset = "0x18809D0", VA = "0x18809D0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1880B60", Offset = "0x1880B60", VA = "0x1880B60")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000035")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F15D8", Offset = "0x8F15D8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1880B74", Offset = "0x1880B74", VA = "0x1880B74")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1880CB0", Offset = "0x1880CB0", VA = "0x1880CB0")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1880CE0", Offset = "0x1880CE0", VA = "0x1880CE0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1880D10", Offset = "0x1880D10", VA = "0x1880D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1880DC0", Offset = "0x1880DC0", VA = "0x1880DC0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1880E2C", Offset = "0x1880E2C", VA = "0x1880E2C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1880E94", Offset = "0x1880E94", VA = "0x1880E94")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1610", Offset = "0x8F1610")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1620", Offset = "0x8F1620")]
	public Transform PositionIndicator;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1658", Offset = "0x8F1658")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1690", Offset = "0x8F1690")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x1880FB8", Offset = "0x1880FB8", VA = "0x1880FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE7C", Offset = "0x8FDE7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x1880FC0", Offset = "0x1880FC0", VA = "0x1880FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE8C", Offset = "0x8FDE8C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x188117C", Offset = "0x188117C", VA = "0x188117C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDE9C", Offset = "0x8FDE9C")]
		add
		{
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x188121C", Offset = "0x188121C", VA = "0x188121C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDEAC", Offset = "0x8FDEAC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1880FCC", Offset = "0x1880FCC", VA = "0x1880FCC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1881064", Offset = "0x1881064", VA = "0x1881064")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1881138", Offset = "0x1881138", VA = "0x1881138")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1881178", Offset = "0x1881178", VA = "0x1881178")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x18812BC", Offset = "0x18812BC", VA = "0x18812BC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1881320", Offset = "0x1881320", VA = "0x1881320")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1881340", Offset = "0x1881340", VA = "0x1881340", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4BC", Offset = "0x8EC4BC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x158E69C", Offset = "0x158E69C", VA = "0x158E69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011C")]
			[Address(RVA = "0x158E6E4", Offset = "0x158E6E4", VA = "0x158E6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x158E5D4", Offset = "0x158E5D4", VA = "0x158E5D4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x158E600", Offset = "0x158E600", VA = "0x158E600", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x158E604", Offset = "0x158E604", VA = "0x158E604", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x158E6A4", Offset = "0x158E6A4", VA = "0x158E6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4CC", Offset = "0x8EC4CC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0x158E584", Offset = "0x158E584", VA = "0x158E584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000122")]
			[Address(RVA = "0x158E5CC", Offset = "0x158E5CC", VA = "0x158E5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x158E4B8", Offset = "0x158E4B8", VA = "0x158E4B8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x158E4E4", Offset = "0x158E4E4", VA = "0x158E4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x158E4E8", Offset = "0x158E4E8", VA = "0x158E4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x158E58C", Offset = "0x158E58C", VA = "0x158E58C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x188154C", Offset = "0x188154C", VA = "0x188154C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1881620", Offset = "0x1881620", VA = "0x1881620", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1881680", Offset = "0x1881680", VA = "0x1881680", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1881740", Offset = "0x1881740", VA = "0x1881740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FDEBC", Offset = "0x8FDEBC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x18817B8", Offset = "0x18817B8", VA = "0x18817B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FDF1C", Offset = "0x8FDF1C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000114")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1881830", Offset = "0x1881830", VA = "0x1881830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDF7C", Offset = "0x8FDF7C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x188185C", Offset = "0x188185C", VA = "0x188185C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FDF8C", Offset = "0x8FDF8C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200003A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F16D8", Offset = "0x8F16D8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F16E8", Offset = "0x8F16E8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1720", Offset = "0x8F1720")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1758", Offset = "0x8F1758")]
	public bool FastTeleport;

	[Token(Token = "0x17000021")]
	public Transform Pointer
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x1881888", Offset = "0x1881888", VA = "0x1881888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE03C", Offset = "0x8FE03C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x1881890", Offset = "0x1881890", VA = "0x1881890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE04C", Offset = "0x8FE04C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1881898", Offset = "0x1881898", VA = "0x1881898", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x18819F0", Offset = "0x18819F0", VA = "0x18819F0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1881AA8", Offset = "0x1881AA8", VA = "0x1881AA8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200003C")]
	public enum InputModes
	{
		[Token(Token = "0x400010D")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400010E")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400010F")]
		ThumbstickTeleport,
		[Token(Token = "0x4000110")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200003D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000112")]
		A,
		[Token(Token = "0x4000113")]
		B,
		[Token(Token = "0x4000114")]
		LeftTrigger,
		[Token(Token = "0x4000115")]
		LeftThumbstick,
		[Token(Token = "0x4000116")]
		RightTrigger,
		[Token(Token = "0x4000117")]
		RightThumbstick,
		[Token(Token = "0x4000118")]
		X,
		[Token(Token = "0x4000119")]
		Y
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1790", Offset = "0x8F1790")]
	public InputModes InputMode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F17C8", Offset = "0x8F17C8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1800", Offset = "0x8F1800")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1838", Offset = "0x8F1838")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1881AAC", Offset = "0x1881AAC", VA = "0x1881AAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1881AB0", Offset = "0x1881AB0", VA = "0x1881AB0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1881E98", Offset = "0x1881E98", VA = "0x1881E98", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1881F58", Offset = "0x1881F58", VA = "0x1881F58")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200003E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200003F")]
	public enum OrientationModes
	{
		[Token(Token = "0x400011E")]
		HeadRelative,
		[Token(Token = "0x400011F")]
		ForwardFacing
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4DC", Offset = "0x8EC4DC")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0x158E7CC", Offset = "0x158E7CC", VA = "0x158E7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013A")]
			[Address(RVA = "0x158E814", Offset = "0x158E814", VA = "0x158E814", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x158E6EC", Offset = "0x158E6EC", VA = "0x158E6EC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x158E718", Offset = "0x158E718", VA = "0x158E718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x158E71C", Offset = "0x158E71C", VA = "0x158E71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x158E7D4", Offset = "0x158E7D4", VA = "0x158E7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x188203C", Offset = "0x188203C", VA = "0x188203C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1882130", Offset = "0x1882130", VA = "0x1882130")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1882138", Offset = "0x1882138", VA = "0x1882138", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1882184", Offset = "0x1882184", VA = "0x1882184", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x18821CC", Offset = "0x18821CC", VA = "0x18821CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE05C", Offset = "0x8FE05C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000132")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1882244", Offset = "0x1882244", VA = "0x1882244")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1882300", Offset = "0x1882300", VA = "0x1882300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE0BC", Offset = "0x8FE0BC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0x188232C", Offset = "0x188232C", VA = "0x188232C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1882330", Offset = "0x1882330", VA = "0x1882330", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x18823AC", Offset = "0x18823AC", VA = "0x18823AC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1870", Offset = "0x8F1870")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F18A8", Offset = "0x8F18A8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F18E0", Offset = "0x8F18E0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1918", Offset = "0x8F1918")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x18823B0", Offset = "0x18823B0", VA = "0x18823B0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x18823DC", Offset = "0x18823DC", VA = "0x18823DC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x188278C", Offset = "0x188278C", VA = "0x188278C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000043")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1950", Offset = "0x8F1950")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1988", Offset = "0x8F1988")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F19C0", Offset = "0x8F19C0")]
	public float RotateStickThreshold;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1882790", Offset = "0x1882790", VA = "0x1882790", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x18827D4", Offset = "0x18827D4", VA = "0x18827D4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1882B7C", Offset = "0x1882B7C", VA = "0x1882B7C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000044")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1882B8C", Offset = "0x1882B8C", VA = "0x1882B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1882B90", Offset = "0x1882B90", VA = "0x1882B90")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1882B98", Offset = "0x1882B98", VA = "0x1882B98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1882C54", Offset = "0x1882C54", VA = "0x1882C54")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1882C7C", Offset = "0x1882C7C", VA = "0x1882C7C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000045")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F19F8", Offset = "0x8F19F8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x1882C94", Offset = "0x1882C94", VA = "0x1882C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE11C", Offset = "0x8FE11C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x1882C9C", Offset = "0x1882C9C", VA = "0x1882C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE12C", Offset = "0x8FE12C")]
		private set
		{
		}
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1880758", Offset = "0x1880758", VA = "0x1880758", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1880880", Offset = "0x1880880", VA = "0x1880880", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1882CA4", Offset = "0x1882CA4", VA = "0x1882CA4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8FE13C", Offset = "0x8FE13C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1880E20", Offset = "0x1880E20", VA = "0x1880E20", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1880E8C", Offset = "0x1880E8C", VA = "0x1880E8C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x18808BC", Offset = "0x18808BC", VA = "0x18808BC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4EC", Offset = "0x8EC4EC")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x158EAEC", Offset = "0x158EAEC", VA = "0x158EAEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x158EB34", Offset = "0x158EB34", VA = "0x158EB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x158E81C", Offset = "0x158E81C", VA = "0x158E81C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x158E848", Offset = "0x158E848", VA = "0x158E848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x158E84C", Offset = "0x158E84C", VA = "0x158E84C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x158EAF4", Offset = "0x158EAF4", VA = "0x158EAF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1A08", Offset = "0x8F1A08")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000139")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1882D80", Offset = "0x1882D80", VA = "0x1882D80")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1882E90", Offset = "0x1882E90", VA = "0x1882E90", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1882EBC", Offset = "0x1882EBC", VA = "0x1882EBC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1882EE4", Offset = "0x1882EE4", VA = "0x1882EE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE174", Offset = "0x8FE174")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1882F5C", Offset = "0x1882F5C", VA = "0x1882F5C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000156")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1882F78", Offset = "0x1882F78", VA = "0x1882F78", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1883098", Offset = "0x1883098", VA = "0x1883098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE1D4", Offset = "0x8FE1D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000048")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x18830C4", Offset = "0x18830C4", VA = "0x18830C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1883128", Offset = "0x1883128", VA = "0x1883128", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1883220", Offset = "0x1883220", VA = "0x1883220", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1883318", Offset = "0x1883318", VA = "0x1883318")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8FE234", Offset = "0x8FE234")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x188331C", Offset = "0x188331C", VA = "0x188331C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000049")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1A40", Offset = "0x8F1A40")]
	public float LOSOffset;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1A78", Offset = "0x8F1A78")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1883328", Offset = "0x1883328", VA = "0x1883328", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1883534", Offset = "0x1883534", VA = "0x1883534")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200004A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1883540", Offset = "0x1883540", VA = "0x1883540", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1883638", Offset = "0x1883638", VA = "0x1883638")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200004B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000168")]
	[Address(RVA = "0x188363C", Offset = "0x188363C", VA = "0x188363C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x18836D0", Offset = "0x18836D0", VA = "0x18836D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600016A")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1883760", Offset = "0x1883760", VA = "0x1883760")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200004C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC4FC", Offset = "0x8EC4FC")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0x158EC74", Offset = "0x158EC74", VA = "0x158EC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0x158ECBC", Offset = "0x158ECBC", VA = "0x158ECBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x158EB3C", Offset = "0x158EB3C", VA = "0x158EB3C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x158EB68", Offset = "0x158EB68", VA = "0x158EB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x158EB6C", Offset = "0x158EB6C", VA = "0x158EB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x158EC7C", Offset = "0x158EC7C", VA = "0x158EC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1AB0", Offset = "0x8F1AB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1AB0", Offset = "0x8F1AB0")]
	public float TransitionDuration;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1B08", Offset = "0x8F1B08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1B08", Offset = "0x8F1B08")]
	public float TeleportDelay;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1B5C", Offset = "0x8F1B5C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1883768", Offset = "0x1883768", VA = "0x1883768", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1883794", Offset = "0x1883794", VA = "0x1883794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE26C", Offset = "0x8FE26C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x188380C", Offset = "0x188380C", VA = "0x188380C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200004E")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000175")]
	[Address(RVA = "0x18839B8", Offset = "0x18839B8", VA = "0x18839B8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x18839D4", Offset = "0x18839D4", VA = "0x18839D4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200004F")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC50C", Offset = "0x8EC50C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017D")]
			[Address(RVA = "0x158EE30", Offset = "0x158EE30", VA = "0x158EE30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017F")]
			[Address(RVA = "0x158EE78", Offset = "0x158EE78", VA = "0x158EE78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x158ECC4", Offset = "0x158ECC4", VA = "0x158ECC4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x158ECF0", Offset = "0x158ECF0", VA = "0x158ECF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x158ECF4", Offset = "0x158ECF4", VA = "0x158ECF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x158EE38", Offset = "0x158EE38", VA = "0x158EE38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1B94", Offset = "0x8F1B94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1B94", Offset = "0x8F1B94")]
	public float TransitionDuration;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x18839DC", Offset = "0x18839DC", VA = "0x18839DC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1883A08", Offset = "0x1883A08", VA = "0x1883A08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE31C", Offset = "0x8FE31C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1883A80", Offset = "0x1883A80", VA = "0x1883A80")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000051")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000052")]
	public enum PlabackState
	{
		[Token(Token = "0x4000169")]
		Idle = 1,
		[Token(Token = "0x400016A")]
		Preparing,
		[Token(Token = "0x400016B")]
		Buffering,
		[Token(Token = "0x400016C")]
		Ready,
		[Token(Token = "0x400016D")]
		Ended
	}

	[Token(Token = "0x2000053")]
	public enum StereoMode
	{
		[Token(Token = "0x400016F")]
		Unknown = -1,
		[Token(Token = "0x4000170")]
		Mono,
		[Token(Token = "0x4000171")]
		TopBottom,
		[Token(Token = "0x4000172")]
		LeftRight,
		[Token(Token = "0x4000173")]
		Mesh
	}

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x19B31E0", Offset = "0x19B31E0", VA = "0x19B31E0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x19B3510", Offset = "0x19B3510", VA = "0x19B3510")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x19B37E0", Offset = "0x19B37E0", VA = "0x19B37E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x19B3850", Offset = "0x19B3850", VA = "0x19B3850")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x19B3960", Offset = "0x19B3960", VA = "0x19B3960")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000030")]
	public static long Duration
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x19B3A74", Offset = "0x19B3A74", VA = "0x19B3A74")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000031")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x19B3B88", Offset = "0x19B3B88", VA = "0x19B3B88")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000032")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x19B3C9C", Offset = "0x19B3C9C", VA = "0x19B3C9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000033")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x19B3DB0", Offset = "0x19B3DB0", VA = "0x19B3DB0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000034")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x19B3EC4", Offset = "0x19B3EC4", VA = "0x19B3EC4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x19B3FD8", Offset = "0x19B3FD8", VA = "0x19B3FD8")]
		set
		{
		}
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x19B414C", Offset = "0x19B414C", VA = "0x19B414C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x19B4378", Offset = "0x19B4378", VA = "0x19B4378")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x19B448C", Offset = "0x19B448C", VA = "0x19B448C")]
	public static void Play()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x19B45A0", Offset = "0x19B45A0", VA = "0x19B45A0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x19B46B4", Offset = "0x19B46B4", VA = "0x19B46B4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x19B4830", Offset = "0x19B4830", VA = "0x19B4830")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x19B49A8", Offset = "0x19B49A8", VA = "0x19B49A8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000054")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x1A25AF0", Offset = "0x1A25AF0", VA = "0x1A25AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE3CC", Offset = "0x8FE3CC")]
		add
		{
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x1A25B90", Offset = "0x1A25B90", VA = "0x1A25B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE3DC", Offset = "0x8FE3DC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1A25C30", Offset = "0x1A25C30", VA = "0x1A25C30", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1A25C44", Offset = "0x1A25C44", VA = "0x1A25C44")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000055")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000056")]
	public enum ButtonType
	{
		[Token(Token = "0x4000177")]
		Play,
		[Token(Token = "0x4000178")]
		Pause,
		[Token(Token = "0x4000179")]
		FastForward,
		[Token(Token = "0x400017A")]
		Rewind,
		[Token(Token = "0x400017B")]
		SkipForward,
		[Token(Token = "0x400017C")]
		SkipBack,
		[Token(Token = "0x400017D")]
		Stop
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000035")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1AB3668", Offset = "0x1AB3668", VA = "0x1AB3668")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1AB3670", Offset = "0x1AB3670", VA = "0x1AB3670")]
		set
		{
		}
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1AB3694", Offset = "0x1AB3694", VA = "0x1AB3694", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1AB4B2C", Offset = "0x1AB4B2C", VA = "0x1AB4B2C")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000057")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000058")]
	public enum VideoShape
	{
		[Token(Token = "0x4000192")]
		_360,
		[Token(Token = "0x4000193")]
		_180,
		[Token(Token = "0x4000194")]
		Quad
	}

	[Token(Token = "0x2000059")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000196")]
		Mono,
		[Token(Token = "0x4000197")]
		TopBottom,
		[Token(Token = "0x4000198")]
		LeftRight,
		[Token(Token = "0x4000199")]
		BottomTop
	}

	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC51C", Offset = "0x8EC51C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0x16B4F70", Offset = "0x16B4F70", VA = "0x16B4F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0x16B4FB8", Offset = "0x16B4FB8", VA = "0x16B4FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x16B4D7C", Offset = "0x16B4D7C", VA = "0x16B4D7C")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x16B4DA8", Offset = "0x16B4DA8", VA = "0x16B4DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x16B4DAC", Offset = "0x16B4DAC", VA = "0x16B4DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x16B4F78", Offset = "0x16B4F78", VA = "0x16B4F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC52C", Offset = "0x8EC52C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x16B4C84", Offset = "0x16B4C84", VA = "0x16B4C84")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x16B4C8C", Offset = "0x16B4C8C", VA = "0x16B4C8C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1C1C", Offset = "0x8F1C1C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1C2C", Offset = "0x8F1C2C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1C3C", Offset = "0x8F1C3C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000036")]
	public bool IsPlaying
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1B4BAA8", Offset = "0x1B4BAA8", VA = "0x1B4BAA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE3EC", Offset = "0x8FE3EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x1B4BAB0", Offset = "0x1B4BAB0", VA = "0x1B4BAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE3FC", Offset = "0x8FE3FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public long Duration
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1B4BABC", Offset = "0x1B4BABC", VA = "0x1B4BABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE40C", Offset = "0x8FE40C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1B4BAC4", Offset = "0x1B4BAC4", VA = "0x1B4BAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE41C", Offset = "0x8FE41C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x1B4BACC", Offset = "0x1B4BACC", VA = "0x1B4BACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE42C", Offset = "0x8FE42C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1B4BAD4", Offset = "0x1B4BAD4", VA = "0x1B4BAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE43C", Offset = "0x8FE43C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1B4BADC", Offset = "0x1B4BADC", VA = "0x1B4BADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1B4BD88", Offset = "0x1B4BD88", VA = "0x1B4BD88")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1B4BDEC", Offset = "0x1B4BDEC", VA = "0x1B4BDEC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1B4C124", Offset = "0x1B4C124", VA = "0x1B4C124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE44C", Offset = "0x8FE44C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1B4C19C", Offset = "0x1B4C19C", VA = "0x1B4C19C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1B4C484", Offset = "0x1B4C484", VA = "0x1B4C484")]
	public void Play()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1B4C518", Offset = "0x1B4C518", VA = "0x1B4C518")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1B4C5A8", Offset = "0x1B4C5A8", VA = "0x1B4C5A8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1B4C6AC", Offset = "0x1B4C6AC", VA = "0x1B4C6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1B4CC74", Offset = "0x1B4CC74", VA = "0x1B4CC74")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1B4CD2C", Offset = "0x1B4CD2C", VA = "0x1B4CD2C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1B4CDBC", Offset = "0x1B4CDBC", VA = "0x1B4CDBC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1B4CEA8", Offset = "0x1B4CEA8", VA = "0x1B4CEA8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200005C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200005D")]
	private enum PlaybackState
	{
		[Token(Token = "0x40001B6")]
		Playing,
		[Token(Token = "0x40001B7")]
		Paused,
		[Token(Token = "0x40001B8")]
		Rewinding,
		[Token(Token = "0x40001B9")]
		FastForwarding
	}

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1B4CEB8", Offset = "0x1B4CEB8", VA = "0x1B4CEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1B4D1C4", Offset = "0x1B4D1C4", VA = "0x1B4D1C4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1B4D2F0", Offset = "0x1B4D2F0", VA = "0x1B4D2F0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1B4D3FC", Offset = "0x1B4D3FC", VA = "0x1B4D3FC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1B4D4DC", Offset = "0x1B4D4DC", VA = "0x1B4D4DC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1B4D3D0", Offset = "0x1B4D3D0", VA = "0x1B4D3D0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1B4D53C", Offset = "0x1B4D53C", VA = "0x1B4D53C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1B4D0B0", Offset = "0x1B4D0B0", VA = "0x1B4D0B0")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1B4D8A0", Offset = "0x1B4D8A0", VA = "0x1B4D8A0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200005E")]
public static class VectorUtil
{
	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x19E0388", Offset = "0x19E0388", VA = "0x19E0388")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200005F")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40001BB")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1AA1950", Offset = "0x1AA1950", VA = "0x1AA1950")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1AA1D64", Offset = "0x1AA1D64", VA = "0x1AA1D64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1AA1FF0", Offset = "0x1AA1FF0", VA = "0x1AA1FF0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1AA2158", Offset = "0x1AA2158", VA = "0x1AA2158")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1AA22C4", Offset = "0x1AA22C4", VA = "0x1AA22C4")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1AA2454", Offset = "0x1AA2454", VA = "0x1AA2454")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000060")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40001C4")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x166275C", Offset = "0x166275C", VA = "0x166275C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x16627B0", Offset = "0x16627B0", VA = "0x16627B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x16627B4", Offset = "0x16627B4", VA = "0x16627B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x16627B8", Offset = "0x16627B8", VA = "0x16627B8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1662A2C", Offset = "0x1662A2C", VA = "0x1662A2C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1662C5C", Offset = "0x1662C5C", VA = "0x1662C5C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000061")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1673B78", Offset = "0x1673B78", VA = "0x1673B78")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1674094", Offset = "0x1674094", VA = "0x1674094")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1674154", Offset = "0x1674154", VA = "0x1674154")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x16743D4", Offset = "0x16743D4", VA = "0x16743D4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x16744B4", Offset = "0x16744B4", VA = "0x16744B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1674598", Offset = "0x1674598", VA = "0x1674598")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x167460C", Offset = "0x167460C", VA = "0x167460C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1674614", Offset = "0x1674614", VA = "0x1674614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE50C", Offset = "0x8FE50C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1674678", Offset = "0x1674678", VA = "0x1674678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE51C", Offset = "0x8FE51C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x16746DC", Offset = "0x16746DC", VA = "0x16746DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE52C", Offset = "0x8FE52C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1674740", Offset = "0x1674740", VA = "0x1674740")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FE53C", Offset = "0x8FE53C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000062")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1A99670", Offset = "0x1A99670", VA = "0x1A99670")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000063")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x18958F0", Offset = "0x18958F0", VA = "0x18958F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1895994", Offset = "0x1895994", VA = "0x1895994")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1895A80", Offset = "0x1895A80", VA = "0x1895A80")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1895AE0", Offset = "0x1895AE0", VA = "0x1895AE0")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000064")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1876614", Offset = "0x1876614", VA = "0x1876614")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000065")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC54C", Offset = "0x8EC54C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0x15F5C2C", Offset = "0x15F5C2C", VA = "0x15F5C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0x15F5C74", Offset = "0x15F5C74", VA = "0x15F5C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x15F5AB0", Offset = "0x15F5AB0", VA = "0x15F5AB0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x15F5ADC", Offset = "0x15F5ADC", VA = "0x15F5ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x15F5AE0", Offset = "0x15F5AE0", VA = "0x15F5AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x15F5C34", Offset = "0x15F5C34", VA = "0x15F5C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x19472BC", Offset = "0x19472BC", VA = "0x19472BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x19473D8", Offset = "0x19473D8", VA = "0x19473D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1947360", Offset = "0x1947360", VA = "0x1947360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE54C", Offset = "0x8FE54C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1947584", Offset = "0x1947584", VA = "0x1947584")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000067")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1C6C", Offset = "0x8F1C6C")]
	public int SubdivisionsU;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1C88", Offset = "0x8F1C88")]
	public int SubdivisionsV;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1A28C10", Offset = "0x1A28C10", VA = "0x1A28C10")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1A29658", Offset = "0x1A29658", VA = "0x1A29658")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000068")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700003D")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1B21EEC", Offset = "0x1B21EEC", VA = "0x1B21EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1B21F40", Offset = "0x1B21F40", VA = "0x1B21F40")]
	public void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1B22368", Offset = "0x1B22368", VA = "0x1B22368")]
	public void Update()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1B22454", Offset = "0x1B22454", VA = "0x1B22454")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8FE5FC", Offset = "0x8FE5FC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001ED")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001EF")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001F0")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001F1")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001F2")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001F3")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001F4")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1B224B8", Offset = "0x1B224B8", VA = "0x1B224B8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1B224F4", Offset = "0x1B224F4", VA = "0x1B224F4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1B22564", Offset = "0x1B22564", VA = "0x1B22564")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1B226D4", Offset = "0x1B226D4", VA = "0x1B226D4")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1B227B0", Offset = "0x1B227B0", VA = "0x1B227B0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1B22260", Offset = "0x1B22260", VA = "0x1B22260")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1B22878", Offset = "0x1B22878", VA = "0x1B22878")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1B228E0", Offset = "0x1B228E0", VA = "0x1B228E0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1B229D8", Offset = "0x1B229D8", VA = "0x1B229D8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC56C", Offset = "0x8EC56C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	public enum DrawMode
	{
		[Token(Token = "0x40001F3")]
		Opaque,
		[Token(Token = "0x40001F4")]
		OpaqueWithClip,
		[Token(Token = "0x40001F5")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40001F6")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700003E")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x19BAF74", Offset = "0x19BAF74", VA = "0x19BAF74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x19BB004", Offset = "0x19BB004", VA = "0x19BB004")]
		set
		{
		}
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x19B99F0", Offset = "0x19B99F0", VA = "0x19B99F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x19BA5E0", Offset = "0x19BA5E0", VA = "0x19BA5E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x19BA660", Offset = "0x19BA660", VA = "0x19BA660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x19BA750", Offset = "0x19BA750", VA = "0x19BA750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x19BA840", Offset = "0x19BA840", VA = "0x19BA840", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x19BAA4C", Offset = "0x19BAA4C", VA = "0x19BAA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x19BB0D0", Offset = "0x19BB0D0", VA = "0x19BB0D0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200006B")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1AA84A8", Offset = "0x1AA84A8", VA = "0x1AA84A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1AA8690", Offset = "0x1AA8690", VA = "0x1AA8690")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1AA8818", Offset = "0x1AA8818", VA = "0x1AA8818")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1AA8820", Offset = "0x1AA8820", VA = "0x1AA8820")]
	public void Release()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1AA8808", Offset = "0x1AA8808", VA = "0x1AA8808")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1AA8828", Offset = "0x1AA8828", VA = "0x1AA8828")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200006C")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC5CC", Offset = "0x8EC5CC")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x1767E7C", Offset = "0x1767E7C", VA = "0x1767E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021A")]
			[Address(RVA = "0x1767EC4", Offset = "0x1767EC4", VA = "0x1767EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1767D4C", Offset = "0x1767D4C", VA = "0x1767D4C")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1767D78", Offset = "0x1767D78", VA = "0x1767D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1767D7C", Offset = "0x1767D7C", VA = "0x1767D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1767E84", Offset = "0x1767E84", VA = "0x1767E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC5DC", Offset = "0x8EC5DC")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x1768084", Offset = "0x1768084", VA = "0x1768084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0x17680CC", Offset = "0x17680CC", VA = "0x17680CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1767ECC", Offset = "0x1767ECC", VA = "0x1767ECC")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1767EF8", Offset = "0x1767EF8", VA = "0x1767EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1767EFC", Offset = "0x1767EFC", VA = "0x1767EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x176808C", Offset = "0x176808C", VA = "0x176808C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x177CD30", Offset = "0x177CD30", VA = "0x177CD30")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x177D004", Offset = "0x177D004", VA = "0x177D004")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x177D060", Offset = "0x177D060", VA = "0x177D060")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x177D1E0", Offset = "0x177D1E0", VA = "0x177D1E0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x177D2B4", Offset = "0x177D2B4", VA = "0x177D2B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE634", Offset = "0x8FE634")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x177D11C", Offset = "0x177D11C", VA = "0x177D11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE694", Offset = "0x8FE694")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x177D350", Offset = "0x177D350", VA = "0x177D350")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200006F")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000221")]
	[Address(RVA = "0x17428A0", Offset = "0x17428A0", VA = "0x17428A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1742900", Offset = "0x1742900", VA = "0x1742900")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000070")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x189EFBC", Offset = "0x189EFBC", VA = "0x189EFBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x189F0F0", Offset = "0x189F0F0", VA = "0x189F0F0")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x189F184", Offset = "0x189F184", VA = "0x189F184")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x189F1EC", Offset = "0x189F1EC", VA = "0x189F1EC")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000071")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC5EC", Offset = "0x8EC5EC")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0x15F3410", Offset = "0x15F3410", VA = "0x15F3410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000235")]
			[Address(RVA = "0x15F3458", Offset = "0x15F3458", VA = "0x15F3458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x15F3204", Offset = "0x15F3204", VA = "0x15F3204")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x15F3230", Offset = "0x15F3230", VA = "0x15F3230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x15F3234", Offset = "0x15F3234", VA = "0x15F3234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x15F3418", Offset = "0x15F3418", VA = "0x15F3418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x189F1F4", Offset = "0x189F1F4", VA = "0x189F1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x189F4D8", Offset = "0x189F4D8", VA = "0x189F4D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x189F828", Offset = "0x189F828", VA = "0x189F828")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x189FB84", Offset = "0x189FB84", VA = "0x189FB84")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x189FE88", Offset = "0x189FE88", VA = "0x189FE88")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x189FF7C", Offset = "0x189FF7C", VA = "0x189FF7C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x18A0148", Offset = "0x18A0148", VA = "0x18A0148")]
	public void Release()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x18A0094", Offset = "0x18A0094", VA = "0x18A0094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE794", Offset = "0x8FE794")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x18A0230", Offset = "0x18A0230", VA = "0x18A0230")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000073")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public enum ManipulationType
	{
		[Token(Token = "0x400022B")]
		Default,
		[Token(Token = "0x400022C")]
		ForcedHand,
		[Token(Token = "0x400022D")]
		DollyHand,
		[Token(Token = "0x400022E")]
		DollyAttached,
		[Token(Token = "0x400022F")]
		HorizontalScaled,
		[Token(Token = "0x4000230")]
		VerticalScaled,
		[Token(Token = "0x4000231")]
		Menu
	}

	[Token(Token = "0x2000075")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000076")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000077")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8F1D14", Offset = "0x8F1D14")]
	public string ObjectName;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8F1D24", Offset = "0x8F1D24")]
	public string ObjectInstructions;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x193BECC", Offset = "0x193BECC", VA = "0x193BECC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x193BF28", Offset = "0x193BF28", VA = "0x193BF28")]
	public void Release()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x193BF3C", Offset = "0x193BF3C", VA = "0x193BF3C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x193BF50", Offset = "0x193BF50", VA = "0x193BF50")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000078")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1D44", Offset = "0x8F1D44")]
	public int radialDivisions;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1D7C", Offset = "0x8F1D7C")]
	public float borderSize;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1DB4", Offset = "0x8F1DB4")]
	public float fingerTaper;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1DEC", Offset = "0x8F1DEC")]
	public float fingerTipLength;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1E24", Offset = "0x8F1E24")]
	public float webOffset;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1942CA4", Offset = "0x1942CA4", VA = "0x1942CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1942EA4", Offset = "0x1942EA4", VA = "0x1942EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x19430B0", Offset = "0x19430B0", VA = "0x19430B0")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1943734", Offset = "0x1943734", VA = "0x1943734")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1943D64", Offset = "0x1943D64", VA = "0x1943D64")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x19463E0", Offset = "0x19463E0", VA = "0x19463E0")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x194649C", Offset = "0x194649C", VA = "0x194649C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000079")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x19464C0", Offset = "0x19464C0", VA = "0x19464C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x19467F8", Offset = "0x19467F8", VA = "0x19467F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1946568", Offset = "0x1946568", VA = "0x1946568")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1946BE8", Offset = "0x1946BE8", VA = "0x1946BE8")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x19470D8", Offset = "0x19470D8", VA = "0x19470D8")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x200007A")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC5FC", Offset = "0x8EC5FC")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0x16B9E48", Offset = "0x16B9E48", VA = "0x16B9E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0x16B9E90", Offset = "0x16B9E90", VA = "0x16B9E90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x16B9B78", Offset = "0x16B9B78", VA = "0x16B9B78")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x16B9BA4", Offset = "0x16B9BA4", VA = "0x16B9BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x16B9BA8", Offset = "0x16B9BA8", VA = "0x16B9BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x16B9E50", Offset = "0x16B9E50", VA = "0x16B9E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1599C08", Offset = "0x1599C08", VA = "0x1599C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1599E40", Offset = "0x1599E40", VA = "0x1599E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x159AA90", Offset = "0x159AA90", VA = "0x159AA90")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x159B698", Offset = "0x159B698", VA = "0x159B698")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1599DC8", Offset = "0x1599DC8", VA = "0x1599DC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE844", Offset = "0x8FE844")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x159A0AC", Offset = "0x159A0AC", VA = "0x159A0AC")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x159AD54", Offset = "0x159AD54", VA = "0x159AD54")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x159B95C", Offset = "0x159B95C", VA = "0x159B95C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x159B9E8", Offset = "0x159B9E8", VA = "0x159B9E8")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x159BA18", Offset = "0x159BA18", VA = "0x159BA18")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x159B824", Offset = "0x159B824", VA = "0x159B824")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x159BB3C", Offset = "0x159BB3C", VA = "0x159BB3C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200007C")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x15A25CC", Offset = "0x15A25CC", VA = "0x15A25CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x15A2764", Offset = "0x15A2764", VA = "0x15A2764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x15A282C", Offset = "0x15A282C", VA = "0x15A282C")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200007D")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200007E")]
	public enum BrushState
	{
		[Token(Token = "0x400026E")]
		Idle,
		[Token(Token = "0x400026F")]
		Inking
	}

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x15A61EC", Offset = "0x15A61EC", VA = "0x15A61EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x15A61F4", Offset = "0x15A61F4", VA = "0x15A61F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x15A64DC", Offset = "0x15A64DC", VA = "0x15A64DC")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x15A66D4", Offset = "0x15A66D4", VA = "0x15A66D4")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x15A687C", Offset = "0x15A687C", VA = "0x15A687C")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x15A63E8", Offset = "0x15A63E8", VA = "0x15A63E8")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x15A6958", Offset = "0x15A6958", VA = "0x15A6958")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200007F")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x15A69F0", Offset = "0x15A69F0", VA = "0x15A69F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x15A6B88", Offset = "0x15A6B88", VA = "0x15A6B88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x15A6CF0", Offset = "0x15A6CF0", VA = "0x15A6CF0")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000080")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x15A6D04", Offset = "0x15A6D04", VA = "0x15A6D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x15A6F18", Offset = "0x15A6F18", VA = "0x15A6F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x15A70E8", Offset = "0x15A70E8", VA = "0x15A70E8")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000081")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC60C", Offset = "0x8EC60C")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x16BABA8", Offset = "0x16BABA8", VA = "0x16BABA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0x16BABF0", Offset = "0x16BABF0", VA = "0x16BABF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x16BA9F4", Offset = "0x16BA9F4", VA = "0x16BA9F4")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x16BAA20", Offset = "0x16BAA20", VA = "0x16BAA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x16BAA24", Offset = "0x16BAA24", VA = "0x16BAA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x16BABB0", Offset = "0x16BABB0", VA = "0x16BABB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC61C", Offset = "0x8EC61C")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x16BADEC", Offset = "0x16BADEC", VA = "0x16BADEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0x16BAE34", Offset = "0x16BAE34", VA = "0x16BAE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x16BABF8", Offset = "0x16BABF8", VA = "0x16BABF8")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x16BAC24", Offset = "0x16BAC24", VA = "0x16BAC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x16BAC28", Offset = "0x16BAC28", VA = "0x16BAC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x16BADF4", Offset = "0x16BADF4", VA = "0x16BADF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEngine.CanvasGroup mainCanvas;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x15A70F0", Offset = "0x15A70F0", VA = "0x15A70F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x15A743C", Offset = "0x15A743C", VA = "0x15A743C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x15A7694", Offset = "0x15A7694", VA = "0x15A7694")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x15A7818", Offset = "0x15A7818", VA = "0x15A7818")]
	public void Release()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x15A7790", Offset = "0x15A7790", VA = "0x15A7790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE8F4", Offset = "0x8FE8F4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x15A7908", Offset = "0x15A7908", VA = "0x15A7908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FE954", Offset = "0x8FE954")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x15A7990", Offset = "0x15A7990", VA = "0x15A7990")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x15A79B0", Offset = "0x15A79B0", VA = "0x15A79B0")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x15A79D0", Offset = "0x15A79D0", VA = "0x15A79D0")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x15A73C0", Offset = "0x15A73C0", VA = "0x15A73C0")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x15A7A34", Offset = "0x15A7A34", VA = "0x15A7A34")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x15A7A40", Offset = "0x15A7A40", VA = "0x15A7A40")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x15A7454", Offset = "0x15A7454", VA = "0x15A7454")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x15A7A4C", Offset = "0x15A7A4C", VA = "0x15A7A4C")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000084")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x15A7A90", Offset = "0x15A7A90", VA = "0x15A7A90")]
	private void Start()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x15A7B50", Offset = "0x15A7B50", VA = "0x15A7B50")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000085")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x18953C0", Offset = "0x18953C0", VA = "0x18953C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1895604", Offset = "0x1895604", VA = "0x1895604")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x189565C", Offset = "0x189565C", VA = "0x189565C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x18956A8", Offset = "0x18956A8", VA = "0x18956A8")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000086")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x15B7B8C", Offset = "0x15B7B8C", VA = "0x15B7B8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x15B7C04", Offset = "0x15B7C04", VA = "0x15B7C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x15B7F28", Offset = "0x15B7F28", VA = "0x15B7F28")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000087")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x15B9790", Offset = "0x15B9790", VA = "0x15B9790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x15B9C18", Offset = "0x15B9C18", VA = "0x15B9C18")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000088")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC62C", Offset = "0x8EC62C")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A4")]
			[Address(RVA = "0x1767CFC", Offset = "0x1767CFC", VA = "0x1767CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A6")]
			[Address(RVA = "0x1767D44", Offset = "0x1767D44", VA = "0x1767D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1767BD0", Offset = "0x1767BD0", VA = "0x1767BD0")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1767BFC", Offset = "0x1767BFC", VA = "0x1767BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x1767C00", Offset = "0x1767C00", VA = "0x1767C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x1767D04", Offset = "0x1767D04", VA = "0x1767D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x177C3F8", Offset = "0x177C3F8", VA = "0x177C3F8")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x177C41C", Offset = "0x177C41C", VA = "0x177C41C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x177C53C", Offset = "0x177C53C", VA = "0x177C53C")]
	private void Update()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x177C5F0", Offset = "0x177C5F0", VA = "0x177C5F0")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x177C81C", Offset = "0x177C81C", VA = "0x177C81C")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x177C8D4", Offset = "0x177C8D4", VA = "0x177C8D4")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x177C794", Offset = "0x177C794", VA = "0x177C794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FEA54", Offset = "0x8FEA54")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x177C9F4", Offset = "0x177C9F4", VA = "0x177C9F4")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x200008A")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x177CA0C", Offset = "0x177CA0C", VA = "0x177CA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x177CD28", Offset = "0x177CD28", VA = "0x177CD28")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x200008B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8EC63C", Offset = "0x8EC63C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC63C", Offset = "0x8EC63C")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F1EFC", Offset = "0x8F1EFC")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x18AFD74", Offset = "0x18AFD74", VA = "0x18AFD74")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x18AFFA8", Offset = "0x18AFFA8", VA = "0x18AFFA8")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x18B0408", Offset = "0x18B0408", VA = "0x18B0408")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x18AFE10", Offset = "0x18AFE10", VA = "0x18AFE10")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x18B0608", Offset = "0x18B0608", VA = "0x18B0608")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x18B06FC", Offset = "0x18B06FC", VA = "0x18B06FC")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x200008C")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC6B0", Offset = "0x8EC6B0")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0x16B56EC", Offset = "0x16B56EC", VA = "0x16B56EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x16B5734", Offset = "0x16B5734", VA = "0x16B5734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x16B55B8", Offset = "0x16B55B8", VA = "0x16B55B8")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x16B55E4", Offset = "0x16B55E4", VA = "0x16B55E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x16B55E8", Offset = "0x16B55E8", VA = "0x16B55E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x16B56F4", Offset = "0x16B56F4", VA = "0x16B56F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1B4E758", Offset = "0x1B4E758", VA = "0x1B4E758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FEB04", Offset = "0x8FEB04")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1B4E7D0", Offset = "0x1B4E7D0", VA = "0x1B4E7D0", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1B4E7FC", Offset = "0x1B4E7FC", VA = "0x1B4E7FC", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1B4E870", Offset = "0x1B4E870", VA = "0x1B4E870")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC6C0", Offset = "0x8EC6C0")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x15A6CF8", Offset = "0x15A6CF8", VA = "0x15A6CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x15A6CFC", Offset = "0x15A6CFC", VA = "0x15A6CFC")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x200008F")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x188B0BC", Offset = "0x188B0BC", VA = "0x188B0BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x188B140", Offset = "0x188B140", VA = "0x188B140")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x188B1D0", Offset = "0x188B1D0", VA = "0x188B1D0")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000090")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000091")]
	public enum Method
	{
		[Token(Token = "0x40002CB")]
		Adapt,
		[Token(Token = "0x40002CC")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40002CD")]
		Scale,
		[Token(Token = "0x40002CE")]
		None
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8F1F34", Offset = "0x8F1F34")]
	public Method ScalingX;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1F48", Offset = "0x8F1F48")]
	public float PaddingX;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1F60", Offset = "0x8F1F60")]
	public float PaddingXMax;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8F1F78", Offset = "0x8F1F78")]
	public Method ScalingY;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1F8C", Offset = "0x8F1F8C")]
	public float PaddingY;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1FA4", Offset = "0x8F1FA4")]
	public float PaddingYMax;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8F1FBC", Offset = "0x8F1FBC")]
	public Method ScalingZ;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1FD0", Offset = "0x8F1FD0")]
	public float PaddingZ;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F1FE8", Offset = "0x8F1FE8")]
	public float PaddingZMax;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2000", Offset = "0x8F2000")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2010", Offset = "0x8F2010")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2020", Offset = "0x8F2020")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700004F")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x15BE5EC", Offset = "0x15BE5EC", VA = "0x15BE5EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000050")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x15BE608", Offset = "0x15BE608", VA = "0x15BE608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEBB4", Offset = "0x8FEBB4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x15BE614", Offset = "0x15BE614", VA = "0x15BE614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEBC4", Offset = "0x8FEBC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x15BE620", Offset = "0x15BE620", VA = "0x15BE620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEBD4", Offset = "0x8FEBD4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x15BE62C", Offset = "0x15BE62C", VA = "0x15BE62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEBE4", Offset = "0x8FEBE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public Mesh Mesh
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x15BE638", Offset = "0x15BE638", VA = "0x15BE638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEBF4", Offset = "0x8FEBF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x15BE640", Offset = "0x15BE640", VA = "0x15BE640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC04", Offset = "0x8FEC04")]
		private set
		{
		}
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x15BE648", Offset = "0x15BE648", VA = "0x15BE648")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x15BE790", Offset = "0x15BE790", VA = "0x15BE790")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000092")]
public class SimpleResizer
{
	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x15BE798", Offset = "0x15BE798", VA = "0x15BE798")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x15BEAA4", Offset = "0x15BEAA4", VA = "0x15BEAA4")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x15BED3C", Offset = "0x15BED3C", VA = "0x15BED3C")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x15BEE18", Offset = "0x15BEE18", VA = "0x15BEE18")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000093")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x18711D8", Offset = "0x18711D8", VA = "0x18711D8", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x18711DC", Offset = "0x18711DC", VA = "0x18711DC", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1871640", Offset = "0x1871640", VA = "0x1871640")]
	public Spawnable()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x187134C", Offset = "0x187134C", VA = "0x187134C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC14", Offset = "0x8FEC14")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC730", Offset = "0x8EC730")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000095")]
	public enum GeometryType
	{
		[Token(Token = "0x40002D6")]
		Plane,
		[Token(Token = "0x40002D7")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000096")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x19E7778", Offset = "0x19E7778", VA = "0x19E7778")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x19E7B84", Offset = "0x19E7B84", VA = "0x19E7B84")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x19E8428", Offset = "0x19E8428", VA = "0x19E8428")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x19E832C", Offset = "0x19E832C", VA = "0x19E832C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x19E84AC", Offset = "0x19E84AC", VA = "0x19E84AC")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC790", Offset = "0x8EC790")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC7F0", Offset = "0x8EC7F0")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x176397C", Offset = "0x176397C", VA = "0x176397C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E9")]
			[Address(RVA = "0x17639C4", Offset = "0x17639C4", VA = "0x17639C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x17637B8", Offset = "0x17637B8", VA = "0x17637B8")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x17637E4", Offset = "0x17637E4", VA = "0x17637E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x17637E8", Offset = "0x17637E8", VA = "0x17637E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1763984", Offset = "0x1763984", VA = "0x1763984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2050", Offset = "0x8F2050")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F209C", Offset = "0x8F209C")]
	private Transform _pivot;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F20E8", Offset = "0x8F20E8")]
	private GameObject _anchorMenu;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2134", Offset = "0x8F2134")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2180", Offset = "0x8F2180")]
	private GameObject _saveIcon;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F21CC", Offset = "0x8F21CC")]
	private Image _labelImage;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2218", Offset = "0x8F2218")]
	private Color _labelBaseColor;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2264", Offset = "0x8F2264")]
	[SerializeField]
	private Color _labelHighlightColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F22B0", Offset = "0x8F22B0")]
	private Color _labelSelectedColor;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F22FC", Offset = "0x8F22FC")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2348", Offset = "0x8F2348")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2394", Offset = "0x8F2394")]
	private List<Button> _buttonList;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000053")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1A99D50", Offset = "0x1A99D50", VA = "0x1A99D50")]
		set
		{
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1A99678", Offset = "0x1A99678", VA = "0x1A99678")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1A997F0", Offset = "0x1A997F0", VA = "0x1A997F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FEC24", Offset = "0x8FEC24")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1A99868", Offset = "0x1A99868", VA = "0x1A99868")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1A99AE8", Offset = "0x1A99AE8", VA = "0x1A99AE8")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1A99BE0", Offset = "0x1A99BE0", VA = "0x1A99BE0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1A99C58", Offset = "0x1A99C58", VA = "0x1A99C58")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1A99D70", Offset = "0x1A99D70", VA = "0x1A99D70")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1A99E78", Offset = "0x1A99E78", VA = "0x1A99E78")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1A99F98", Offset = "0x1A99F98", VA = "0x1A99F98")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1A998C4", Offset = "0x1A998C4", VA = "0x1A998C4")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1A999D8", Offset = "0x1A999D8", VA = "0x1A999D8")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1A9A06C", Offset = "0x1A9A06C", VA = "0x1A9A06C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1A9A1C4", Offset = "0x1A9A1C4", VA = "0x1A9A1C4")]
	public Anchor()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1A9A1CC", Offset = "0x1A9A1CC", VA = "0x1A9A1CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC84", Offset = "0x8FEC84")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1A9A2F4", Offset = "0x1A9A2F4", VA = "0x1A9A2F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEC94", Offset = "0x8FEC94")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC800", Offset = "0x8EC800")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000303")]
		Create,
		[Token(Token = "0x4000304")]
		Select
	}

	[Token(Token = "0x200009B")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F23E0", Offset = "0x8F23E0")]
	private GameObject _createModeButton;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F242C", Offset = "0x8F242C")]
	private GameObject _selectModeButton;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2478", Offset = "0x8F2478")]
	private Transform _trackedDevice;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F24C4", Offset = "0x8F24C4")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F2510", Offset = "0x8F2510")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F256C", Offset = "0x8F256C")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F25B8", Offset = "0x8F25B8")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000056")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x1A9A31C", Offset = "0x1A9A31C", VA = "0x1A9A31C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1A9A324", Offset = "0x1A9A324", VA = "0x1A9A324")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1A9A3FC", Offset = "0x1A9A3FC", VA = "0x1A9A3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1A9A568", Offset = "0x1A9A568", VA = "0x1A9A568")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1A9A9BC", Offset = "0x1A9A9BC", VA = "0x1A9A9BC")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1A9AA2C", Offset = "0x1A9AA2C", VA = "0x1A9AA2C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1A9A4F0", Offset = "0x1A9A4F0", VA = "0x1A9A4F0")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1A9AAB4", Offset = "0x1A9AAB4", VA = "0x1A9AAB4")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1A9AB3C", Offset = "0x1A9AB3C", VA = "0x1A9AB3C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1A9AB68", Offset = "0x1A9AB68", VA = "0x1A9AB68")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1A9AA88", Offset = "0x1A9AA88", VA = "0x1A9AA88")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1A9A8AC", Offset = "0x1A9A8AC", VA = "0x1A9A8AC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1A9ACA4", Offset = "0x1A9ACA4", VA = "0x1A9ACA4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1A9ABF0", Offset = "0x1A9ABF0", VA = "0x1A9ABF0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1A9AC10", Offset = "0x1A9AC10", VA = "0x1A9AC10")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1A9ADBC", Offset = "0x1A9ADBC", VA = "0x1A9ADBC")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1A9AC30", Offset = "0x1A9AC30", VA = "0x1A9AC30")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1A9AC6C", Offset = "0x1A9AC6C", VA = "0x1A9AC6C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1A9A674", Offset = "0x1A9A674", VA = "0x1A9A674")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1A9AEB4", Offset = "0x1A9AEB4", VA = "0x1A9AEB4")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1A9AEE8", Offset = "0x1A9AEE8", VA = "0x1A9AEE8")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1A9AF84", Offset = "0x1A9AF84", VA = "0x1A9AF84")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1A9B100", Offset = "0x1A9B100", VA = "0x1A9B100")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200009C")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1870910", Offset = "0x1870910", VA = "0x1870910")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1870CC0", Offset = "0x1870CC0", VA = "0x1870CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1870BC8", Offset = "0x1870BC8", VA = "0x1870BC8")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1870D54", Offset = "0x1870D54", VA = "0x1870D54")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1870B38", Offset = "0x1870B38", VA = "0x1870B38")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1870F08", Offset = "0x1870F08", VA = "0x1870F08")]
	public SpatialAnchorLoader()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1870F10", Offset = "0x1870F10", VA = "0x1870F10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FECF4", Offset = "0x8FECF4")]
	private void <Load>b__4_0(OVRSpatialAnchor.UnboundAnchor[] anchors)
	{
	}
}
[Token(Token = "0x200009D")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC860", Offset = "0x8EC860")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x158D910", Offset = "0x158D910", VA = "0x158D910")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x158D918", Offset = "0x158D918", VA = "0x158D918")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x187661C", Offset = "0x187661C", VA = "0x187661C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1876838", Offset = "0x1876838", VA = "0x1876838")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1876948", Offset = "0x1876948", VA = "0x1876948")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009F")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2614", Offset = "0x8F2614")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1B216C4", Offset = "0x1B216C4", VA = "0x1B216C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1B216EC", Offset = "0x1B216EC", VA = "0x1B216EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1B21854", Offset = "0x1B21854", VA = "0x1B21854")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x20000A0")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2660", Offset = "0x8F2660")]
	[SerializeField]
	private float m_fixedTimeStep;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F26AC", Offset = "0x8F26AC")]
	[SerializeField]
	private float m_gravityScalar;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x15B7F30", Offset = "0x15B7F30", VA = "0x15B7F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x15B7F94", Offset = "0x15B7F94", VA = "0x15B7F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x15B7F9C", Offset = "0x15B7F9C", VA = "0x15B7F9C")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x15B8074", Offset = "0x15B8074", VA = "0x15B8074")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x20000A1")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x4000312")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x4000313")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2708", Offset = "0x8F2708")]
	private Transform m_trackingSpace;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2754", Offset = "0x8F2754")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x187DC58", Offset = "0x187DC58", VA = "0x187DC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x187DEF0", Offset = "0x187DEF0", VA = "0x187DEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x187E334", Offset = "0x187E334", VA = "0x187E334")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x187E46C", Offset = "0x187E46C", VA = "0x187E46C")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F27B0", Offset = "0x8F27B0")]
	[SerializeField]
	private float m_minExtent;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F280C", Offset = "0x8F280C")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x15DA27C", Offset = "0x15DA27C", VA = "0x15DA27C")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x15DA284", Offset = "0x15DA284", VA = "0x15DA284")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x15DA2A8", Offset = "0x15DA2A8", VA = "0x15DA2A8")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x15DA3B8", Offset = "0x15DA3B8", VA = "0x15DA3B8")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x20000A3")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2878", Offset = "0x8F2878")]
	private Vector2 m_xExtent;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F28D4", Offset = "0x8F28D4")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x15DA3C8", Offset = "0x15DA3C8", VA = "0x15DA3C8")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x15DA3D4", Offset = "0x15DA3D4", VA = "0x15DA3D4")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x15DA3F8", Offset = "0x15DA3F8", VA = "0x15DA3F8")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x15DA7D8", Offset = "0x15DA7D8", VA = "0x15DA7D8")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x20000A4")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2940", Offset = "0x8F2940")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x15DA7EC", Offset = "0x15DA7EC", VA = "0x15DA7EC")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x15DA810", Offset = "0x15DA810", VA = "0x15DA810")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x15DA830", Offset = "0x15DA830", VA = "0x15DA830")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x20000A5")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F299C", Offset = "0x8F299C")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F29E8", Offset = "0x8F29E8")]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2AB4", Offset = "0x8F2AB4")]
	[SerializeField]
	private UiBoolInspector m_ax;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x15DA838", Offset = "0x15DA838", VA = "0x15DA838")]
	private void Start()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x15DA860", Offset = "0x15DA860", VA = "0x15DA860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x15DADF0", Offset = "0x15DADF0", VA = "0x15DADF0")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x15DAE34", Offset = "0x15DAE34", VA = "0x15DAE34")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x15DAEB4", Offset = "0x15DAEB4", VA = "0x15DAEB4")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x20000A6")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2B50", Offset = "0x8F2B50")]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x15DAEC4", Offset = "0x15DAEC4", VA = "0x15DAEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x15DB1C0", Offset = "0x15DB1C0", VA = "0x15DB1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x15DB2EC", Offset = "0x15DB2EC", VA = "0x15DB2EC")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x15DB3A4", Offset = "0x15DB3A4", VA = "0x15DB3A4")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x15DB3F8", Offset = "0x15DB3F8", VA = "0x15DB3F8")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x15DB4A0", Offset = "0x15DB4A0", VA = "0x15DB4A0")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x15DB404", Offset = "0x15DB404", VA = "0x15DB404")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x15DB4AC", Offset = "0x15DB4AC", VA = "0x15DB4AC")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x15DB548", Offset = "0x15DB548", VA = "0x15DB548")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x15DB340", Offset = "0x15DB340", VA = "0x15DB340")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x15DAF84", Offset = "0x15DAF84", VA = "0x15DAF84")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x15DB5B4", Offset = "0x15DB5B4", VA = "0x15DB5B4")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x20000A7")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2BAC", Offset = "0x8F2BAC")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x15DB5BC", Offset = "0x15DB5BC", VA = "0x15DB5BC")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x15DB5E0", Offset = "0x15DB5E0", VA = "0x15DB5E0")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x15DB68C", Offset = "0x15DB68C", VA = "0x15DB68C")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x20000A8")]
public class Bin : StaticMapped<Bin>
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation m_anim;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip m_openAnim;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip m_closeAnim;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_deleteAnimDuration;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_endLoc;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_heightLoc;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> m_canBin;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_binSFX;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform holder;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRInteractableItem m_examining;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isDeleting;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1779984", Offset = "0x1779984", VA = "0x1779984")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FED04", Offset = "0x8FED04")]
	public static void EnableBinFolk()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1779B24", Offset = "0x1779B24", VA = "0x1779B24", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1779B80", Offset = "0x1779B80", VA = "0x1779B80")]
	private void Start()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1779CE8", Offset = "0x1779CE8", VA = "0x1779CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1779F20", Offset = "0x1779F20", VA = "0x1779F20")]
	private void DeleteTheThing(NVRInteractableItem thing, [Optional] Action<NVRInteractableItem> callback)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x177A190", Offset = "0x177A190", VA = "0x177A190")]
	private void ResetAfterDelete(NVRInteractableItem thing)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x177A2AC", Offset = "0x177A2AC", VA = "0x177A2AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x177A530", Offset = "0x177A530", VA = "0x177A530")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x177A6A0", Offset = "0x177A6A0", VA = "0x177A6A0")]
	public Bin()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ActivityItem : StaticMapped<ActivityItem>
{
	[Token(Token = "0x20000AA")]
	public delegate void VoidDelegate();

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_emoji;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_happinessAwarded;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_areaOfEffect;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_startLocator;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2C08", Offset = "0x8F2C08")]
	private bool <m_inUse>k__BackingField;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Interest m_interest;

	[Token(Token = "0x17000057")]
	public float AreaOfEffectSq
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1A02748", Offset = "0x1A02748", VA = "0x1A02748")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000058")]
	public bool m_inUse
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1A02754", Offset = "0x1A02754", VA = "0x1A02754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FED4C", Offset = "0x8FED4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1A0275C", Offset = "0x1A0275C", VA = "0x1A0275C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FED5C", Offset = "0x8FED5C")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1A02768", Offset = "0x1A02768", VA = "0x1A02768", Slot = "7")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1A02840", Offset = "0x1A02840", VA = "0x1A02840", Slot = "8")]
	public virtual void BeginActivity(Person p, VoidDelegate onActivityComplete)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1A02844", Offset = "0x1A02844", VA = "0x1A02844", Slot = "9")]
	public virtual void Cancel()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1A02848", Offset = "0x1A02848", VA = "0x1A02848")]
	public bool IsAppealing(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1A02A00", Offset = "0x1A02A00", VA = "0x1A02A00")]
	public ActivityItem()
	{
	}
}
[Token(Token = "0x20000AB")]
public class ActivityItemGoWaitReturn : ActivityItem
{
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC870", Offset = "0x8EC870")]
	private sealed class <DoActivity>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivityItemGoWaitReturn <>4__this;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person folk;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VoidDelegate onActivityComplete;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <waitPos>5__4;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion <waitRot>5__5;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <d>5__6;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FolkAnimationController <fac>5__7;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float <t>5__8;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion <endRot>5__9;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000358")]
			[Address(RVA = "0x175B39C", Offset = "0x175B39C", VA = "0x175B39C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0x175B3E4", Offset = "0x175B3E4", VA = "0x175B3E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x175ACCC", Offset = "0x175ACCC", VA = "0x175ACCC")]
		[DebuggerHidden]
		public <DoActivity>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x175ACF8", Offset = "0x175ACF8", VA = "0x175ACF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x175ACFC", Offset = "0x175ACFC", VA = "0x175ACFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x175B3A4", Offset = "0x175B3A4", VA = "0x175B3A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2C18", Offset = "0x8F2C18")]
	public float m_goDuration;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2C50", Offset = "0x8F2C50")]
	public string m_animName;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_waitLocator;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FloatRange m_waitDuration;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent m_onWaitStart;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent m_onWaitEnd;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2C88", Offset = "0x8F2C88")]
	public bool m_turnThenReturn;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F2CC0", Offset = "0x8F2CC0")]
	public float m_turnDuration;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_returnDuration;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1A02AAC", Offset = "0x1A02AAC", VA = "0x1A02AAC", Slot = "8")]
	public override void BeginActivity(Person p, VoidDelegate onActivityComplete)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1A02AD8", Offset = "0x1A02AD8", VA = "0x1A02AD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FED6C", Offset = "0x8FED6C")]
	private IEnumerator DoActivity(Person folk, VoidDelegate onActivityComplete)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1A02B80", Offset = "0x1A02B80", VA = "0x1A02B80", Slot = "9")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1A02B88", Offset = "0x1A02B88", VA = "0x1A02B88")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1A02D44", Offset = "0x1A02D44", VA = "0x1A02D44")]
	public ActivityItemGoWaitReturn()
	{
	}
}
[Token(Token = "0x20000AD")]
public class AgentController : MonoBehaviour
{
	[Token(Token = "0x20000AE")]
	public enum RepathType
	{
		[Token(Token = "0x4000374")]
		Never,
		[Token(Token = "0x4000375")]
		IfTransformMoves
	}

	[Token(Token = "0x20000AF")]
	public enum Result
	{
		[Token(Token = "0x4000377")]
		Success,
		[Token(Token = "0x4000378")]
		Failed_TargetMoved
	}

	[Token(Token = "0x20000B0")]
	public delegate void CompletedDelegate(Result result);

	[Token(Token = "0x20000B1")]
	public enum GoRule
	{
		[Token(Token = "0x400037A")]
		GoToExactPoint,
		[Token(Token = "0x400037B")]
		GetAsCloseAsPossible
	}

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2CF8", Offset = "0x8F2CF8")]
	private bool <m_hasDestination>k__BackingField;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RepathType m_shouldRepath;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_targetTransform;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_targetPosition;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshAgent m_agent;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_defaultSpeed;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentLinkMover m_linkMover;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CompletedDelegate OnReachedDestination;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_arrivalEpsilon;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_repathEpsilon;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Debug_Target;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private NavMeshPath m_testPath;

	[Token(Token = "0x1700005B")]
	public bool m_hasDestination
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1A03054", Offset = "0x1A03054", VA = "0x1A03054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEE1C", Offset = "0x8FEE1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1A0305C", Offset = "0x1A0305C", VA = "0x1A0305C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEE2C", Offset = "0x8FEE2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Transform Target
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x1A03068", Offset = "0x1A03068", VA = "0x1A03068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public bool IsAgentEnabled
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1A03070", Offset = "0x1A03070", VA = "0x1A03070")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public bool IsOnNavMesh
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x1A0308C", Offset = "0x1A0308C", VA = "0x1A0308C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool IsOnNavMeshLink
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1A030A8", Offset = "0x1A030A8", VA = "0x1A030A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public bool HasPath
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1A030C4", Offset = "0x1A030C4", VA = "0x1A030C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1A030E0", Offset = "0x1A030E0", VA = "0x1A030E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1A03184", Offset = "0x1A03184", VA = "0x1A03184")]
	public void SetAgentEnabled(bool b)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1A03380", Offset = "0x1A03380", VA = "0x1A03380")]
	public void SetSpeedMultiplier(float m)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1A033A8", Offset = "0x1A033A8", VA = "0x1A033A8")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1A033B4", Offset = "0x1A033B4", VA = "0x1A033B4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1A03404", Offset = "0x1A03404", VA = "0x1A03404")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1A03454", Offset = "0x1A03454", VA = "0x1A03454")]
	public bool CanSetDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1A034C0", Offset = "0x1A034C0", VA = "0x1A034C0")]
	public bool CanGetTo(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1A034CC", Offset = "0x1A034CC", VA = "0x1A034CC")]
	public bool CanGetTo(Vector3 p, out NavMeshPath nmp, float closeEnoughDist = -1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1A03640", Offset = "0x1A03640", VA = "0x1A03640")]
	public bool GetClosestAccessiblePointOnRadius(Transform t, out Vector3 p, int sampleCount = 8)
	{
		return default(bool);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1A0381C", Offset = "0x1A0381C", VA = "0x1A0381C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FEE3C", Offset = "0x8FEE3C")]
	public void GoToRandom25()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1A03828", Offset = "0x1A03828", VA = "0x1A03828")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FEE54", Offset = "0x8FEE54")]
	public void GoToDebugTarget()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1A02E3C", Offset = "0x1A02E3C", VA = "0x1A02E3C")]
	public void GoToRandom(float maxRange, [Optional] CompletedDelegate onReachedDestination)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1A03978", Offset = "0x1A03978", VA = "0x1A03978")]
	public bool GoTo(Transform t, RepathType repath, [Optional] CompletedDelegate onReachedDestination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1A03864", Offset = "0x1A03864", VA = "0x1A03864")]
	public bool GoTo(Vector3 p, GoRule goRule, [Optional] CompletedDelegate onReachedDestination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1A02F94", Offset = "0x1A02F94", VA = "0x1A02F94")]
	public bool IsAtDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1A039E8", Offset = "0x1A039E8", VA = "0x1A039E8")]
	public bool IsWalkingOnSlope()
	{
		return default(bool);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1A03AC8", Offset = "0x1A03AC8", VA = "0x1A03AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1A03B9C", Offset = "0x1A03B9C", VA = "0x1A03B9C")]
	public void DrawPath(Color c)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1A03E0C", Offset = "0x1A03E0C", VA = "0x1A03E0C")]
	public void DrawPathIM(Color c, float width = 0.1f)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1A0401C", Offset = "0x1A0401C", VA = "0x1A0401C")]
	public void DrawPathIM(NavMeshPath nmp, Color c, float width = 0.1f, float duration = 0f)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1A04184", Offset = "0x1A04184", VA = "0x1A04184")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1A041AC", Offset = "0x1A041AC", VA = "0x1A041AC")]
	public AgentController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class AgentControlGotoRandom : ActionTask<AgentController>
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0x8F2D08", Offset = "0x8F2D08")]
	public float maxDistance;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1A02DDC", Offset = "0x1A02DDC", VA = "0x1A02DDC", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1A02F1C", Offset = "0x1A02F1C", VA = "0x1A02F1C", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1A03000", Offset = "0x1A03000", VA = "0x1A03000")]
	public AgentControlGotoRandom()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Ambience : MonoBehaviour
{
	[Token(Token = "0x20000B4")]
	private class Cell
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<(Decoration, float)> m_contributors;

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x17637B0", Offset = "0x17637B0", VA = "0x17637B0")]
		public Cell()
		{
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cell[,,] m_cells;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int m_size;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_cellSize;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 start;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1A9901C", Offset = "0x1A9901C", VA = "0x1A9901C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1A99020", Offset = "0x1A99020", VA = "0x1A99020")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FEE6C", Offset = "0x8FEE6C")]
	private void ResetBaseVars()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1A99148", Offset = "0x1A99148", VA = "0x1A99148")]
	private Vector3 CellCenter(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1A99198", Offset = "0x1A99198", VA = "0x1A99198")]
	public Ambience()
	{
	}
}
[Token(Token = "0x20000B5")]
public class Asteroid : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody m_body;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange Velocity;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrailRenderer trail;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StretchableItem stretchableItem;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxTrailVelocity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxTrailLength;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int Value;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trailStrength;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool beingProcessed;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2D18", Offset = "0x8F2D18")]
	public bool m_hasItem;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_itemPrefab;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2D50", Offset = "0x8F2D50")]
	private GameObject <m_spawnedItem>k__BackingField;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer m_glowRenderer;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_glowMatIndex;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_glowMpbField;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FloatRange m_glowAlphaRange;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_glowSpeed;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MaterialPropertyBlock m_glowMpb;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color m_glowColour;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public TrackedPool<Asteroid> myPool;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public AsteroidEmitter emitter;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 defaultScale;

	[Token(Token = "0x17000061")]
	public bool BeingProcessed
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1AA6C50", Offset = "0x1AA6C50", VA = "0x1AA6C50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public GameObject m_spawnedItem
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1AA6C58", Offset = "0x1AA6C58", VA = "0x1AA6C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEE84", Offset = "0x8FEE84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1AA6C60", Offset = "0x1AA6C60", VA = "0x1AA6C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FEE94", Offset = "0x8FEE94")]
		private set
		{
		}
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1AA6C68", Offset = "0x1AA6C68", VA = "0x1AA6C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1AA6DDC", Offset = "0x1AA6DDC", VA = "0x1AA6DDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1AA6EBC", Offset = "0x1AA6EBC", VA = "0x1AA6EBC")]
	private bool IsBeingHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1AA6F4C", Offset = "0x1AA6F4C", VA = "0x1AA6F4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1AA6FA4", Offset = "0x1AA6FA4", VA = "0x1AA6FA4")]
	public void Fire()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1AA7074", Offset = "0x1AA7074", VA = "0x1AA7074")]
	private void Update()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1AA7328", Offset = "0x1AA7328", VA = "0x1AA7328")]
	public void SetItemPrefab(GameObject prefab, bool isVisible = false)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1AA7408", Offset = "0x1AA7408", VA = "0x1AA7408")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1AA74E4", Offset = "0x1AA74E4", VA = "0x1AA74E4")]
	private void OnExploded(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1AA78D8", Offset = "0x1AA78D8", VA = "0x1AA78D8")]
	public void BeginProcessing()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1AA78E4", Offset = "0x1AA78E4", VA = "0x1AA78E4")]
	public Asteroid()
	{
	}
}
[Token(Token = "0x20000B6")]
public class AsteroidEmitter : MonoBehaviour
{
	[Token(Token = "0x20000B7")]
	public enum AsteroidSpawnType
	{
		[Token(Token = "0x40003A5")]
		Scrap,
		[Token(Token = "0x40003A6")]
		Item,
		[Token(Token = "0x40003A7")]
		LockedItem
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_asteroidPrefabs;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange AsteroidIntervalHours;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SpawnRadius;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AimRadius;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double m_nextAsteroidTime;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2D80", Offset = "0x8F2D80")]
	public List<GameObject> m_asteroidsWithItemPrefabs;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F2DB8", Offset = "0x8F2DB8")]
	public float ItemProbability;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F2DD0", Offset = "0x8F2DD0")]
	public float LockedInterestItemProbability;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedPool<Asteroid> m_asteroidPool;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedPool<Asteroid> m_itemAsteroidPool;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1AA79B8", Offset = "0x1AA79B8", VA = "0x1AA79B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1AA7A7C", Offset = "0x1AA7A7C", VA = "0x1AA7A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1AA7AFC", Offset = "0x1AA7AFC", VA = "0x1AA7AFC")]
	public void EmitNow()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1AA7B5C", Offset = "0x1AA7B5C", VA = "0x1AA7B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1AA7C10", Offset = "0x1AA7C10", VA = "0x1AA7C10")]
	private AsteroidSpawnType GetSpawnType()
	{
		return default(AsteroidSpawnType);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1AA7F4C", Offset = "0x1AA7F4C", VA = "0x1AA7F4C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FEEA4", Offset = "0x8FEEA4")]
	public void EmitNormalAsteroid()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1AA7F54", Offset = "0x1AA7F54", VA = "0x1AA7F54")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FEEEC", Offset = "0x8FEEEC")]
	public void EmitItemAsteroid()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1AA7F5C", Offset = "0x1AA7F5C", VA = "0x1AA7F5C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FEF34", Offset = "0x8FEF34")]
	public void EmitLockedItemAsteroid()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1AA7CC4", Offset = "0x1AA7CC4", VA = "0x1AA7CC4")]
	private void EmitAsteroid(AsteroidSpawnType spawnType)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1AA7F64", Offset = "0x1AA7F64", VA = "0x1AA7F64")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1AA7FE8", Offset = "0x1AA7FE8", VA = "0x1AA7FE8")]
	public AsteroidEmitter()
	{
	}
}
[Token(Token = "0x20000B8")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC880", Offset = "0x8EC880")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <listenerGO>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1764B44", Offset = "0x1764B44", VA = "0x1764B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0x1764B8C", Offset = "0x1764B8C", VA = "0x1764B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1764840", Offset = "0x1764840", VA = "0x1764840")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x176486C", Offset = "0x176486C", VA = "0x176486C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1764870", Offset = "0x1764870", VA = "0x1764870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1764B4C", Offset = "0x1764B4C", VA = "0x1764B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioController ms_instance;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_sfxVolume;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_sfxRTPC;

	[Token(Token = "0x17000063")]
	public float SFXVolume
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1AA82D8", Offset = "0x1AA82D8", VA = "0x1AA82D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1AA82E0", Offset = "0x1AA82E0", VA = "0x1AA82E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FEF7C", Offset = "0x8FEF7C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1AA8358", Offset = "0x1AA8358", VA = "0x1AA8358")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1AA83D0", Offset = "0x1AA83D0", VA = "0x1AA83D0")]
	public void SetSFXVolume(float v)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1AA8444", Offset = "0x1AA8444", VA = "0x1AA8444")]
	public AudioController()
	{
	}
}
[Token(Token = "0x20000BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EC890", Offset = "0x8EC890")]
public class AutoSetupBuildingDefaults : ScriptableObject
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2DE8", Offset = "0x8F2DE8")]
	public Vector3 m_windowLightLocalPos;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_windowLightScale;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SDFShape.Shape m_windowLightShape;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2E20", Offset = "0x8F2E20")]
	public Vector3 m_lightAttachLightLocalPos;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 m_lightAttachLightScale;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public SDFShape.Shape m_lightAttachLightShape;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1AAAE1C", Offset = "0x1AAAE1C", VA = "0x1AAAE1C")]
	public AutoSetupBuildingDefaults()
	{
	}
}
[Token(Token = "0x20000BB")]
public class Bank : MonoBehaviour
{
	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8A0", Offset = "0x8EC8A0")]
	private sealed class <PileFrom>d__30 : IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 <>2__current;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bank <>4__this;

		[Token(Token = "0x17000066")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0x1765304", Offset = "0x1765304", VA = "0x1765304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x1765350", Offset = "0x1765350", VA = "0x1765350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x176521C", Offset = "0x176521C", VA = "0x176521C")]
		[DebuggerHidden]
		public <PileFrom>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1765248", Offset = "0x1765248", VA = "0x1765248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x176524C", Offset = "0x176524C", VA = "0x176524C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1765310", Offset = "0x1765310", VA = "0x1765310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8B0", Offset = "0x8EC8B0")]
	private sealed class <SpendScrapAtLocationCR>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bank <>4__this;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer <fillInMeshRenderer>5__2;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x17662D8", Offset = "0x17662D8", VA = "0x17662D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x1766320", Offset = "0x1766320", VA = "0x1766320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x17653B8", Offset = "0x17653B8", VA = "0x17653B8")]
		[DebuggerHidden]
		public <SpendScrapAtLocationCR>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x17653E4", Offset = "0x17653E4", VA = "0x17653E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x17653E8", Offset = "0x17653E8", VA = "0x17653E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x17662E0", Offset = "0x17662E0", VA = "0x17662E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8C0", Offset = "0x8EC8C0")]
	private sealed class <DepositAndFlyToCR>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bank <>4__this;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x17651CC", Offset = "0x17651CC", VA = "0x17651CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x1765214", Offset = "0x1765214", VA = "0x1765214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1764B94", Offset = "0x1764B94", VA = "0x1764B94")]
		[DebuggerHidden]
		public <DepositAndFlyToCR>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1764BC0", Offset = "0x1764BC0", VA = "0x1764BC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1764BC4", Offset = "0x1764BC4", VA = "0x1764BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x17651D4", Offset = "0x17651D4", VA = "0x17651D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bank Instance;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_startingBalance;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Saveable]
	public float m_balance;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatWriter m_displayBalance;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_hpIncreaseSFX;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string m_hpIncreaseBigSFX;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_hpIncreaseBiggerSFX;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_tickerInterval;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_minTickerChange;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_tickerDuration;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_lastTickerTime;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_tickAmount;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_bigTickerThreshold;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_biggerTickerThreshold;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_scrapLimitLarge;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_scrapLimitMedium;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_scrapLimitSmall;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_scrapPileOffset;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_scrapBlockPrefab;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F2E68", Offset = "0x8F2E68")]
	public static bool ms_scrapFliesToHandWhenSpending;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_destroyedItemRefundFraction;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2EB0", Offset = "0x8F2EB0")]
	public FloatRange m_flyTimeWithdraw;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_flyRadiusWithdraw;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FloatRange m_flyTimeDeposit;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_flyRadiusDeposit;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_scrapPopVFX;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2EE8", Offset = "0x8F2EE8")]
	public Material m_flyFillInMaterial;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FloatRange m_flyFillInRange;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material m_flyFillInMaterialInstance;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<ScrapCoin> m_flyingCoins;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Vector3> m_flyingCoinsStart;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Vector3> m_flyingCoinsEnd;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform m_flyingDestination;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshFilter m_fillInObjMF;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 m_fillInObjLocalPos;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion m_fillInObjRelativeRot;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x176E0EC", Offset = "0x176E0EC", VA = "0x176E0EC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8FF02C", Offset = "0x8FF02C")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x176E154", Offset = "0x176E154", VA = "0x176E154")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x176E280", Offset = "0x176E280", VA = "0x176E280")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x176E454", Offset = "0x176E454", VA = "0x176E454")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x176EB70", Offset = "0x176EB70", VA = "0x176EB70")]
	public int CountCoinsForValue(float v)
	{
		return default(int);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x176EBD0", Offset = "0x176EBD0", VA = "0x176EBD0")]
	public List<float> GetCoinAmountsForValue(float v)
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x176ECA8", Offset = "0x176ECA8", VA = "0x176ECA8")]
	public List<ScrapCoin> SpawnScrapCoinsNearPlayer(float v)
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x176EF18", Offset = "0x176EF18", VA = "0x176EF18")]
	public List<ScrapCoin> SpawnScrapCoinsAtGarage(float v)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x176ED9C", Offset = "0x176ED9C", VA = "0x176ED9C")]
	public List<ScrapCoin> SpawnScrapCoinsNearLocation(float v, Vector3 nearPos)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x176F03C", Offset = "0x176F03C", VA = "0x176F03C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF040", Offset = "0x8FF040")]
	private IEnumerator<Vector3> PileFrom(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x176EFF8", Offset = "0x176EFF8", VA = "0x176EFF8")]
	public List<ScrapCoin> SpawnScrapCoins(float v, Vector3 spawnPos)
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x176F6E4", Offset = "0x176F6E4", VA = "0x176F6E4")]
	public List<ScrapCoin> SpawnScrapCoins(float v, IEnumerable<Vector3> spawnPoints)
	{
		return null;
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x176F0D8", Offset = "0x176F0D8", VA = "0x176F0D8")]
	public List<ScrapCoin> SpawnScrapCoins(float v, IEnumerator<Vector3> spawnPointsIter)
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x176F7B4", Offset = "0x176F7B4", VA = "0x176F7B4")]
	public void DepositInAnyStorageYard(float v)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x176FB3C", Offset = "0x176FB3C", VA = "0x176FB3C")]
	public void DepositInClosest(float v, Vector3 p)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1770004", Offset = "0x1770004", VA = "0x1770004")]
	public void Deposit(float v, Warehouse sy)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1770090", Offset = "0x1770090", VA = "0x1770090")]
	public bool Withdraw(float v, [Optional] Transform flyTo)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x177066C", Offset = "0x177066C", VA = "0x177066C")]
	public bool WithdrawFromAnywhere(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1770984", Offset = "0x1770984", VA = "0x1770984")]
	public bool WithdrawFromLooseScrap(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1770D30", Offset = "0x1770D30", VA = "0x1770D30")]
	public bool TakeFromLooseScrap(float v, ref List<ScrapCoin> coinsTaken)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1771064", Offset = "0x1771064", VA = "0x1771064")]
	public void SetBalance(float balance)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x17710CC", Offset = "0x17710CC", VA = "0x17710CC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF0A0", Offset = "0x8FF0A0")]
	public void Get10()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x17710D4", Offset = "0x17710D4", VA = "0x17710D4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF0E8", Offset = "0x8FF0E8")]
	public void Get100()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x17710E0", Offset = "0x17710E0", VA = "0x17710E0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF130", Offset = "0x8FF130")]
	public void Get1000()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x17710EC", Offset = "0x17710EC", VA = "0x17710EC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF178", Offset = "0x8FF178")]
	public void Lose10()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x17710F4", Offset = "0x17710F4", VA = "0x17710F4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF1C0", Offset = "0x8FF1C0")]
	public void Lose100()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1771100", Offset = "0x1771100", VA = "0x1771100")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF208", Offset = "0x8FF208")]
	public void Lose1000()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x177018C", Offset = "0x177018C", VA = "0x177018C")]
	private void WithdrawAndFlyTo(float amt, Transform t)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x177110C", Offset = "0x177110C", VA = "0x177110C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF250", Offset = "0x8FF250")]
	private IEnumerator SpendScrapAtLocationCR()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1771184", Offset = "0x1771184", VA = "0x1771184")]
	public void DepositAndFlyFrom(float v, Transform startT)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1771864", Offset = "0x1771864", VA = "0x1771864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF2B0", Offset = "0x8FF2B0")]
	private IEnumerator DepositAndFlyToCR()
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x17718DC", Offset = "0x17718DC", VA = "0x17718DC")]
	public Bank()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BatchObjectBuilder : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000C0")]
	public class MaterialSetting
	{
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material m_original;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_replaceWith;

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x17663B4", Offset = "0x17663B4", VA = "0x17663B4")]
		public MaterialSetting()
		{
		}
	}

	[Token(Token = "0x20000C1")]
	private enum BatchingStatus
	{
		[Token(Token = "0x40003EE")]
		Clean,
		[Token(Token = "0x40003EF")]
		Dirty,
		[Token(Token = "0x40003F0")]
		Batching
	}

	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8D0", Offset = "0x8EC8D0")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BatchableObject batchableObject;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<(MeshFilter, int)> <>9__0;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1766328", Offset = "0x1766328", VA = "0x1766328")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1766330", Offset = "0x1766330", VA = "0x1766330")]
		internal bool <RemoveBatchableObject>b__0((MeshFilter, int) x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MaterialSetting> m_replacements;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, BatchableObject> m_batchableObjects;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BatchingStatus m_batchingStatus;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_rootHostTransform;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialBatchBundle> m_materialBatchBundles;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x17728A8", Offset = "0x17728A8", VA = "0x17728A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x17729C0", Offset = "0x17729C0", VA = "0x17729C0")]
	private BatchingStatus UpdateBatchedMeshes()
	{
		return default(BatchingStatus);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1772C24", Offset = "0x1772C24", VA = "0x1772C24")]
	private void AddBatchableObject(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1772E7C", Offset = "0x1772E7C", VA = "0x1772E7C")]
	private MaterialBatchBundle GetBundleForId(int id, Material m)
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1772FA4", Offset = "0x1772FA4", VA = "0x1772FA4")]
	private bool TryGetBundleForId(int id, out MaterialBatchBundle b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1773080", Offset = "0x1773080", VA = "0x1773080")]
	private void RemoveBatchableObject(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x17733D8", Offset = "0x17733D8", VA = "0x17733D8")]
	private void RemoveBatchedMaterial(int materialID)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x17734BC", Offset = "0x17734BC", VA = "0x17734BC")]
	public void ApplyReplacements()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x17735A0", Offset = "0x17735A0", VA = "0x17735A0")]
	public void Batch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x17735A4", Offset = "0x17735A4", VA = "0x17735A4")]
	public void Rebatch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x17735DC", Offset = "0x17735DC", VA = "0x17735DC")]
	public void Unbatch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x17735E0", Offset = "0x17735E0", VA = "0x17735E0")]
	public BatchObjectBuilder()
	{
	}
}
[Token(Token = "0x20000C3")]
public class BatchableObject : MonoBehaviour
{
	[Token(Token = "0x20000C4")]
	private enum BakeStatus
	{
		[Token(Token = "0x40003FF")]
		Never,
		[Token(Token = "0x4000400")]
		Baked,
		[Token(Token = "0x4000401")]
		Unbaked,
		[Token(Token = "0x4000402")]
		Failed
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_id;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BatchObjectBuilder m_batchObjectBuilder;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer m_objectMeshRenderer;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter m_objectMeshFilter;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int stillFrames;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 prevPosition;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion prevRotation;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BakeStatus m_bakeStatus;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_transform;

	[Token(Token = "0x40003FD")]
	private const int bakeAfterFrames = 5;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x17736B0", Offset = "0x17736B0", VA = "0x17736B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1773834", Offset = "0x1773834", VA = "0x1773834")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x177387C", Offset = "0x177387C", VA = "0x177387C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1773974", Offset = "0x1773974", VA = "0x1773974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1773978", Offset = "0x1773978", VA = "0x1773978")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1773A88", Offset = "0x1773A88", VA = "0x1773A88")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1773880", Offset = "0x1773880", VA = "0x1773880")]
	private void Bake()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1773838", Offset = "0x1773838", VA = "0x1773838")]
	private void Unbake()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1773ADC", Offset = "0x1773ADC", VA = "0x1773ADC")]
	public BatchableObject()
	{
	}
}
[Token(Token = "0x20000C5")]
public struct BatchedMeshObject
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshFilter m_meshFilter;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MeshRenderer m_meshRenderer;
}
[Token(Token = "0x20000C6")]
internal class MaterialBatchBundle
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<(MeshFilter, int)> meshFilters;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool dirty;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hasBatched;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BatchedMeshObject batchedMeshObject;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Renderer> batchableRenderers;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1AB07F0", Offset = "0x1AB07F0", VA = "0x1AB07F0")]
	public void SetRenderersEnabled(bool value)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1AB089C", Offset = "0x1AB089C", VA = "0x1AB089C")]
	public BatchedMeshObject GetBatchedMeshObject(Transform rootHostTransform, List<BatchObjectBuilder.MaterialSetting> replacements)
	{
		return default(BatchedMeshObject);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1AB0B30", Offset = "0x1AB0B30", VA = "0x1AB0B30")]
	public MaterialBatchBundle()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1AB0BBC", Offset = "0x1AB0BBC", VA = "0x1AB0BBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF400", Offset = "0x8FF400")]
	private bool <GetBatchedMeshObject>b__8_0(BatchObjectBuilder.MaterialSetting x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C7")]
public class Building : StaticMappedBuilding<Building>
{
	[Token(Token = "0x20000C8")]
	public enum BuildingType
	{
		[Token(Token = "0x400045D")]
		None,
		[Token(Token = "0x400045E")]
		House,
		[Token(Token = "0x400045F")]
		Facility,
		[Token(Token = "0x4000460")]
		XX_Research_XX,
		[Token(Token = "0x4000461")]
		X,
		[Token(Token = "0x4000462")]
		XX,
		[Token(Token = "0x4000463")]
		DropInFacility,
		[Token(Token = "0x4000464")]
		Custom
	}

	[Token(Token = "0x20000C9")]
	public enum Size
	{
		[Token(Token = "0x4000466")]
		Small,
		[Token(Token = "0x4000467")]
		Medium,
		[Token(Token = "0x4000468")]
		Large
	}

	[Token(Token = "0x20000CA")]
	public class DecoEvent : UnityEvent<Building, Decoration>
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x176A038", Offset = "0x176A038", VA = "0x176A038")]
		public DecoEvent()
		{
		}
	}

	[Token(Token = "0x20000CB")]
	public class PersonEvent : UnityEvent<Person>
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x176A1C4", Offset = "0x176A1C4", VA = "0x176A1C4")]
		public PersonEvent()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	public delegate bool BoolReturnDelegate();

	[Token(Token = "0x20000CD")]
	public enum ConstructionState
	{
		[Token(Token = "0x400046A")]
		Unconstructed,
		[Token(Token = "0x400046B")]
		UnderContruction,
		[Token(Token = "0x400046C")]
		Built
	}

	[Token(Token = "0x20000CE")]
	public class BuildingEvent : UnityEvent<Building>
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x1769FEC", Offset = "0x1769FEC", VA = "0x1769FEC")]
		public BuildingEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000CF")]
	public class LightSwitch
	{
		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int materialIndex;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color onColor;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color onEmissionColor;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer renderer;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Building building;

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x176A084", Offset = "0x176A084", VA = "0x176A084")]
		public LightSwitch(Building building)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x176A110", Offset = "0x176A110", VA = "0x176A110")]
		public void On()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x176A1BC", Offset = "0x176A1BC", VA = "0x176A1BC")]
		public void Off()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x176A118", Offset = "0x176A118", VA = "0x176A118")]
		public void Toggle(bool on)
		{
		}
	}

	[Token(Token = "0x20000D0")]
	public delegate double TimeToLeaveDelegate(Person p);

	[Token(Token = "0x20000D1")]
	public delegate bool BoolDelegate();

	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8E0", Offset = "0x8EC8E0")]
	private sealed class <UpdateContruction>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Building <>4__this;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <visibleAddedScrap>5__2;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <scrapLastTime>5__3;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0x17697F8", Offset = "0x17697F8", VA = "0x17697F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000467")]
			[Address(RVA = "0x1769840", Offset = "0x1769840", VA = "0x1769840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1769044", Offset = "0x1769044", VA = "0x1769044")]
		[DebuggerHidden]
		public <UpdateContruction>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x1769070", Offset = "0x1769070", VA = "0x1769070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1769074", Offset = "0x1769074", VA = "0x1769074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x1769800", Offset = "0x1769800", VA = "0x1769800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC8F0", Offset = "0x8EC8F0")]
	private sealed class <ApplyInterestColours>d__164 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animateChanges;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Building <>4__this;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x1768FF4", Offset = "0x1768FF4", VA = "0x1768FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x176903C", Offset = "0x176903C", VA = "0x176903C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x17689A4", Offset = "0x17689A4", VA = "0x17689A4")]
		[DebuggerHidden]
		public <ApplyInterestColours>d__164(int <>1__state)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x17689D0", Offset = "0x17689D0", VA = "0x17689D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x17689D4", Offset = "0x17689D4", VA = "0x17689D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x1768FFC", Offset = "0x1768FFC", VA = "0x1768FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC900", Offset = "0x8EC900")]
	private sealed class <UpdateStatusAtEndOfFrame>d__171 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Building <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x1769A94", Offset = "0x1769A94", VA = "0x1769A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x1769ADC", Offset = "0x1769ADC", VA = "0x1769ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1769848", Offset = "0x1769848", VA = "0x1769848")]
		[DebuggerHidden]
		public <UpdateStatusAtEndOfFrame>d__171(int <>1__state)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1769874", Offset = "0x1769874", VA = "0x1769874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1769878", Offset = "0x1769878", VA = "0x1769878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x1769A9C", Offset = "0x1769A9C", VA = "0x1769A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_areaOfEffect;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BuildingType m_buildingType;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Size m_buildingSize;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_maxInterests;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Saveable]
	public List<Interest> m_interests;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_capacity;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Person> m_owners;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_requiredOwners;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Saveable]
	public List<Person> m_peopleInside;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_meshColoursAreRemappable;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshFilter[] m_buildingMeshes;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BatchableObject[] m_batchableObjects;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LightSwitch[] m_lights;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Bounds m_boundsLS;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public List<Decoration> m_decorationsToCustomise;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NavMeshSourceTag[] m_navMeshTags;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DecoEvent OnDecorationAdded;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DecoEvent OnDecorationRemoved;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	[Saveable]
	public List<Decoration> m_decorations;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_doorsAutoRotate;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_doorOutsideLocatorDist;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Door[] m_doors;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Door> m_reachableDoors;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SpacefolkWindow[] m_allWindows;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TrackedPool<SpacefolkWindow> m_standableWindows;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public SDFShape[] m_sdfOccluders;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SDFShape[] m_sdfLights;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F2FB8", Offset = "0x8F2FB8")]
	public bool m_showEvents;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PersonEvent OnPersonEnters;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F2FF0", Offset = "0x8F2FF0")]
	public PersonEvent OnPersonLeaves;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F3028", Offset = "0x8F3028")]
	public PersonEvent OnOwnerAdded;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3060", Offset = "0x8F3060")]
	private string m_settledSFX;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string m_settledOrphanedSFX;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool m_reachable;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool m_wasBlocked;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private bool m_isInitialized;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[Saveable]
	public int m_seed;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private XXHash m_rand;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float m_energyBoost;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolReturnDelegate IsOpenForBusinessDelegate;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int m_powerUse;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	[ReadOnly]
	private bool m_isPowered;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private PowerGenerator m_powerGenerator;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F30E0", Offset = "0x8F30E0")]
	public string m_sfxConstructionStart;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string m_sfxConstructionStop;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool m_constructionSoundPlaying;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool m_canMoveAfterConstruction;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Saveable]
	public ConstructionState m_constructionState;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject[] m_constructionObjects;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3128", Offset = "0x8F3128")]
	private float <m_scrapRequired>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[Saveable]
	private float m_scrapAdded;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Building> ms_underConstruction;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F3148", Offset = "0x8F3148")]
	public BuildingEvent OnContructionComplete;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BuildingEvent OnAnyContructionComplete;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static BuildingEvent OnAnySettles;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static BuildingEvent OnAnyDisabled;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static BuildingEvent OnAnyDestroyed;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int ms_unconstructedCount;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int ms_lastFrameUnconstructedCollected;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<int, Material[]> scaffMats;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private FolkJobs.JobTypes m_job;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public MPB_Texture m_infoStrip;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int RemapGradient;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly int FillInProg;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly int FillInPosRad;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TimeToLeaveDelegate GetEpochTimeToLeaveOverride;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Coroutine m_constructionCR;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Material m_scaffoldMat;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float m_constructionAnimRate;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float m_constructionAnimMaxRate;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<(MeshRenderer, Material[])> m_defaultBuildingMaterials;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<(MeshRenderer, Material[])> m_defaultConstructionMaterials;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private double m_previousScrapAddedAtTime;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private double m_scrapAddedAtTime;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private BuildingBuilder.MatPackage m_scaffoldMatPkg;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public float m_paintColoursTime;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static MeshRenderer ms_fillInMeshRenderer;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool m_statusUpdateQueued;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public BoolDelegate CustomSetInfoStrip;

	[Token(Token = "0x1700006C")]
	public float AreaOfEffectSq
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x177F2FC", Offset = "0x177F2FC", VA = "0x177F2FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006D")]
	public Interest m_primaryInterest
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x177F308", Offset = "0x177F308", VA = "0x177F308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public Vector3 m_boundsCenterWS
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x177F40C", Offset = "0x177F40C", VA = "0x177F40C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x177F754", Offset = "0x177F754", VA = "0x177F754")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public bool NeedsPower
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x177F764", Offset = "0x177F764", VA = "0x177F764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public float m_scrapRequired
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x177F7D0", Offset = "0x177F7D0", VA = "0x177F7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF424", Offset = "0x8FF424")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x177F7D8", Offset = "0x177F7D8", VA = "0x177F7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF434", Offset = "0x8FF434")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float ScrapAdded
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x177F7E0", Offset = "0x177F7E0", VA = "0x177F7E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000073")]
	public static int UnconstructedCount
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x177F7E8", Offset = "0x177F7E8", VA = "0x177F7E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000074")]
	public bool HasJob
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1782230", Offset = "0x1782230", VA = "0x1782230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x177EEC4", Offset = "0x177EEC4", VA = "0x177EEC4")]
	public static void InitStaticsIfRequired()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x177F0FC", Offset = "0x177F0FC", VA = "0x177F0FC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8FF410", Offset = "0x8FF410")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x177F1D0", Offset = "0x177F1D0", VA = "0x177F1D0")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x177F358", Offset = "0x177F358", VA = "0x177F358")]
	public bool HasAllRequiredOwners()
	{
		return default(bool);
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x177F3B0", Offset = "0x177F3B0", VA = "0x177F3B0")]
	public bool AtCapacity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x177F450", Offset = "0x177F450", VA = "0x177F450")]
	public bool IsFullyDecorated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x177F5A0", Offset = "0x177F5A0", VA = "0x177F5A0")]
	private bool HasDecorationForInterest(Interest interest)
	{
		return default(bool);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x177F75C", Offset = "0x177F75C", VA = "0x177F75C")]
	public bool IsPowered()
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x177FA58", Offset = "0x177FA58", VA = "0x177FA58", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x177FAF8", Offset = "0x177FAF8", VA = "0x177FAF8", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x177FC00", Offset = "0x177FC00", VA = "0x177FC00", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x177FCB4", Offset = "0x177FCB4", VA = "0x177FCB4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x17800C4", Offset = "0x17800C4", VA = "0x17800C4", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1780E00", Offset = "0x1780E00", VA = "0x1780E00")]
	private void RegisterInitialOccupants()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1780748", Offset = "0x1780748", VA = "0x1780748")]
	private void SetInternalLinksEnabled(bool b)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1780804", Offset = "0x1780804", VA = "0x1780804")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1781464", Offset = "0x1781464", VA = "0x1781464")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1781468", Offset = "0x1781468", VA = "0x1781468")]
	private void OnWillSettle(bool wasBlocked)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1780934", Offset = "0x1780934", VA = "0x1780934")]
	private void RotateDoors()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1781474", Offset = "0x1781474", VA = "0x1781474")]
	public void OnEndInteractionAndSettled()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x17816B4", Offset = "0x17816B4", VA = "0x17816B4")]
	public static void RecalculateAllReachability()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x178185C", Offset = "0x178185C", VA = "0x178185C")]
	public void CalculateReachability()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1781B7C", Offset = "0x1781B7C", VA = "0x1781B7C")]
	public void DebugMakeAllDoorsReachable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1780640", Offset = "0x1780640", VA = "0x1780640")]
	public void CollectFeatures()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1781C78", Offset = "0x1781C78", VA = "0x1781C78")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF444", Offset = "0x8FF444")]
	private void LightsOnDebug()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1781D84", Offset = "0x1781D84", VA = "0x1781D84")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF45C", Offset = "0x8FF45C")]
	private void LightsOffDebug()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1781C80", Offset = "0x1781C80", VA = "0x1781C80")]
	private void SetLightsOn(bool on)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x17805FC", Offset = "0x17805FC", VA = "0x17805FC")]
	public void Power(bool power)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1781D8C", Offset = "0x1781D8C", VA = "0x1781D8C")]
	public void SetupWithoutOwner(Interest intr, FacilityDefinition fd)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1781E84", Offset = "0x1781E84", VA = "0x1781E84")]
	public bool IsOpenForBusiness()
	{
		return default(bool);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1781F68", Offset = "0x1781F68", VA = "0x1781F68")]
	public void TakeOwnership(Person p)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1781FD0", Offset = "0x1781FD0", VA = "0x1781FD0")]
	public void PersonStartsEntering(Person p)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1780F0C", Offset = "0x1780F0C", VA = "0x1780F0C")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x178202C", Offset = "0x178202C", VA = "0x178202C")]
	public void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x17821F8", Offset = "0x17821F8", VA = "0x17821F8")]
	public FolkJobs.JobTypes GetJob(bool checkForPower = true)
	{
		return default(FolkJobs.JobTypes);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1782228", Offset = "0x1782228", VA = "0x1782228")]
	public void SetJob(FolkJobs.JobTypes job)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1782240", Offset = "0x1782240", VA = "0x1782240")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x17822F0", Offset = "0x17822F0", VA = "0x17822F0")]
	public void RemapColours(Texture2D remapTex)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1780464", Offset = "0x1780464", VA = "0x1780464")]
	private void SetupLights()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1782468", Offset = "0x1782468", VA = "0x1782468")]
	private LightSwitch SetupLight(Renderer r, int m)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1780928", Offset = "0x1780928", VA = "0x1780928")]
	private void SetScrapRequiredForConstruction(float s)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x17825B4", Offset = "0x17825B4", VA = "0x17825B4")]
	public float RemainingScrapRequired()
	{
		return default(float);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1780B84", Offset = "0x1780B84", VA = "0x1780B84")]
	private void StartConstruction()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x178263C", Offset = "0x178263C", VA = "0x178263C")]
	public void TryAddScrap(float scrapIn, out float notAdded)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x17825C4", Offset = "0x17825C4", VA = "0x17825C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF474", Offset = "0x8FF474")]
	private IEnumerator UpdateContruction()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1782734", Offset = "0x1782734", VA = "0x1782734")]
	private void ResetMaterialMapsToDefaults(List<(MeshRenderer, Material[])> map)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1780BD0", Offset = "0x1780BD0", VA = "0x1780BD0")]
	public void FinishConstruction(bool triggerEvents, bool animateChanges)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1782850", Offset = "0x1782850", VA = "0x1782850")]
	private void AddDecorationsAsInterests(bool animateChanges)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1782BCC", Offset = "0x1782BCC", VA = "0x1782BCC")]
	public void Explode(Vector3 position, float radius)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1782E6C", Offset = "0x1782E6C", VA = "0x1782E6C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FF4D4", Offset = "0x8FF4D4")]
	public static void CompleteAllConstruction()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1782FD4", Offset = "0x1782FD4", VA = "0x1782FD4")]
	public void DebugCompleteConstruction(bool speedup = true)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x178304C", Offset = "0x178304C", VA = "0x178304C")]
	public void DecorationWasAdded(Decoration newDeco)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x178315C", Offset = "0x178315C", VA = "0x178315C")]
	public void DecorationWasRemoved(Decoration deco)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x17831F4", Offset = "0x17831F4", VA = "0x17831F4")]
	public bool CanBeEntered()
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1783280", Offset = "0x1783280", VA = "0x1783280")]
	public bool IsAppealing(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1783310", Offset = "0x1783310", VA = "0x1783310")]
	public bool HasInterest(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x17829F0", Offset = "0x17829F0", VA = "0x17829F0")]
	private void UpdateInterestDefinedAttributes(bool animateChanges)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1783430", Offset = "0x1783430", VA = "0x1783430")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF51C", Offset = "0x8FF51C")]
	public void TestFillIn()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x17833A4", Offset = "0x17833A4", VA = "0x17833A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF534", Offset = "0x8FF534")]
	private IEnumerator ApplyInterestColours(bool animateChanges)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1783460", Offset = "0x1783460", VA = "0x1783460")]
	public void HideInfoStrip()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1783490", Offset = "0x1783490", VA = "0x1783490")]
	public void SetInfoStrip(InfoStripRenderer.Category cat)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1783548", Offset = "0x1783548", VA = "0x1783548")]
	public void SetInfoStrip(InfoStripRenderer.Category cat, bool showInter0, Interest inter0, bool showInter1, Interest inter1, bool showInter2, Interest inter2)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x178364C", Offset = "0x178364C", VA = "0x178364C")]
	public void SetInfoStrip(string text, Color borderCol)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1781818", Offset = "0x1781818", VA = "0x1781818")]
	public void SetShouldUpdateStatus()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1783734", Offset = "0x1783734", VA = "0x1783734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF594", Offset = "0x8FF594")]
	private IEnumerator UpdateStatusAtEndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x17837AC", Offset = "0x17837AC", VA = "0x17837AC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF5F4", Offset = "0x8FF5F4")]
	public void SetAppropriateInfoStrip()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1783A24", Offset = "0x1783A24", VA = "0x1783A24")]
	private void SetUnderConstructionBuildStrip()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1783AF8", Offset = "0x1783AF8", VA = "0x1783AF8")]
	private void SetUndecoratedInfoStrip()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1783CEC", Offset = "0x1783CEC", VA = "0x1783CEC")]
	public float DistSqToClosestDoor(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1783E08", Offset = "0x1783E08", VA = "0x1783E08")]
	public Door ClosestReachableDoor(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1783EB0", Offset = "0x1783EB0", VA = "0x1783EB0")]
	public Door ClosestReachableDoor(Vector3 p, out float dSq)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1783F68", Offset = "0x1783F68", VA = "0x1783F68")]
	public Door ClosestDoor(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1784010", Offset = "0x1784010", VA = "0x1784010")]
	public bool TryGetWindowForMetadata(BlockMetadata location, out SpacefolkWindow window)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x17843F4", Offset = "0x17843F4", VA = "0x17843F4")]
	public Building()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BuildingBuilder : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	public class MatPackage
	{
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material m_singleMat;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Material[]> matList;

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x176A854", Offset = "0x176A854", VA = "0x176A854")]
		public MatPackage(Material srcMat)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1769678", Offset = "0x1769678", VA = "0x1769678")]
		public Material[] GetArrayForLen(int len)
		{
			return null;
		}
	}

	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC910", Offset = "0x8EC910")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingBuilder <>4__this;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ngo>5__2;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x176A804", Offset = "0x176A804", VA = "0x176A804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000482")]
			[Address(RVA = "0x176A84C", Offset = "0x176A84C", VA = "0x176A84C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x176A5F0", Offset = "0x176A5F0", VA = "0x176A5F0")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x176A61C", Offset = "0x176A61C", VA = "0x176A61C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x176A620", Offset = "0x176A620", VA = "0x176A620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x176A80C", Offset = "0x176A80C", VA = "0x176A80C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BuildingBuilder Instance;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_signage;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F3180", Offset = "0x8F3180")]
	public float m_constructionBaseRateScrapPerHr;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_constructionScaffoldMaterial;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_gotPowerScaffoldTex;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_noPowerScaffoldTex;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_fillInMaterial;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material m_infoStripMaterial;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPiecePropertyList m_dummyBuilding;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_maxNumber;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedPool<MatPackage> m_scaffoldMats;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1A22544", Offset = "0x1A22544", VA = "0x1A22544")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8FF6FC", Offset = "0x8FF6FC")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1A22594", Offset = "0x1A22594", VA = "0x1A22594")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1A22694", Offset = "0x1A22694", VA = "0x1A22694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1A22960", Offset = "0x1A22960", VA = "0x1A22960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF710", Offset = "0x8FF710")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1A227E4", Offset = "0x1A227E4", VA = "0x1A227E4")]
	private void AllocateScaffoldMaterialPackages()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1A229D8", Offset = "0x1A229D8", VA = "0x1A229D8")]
	private MatPackage CreateMatPackage()
	{
		return null;
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1A22A3C", Offset = "0x1A22A3C", VA = "0x1A22A3C")]
	public BuildingBuilder()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Anomaly : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PowerGenerator m_attachedPowerGenerator;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1A9E5EC", Offset = "0x1A9E5EC", VA = "0x1A9E5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1A9E768", Offset = "0x1A9E768", VA = "0x1A9E768")]
	public Anomaly()
	{
	}
}
[Token(Token = "0x20000D9")]
public class DefenceBeacon : StaticMappedBuilding<DefenceBeacon>, PersonDoDropInJob.IJobProviding
{
	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC920", Offset = "0x8EC920")]
	private sealed class <HidePreview>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefenceBeacon <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0x15EDDD0", Offset = "0x15EDDD0", VA = "0x15EDDD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000498")]
			[Address(RVA = "0x15EDE18", Offset = "0x15EDE18", VA = "0x15EDE18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x15EDCD4", Offset = "0x15EDCD4", VA = "0x15EDCD4")]
		[DebuggerHidden]
		public <HidePreview>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x15EDD00", Offset = "0x15EDD00", VA = "0x15EDD00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x15EDD04", Offset = "0x15EDD04", VA = "0x15EDD04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x15EDDD8", Offset = "0x15EDDD8", VA = "0x15EDDD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC930", Offset = "0x8EC930")]
	private sealed class <PreviewCR>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefenceBeacon <>4__this;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <d>5__3;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0x15EDFA0", Offset = "0x15EDFA0", VA = "0x15EDFA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049E")]
			[Address(RVA = "0x15EDFE8", Offset = "0x15EDFE8", VA = "0x15EDFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x15EDE20", Offset = "0x15EDE20", VA = "0x15EDE20")]
		[DebuggerHidden]
		public <PreviewCR>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x15EDE4C", Offset = "0x15EDE4C", VA = "0x15EDE4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x15EDE50", Offset = "0x15EDE50", VA = "0x15EDE50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x15EDFA8", Offset = "0x15EDFA8", VA = "0x15EDFA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_folkCapacity;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F31B8", Offset = "0x8F31B8")]
	public float m_folkDrainToZeroTime;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_normalFolkProtection;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_minRadius;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_maxRadius;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_protectiveBubble;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_protectiveBubbleVisualiser;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F31F0", Offset = "0x8F31F0")]
	private float <m_currentRadius>k__BackingField;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_radiusLerp;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isSetup;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine m_previewCR;

	[Token(Token = "0x1700007D")]
	public float m_currentRadius
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x1678270", Offset = "0x1678270", VA = "0x1678270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF7C0", Offset = "0x8FF7C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1678278", Offset = "0x1678278", VA = "0x1678278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF7D0", Offset = "0x8FF7D0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool JobActive
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x1678280", Offset = "0x1678280", VA = "0x1678280", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x1678288", Offset = "0x1678288", VA = "0x1678288", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1678290", Offset = "0x1678290", VA = "0x1678290")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x167831C", Offset = "0x167831C", VA = "0x167831C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x16785B0", Offset = "0x16785B0", VA = "0x16785B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF7E0", Offset = "0x8FF7E0")]
	private IEnumerator HidePreview()
	{
		return null;
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1678628", Offset = "0x1678628", VA = "0x1678628")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1678630", Offset = "0x1678630", VA = "0x1678630")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x167866C", Offset = "0x167866C", VA = "0x167866C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF840", Offset = "0x8FF840")]
	private IEnumerator PreviewCR()
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x16786E4", Offset = "0x16786E4", VA = "0x16786E4")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1678740", Offset = "0x1678740", VA = "0x1678740")]
	private void OnConstructionComplete(Building bldg)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x167879C", Offset = "0x167879C", VA = "0x167879C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1678A40", Offset = "0x1678A40", VA = "0x1678A40")]
	public DefenceBeacon()
	{
	}
}
[Token(Token = "0x20000DC")]
public class DropInFacility : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	private enum State
	{
		[Token(Token = "0x40004B2")]
		Empty,
		[Token(Token = "0x40004B3")]
		InUse,
		[Token(Token = "0x40004B4")]
		Closed
	}

	[Token(Token = "0x20000DE")]
	public delegate void VoidDelegate();

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hackyShouldRemoveReachableDoors;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_requiredWorkers;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> m_availableStandLocs;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<(Person, Transform)> m_occupants;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoidDelegate OnEnterInUse;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VoidDelegate OnUpdateInUse;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VoidDelegate OnExitInUse;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_bldg;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_sfxDoorClose;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1740D48", Offset = "0x1740D48", VA = "0x1740D48")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1741374", Offset = "0x1741374", VA = "0x1741374")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x174137C", Offset = "0x174137C", VA = "0x174137C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x17413D0", Offset = "0x17413D0", VA = "0x17413D0")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1741458", Offset = "0x1741458", VA = "0x1741458")]
	private void Enter_InUse()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x174146C", Offset = "0x174146C", VA = "0x174146C")]
	private void Update_InUse()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1741504", Offset = "0x1741504", VA = "0x1741504")]
	private void ExitInUse()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1741518", Offset = "0x1741518", VA = "0x1741518")]
	private void Enter_Closed()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x174151C", Offset = "0x174151C", VA = "0x174151C")]
	private void Update_Closed()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1741520", Offset = "0x1741520", VA = "0x1741520")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1741778", Offset = "0x1741778", VA = "0x1741778")]
	public void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1741998", Offset = "0x1741998", VA = "0x1741998")]
	public DropInFacility()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1741A24", Offset = "0x1741A24", VA = "0x1741A24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF940", Offset = "0x8FF940")]
	private bool <Start>b__13_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DF")]
public class Facility : StaticMappedBuilding<Facility>
{
	[Token(Token = "0x20000E0")]
	public class FacilityEvent : UnityEvent<Facility>
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x15F2600", Offset = "0x15F2600", VA = "0x15F2600")]
		public FacilityEvent()
		{
		}
	}

	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC940", Offset = "0x8EC940")]
	private sealed class <AddSign>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Facility <>4__this;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CityPiece <cp>5__2;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Interest <interestA>5__3;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Decoration <signDeco>5__4;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <rb>5__5;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0x15F25B0", Offset = "0x15F25B0", VA = "0x15F25B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0x15F25F8", Offset = "0x15F25F8", VA = "0x15F25F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x15F1BCC", Offset = "0x15F1BCC", VA = "0x15F1BCC")]
		[DebuggerHidden]
		public <AddSign>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x15F1BF8", Offset = "0x15F1BF8", VA = "0x15F1BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x15F1BFC", Offset = "0x15F1BFC", VA = "0x15F1BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x15F25B8", Offset = "0x15F25B8", VA = "0x15F25B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FacilityDefinition m_definition;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XXHash m_rand;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random m_signRand;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private System.Random m_nameRand;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SignAppearance m_sign;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_displayName;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_nameFinalised;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public FacilityCategory m_category;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_maxStock;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Saveable]
	[ReadOnly]
	public int m_stock;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_stockReplenishTimeDays;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Saveable]
	private double m_nextReplenishEpochTime;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_signGlow;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform m_stockProgress;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FacilityEvent OnAnyFacilitySettles;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FacilityEvent OnAnyDestroyed;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_hasAutoPlacedDecorations;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxDoorClose;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3258", Offset = "0x8F3258")]
	public int m_giveItemEvery;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int m_nextItemAt;

	[Token(Token = "0x17000084")]
	public bool IsSetup
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x174DEF4", Offset = "0x174DEF4", VA = "0x174DEF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x174DF60", Offset = "0x174DF60", VA = "0x174DF60", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x174E628", Offset = "0x174E628", VA = "0x174E628")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x174E790", Offset = "0x174E790", VA = "0x174E790")]
	public void SetupWithoutOwner(Interest intr, FacilityDefinition fd)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x174E52C", Offset = "0x174E52C", VA = "0x174E52C")]
	private void TryAddSign()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x174E7F8", Offset = "0x174E7F8", VA = "0x174E7F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FF950", Offset = "0x8FF950")]
	private IEnumerator AddSign()
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x174E870", Offset = "0x174E870", VA = "0x174E870")]
	private void UpdateDisplayName()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x174ED44", Offset = "0x174ED44", VA = "0x174ED44")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x174EDC0", Offset = "0x174EDC0", VA = "0x174EDC0")]
	private void OnPersonLeaves(Person p)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x174EF24", Offset = "0x174EF24", VA = "0x174EF24")]
	private void OnPersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x174EF84", Offset = "0x174EF84", VA = "0x174EF84")]
	private bool GiveFolkRandomItem(Person p)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x174F1F0", Offset = "0x174F1F0", VA = "0x174F1F0")]
	private bool IsOpenForBusiness()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x174EE18", Offset = "0x174EE18", VA = "0x174EE18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF9B0", Offset = "0x8FF9B0")]
	private void RemoveStock()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x174E79C", Offset = "0x174E79C", VA = "0x174E79C")]
	private void InitialiseStock()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x174F200", Offset = "0x174F200", VA = "0x174F200")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FF9C8", Offset = "0x8FF9C8")]
	public void ReplenishStock()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x174E62C", Offset = "0x174E62C", VA = "0x174E62C")]
	public void UpdateStock()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x174EB84", Offset = "0x174EB84", VA = "0x174EB84")]
	public void SetSignOpenForBusiness()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x174EA20", Offset = "0x174EA20", VA = "0x174EA20")]
	public void SetSignClosedForBusiness()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x174F244", Offset = "0x174F244", VA = "0x174F244")]
	public void OnContructionComplete(Building bldg)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x174F554", Offset = "0x174F554", VA = "0x174F554")]
	private void OnDecorationAdded(Building bldg, Decoration newDeco)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x174F824", Offset = "0x174F824", VA = "0x174F824")]
	private void OnDecorationRemoved(Building bldg, Decoration newDeco)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x174F828", Offset = "0x174F828", VA = "0x174F828")]
	public Facility()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x174F9CC", Offset = "0x174F9CC", VA = "0x174F9CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FF9E0", Offset = "0x8FF9E0")]
	private void <Start>b__22_0()
	{
	}
}
[Token(Token = "0x20000E2")]
public class House : StaticMappedBuilding<House>
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3290", Offset = "0x8F3290")]
	public string m_sfxOwnerAdded;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxDoorClose;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x16C23F0", Offset = "0x16C23F0", VA = "0x16C23F0", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x16C2640", Offset = "0x16C2640", VA = "0x16C2640", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x16C26EC", Offset = "0x16C26EC", VA = "0x16C26EC")]
	private void OnOwnerAdded(Person p)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x16C2878", Offset = "0x16C2878", VA = "0x16C2878")]
	private bool SetInfoStrip()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x16C2944", Offset = "0x16C2944", VA = "0x16C2944")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FFA40", Offset = "0x8FFA40")]
	public static void HighlightEmptyHomes()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x16C2ADC", Offset = "0x16C2ADC", VA = "0x16C2ADC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8FFA88", Offset = "0x8FFA88")]
	public static void DehighlightEmptyHomes()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x16C2C50", Offset = "0x16C2C50", VA = "0x16C2C50")]
	public House()
	{
	}
}
[Token(Token = "0x20000E3")]
public class PowerGenerator : StaticMappedBuilding<PowerGenerator>, Snappable.IDelegate
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PowerCapacity;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[ReadOnly]
	[SerializeField]
	private int m_powerUsed;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] PowerLabels;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_requireAnomolyToPower;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_antenna;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_antennaRadius;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anomaly m_anomalyNear;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem m_anomalyParticles;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_powerArcs;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Building m_building;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnyObjectSensor m_powerSupplySensor;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SnappableWorldAffordance m_powerBoxAffordance;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_restrictedPlacement;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_restrictedPlacementPosition;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 m_restrictedPlacementRotation;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3300", Offset = "0x8F3300")]
	public string m_sfxArcStart;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxArcStop;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_sfxPlayerHandInserted;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_sfxPlayerHandRemoved;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_sfxConnected;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_sfxDisconnected;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_sfxOperatingStart;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_sfxOperatingStop;

	[Token(Token = "0x17000087")]
	public int PowerUsage
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x19284A8", Offset = "0x19284A8", VA = "0x19284A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x19284B0", Offset = "0x19284B0", VA = "0x19284B0", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1928728", Offset = "0x1928728", VA = "0x1928728", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1928B10", Offset = "0x1928B10", VA = "0x1928B10")]
	public void SetBuilding(Building building)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1928BEC", Offset = "0x1928BEC", VA = "0x1928BEC")]
	private void OnBuildingConstructed(Building bldg)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1928C7C", Offset = "0x1928C7C", VA = "0x1928C7C")]
	private void OnEndInteractionAndSettled()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x19290BC", Offset = "0x19290BC", VA = "0x19290BC")]
	public void RestrictPlacement(Vector3 pos, Vector3 rot)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x19287D8", Offset = "0x19287D8", VA = "0x19287D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFAD0", Offset = "0x8FFAD0")]
	public static void CalculateAllLoads(bool fromSave = false)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x19291BC", Offset = "0x19291BC", VA = "0x19291BC")]
	private void CalculateLoad()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x19286A4", Offset = "0x19286A4", VA = "0x19286A4")]
	private void SetLabelText(string text)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1929318", Offset = "0x1929318", VA = "0x1929318", Slot = "9")]
	public Snappable.SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1929700", Offset = "0x1929700", VA = "0x1929700", Slot = "10")]
	public Snappable.SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1929838", Offset = "0x1929838", VA = "0x1929838", Slot = "11")]
	public void SnappableShowingPreview(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x192983C", Offset = "0x192983C", VA = "0x192983C", Slot = "12")]
	public void SnappableInteractionDidBegin(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x19298DC", Offset = "0x19298DC", VA = "0x19298DC", Slot = "13")]
	public void SnappableInteractionDidEnd(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x19290D4", Offset = "0x19290D4", VA = "0x19290D4")]
	private void ConnectSparksOnLoad()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1929508", Offset = "0x1929508", VA = "0x1929508")]
	private Anomaly FindNearbyAnomaly(Vector3 antennaLocation)
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1928D20", Offset = "0x1928D20", VA = "0x1928D20")]
	private void UpdatePowerArcs(Vector3 sourcePosition, bool playSound = true)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1929970", Offset = "0x1929970", VA = "0x1929970")]
	public PowerGenerator()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC950", Offset = "0x8EC950")]
public class Refinery : StaticMappedBuilding<Refinery>, PersonDoDropInJob.IJobProviding
{
	[Token(Token = "0x20000E5")]
	public enum State
	{
		[Token(Token = "0x4000513")]
		Idle,
		[Token(Token = "0x4000514")]
		Preparing,
		[Token(Token = "0x4000515")]
		Processing,
		[Token(Token = "0x4000516")]
		ProcessComplete
	}

	[Serializable]
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC9B0", Offset = "0x8EC9B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, Vector3> <>9__61_0;

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1583FF0", Offset = "0x1583FF0", VA = "0x1583FF0")]
		public <>c()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1583FF8", Offset = "0x1583FF8", VA = "0x1583FF8")]
		internal Vector3 <Enter_ProcessComplete>b__61_0(Transform t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DropInFacility m_dropIn;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnyObjectSensor m_sensor;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatConst m_processingValueMultiplier;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatConst m_refundValueMultiplier;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_PreparingDurHrs;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_ProcessingDurHrs;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_coolDownDurHrs;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_speedPerExtraWorker;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_asteroidHasItemSpeedMultiplier;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem m_workingFX;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_machineryEnterLoc;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform m_texticleLoc;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform m_funnelLoc;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_grinderL;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_grinderLRotateSpeed;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform m_grinderR;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_grinderRRotateSpeed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject m_currentlyProcessing;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody m_currentlyProcessingRB;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_currentlyProcessingScrapValue;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject m_currentlyProcessingBonusItemPrefab;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int m_latestMoneyEarned;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3338", Offset = "0x8F3338")]
	public GameObject m_outputVFX;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Transform> m_outputLocators;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<AnyObjectSensor> m_outputBlockedSensors;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3370", Offset = "0x8F3370")]
	public Transform m_foundItemLoc;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_prefabOfObjectToDiscover;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_lastObjectDiscovered;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F33A8", Offset = "0x8F33A8")]
	public string m_sfxStartRefining;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_sfxStopRefining;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_sfxGetInput;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string m_sfxOutput;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_playingOperatingSound;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int m_scrapToProcess;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private IEnumerator<Transform> m_outputLocatorEnumerator;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 startP;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int m_outputsRequired;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float m_processingProgress;

	[Token(Token = "0x17000088")]
	public State CurrentState
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1887144", Offset = "0x1887144", VA = "0x1887144")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000089")]
	public bool JobActive
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1887190", Offset = "0x1887190", VA = "0x1887190", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x18871AC", Offset = "0x18871AC", VA = "0x18871AC", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	private float WorkRate
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x18871B4", Offset = "0x18871B4", VA = "0x18871B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008C")]
	private int FreeOutputs
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1888298", Offset = "0x1888298", VA = "0x1888298")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x18872EC", Offset = "0x18872EC", VA = "0x18872EC", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1887ACC", Offset = "0x1887ACC", VA = "0x1887ACC")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1887B84", Offset = "0x1887B84", VA = "0x1887B84")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1887D70", Offset = "0x1887D70", VA = "0x1887D70")]
	private void OnEnterInUse()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1887D74", Offset = "0x1887D74", VA = "0x1887D74")]
	private void OnUpdateInUse()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1887DC8", Offset = "0x1887DC8", VA = "0x1887DC8")]
	private void OnExitInUse()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1887E58", Offset = "0x1887E58", VA = "0x1887E58")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x18883C4", Offset = "0x18883C4", VA = "0x18883C4")]
	private void Enter_Preparing()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x18884D8", Offset = "0x18884D8", VA = "0x18884D8")]
	private void Update_Preparing()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1888750", Offset = "0x1888750", VA = "0x1888750")]
	private void Enter_Processing()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1888788", Offset = "0x1888788", VA = "0x1888788")]
	private void Update_Processing()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1888A80", Offset = "0x1888A80", VA = "0x1888A80")]
	private void Enter_ProcessComplete()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1889800", Offset = "0x1889800", VA = "0x1889800")]
	private void Update_ProcessComplete()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x18898AC", Offset = "0x18898AC", VA = "0x18898AC")]
	private bool SetInfoStrip()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1889998", Offset = "0x1889998", VA = "0x1889998")]
	public Refinery()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EC9C0", Offset = "0x8EC9C0")]
public class RocketBoosterControlRoom : StaticMappedBuilding<RocketBoosterControlRoom>, PersonDoDropInJob.IJobProviding
{
	[Serializable]
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA20", Offset = "0x8ECA20")]
	private sealed class <>c
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Objective> <>9__36_0;

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1584730", Offset = "0x1584730", VA = "0x1584730")]
		public <>c()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1584738", Offset = "0x1584738", VA = "0x1584738")]
		internal bool <DoPersonEnters>b__36_0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA30", Offset = "0x8ECA30")]
	private sealed class <DoPersonEnters>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person p;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RocketBoosterControlRoom <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x15850F0", Offset = "0x15850F0", VA = "0x15850F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x1585138", Offset = "0x1585138", VA = "0x1585138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x15847B4", Offset = "0x15847B4", VA = "0x15847B4")]
		[DebuggerHidden]
		public <DoPersonEnters>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x15847E0", Offset = "0x15847E0", VA = "0x15847E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x15847E4", Offset = "0x15847E4", VA = "0x15847E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x15850F8", Offset = "0x15850F8", VA = "0x15850F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA40", Offset = "0x8ECA40")]
	private sealed class <LaunchAllSequence>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RocketBoosterControlRoom <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0x1586108", Offset = "0x1586108", VA = "0x1586108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x1586150", Offset = "0x1586150", VA = "0x1586150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1585140", Offset = "0x1585140", VA = "0x1585140")]
		[DebuggerHidden]
		public <LaunchAllSequence>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x158516C", Offset = "0x158516C", VA = "0x158516C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1585170", Offset = "0x1585170", VA = "0x1585170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1586110", Offset = "0x1586110", VA = "0x1586110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ms_launchStarted;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool ms_boostersActivated;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_requiredFolk;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> m_enableWhenOccupied;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ParticleSystem> m_fxBoosterReady;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> m_fxBoosterActive;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F33E0", Offset = "0x8F33E0")]
	private DropInFacility <m_dropIn>k__BackingField;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_boostDownDuration;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_cityMoveSpeed;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Ease m_moveDownEase;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_boostShakeStrength;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_presequenceChatterInterval;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_countdownInterval;

	[Token(Token = "0x4000526")]
	private const string m_presequenceSFXPlay = "rocketending_prepsequence_play";

	[Token(Token = "0x4000527")]
	private const string m_presequenceSFXStop = "rocketending_prepsequence_stop";

	[Token(Token = "0x4000528")]
	private const string m_countdown5SFXPlay = "rocketending_countdown_5_play";

	[Token(Token = "0x4000529")]
	private const string m_countdown5SFXStop = "rocketending_countdown_5_stop";

	[Token(Token = "0x400052A")]
	private const string m_countdown4SFXPlay = "rocketending_countdown_4_play";

	[Token(Token = "0x400052B")]
	private const string m_countdown4SFXStop = "rocketending_countdown_4_stop";

	[Token(Token = "0x400052C")]
	private const string m_countdown3SFXPlay = "rocketending_countdown_3_play";

	[Token(Token = "0x400052D")]
	private const string m_countdown3SFXStop = "rocketending_countdown_3_stop";

	[Token(Token = "0x400052E")]
	private const string m_countdown2SFXPlay = "rocketending_countdown_2_play";

	[Token(Token = "0x400052F")]
	private const string m_countdown2SFXStop = "rocketending_countdown_2_stop";

	[Token(Token = "0x4000530")]
	private const string m_countdown1SFXPlay = "rocketending_countdown_1_play";

	[Token(Token = "0x4000531")]
	private const string m_blastoffSFXPlay = "rocketending_blastoff_play";

	[Token(Token = "0x4000532")]
	private const string m_blastoffSFXStop = "rocketending_blastoff_stop";

	[Token(Token = "0x1700008D")]
	public DropInFacility m_dropIn
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x188D078", Offset = "0x188D078", VA = "0x188D078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFAE8", Offset = "0x8FFAE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x188D080", Offset = "0x188D080", VA = "0x188D080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFAF8", Offset = "0x8FFAF8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool JobActive
	{
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x188D088", Offset = "0x188D088", VA = "0x188D088", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x188D090", Offset = "0x188D090", VA = "0x188D090", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x188D098", Offset = "0x188D098", VA = "0x188D098", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x188D464", Offset = "0x188D464", VA = "0x188D464", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x188D55C", Offset = "0x188D55C", VA = "0x188D55C")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x188D588", Offset = "0x188D588", VA = "0x188D588")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFB08", Offset = "0x8FFB08")]
	private IEnumerator DoPersonEnters(Person p)
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x188D61C", Offset = "0x188D61C", VA = "0x188D61C")]
	private void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x188D6B8", Offset = "0x188D6B8", VA = "0x188D6B8")]
	private void OnEnterInUse()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x188D6C4", Offset = "0x188D6C4", VA = "0x188D6C4")]
	private void OnUpdateInUse()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x188D6C8", Offset = "0x188D6C8", VA = "0x188D6C8")]
	private void OnExitInUse()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x188D6D4", Offset = "0x188D6D4", VA = "0x188D6D4")]
	public void ActivateBooster(bool b)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x188D6F4", Offset = "0x188D6F4", VA = "0x188D6F4")]
	public void AllOccupantsSay(string s)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x188D7C0", Offset = "0x188D7C0", VA = "0x188D7C0")]
	public void AllBoostersAllOccupantsSay(string s)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x188D9B4", Offset = "0x188D9B4", VA = "0x188D9B4")]
	public void RandomOccupantSay(string s)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x188DA60", Offset = "0x188DA60", VA = "0x188DA60")]
	public void AllBoostersRandomOccupantSay(string s)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x188DBC8", Offset = "0x188DBC8", VA = "0x188DBC8")]
	private void MoveThingDownwards(Transform t)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x188DF74", Offset = "0x188DF74", VA = "0x188DF74")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFB68", Offset = "0x8FFB68")]
	public void StartLaunchAllSequence()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x188DFA0", Offset = "0x188DFA0", VA = "0x188DFA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFB80", Offset = "0x8FFB80")]
	private IEnumerator LaunchAllSequence()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x188E018", Offset = "0x188E018", VA = "0x188E018")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFBE0", Offset = "0x8FFBE0")]
	public void DebugBoosterReady()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x188E024", Offset = "0x188E024", VA = "0x188E024")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFBF8", Offset = "0x8FFBF8")]
	public void DebugBoosterNotReady()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x188E030", Offset = "0x188E030", VA = "0x188E030")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFC10", Offset = "0x8FFC10")]
	public void DebugBoosterActive()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x188E040", Offset = "0x188E040", VA = "0x188E040")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFC28", Offset = "0x8FFC28")]
	public void DebugBoosterNotActive()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x188E050", Offset = "0x188E050", VA = "0x188E050")]
	public RocketBoosterControlRoom()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SignAppearance : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_interestItemLoc;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_textSign;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_glow;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_glowIntensity;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_glowAlpha;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_nameText;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_stockText;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x15BD358", Offset = "0x15BD358", VA = "0x15BD358")]
	public void Setup(Interest inter, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x15BD568", Offset = "0x15BD568", VA = "0x15BD568")]
	public SignAppearance()
	{
	}
}
[Token(Token = "0x20000EC")]
public class StaticMappedBuilding<T> : StaticMapped<T> where T : UnityEngine.Component
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> AllBuilt;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Building m_bldg;

	[Token(Token = "0x600052B")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600052C")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600052D")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600052E")]
	private void OnBuilt(Building bldg)
	{
	}

	[Token(Token = "0x600052F")]
	public StaticMappedBuilding()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Warehouse : StaticMapped<Warehouse>
{
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA50", Offset = "0x8ECA50")]
	private sealed class <AllBuilt>d__0 : IEnumerable<Warehouse>, IEnumerable, IEnumerator<Warehouse>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Warehouse <>2__current;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, Warehouse>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x17000095")]
		private Warehouse System.Collections.Generic.IEnumerator<Warehouse>.Current
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x1FCB044", Offset = "0x1FCB044", VA = "0x1FCB044", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x1FCB08C", Offset = "0x1FCB08C", VA = "0x1FCB08C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1FCAD3C", Offset = "0x1FCAD3C", VA = "0x1FCAD3C")]
		[DebuggerHidden]
		public <AllBuilt>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1FCAD74", Offset = "0x1FCAD74", VA = "0x1FCAD74", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1FCADE4", Offset = "0x1FCADE4", VA = "0x1FCADE4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1FCAD90", Offset = "0x1FCAD90", VA = "0x1FCAD90")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1FCB04C", Offset = "0x1FCB04C", VA = "0x1FCB04C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1FCB094", Offset = "0x1FCB094", VA = "0x1FCB094", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Warehouse> System.Collections.Generic.IEnumerable<Warehouse>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1FCB128", Offset = "0x1FCB128", VA = "0x1FCB128", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA60", Offset = "0x8ECA60")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Warehouse <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x1FCB3BC", Offset = "0x1FCB3BC", VA = "0x1FCB3BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0x1FCB404", Offset = "0x1FCB404", VA = "0x1FCB404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1FCB12C", Offset = "0x1FCB12C", VA = "0x1FCB12C")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1FCB158", Offset = "0x1FCB158", VA = "0x1FCB158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1FCB15C", Offset = "0x1FCB15C", VA = "0x1FCB15C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1FCB3C4", Offset = "0x1FCB3C4", VA = "0x1FCB3C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	public float m_scrapCount;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_capacity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_signs;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_scrapBlockPrefab;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_topOfPileLocator;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Building m_bldg;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_scrapPopFX;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_playerGrapWithdrawAmount;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnyObjectSensor m_sensor;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3410", Offset = "0x8F3410")]
	private string m_sfxGetScrap;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_initialised;

	[Token(Token = "0x17000094")]
	public bool IsFull
	{
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x19EA944", Offset = "0x19EA944", VA = "0x19EA944")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x19EA8E8", Offset = "0x19EA8E8", VA = "0x19EA8E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFCE0", Offset = "0x8FFCE0")]
	public static IEnumerable<Warehouse> AllBuilt()
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x19EA954", Offset = "0x19EA954", VA = "0x19EA954")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFD40", Offset = "0x8FFD40")]
	public void DebugDepost10()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x19EAAAC", Offset = "0x19EAAAC", VA = "0x19EAAAC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8FFD58", Offset = "0x8FFD58")]
	public void DebugWithdraw10()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x19EA97C", Offset = "0x19EA97C", VA = "0x19EA97C")]
	public void Deposit(float amtIn, out float remainder)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x19EAAD4", Offset = "0x19EAAD4", VA = "0x19EAAD4")]
	public float Withdraw(float v, out float remainder)
	{
		return default(float);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x19EAC1C", Offset = "0x19EAC1C", VA = "0x19EAC1C")]
	private void UpdateSigns()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x19EADD8", Offset = "0x19EADD8", VA = "0x19EADD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFD70", Offset = "0x8FFD70")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x19EAE50", Offset = "0x19EAE50", VA = "0x19EAE50")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x19EB47C", Offset = "0x19EB47C", VA = "0x19EB47C")]
	public static Warehouse ClosestWarehouseWithScrap(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x19EB68C", Offset = "0x19EB68C", VA = "0x19EB68C")]
	public Warehouse()
	{
	}
}
[Token(Token = "0x20000F0")]
public class CameraMouseControl : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_target;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_moveSpeed;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_rotSpeed;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_lastMousePos;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1A260F4", Offset = "0x1A260F4", VA = "0x1A260F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1A26388", Offset = "0x1A26388", VA = "0x1A26388")]
	public CameraMouseControl()
	{
	}
}
[Token(Token = "0x20000F1")]
public class CharacterModel : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	public enum Emotion
	{
		[Token(Token = "0x400057D")]
		Neutral,
		[Token(Token = "0x400057E")]
		Happy,
		[Token(Token = "0x400057F")]
		Sad,
		[Token(Token = "0x4000580")]
		Surprised
	}

	[Serializable]
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA70", Offset = "0x8ECA70")]
	private sealed class <>c
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__36_0;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__36_1;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__36_2;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__36_3;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__36_4;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, MeshRenderer> <>9__36_5;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<MeshRenderer, bool> <>9__36_6;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Renderer, bool> <>9__36_7;

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x176AF38", Offset = "0x176AF38", VA = "0x176AF38")]
		public <>c()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x176AF40", Offset = "0x176AF40", VA = "0x176AF40")]
		internal bool <Start>b__36_0(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x176AFB0", Offset = "0x176AFB0", VA = "0x176AFB0")]
		internal bool <Start>b__36_1(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x176B020", Offset = "0x176B020", VA = "0x176B020")]
		internal bool <Start>b__36_2(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x176B090", Offset = "0x176B090", VA = "0x176B090")]
		internal bool <Start>b__36_3(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x176B100", Offset = "0x176B100", VA = "0x176B100")]
		internal bool <Start>b__36_4(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x176B170", Offset = "0x176B170", VA = "0x176B170")]
		internal MeshRenderer <Start>b__36_5(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x176B1C4", Offset = "0x176B1C4", VA = "0x176B1C4")]
		internal bool <Start>b__36_6(MeshRenderer s)
		{
			return default(bool);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x176B284", Offset = "0x176B284", VA = "0x176B284")]
		internal bool <Start>b__36_7(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_defaultHead;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_defaultBody;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3448", Offset = "0x8F3448")]
	public Transform m_bodyBone;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_headBone;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_rightHandBone;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_leftHandBone;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Emotion m_currentEmotion;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_minTimeBetweenChanges;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_changedAt;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_duration;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3480", Offset = "0x8F3480")]
	public Transform m_emotionFXLocator;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_HappyFXPrefab;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_sadFXPrefab;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_SurprisedFXPrefab;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem m_currentEmotionFX;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> m_allEmotionFX;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public Color m_skinColour;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_colField;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_hueShiftField;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FloatRange HueShiftRange;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[ReadOnly]
	[SerializeField]
	private float m_hueShift;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Renderer> _renderers;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock _bodyPropBlock;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MaterialPropertyBlock _headPropBlock;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject _head;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Mouth _mouth;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform _hatTransform;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private FolkAnimationController m_charModelAnimationController;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public XXHash m_rand;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer m_bodyRenderer;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[ReadOnly]
	[SerializeField]
	private MeshRenderer[] m_headRenderers;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool m_setMeshColours;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool m_doHueShift;

	[Token(Token = "0x17000099")]
	public Transform HatTransform
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1A29660", Offset = "0x1A29660", VA = "0x1A29660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1A29668", Offset = "0x1A29668", VA = "0x1A29668")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1A2A508", Offset = "0x1A2A508", VA = "0x1A2A508")]
	public void SetOutfit(Interest interest)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1A2A64C", Offset = "0x1A2A64C", VA = "0x1A2A64C")]
	public void SetEmotion(Emotion e, float duration, bool force = false, bool doFX = false)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1A2A838", Offset = "0x1A2A838", VA = "0x1A2A838")]
	public void SetTalking(bool talking)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1A2A88C", Offset = "0x1A2A88C", VA = "0x1A2A88C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1A2AA60", Offset = "0x1A2AA60", VA = "0x1A2AA60")]
	public CharacterModel()
	{
	}
}
[Token(Token = "0x20000F4")]
public class CityBlocker : MonoBehaviour, ICityPiece
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3548", Offset = "0x8F3548")]
	private CityPiecePlacement[] <placements>k__BackingField;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3558", Offset = "0x8F3558")]
	private CityBlockerPlacement[] <blockers>k__BackingField;

	[Token(Token = "0x1700009A")]
	public CityPiecePlacement[] placements
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1A2BBCC", Offset = "0x1A2BBCC", VA = "0x1A2BBCC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFE90", Offset = "0x8FFE90")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1A2BBD4", Offset = "0x1A2BBD4", VA = "0x1A2BBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFEA0", Offset = "0x8FFEA0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1A2BBDC", Offset = "0x1A2BBDC", VA = "0x1A2BBDC", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFEB0", Offset = "0x8FFEB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1A2BBE4", Offset = "0x1A2BBE4", VA = "0x1A2BBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFEC0", Offset = "0x8FFEC0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x1A2BBEC", Offset = "0x1A2BBEC", VA = "0x1A2BBEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1A2BC78", Offset = "0x1A2BC78", VA = "0x1A2BC78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1A2BE18", Offset = "0x1A2BE18", VA = "0x1A2BE18")]
	private void Bake(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1A2BF1C", Offset = "0x1A2BF1C", VA = "0x1A2BF1C")]
	public CityBlocker()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1A2BF24", Offset = "0x1A2BF24", VA = "0x1A2BF24", Slot = "4")]
	private GameObject ICityPiece.get_gameObject()
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1A2BF2C", Offset = "0x1A2BF2C", VA = "0x1A2BF2C", Slot = "5")]
	private int ICityPiece.GetInstanceID()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F5")]
public class CityPiece : MonoBehaviour, Snappable.IDelegate, ICityPiece
{
	[Token(Token = "0x20000F6")]
	public class CityPieceEvent : UnityEvent<CityPiece>
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x176CA0C", Offset = "0x176CA0C", VA = "0x176CA0C")]
		public CityPieceEvent()
		{
		}
	}

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityPieceProperties m_properties;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CityStructure m_cityStructure;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BatchableObject[] m_batchableObjects;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3578", Offset = "0x8F3578")]
	private CityPiecePlacement[] <placements>k__BackingField;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3588", Offset = "0x8F3588")]
	private CityBlockerPlacement[] <blockers>k__BackingField;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BoundsInt[] m_boundsAABB;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Saveable]
	private bool m_isBaked;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_firstBakeComplete;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Snappable.IDelegate m_snappableDelegate;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityPieceEvent OnUnbake;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3? m_previousBakedPosition;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion? m_previousBakedRotation;

	[Token(Token = "0x1700009C")]
	public CityPiecePlacement[] placements
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1A2BFB4", Offset = "0x1A2BFB4", VA = "0x1A2BFB4", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFED0", Offset = "0x8FFED0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1A2BFBC", Offset = "0x1A2BFBC", VA = "0x1A2BFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFEE0", Offset = "0x8FFEE0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1A2BFC4", Offset = "0x1A2BFC4", VA = "0x1A2BFC4", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFEF0", Offset = "0x8FFEF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1A2BFCC", Offset = "0x1A2BFCC", VA = "0x1A2BFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FFF00", Offset = "0x8FFF00")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public bool IsBaked
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1A2BFD4", Offset = "0x1A2BFD4", VA = "0x1A2BFD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1A2BFF4", Offset = "0x1A2BFF4", VA = "0x1A2BFF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1A2C118", Offset = "0x1A2C118", VA = "0x1A2C118")]
	private void Start()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1A2C538", Offset = "0x1A2C538", VA = "0x1A2C538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1A2C5FC", Offset = "0x1A2C5FC", VA = "0x1A2C5FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1A2C600", Offset = "0x1A2C600", VA = "0x1A2C600", Slot = "4")]
	public Snappable.SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1A2D044", Offset = "0x1A2D044", VA = "0x1A2D044", Slot = "5")]
	public Snappable.SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1A2D264", Offset = "0x1A2D264", VA = "0x1A2D264", Slot = "6")]
	public void SnappableShowingPreview(Snappable snappable)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1A2D330", Offset = "0x1A2D330", VA = "0x1A2D330", Slot = "7")]
	public void SnappableInteractionDidBegin(Snappable snappable)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1A2D418", Offset = "0x1A2D418", VA = "0x1A2D418", Slot = "8")]
	public void SnappableInteractionDidEnd(Snappable snappable)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1A2D550", Offset = "0x1A2D550", VA = "0x1A2D550")]
	public void AddInteractionComponents([Optional] Mesh snappablePreviewMesh)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1A2C470", Offset = "0x1A2C470", VA = "0x1A2C470")]
	public void Bake(Vector3 position, Quaternion rotation, bool fullBake = false)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1A2C53C", Offset = "0x1A2C53C", VA = "0x1A2C53C")]
	private void Unbake()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1A2C4B8", Offset = "0x1A2C4B8", VA = "0x1A2C4B8")]
	private void OnSettled()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1A2D6FC", Offset = "0x1A2D6FC", VA = "0x1A2D6FC")]
	private bool CanBakeNavMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1A23DB8", Offset = "0x1A23DB8", VA = "0x1A23DB8")]
	public FastBoundsInt GetBlockerBounds()
	{
		return default(FastBoundsInt);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1A2D71C", Offset = "0x1A2D71C", VA = "0x1A2D71C")]
	public CityPiece()
	{
	}

	[SpecialName]
	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1A2D724", Offset = "0x1A2D724", VA = "0x1A2D724", Slot = "9")]
	private GameObject ICityPiece.get_gameObject()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1A2D72C", Offset = "0x1A2D72C", VA = "0x1A2D72C", Slot = "10")]
	private int ICityPiece.GetInstanceID()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F7")]
public class CityPiecePlacement : CityBlockerPlacement
{
	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECA80", Offset = "0x8ECA80")]
	private sealed class <BlockConnectionLocations>d__7 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private FastBlockMetadata <>2__current;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CityPiecePlacement[] cityPiecePlacements;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CityPiecePlacement[] <>3__cityPiecePlacements;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool sidesOnly;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__sidesOnly;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CityPiecePlacement[] <>7__wrap1;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <>7__wrap2;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CityPiecePlacement <cityPiecePlacement>5__4;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FastBoundsInt <structuredBounds>5__5;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <z>5__6;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int <y>5__7;

		[Token(Token = "0x1700009F")]
		private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x176CF74", Offset = "0x176CF74", VA = "0x176CF74", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(FastBlockMetadata);
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0x176CFC8", Offset = "0x176CFC8", VA = "0x176CFC8", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x176CA58", Offset = "0x176CA58", VA = "0x176CA58")]
		[DebuggerHidden]
		public <BlockConnectionLocations>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x176CA90", Offset = "0x176CA90", VA = "0x176CA90", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x176CA94", Offset = "0x176CA94", VA = "0x176CA94", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x176CF88", Offset = "0x176CF88", VA = "0x176CF88", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x176D030", Offset = "0x176D030", VA = "0x176D030", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x176D0E8", Offset = "0x176D0E8", VA = "0x176D0E8", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_connectionsLeft;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool m_connectionsRight;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool m_connectionsTop;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool m_connectionsBottom;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_connectionsFront;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_connectionsBack;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool _boundsCurrent;

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1A221F0", Offset = "0x1A221F0", VA = "0x1A221F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFF10", Offset = "0x8FFF10")]
	public static IEnumerable<FastBlockMetadata> BlockConnectionLocations(CityPiecePlacement[] cityPiecePlacements, bool sidesOnly = false)
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1A2D734", Offset = "0x1A2D734", VA = "0x1A2D734")]
	public CityPiecePlacement()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECA90", Offset = "0x8ECA90")]
public class CityPieceProperties : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x20000FA")]
	public enum Type
	{
		[Token(Token = "0x40005BD")]
		Generic,
		[Token(Token = "0x40005BE")]
		BuildingHouse,
		[Token(Token = "0x40005BF")]
		BuildingFacility,
		[Token(Token = "0x40005C0")]
		BuildingDropInFacility,
		[Token(Token = "0x40005C1")]
		BuildingCustom
	}

	[Token(Token = "0x20000FB")]
	public enum PowerDetails
	{
		[Token(Token = "0x40005C3")]
		Unpowered,
		[Token(Token = "0x40005C4")]
		NeedsPower,
		[Token(Token = "0x40005C5")]
		GeneratesPower
	}

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type m_pieceType;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F35A8", Offset = "0x8F35A8")]
	public Building.Size m_facilitySize;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F35F4", Offset = "0x8F35F4")]
	public FacilityCategory m_facilityCategory;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F3640", Offset = "0x8F3640")]
	public FacilityDefinition m_facilityDefinition;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_mesh;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AutoSetupBuildingDefaults m_lightingSDFDefaults;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_purchaseCost;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_buildCost;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PowerDetails m_powerDetails;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F368C", Offset = "0x8F368C")]
	public float m_powerConsumption;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F36D8", Offset = "0x8F36D8")]
	public float m_powerGeneration;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool m_designerOnly;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_localisationKeyStem;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_indestructible;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_generatedPrefab;

	[Token(Token = "0x170000A1")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1A2D74C", Offset = "0x1A2D74C", VA = "0x1A2D74C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1A2D754", Offset = "0x1A2D754", VA = "0x1A2D754", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1A2D75C", Offset = "0x1A2D75C", VA = "0x1A2D75C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1A2D784", Offset = "0x1A2D784", VA = "0x1A2D784")]
	public CityPieceProperties()
	{
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECAA0", Offset = "0x8ECAA0")]
public class CityPiecePropertyList : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectWithProbabilityList<CityPieceProperties> m_cityPiecePropertiesWithProbabilities;

	[Token(Token = "0x170000A2")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1A2D78C", Offset = "0x1A2D78C", VA = "0x1A2D78C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1A2D794", Offset = "0x1A2D794", VA = "0x1A2D794", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1A2D79C", Offset = "0x1A2D79C", VA = "0x1A2D79C")]
	public CityPieceProperties Random([Optional] UnityEngine.Object exclude)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1A2D804", Offset = "0x1A2D804", VA = "0x1A2D804")]
	public CityPiecePropertyList()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CityPieceVolume : ScriptableObject
{
	[Token(Token = "0x20000FE")]
	[Flags]
	public enum Edge
	{
		[Token(Token = "0x40005CD")]
		Left = 1,
		[Token(Token = "0x40005CE")]
		Right = 2,
		[Token(Token = "0x40005CF")]
		Top = 4,
		[Token(Token = "0x40005D0")]
		Bottom = 8,
		[Token(Token = "0x40005D1")]
		Front = 0x10,
		[Token(Token = "0x40005D2")]
		Back = 0x20
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public struct VolumeAABB
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bounds m_bounds;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Edge m_connectedEdges;
	}

	[Token(Token = "0x2000100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECAC0", Offset = "0x8ECAC0")]
	private sealed class <BlockLocations>d__6 : IEnumerable<Vector3Int>, IEnumerable, IEnumerator<Vector3Int>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3Int <>2__current;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityPieceVolume <>4__this;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 position;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 <>3__position;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rotation;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VolumeAABB[] <>7__wrap1;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap2;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private BoundsInt.PositionEnumerator <>7__wrap3;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] <>7__wrap4;

		[Token(Token = "0x170000A3")]
		private Vector3Int System.Collections.Generic.IEnumerator<UnityEngine.Vector3Int>.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x15E7958", Offset = "0x15E7958", VA = "0x15E7958", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3Int);
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x15E79A8", Offset = "0x15E79A8", VA = "0x15E79A8", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x15E74C0", Offset = "0x15E74C0", VA = "0x15E74C0")]
		[DebuggerHidden]
		public <BlockLocations>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x15E74F8", Offset = "0x15E74F8", VA = "0x15E74F8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x15E7540", Offset = "0x15E7540", VA = "0x15E7540", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x15E7528", Offset = "0x15E7528", VA = "0x15E7528")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x15E7968", Offset = "0x15E7968", VA = "0x15E7968", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x15E7A10", Offset = "0x15E7A10", VA = "0x15E7A10", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3Int> System.Collections.Generic.IEnumerable<UnityEngine.Vector3Int>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x15E7AD8", Offset = "0x15E7AD8", VA = "0x15E7AD8", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECAD0", Offset = "0x8ECAD0")]
	private sealed class <BlockConnectionLocations>d__7 : IEnumerable<Vector3Int>, IEnumerable, IEnumerator<Vector3Int>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3Int <>2__current;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityPieceVolume <>4__this;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 position;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 <>3__position;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rotation;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VolumeAABB[] <>7__wrap1;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap2;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private BoundsInt.PositionEnumerator <>7__wrap3;

		[Token(Token = "0x170000A5")]
		private Vector3Int System.Collections.Generic.IEnumerator<UnityEngine.Vector3Int>.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x15E733C", Offset = "0x15E733C", VA = "0x15E733C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3Int);
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x15E738C", Offset = "0x15E738C", VA = "0x15E738C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x15E6FD4", Offset = "0x15E6FD4", VA = "0x15E6FD4")]
		[DebuggerHidden]
		public <BlockConnectionLocations>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x15E700C", Offset = "0x15E700C", VA = "0x15E700C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x15E7054", Offset = "0x15E7054", VA = "0x15E7054", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x15E703C", Offset = "0x15E703C", VA = "0x15E703C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x15E734C", Offset = "0x15E734C", VA = "0x15E734C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x15E73F4", Offset = "0x15E73F4", VA = "0x15E73F4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3Int> System.Collections.Generic.IEnumerable<UnityEngine.Vector3Int>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x15E74BC", Offset = "0x15E74BC", VA = "0x15E74BC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VolumeAABB[] m_volumes;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] m_solidBlocks;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] m_connectionPoints;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1A2D80C", Offset = "0x1A2D80C", VA = "0x1A2D80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8FFFE0", Offset = "0x8FFFE0")]
	public IEnumerable<Vector3Int> BlockLocations(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1A2D8D0", Offset = "0x1A2D8D0", VA = "0x1A2D8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900040", Offset = "0x900040")]
	public IEnumerable<Vector3Int> BlockConnectionLocations(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1A2D994", Offset = "0x1A2D994", VA = "0x1A2D994")]
	public static Vector3 StructureLocationToWorldPosition(Vector3Int structureLocation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1A2DAAC", Offset = "0x1A2DAAC", VA = "0x1A2DAAC")]
	private static BoundsInt MakeStructureBounds(Bounds worldBounds, Vector3 position, Quaternion rotation)
	{
		return default(BoundsInt);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1A2DE00", Offset = "0x1A2DE00", VA = "0x1A2DE00")]
	private static Vector3Int MakeStructureLocation(Vector3 location, Vector3 position, Quaternion rotation)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1A2DF24", Offset = "0x1A2DF24", VA = "0x1A2DF24")]
	public CityPieceVolume()
	{
	}
}
[Token(Token = "0x2000102")]
public class CityStructure : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	public enum PlacementQueryResult
	{
		[Token(Token = "0x40005F2")]
		BadPlacement,
		[Token(Token = "0x40005F3")]
		UnconnectedPlacement,
		[Token(Token = "0x40005F4")]
		PossiblePlacement,
		[Token(Token = "0x40005F5")]
		GoodPlacement
	}

	[Token(Token = "0x2000104")]
	public static class Cubes
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 Single;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 Double;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 Window;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Vector3 DoorOffset;
	}

	[Token(Token = "0x2000105")]
	public static class Sign
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Width;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int Height;
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECAE0", Offset = "0x8ECAE0")]
	private sealed class <GetForBounds>d__14 : IEnumerable<BlockMetadata>, IEnumerable, IEnumerator<BlockMetadata>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BlockMetadata <>2__current;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerable<FastVector3Int> positions;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IEnumerable<FastVector3Int> <>3__positions;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CityStructure <>4__this;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IEnumerator<FastVector3Int> <>7__wrap1;

		[Token(Token = "0x170000A7")]
		private BlockMetadata System.Collections.Generic.IEnumerator<City.BlockMetadata>.Current
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x15E7F24", Offset = "0x15E7F24", VA = "0x15E7F24", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(BlockMetadata);
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x15E7F74", Offset = "0x15E7F74", VA = "0x15E7F74", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x15E7ADC", Offset = "0x15E7ADC", VA = "0x15E7ADC")]
		[DebuggerHidden]
		public <GetForBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x15E7B14", Offset = "0x15E7B14", VA = "0x15E7B14", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x15E7BEC", Offset = "0x15E7BEC", VA = "0x15E7BEC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x15E7B30", Offset = "0x15E7B30", VA = "0x15E7B30")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x15E7F34", Offset = "0x15E7F34", VA = "0x15E7F34", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x15E7FDC", Offset = "0x15E7FDC", VA = "0x15E7FDC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<BlockMetadata> System.Collections.Generic.IEnumerable<City.BlockMetadata>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x15E809C", Offset = "0x15E809C", VA = "0x15E809C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxBlocksPerEdge;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuildingBaker _baker;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<long, BlockMetadata> m_blockToMetadata;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<long, long[]> m_cityPieceIDToBlocks;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1A2DF7C", Offset = "0x1A2DF7C", VA = "0x1A2DF7C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1A2E170", Offset = "0x1A2E170", VA = "0x1A2E170")]
	public bool GetBakedMetadata(FastBlockMetadata metadata, out BlockMetadata baked)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1A2E1F0", Offset = "0x1A2E1F0", VA = "0x1A2E1F0")]
	public bool GetBakedMetadata(int x, int y, int z, out BlockMetadata baked)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1A2E28C", Offset = "0x1A2E28C", VA = "0x1A2E28C")]
	public long CalculateBlockLocation(BlockMetadata metadata)
	{
		return default(long);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1A2210C", Offset = "0x1A2210C", VA = "0x1A2210C")]
	public long CalculateBlockLocation(FastBlockMetadata metadata)
	{
		return default(long);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1A2E2A8", Offset = "0x1A2E2A8", VA = "0x1A2E2A8")]
	public long CalculateBlockLocation(Vector3Int position)
	{
		return default(long);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1A21EEC", Offset = "0x1A21EEC", VA = "0x1A21EEC")]
	public long CalculateBlockLocation(FastVector3Int position)
	{
		return default(long);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1A2E278", Offset = "0x1A2E278", VA = "0x1A2E278")]
	public long CalculateBlockLocation(int x, int y, int z)
	{
		return default(long);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1A23D24", Offset = "0x1A23D24", VA = "0x1A23D24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900180", Offset = "0x900180")]
	public IEnumerable<BlockMetadata> GetForBounds(IEnumerable<FastVector3Int> positions)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1A2C7F4", Offset = "0x1A2C7F4", VA = "0x1A2C7F4")]
	public PlacementQueryResult QueryPlacement(CityPiece cityPiece, Vector3 position, Quaternion rotation)
	{
		return default(PlacementQueryResult);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1A2E458", Offset = "0x1A2E458", VA = "0x1A2E458")]
	public bool LocationIsBlocked(GameObject ignore, long blockLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1A2E318", Offset = "0x1A2E318", VA = "0x1A2E318")]
	public bool LocationIsBlocked(BlockMetadata metadata, [Optional] GameObject ignore)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1A2E5F4", Offset = "0x1A2E5F4", VA = "0x1A2E5F4")]
	public static bool MaterialBlocksMaterial(BlockerMaterial locationMaterial, BlockerMaterial queryMaterial)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1A2BEEC", Offset = "0x1A2BEEC", VA = "0x1A2BEEC")]
	public void Bake(ICityPiece cityPiece, Vector3 position, Quaternion rotation, bool fullBake)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1A2D6E0", Offset = "0x1A2D6E0", VA = "0x1A2D6E0")]
	public void Unbake(ICityPiece cityPiece)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1A2E60C", Offset = "0x1A2E60C", VA = "0x1A2E60C")]
	public CityStructure()
	{
	}
}
[Token(Token = "0x2000107")]
public interface ICityPiece
{
	[Token(Token = "0x170000A9")]
	GameObject gameObject
	{
		[Token(Token = "0x60005C7")]
		get;
	}

	[Token(Token = "0x170000AA")]
	CityPiecePlacement[] placements
	{
		[Token(Token = "0x60005C9")]
		get;
	}

	[Token(Token = "0x170000AB")]
	CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x60005CA")]
		get;
	}

	[Token(Token = "0x60005C8")]
	int GetInstanceID();
}
[Token(Token = "0x2000108")]
public class TheCity : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	public struct CityLocationAttributes
	{
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool connected;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool powered;
	}

	[Token(Token = "0x200010A")]
	public struct CityPieceSnappedDetails
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;
	}

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TheCity s_instance;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityStructure m_cityStructure;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalNavMeshBuilder m_navMeshBuilder;

	[Token(Token = "0x170000AC")]
	public static TheCity Instance
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1785EF0", Offset = "0x1785EF0", VA = "0x1785EF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x178602C", Offset = "0x178602C", VA = "0x178602C")]
	public GameObject AddCityPiece(CityPieceProperties properties)
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x178619C", Offset = "0x178619C", VA = "0x178619C")]
	public TheCity()
	{
	}
}
[Token(Token = "0x200010B")]
public class ClickToBuild : MonoBehaviour
{
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_prefab;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_collisionMask;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_model;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_model2;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1A2E76C", Offset = "0x1A2E76C", VA = "0x1A2E76C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1A2EAF4", Offset = "0x1A2EAF4", VA = "0x1A2EAF4")]
	public ClickToBuild()
	{
	}
}
[Token(Token = "0x200010C")]
public class ControllerButtonLocator : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons Button;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1A33020", Offset = "0x1A33020", VA = "0x1A33020")]
	public ControllerButtonLocator()
	{
	}
}
[Token(Token = "0x200010D")]
public class ControllerLocator : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	public enum Hands
	{
		[Token(Token = "0x4000612")]
		Left,
		[Token(Token = "0x4000613")]
		Right
	}

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hands Hand;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1A33028", Offset = "0x1A33028", VA = "0x1A33028")]
	public ControllerLocator()
	{
	}
}
[Token(Token = "0x200010F")]
public class Credits : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECAF0", Offset = "0x8ECAF0")]
	private sealed class <DoReset>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Credits <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x15E86FC", Offset = "0x15E86FC", VA = "0x15E86FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x15E8744", Offset = "0x15E8744", VA = "0x15E8744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x15E852C", Offset = "0x15E852C", VA = "0x15E852C")]
		[DebuggerHidden]
		public <DoReset>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x15E8558", Offset = "0x15E8558", VA = "0x15E8558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x15E855C", Offset = "0x15E855C", VA = "0x15E855C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x15E8704", Offset = "0x15E8704", VA = "0x15E8704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3724", Offset = "0x8F3724")]
	public RectTransform m_creditsContent;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_creditsText;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform m_creditsViewport;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform m_endMarker;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_scroll;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_scrolllSpeed;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_controllerScrollBoost;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_anchoredPos;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F375C", Offset = "0x8F375C")]
	public Button m_creditsFinishedButton;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1A33E14", Offset = "0x1A33E14", VA = "0x1A33E14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900250", Offset = "0x900250")]
	private IEnumerator DoReset()
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1A33E8C", Offset = "0x1A33E8C", VA = "0x1A33E8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1A33EB8", Offset = "0x1A33EB8", VA = "0x1A33EB8")]
	public void Close()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1A33EE4", Offset = "0x1A33EE4", VA = "0x1A33EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1A34094", Offset = "0x1A34094", VA = "0x1A34094")]
	public Credits()
	{
	}
}
[Token(Token = "0x2000111")]
public class DateTimeSpecificEnabler : MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UDateTime m_from;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UDateTime m_to;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x166AB08", Offset = "0x166AB08", VA = "0x166AB08")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x166ABCC", Offset = "0x166ABCC", VA = "0x166ABCC")]
	public DateTimeSpecificEnabler()
	{
	}
}
[Token(Token = "0x2000112")]
public class DeathZone : MonoBehaviour
{
	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x166ABD4", Offset = "0x166ABD4", VA = "0x166ABD4")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x166AD1C", Offset = "0x166AD1C", VA = "0x166AD1C")]
	public DeathZone()
	{
	}
}
[Token(Token = "0x2000113")]
public class Decoration : StaticMapped<Decoration>
{
	[Token(Token = "0x2000114")]
	public enum Placement
	{
		[Token(Token = "0x400062E")]
		Anywhere,
		[Token(Token = "0x400062F")]
		AboveDoor,
		[Token(Token = "0x4000630")]
		BesideDoor,
		[Token(Token = "0x4000631")]
		OnWall,
		[Token(Token = "0x4000632")]
		OnGround,
		[Token(Token = "0x4000633")]
		OnGroundSnapped
	}

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Interest m_interest;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_setEmoji;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] m_setText;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] m_textOptions;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3794", Offset = "0x8F3794")]
	public Placement m_rules;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_preferSignTransform;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_canReparent;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PointAndSnap m_pointAndSnap;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_nameKey;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_textFormat;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_isSetup;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x16763E0", Offset = "0x16763E0", VA = "0x16763E0")]
	public bool HasSpecialInterest()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1676514", Offset = "0x1676514", VA = "0x1676514")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x16768A0", Offset = "0x16768A0", VA = "0x16768A0")]
	private void OnPickup()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x167696C", Offset = "0x167696C", VA = "0x167696C")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1676DFC", Offset = "0x1676DFC", VA = "0x1676DFC")]
	public void OnExplode()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1676C40", Offset = "0x1676C40", VA = "0x1676C40")]
	private void DecorateBuilding()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1676E00", Offset = "0x1676E00", VA = "0x1676E00")]
	private void RemoveFromBuilding()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1676D08", Offset = "0x1676D08", VA = "0x1676D08")]
	private void UpdateParentColliders(Transform target)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1676EC8", Offset = "0x1676EC8", VA = "0x1676EC8")]
	public void Setup(Interest interest, float appeal, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x16771C8", Offset = "0x16771C8", VA = "0x16771C8")]
	public void AutoPlace(Spaceport spaceport, Building b)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1677468", Offset = "0x1677468", VA = "0x1677468")]
	public static Decoration Spawn(List<GameObject> prefabs, Vector3 p, Interest interest)
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1677624", Offset = "0x1677624", VA = "0x1677624")]
	public Decoration()
	{
	}
}
[Token(Token = "0x2000115")]
public class DefenceBubble : MonoBehaviour
{
	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1678AD4", Offset = "0x1678AD4", VA = "0x1678AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1678AD8", Offset = "0x1678AD8", VA = "0x1678AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1678ADC", Offset = "0x1678ADC", VA = "0x1678ADC")]
	public DefenceBubble()
	{
	}
}
[Token(Token = "0x2000116")]
public class Door : SpacefolkWindow
{
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB00", Offset = "0x8ECB00")]
	private sealed class <Open>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x15EE794", Offset = "0x15EE794", VA = "0x15EE794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x15EE7DC", Offset = "0x15EE7DC", VA = "0x15EE7DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x15EE4FC", Offset = "0x15EE4FC", VA = "0x15EE4FC")]
		[DebuggerHidden]
		public <Open>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x15EE528", Offset = "0x15EE528", VA = "0x15EE528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x15EE52C", Offset = "0x15EE52C", VA = "0x15EE52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x15EE79C", Offset = "0x15EE79C", VA = "0x15EE79C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB10", Offset = "0x8ECB10")]
	private sealed class <Close>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0x15EE4AC", Offset = "0x15EE4AC", VA = "0x15EE4AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x15EE4F4", Offset = "0x15EE4F4", VA = "0x15EE4F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x15EE27C", Offset = "0x15EE27C", VA = "0x15EE27C")]
		[DebuggerHidden]
		public <Close>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x15EE2A8", Offset = "0x15EE2A8", VA = "0x15EE2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x15EE2AC", Offset = "0x15EE2AC", VA = "0x15EE2AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x15EE4B4", Offset = "0x15EE4B4", VA = "0x15EE4B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F37CC", Offset = "0x8F37CC")]
	public Color m_unreachableLightColour;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_unreachableIndicator;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_animatesOpenClose;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_doorObject;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_doorOpenAngle;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_doorOpenAngleHatch;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BatchableObject m_doorBatchableObject;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Building m_building;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3804", Offset = "0x8F3804")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxDoorClose;

	[Token(Token = "0x170000AF")]
	public Transform DoorObject
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x173E73C", Offset = "0x173E73C", VA = "0x173E73C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public override FastVector3Int Normal
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x173E7C8", Offset = "0x173E7C8", VA = "0x173E7C8", Slot = "5")]
		get
		{
			return default(FastVector3Int);
		}
	}

	[Token(Token = "0x170000B1")]
	public Building Building
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x173E8CC", Offset = "0x173E8CC", VA = "0x173E8CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x173E980", Offset = "0x173E980", VA = "0x173E980")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x900300", Offset = "0x900300")]
	public void OpenNow()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x173EA38", Offset = "0x173EA38", VA = "0x173EA38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x900318", Offset = "0x900318")]
	public void CloseNow()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x173EAF0", Offset = "0x173EAF0", VA = "0x173EAF0", Slot = "4")]
	public override (Transform, Bounds) GetWorldBlockBounds(Vector3 offset)
	{
		return default((Transform, Bounds));
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x173E9B0", Offset = "0x173E9B0", VA = "0x173E9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900330", Offset = "0x900330")]
	public IEnumerator Open(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x173EA68", Offset = "0x173EA68", VA = "0x173EA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900390", Offset = "0x900390")]
	public IEnumerator Close(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x173ECC0", Offset = "0x173ECC0", VA = "0x173ECC0")]
	public bool IsReachable()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x173ED24", Offset = "0x173ED24", VA = "0x173ED24")]
	public Door()
	{
	}
}
[Token(Token = "0x2000119")]
public class ElectricityArc : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_max_number_on;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_min_number_on;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_actual_number_on;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_max_time;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_min_time;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_time_to_switch;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x17420EC", Offset = "0x17420EC", VA = "0x17420EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1742134", Offset = "0x1742134", VA = "0x1742134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x17424C4", Offset = "0x17424C4", VA = "0x17424C4")]
	public ElectricityArc()
	{
	}
}
[Token(Token = "0x200011A")]
public class EnableDisableCopier : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_source;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_copy;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_invert;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x17424EC", Offset = "0x17424EC", VA = "0x17424EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1742628", Offset = "0x1742628", VA = "0x1742628")]
	private void Start()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1742690", Offset = "0x1742690", VA = "0x1742690")]
	private void OnSourceEnabled(GameObject source)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x17426C8", Offset = "0x17426C8", VA = "0x17426C8")]
	private void OnSourceDisabled(GameObject source)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1742700", Offset = "0x1742700", VA = "0x1742700")]
	public EnableDisableCopier()
	{
	}
}
[Token(Token = "0x200011B")]
public class EstateAgent : MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnDataChanged;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<House> m_housesToCollectFolkFor;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1742E68", Offset = "0x1742E68", VA = "0x1742E68")]
	public int NumHousesInQueue()
	{
		return default(int);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1742EB4", Offset = "0x1742EB4", VA = "0x1742EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x17434E0", Offset = "0x17434E0", VA = "0x17434E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1743024", Offset = "0x1743024", VA = "0x1743024")]
	private void SetupUnownedHouses()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1743748", Offset = "0x1743748", VA = "0x1743748")]
	public bool HasHouseReadyToMoveInto()
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1743820", Offset = "0x1743820", VA = "0x1743820")]
	public bool HasHomelessPeople(out Person first)
	{
		return default(bool);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x17439E0", Offset = "0x17439E0", VA = "0x17439E0")]
	public bool HasAtLeastOneEmptyHouse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1743B94", Offset = "0x1743B94", VA = "0x1743B94")]
	public static int HouseShortage()
	{
		return default(int);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1743CCC", Offset = "0x1743CCC", VA = "0x1743CCC")]
	public House DequeueNextHouse()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1743D20", Offset = "0x1743D20", VA = "0x1743D20")]
	private void NewHouseDecorated(Building bldg, Decoration deco)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1743EC0", Offset = "0x1743EC0", VA = "0x1743EC0")]
	private List<Person> GetAllHomeless()
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1743E30", Offset = "0x1743E30", VA = "0x1743E30")]
	private void SetUpNewlyDecoratedHouse(House newHouse)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x17440B0", Offset = "0x17440B0", VA = "0x17440B0")]
	private bool TryToHomeTheHomeless(House newHouse)
	{
		return default(bool);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x17435E0", Offset = "0x17435E0", VA = "0x17435E0")]
	private void OnAnyConstructionCompleted(Building bldg)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x174428C", Offset = "0x174428C", VA = "0x174428C")]
	public EstateAgent()
	{
	}
}
[Token(Token = "0x200011C")]
public class EventEnableComponent : Triggerable
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour[] m_components;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enable;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1745AA0", Offset = "0x1745AA0", VA = "0x1745AA0", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1745B10", Offset = "0x1745B10", VA = "0x1745B10")]
	public EventEnableComponent()
	{
	}
}
[Token(Token = "0x200011D")]
public class Face : MonoBehaviour
{
	[Token(Token = "0x6000620")]
	[Address(RVA = "0x174C3B0", Offset = "0x174C3B0", VA = "0x174C3B0")]
	public Face()
	{
	}
}
[Token(Token = "0x200011E")]
public enum FacilityCategory
{
	[Token(Token = "0x4000654")]
	None = -1,
	[Token(Token = "0x4000655")]
	Food,
	[Token(Token = "0x4000656")]
	Entertainment,
	[Token(Token = "0x4000657")]
	Health
}
[Token(Token = "0x200011F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECB20", Offset = "0x8ECB20")]
public class FacilityDefinition : ScriptableObject
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] CategoryColour;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] CategoryColourMuted;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string[] CategoryEmoji;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] CategoryStringKey;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F383C", Offset = "0x8F383C")]
	public UnityEngine.Object[] m_customBehaviourOptions;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F3874", Offset = "0x8F3874")]
	public FloatRange m_stayTimeInHours;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] m_nameKeys;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FacilityCategory m_category;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x174FA58", Offset = "0x174FA58", VA = "0x174FA58")]
	public FacilityDefinition()
	{
	}
}
[Token(Token = "0x2000120")]
public class FacilityInfoSign : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_interestLbl;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_capacityLbl;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Building m_bldg;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x174FFD4", Offset = "0x174FFD4", VA = "0x174FFD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1750128", Offset = "0x1750128", VA = "0x1750128")]
	private void UpdateAllDisplay()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x175012C", Offset = "0x175012C", VA = "0x175012C")]
	public void UpdateCapacityDisplay(Person p)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1750220", Offset = "0x1750220", VA = "0x1750220")]
	public FacilityInfoSign()
	{
	}
}
[Token(Token = "0x2000121")]
public class FlatScreenUI : MonoBehaviour
{
	[Token(Token = "0x6000627")]
	[Address(RVA = "0x18A027C", Offset = "0x18A027C", VA = "0x18A027C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900490", Offset = "0x900490")]
	private void Toggle()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x18A02D4", Offset = "0x18A02D4", VA = "0x18A02D4")]
	public FlatScreenUI()
	{
	}
}
[Token(Token = "0x2000122")]
public class PersonDoActivity : ActionTask<Person>
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<ActivityItem> activity;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x19060A8", Offset = "0x19060A8", VA = "0x19060A8", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1906678", Offset = "0x1906678", VA = "0x1906678")]
	private void GoToActivityResult(AgentController.Result r)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1906AE4", Offset = "0x1906AE4", VA = "0x1906AE4")]
	private void ActivityComplete()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1906D38", Offset = "0x1906D38", VA = "0x1906D38", Slot = "17")]
	protected override void OnStop(bool interrupted)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1906DB8", Offset = "0x1906DB8", VA = "0x1906DB8")]
	public PersonDoActivity()
	{
	}
}
[Token(Token = "0x2000123")]
public class PersonDoDropInJob : ActionTask<Person>
{
	[Token(Token = "0x2000124")]
	public interface IJobProviding
	{
		[Token(Token = "0x170000B6")]
		bool JobActive
		{
			[Token(Token = "0x6000632")]
			get;
		}

		[Token(Token = "0x170000B7")]
		bool JobRequiresWellRested
		{
			[Token(Token = "0x6000633")]
			get;
		}
	}

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IJobProviding m_jobProvider;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1906E04", Offset = "0x1906E04", VA = "0x1906E04", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1906E88", Offset = "0x1906E88", VA = "0x1906E88", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x19071DC", Offset = "0x19071DC", VA = "0x19071DC", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x190725C", Offset = "0x190725C", VA = "0x190725C")]
	public PersonDoDropInJob()
	{
	}
}
[Token(Token = "0x2000125")]
public class PersonDoParty : ActionTask<Person>
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> m_partyTime;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastTalkTime;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x19072A8", Offset = "0x19072A8", VA = "0x19072A8", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1907430", Offset = "0x1907430", VA = "0x1907430", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x19074B0", Offset = "0x19074B0", VA = "0x19074B0")]
	public PersonDoParty()
	{
	}
}
[Token(Token = "0x2000126")]
public class PersonDroppedOnDoor : ConditionTask<Person>
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x190752C", Offset = "0x190752C", VA = "0x190752C", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1907694", Offset = "0x1907694", VA = "0x1907694")]
	public PersonDroppedOnDoor()
	{
	}
}
[Token(Token = "0x2000127")]
public class PersonFindAppealingHouse : ConditionTask<Person>
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1908C4C", Offset = "0x1908C4C", VA = "0x1908C4C", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1908E48", Offset = "0x1908E48", VA = "0x1908E48")]
	public PersonFindAppealingHouse()
	{
	}
}
[Token(Token = "0x2000128")]
public class PersonFindJob : ConditionTask<Person>
{
	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<FolkJobs.JobTypes> jobType;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Building> building;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x19091A4", Offset = "0x19091A4", VA = "0x19091A4", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1909474", Offset = "0x1909474", VA = "0x1909474")]
	public PersonFindJob()
	{
	}
}
[Token(Token = "0x2000129")]
public class PersonGetScrap : ActionTask<Person>
{
	[Token(Token = "0x200012A")]
	private enum State
	{
		[Token(Token = "0x4000678")]
		Idle,
		[Token(Token = "0x4000679")]
		Searching,
		[Token(Token = "0x400067A")]
		FoundScrap,
		[Token(Token = "0x400067B")]
		GoingForScrap,
		[Token(Token = "0x400067C")]
		NoScrapAvailable
	}

	[Serializable]
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB30", Offset = "0x8ECB30")]
	private sealed class <>c
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<(Warehouse, Door, ScrapCoin, float)> <>9__13_0;

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x16BEA48", Offset = "0x16BEA48", VA = "0x16BEA48")]
		public <>c()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x16BEA50", Offset = "0x16BEA50", VA = "0x16BEA50")]
		internal int <SearchAndSortScrapByDistanceCR>b__13_0((Warehouse, Door, ScrapCoin, float) a, (Warehouse, Door, ScrapCoin, float) b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB40", Offset = "0x8ECB40")]
	private sealed class <SearchAndSortScrapByDistanceCR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersonGetScrap <>4__this;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, Warehouse>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x16BF598", Offset = "0x16BF598", VA = "0x16BF598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x16BF5E0", Offset = "0x16BF5E0", VA = "0x16BF5E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x16BEA60", Offset = "0x16BEA60", VA = "0x16BEA60")]
		[DebuggerHidden]
		public <SearchAndSortScrapByDistanceCR>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x16BEA8C", Offset = "0x16BEA8C", VA = "0x16BEA8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x16BEAFC", Offset = "0x16BEAFC", VA = "0x16BEAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x16BEAA8", Offset = "0x16BEAA8", VA = "0x16BEAA8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x16BF5A0", Offset = "0x16BF5A0", VA = "0x16BF5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool CanGetFromYard;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool MagicScrapFromWarehouseToHand;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string CantGetScrapStringKey;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string ScrapWentMissingStringKey;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Warehouse m_targetWarehouse;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Door m_targetDoor;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ScrapCoin m_targetCoin;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_targetPos;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<(Warehouse, Door, ScrapCoin, float)> m_scrapLoc;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine cr;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x190AABC", Offset = "0x190AABC", VA = "0x190AABC")]
	private PersonGetScrap()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x190B008", Offset = "0x190B008", VA = "0x190B008", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x190B060", Offset = "0x190B060", VA = "0x190B060", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x190B0B4", Offset = "0x190B0B4", VA = "0x190B0B4")]
	private float PathLengthSqTo(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x190B264", Offset = "0x190B264", VA = "0x190B264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9004D8", Offset = "0x9004D8")]
	private IEnumerator SearchAndSortScrapByDistanceCR()
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x190ABAC", Offset = "0x190ABAC", VA = "0x190ABAC")]
	private void InitStateMachine()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x190B2DC", Offset = "0x190B2DC", VA = "0x190B2DC")]
	private void Enter_Idle()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x190B2E0", Offset = "0x190B2E0", VA = "0x190B2E0")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x190B338", Offset = "0x190B338", VA = "0x190B338")]
	private void Exit_Idle()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x190B33C", Offset = "0x190B33C", VA = "0x190B33C")]
	private void Enter_Searching()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x190B394", Offset = "0x190B394", VA = "0x190B394")]
	private void Update_Searching()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x190B398", Offset = "0x190B398", VA = "0x190B398")]
	private void Exit_Searching()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x190B39C", Offset = "0x190B39C", VA = "0x190B39C")]
	private void Enter_FoundScrap()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x190B3A0", Offset = "0x190B3A0", VA = "0x190B3A0")]
	private void Update_FoundScrap()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x190B61C", Offset = "0x190B61C", VA = "0x190B61C")]
	private void Exit_FoundScrap()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x190B620", Offset = "0x190B620", VA = "0x190B620")]
	private void Enter_GoingForScrap()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x190B624", Offset = "0x190B624", VA = "0x190B624")]
	private void Update_GoingForScrap()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x190B9C4", Offset = "0x190B9C4", VA = "0x190B9C4")]
	private void Exit_GoingForScrap()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x190B9C8", Offset = "0x190B9C8", VA = "0x190B9C8")]
	private void Enter_NoScrapAvailable()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x190B9CC", Offset = "0x190B9CC", VA = "0x190B9CC")]
	private void Update_NoScrapAvailable()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x190BA34", Offset = "0x190BA34", VA = "0x190BA34")]
	private void Exit_NoScrapAvailable()
	{
	}
}
[Token(Token = "0x200012D")]
public class PersonGoPickUpItem : ActionTask<Person>
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<HoldableItem> m_itemParam;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x190BA38", Offset = "0x190BA38", VA = "0x190BA38", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x190BA98", Offset = "0x190BA98", VA = "0x190BA98")]
	private bool SetOutForItem(HoldableItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x190BCA0", Offset = "0x190BCA0", VA = "0x190BCA0")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x190BFB4", Offset = "0x190BFB4", VA = "0x190BFB4", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x190C060", Offset = "0x190C060", VA = "0x190C060")]
	public PersonGoPickUpItem()
	{
	}
}
[Token(Token = "0x200012E")]
public class PersonGotoBuilding : ActionTask<Person>
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Door m_targetDoor;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x190C218", Offset = "0x190C218", VA = "0x190C218", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x190C514", Offset = "0x190C514", VA = "0x190C514")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x190C758", Offset = "0x190C758", VA = "0x190C758", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x190C75C", Offset = "0x190C75C", VA = "0x190C75C")]
	public PersonGotoBuilding()
	{
	}
}
[Token(Token = "0x200012F")]
public class PersonGotoDoor : ActionTask<Person>
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Door> door;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Door m_targetDoor;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x190C7A8", Offset = "0x190C7A8", VA = "0x190C7A8", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x190C808", Offset = "0x190C808", VA = "0x190C808")]
	private bool SetOutForDoor(Door d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x190CBB4", Offset = "0x190CBB4", VA = "0x190CBB4")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x190CF18", Offset = "0x190CF18", VA = "0x190CF18", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x190CF1C", Offset = "0x190CF1C", VA = "0x190CF1C")]
	public PersonGotoDoor()
	{
	}
}
[Token(Token = "0x2000130")]
public class PersonHasMetHappinessGoal : ConditionTask<Person>
{
	[Token(Token = "0x600066A")]
	[Address(RVA = "0x190D010", Offset = "0x190D010", VA = "0x190D010", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x190D018", Offset = "0x190D018", VA = "0x190D018")]
	public PersonHasMetHappinessGoal()
	{
	}
}
[Token(Token = "0x2000131")]
public class PersonIsGivenHP : ConditionTask<Person>
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Interest> interest;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<FacilityCategory> category;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x190DAC4", Offset = "0x190DAC4", VA = "0x190DAC4", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x190DB9C", Offset = "0x190DB9C", VA = "0x190DB9C")]
	public PersonIsGivenHP()
	{
	}
}
[Token(Token = "0x2000132")]
public class PersonReadyToDoJob : ConditionTask<Person>
{
	[Token(Token = "0x600066E")]
	[Address(RVA = "0x190E644", Offset = "0x190E644", VA = "0x190E644", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x190E774", Offset = "0x190E774", VA = "0x190E774")]
	public PersonReadyToDoJob()
	{
	}
}
[Token(Token = "0x2000133")]
public class PersonReceiveHP : ActionTask<Person>
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Interest> interest;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<FacilityCategory> category;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_duration;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x190E7C0", Offset = "0x190E7C0", VA = "0x190E7C0", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x190E880", Offset = "0x190E880", VA = "0x190E880", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x190E8C8", Offset = "0x190E8C8", VA = "0x190E8C8", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x190E930", Offset = "0x190E930", VA = "0x190E930")]
	public PersonReceiveHP()
	{
	}
}
[Token(Token = "0x2000134")]
public class ScenarioIsEndgame : ConditionTask<Person>
{
	[Token(Token = "0x6000674")]
	[Address(RVA = "0x15B5338", Offset = "0x15B5338", VA = "0x15B5338", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x15B53EC", Offset = "0x15B53EC", VA = "0x15B53EC")]
	public ScenarioIsEndgame()
	{
	}
}
[Token(Token = "0x2000135")]
public abstract class FolkAbility : MonoBehaviour
{
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB50", Offset = "0x8ECB50")]
	private sealed class <WaitForPersonInit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAbility <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x15F3564", Offset = "0x15F3564", VA = "0x15F3564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x15F35AC", Offset = "0x15F35AC", VA = "0x15F35AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x15F34AC", Offset = "0x15F34AC", VA = "0x15F34AC")]
		[DebuggerHidden]
		public <WaitForPersonInit>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x15F34D8", Offset = "0x15F34D8", VA = "0x15F34D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x15F34DC", Offset = "0x15F34DC", VA = "0x15F34DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x15F356C", Offset = "0x15F356C", VA = "0x15F356C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public Person Person;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string NameKey;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> AttachedObjects;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] AttachPrefabs;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BehaviourTree BehaviourTree;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, string> boneLUT;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x18A15A4", Offset = "0x18A15A4", VA = "0x18A15A4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x18A16E0", Offset = "0x18A16E0", VA = "0x18A16E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900588", Offset = "0x900588")]
	private IEnumerator WaitForPersonInit()
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x18A1758", Offset = "0x18A1758", VA = "0x18A1758", Slot = "5")]
	protected virtual void PersonInitialized()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x18A175C", Offset = "0x18A175C", VA = "0x18A175C", Slot = "6")]
	public virtual void BecomeActive()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x18A177C", Offset = "0x18A177C", VA = "0x18A177C", Slot = "7")]
	public virtual void BecomeInactive()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x18A178C", Offset = "0x18A178C", VA = "0x18A178C", Slot = "8")]
	public virtual bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x18A1794", Offset = "0x18A1794", VA = "0x18A1794", Slot = "9")]
	public virtual void Begin()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x18A1798", Offset = "0x18A1798", VA = "0x18A1798", Slot = "10")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9005E8", Offset = "0x9005E8")]
	public virtual void Do()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x18A179C", Offset = "0x18A179C", VA = "0x18A179C", Slot = "11")]
	public virtual bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x18A17A4", Offset = "0x18A17A4", VA = "0x18A17A4", Slot = "12")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x18A17A8", Offset = "0x18A17A8", VA = "0x18A17A8")]
	public void InitMeshes()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x18A1C3C", Offset = "0x18A1C3C", VA = "0x18A1C3C", Slot = "13")]
	protected virtual void AttachObject(Transform t)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x18A176C", Offset = "0x18A176C", VA = "0x18A176C")]
	private void EnableAttachedObjects(bool b)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x18A1FD4", Offset = "0x18A1FD4", VA = "0x18A1FD4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x900600", Offset = "0x900600")]
	public void DebugShowMeshes()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x18A1FE4", Offset = "0x18A1FE4", VA = "0x18A1FE4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x900618", Offset = "0x900618")]
	public void DebugHideMeshes()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x18A1FF4", Offset = "0x18A1FF4", VA = "0x18A1FF4")]
	protected FolkAbility()
	{
	}
}
[Token(Token = "0x2000137")]
public class FolkAbilityBirthdayParty : FolkAbility
{
	[Token(Token = "0x2000138")]
	private enum State
	{
		[Token(Token = "0x40006A3")]
		Idle,
		[Token(Token = "0x40006A4")]
		GetReady,
		[Token(Token = "0x40006A5")]
		Party,
		[Token(Token = "0x40006A6")]
		CleanUp
	}

	[Serializable]
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB60", Offset = "0x8ECB60")]
	private sealed class <>c
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__17_0;

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x15F3618", Offset = "0x15F3618", VA = "0x15F3618")]
		public <>c()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x15F3620", Offset = "0x15F3620", VA = "0x15F3620")]
		internal bool <PartyHard>b__17_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem m_particles;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public double m_partyDurationHrs;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double m_partyEndTime;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_partyInProgress;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_nextUpdate;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Person> m_partyGoers;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State m_state;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F38BC", Offset = "0x8F38BC")]
	public string m_sfxBirthday;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x18A2050", Offset = "0x18A2050", VA = "0x18A2050", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x18A2084", Offset = "0x18A2084", VA = "0x18A2084", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x18A23BC", Offset = "0x18A23BC", VA = "0x18A23BC", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x18A23C4", Offset = "0x18A23C4", VA = "0x18A23C4", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x18A23EC", Offset = "0x18A23EC", VA = "0x18A23EC")]
	private void LetsGetThisPartyStarted()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x18A2654", Offset = "0x18A2654", VA = "0x18A2654")]
	private void PartyHard()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x18A2C40", Offset = "0x18A2C40", VA = "0x18A2C40")]
	private void DeathOfAParty()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x18A2E3C", Offset = "0x18A2E3C", VA = "0x18A2E3C", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x18A3058", Offset = "0x18A3058", VA = "0x18A3058")]
	public FolkAbilityBirthdayParty()
	{
	}
}
[Token(Token = "0x200013A")]
public class FolkAbilityBuild : FolkAbility
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float BuildSpeedFactor;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x18A3118", Offset = "0x18A3118", VA = "0x18A3118", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x18A311C", Offset = "0x18A311C", VA = "0x18A311C")]
	private void Update()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x18A3180", Offset = "0x18A3180", VA = "0x18A3180")]
	public FolkAbilityBuild()
	{
	}
}
[Token(Token = "0x200013B")]
public class FolkAbilityCarryScrap : FolkAbility
{
	[Token(Token = "0x600069B")]
	[Address(RVA = "0x18A318C", Offset = "0x18A318C", VA = "0x18A318C")]
	private void Update()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x18A31B8", Offset = "0x18A31B8", VA = "0x18A31B8", Slot = "13")]
	protected override void AttachObject(Transform t)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x18A3240", Offset = "0x18A3240", VA = "0x18A3240")]
	public FolkAbilityCarryScrap()
	{
	}
}
[Token(Token = "0x200013C")]
public class FolkAbilityDigForTreasure : FolkAbility
{
	[Token(Token = "0x200013D")]
	private enum State
	{
		[Token(Token = "0x40006C2")]
		Idle,
		[Token(Token = "0x40006C3")]
		Digging,
		[Token(Token = "0x40006C4")]
		Settle,
		[Token(Token = "0x40006C5")]
		OpeningTreasure,
		[Token(Token = "0x40006C6")]
		TidyUp,
		[Token(Token = "0x40006C7")]
		Cancel
	}

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_doingIt;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_nextUpdate;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_searchDurationSecs;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_digDurationSecs;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_settleDurationSecs;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_openTreasureDurationSecs;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_tidyUpDurationSecs;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_hrsBetweenDigs;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_digVfx;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_treasureChest;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_VfxTreasureOpenPrefab;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F38F4", Offset = "0x8F38F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F38F4", Offset = "0x8F38F4")]
	public float m_chanceToFindScrap;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FloatRange m_scrapToFind;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] m_objectsToFind;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animation m_digAnim;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationClip m_digAnimClip;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3948", Offset = "0x8F3948")]
	public string m_sfxDig;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxOpenChest;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject m_foundItem;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string m_toSay;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x18A3244", Offset = "0x18A3244", VA = "0x18A3244", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x18A37B4", Offset = "0x18A37B4", VA = "0x18A37B4", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x18A37FC", Offset = "0x18A37FC", VA = "0x18A37FC", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x18A3804", Offset = "0x18A3804", VA = "0x18A3804", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x18A3858", Offset = "0x18A3858", VA = "0x18A3858")]
	private void OnExitedBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x18A3888", Offset = "0x18A3888", VA = "0x18A3888", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x18A3894", Offset = "0x18A3894", VA = "0x18A3894", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x18A390C", Offset = "0x18A390C", VA = "0x18A390C", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x18A3358", Offset = "0x18A3358", VA = "0x18A3358")]
	private void InitStateMachine()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x18A3A78", Offset = "0x18A3A78", VA = "0x18A3A78")]
	private void Enter_Idle()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x18A3A7C", Offset = "0x18A3A7C", VA = "0x18A3A7C")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x18A3AE8", Offset = "0x18A3AE8", VA = "0x18A3AE8")]
	private void Exit_Idle()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x18A3AEC", Offset = "0x18A3AEC", VA = "0x18A3AEC")]
	private Vector3 GetDigPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x18A3B6C", Offset = "0x18A3B6C", VA = "0x18A3B6C")]
	private void Enter_Digging()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x18A3D9C", Offset = "0x18A3D9C", VA = "0x18A3D9C")]
	private void Update_Digging()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x18A3F38", Offset = "0x18A3F38", VA = "0x18A3F38")]
	private void Exit_Digging()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x18A4000", Offset = "0x18A4000", VA = "0x18A4000")]
	private void Enter_Settle()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x18A4004", Offset = "0x18A4004", VA = "0x18A4004")]
	private void Update_Settle()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x18A408C", Offset = "0x18A408C", VA = "0x18A408C")]
	private void Exit_Settle()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x18A4090", Offset = "0x18A4090", VA = "0x18A4090")]
	private void Enter_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x18A4514", Offset = "0x18A4514", VA = "0x18A4514")]
	private void Update_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x18A459C", Offset = "0x18A459C", VA = "0x18A459C")]
	private void Exit_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x18A4778", Offset = "0x18A4778", VA = "0x18A4778")]
	private void Enter_TidyUp()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x18A477C", Offset = "0x18A477C", VA = "0x18A477C")]
	private void Update_TidyUp()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x18A4804", Offset = "0x18A4804", VA = "0x18A4804")]
	private void Exit_TidyUp()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x18A48F8", Offset = "0x18A48F8", VA = "0x18A48F8")]
	public FolkAbilityDigForTreasure()
	{
	}
}
[Token(Token = "0x200013E")]
public class FolkAbilityEfficientBuilder : FolkAbility
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScrapUseMultiplier;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x18A4A10", Offset = "0x18A4A10", VA = "0x18A4A10")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x18A4A40", Offset = "0x18A4A40", VA = "0x18A4A40")]
	public FolkAbilityEfficientBuilder()
	{
	}
}
[Token(Token = "0x200013F")]
public class FolkAbilityGiveOutCovetedItem : FolkAbility
{
	[Token(Token = "0x2000140")]
	private enum State
	{
		[Token(Token = "0x40006D4")]
		Idle,
		[Token(Token = "0x40006D5")]
		GetReady,
		[Token(Token = "0x40006D6")]
		Party,
		[Token(Token = "0x40006D7")]
		CleanUp
	}

	[Serializable]
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB70", Offset = "0x8ECB70")]
	private sealed class <>c
	{
		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__11_0;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<HappinessGoal> <>9__15_0;

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x15F3700", Offset = "0x15F3700", VA = "0x15F3700")]
		public <>c()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x15F3708", Offset = "0x15F3708", VA = "0x15F3708")]
		internal bool <WantsToDo>b__11_0(HappinessGoal x)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x15F3784", Offset = "0x15F3784", VA = "0x15F3784")]
		internal bool <Do>b__15_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem m_particles;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_nextUpdate;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public double m_activityDurationHrs;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double m_activityEndTime;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_activityInProgress;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Person> m_participants;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private State m_state;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x18A4A4C", Offset = "0x18A4A4C", VA = "0x18A4A4C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x18A4A50", Offset = "0x18A4A50", VA = "0x18A4A50", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x18A4A84", Offset = "0x18A4A84", VA = "0x18A4A84", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x18A4F74", Offset = "0x18A4F74", VA = "0x18A4F74", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x18A4F7C", Offset = "0x18A4F7C", VA = "0x18A4F7C", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x18A57A8", Offset = "0x18A57A8", VA = "0x18A57A8", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x18A58CC", Offset = "0x18A58CC", VA = "0x18A58CC")]
	public FolkAbilityGiveOutCovetedItem()
	{
	}
}
[Token(Token = "0x2000142")]
public class FolkAbilityGrabAsteroid : FolkAbility
{
	[Token(Token = "0x2000143")]
	public enum States
	{
		[Token(Token = "0x40006E9")]
		Idle,
		[Token(Token = "0x40006EA")]
		Casting,
		[Token(Token = "0x40006EB")]
		Reeling
	}

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F3980", Offset = "0x8F3980")]
	public Transform Hook;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReelSpeed;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CastSpeed;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinHookDist;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxHookDist;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float HookTimer;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float HookDuration;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ElasticLine Line;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform TargetHand;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Asteroid> AsteroidsInRange;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Asteroid reelingInScrap;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F39B8", Offset = "0x8F39B8")]
	private States <State>k__BackingField;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve YOffsetCurve;

	[Token(Token = "0x170000BC")]
	public States State
	{
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x18A5968", Offset = "0x18A5968", VA = "0x18A5968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900680", Offset = "0x900680")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x18A5970", Offset = "0x18A5970", VA = "0x18A5970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900690", Offset = "0x900690")]
		private set
		{
		}
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x18A5978", Offset = "0x18A5978", VA = "0x18A5978", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x18A5A08", Offset = "0x18A5A08", VA = "0x18A5A08", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x18A5A88", Offset = "0x18A5A88", VA = "0x18A5A88", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x18A5A9C", Offset = "0x18A5A9C", VA = "0x18A5A9C", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x18A5B68", Offset = "0x18A5B68", VA = "0x18A5B68")]
	private void DoIdle()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x18A5E40", Offset = "0x18A5E40", VA = "0x18A5E40")]
	private void DoCasting()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x18A6028", Offset = "0x18A6028", VA = "0x18A6028")]
	private void DoReeling()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x18A615C", Offset = "0x18A615C", VA = "0x18A615C")]
	private void FaceScrap()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x18A62F4", Offset = "0x18A62F4", VA = "0x18A62F4")]
	private bool LineReeledIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x18A6388", Offset = "0x18A6388", VA = "0x18A6388")]
	private void ReelLineIn()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x18A599C", Offset = "0x18A599C", VA = "0x18A599C")]
	private void HideLine()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x18A6288", Offset = "0x18A6288", VA = "0x18A6288")]
	private void ShowLine()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x18A64E8", Offset = "0x18A64E8", VA = "0x18A64E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x18A655C", Offset = "0x18A655C", VA = "0x18A655C")]
	private void DropAnyAsteroids()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x18A6998", Offset = "0x18A6998", VA = "0x18A6998")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x18A6A98", Offset = "0x18A6A98", VA = "0x18A6A98")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x18A6BD4", Offset = "0x18A6BD4", VA = "0x18A6BD4")]
	public FolkAbilityGrabAsteroid()
	{
	}
}
[Token(Token = "0x2000144")]
public class FolkAbilityGrabScrap : FolkAbility
{
	[Token(Token = "0x2000145")]
	public enum States
	{
		[Token(Token = "0x40006F5")]
		Idle,
		[Token(Token = "0x40006F6")]
		Casting,
		[Token(Token = "0x40006F7")]
		Reeling
	}

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F39C8", Offset = "0x8F39C8")]
	public Transform Hook;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReelSpeed;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CastSpeed;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinHookDist;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ElasticLine Line;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ScrapCoin> scrapInRange;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ScrapCoin reelingInScrap;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private States State;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x18A6DD8", Offset = "0x18A6DD8", VA = "0x18A6DD8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x18A6F04", Offset = "0x18A6F04", VA = "0x18A6F04")]
	private void OnItemHeld(HoldableItem item)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x18A7120", Offset = "0x18A7120", VA = "0x18A7120", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x18A71B4", Offset = "0x18A71B4", VA = "0x18A71B4", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x18A71C8", Offset = "0x18A71C8", VA = "0x18A71C8", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x18A75E8", Offset = "0x18A75E8", VA = "0x18A75E8")]
	private bool LineReeledIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x18A767C", Offset = "0x18A767C", VA = "0x18A767C")]
	private void ReelLineIn()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x18A6EAC", Offset = "0x18A6EAC", VA = "0x18A6EAC")]
	private void HideLine()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x18A7590", Offset = "0x18A7590", VA = "0x18A7590")]
	private void ShowLine()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x18A77DC", Offset = "0x18A77DC", VA = "0x18A77DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x18A7850", Offset = "0x18A7850", VA = "0x18A7850")]
	private void DropAnyScrap()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x18A7914", Offset = "0x18A7914", VA = "0x18A7914")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x18A7A40", Offset = "0x18A7A40", VA = "0x18A7A40")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x18A7B7C", Offset = "0x18A7B7C", VA = "0x18A7B7C")]
	public FolkAbilityGrabScrap()
	{
	}
}
[Token(Token = "0x2000146")]
public class FolkAbilityHPBurst : FolkAbility
{
	[Token(Token = "0x2000147")]
	private enum State
	{
		[Token(Token = "0x4000708")]
		Idle,
		[Token(Token = "0x4000709")]
		StartingUp,
		[Token(Token = "0x400070A")]
		GettingReady,
		[Token(Token = "0x400070B")]
		GiveOutHP,
		[Token(Token = "0x400070C")]
		CoolDown,
		[Token(Token = "0x400070D")]
		DoneForToday
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_maxFolk;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_dailyQuota;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_remainingQuota;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FacilityCategory m_category;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private State m_state;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_lookingForGoodSpotDuration;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_timeBetweenSearches;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_gettingReadyDuration;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_coolDownDuration;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_nextActionTime;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_vfxPrefab;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_onCompleteManyKey;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_onCompleteOneKey;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Person> m_folkToBoost;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x18A7C14", Offset = "0x18A7C14", VA = "0x18A7C14", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x18A7C18", Offset = "0x18A7C18", VA = "0x18A7C18", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x18A7C64", Offset = "0x18A7C64", VA = "0x18A7C64", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x18A8058", Offset = "0x18A8058", VA = "0x18A8058", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x18A7D10", Offset = "0x18A7D10", VA = "0x18A7D10")]
	public List<Person> FillFolkToBoostList()
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x18A8074", Offset = "0x18A8074", VA = "0x18A8074", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x18A85B4", Offset = "0x18A85B4", VA = "0x18A85B4")]
	public FolkAbilityHPBurst()
	{
	}
}
[Token(Token = "0x2000148")]
public class FolkAbilityProcessScrap : FolkAbility
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScrapBonusFactor;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x18A86A4", Offset = "0x18A86A4", VA = "0x18A86A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x18A86D4", Offset = "0x18A86D4", VA = "0x18A86D4")]
	public FolkAbilityProcessScrap()
	{
	}
}
[Token(Token = "0x2000149")]
public class FolkAbilityProtectionBubble : FolkAbility
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float ProtectionFactor;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x18A86E0", Offset = "0x18A86E0", VA = "0x18A86E0")]
	public float GetProtectionFactor()
	{
		return default(float);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x18A8714", Offset = "0x18A8714", VA = "0x18A8714")]
	public FolkAbilityProtectionBubble()
	{
	}
}
[Token(Token = "0x200014A")]
public class FolkAbilityRestock : FolkAbility
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FacilityCategory m_category;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_vfxPrefab;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x18A8720", Offset = "0x18A8720", VA = "0x18A8720", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x18A87EC", Offset = "0x18A87EC", VA = "0x18A87EC")]
	private void OnExitedBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x18A8960", Offset = "0x18A8960", VA = "0x18A8960")]
	public FolkAbilityRestock()
	{
	}
}
[Token(Token = "0x200014B")]
public class FolkAbilityRun : FolkAbility
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float SpeedFactor;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentController m_agentController;

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x18A8964", Offset = "0x18A8964", VA = "0x18A8964", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x18A8A08", Offset = "0x18A8A08", VA = "0x18A8A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x18A8A98", Offset = "0x18A8A98", VA = "0x18A8A98")]
	public FolkAbilityRun()
	{
	}
}
[Token(Token = "0x200014C")]
public class CovetThing : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	public enum Category
	{
		[Token(Token = "0x400071E")]
		SpecificThing,
		[Token(Token = "0x400071F")]
		InterestItem
	}

	[Token(Token = "0x200014E")]
	public enum Response
	{
		[Token(Token = "0x4000721")]
		Null = -1,
		[Token(Token = "0x4000722")]
		Good,
		[Token(Token = "0x4000723")]
		OK,
		[Token(Token = "0x4000724")]
		Bad
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Saveable]
	public Category m_category;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F3A20", Offset = "0x8F3A20")]
	[Saveable]
	public string m_specificPrefabGUID;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject m_specificPrefab;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F3A9C", Offset = "0x8F3A9C")]
	public Interest m_interest;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Person m_person;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3AEC", Offset = "0x8F3AEC")]
	private bool <m_hasThing>k__BackingField;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Saveable]
	public bool m_everHadThing;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnItemChanged;

	[Token(Token = "0x170000BD")]
	public bool m_hasThing
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1A33030", Offset = "0x1A33030", VA = "0x1A33030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9006A0", Offset = "0x9006A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1A33038", Offset = "0x1A33038", VA = "0x1A33038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9006B0", Offset = "0x9006B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1A33044", Offset = "0x1A33044", VA = "0x1A33044")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1A33208", Offset = "0x1A33208", VA = "0x1A33208")]
	public void Start()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1A332EC", Offset = "0x1A332EC", VA = "0x1A332EC")]
	public void Randomise()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1A33398", Offset = "0x1A33398", VA = "0x1A33398")]
	private void AssignCategory(Category category)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1A33438", Offset = "0x1A33438", VA = "0x1A33438")]
	public string GetInfo()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1A33638", Offset = "0x1A33638", VA = "0x1A33638")]
	public Response CheckItem(HoldableItem item)
	{
		return default(Response);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1A3382C", Offset = "0x1A3382C", VA = "0x1A3382C")]
	private void GetItem(HoldableItem item)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1A33A68", Offset = "0x1A33A68", VA = "0x1A33A68")]
	private void PlayerTakesItem(HoldableItem item)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1A33D58", Offset = "0x1A33D58", VA = "0x1A33D58")]
	public CovetThing()
	{
	}
}
[Token(Token = "0x200014F")]
public class FolkAnimationController : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	public enum States
	{
		[Token(Token = "0x4000750")]
		Idle,
		[Token(Token = "0x4000751")]
		Walking,
		[Token(Token = "0x4000752")]
		Climbing,
		[Token(Token = "0x4000753")]
		Building,
		[Token(Token = "0x4000754")]
		PickedUp,
		[Token(Token = "0x4000755")]
		Activity,
		[Token(Token = "0x4000756")]
		Creating,
		[Token(Token = "0x4000757")]
		Talking,
		[Token(Token = "0x4000758")]
		Floating,
		[Token(Token = "0x4000759")]
		Dancing,
		[Token(Token = "0x400075A")]
		Cheering,
		[Token(Token = "0x400075B")]
		GoingThroughDoor,
		[Token(Token = "0x400075C")]
		Sitting
	}

	[Token(Token = "0x2000151")]
	public enum Emotions
	{
		[Token(Token = "0x400075E")]
		Normal,
		[Token(Token = "0x400075F")]
		Creative,
		[Token(Token = "0x4000760")]
		Happy,
		[Token(Token = "0x4000761")]
		Sad,
		[Token(Token = "0x4000762")]
		Bored,
		[Token(Token = "0x4000763")]
		Tired,
		[Token(Token = "0x4000764")]
		Hungry
	}

	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB80", Offset = "0x8ECB80")]
	private sealed class <Start>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAnimationController <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x15F3E9C", Offset = "0x15F3E9C", VA = "0x15F3E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0x15F3EE4", Offset = "0x15F3EE4", VA = "0x15F3EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x15F3800", Offset = "0x15F3800", VA = "0x15F3800")]
		[DebuggerHidden]
		public <Start>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x15F382C", Offset = "0x15F382C", VA = "0x15F382C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x15F3830", Offset = "0x15F3830", VA = "0x15F3830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x15F3EA4", Offset = "0x15F3EA4", VA = "0x15F3EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_crossFadeDuration;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animation m_animator;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshAnimatorBase m_meshAnimator;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_animWalk;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_animIdle;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string m_animHappy;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string m_animSad;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string m_animClimbing;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string m_animSitting;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string m_animBuilding;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string m_animPickedUp;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string m_animCreating;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string m_animCreativeWalk;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string m_animCreativeIdle;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string m_animSadWalk;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string m_animSadIdle;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string m_animBoredWalk;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private string m_animBoredIdle;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private string m_animTiredWalk;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string m_animTiredIdle;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string m_animHungryWalk;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private string m_animHungryIdle;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private string m_animHappyWalk;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private string m_animHappyIdle;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private string m_animTalk;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private string m_animFloat;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private string m_animCheer;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private string m_animDance1;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private string m_animDance2;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private string m_animDance3;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[ReadOnly]
	[SerializeField]
	private States m_state;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	[ReadOnly]
	private Emotions m_emotion;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] animDurations;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string m_animActivity;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Action postOneshotCallback;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float oneshotFinishesAt;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool m_debug;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int[] m_cachedIndices;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float m_moveSpeed;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float m_buildSpeed;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool m_isInitialized;

	[Token(Token = "0x170000BE")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x18A8AA4", Offset = "0x18A8AA4", VA = "0x18A8AA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x18A8AAC", Offset = "0x18A8AAC", VA = "0x18A8AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9006C0", Offset = "0x9006C0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x18A8B24", Offset = "0x18A8B24", VA = "0x18A8B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x18A8D24", Offset = "0x18A8D24", VA = "0x18A8D24")]
	public bool SetState(States state, bool forceInterrupt = false, bool forceChange = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x18A8EEC", Offset = "0x18A8EEC", VA = "0x18A8EEC")]
	private bool UpdateAnimation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x18A9690", Offset = "0x18A9690", VA = "0x18A9690")]
	public bool SetEmotion(Emotions emotion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x18A964C", Offset = "0x18A964C", VA = "0x18A964C")]
	private float GetAnimSpeed(States state)
	{
		return default(float);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x18A9678", Offset = "0x18A9678", VA = "0x18A9678")]
	private float GetAnimStartTime(States state)
	{
		return default(float);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x18A8EC8", Offset = "0x18A8EC8", VA = "0x18A8EC8")]
	private bool IsInterrubtible(States state)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x18A96C0", Offset = "0x18A96C0", VA = "0x18A96C0")]
	public void SetMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x18A96C8", Offset = "0x18A96C8", VA = "0x18A96C8")]
	public void SetBuildSpeed(float speed)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x18A956C", Offset = "0x18A956C", VA = "0x18A956C")]
	private int GetAnimIndex(States state, Emotions emotion)
	{
		return default(int);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x18A93F8", Offset = "0x18A93F8", VA = "0x18A93F8")]
	private string GetAnimName(States state, Emotions emotion)
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x18A96D0", Offset = "0x18A96D0", VA = "0x18A96D0")]
	public void SetPickedUp(bool pickedUp)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x18A96DC", Offset = "0x18A96DC", VA = "0x18A96DC")]
	private void ToggleState(States state, bool on)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x18A970C", Offset = "0x18A970C", VA = "0x18A970C")]
	public void SetFloating(bool floating)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x18A9718", Offset = "0x18A9718", VA = "0x18A9718")]
	public void DoActivityAnim(AnimationClip animClip)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x18A9750", Offset = "0x18A9750", VA = "0x18A9750")]
	public void DoActivityAnim(string animName)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x18A98F8", Offset = "0x18A98F8", VA = "0x18A98F8")]
	public void StopActivityAnim()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x18A3D90", Offset = "0x18A3D90", VA = "0x18A3D90")]
	public void SetCreating(bool creating)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x18A9918", Offset = "0x18A9918", VA = "0x18A9918")]
	public void SetClimbing(bool climbing)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x18A9924", Offset = "0x18A9924", VA = "0x18A9924")]
	public void SetSitting(bool sitting)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x18A9930", Offset = "0x18A9930", VA = "0x18A9930")]
	public bool ShouldntContinue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x18A9940", Offset = "0x18A9940", VA = "0x18A9940")]
	public void PlayOneshot(States state, [Optional] Action then)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x18A99C8", Offset = "0x18A99C8", VA = "0x18A99C8")]
	public void SetBuilding(bool building)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x18A99D4", Offset = "0x18A99D4", VA = "0x18A99D4")]
	public void SetTalking(bool talking)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x18A2E30", Offset = "0x18A2E30", VA = "0x18A2E30")]
	public void SetDancing(bool dancing)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x18A99E0", Offset = "0x18A99E0", VA = "0x18A99E0")]
	public void SetCheering(bool cheering)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x18A99EC", Offset = "0x18A99EC", VA = "0x18A99EC")]
	public FolkAnimationController()
	{
	}
}
[Token(Token = "0x2000153")]
public class FolkAnimationObjectHider : StateMachineBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string GameObjectName;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject go;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x18A9A08", Offset = "0x18A9A08", VA = "0x18A9A08", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x18A9AE0", Offset = "0x18A9AE0", VA = "0x18A9AE0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x18A9B44", Offset = "0x18A9B44", VA = "0x18A9B44")]
	public FolkAnimationObjectHider()
	{
	}
}
[Token(Token = "0x2000154")]
public class FolkHead : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 hat_bone_pos;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 hat_bone_rot;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool show_hat;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh hat_mesh;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x18ADD40", Offset = "0x18ADD40", VA = "0x18ADD40")]
	public void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x18ADD48", Offset = "0x18ADD48", VA = "0x18ADD48")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x18ADE90", Offset = "0x18ADE90", VA = "0x18ADE90")]
	public FolkHead()
	{
	}
}
[Token(Token = "0x2000155")]
public class FolkHappiness : StaticMapped<FolkHappiness>
{
	[Token(Token = "0x2000156")]
	public delegate void voidDelegate();

	[Token(Token = "0x2000157")]
	public class HappinessTarget
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_value;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_debugDescription;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public voidDelegate OnTargetHit;

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x15F4ADC", Offset = "0x15F4ADC", VA = "0x15F4ADC")]
		public HappinessTarget()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECB90", Offset = "0x8ECB90")]
	private sealed class <>c
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HappinessGoal> <>9__35_0;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<HappinessGoal> <>9__35_1;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<HappinessGoal> <>9__35_2;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<HappinessTarget> <>9__58_0;

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x15F4A34", Offset = "0x15F4A34", VA = "0x15F4A34")]
		public <>c()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x15F4A3C", Offset = "0x15F4A3C", VA = "0x15F4A3C")]
		internal int <Start>b__35_0(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x15F4A64", Offset = "0x15F4A64", VA = "0x15F4A64")]
		internal int <Start>b__35_1(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x15F4A8C", Offset = "0x15F4A8C", VA = "0x15F4A8C")]
		internal int <Start>b__35_2(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x15F4AB4", Offset = "0x15F4AB4", VA = "0x15F4AB4")]
		internal int <AddHappinessTarget>b__58_0(HappinessTarget a, HappinessTarget b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Person m_person;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public int LatestHappiness;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3D7C", Offset = "0x8F3D7C")]
	private List<HappinessGoal> <m_allGoals>k__BackingField;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3D8C", Offset = "0x8F3D8C")]
	private int <m_allGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3D9C", Offset = "0x8F3D9C")]
	private List<HappinessGoal> <m_lifetimeGoals>k__BackingField;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DAC", Offset = "0x8F3DAC")]
	private int <m_lifetimeGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DBC", Offset = "0x8F3DBC")]
	private List<HappinessGoal> <m_dailyGoals>k__BackingField;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DCC", Offset = "0x8F3DCC")]
	private int <m_dailyGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HappinessGoal.HGEvent OnAnyHappinessGoalChanged;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityEvent OnGlobalHappinessChanged;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool m_staticsInitialised;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<HappinessTarget> ms_happinessTargets;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DDC", Offset = "0x8F3DDC")]
	private static int <GlobalTotalHappiness>k__BackingField;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DEC", Offset = "0x8F3DEC")]
	private static int <GlobalMaxTotalHappiness>k__BackingField;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DFC", Offset = "0x8F3DFC")]
	private static float <GlobalNormalisedHappiness>k__BackingField;

	[Token(Token = "0x170000C1")]
	public List<HappinessGoal> m_allGoals
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x18AB60C", Offset = "0x18AB60C", VA = "0x18AB60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900770", Offset = "0x900770")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x18AB614", Offset = "0x18AB614", VA = "0x18AB614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900780", Offset = "0x900780")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public int m_allGoalsCountNotHidden
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x18AB61C", Offset = "0x18AB61C", VA = "0x18AB61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900790", Offset = "0x900790")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x18AB624", Offset = "0x18AB624", VA = "0x18AB624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007A0", Offset = "0x9007A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public List<HappinessGoal> m_lifetimeGoals
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x18AB62C", Offset = "0x18AB62C", VA = "0x18AB62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007B0", Offset = "0x9007B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x18AB634", Offset = "0x18AB634", VA = "0x18AB634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007C0", Offset = "0x9007C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public int m_lifetimeGoalsCountNotHidden
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x18AB63C", Offset = "0x18AB63C", VA = "0x18AB63C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007D0", Offset = "0x9007D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x18AB644", Offset = "0x18AB644", VA = "0x18AB644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007E0", Offset = "0x9007E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public List<HappinessGoal> m_dailyGoals
	{
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x18AB64C", Offset = "0x18AB64C", VA = "0x18AB64C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9007F0", Offset = "0x9007F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x18AB654", Offset = "0x18AB654", VA = "0x18AB654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900800", Offset = "0x900800")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public int m_dailyGoalsCountNotHidden
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x18AB65C", Offset = "0x18AB65C", VA = "0x18AB65C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900810", Offset = "0x900810")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x18AB664", Offset = "0x18AB664", VA = "0x18AB664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900820", Offset = "0x900820")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public static int GlobalTotalHappiness
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x18AD3EC", Offset = "0x18AD3EC", VA = "0x18AD3EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900844", Offset = "0x900844")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x18AD450", Offset = "0x18AD450", VA = "0x18AD450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900854", Offset = "0x900854")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public static int GlobalMaxTotalHappiness
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x18AD4B8", Offset = "0x18AD4B8", VA = "0x18AD4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900864", Offset = "0x900864")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x18AD51C", Offset = "0x18AD51C", VA = "0x18AD51C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900874", Offset = "0x900874")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static float GlobalNormalisedHappiness
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x18AD584", Offset = "0x18AD584", VA = "0x18AD584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900884", Offset = "0x900884")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x18AD5E8", Offset = "0x18AD5E8", VA = "0x18AD5E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900894", Offset = "0x900894")]
		private set
		{
		}
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x18AB66C", Offset = "0x18AB66C", VA = "0x18AB66C")]
	public int GetNumLifetimeGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x18AB71C", Offset = "0x18AB71C", VA = "0x18AB71C")]
	public int GetNumLifetimeGoalsNotComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x18AB774", Offset = "0x18AB774", VA = "0x18AB774")]
	public int GetNumDailyGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x18AB824", Offset = "0x18AB824", VA = "0x18AB824")]
	public int GetNumDailyGoalsNotComplete()
	{
		return default(int);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x18AB87C", Offset = "0x18AB87C", VA = "0x18AB87C")]
	public int GetNumAllGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x18AB92C", Offset = "0x18AB92C", VA = "0x18AB92C")]
	public float GetNormalisedAllGoalsComplete()
	{
		return default(float);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x18ABA00", Offset = "0x18ABA00", VA = "0x18ABA00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x18ABAC8", Offset = "0x18ABAC8", VA = "0x18ABAC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x18AC5D4", Offset = "0x18AC5D4", VA = "0x18AC5D4")]
	public void CheckAll()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x18AC678", Offset = "0x18AC678", VA = "0x18AC678")]
	private void OnWakeUp(Person p)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x18AC71C", Offset = "0x18AC71C", VA = "0x18AC71C")]
	private void OnHappinessGoalStateChange(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x18ACF80", Offset = "0x18ACF80", VA = "0x18ACF80")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x900830", Offset = "0x900830")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x18AD0B8", Offset = "0x18AD0B8", VA = "0x18AD0B8")]
	private static void InitStatics()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x18AD2C0", Offset = "0x18AD2C0", VA = "0x18AD2C0")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x18AA234", Offset = "0x18AA234", VA = "0x18AA234")]
	public static void AddHappinessTarget(int value, string debugDescription, voidDelegate onTargetHit)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x18AC7E4", Offset = "0x18AC7E4", VA = "0x18AC7E4")]
	public void UpdateGlobalHappinessCounts()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x18AD658", Offset = "0x18AD658", VA = "0x18AD658")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9008A4", Offset = "0x9008A4")]
	public void MaxOutHappiness()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x18AD774", Offset = "0x18AD774", VA = "0x18AD774")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9008BC", Offset = "0x9008BC")]
	public void ResetHappiness()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x18AD890", Offset = "0x18AD890", VA = "0x18AD890")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9008D4", Offset = "0x9008D4")]
	public static void AllFolkMaxOutHappiness()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x18ADBB4", Offset = "0x18ADBB4", VA = "0x18ADBB4")]
	public FolkHappiness()
	{
	}
}
[Token(Token = "0x2000159")]
public class HG_CityHasEnoughFacility : FacilityHappinessGoal
{
	[Token(Token = "0x600075D")]
	[Address(RVA = "0x193DCD4", Offset = "0x193DCD4", VA = "0x193DCD4")]
	public HG_CityHasEnoughFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x193DDF0", Offset = "0x193DDF0", VA = "0x193DDF0", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x193DE00", Offset = "0x193DE00", VA = "0x193DE00", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x193DF08", Offset = "0x193DF08", VA = "0x193DF08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90091C", Offset = "0x90091C")]
	private void <.ctor>b__0_0(Facility x)
	{
	}
}
[Token(Token = "0x200015A")]
public class Check_HG_CitHasEnoughFacility : HG_Check_Facility<HG_CityHasEnoughFacility>
{
	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1A2B174", Offset = "0x1A2B174", VA = "0x1A2B174")]
	public Check_HG_CitHasEnoughFacility()
	{
	}
}
[Token(Token = "0x200015B")]
public class HG_GotCovetedItem : HappinessGoal
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CovetThing m_covet;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x193DF14", Offset = "0x193DF14", VA = "0x193DF14")]
	public HG_GotCovetedItem(Person p, float importance)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x193E120", Offset = "0x193E120", VA = "0x193E120", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x193E1E0", Offset = "0x193E1E0", VA = "0x193E1E0", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x193E2B8", Offset = "0x193E2B8", VA = "0x193E2B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90092C", Offset = "0x90092C")]
	private void <.ctor>b__1_0()
	{
	}
}
[Token(Token = "0x200015C")]
public class Check_HG_GotCovetedItem : HG_Check<HG_GotCovetedItem>
{
	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1A2B1C0", Offset = "0x1A2B1C0", VA = "0x1A2B1C0")]
	public Check_HG_GotCovetedItem()
	{
	}
}
[Token(Token = "0x200015D")]
public class HG_HasSlept : HappinessGoal
{
	[Token(Token = "0x6000767")]
	[Address(RVA = "0x193E2C4", Offset = "0x193E2C4", VA = "0x193E2C4")]
	public HG_HasSlept(Person p, float importance)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x193E3A4", Offset = "0x193E3A4", VA = "0x193E3A4")]
	private void OnWakeUp(Person p)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x193E3AC", Offset = "0x193E3AC", VA = "0x193E3AC", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x193E3B4", Offset = "0x193E3B4", VA = "0x193E3B4", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200015E")]
public class Check_HG_HasSlept : HG_Check<HG_HasSlept>
{
	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1A2B20C", Offset = "0x1A2B20C", VA = "0x1A2B20C")]
	public Check_HG_HasSlept()
	{
	}
}
[Token(Token = "0x200015F")]
public class HG_HouseIsDecorated : HappinessGoal
{
	[Token(Token = "0x600076C")]
	[Address(RVA = "0x193E3F8", Offset = "0x193E3F8", VA = "0x193E3F8")]
	public HG_HouseIsDecorated(Person p, float importance)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x193E5EC", Offset = "0x193E5EC", VA = "0x193E5EC")]
	public void OnMovedIntoHouse(Person p)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x193E748", Offset = "0x193E748", VA = "0x193E748", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x193E7AC", Offset = "0x193E7AC", VA = "0x193E7AC", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x193E7F0", Offset = "0x193E7F0", VA = "0x193E7F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90093C", Offset = "0x90093C")]
	private void <.ctor>b__0_0(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x193E7FC", Offset = "0x193E7FC", VA = "0x193E7FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90094C", Offset = "0x90094C")]
	private void <.ctor>b__0_1(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x193E808", Offset = "0x193E808", VA = "0x193E808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90095C", Offset = "0x90095C")]
	private void <OnMovedIntoHouse>b__1_0(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x193E814", Offset = "0x193E814", VA = "0x193E814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90096C", Offset = "0x90096C")]
	private void <OnMovedIntoHouse>b__1_1(Building b, Decoration d)
	{
	}
}
[Token(Token = "0x2000160")]
public class Check_HG_HouseIsDecorated : HG_Check<HG_HouseIsDecorated>
{
	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1A2B258", Offset = "0x1A2B258", VA = "0x1A2B258")]
	public Check_HG_HouseIsDecorated()
	{
	}
}
[Token(Token = "0x2000161")]
public class HG_HouseIsDefended : HappinessGoal
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_isVerySafe;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_couldBeSafe;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x193E820", Offset = "0x193E820", VA = "0x193E820")]
	public HG_HouseIsDefended(Person p, float importance)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x193E930", Offset = "0x193E930", VA = "0x193E930", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x193EBE8", Offset = "0x193EBE8", VA = "0x193EBE8", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x193EC5C", Offset = "0x193EC5C", VA = "0x193EC5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90097C", Offset = "0x90097C")]
	private void <.ctor>b__2_0(Building x)
	{
	}
}
[Token(Token = "0x2000162")]
public class Check_HG_HouseIsDefended : HG_Check<HG_HouseIsDefended>
{
	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1A2B2A4", Offset = "0x1A2B2A4", VA = "0x1A2B2A4")]
	public Check_HG_HouseIsDefended()
	{
	}
}
[Token(Token = "0x2000163")]
public class HG_HouseOwned : HappinessGoal
{
	[Token(Token = "0x600077A")]
	[Address(RVA = "0x193EC68", Offset = "0x193EC68", VA = "0x193EC68")]
	public HG_HouseOwned(Person p, float importance)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x193EE2C", Offset = "0x193EE2C", VA = "0x193EE2C")]
	private void OnBuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x193EF00", Offset = "0x193EF00", VA = "0x193EF00")]
	public void OnMovedIntoHouse(Person p)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x193EFD4", Offset = "0x193EFD4", VA = "0x193EFD4", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x193F018", Offset = "0x193F018", VA = "0x193F018", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x2000164")]
public class Check_HG_HouseOwned : HG_Check<HG_HouseOwned>
{
	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1A2B2F0", Offset = "0x1A2B2F0", VA = "0x1A2B2F0")]
	public Check_HG_HouseOwned()
	{
	}
}
[Token(Token = "0x2000165")]
public class HG_NeigbourhoodHasFacility : FacilityHappinessGoal
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_neighbourhoodRadius;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x193F08C", Offset = "0x193F08C", VA = "0x193F08C")]
	public HG_NeigbourhoodHasFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x193F538", Offset = "0x193F538", VA = "0x193F538")]
	private void BuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x193F60C", Offset = "0x193F60C", VA = "0x193F60C")]
	private void ConstructionComplete(Building b)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x193F894", Offset = "0x193F894", VA = "0x193F894")]
	private void OnDecorationAdded(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x193FA0C", Offset = "0x193FA0C", VA = "0x193FA0C", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x193F984", Offset = "0x193F984", VA = "0x193F984")]
	private bool CheckBuilding(Building b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x193F4A0", Offset = "0x193F4A0", VA = "0x193F4A0")]
	private bool HasInterestingFacility(Building b, out Facility facility)
	{
		return default(bool);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x193F764", Offset = "0x193F764", VA = "0x193F764")]
	private bool CheckFacility(Facility f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x193FB68", Offset = "0x193FB68", VA = "0x193FB68", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x193FCA0", Offset = "0x193FCA0", VA = "0x193FCA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90098C", Offset = "0x90098C")]
	private void <.ctor>b__1_0(Person x)
	{
	}
}
[Token(Token = "0x2000166")]
public class Check_HG_NeighbourhoodHasFacility : HG_Check_Facility<HG_NeigbourhoodHasFacility>
{
	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1A2B33C", Offset = "0x1A2B33C", VA = "0x1A2B33C")]
	public Check_HG_NeighbourhoodHasFacility()
	{
	}
}
[Token(Token = "0x2000167")]
public class HG_SeenMyInterest : HappinessGoal
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_requiredCount;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x193FCAC", Offset = "0x193FCAC", VA = "0x193FCAC")]
	public HG_SeenMyInterest(Person p, int count, float importance)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x193FD74", Offset = "0x193FD74", VA = "0x193FD74", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x193FDBC", Offset = "0x193FDBC", VA = "0x193FDBC", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x193FED8", Offset = "0x193FED8", VA = "0x193FED8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90099C", Offset = "0x90099C")]
	private void <.ctor>b__1_0()
	{
	}
}
[Token(Token = "0x2000168")]
public class HG_Check_HasSlept : HG_Check<HG_HasSlept>
{
	[Token(Token = "0x600078F")]
	[Address(RVA = "0x193DBF0", Offset = "0x193DBF0", VA = "0x193DBF0")]
	public HG_Check_HasSlept()
	{
	}
}
[Token(Token = "0x2000169")]
public class HG_VisitedFacility : FacilityHappinessGoal
{
	[Token(Token = "0x6000790")]
	[Address(RVA = "0x193FEE4", Offset = "0x193FEE4", VA = "0x193FEE4")]
	public HG_VisitedFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x193FFD0", Offset = "0x193FFD0", VA = "0x193FFD0")]
	private void OnEnteredBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x19400AC", Offset = "0x19400AC", VA = "0x19400AC", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x19400B4", Offset = "0x19400B4", VA = "0x19400B4", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200016A")]
public class HG_Check_VisitedFacility : HG_Check_Facility<HG_VisitedFacility>
{
	[Token(Token = "0x6000794")]
	[Address(RVA = "0x193DC3C", Offset = "0x193DC3C", VA = "0x193DC3C")]
	public HG_Check_VisitedFacility()
	{
	}
}
[Token(Token = "0x200016B")]
public class HG_VisitedFacilityForMyInterest : FacilityHappinessGoal
{
	[Token(Token = "0x6000795")]
	[Address(RVA = "0x19401BC", Offset = "0x19401BC", VA = "0x19401BC")]
	public HG_VisitedFacilityForMyInterest(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x19402A8", Offset = "0x19402A8", VA = "0x19402A8")]
	private void OnEnteredBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x19403B8", Offset = "0x19403B8", VA = "0x19403B8", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x19403C0", Offset = "0x19403C0", VA = "0x19403C0", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200016C")]
public class HG_Check_VisitedFacilityForMyInterest : HG_Check_Facility<HG_VisitedFacilityForMyInterest>
{
	[Token(Token = "0x6000799")]
	[Address(RVA = "0x193DC88", Offset = "0x193DC88", VA = "0x193DC88")]
	public HG_Check_VisitedFacilityForMyInterest()
	{
	}
}
[Token(Token = "0x200016D")]
public class HG_WentToBirthdayParty : HappinessGoal
{
	[Token(Token = "0x600079A")]
	[Address(RVA = "0x194063C", Offset = "0x194063C", VA = "0x194063C")]
	public HG_WentToBirthdayParty(Person p, float importance)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1940664", Offset = "0x1940664", VA = "0x1940664", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1940698", Offset = "0x1940698", VA = "0x1940698", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200016E")]
public class Check_HG_WentToBirthdayParty : HG_Check<HG_WentToBirthdayParty>
{
	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1A2B388", Offset = "0x1A2B388", VA = "0x1A2B388")]
	public Check_HG_WentToBirthdayParty()
	{
	}
}
[Token(Token = "0x200016F")]
public abstract class HappinessGoal
{
	[Token(Token = "0x2000170")]
	public class HGEvent : UnityEvent<HappinessGoal>
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x15F5F60", Offset = "0x15F5F60", VA = "0x15F5F60")]
		public HGEvent()
		{
		}
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_importance;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Person m_person;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E0C", Offset = "0x8F3E0C")]
	private bool <m_completed>k__BackingField;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HGEvent OnStatusChanged;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_hidden;

	[Token(Token = "0x170000CA")]
	protected bool m_completed
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x19488D0", Offset = "0x19488D0", VA = "0x19488D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9009AC", Offset = "0x9009AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x19488D8", Offset = "0x19488D8", VA = "0x19488D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9009BC", Offset = "0x9009BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public bool IsComplete
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x193DDF8", Offset = "0x193DDF8", VA = "0x193DDF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x193E154", Offset = "0x193E154", VA = "0x193E154")]
	public void SetComplete(bool b)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x193E054", Offset = "0x193E054", VA = "0x193E054")]
	protected HappinessGoal(Person p, float importance)
	{
	}

	[Token(Token = "0x60007A3")]
	public abstract bool Check();

	[Token(Token = "0x60007A4")]
	public abstract string GetTitle();
}
[Token(Token = "0x2000171")]
public abstract class FacilityHappinessGoal : HappinessGoal
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E1C", Offset = "0x8F3E1C")]
	private FacilityCategory <m_category>k__BackingField;

	[Token(Token = "0x170000CC")]
	public FacilityCategory m_category
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x174FF98", Offset = "0x174FF98", VA = "0x174FF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9009CC", Offset = "0x9009CC")]
		get
		{
			return default(FacilityCategory);
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x174FFA0", Offset = "0x174FFA0", VA = "0x174FFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9009DC", Offset = "0x9009DC")]
		protected set
		{
		}
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x174FFA8", Offset = "0x174FFA8", VA = "0x174FFA8")]
	protected FacilityHappinessGoal(Person p, FacilityCategory cat, float importance)
	{
	}
}
[Token(Token = "0x2000172")]
public abstract class HG_Check<T> : ConditionTask<Person> where T : HappinessGoal
{
	[Serializable]
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECBA0", Offset = "0x8ECBA0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<HappinessGoal, bool> <>9__2_0;

		[Token(Token = "0x60007AF")]
		public <>c()
		{
		}

		[Token(Token = "0x60007B0")]
		internal bool <FindGoal>b__2_0(HappinessGoal g)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HappinessGoal Goal;

	[Token(Token = "0x60007A9")]
	protected override string OnInit()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	protected virtual HappinessGoal FindGoal()
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	protected HappinessGoal SearchAllGoals(Func<HappinessGoal, bool> predicate)
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AD")]
	protected HG_Check()
	{
	}
}
[Token(Token = "0x2000174")]
public abstract class HG_Check_Facility<T> : HG_Check<T> where T : FacilityHappinessGoal
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FacilityCategory m_category;

	[Token(Token = "0x60007B1")]
	protected override HappinessGoal FindGoal()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	protected HG_Check_Facility()
	{
	}

	[Token(Token = "0x60007B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9009EC", Offset = "0x9009EC")]
	private bool <FindGoal>b__1_0(HappinessGoal g)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECBB0", Offset = "0x8ECBB0")]
public class FolkJob : ScriptableObject
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HatPrefab;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BehaviourTree BehaviourTree;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FolkJobs.JobTypes JobType;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x18ADEA8", Offset = "0x18ADEA8", VA = "0x18ADEA8")]
	public FolkJob()
	{
	}
}
[Token(Token = "0x2000176")]
public class FolkJobs : MonoBehaviour
{
	[Token(Token = "0x2000177")]
	public enum JobTypes
	{
		[Token(Token = "0x400079F")]
		None,
		[Token(Token = "0x40007A0")]
		Building,
		[Token(Token = "0x40007A1")]
		ProcessingScrap,
		[Token(Token = "0x40007A2")]
		RocketLab,
		[Token(Token = "0x40007A3")]
		MovingScrap,
		[Token(Token = "0x40007A4")]
		Defending
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FolkJob[] AllJobs;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] JobAssignSFX;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	[Saveable]
	public JobTypes currentJobType;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FolkJob currentJob;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Person person;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentHat;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool wantToQuitJob;

	[Token(Token = "0x170000CD")]
	public JobTypes CurrentJobType
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x18ADEB0", Offset = "0x18ADEB0", VA = "0x18ADEB0")]
		get
		{
			return default(JobTypes);
		}
	}

	[Token(Token = "0x170000CE")]
	public string InfoString
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x18ADEB8", Offset = "0x18ADEB8", VA = "0x18ADEB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x18ADF6C", Offset = "0x18ADF6C", VA = "0x18ADF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x18ADFC8", Offset = "0x18ADFC8", VA = "0x18ADFC8")]
	public void SetCurrent(JobTypes job)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x18AE298", Offset = "0x18AE298", VA = "0x18AE298")]
	private void OnPlayerGivesItem_Builder(HoldableItem hi)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x18AE3C4", Offset = "0x18AE3C4", VA = "0x18AE3C4")]
	public static bool JobRequiresHasSlept(JobTypes job)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x18AE3E0", Offset = "0x18AE3E0", VA = "0x18AE3E0")]
	public FolkJobs()
	{
	}
}
[Token(Token = "0x2000178")]
public class Mouth : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC10", Offset = "0x8ECC10")]
	private sealed class <>c
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__26_0;

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x16B4BBC", Offset = "0x16B4BBC", VA = "0x16B4BBC")]
		public <>c()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x16B4BC4", Offset = "0x16B4BC4", VA = "0x16B4BC4")]
		internal bool <Start>b__26_0(Transform t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3E74", Offset = "0x8F3E74")]
	[SerializeField]
	private Transform A;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3ED0", Offset = "0x8F3ED0")]
	[ReadOnly]
	private Transform E;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3F2C", Offset = "0x8F3F2C")]
	private Transform I;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3F88", Offset = "0x8F3F88")]
	private Transform O;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F3FE4", Offset = "0x8F3FE4")]
	private Transform U;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4040", Offset = "0x8F4040")]
	[SerializeField]
	private Transform Closed;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F409C", Offset = "0x8F409C")]
	private Transform Happy;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F40F8", Offset = "0x8F40F8")]
	[SerializeField]
	[ReadOnly]
	private Transform Sad;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4154", Offset = "0x8F4154")]
	[ReadOnly]
	[SerializeField]
	private Transform Suprised;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> mouthShapes;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform oldShape;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform[] head_xforms;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F41B0", Offset = "0x8F41B0")]
	public float min_time;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float max_time;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F41E8", Offset = "0x8F41E8")]
	private Transform eyesOpen;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4220", Offset = "0x8F4220")]
	private Transform eyesShut;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_minBlinkTime;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_maxBlinkTime;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomBlinkTime;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_blinkTime;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeOfLastBlink;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isBlinking;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mouthSwitchTime;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool talk;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CharacterModel.Emotion m_currentEmotion;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private CharacterModel.Emotion m_shownEmotion;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1ABF2B4", Offset = "0x1ABF2B4", VA = "0x1ABF2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1ABFF10", Offset = "0x1ABFF10", VA = "0x1ABFF10")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1AC02A8", Offset = "0x1AC02A8", VA = "0x1AC02A8")]
	public void StartTalking()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1AC03E4", Offset = "0x1AC03E4", VA = "0x1AC03E4")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1ABFFA8", Offset = "0x1ABFFA8", VA = "0x1ABFFA8")]
	private Transform SetMouthShape(Transform old_shape)
	{
		return null;
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1AC0410", Offset = "0x1AC0410", VA = "0x1AC0410")]
	public void SetEmotion(CharacterModel.Emotion emotion)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1AC02B4", Offset = "0x1AC02B4", VA = "0x1AC02B4")]
	private void HideAllMouths()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1ABFE6C", Offset = "0x1ABFE6C", VA = "0x1ABFE6C")]
	private void UpdateEmotion(bool force = false)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1ABFE60", Offset = "0x1ABFE60", VA = "0x1ABFE60")]
	private float MouthSwitchTime()
	{
		return default(float);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1AC0198", Offset = "0x1AC0198", VA = "0x1AC0198")]
	public void BlinkController()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1AC0420", Offset = "0x1AC0420", VA = "0x1AC0420")]
	public Mouth()
	{
	}
}
[Token(Token = "0x200017A")]
[SelectionBase]
public class Person : StaticMapped<Person>, ISaveableComponent
{
	[Token(Token = "0x200017B")]
	public class PersonEvent : UnityEvent<Person>
	{
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x16BE440", Offset = "0x16BE440", VA = "0x16BE440")]
		public PersonEvent()
		{
		}
	}

	[Token(Token = "0x200017C")]
	public class HoldEvent : UnityEvent<HoldableItem>
	{
		[Token(Token = "0x600083C")]
		[Address(RVA = "0x16BE3A8", Offset = "0x16BE3A8", VA = "0x16BE3A8")]
		public HoldEvent()
		{
		}
	}

	[Token(Token = "0x200017D")]
	public class PersonBuildingEvent : UnityEvent<Person, Building>
	{
		[Token(Token = "0x600083D")]
		[Address(RVA = "0x16BE3F4", Offset = "0x16BE3F4", VA = "0x16BE3F4")]
		public PersonBuildingEvent()
		{
		}
	}

	[Token(Token = "0x200017E")]
	private struct Visit
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool successful;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x16BE48C", Offset = "0x16BE48C", VA = "0x16BE48C")]
		public Visit(float t, bool s)
		{
		}
	}

	[Token(Token = "0x200017F")]
	public enum ChatStatus
	{
		[Token(Token = "0x400085A")]
		TooBusyToChat,
		[Token(Token = "0x400085B")]
		AvailableToChat,
		[Token(Token = "0x400085C")]
		Chatting,
		[Token(Token = "0x400085D")]
		ChatLeader,
		[Token(Token = "0x400085E")]
		ChatCancelled
	}

	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC30", Offset = "0x8ECC30")]
	private sealed class <Start>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] <intro>5__2;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x16BE358", Offset = "0x16BE358", VA = "0x16BE358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x16BE3A0", Offset = "0x16BE3A0", VA = "0x16BE3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x16BCFA8", Offset = "0x16BCFA8", VA = "0x16BCFA8")]
		[DebuggerHidden]
		public <Start>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x16BCFD4", Offset = "0x16BCFD4", VA = "0x16BCFD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x16BCFD8", Offset = "0x16BCFD8", VA = "0x16BCFD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x16BE360", Offset = "0x16BE360", VA = "0x16BE360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC40", Offset = "0x8ECC40")]
	private sealed class <PokedUpdate>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <targetObject>5__2;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x16BC70C", Offset = "0x16BC70C", VA = "0x16BC70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x16BC754", Offset = "0x16BC754", VA = "0x16BC754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x16BC048", Offset = "0x16BC048", VA = "0x16BC048")]
		[DebuggerHidden]
		public <PokedUpdate>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x16BC074", Offset = "0x16BC074", VA = "0x16BC074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x16BC078", Offset = "0x16BC078", VA = "0x16BC078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x16BC714", Offset = "0x16BC714", VA = "0x16BC714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC50", Offset = "0x8ECC50")]
	private sealed class <>c
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<(Vector3, float)> <>9__199_0;

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x16BAEA0", Offset = "0x16BAEA0", VA = "0x16BAEA0")]
		public <>c()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x16BAEA8", Offset = "0x16BAEA8", VA = "0x16BAEA8")]
		internal int <UpdateHeld>b__199_0((Vector3, float) a, (Vector3, float) b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC60", Offset = "0x8ECC60")]
	private sealed class <PutDownCoroutine>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <sp>5__2;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <sr>5__3;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <tp>5__4;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <tr>5__5;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <mt>5__6;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <dur>5__7;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x16BCF58", Offset = "0x16BCF58", VA = "0x16BCF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x16BCFA0", Offset = "0x16BCFA0", VA = "0x16BCFA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x16BC75C", Offset = "0x16BC75C", VA = "0x16BC75C")]
		[DebuggerHidden]
		public <PutDownCoroutine>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x16BC788", Offset = "0x16BC788", VA = "0x16BC788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x16BC78C", Offset = "0x16BC78C", VA = "0x16BC78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x16BCF60", Offset = "0x16BCF60", VA = "0x16BCF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC70", Offset = "0x8ECC70")]
	private sealed class <FreeFloatingCR>d__206 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <helpDuration>5__2;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <rotSpeed>5__4;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x16BB36C", Offset = "0x16BB36C", VA = "0x16BB36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x16BB3B4", Offset = "0x16BB3B4", VA = "0x16BB3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x16BB144", Offset = "0x16BB144", VA = "0x16BB144")]
		[DebuggerHidden]
		public <FreeFloatingCR>d__206(int <>1__state)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x16BB170", Offset = "0x16BB170", VA = "0x16BB170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x16BB174", Offset = "0x16BB174", VA = "0x16BB174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x16BB374", Offset = "0x16BB374", VA = "0x16BB374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC80", Offset = "0x8ECC80")]
	private sealed class <GetPotentialActivities>d__212 : IEnumerable<ActivityItem>, IEnumerable, IEnumerator<ActivityItem>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ActivityItem <>2__current;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person <>4__this;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, ActivityItem>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x170000E1")]
		private ActivityItem System.Collections.Generic.IEnumerator<ActivityItem>.Current
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x16BB69C", Offset = "0x16BB69C", VA = "0x16BB69C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x16BB6E4", Offset = "0x16BB6E4", VA = "0x16BB6E4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x16BB3BC", Offset = "0x16BB3BC", VA = "0x16BB3BC")]
		[DebuggerHidden]
		public <GetPotentialActivities>d__212(int <>1__state)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x16BB3F4", Offset = "0x16BB3F4", VA = "0x16BB3F4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x16BB464", Offset = "0x16BB464", VA = "0x16BB464", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x16BB410", Offset = "0x16BB410", VA = "0x16BB410")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x16BB6A4", Offset = "0x16BB6A4", VA = "0x16BB6A4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x16BB6EC", Offset = "0x16BB6EC", VA = "0x16BB6EC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<ActivityItem> System.Collections.Generic.IEnumerable<ActivityItem>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x16BB79C", Offset = "0x16BB79C", VA = "0x16BB79C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECC90", Offset = "0x8ECC90")]
	private sealed class <DoAbilityUntilDone>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x16BB0F4", Offset = "0x16BB0F4", VA = "0x16BB0F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x16BB13C", Offset = "0x16BB13C", VA = "0x16BB13C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x16BAEDC", Offset = "0x16BAEDC", VA = "0x16BAEDC")]
		[DebuggerHidden]
		public <DoAbilityUntilDone>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x16BAF08", Offset = "0x16BAF08", VA = "0x16BAF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x16BAF0C", Offset = "0x16BAF0C", VA = "0x16BAF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x16BB0FC", Offset = "0x16BB0FC", VA = "0x16BB0FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCA0", Offset = "0x8ECCA0")]
	private sealed class <JoinChatSession>d__251 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person leader;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x16BBCF0", Offset = "0x16BBCF0", VA = "0x16BBCF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0x16BBD38", Offset = "0x16BBD38", VA = "0x16BBD38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x16BB7A0", Offset = "0x16BB7A0", VA = "0x16BB7A0")]
		[DebuggerHidden]
		public <JoinChatSession>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x16BB7CC", Offset = "0x16BB7CC", VA = "0x16BB7CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x16BB7D0", Offset = "0x16BB7D0", VA = "0x16BB7D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x16BBCF8", Offset = "0x16BBCF8", VA = "0x16BBCF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCB0", Offset = "0x8ECCB0")]
	private sealed class <LeadChatSession>d__255 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastChat>5__2;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <chatAboutWant>5__3;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <chatSubject>5__4;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x16BBFF8", Offset = "0x16BBFF8", VA = "0x16BBFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0x16BC040", Offset = "0x16BC040", VA = "0x16BC040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x16BBD40", Offset = "0x16BBD40", VA = "0x16BBD40")]
		[DebuggerHidden]
		public <LeadChatSession>d__255(int <>1__state)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x16BBD6C", Offset = "0x16BBD6C", VA = "0x16BBD6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x16BBD70", Offset = "0x16BBD70", VA = "0x16BBD70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x16BC000", Offset = "0x16BC000", VA = "0x16BC000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4258", Offset = "0x8F4258")]
	public static bool ms_doIntro;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PersonEvent OnPersonJoinsSociety;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_readyToJoinSociety;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BehaviourTreeOwner m_behaviourTree;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public BehaviourTree m_jobBehaviourTree;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BehaviourTree m_abilityBehaviourTree;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Saveable]
	[ReadOnly]
	public Building m_inBuilding;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Saveable]
	[ReadOnly]
	public double m_willLeaveBuildingAtEpochTime;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public FolkHappiness m_happiness;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_doIntro;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool m_autoStartBehaviour;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Saveable]
	public Interest m_primaryInterest;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Saveable]
	public Interest m_secondaryInterest;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_infoMenuAttachPt;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Saveable]
	public Building m_house;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Saveable]
	public Building m_assignedHouse;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PersonHousing housing;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Building m_currentlyBuilding;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4380", Offset = "0x8F4380")]
	public CharacterModel m_charaModel;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FolkAnimationController m_charModelAnimationController;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F43CC", Offset = "0x8F43CC")]
	public Handedness m_chirality;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_eyes;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_head;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_rightHand;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_leftHand;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform m_backpack;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_rightHandDefaultLocalPos;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_leftHandDefaultLocalPos;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4404", Offset = "0x8F4404")]
	[ReadOnly]
	[Saveable]
	public double m_bedTime;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[ReadOnly]
	[Saveable]
	public bool m_hasStaminaBoost;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	[HideInInspector]
	[Saveable]
	public bool m_asleep;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Saveable]
	[HideInInspector]
	public double m_wakeUpTime;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PersonSleepCycle sleepCycle;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_sleepyZzzs;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float m_ZzzsScale;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4508", Offset = "0x8F4508")]
	public static bool SleepyZzzsAsTexticles;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject m_sleepVfxPrefab;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject m_sleepVfxInstance;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4550", Offset = "0x8F4550")]
	[ReadOnly]
	public HeldItems m_heldItems;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public HoldEvent OnItemHeld;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HoldEvent OnPlayerGivesItem;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public HoldEvent OnPlayerTakesItem;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F459C", Offset = "0x8F459C")]
	public float m_viewCone;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_viewDistance;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Disc m_viewConeVis;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LayerMask m_viewLayerMask;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> m_appealingThingsIveSeen;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float m_attentionSpan;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Saveable]
	public int TotalAppealingThingsIveSeen;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UnityEvent OnSawSomethingImInterestedIn;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F45E4", Offset = "0x8F45E4")]
	public AgentController m_agentControl;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float m_minTimeBetweenTryToGoPlaces;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4630", Offset = "0x8F4630")]
	public float m_chatSpacing;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Saveable]
	public bool m_introComplete;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Person ms_someoneChatting;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static UnityEvent m_onSomeoneFinishedIntro;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4678", Offset = "0x8F4678")]
	public bool[] m_visitedToday;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F46B0", Offset = "0x8F46B0")]
	public PersonExpressions expressions;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string m_voiceSelectorRTPC;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string m_talkPlaySFX;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string m_talkStopSFX;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string m_searchingSFX;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string m_getHappinessSFX;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string m_getHappinessLotsSFX;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public string m_homeBuildSFX;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string m_heldSFX;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string m_droppedSFX;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string m_hoverSFX;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float ExtraHappySFXThreshold;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F46E8", Offset = "0x8F46E8")]
	public FolkJobs Jobs;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4720", Offset = "0x8F4720")]
	public string[] m_nameFormats;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 m_lastPos;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[Saveable]
	public int m_seed;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private XXHash m_rand;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4768", Offset = "0x8F4768")]
	public float BaseAsteroidToScrapRate;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	[HideInInspector]
	public float AsteroidToScrapRateMultiplier;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float BaseConstructionRate;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	[HideInInspector]
	public float ConstructionRateMultiplier;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float ScrapEfficiencyMultiplier;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float m_maxScrapCarry;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F47C0", Offset = "0x8F47C0")]
	private FolkAbility <m_ability>k__BackingField;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool m_canDoAbility;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject m_canDoAbilityFXPrefab;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject m_canNotDoAbilityFXPrefab;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Saveable]
	[HideInInspector]
	public bool m_beenToBirthdayParty;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4808", Offset = "0x8F4808")]
	public float m_doorSelectDistMax;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4840", Offset = "0x8F4840")]
	public bool EmotionAutoUpdates;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float m_walkSpeedHungryMultiplier;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool m_isPickedUp;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public PersonEvent OnMovedIntoHouse;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public PersonBuildingEvent OnEnteredBuilding;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public PersonBuildingEvent OnExitedBuilding;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public PersonEvent OnWakeUp;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4878", Offset = "0x8F4878")]
	private int m_minCheckAfterFramesVal;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private int m_infrequentUpdateSpacing;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int ms_nextFrameCheckOffset;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static BezierLine[] ms_bezLine;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static SpriteRenderer[] ms_dropIndicator;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Color m_lineColour;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject m_placementIndicatorPrefab;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject m_dropIndicatorPrefab;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static List<TwoStateSelection> ms_placePts;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F48B0", Offset = "0x8F48B0")]
	public float m_pokeInfoDuration;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Coroutine m_pokeCR;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private FolkAnimationController.Emotions m_spikedEmotion;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float m_spikedEmotionTimeLeft;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Collider[] ms_nearbyColliders;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static RaycastHit[] ms_nearbyRaycastHits;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private List<Interest> m_visibleNow;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private float m_itemFlyTime;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public float m_doorOpenCloseDuration;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool m_agentWasEnabledOnPickup;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Coroutine GettingPutDownCR;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Coroutine IsFreeFloatingCR;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public Door m_playerSelectedDoor;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public HoldableItem m_playerSelectedItem;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public Door m_playerDroppedOnDoor;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[HideInInspector]
	public bool m_prioritiseJob;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public float m_placePointRadius;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float m_placePointRadiusMax;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public float m_heldGotoGroundDist;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public float m_heldGotoGroundSpeed;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject m_landOnGroundFXPrefab;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private List<(Vector3, float)> m_closePoints;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool handWasLeft;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public FloatRange m_buildingStayTimeGameHours;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Building m_aiTargetBuilding;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private Dictionary<Building, Visit> m_visitationLog;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Dictionary<ActivityItem, Visit> m_activityLog;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public double m_minHrsBetweenActivities;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private double m_lastActivityStartTime;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private double m_lastActivityTime;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public ActivityItem m_targetActivity;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private bool m_initialized;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4928", Offset = "0x8F4928")]
	public ChatStatus m_chatStatus;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public float m_chatRadius;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public FloatRange m_chatDurationSecs;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public float m_thisChatDurationSecs;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public double m_hrsBetweenChats;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public double m_lastChatFinishedAt;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Person m_hasRequestedAChat;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public List<Person> m_chatGroup;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public float m_chatUtteranceSeparationSecs;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private string[] m_chatWords;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private List<string> m_wants;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private string m_aiStatus;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private GameObject m_aiObject;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private Interest m_givenHPInterest;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private FacilityCategory m_givenHPCategory;

	[Token(Token = "0x170000CF")]
	public BehaviourTreeOwner BehaviourTree
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x15AAB64", Offset = "0x15AAB64", VA = "0x15AAB64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public FolkAnimationController AnimationController
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x15AAB6C", Offset = "0x15AAB6C", VA = "0x15AAB6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public int NumAppealingThingsIveSeen
	{
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x15AAB74", Offset = "0x15AAB74", VA = "0x15AAB74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D2")]
	public static UnityEvent OnSomeoneFinishedIntro
	{
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x15AABC8", Offset = "0x15AABC8", VA = "0x15AABC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public NVRInteractableItem NVRII
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x15AAF2C", Offset = "0x15AAF2C", VA = "0x15AAF2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public XXHash Rand
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x15AAF34", Offset = "0x15AAF34", VA = "0x15AAF34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public FolkAbility m_ability
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x15AAF3C", Offset = "0x15AAF3C", VA = "0x15AAF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900A10", Offset = "0x900A10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x15AAF44", Offset = "0x15AAF44", VA = "0x15AAF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x900A20", Offset = "0x900A20")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public bool IsPickedUp
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x15AAF54", Offset = "0x15AAF54", VA = "0x15AAF54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D7")]
	public IEnumerable<HoldableItem> AllHeldItems
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x15AD9F4", Offset = "0x15AD9F4", VA = "0x15AD9F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public bool Initialized
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x15B0A7C", Offset = "0x15B0A7C", VA = "0x15B0A7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x15AA8F8", Offset = "0x15AA8F8", VA = "0x15AA8F8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9009FC", Offset = "0x9009FC")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x15AAA38", Offset = "0x15AAA38", VA = "0x15AAA38")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x15AACA8", Offset = "0x15AACA8", VA = "0x15AACA8")]
	public void SetVisitedToday(FacilityCategory fc, bool b)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x15AAEE0", Offset = "0x15AAEE0", VA = "0x15AAEE0")]
	public void AnnounceLeavingFacility(FacilityCategory fc)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x15AAF24", Offset = "0x15AAF24", VA = "0x15AAF24")]
	public string GetHappinessSFX()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x15AAF5C", Offset = "0x15AAF5C", VA = "0x15AAF5C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x900A30", Offset = "0x900A30")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x15AAFC0", Offset = "0x15AAFC0", VA = "0x15AAFC0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x15AB0A4", Offset = "0x15AB0A4", VA = "0x15AB0A4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x15AB110", Offset = "0x15AB110", VA = "0x15AB110", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x15AB18C", Offset = "0x15AB18C", VA = "0x15AB18C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x15AB50C", Offset = "0x15AB50C", VA = "0x15AB50C")]
	private void OnHousingStateChanged()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x15AB55C", Offset = "0x15AB55C", VA = "0x15AB55C")]
	public void Setup(Interest interest, bool joinSocietyImmediately)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x15AB7B8", Offset = "0x15AB7B8", VA = "0x15AB7B8")]
	private void SetupUI()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x15AC0F8", Offset = "0x15AC0F8", VA = "0x15AC0F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900A44", Offset = "0x900A44")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x15AC170", Offset = "0x15AC170", VA = "0x15AC170")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x15AD6E4", Offset = "0x15AD6E4", VA = "0x15AD6E4", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x15AD758", Offset = "0x15AD758", VA = "0x15AD758")]
	public void TrySay(string s)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x15AD7A0", Offset = "0x15AD7A0", VA = "0x15AD7A0")]
	public void Say(string s, CharacterModel.Emotion emotion = CharacterModel.Emotion.Happy)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x15AD808", Offset = "0x15AD808", VA = "0x15AD808")]
	public void ShowThought(string shortThought, string detailedThought = "", CharacterModel.Emotion emotion = CharacterModel.Emotion.Neutral, [Optional] string sfxId)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x15AD890", Offset = "0x15AD890", VA = "0x15AD890")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x15AD970", Offset = "0x15AD970", VA = "0x15AD970")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900AA4", Offset = "0x900AA4")]
	private IEnumerator PokedUpdate()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x15AD9E8", Offset = "0x15AD9E8", VA = "0x15AD9E8")]
	public void SpikeEmotion(FolkAnimationController.Emotions emotion, float durationSeconds)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x15AD638", Offset = "0x15AD638", VA = "0x15AD638")]
	private void UpdateEmotion()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x15AD600", Offset = "0x15AD600", VA = "0x15AD600")]
	private void UpdateHeldItems()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x15ADA10", Offset = "0x15ADA10", VA = "0x15ADA10")]
	public static void CheckForBadlyHeldItems()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x15AAFF8", Offset = "0x15AAFF8", VA = "0x15AAFF8")]
	private void UpdateViewConeVis()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x15AC294", Offset = "0x15AC294", VA = "0x15AC294")]
	private void CheckView()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x15AC528", Offset = "0x15AC528", VA = "0x15AC528")]
	private void UpdateTiredDisplay()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x15ADC08", Offset = "0x15ADC08", VA = "0x15ADC08")]
	private void CheckAppealingObject(int i)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x15ADF50", Offset = "0x15ADF50", VA = "0x15ADF50")]
	private bool DoesObjectAppeal(Collider appealingCollider, out GameObject appealingObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x15AE154", Offset = "0x15AE154", VA = "0x15AE154")]
	private bool HasSeenAppealingObject(GameObject appealingObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x15AE2CC", Offset = "0x15AE2CC", VA = "0x15AE2CC")]
	public void DropScrap()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x15AE320", Offset = "0x15AE320", VA = "0x15AE320")]
	public void DropNotScrap()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x15AE374", Offset = "0x15AE374", VA = "0x15AE374")]
	public void DropRandomItem()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x15AE390", Offset = "0x15AE390", VA = "0x15AE390")]
	public HeldItems.Holds GetFreeHand(HoldSlotType holdType)
	{
		return default(HeldItems.Holds);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x15AE3B8", Offset = "0x15AE3B8", VA = "0x15AE3B8")]
	public Transform GetFreeHandTransform(HoldSlotType holdType)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x15AE44C", Offset = "0x15AE44C", VA = "0x15AE44C")]
	public void HoldItem(HoldableItem itemToHold, bool givenByPlayer = false, bool teleportToHand = false, bool dropSomethingIfHandsAreFull = false, float flyTime = -1f)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x15AE410", Offset = "0x15AE410", VA = "0x15AE410")]
	public Transform GetHandForHold(HeldItems.Holds hold)
	{
		return null;
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x15AE614", Offset = "0x15AE614", VA = "0x15AE614")]
	public bool IsHoldingAnything()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x15AE630", Offset = "0x15AE630", VA = "0x15AE630")]
	public bool IsHoldingSomethingInEitherHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x15AE64C", Offset = "0x15AE64C", VA = "0x15AE64C")]
	public bool CanHoldMore()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FD")]
	public bool IsHolding<T>()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x15AE668", Offset = "0x15AE668", VA = "0x15AE668")]
	public bool IsHoldingThisScrap(ScrapCoin coin)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x15AE684", Offset = "0x15AE684", VA = "0x15AE684")]
	public bool CanCarryMoreScrap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x15AE6BC", Offset = "0x15AE6BC", VA = "0x15AE6BC")]
	public bool TryGetHeldScrap(out ScrapCoin scrapCoin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x15AE6D8", Offset = "0x15AE6D8", VA = "0x15AE6D8")]
	public void ReleaseHeldItem(HoldableItem item, bool takenByPlayer = false)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x15AE700", Offset = "0x15AE700", VA = "0x15AE700")]
	public void ReleaseHeldItem(HeldItems.Holds hold, bool takenByPlayer = false)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x15AE728", Offset = "0x15AE728", VA = "0x15AE728")]
	public void AddBackpack()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x15AE744", Offset = "0x15AE744", VA = "0x15AE744")]
	public void RemoveBackpack()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x15AE760", Offset = "0x15AE760", VA = "0x15AE760")]
	public void SetHouse(Building b)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x15AE800", Offset = "0x15AE800", VA = "0x15AE800")]
	public void AssignHouse(Building b)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x15AE988", Offset = "0x15AE988", VA = "0x15AE988")]
	public void PickedUp()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x15AC77C", Offset = "0x15AC77C", VA = "0x15AC77C")]
	private void UpdateHeld()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x15AF108", Offset = "0x15AF108", VA = "0x15AF108")]
	private void DrawTargetLocationLine(float dsqToTarget, float maxAllowedDSq, Vector3 targetP1, Vector3 targetP2)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x15AF420", Offset = "0x15AF420", VA = "0x15AF420")]
	public void PutDown()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x15AFB7C", Offset = "0x15AFB7C", VA = "0x15AFB7C")]
	private bool ValidateJob(FolkJobs.JobTypes newJob, Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x15AFC50", Offset = "0x15AFC50", VA = "0x15AFC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900B04", Offset = "0x900B04")]
	private IEnumerator PutDownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x15AFCC8", Offset = "0x15AFCC8", VA = "0x15AFCC8")]
	public void StartFloating()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x15AFD58", Offset = "0x15AFD58", VA = "0x15AFD58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900B64", Offset = "0x900B64")]
	private IEnumerator FreeFloatingCR()
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x15AFDD0", Offset = "0x15AFDD0", VA = "0x15AFDD0")]
	public void LandOnGroundFX()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x15AE8D0", Offset = "0x15AE8D0", VA = "0x15AE8D0")]
	public void InterruptBehaviourTreeIfNotBusy()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x15AFE84", Offset = "0x15AFE84", VA = "0x15AFE84")]
	private static float TimeSince(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x15AFEAC", Offset = "0x15AFEAC", VA = "0x15AFEAC")]
	public Facility FindAppealingFacility()
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x15B03BC", Offset = "0x15B03BC", VA = "0x15B03BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900BC4", Offset = "0x900BC4")]
	public IEnumerable<ActivityItem> GetPotentialActivities()
	{
		return null;
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x15B0434", Offset = "0x15B0434", VA = "0x15B0434")]
	public void LogVisit(Building b, bool wasSuccess)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x15B02A8", Offset = "0x15B02A8", VA = "0x15B02A8")]
	private bool CanTryToVisit(Building b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x15B0540", Offset = "0x15B0540", VA = "0x15B0540")]
	public bool WantsToDoActivity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x15B05B0", Offset = "0x15B05B0", VA = "0x15B05B0")]
	public void LogVisit(ActivityItem ai, bool wasSuccess)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x15B06E8", Offset = "0x15B06E8", VA = "0x15B06E8")]
	private bool CanTryToVisit(ActivityItem ai)
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x15B07F8", Offset = "0x15B07F8", VA = "0x15B07F8")]
	public void GoToSleep()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x15B0830", Offset = "0x15B0830", VA = "0x15B0830")]
	private void DisplaySleepVfx()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x15AEE20", Offset = "0x15AEE20", VA = "0x15AEE20")]
	public void WakeUp(WakeUpType wakeUpType)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x15B08CC", Offset = "0x15B08CC", VA = "0x15B08CC")]
	public void RegisterAbility(FolkAbility ability)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x15B090C", Offset = "0x15B090C", VA = "0x15B090C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900C24", Offset = "0x900C24")]
	public IEnumerator DoAbilityUntilDone()
	{
		return null;
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x15B0984", Offset = "0x15B0984", VA = "0x15B0984")]
	public bool HasJob()
	{
		return default(bool);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x15B09A8", Offset = "0x15B09A8", VA = "0x15B09A8")]
	public void EnterBuilding(Building building, float duration)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x15B0A74", Offset = "0x15B0A74", VA = "0x15B0A74")]
	public void StartEnteringBuilding(Building building)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x15AEDDC", Offset = "0x15AEDDC", VA = "0x15AEDDC")]
	public void LeaveBuilding()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x15B0A84", Offset = "0x15B0A84", VA = "0x15B0A84")]
	private bool HasChattedRecently()
	{
		return default(bool);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x15B0AF4", Offset = "0x15B0AF4", VA = "0x15B0AF4")]
	public bool SearchForChatPals()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x15B0E40", Offset = "0x15B0E40", VA = "0x15B0E40")]
	public void CreateChatSession()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x15B0FDC", Offset = "0x15B0FDC", VA = "0x15B0FDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900C84", Offset = "0x900C84")]
	public IEnumerator JoinChatSession(Person leader)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x15B1070", Offset = "0x15B1070", VA = "0x15B1070")]
	private void UpdateWants()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x15B10FC", Offset = "0x15B10FC", VA = "0x15B10FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x900CE4", Offset = "0x900CE4")]
	private IEnumerator LeadChatSession()
	{
		return null;
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x15AEFA8", Offset = "0x15AEFA8", VA = "0x15AEFA8")]
	private void CancelChatSession()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x15B1174", Offset = "0x15B1174", VA = "0x15B1174")]
	public bool CanDoAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x15B117C", Offset = "0x15B117C", VA = "0x15B117C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x900D44", Offset = "0x900D44")]
	private void SetAbilityActive()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x15AADA0", Offset = "0x15AADA0", VA = "0x15AADA0")]
	public void SetCanDoAbility(bool b)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x15B1184", Offset = "0x15B1184", VA = "0x15B1184")]
	public void GiveHappinessPoint(Interest interest, FacilityCategory category)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x15B1260", Offset = "0x15B1260", VA = "0x15B1260")]
	public bool GetGivenHP(out Interest interest, out FacilityCategory category)
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x15B0FA4", Offset = "0x15B0FA4", VA = "0x15B0FA4")]
	public void SetAIStatus(string s, GameObject o)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x15B133C", Offset = "0x15B133C", VA = "0x15B133C", Slot = "7")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x15B135C", Offset = "0x15B135C", VA = "0x15B135C", Slot = "8")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x15B1360", Offset = "0x15B1360", VA = "0x15B1360", Slot = "9")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x15B13C8", Offset = "0x15B13C8", VA = "0x15B13C8")]
	private void MoveIntoOwnHouse()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x15B14BC", Offset = "0x15B14BC", VA = "0x15B14BC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900D5C", Offset = "0x900D5C")]
	private static void MakeSuperBuilders()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x15B16A4", Offset = "0x15B16A4", VA = "0x15B16A4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900DA4", Offset = "0x900DA4")]
	private static void WakeEveryone()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x15B180C", Offset = "0x15B180C", VA = "0x15B180C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900DEC", Offset = "0x900DEC")]
	private static void EveryoneStayAwake()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x15B19A4", Offset = "0x15B19A4", VA = "0x15B19A4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900E34", Offset = "0x900E34")]
	private static void EveryoneSkills()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x15B1B10", Offset = "0x15B1B10", VA = "0x15B1B10")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x900E7C", Offset = "0x900E7C")]
	private static void StaminaBoost()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x15B1C7C", Offset = "0x15B1C7C", VA = "0x15B1C7C")]
	public Person()
	{
	}
}
[Token(Token = "0x2000189")]
public class PersonGenerator : MonoBehaviour
{
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCC0", Offset = "0x8ECCC0")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Interest inter;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PersonGenerator <>4__this;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x16BE99C", Offset = "0x16BE99C", VA = "0x16BE99C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x16BE9A4", Offset = "0x16BE9A4", VA = "0x16BE9A4")]
		internal void <GetRuntimeDebugMenuItems>b__0()
		{
		}
	}

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_personPrefab;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntRange m_numInterests;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> m_spawnPoints;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_parentTransform;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextSpawnIdx;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_spawnAtStart;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_startSpawnUniqueInterests;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_doIntros;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<DebugMenu.voidDelegate> delegates;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x190A13C", Offset = "0x190A13C", VA = "0x190A13C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x190A45C", Offset = "0x190A45C", VA = "0x190A45C")]
	public void GetRuntimeDebugMenuItems(DebugMenu dm)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x190A69C", Offset = "0x190A69C", VA = "0x190A69C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x901164", Offset = "0x901164")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901164", Offset = "0x901164")]
	public void GenerateNew()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x190A6AC", Offset = "0x190A6AC", VA = "0x190A6AC")]
	public void GenerateNew(bool joinSocietyImmediately = false)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x190A6BC", Offset = "0x190A6BC", VA = "0x190A6BC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9011C8", Offset = "0x9011C8")]
	public void GenerateAllInterests()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x190A238", Offset = "0x190A238", VA = "0x190A238")]
	public Person GenerateNew(Interest forceInterest, bool holdRandomObject = false, bool joinSocietyImmediately = false)
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x190A858", Offset = "0x190A858", VA = "0x190A858")]
	private static void HoldRandomObject(Person p)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x190A9E8", Offset = "0x190A9E8", VA = "0x190A9E8")]
	public PersonGenerator()
	{
	}
}
[Token(Token = "0x200018B")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_xSpeed;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_ySpeed;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_zSpeed;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x188E1C0", Offset = "0x188E1C0", VA = "0x188E1C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x188E2B4", Offset = "0x188E2B4", VA = "0x188E2B4")]
	public Rotate()
	{
	}
}
[Token(Token = "0x200018C")]
public class FolkFinder : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	private enum State
	{
		[Token(Token = "0x40008A6")]
		Idle,
		[Token(Token = "0x40008A7")]
		AnalysingObject,
		[Token(Token = "0x40008A8")]
		LaunchingCollector,
		[Token(Token = "0x40008A9")]
		WaitingForCollector,
		[Token(Token = "0x40008AA")]
		ReceivingCollector,
		[Token(Token = "0x40008AB")]
		InvalidObject
	}

	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCD0", Offset = "0x8ECCD0")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinder <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x15F44C0", Offset = "0x15F44C0", VA = "0x15F44C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x15F4508", Offset = "0x15F4508", VA = "0x15F4508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x15F41D8", Offset = "0x15F41D8", VA = "0x15F41D8")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x15F4204", Offset = "0x15F4204", VA = "0x15F4204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x15F4208", Offset = "0x15F4208", VA = "0x15F4208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x15F44C8", Offset = "0x15F44C8", VA = "0x15F44C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCE0", Offset = "0x8ECCE0")]
	private sealed class <CloseDoorCR>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinder <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x15F4188", Offset = "0x15F4188", VA = "0x15F4188", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x15F41D0", Offset = "0x15F41D0", VA = "0x15F41D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x15F407C", Offset = "0x15F407C", VA = "0x15F407C")]
		[DebuggerHidden]
		public <CloseDoorCR>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x15F40A8", Offset = "0x15F40A8", VA = "0x15F40A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x15F40AC", Offset = "0x15F40AC", VA = "0x15F40AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x15F4190", Offset = "0x15F4190", VA = "0x15F4190", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FolkFinderDrone m_drone;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EstateAgent m_estateAgent;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_launchDurationSecs;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_droneTravelDurationOverrideDays;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4960", Offset = "0x8F4960")]
	private int <m_launchesAvailable>k__BackingField;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_happinessPerLaunch;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_nextLaunchHPRequired;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnDataChanged;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Spaceport m_spaceport;

	[Token(Token = "0x170000E9")]
	public int m_launchesAvailable
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x18AA074", Offset = "0x18AA074", VA = "0x18AA074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901210", Offset = "0x901210")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x18AA07C", Offset = "0x18AA07C", VA = "0x18AA07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901220", Offset = "0x901220")]
		private set
		{
		}
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x18AA084", Offset = "0x18AA084", VA = "0x18AA084")]
	public void SetCanNeverLaunch()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x18AA098", Offset = "0x18AA098", VA = "0x18AA098")]
	public bool IsIdle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x18AA0EC", Offset = "0x18AA0EC", VA = "0x18AA0EC")]
	private void OnHPTargetMet()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x18AA45C", Offset = "0x18AA45C", VA = "0x18AA45C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x18AA65C", Offset = "0x18AA65C", VA = "0x18AA65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901230", Offset = "0x901230")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x18AA6D4", Offset = "0x18AA6D4", VA = "0x18AA6D4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901290", Offset = "0x901290")]
	private void DebugLaunchGetZero()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x18AA77C", Offset = "0x18AA77C", VA = "0x18AA77C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9012A8", Offset = "0x9012A8")]
	private void DebugLaunchGetOne()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x18AA870", Offset = "0x18AA870", VA = "0x18AA870")]
	private void Update()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x18AA8C4", Offset = "0x18AA8C4", VA = "0x18AA8C4")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x18AA964", Offset = "0x18AA964", VA = "0x18AA964")]
	private void UpdateLaunchingCollector()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x18AAA98", Offset = "0x18AAA98", VA = "0x18AAA98")]
	private void UpdateWaitingForCollector()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x18AAA9C", Offset = "0x18AAA9C", VA = "0x18AAA9C")]
	private void UpdateReceivingCollector()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x18AAAA0", Offset = "0x18AAAA0", VA = "0x18AAAA0")]
	public void StartReceiving()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x18AAAF8", Offset = "0x18AAAF8", VA = "0x18AAAF8")]
	public void EndReceiving()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x18AABA4", Offset = "0x18AABA4", VA = "0x18AABA4")]
	public void OpenSpaceportDoor()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x18AAB78", Offset = "0x18AAB78", VA = "0x18AAB78")]
	public void CloseSpaceportDoor()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x18AABC0", Offset = "0x18AABC0", VA = "0x18AABC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9012C0", Offset = "0x9012C0")]
	private IEnumerator CloseDoorCR()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x18AAC38", Offset = "0x18AAC38", VA = "0x18AAC38")]
	public FolkFinder()
	{
	}
}
[Token(Token = "0x2000190")]
public abstract class FolkFinderDrone : MonoBehaviour
{
	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x18AACB8", Offset = "0x18AACB8", VA = "0x18AACB8", Slot = "4")]
	public virtual void Launch(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x18AACBC", Offset = "0x18AACBC", VA = "0x18AACBC")]
	protected FolkFinderDrone()
	{
	}
}
[Token(Token = "0x2000191")]
public class FolkFinderDroneStarterBot : FolkFinderDrone
{
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECCF0", Offset = "0x8ECCF0")]
	private sealed class <SearchAndReturn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinderDroneStarterBot <>4__this;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FolkFinder folkFinder;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Interest interestToFind;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Building house;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <p>5__3;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <pickedUp>5__4;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <journeyTimeInRealSeconds>5__5;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x15F4980", Offset = "0x15F4980", VA = "0x15F4980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x15F49C8", Offset = "0x15F49C8", VA = "0x15F49C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x15F4510", Offset = "0x15F4510", VA = "0x15F4510")]
		[DebuggerHidden]
		public <SearchAndReturn>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x15F453C", Offset = "0x15F453C", VA = "0x15F453C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x15F4540", Offset = "0x15F4540", VA = "0x15F4540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x15F4988", Offset = "0x15F4988", VA = "0x15F4988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busStop;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> m_folkLocators;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_journeyDurationDays;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BezierSpline m_spline;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PersonGenerator m_personGen;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Person m_folkOnBoard;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F4970", Offset = "0x8F4970")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4970", Offset = "0x8F4970")]
	public float m_collectFolkAtProgress;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_playStartLandingAtRealSecsBefore;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_playLandingAtRealSecsBefore;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F49C4", Offset = "0x8F49C4")]
	public Animator m_anim;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_launchAnimTrigger;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_startLandingAnimTrigger;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_landingAnimTrigger;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F49FC", Offset = "0x8F49FC")]
	public string m_sfxFolkAppear;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_sfxBusEnginePlay;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_sfxBusEngineStop;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string m_sfxBusEnginePowerUp;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxBusEnginePowerDown;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x18AACC4", Offset = "0x18AACC4", VA = "0x18AACC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x18AADDC", Offset = "0x18AADDC", VA = "0x18AADDC", Slot = "4")]
	public override void Launch(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x18AAED4", Offset = "0x18AAED4", VA = "0x18AAED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9013C0", Offset = "0x9013C0")]
	private IEnumerator SearchAndReturn(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x18AAF98", Offset = "0x18AAF98", VA = "0x18AAF98")]
	private void PositionBus(float t, BezierSpline spline, Transform trans)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x18AB08C", Offset = "0x18AB08C", VA = "0x18AB08C")]
	private void PickUpPeople(List<Interest> interestsToFind, Building house)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x18AB1A0", Offset = "0x18AB1A0", VA = "0x18AB1A0")]
	private void PickupAPerson(Interest interest, Transform folkLocator, Building house)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x18AB304", Offset = "0x18AB304", VA = "0x18AB304")]
	private void AppearFolk()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x18AB3C4", Offset = "0x18AB3C4", VA = "0x18AB3C4")]
	private void DropFolk()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x18AB4A0", Offset = "0x18AB4A0", VA = "0x18AB4A0")]
	public FolkFinderDroneStarterBot()
	{
	}
}
[Token(Token = "0x2000193")]
public class FreeFloatingStore : MonoBehaviour
{
	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x18AFD64", Offset = "0x18AFD64", VA = "0x18AFD64")]
	public FreeFloatingStore()
	{
	}
}
[Token(Token = "0x2000194")]
public class GameControllerMovement : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_moveSpeed;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_rotSpeed;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4A34", Offset = "0x8F4A34")]
	public static bool m_invertY;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4A7C", Offset = "0x8F4A7C")]
	public static float ms_speed;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x18B0704", Offset = "0x18B0704", VA = "0x18B0704")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x18B07F8", Offset = "0x18B07F8", VA = "0x18B07F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x18B0D70", Offset = "0x18B0D70", VA = "0x18B0D70")]
	public GameControllerMovement()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECD00", Offset = "0x8ECD00")]
public class GameObjectList : ScriptableObject
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectWithProbabilityList<GameObject> m_gameObjectsWithProbabilities;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x18B16EC", Offset = "0x18B16EC", VA = "0x18B16EC")]
	public GameObject Random()
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x18B1748", Offset = "0x18B1748", VA = "0x18B1748")]
	public void Add(GameObject[] list)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x18B18E4", Offset = "0x18B18E4", VA = "0x18B18E4")]
	public GameObjectList()
	{
	}
}
[Token(Token = "0x2000196")]
public class GraphicsDebug : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4AC0", Offset = "0x8F4AC0")]
	public int m_msaa;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_msaaWas;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F4B00", Offset = "0x8F4B00")]
	public int m_foveatedRendering;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_foveatedRenderingWas;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x193C0DC", Offset = "0x193C0DC", VA = "0x193C0DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x193C150", Offset = "0x193C150", VA = "0x193C150")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x193C380", Offset = "0x193C380", VA = "0x193C380")]
	public GraphicsDebug()
	{
	}
}
[Token(Token = "0x2000197")]
public class Hat : MonoBehaviour
{
	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1948E74", Offset = "0x1948E74", VA = "0x1948E74")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1948E78", Offset = "0x1948E78", VA = "0x1948E78")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1948E7C", Offset = "0x1948E7C", VA = "0x1948E7C")]
	public Hat()
	{
	}
}
[Token(Token = "0x2000198")]
public class HelpfulRobot : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x194ABA0", Offset = "0x194ABA0", VA = "0x194ABA0")]
	public void DoFolkArriving()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x194ABF8", Offset = "0x194ABF8", VA = "0x194ABF8")]
	public HelpfulRobot()
	{
	}
}
[Token(Token = "0x2000199")]
public class HighlightEvent : MonoBehaviour
{
	[Token(Token = "0x14000010")]
	public event Action OnHighlighted
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x194AE00", Offset = "0x194AE00", VA = "0x194AE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901470", Offset = "0x901470")]
		add
		{
		}
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x194AEA0", Offset = "0x194AEA0", VA = "0x194AEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901480", Offset = "0x901480")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnUnhighlighted
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x194AF40", Offset = "0x194AF40", VA = "0x194AF40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901490", Offset = "0x901490")]
		add
		{
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x194AFE0", Offset = "0x194AFE0", VA = "0x194AFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9014A0", Offset = "0x9014A0")]
		remove
		{
		}
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x194B080", Offset = "0x194B080", VA = "0x194B080")]
	public void Highlighted()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x194B094", Offset = "0x194B094", VA = "0x194B094")]
	public void Unhighlighted()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x194B0A8", Offset = "0x194B0A8", VA = "0x194B0A8")]
	public HighlightEvent()
	{
	}
}
[Token(Token = "0x200019A")]
public class HighlightStyleOverride : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_outlineMat;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_outlineCutThroughMat;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_placementOKMaterial;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_placementBadMaterial;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_TNTCountdownMaterial;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_placementSuggestionMaterial;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_copyPropertyBlock;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x194B120", Offset = "0x194B120", VA = "0x194B120")]
	public HighlightStyleOverride()
	{
	}
}
[Token(Token = "0x200019B")]
[ExecuteInEditMode]
public class Highlighter : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	[Flags]
	public enum Style
	{
		[Token(Token = "0x40008ED")]
		None = 0,
		[Token(Token = "0x40008EE")]
		Outline = 1,
		[Token(Token = "0x40008EF")]
		OutlineCutThrough = 2,
		[Token(Token = "0x40008F0")]
		PlacementOK = 4,
		[Token(Token = "0x40008F1")]
		PlacementBad = 8,
		[Token(Token = "0x40008F2")]
		TNTCountdown = 0x10,
		[Token(Token = "0x40008F3")]
		PlacementSuggestion = 0x20
	}

	[Token(Token = "0x200019D")]
	private struct HighlightedObject
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Style style;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshFilter[] meshFilters;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightStyleOverride[] overrides;
	}

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Highlighter Instance;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_outlineMat;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_outlineCutThroughMat;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_placementOKMaterial;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_placementBadMaterial;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_TNTCountdownMaterial;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_placementSuggestionMaterial;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[OVRLayer]
	public int m_renderLayer;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameObject, HighlightedObject> m_highlighted;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> texNames;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x194B128", Offset = "0x194B128", VA = "0x194B128")]
	private Material GetMat(Style s, [Optional] HighlightStyleOverride styleOverride)
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x194B1C4", Offset = "0x194B1C4", VA = "0x194B1C4")]
	public static void Highlight(bool value, GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x194B88C", Offset = "0x194B88C", VA = "0x194B88C")]
	public static void HighlightOn(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x194B914", Offset = "0x194B914", VA = "0x194B914")]
	public static void HighlightOn(GameObject target, Style style, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x194B99C", Offset = "0x194B99C", VA = "0x194B99C")]
	public static void HighlightOff(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x194BA24", Offset = "0x194BA24", VA = "0x194BA24")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Style style, int renderLayer)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x194BB18", Offset = "0x194BB18", VA = "0x194BB18")]
	public static void DrawAllSubmeshes(Mesh mesh, Matrix4x4 matrix, Style style, int renderLayer)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x194BC50", Offset = "0x194BC50", VA = "0x194BC50")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Material mat, int renderLayer)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x194BD08", Offset = "0x194BD08", VA = "0x194BD08")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Material mat, MaterialPropertyBlock props, int renderLayer)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x194BDD0", Offset = "0x194BDD0", VA = "0x194BDD0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9014B0", Offset = "0x9014B0")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x194BE20", Offset = "0x194BE20", VA = "0x194BE20")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x194BF20", Offset = "0x194BF20", VA = "0x194BF20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x194B25C", Offset = "0x194B25C", VA = "0x194B25C")]
	private Style GetObjectHighlight(GameObject target)
	{
		return default(Style);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x194B2E4", Offset = "0x194B2E4", VA = "0x194B2E4")]
	private void SetObjectHighlight(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x194C068", Offset = "0x194C068", VA = "0x194C068")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x194C75C", Offset = "0x194C75C", VA = "0x194C75C")]
	public Highlighter()
	{
	}
}
[Token(Token = "0x200019E")]
public class HoldableItem : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	private enum KinematicState
	{
		[Token(Token = "0x4000903")]
		Unknown = -1,
		[Token(Token = "0x4000904")]
		False,
		[Token(Token = "0x4000905")]
		True
	}

	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECD30", Offset = "0x8ECD30")]
	private sealed class <UpdateHeld>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoldableItem <>4__this;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Person <targetP>5__2;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x15F6B90", Offset = "0x15F6B90", VA = "0x15F6B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x15F6BD8", Offset = "0x15F6BD8", VA = "0x15F6BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x15F67E4", Offset = "0x15F67E4", VA = "0x15F67E4")]
		[DebuggerHidden]
		public <UpdateHeld>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x15F6810", Offset = "0x15F6810", VA = "0x15F6810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x15F6814", Offset = "0x15F6814", VA = "0x15F6814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x15F6B98", Offset = "0x15F6B98", VA = "0x15F6B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECD40", Offset = "0x8ECD40")]
	private sealed class <FlyToHand>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoldableItem <>4__this;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetParent;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetPosLocal;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float <t>5__4;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <maxHeight>5__5;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrailRenderer <tr>5__6;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x15F6794", Offset = "0x15F6794", VA = "0x15F6794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x15F67DC", Offset = "0x15F67DC", VA = "0x15F67DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x15F6338", Offset = "0x15F6338", VA = "0x15F6338")]
		[DebuggerHidden]
		public <FlyToHand>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x15F6364", Offset = "0x15F6364", VA = "0x15F6364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x15F6368", Offset = "0x15F6368", VA = "0x15F6368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x15F679C", Offset = "0x15F679C", VA = "0x15F679C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_consuamable;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	[ReadOnly]
	public Person m_heldBy;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_heldOnFrame;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HoldSlotType slotType;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody m_rb;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_heldLocator;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_closeDist;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_lineSz;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private KinematicState m_wasKinematicOnPickup;

	[Token(Token = "0x170000F0")]
	public Transform HeldLocator
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x194C9B8", Offset = "0x194C9B8", VA = "0x194C9B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x194CA88", Offset = "0x194CA88", VA = "0x194CA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x194CB70", Offset = "0x194CB70", VA = "0x194CB70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x194CC98", Offset = "0x194CC98", VA = "0x194CC98")]
	public void CheckIfBadlyHeld()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x194CE20", Offset = "0x194CE20", VA = "0x194CE20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x194CFEC", Offset = "0x194CFEC", VA = "0x194CFEC")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x194D120", Offset = "0x194D120", VA = "0x194D120")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x194D0A8", Offset = "0x194D0A8", VA = "0x194D0A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9014C4", Offset = "0x9014C4")]
	private IEnumerator UpdateHeld()
	{
		return null;
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x194D16C", Offset = "0x194D16C", VA = "0x194D16C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901524", Offset = "0x901524")]
	private IEnumerator FlyToHand(float duration, Transform targetParent, Vector3 targetPosLocal, Quaternion rotationOffset)
	{
		return null;
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x194D254", Offset = "0x194D254", VA = "0x194D254")]
	public void UpdateHeldItemPosition()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x194D36C", Offset = "0x194D36C", VA = "0x194D36C")]
	public void Hold(float flyTime)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x194C84C", Offset = "0x194C84C", VA = "0x194C84C")]
	public void Release()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x194D5D4", Offset = "0x194D5D4", VA = "0x194D5D4")]
	public HoldableItem()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x194D5F4", Offset = "0x194D5F4", VA = "0x194D5F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901584", Offset = "0x901584")]
	private bool <UpdateHeld>g__PersonCanHoldSomethingNew|17_0(Person p)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001A2")]
public interface ISfHandHoverResponder
{
	[Token(Token = "0x60008F4")]
	void BeginHovering(SpacefolkHand hand);

	[Token(Token = "0x60008F5")]
	void OnHovering(SpacefolkHand hand);

	[Token(Token = "0x60008F6")]
	void EndHovering(SpacefolkHand hand);
}
[Token(Token = "0x20001A3")]
public class IdentityOnAwake : MonoBehaviour
{
	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x16C8FB8", Offset = "0x16C8FB8", VA = "0x16C8FB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x16C8FF4", Offset = "0x16C8FF4", VA = "0x16C8FF4")]
	public IdentityOnAwake()
	{
	}
}
[Token(Token = "0x20001A4")]
public class InfoStripRenderer : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	public enum Category
	{
		[Token(Token = "0x4000929")]
		Misc,
		[Token(Token = "0x400092A")]
		NeedPower,
		[Token(Token = "0x400092B")]
		NeedMaterials,
		[Token(Token = "0x400092C")]
		NeedDecoration,
		[Token(Token = "0x400092D")]
		UnderConstruction
	}

	[Token(Token = "0x20001A6")]
	private struct StripInfo
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string text;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Category cat;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color borderCol;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Interest inter0;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interest inter1;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Interest inter2;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x15FC7C0", Offset = "0x15FC7C0", VA = "0x15FC7C0")]
		public StripInfo(string text, Category cat, Color borderCol, Interest inter0, Interest inter1, Interest inter2)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x15FC85C", Offset = "0x15FC85C", VA = "0x15FC85C")]
		public StripInfo(string text, Color borderCol)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x15FC8D8", Offset = "0x15FC8D8", VA = "0x15FC8D8")]
		public StripInfo(Category cat, Interest inter0, Interest inter1, Interest inter2)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x15FC98C", Offset = "0x15FC98C", VA = "0x15FC98C")]
		public StripInfo(Category cat)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x15FCA2C", Offset = "0x15FCA2C", VA = "0x15FCA2C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x15FCBA0", Offset = "0x15FCBA0", VA = "0x15FCBA0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoStripRenderer Instance;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera m_cam;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas m_canvas;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_miscText;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] m_miscColourElements;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image[] m_interestIcon0;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image[] m_interestIcon1;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image[] m_interestIcon2;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite m_questionMark;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_Misc;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_NeedPower;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_NeedMaterials;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_NeedDecoration;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_UnderConstruction;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> m_allLayouts;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Dictionary<StripInfo, RenderTexture> m_textures;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RenderTexture m_renderTex;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<StripInfo, int> m_lastRenderFrames;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x16CC9DC", Offset = "0x16CC9DC", VA = "0x16CC9DC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x901634", Offset = "0x901634")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x16CCA2C", Offset = "0x16CCA2C", VA = "0x16CCA2C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x16CCB2C", Offset = "0x16CCB2C", VA = "0x16CCB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x16CCE34", Offset = "0x16CCE34", VA = "0x16CCE34")]
	public Texture GetTexture(Building forBuilding, Category cat, bool showInter0, Interest inter0, bool showInter1, Interest inter1, bool showInter2, Interest inter2)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x16CD600", Offset = "0x16CD600", VA = "0x16CD600")]
	public Texture GetTexture(Building forBuilding, Category cat)
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x16CD748", Offset = "0x16CD748", VA = "0x16CD748")]
	public Texture GetTexture(Building forBuilding, string text, Color borderCol)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x16CD17C", Offset = "0x16CD17C", VA = "0x16CD17C")]
	private Texture Render(StripInfo stripInfo)
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x16CD8D8", Offset = "0x16CD8D8", VA = "0x16CD8D8")]
	public InfoStripRenderer()
	{
	}
}
[Token(Token = "0x20001A7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ECD50", Offset = "0x8ECD50")]
public class Interest : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_icon;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_emoji;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_displayNameKey;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_displayNameKeyPlural;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient m_colours;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F4BC8", Offset = "0x8F4BC8")]
	public Texture2D m_colourMap;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4C00", Offset = "0x8F4C00")]
	public TextAsset m_itemData;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextAsset m_localisationData;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4C38", Offset = "0x8F4C38")]
	public GameObject m_shopPrefab;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> m_decorations;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> m_signs;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> m_endGameItems;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4C70", Offset = "0x8F4C70")]
	public List<GameObject> m_generatedDecorations;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<GameObject> m_generatedSigns;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4CA8", Offset = "0x8F4CA8")]
	public List<GameObject> m_unlockedAtStartDecorations;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4CE0", Offset = "0x8F4CE0")]
	public List<GameObject> m_heads;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> m_bodies;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FolkAbility[] m_folkAbilities;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F4D18", Offset = "0x8F4D18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4D18", Offset = "0x8F4D18")]
	public string MeshDirectory;

	[NonSerialized]
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F4D78", Offset = "0x8F4D78")]
	public string GeneratedPrefabDirectory;

	[NonSerialized]
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[NotNull]
	private List<string> m_nouns;

	[NonSerialized]
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[NotNull]
	private List<string> m_adjectives;

	[NonSerialized]
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[NotNull]
	private List<Person> m_activePeople;

	[NonSerialized]
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[NotNull]
	private List<GameObject> m_unlockedDecorations;

	[NonSerialized]
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[NotNull]
	private List<GameObject> m_lockedDecorations;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ms_onlyEnglishNounsAndAdjectives;

	[Token(Token = "0x170000F5")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x16D7734", Offset = "0x16D7734", VA = "0x16D7734", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x16D773C", Offset = "0x16D773C", VA = "0x16D773C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public int ActivePeopleCount
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x16D7744", Offset = "0x16D7744", VA = "0x16D7744")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F7")]
	public int UnlockedDecorationsCount
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x16D7790", Offset = "0x16D7790", VA = "0x16D7790")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F8")]
	public List<string> Nouns
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x16D77DC", Offset = "0x16D77DC", VA = "0x16D77DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public string CountDisplay
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x16D77E4", Offset = "0x16D77E4", VA = "0x16D77E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x16D788C", Offset = "0x16D788C", VA = "0x16D788C")]
	public void InitInGame()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x16D7A40", Offset = "0x16D7A40", VA = "0x16D7A40")]
	public void ClearArrays()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x16D7B54", Offset = "0x16D7B54", VA = "0x16D7B54")]
	public void AddPerson(Person person)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x16D7C14", Offset = "0x16D7C14", VA = "0x16D7C14")]
	public Color GetRandomColour([Optional] System.Random rand)
	{
		return default(Color);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x16D7C5C", Offset = "0x16D7C5C", VA = "0x16D7C5C")]
	public Color GetColour(float f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x16D7890", Offset = "0x16D7890", VA = "0x16D7890")]
	public void InitLockedDecorations()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x16D7C78", Offset = "0x16D7C78", VA = "0x16D7C78")]
	public void UnlockAllDecorationPrefabs()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x16D7D24", Offset = "0x16D7D24", VA = "0x16D7D24")]
	public void UnlockDecorationPrefab(GameObject prefab)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x16D7FC8", Offset = "0x16D7FC8", VA = "0x16D7FC8")]
	public bool IsDecorationLocked(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x16D802C", Offset = "0x16D802C", VA = "0x16D802C")]
	public GameObject GetRandomLockedDecorationPrefab(bool returnUnlockedIfNull = true, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x16D80D0", Offset = "0x16D80D0", VA = "0x16D80D0")]
	public GameObject GetRandomDecorationPrefab([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x16D81C0", Offset = "0x16D81C0", VA = "0x16D81C0")]
	public GameObject GetRandomSignPrefab([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x16D82B0", Offset = "0x16D82B0", VA = "0x16D82B0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901648", Offset = "0x901648")]
	private void GenerateColourMapFromGradient()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x16D8410", Offset = "0x16D8410", VA = "0x16D8410")]
	public List<string> WordListToStringList(string wordList)
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x16D85D8", Offset = "0x16D85D8", VA = "0x16D85D8")]
	public string GetNounRandomLocalised([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x16D8820", Offset = "0x16D8820", VA = "0x16D8820")]
	public string GetAdjectiveRandomLocalised([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x16D8A68", Offset = "0x16D8A68", VA = "0x16D8A68")]
	public void RemapMeshColours(GameObject go)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x16D8AD4", Offset = "0x16D8AD4", VA = "0x16D8AD4")]
	public void RemapMeshColours(MeshFilter[] meshFilters)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x16D8C00", Offset = "0x16D8C00", VA = "0x16D8C00")]
	public void AddLocalisationsToLanguage()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x16D8CEC", Offset = "0x16D8CEC", VA = "0x16D8CEC")]
	public Interest()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ItemManipulator : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_spinSFX;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRButtons m_rotRight;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_hand;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float triggerAt;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 m_axisWas;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_currentRotation;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion m_targetRotation;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RotSpeed;

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x16D9F20", Offset = "0x16D9F20", VA = "0x16D9F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x16DA038", Offset = "0x16DA038", VA = "0x16DA038")]
	private void OnBeginInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x16DA074", Offset = "0x16DA074", VA = "0x16DA074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x16DA3B0", Offset = "0x16DA3B0", VA = "0x16DA3B0")]
	public ItemManipulator()
	{
	}
}
[Token(Token = "0x20001A9")]
public class LODSettings : MonoBehaviour
{
	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float crossFadeAnimationDuration;

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1817540", Offset = "0x1817540", VA = "0x1817540")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1817578", Offset = "0x1817578", VA = "0x1817578")]
	public LODSettings()
	{
	}
}
[Token(Token = "0x20001AA")]
public class LevelEditable : MonoBehaviour
{
	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1B1C574", Offset = "0x1B1C574", VA = "0x1B1C574")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1B1C680", Offset = "0x1B1C680", VA = "0x1B1C680")]
	public void WakeUp()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1B1C7FC", Offset = "0x1B1C7FC", VA = "0x1B1C7FC")]
	public LevelEditable()
	{
	}
}
[Token(Token = "0x20001AB")]
public class LevelEditor : MonoBehaviour
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PlayerIsEditing;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1B1C804", Offset = "0x1B1C804", VA = "0x1B1C804")]
	private void Start()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1B1C8C0", Offset = "0x1B1C8C0", VA = "0x1B1C8C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1B1CB3C", Offset = "0x1B1CB3C", VA = "0x1B1CB3C")]
	public LevelEditor()
	{
	}
}
[Token(Token = "0x20001AC")]
[ExecuteInEditMode]
public class LineRendererSpline : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer m_line;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierSpline m_spline;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_numPoints;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] m_points;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1B1FDC4", Offset = "0x1B1FDC4", VA = "0x1B1FDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1B1FF4C", Offset = "0x1B1FF4C", VA = "0x1B1FF4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1B1FDC8", Offset = "0x1B1FDC8", VA = "0x1B1FDC8")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1B1FF50", Offset = "0x1B1FF50", VA = "0x1B1FF50")]
	public LineRendererSpline()
	{
	}
}
[Token(Token = "0x20001AD")]
public class LocalisationLoader : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_localisationData;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1B20B44", Offset = "0x1B20B44", VA = "0x1B20B44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1B20C30", Offset = "0x1B20C30", VA = "0x1B20C30")]
	public void LoadedNewLanguage()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1B20CCC", Offset = "0x1B20CCC", VA = "0x1B20CCC")]
	public LocalisationLoader()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Magpie : MonoBehaviour
{
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECD70", Offset = "0x8ECD70")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool arrived;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x16B30A8", Offset = "0x16B30A8", VA = "0x16B30A8")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x16B30B0", Offset = "0x16B30B0", VA = "0x16B30B0")]
		internal void <Abduction>b__0()
		{
		}
	}

	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECD80", Offset = "0x8ECD80")]
	private sealed class <Abduction>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Magpie <>4__this;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScrapCoin target;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass23_0 <>8__1;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ScrapCoin> <targets>5__2;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x16B4104", Offset = "0x16B4104", VA = "0x16B4104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x16B414C", Offset = "0x16B414C", VA = "0x16B414C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x16B30BC", Offset = "0x16B30BC", VA = "0x16B30BC")]
		[DebuggerHidden]
		public <Abduction>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x16B30E8", Offset = "0x16B30E8", VA = "0x16B30E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x16B30EC", Offset = "0x16B30EC", VA = "0x16B30EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x16B410C", Offset = "0x16B410C", VA = "0x16B410C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ms_terrainCollisionLayerMask;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ms_abductionCollisionLayerMask;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RaycastHit[] ms_abductionHits;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_modelTransform;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem m_abductionParticles;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_collisionRadius;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_abductionCollectionTransform;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_abductionCollectionRadius;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScrapCoin m_abductionTarget;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_approachOffset;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_escapeOffset;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_maxAbductionTarget;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_arrived;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_teleportInSFX;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_teleportOutSFX;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_enginePowerUpSFX;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_enginePowerDownSFX;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_tractorBeamOnSFX;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_tractorBeamOffSFX;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_getScrapSFX;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1AAED2C", Offset = "0x1AAED2C", VA = "0x1AAED2C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x901660", Offset = "0x901660")]
	private static void SetupStatics()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1AAEE94", Offset = "0x1AAEE94", VA = "0x1AAEE94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1AAEEBC", Offset = "0x1AAEEBC", VA = "0x1AAEEBC")]
	public void Abduct(ScrapCoin target)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1AAEF10", Offset = "0x1AAEF10", VA = "0x1AAEF10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901670", Offset = "0x901670")]
	private IEnumerator Abduction(ScrapCoin target)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1AAEFA4", Offset = "0x1AAEFA4", VA = "0x1AAEFA4")]
	private Vector3 FindApproachPosition(Vector3 target, float offsetRadius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1AAF134", Offset = "0x1AAF134", VA = "0x1AAF134")]
	public Magpie()
	{
	}
}
[Token(Token = "0x20001B1")]
public class MagpieNest : MonoBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Magpie m_magpie;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_scrapCountTrigger;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_scrapCountHighTrigger;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_lowWaitValue;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_highWaitValue;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_wait;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1AAF284", Offset = "0x1AAF284", VA = "0x1AAF284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1AAF46C", Offset = "0x1AAF46C", VA = "0x1AAF46C")]
	public MagpieNest()
	{
	}
}
[Token(Token = "0x20001B2")]
public class MaterialPrewarm : MonoBehaviour
{
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PassType[] ms_passTypes;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] m_prewarmMaterials;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] m_additionalKeywords;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1AB0C40", Offset = "0x1AB0C40", VA = "0x1AB0C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1AB0FA0", Offset = "0x1AB0FA0", VA = "0x1AB0FA0")]
	public MaterialPrewarm()
	{
	}
}
[Token(Token = "0x20001B3")]
public class MenuButtonHighlightUtility : MonoBehaviour
{
	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_enableOnHighlight;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRCanvasInput m_canvasInput;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isOn;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1AB4B90", Offset = "0x1AB4B90", VA = "0x1AB4B90")]
	private void Start()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1AB4C20", Offset = "0x1AB4C20", VA = "0x1AB4C20")]
	private void Update()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1AB4D2C", Offset = "0x1AB4D2C", VA = "0x1AB4D2C")]
	public MenuButtonHighlightUtility()
	{
	}
}
[Token(Token = "0x20001B4")]
public static class MeshExtensions
{
	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1AB912C", Offset = "0x1AB912C", VA = "0x1AB912C")]
	public static (Vector3, Vector3) GetRandomPoint(this Mesh mesh)
	{
		return default((Vector3, Vector3));
	}
}
[Token(Token = "0x20001B5")]
public class ModelRotator : MonoBehaviour
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float x_rot_speed;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float y_rot_speed;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z_rot_speed;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xRot;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yRot;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zRot;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float x_rot_random;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_rot_random;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z_rot_random;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1AB9C04", Offset = "0x1AB9C04", VA = "0x1AB9C04")]
	private void Start()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1AB9C74", Offset = "0x1AB9C74", VA = "0x1AB9C74")]
	private void Update()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1AB9D68", Offset = "0x1AB9D68", VA = "0x1AB9D68")]
	public ModelRotator()
	{
	}
}
[Token(Token = "0x20001B6")]
public class ModelScalerMiddle : MonoBehaviour
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PointA;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PointB;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float x_scale;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float y;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_scale;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float z_scale;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scale_reducer;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1AB9D70", Offset = "0x1AB9D70", VA = "0x1AB9D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1AB9D74", Offset = "0x1AB9D74", VA = "0x1AB9D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1ABA144", Offset = "0x1ABA144", VA = "0x1ABA144")]
	public ModelScalerMiddle()
	{
	}
}
[Token(Token = "0x20001B7")]
public abstract class Modifier : MonoBehaviour
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DescriptionKey;

	[Token(Token = "0x170000FC")]
	public virtual string LocalisedDesc
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1ABA5C4", Offset = "0x1ABA5C4", VA = "0x1ABA5C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000954")]
	public abstract void ApplyOnScenarioInit();

	[Token(Token = "0x6000955")]
	public abstract void ApplyOnLoad();

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1ABA62C", Offset = "0x1ABA62C", VA = "0x1ABA62C")]
	protected Modifier()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Modifier_ : Modifier
{
	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1ABA634", Offset = "0x1ABA634", VA = "0x1ABA634", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1ABA638", Offset = "0x1ABA638", VA = "0x1ABA638", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1ABA63C", Offset = "0x1ABA63C", VA = "0x1ABA63C")]
	public Modifier_()
	{
	}
}
[Token(Token = "0x20001B9")]
public class Modifier_AsteroidsIntervalInHours : Modifier_WithRange
{
	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1ABA644", Offset = "0x1ABA644", VA = "0x1ABA644", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1ABA650", Offset = "0x1ABA650", VA = "0x1ABA650", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1ABA6F0", Offset = "0x1ABA6F0", VA = "0x1ABA6F0")]
	public Modifier_AsteroidsIntervalInHours()
	{
	}
}
[Token(Token = "0x20001BA")]
public class Modifier_DaysBetweenSolarFlares : Modifier_WithValue
{
	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1ABA710", Offset = "0x1ABA710", VA = "0x1ABA710", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1ABA71C", Offset = "0x1ABA71C", VA = "0x1ABA71C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1ABA788", Offset = "0x1ABA788", VA = "0x1ABA788")]
	public Modifier_DaysBetweenSolarFlares()
	{
	}
}
[Token(Token = "0x20001BB")]
public class Modifier_DisableShopItems : Modifier
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CityPieceProperties[] m_cityPieceProperties;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CityPiecePropertyList[] m_cityPieceLists;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1ABA798", Offset = "0x1ABA798", VA = "0x1ABA798", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1ABA830", Offset = "0x1ABA830", VA = "0x1ABA830", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1ABA79C", Offset = "0x1ABA79C", VA = "0x1ABA79C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901730", Offset = "0x901730")]
	public void DisableItems()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1ABA834", Offset = "0x1ABA834", VA = "0x1ABA834")]
	public Modifier_DisableShopItems()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Modifier_FolkCovetSpecificItemsOnly : Modifier
{
	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1ABA83C", Offset = "0x1ABA83C", VA = "0x1ABA83C", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1ABA840", Offset = "0x1ABA840", VA = "0x1ABA840", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1ABA844", Offset = "0x1ABA844", VA = "0x1ABA844")]
	public Modifier_FolkCovetSpecificItemsOnly()
	{
	}
}
[Token(Token = "0x20001BD")]
public class Modifier_NoFolkGetRescued : Modifier
{
	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1ABA84C", Offset = "0x1ABA84C", VA = "0x1ABA84C", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1ABA8CC", Offset = "0x1ABA8CC", VA = "0x1ABA8CC", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1ABA8D0", Offset = "0x1ABA8D0", VA = "0x1ABA8D0")]
	public Modifier_NoFolkGetRescued()
	{
	}
}
[Token(Token = "0x20001BE")]
public class Modifier_NoSolarFlares : Modifier
{
	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1ABA8D8", Offset = "0x1ABA8D8", VA = "0x1ABA8D8", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1ABA8E4", Offset = "0x1ABA8E4", VA = "0x1ABA8E4", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1ABA968", Offset = "0x1ABA968", VA = "0x1ABA968")]
	public Modifier_NoSolarFlares()
	{
	}
}
[Token(Token = "0x20001BF")]
public class Modifier_ReplaceBatchedMaterials : Modifier
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BatchObjectBuilder.MaterialSetting> m_replacements;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1ABA970", Offset = "0x1ABA970", VA = "0x1ABA970", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1ABA97C", Offset = "0x1ABA97C", VA = "0x1ABA97C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1ABAA30", Offset = "0x1ABAA30", VA = "0x1ABAA30")]
	public Modifier_ReplaceBatchedMaterials()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Modifier_RescueLaunchFirstCost : Modifier_WithValue
{
	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1ABAA38", Offset = "0x1ABAA38", VA = "0x1ABAA38", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1ABAA3C", Offset = "0x1ABAA3C", VA = "0x1ABAA3C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1ABAA40", Offset = "0x1ABAA40", VA = "0x1ABAA40")]
	public Modifier_RescueLaunchFirstCost()
	{
	}
}
[Token(Token = "0x20001C1")]
public class Modifier_SolarFlaresPerHour : Modifier_WithValue
{
	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1ABAA48", Offset = "0x1ABAA48", VA = "0x1ABAA48", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1ABAA54", Offset = "0x1ABAA54", VA = "0x1ABAA54", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1ABAADC", Offset = "0x1ABAADC", VA = "0x1ABAADC")]
	public Modifier_SolarFlaresPerHour()
	{
	}
}
[Token(Token = "0x20001C2")]
public class Modifier_SolarFlaresStartAtScrapBalance : Modifier_WithValue
{
	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1ABAAE4", Offset = "0x1ABAAE4", VA = "0x1ABAAE4", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1ABAAF0", Offset = "0x1ABAAF0", VA = "0x1ABAAF0", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1ABAB78", Offset = "0x1ABAB78", VA = "0x1ABAB78")]
	public Modifier_SolarFlaresStartAtScrapBalance()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Modifier_SolarFlaresStartAtTimeDays : Modifier_WithValue
{
	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1ABAB80", Offset = "0x1ABAB80", VA = "0x1ABAB80", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1ABAB8C", Offset = "0x1ABAB8C", VA = "0x1ABAB8C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1ABABF4", Offset = "0x1ABABF4", VA = "0x1ABABF4")]
	public Modifier_SolarFlaresStartAtTimeDays()
	{
	}
}
[Token(Token = "0x20001C4")]
public class Modifier_SpawnPrefabs : Modifier
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_prefabsToSpawn;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1ABABFC", Offset = "0x1ABABFC", VA = "0x1ABABFC", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1ABACB0", Offset = "0x1ABACB0", VA = "0x1ABACB0", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1ABACB4", Offset = "0x1ABACB4", VA = "0x1ABACB4")]
	public Modifier_SpawnPrefabs()
	{
	}
}
[Token(Token = "0x20001C5")]
public class Modifier_StartWithAlternateMusic : Modifier
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_selectorName;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1ABACBC", Offset = "0x1ABACBC", VA = "0x1ABACBC", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1ABAD44", Offset = "0x1ABAD44", VA = "0x1ABAD44", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1ABADCC", Offset = "0x1ABADCC", VA = "0x1ABADCC")]
	public Modifier_StartWithAlternateMusic()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Modifier_StartWithMessage : Modifier
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_highlightColour;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] m_messageKeys;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextMessageKey;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DialogueBox m_dialogueBox;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1ABADD4", Offset = "0x1ABADD4", VA = "0x1ABADD4", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1ABAF48", Offset = "0x1ABAF48", VA = "0x1ABAF48")]
	public void NextMessage()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1ABB16C", Offset = "0x1ABB16C", VA = "0x1ABB16C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1ABB170", Offset = "0x1ABB170", VA = "0x1ABB170")]
	public Modifier_StartWithMessage()
	{
	}
}
[Token(Token = "0x20001C7")]
public class Modifier_StartWithScrap : Modifier_WithValue
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDA0", Offset = "0x8ECDA0")]
	private sealed class <CoinAppearCR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier_StartWithScrap <>4__this;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ScrapCoin> <coins>5__2;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <delay>5__3;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__4;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x16B4A2C", Offset = "0x16B4A2C", VA = "0x16B4A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x16B4A74", Offset = "0x16B4A74", VA = "0x16B4A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x16B46E0", Offset = "0x16B46E0", VA = "0x16B46E0")]
		[DebuggerHidden]
		public <CoinAppearCR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x16B470C", Offset = "0x16B470C", VA = "0x16B470C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x16B4710", Offset = "0x16B4710", VA = "0x16B4710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x16B4A34", Offset = "0x16B4A34", VA = "0x16B4A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_vfxScrapAppear;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1ABB1A4", Offset = "0x1ABB1A4", VA = "0x1ABB1A4", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1ABB1D0", Offset = "0x1ABB1D0", VA = "0x1ABB1D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901748", Offset = "0x901748")]
	private IEnumerator CoinAppearCR()
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1ABB248", Offset = "0x1ABB248", VA = "0x1ABB248", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1ABB24C", Offset = "0x1ABB24C", VA = "0x1ABB24C")]
	public Modifier_StartWithScrap()
	{
	}
}
[Token(Token = "0x20001C9")]
public abstract class Modifier_WithRange : Modifier
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Min;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Max;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1ABA700", Offset = "0x1ABA700", VA = "0x1ABA700")]
	protected Modifier_WithRange()
	{
	}
}
[Token(Token = "0x20001CA")]
public abstract class Modifier_WithValue : Modifier
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x170000FF")]
	public override string LocalisedDesc
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1ABB254", Offset = "0x1ABB254", VA = "0x1ABB254", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1ABA790", Offset = "0x1ABA790", VA = "0x1ABA790")]
	protected Modifier_WithValue()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MouseDownInfo : MonoBehaviour
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent DoOnMouseDown;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1ABE258", Offset = "0x1ABE258", VA = "0x1ABE258")]
	public MouseDownInfo()
	{
	}
}
[Token(Token = "0x20001CC")]
public class MouseMovable : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_collisionMask;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_moving;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1ABE5F4", Offset = "0x1ABE5F4", VA = "0x1ABE5F4")]
	public MouseMovable()
	{
	}
}
[Token(Token = "0x20001CD")]
public class MusicPlayer : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	public delegate void StringDelegate(string s);

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDB0", Offset = "0x8ECDB0")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x16B51B0", Offset = "0x16B51B0", VA = "0x16B51B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x16B51F8", Offset = "0x16B51F8", VA = "0x16B51F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x16B4FC0", Offset = "0x16B4FC0", VA = "0x16B4FC0")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x16B4FEC", Offset = "0x16B4FEC", VA = "0x16B4FEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x16B4FF0", Offset = "0x16B4FF0", VA = "0x16B4FF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x16B51B8", Offset = "0x16B51B8", VA = "0x16B51B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicPlayer ms_instance;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_rtcpMusicVolume;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_sfxTitleMusicPlay;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_sfxTitleMusicStop;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxLoadingMusicPlay;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxLoadingMusicStop;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_sfxSpacefolkFMPlay;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_sfxSpacefolkFMStop;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_sfxScenarioCompletePlay;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_sfxScenarioCompleteStop;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_radioSelectorSwitch;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_radioSelectorStandard;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_radioSelectorToUse;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4E00", Offset = "0x8F4E00")]
	public string m_titleMusicSwitch;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_normalTitleMusic;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_loudnessIsOn;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxLoudnessOn;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxLoudnessOff;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public StringDelegate OnSongChanged;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_musicVolume;

	[Token(Token = "0x17000100")]
	public float MusicVolume
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1B4D8B0", Offset = "0x1B4D8B0", VA = "0x1B4D8B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1B4D8B8", Offset = "0x1B4D8B8", VA = "0x1B4D8B8")]
	public static void OnSceneLoaded(Scene scene, LoadSceneMode loadMode)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1B4D9A4", Offset = "0x1B4D9A4", VA = "0x1B4D9A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1B4DAD0", Offset = "0x1B4DAD0", VA = "0x1B4DAD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9017F8", Offset = "0x9017F8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1B4DB48", Offset = "0x1B4DB48", VA = "0x1B4DB48")]
	private void Update()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1B4DBC0", Offset = "0x1B4DBC0", VA = "0x1B4DBC0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901858", Offset = "0x901858")]
	private void StopAllMusic()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1B4D914", Offset = "0x1B4D914", VA = "0x1B4D914")]
	private void StartCorrectMusicForScene(Scene scene)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1B4DD30", Offset = "0x1B4DD30", VA = "0x1B4DD30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901870", Offset = "0x901870")]
	public void PlaySpacefolkFM()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1B4DE4C", Offset = "0x1B4DE4C", VA = "0x1B4DE4C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901888", Offset = "0x901888")]
	public void StopSpacefolkFM()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1B4DF58", Offset = "0x1B4DF58", VA = "0x1B4DF58")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9018A0", Offset = "0x9018A0")]
	public void NextTrack()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1B4DCA8", Offset = "0x1B4DCA8", VA = "0x1B4DCA8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9018B8", Offset = "0x9018B8")]
	public void PlayTitleMusic()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1B4E054", Offset = "0x1B4E054", VA = "0x1B4E054")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9018D0", Offset = "0x9018D0")]
	public void StopTitleMusic()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1B4E0D4", Offset = "0x1B4E0D4", VA = "0x1B4E0D4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9018E8", Offset = "0x9018E8")]
	public void PlayLoadingMusic()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1B4E15C", Offset = "0x1B4E15C", VA = "0x1B4E15C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901900", Offset = "0x901900")]
	public void StopLoadingMusic()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1B4E1DC", Offset = "0x1B4E1DC", VA = "0x1B4E1DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901918", Offset = "0x901918")]
	public void PlayScenarioCompleteMusic()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1B4E264", Offset = "0x1B4E264", VA = "0x1B4E264")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901930", Offset = "0x901930")]
	public void StopScenarioCompleteMusic()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1B4E2E4", Offset = "0x1B4E2E4", VA = "0x1B4E2E4")]
	public void SetVolume(float v)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1B4E358", Offset = "0x1B4E358", VA = "0x1B4E358")]
	public void SetLoudness(bool b)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1B4E3FC", Offset = "0x1B4E3FC", VA = "0x1B4E3FC")]
	public void ToggleLoudness()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1B4E40C", Offset = "0x1B4E40C", VA = "0x1B4E40C")]
	private void WwiseCallback(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1B4E4D8", Offset = "0x1B4E4D8", VA = "0x1B4E4D8")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x20001D0")]
public class NVRI_NoCollisionOnPickUp : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D1")]
	public struct ColliderDetails
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider m_collider;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_trigger;
	}

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColliderDetails[] m_colliderDetails;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Snappable m_snappable;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRInteractableItem m_nvii;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1B59AF4", Offset = "0x1B59AF4", VA = "0x1B59AF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1B59CB4", Offset = "0x1B59CB4", VA = "0x1B59CB4")]
	public void SetupColliderDefaults()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1B59EB0", Offset = "0x1B59EB0", VA = "0x1B59EB0")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1B59F20", Offset = "0x1B59F20", VA = "0x1B59F20")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1B59F9C", Offset = "0x1B59F9C", VA = "0x1B59F9C")]
	public NVRI_NoCollisionOnPickUp()
	{
	}
}
[Token(Token = "0x20001D2")]
public class NVRI_RegenNavOnPutDown : MonoBehaviour
{
	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1B59FA4", Offset = "0x1B59FA4", VA = "0x1B59FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1B5A0CC", Offset = "0x1B5A0CC", VA = "0x1B5A0CC")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1B5A128", Offset = "0x1B5A128", VA = "0x1B5A128")]
	public NVRI_RegenNavOnPutDown()
	{
	}
}
[Token(Token = "0x20001D3")]
public class NVR_HandAudio : MonoBehaviour
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pickupSFX;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_putdownSFX;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x19AF8CC", Offset = "0x19AF8CC", VA = "0x19AF8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x19AFA08", Offset = "0x19AFA08", VA = "0x19AFA08")]
	private void OnBeginInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x19AFAF4", Offset = "0x19AFAF4", VA = "0x19AFAF4")]
	private void OnEndInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x19AFCC4", Offset = "0x19AFCC4", VA = "0x19AFCC4")]
	public NVR_HandAudio()
	{
	}
}
[Token(Token = "0x20001D4")]
public class AutoLadder : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_bottomOffsetDist;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_topInsetDist;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh m_mesh;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_mat;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_agentOffset;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4E38", Offset = "0x8F4E38")]
	public LayerMask m_layerMask;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_rayStartOffset;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_rayLengthDown;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_rayLengthOut;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OffMeshLink m_offMeshLink;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E70", Offset = "0x8F4E70")]
	private float <m_height>k__BackingField;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E80", Offset = "0x8F4E80")]
	private Quaternion <m_rotation>k__BackingField;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Saveable]
	public bool m_isPlaced;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] dirs;

	[Token(Token = "0x17000103")]
	public float m_height
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1AA8838", Offset = "0x1AA8838", VA = "0x1AA8838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x901998", Offset = "0x901998")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1AA8840", Offset = "0x1AA8840", VA = "0x1AA8840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9019A8", Offset = "0x9019A8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public Quaternion m_rotation
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1AA8848", Offset = "0x1AA8848", VA = "0x1AA8848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9019B8", Offset = "0x9019B8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1AA8854", Offset = "0x1AA8854", VA = "0x1AA8854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9019C8", Offset = "0x9019C8")]
		private set
		{
		}
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1AA8860", Offset = "0x1AA8860", VA = "0x1AA8860")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1AA88EC", Offset = "0x1AA88EC", VA = "0x1AA88EC")]
	private void CacheData()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1AA8A54", Offset = "0x1AA8A54", VA = "0x1AA8A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1AA8AB8", Offset = "0x1AA8AB8", VA = "0x1AA8AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x1AA8B58", Offset = "0x1AA8B58", VA = "0x1AA8B58")]
	private void UpdateNavlinkAgentOffset()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1AA8BD4", Offset = "0x1AA8BD4", VA = "0x1AA8BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1AA8D8C", Offset = "0x1AA8D8C", VA = "0x1AA8D8C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1AA8DC4", Offset = "0x1AA8DC4", VA = "0x1AA8DC4")]
	public void Invalidate()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1AA8DCC", Offset = "0x1AA8DCC", VA = "0x1AA8DCC")]
	public bool PlaceFromTop(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1AA8E6C", Offset = "0x1AA8E6C", VA = "0x1AA8E6C")]
	public bool PlaceFromTop(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1AA9358", Offset = "0x1AA9358", VA = "0x1AA9358")]
	public bool PlaceFromBottom(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1AA9400", Offset = "0x1AA9400", VA = "0x1AA9400")]
	public bool PlaceFromBottom(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1AA982C", Offset = "0x1AA982C", VA = "0x1AA982C")]
	public bool PlaceFromMidpoint(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1AA98CC", Offset = "0x1AA98CC", VA = "0x1AA98CC")]
	public bool PlaceFromMidpoint(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1AA9D24", Offset = "0x1AA9D24", VA = "0x1AA9D24", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1AA9D28", Offset = "0x1AA9D28", VA = "0x1AA9D28", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1AA9D2C", Offset = "0x1AA9D2C", VA = "0x1AA9D2C", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1AA9D30", Offset = "0x1AA9D30", VA = "0x1AA9D30")]
	public AutoLadder()
	{
	}
}
[Token(Token = "0x20001D5")]
public class AutoLadderInteractable : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoLadder m_autoLadder;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PointAndSnap m_pointAndSnap;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_collider;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_model;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CityPiece attached;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 oldPos;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1AA9E34", Offset = "0x1AA9E34", VA = "0x1AA9E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1AAA058", Offset = "0x1AAA058", VA = "0x1AAA058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1AAA1BC", Offset = "0x1AAA1BC", VA = "0x1AAA1BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1AAA324", Offset = "0x1AAA324", VA = "0x1AAA324")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1AAA664", Offset = "0x1AAA664", VA = "0x1AAA664")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1AAA87C", Offset = "0x1AAA87C", VA = "0x1AAA87C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1AAAB08", Offset = "0x1AAAB08", VA = "0x1AAAB08")]
	private void OnAttachedUnbake(CityPiece attachedPiece)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1AAAC10", Offset = "0x1AAAC10", VA = "0x1AAAC10")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hit)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1AAAD48", Offset = "0x1AAAD48", VA = "0x1AAAD48")]
	public void UpdatePositionFromLadder()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1AAAE08", Offset = "0x1AAAE08", VA = "0x1AAAE08", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1AAAE0C", Offset = "0x1AAAE0C", VA = "0x1AAAE0C", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1AAAE10", Offset = "0x1AAAE10", VA = "0x1AAAE10", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1AAAE14", Offset = "0x1AAAE14", VA = "0x1AAAE14")]
	public AutoLadderInteractable()
	{
	}
}
[Token(Token = "0x20001D6")]
public class NavAgentDestinationSetter : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent m_agent;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x19B4C0C", Offset = "0x19B4C0C", VA = "0x19B4C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x19B4D7C", Offset = "0x19B4D7C", VA = "0x19B4D7C")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x19B4E0C", Offset = "0x19B4E0C", VA = "0x19B4E0C")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x19B4F50", Offset = "0x19B4F50", VA = "0x19B4F50")]
	public NavAgentDestinationSetter()
	{
	}
}
[Token(Token = "0x20001D7")]
public class NavLinkCustomMovement : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDC0", Offset = "0x8ECDC0")]
	private sealed class <UpdateLinkMovement>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x16B7B24", Offset = "0x16B7B24", VA = "0x16B7B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x16B7B6C", Offset = "0x16B7B6C", VA = "0x16B7B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x16B7ADC", Offset = "0x16B7ADC", VA = "0x16B7ADC")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x16B7B08", Offset = "0x16B7B08", VA = "0x16B7B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x16B7B0C", Offset = "0x16B7B0C", VA = "0x16B7B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x16B7B2C", Offset = "0x16B7B2C", VA = "0x16B7B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x19B4F58", Offset = "0x19B4F58", VA = "0x19B4F58", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9019D8", Offset = "0x9019D8")]
	public virtual IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x19B4FB4", Offset = "0x19B4FB4", VA = "0x19B4FB4", Slot = "5")]
	public virtual void CancelFor(NavMeshAgent agent)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x19B4FB8", Offset = "0x19B4FB8", VA = "0x19B4FB8", Slot = "6")]
	public virtual void DoReset()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x19B4FBC", Offset = "0x19B4FBC", VA = "0x19B4FBC")]
	public NavLinkCustomMovement()
	{
	}
}
[Token(Token = "0x20001D9")]
public class NavLinkTeleport : NavLinkCustomMovement
{
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDD0", Offset = "0x8ECDD0")]
	private sealed class <UpdateLinkMovement>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavLinkTeleport <>4__this;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <teleportStart>5__2;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <teleportEnd>5__3;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <linkEnd>5__4;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Door <doorEnter>5__5;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <moveDur>5__6;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion <facingTP>5__7;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <startPos>5__8;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion <startRot>5__9;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject <charaModel>5__10;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Door <doorExit>5__11;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float <t>5__12;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x16B87EC", Offset = "0x16B87EC", VA = "0x16B87EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x16B8834", Offset = "0x16B8834", VA = "0x16B8834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x16B7B74", Offset = "0x16B7B74", VA = "0x16B7B74")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x16B7BA0", Offset = "0x16B7BA0", VA = "0x16B7BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x16B7BA4", Offset = "0x16B7BA4", VA = "0x16B7BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x16B87F4", Offset = "0x16B87F4", VA = "0x16B87F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_durationBasedOnAgentSpeed;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F4EA0", Offset = "0x8F4EA0")]
	public float m_agentSpeedMultiplier;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_agentEnterSpeedMultiplier;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x8F4ED8", Offset = "0x8F4ED8")]
	public float m_teleportDuration;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4F10", Offset = "0x8F4F10")]
	public Transform m_linkA;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_teleportA;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4F48", Offset = "0x8F4F48")]
	public Transform m_teleportB;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_linkB;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4F80", Offset = "0x8F4F80")]
	public GameObject m_teleportStartFXPrefab;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_teleportStartSFXEvent;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F4FB8", Offset = "0x8F4FB8")]
	public GameObject m_teleportEndFXPrefab;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_teleportEndSFXEvent;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x19B4FC4", Offset = "0x19B4FC4", VA = "0x19B4FC4", Slot = "5")]
	public override void CancelFor(NavMeshAgent agent)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x19B5038", Offset = "0x19B5038", VA = "0x19B5038", Slot = "6")]
	public override void DoReset()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x19B50C0", Offset = "0x19B50C0", VA = "0x19B50C0", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901A88", Offset = "0x901A88")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x19B5154", Offset = "0x19B5154", VA = "0x19B5154")]
	public NavLinkTeleport()
	{
	}
}
[Token(Token = "0x20001DB")]
public class NavlinkEndpoint : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavLinkCustomMovement m_navlink;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x19B7010", Offset = "0x19B7010", VA = "0x19B7010")]
	public NavlinkEndpoint()
	{
	}
}
[Token(Token = "0x20001DC")]
public class NavlinkPolyLine : NavLinkCustomMovement
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDE0", Offset = "0x8ECDE0")]
	private sealed class <UpdateLinkMovement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavlinkPolyLine <>4__this;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OffMeshLinkData <data>5__2;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FolkAnimationController <anim>5__3;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <lineEndPt>5__4;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 <lineDirXZ>5__5;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool <goingForward>5__6;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool <ladderAnimStateHasChanged>5__7;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <d>5__8;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float <lineLen>5__9;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x16B8D40", Offset = "0x16B8D40", VA = "0x16B8D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x16B8D88", Offset = "0x16B8D88", VA = "0x16B8D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x16B883C", Offset = "0x16B883C", VA = "0x16B883C")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x16B8868", Offset = "0x16B8868", VA = "0x16B8868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x16B886C", Offset = "0x16B886C", VA = "0x16B886C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x16B8D48", Offset = "0x16B8D48", VA = "0x16B8D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vitei.Line m_line;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speedMul;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange m_speedRange;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isLadder;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 AgentPositionOffset;

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x19B7018", Offset = "0x19B7018", VA = "0x19B7018")]
	public float GetLineLen()
	{
		return default(float);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x19B70D8", Offset = "0x19B70D8", VA = "0x19B70D8")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x19B718C", Offset = "0x19B718C", VA = "0x19B718C")]
	public Vector3 GetAtDistFromStart_World(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x19B7340", Offset = "0x19B7340", VA = "0x19B7340", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901B38", Offset = "0x901B38")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x19B73D4", Offset = "0x19B73D4", VA = "0x19B73D4")]
	public NavlinkPolyLine()
	{
	}
}
[Token(Token = "0x20001DE")]
public class NavlinkZipLine : NavLinkCustomMovement
{
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECDF0", Offset = "0x8ECDF0")]
	private sealed class <UpdateLinkMovement>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavlinkZipLine <>4__this;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OffMeshLinkData <data>5__2;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FolkAnimationController <anim>5__3;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool <goingForward>5__4;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <lastPt>5__5;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform <seat>5__6;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 <jumpPos>5__7;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion <jumpRot>5__8;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float <d>5__9;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float <t>5__10;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float <lineLen>5__11;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion <finishRot>5__12;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x16B98A8", Offset = "0x16B98A8", VA = "0x16B98A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x16B98F0", Offset = "0x16B98F0", VA = "0x16B98F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x16B8D90", Offset = "0x16B8D90", VA = "0x16B8D90")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x16B8DBC", Offset = "0x16B8DBC", VA = "0x16B8DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x16B8DC0", Offset = "0x16B8DC0", VA = "0x16B8DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x16B98B0", Offset = "0x16B98B0", VA = "0x16B98B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Polyline m_line;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speedMul;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_offset;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_sliderParent;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] m_sliders;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<GameObject, Transform> m_seats;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_currentSlider;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_transitionTime;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_jumpHeight;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_SFXStart;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_SFXStop;

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x19B7468", Offset = "0x19B7468", VA = "0x19B7468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x19B7634", Offset = "0x19B7634", VA = "0x19B7634")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x19B76CC", Offset = "0x19B76CC", VA = "0x19B76CC")]
	public float GetLineLen()
	{
		return default(float);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x19B7798", Offset = "0x19B7798", VA = "0x19B7798")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x19B7844", Offset = "0x19B7844", VA = "0x19B7844")]
	public Vector3 GetAtDistFromStart_World(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x19B7A14", Offset = "0x19B7A14", VA = "0x19B7A14", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901BE8", Offset = "0x901BE8")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x19B7AA8", Offset = "0x19B7AA8", VA = "0x19B7AA8", Slot = "6")]
	public override void DoReset()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x19B7AB8", Offset = "0x19B7AB8", VA = "0x19B7AB8")]
	public NavlinkZipLine()
	{
	}
}
[Token(Token = "0x20001E0")]
public class OVRControllerHider : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doneRight;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool doneLeft;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x19B9850", Offset = "0x19B9850", VA = "0x19B9850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x19B99E8", Offset = "0x19B99E8", VA = "0x19B99E8")]
	public OVRControllerHider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E1")]
public class ObjectWithProbability<T>
{
	[Serializable]
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE00", Offset = "0x8ECE00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithProbability<T>> <>9__7_0;

		[Token(Token = "0x6000A1D")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A1E")]
		internal int <Sort>b__7_0(ObjectWithProbability<T> a, ObjectWithProbability<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T m_gameObj;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_probability;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_normalisedProbability;

	[Token(Token = "0x6000A17")]
	public ObjectWithProbability(T obj, float prob)
	{
	}

	[Token(Token = "0x6000A18")]
	public ObjectWithProbability(T obj, Probability prob)
	{
	}

	[Token(Token = "0x6000A19")]
	public static void NormaliseProbabilities(List<ObjectWithProbability<T>> plist)
	{
	}

	[Token(Token = "0x6000A1A")]
	public static void ReNormaliseProbabilities(List<ObjectWithProbability<T>> plist, int keepIdx)
	{
	}

	[Token(Token = "0x6000A1B")]
	public static void Sort(List<ObjectWithProbability<T>> plist)
	{
	}
}
[Serializable]
[Token(Token = "0x20001E3")]
public class ObjectWithProbabilityList<T> where T : class
{
	[Serializable]
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE10", Offset = "0x8ECE10")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithProbability<T>> <>9__3_0;

		[Token(Token = "0x6000A24")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A25")]
		internal int <Random>b__3_0(ObjectWithProbability<T> a, ObjectWithProbability<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float transitionTime;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_valuesAreProbabilities;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<ObjectWithProbability<T>> m_gameObjects;

	[Token(Token = "0x6000A1F")]
	public T Random([Optional] UnityEngine.Object exclude, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	public void Add(ObjectWithProbability<T> gowp)
	{
	}

	[Token(Token = "0x6000A21")]
	public bool Contains(T go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A22")]
	public ObjectWithProbabilityList()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ObjectWithValue<T>
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T m_obj;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_value;

	[Token(Token = "0x6000A26")]
	public ObjectWithValue()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ObjectWithValueList<T>
{
	[Serializable]
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE20", Offset = "0x8ECE20")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithValue<T>> <>9__2_0;

		[Token(Token = "0x6000A2A")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A2B")]
		internal int <Random>b__2_0(ObjectWithValue<T> a, ObjectWithValue<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_valuesAreProbabilities;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<ObjectWithValue<T>> m_objVal;

	[Token(Token = "0x6000A27")]
	public T Random()
	{
		return (T)null;
	}

	[Token(Token = "0x6000A28")]
	public ObjectWithValueList()
	{
	}
}
[Token(Token = "0x20001E8")]
public class ObjectiveTracker : MonoBehaviour
{
	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x159D388", Offset = "0x159D388", VA = "0x159D388")]
	public ObjectiveTracker()
	{
	}
}
[Token(Token = "0x20001E9")]
public abstract class Objective : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	public enum States
	{
		[Token(Token = "0x4000A49")]
		Inactive,
		[Token(Token = "0x4000A4A")]
		Active,
		[Token(Token = "0x4000A4B")]
		Completed
	}

	[Token(Token = "0x20001EB")]
	public class ObjectiveEvent : UnityEvent<Objective>
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x16BA258", Offset = "0x16BA258", VA = "0x16BA258")]
		public ObjectiveEvent()
		{
		}
	}

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DescriptionKey;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Objective PrerequesiteObjective;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ShowInObjectiveList;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool ShowNotificationOnCompletion;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool DisableSaveWhenActive;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool AutoSaveOnCompletion;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Saveable]
	protected States CurrentState;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected States StateLastFrame;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectiveEvent OnStateChanged;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ObjectiveEvent OnCompleted;

	[Token(Token = "0x1700010D")]
	public virtual string LocalisedDesc
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x159D0AC", Offset = "0x159D0AC", VA = "0x159D0AC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010E")]
	public bool DidChangeState
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x159D114", Offset = "0x159D114", VA = "0x159D114")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010F")]
	public States State
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x159D124", Offset = "0x159D124", VA = "0x159D124")]
		get
		{
			return default(States);
		}
	}

	[Token(Token = "0x17000110")]
	public abstract string Text
	{
		[Token(Token = "0x6000A31")]
		get;
	}

	[Token(Token = "0x17000111")]
	public abstract bool IsComplete
	{
		[Token(Token = "0x6000A32")]
		get;
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x159D12C", Offset = "0x159D12C", VA = "0x159D12C")]
	public void SetState(States newState)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x159D134", Offset = "0x159D134", VA = "0x159D134", Slot = "7")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x159D150", Offset = "0x159D150", VA = "0x159D150", Slot = "8")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x159D154", Offset = "0x159D154", VA = "0x159D154", Slot = "9")]
	public virtual void Begin()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x159D160", Offset = "0x159D160", VA = "0x159D160", Slot = "10")]
	public virtual void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x159D1C8", Offset = "0x159D1C8", VA = "0x159D1C8", Slot = "11")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x159D2DC", Offset = "0x159D2DC", VA = "0x159D2DC")]
	protected Objective()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Objective_ActivateRocketBoosters : Objective
{
	[Token(Token = "0x17000112")]
	public override string Text
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x159D390", Offset = "0x159D390", VA = "0x159D390", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x159D404", Offset = "0x159D404", VA = "0x159D404", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x159D468", Offset = "0x159D468", VA = "0x159D468", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x159D648", Offset = "0x159D648", VA = "0x159D648")]
	public Objective_ActivateRocketBoosters()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Objective_BuildDefence : Objective_HitValue
{
	[Token(Token = "0x17000114")]
	public override string Text
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x159D64C", Offset = "0x159D64C", VA = "0x159D64C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x159D7B4", Offset = "0x159D7B4", VA = "0x159D7B4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x159D840", Offset = "0x159D840", VA = "0x159D840")]
	public Objective_BuildDefence()
	{
	}
}
[Token(Token = "0x20001EE")]
public class Objective_BuildFacilitiesAny : Objective_HitValue
{
	[Token(Token = "0x17000116")]
	public override string Text
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x159D848", Offset = "0x159D848", VA = "0x159D848", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000117")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x159D9B0", Offset = "0x159D9B0", VA = "0x159D9B0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x159DA3C", Offset = "0x159DA3C", VA = "0x159DA3C")]
	public Objective_BuildFacilitiesAny()
	{
	}
}
[Token(Token = "0x20001EF")]
public class Objective_BuildHouses : Objective_HitValue
{
	[Token(Token = "0x17000118")]
	public override string Text
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x159DA40", Offset = "0x159DA40", VA = "0x159DA40", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x159DBA8", Offset = "0x159DBA8", VA = "0x159DBA8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x159DC34", Offset = "0x159DC34", VA = "0x159DC34")]
	public Objective_BuildHouses()
	{
	}
}
[Token(Token = "0x20001F0")]
public class Objective_BuildNumberOfBuildings : Objective_HitValue
{
	[Token(Token = "0x1700011A")]
	public override string Text
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x159DC38", Offset = "0x159DC38", VA = "0x159DC38", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x159DDA0", Offset = "0x159DDA0", VA = "0x159DDA0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x159DE2C", Offset = "0x159DE2C", VA = "0x159DE2C")]
	public Objective_BuildNumberOfBuildings()
	{
	}
}
[Token(Token = "0x20001F1")]
public class Objective_BuildNumberOfFacilities : Objective_HitValue
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public FacilityCategory m_category;

	[Token(Token = "0x1700011C")]
	public override string Text
	{
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x159DE30", Offset = "0x159DE30", VA = "0x159DE30", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x159E1A4", Offset = "0x159E1A4", VA = "0x159E1A4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x159E090", Offset = "0x159E090", VA = "0x159E090", Slot = "12")]
	public override string LocalisedDescForValue(int thisVal)
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x159DF80", Offset = "0x159DF80", VA = "0x159DF80")]
	private int NumBuilt()
	{
		return default(int);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x159E1D0", Offset = "0x159E1D0", VA = "0x159E1D0")]
	public Objective_BuildNumberOfFacilities()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Objective_BuildPower : Objective_HitValue
{
	[Token(Token = "0x1700011E")]
	public override string Text
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x159E1D4", Offset = "0x159E1D4", VA = "0x159E1D4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x159E33C", Offset = "0x159E33C", VA = "0x159E33C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x159E3C8", Offset = "0x159E3C8", VA = "0x159E3C8")]
	public Objective_BuildPower()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Objective_BuildRefineries : Objective_HitValue
{
	[Token(Token = "0x17000120")]
	public override string Text
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x159E3CC", Offset = "0x159E3CC", VA = "0x159E3CC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x159E534", Offset = "0x159E534", VA = "0x159E534", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x159E5C0", Offset = "0x159E5C0", VA = "0x159E5C0")]
	public Objective_BuildRefineries()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Objective_BuildRocketBoosters : Objective_HitValue
{
	[Token(Token = "0x17000122")]
	public override string Text
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x159E5C4", Offset = "0x159E5C4", VA = "0x159E5C4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x159E72C", Offset = "0x159E72C", VA = "0x159E72C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x159E7B8", Offset = "0x159E7B8", VA = "0x159E7B8")]
	public Objective_BuildRocketBoosters()
	{
	}
}
[Token(Token = "0x20001F5")]
public class Objective_BuildWarehouses : Objective_HitValue
{
	[Token(Token = "0x17000124")]
	public override string Text
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x159E7BC", Offset = "0x159E7BC", VA = "0x159E7BC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000125")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x159E924", Offset = "0x159E924", VA = "0x159E924", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x159EC28", Offset = "0x159EC28", VA = "0x159EC28")]
	public Objective_BuildWarehouses()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Objective_GetCovetedItems : Objective_HitValue
{
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE30", Offset = "0x8ECE30")]
	private sealed class <StartCR>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Objective_GetCovetedItems <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x16BA768", Offset = "0x16BA768", VA = "0x16BA768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x16BA7B0", Offset = "0x16BA7B0", VA = "0x16BA7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x16BA494", Offset = "0x16BA494", VA = "0x16BA494")]
		[DebuggerHidden]
		public <StartCR>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x16BA4C0", Offset = "0x16BA4C0", VA = "0x16BA4C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x16BA4C4", Offset = "0x16BA4C4", VA = "0x16BA4C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x16BA770", Offset = "0x16BA770", VA = "0x16BA770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE40", Offset = "0x8ECE40")]
	private sealed class <AddPersonsHGCovets_CR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Objective_GetCovetedItems <>4__this;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person p;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x16BA444", Offset = "0x16BA444", VA = "0x16BA444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x16BA48C", Offset = "0x16BA48C", VA = "0x16BA48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x16BA38C", Offset = "0x16BA38C", VA = "0x16BA38C")]
		[DebuggerHidden]
		public <AddPersonsHGCovets_CR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x16BA3B8", Offset = "0x16BA3B8", VA = "0x16BA3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x16BA3BC", Offset = "0x16BA3BC", VA = "0x16BA3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x16BA44C", Offset = "0x16BA44C", VA = "0x16BA44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE50", Offset = "0x8ECE50")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__6_0;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x16BA308", Offset = "0x16BA308", VA = "0x16BA308")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x16BA310", Offset = "0x16BA310", VA = "0x16BA310")]
		internal bool <AddPersonsHGCovets>b__6_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<HG_GotCovetedItem> m_hgCovets;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_numComplete;

	[Token(Token = "0x17000126")]
	public override string Text
	{
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x159F0A0", Offset = "0x159F0A0", VA = "0x159F0A0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x159F1B8", Offset = "0x159F1B8", VA = "0x159F1B8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x159EC2C", Offset = "0x159EC2C", VA = "0x159EC2C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x159EC78", Offset = "0x159EC78", VA = "0x159EC78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901C98", Offset = "0x901C98")]
	private IEnumerator StartCR()
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x159ECF0", Offset = "0x159ECF0", VA = "0x159ECF0")]
	private void OnPersonCreated(Person p)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x159ED1C", Offset = "0x159ED1C", VA = "0x159ED1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901CF8", Offset = "0x901CF8")]
	private IEnumerator AddPersonsHGCovets_CR(Person p)
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x159EDB0", Offset = "0x159EDB0", VA = "0x159EDB0")]
	private void AddPersonsHGCovets(Person p)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x159EFEC", Offset = "0x159EFEC", VA = "0x159EFEC")]
	private void OnAnyHGCovetStatusChange(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x159F1CC", Offset = "0x159F1CC", VA = "0x159F1CC")]
	public Objective_GetCovetedItems()
	{
	}
}
[Token(Token = "0x20001FA")]
public class Objective_HappinessCount : Objective_HitValue
{
	[Token(Token = "0x1700012C")]
	public override string Text
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x159F24C", Offset = "0x159F24C", VA = "0x159F24C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x159F3D4", Offset = "0x159F3D4", VA = "0x159F3D4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x159F488", Offset = "0x159F488", VA = "0x159F488")]
	public Objective_HappinessCount()
	{
	}
}
[Token(Token = "0x20001FB")]
public abstract class Objective_HitValue : Objective
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Value;

	[Token(Token = "0x1700012E")]
	public override string LocalisedDesc
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x159F48C", Offset = "0x159F48C", VA = "0x159F48C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x159F570", Offset = "0x159F570", VA = "0x159F570", Slot = "12")]
	public virtual string LocalisedDescForValue(int thisVal)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x159D844", Offset = "0x159D844", VA = "0x159D844")]
	protected Objective_HitValue()
	{
	}
}
[Token(Token = "0x20001FC")]
public class Objective_PlaceDecorations : Objective_HitValue
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_targetDecoCount;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_startDecoCount;

	[Token(Token = "0x1700012F")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x159F654", Offset = "0x159F654", VA = "0x159F654", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	public override string Text
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x159F6EC", Offset = "0x159F6EC", VA = "0x159F6EC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x159F86C", Offset = "0x159F86C", VA = "0x159F86C", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x159F930", Offset = "0x159F930", VA = "0x159F930")]
	public Objective_PlaceDecorations()
	{
	}
}
[Token(Token = "0x20001FD")]
public class Objective_PopulationCount : Objective_HitValue
{
	[Token(Token = "0x17000131")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x159F934", Offset = "0x159F934", VA = "0x159F934", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public override string Text
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x159FB0C", Offset = "0x159FB0C", VA = "0x159FB0C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x159FC84", Offset = "0x159FC84", VA = "0x159FC84")]
	public Objective_PopulationCount()
	{
	}
}
[Token(Token = "0x20001FE")]
public class Objective_Sandbox : Objective
{
	[Token(Token = "0x17000133")]
	public override string Text
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x159FC88", Offset = "0x159FC88", VA = "0x159FC88", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x159FCFC", Offset = "0x159FCFC", VA = "0x159FCFC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x159FD04", Offset = "0x159FD04", VA = "0x159FD04")]
	public Objective_Sandbox()
	{
	}
}
[Token(Token = "0x20001FF")]
public class Objective_ScrapBalance : Objective_HitValue
{
	[Token(Token = "0x17000135")]
	public override string Text
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x159FD08", Offset = "0x159FD08", VA = "0x159FD08", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x159FE70", Offset = "0x159FE70", VA = "0x159FE70", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x159FEF4", Offset = "0x159FEF4", VA = "0x159FEF4")]
	public Objective_ScrapBalance()
	{
	}
}
[Token(Token = "0x2000200")]
public class Objective_SurviveSolarFlares : Objective_HitValue
{
	[Token(Token = "0x17000137")]
	public override string Text
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x159FEF8", Offset = "0x159FEF8", VA = "0x159FEF8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x15A004C", Offset = "0x15A004C", VA = "0x15A004C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x15A00C0", Offset = "0x15A00C0", VA = "0x15A00C0")]
	public Objective_SurviveSolarFlares()
	{
	}
}
[Token(Token = "0x2000201")]
public class ScenarioManager : MonoBehaviour
{
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE60", Offset = "0x8ECE60")]
	private sealed class <ShowAutoSave>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x1589A68", Offset = "0x1589A68", VA = "0x1589A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x1589AB0", Offset = "0x1589AB0", VA = "0x1589AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x158994C", Offset = "0x158994C", VA = "0x158994C")]
		[DebuggerHidden]
		public <ShowAutoSave>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1589978", Offset = "0x1589978", VA = "0x1589978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x158997C", Offset = "0x158997C", VA = "0x158997C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1589A70", Offset = "0x1589A70", VA = "0x1589A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE70", Offset = "0x8ECE70")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button gotoMenuBtn;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button stayHereBtn;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueBox dialogueBox;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1588888", Offset = "0x1588888", VA = "0x1588888")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1588890", Offset = "0x1588890", VA = "0x1588890")]
		internal void <OnObjectivesCompleteCR>b__1()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x15888B0", Offset = "0x15888B0", VA = "0x15888B0")]
		internal void <OnObjectivesCompleteCR>b__2()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x15888D0", Offset = "0x15888D0", VA = "0x15888D0")]
		internal void <OnObjectivesCompleteCR>b__3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE80", Offset = "0x8ECE80")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Objective> <>9__20_0;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x15887EC", Offset = "0x15887EC", VA = "0x15887EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x15887F4", Offset = "0x15887F4", VA = "0x15887F4")]
		internal bool <OnObjectivesCompleteCR>b__20_0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECE90", Offset = "0x8ECE90")]
	private sealed class <OnObjectivesCompleteCR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayBeforeMessage;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass20_0 <>8__1;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <numC>5__2;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x15898FC", Offset = "0x15898FC", VA = "0x15898FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x1589944", Offset = "0x1589944", VA = "0x1589944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1588E84", Offset = "0x1588E84", VA = "0x1588E84")]
		[DebuggerHidden]
		public <OnObjectivesCompleteCR>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1588EB0", Offset = "0x1588EB0", VA = "0x1588EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1588EB4", Offset = "0x1588EB4", VA = "0x1588EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1589904", Offset = "0x1589904", VA = "0x1589904", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECEA0", Offset = "0x8ECEA0")]
	private sealed class <DoCompleteAllObjectives>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Objective>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x1588E34", Offset = "0x1588E34", VA = "0x1588E34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x1588E7C", Offset = "0x1588E7C", VA = "0x1588E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x15889B4", Offset = "0x15889B4", VA = "0x15889B4")]
		[DebuggerHidden]
		public <DoCompleteAllObjectives>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x15889E0", Offset = "0x15889E0", VA = "0x15889E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1588A50", Offset = "0x1588A50", VA = "0x1588A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x15889FC", Offset = "0x15889FC", VA = "0x15889FC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1588E3C", Offset = "0x1588E3C", VA = "0x1588E3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECEB0", Offset = "0x8ECEB0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Objective o;

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1588900", Offset = "0x1588900", VA = "0x1588900")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1588908", Offset = "0x1588908", VA = "0x1588908")]
		internal bool <PopulateObjectives>b__0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScenarioManager Instance;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Scenario m_currentScenario;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public List<Objective> m_objectives;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	public List<string> m_completedObjectives;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public List<Modifier> m_modifiers;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5068", Offset = "0x8F5068")]
	public GameObject m_scenarioCompleteDialogue;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_confettiVFXPrefab;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_maxConfettis;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool AllObjectivesConsideredComplete;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool ScenarioCompleteAnimationComplete;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_autoSaveIcon;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_autoSaveShowDur;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x15B5438", Offset = "0x15B5438", VA = "0x15B5438")]
	public bool AreAllObjectivesActuallyComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x15B5568", Offset = "0x15B5568", VA = "0x15B5568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x15B55BC", Offset = "0x15B55BC", VA = "0x15B55BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x15B570C", Offset = "0x15B570C", VA = "0x15B570C")]
	public void ObjectiveCompleteDialogueReturnToMenu()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x15B5864", Offset = "0x15B5864", VA = "0x15B5864")]
	public void ObjectiveCompleteResumePlaying()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x15B5954", Offset = "0x15B5954", VA = "0x15B5954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901DF8", Offset = "0x901DF8")]
	private IEnumerator ShowAutoSave()
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x15B59CC", Offset = "0x15B59CC", VA = "0x15B59CC")]
	private void OnObjectiveComplete(Objective o)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x15B5BBC", Offset = "0x15B5BBC", VA = "0x15B5BBC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901E58", Offset = "0x901E58")]
	public void OnAllObjectivesComplete()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x15B5BEC", Offset = "0x15B5BEC", VA = "0x15B5BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901E70", Offset = "0x901E70")]
	private IEnumerator OnObjectivesCompleteCR(float delayBeforeMessage)
	{
		return null;
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x15B5C74", Offset = "0x15B5C74", VA = "0x15B5C74")]
	private string GetCurrentScenarioCompleteMessage()
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x15B5D78", Offset = "0x15B5D78", VA = "0x15B5D78")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901ED0", Offset = "0x901ED0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x901ED0", Offset = "0x901ED0")]
	private void DebugCompleteAllObjectives()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x15B5DA4", Offset = "0x15B5DA4", VA = "0x15B5DA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x901F34", Offset = "0x901F34")]
	private IEnumerator DoCompleteAllObjectives()
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x15B5E1C", Offset = "0x15B5E1C", VA = "0x15B5E1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x901F94", Offset = "0x901F94")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x901F94", Offset = "0x901F94")]
	private void DebugCompleteActiveObjectives()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x15B5F64", Offset = "0x15B5F64", VA = "0x15B5F64")]
	public void InitialiseWithScenario(Scenario s)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x15B66AC", Offset = "0x15B66AC", VA = "0x15B66AC")]
	public void ResumeWithScenario(Scenario s)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x15B661C", Offset = "0x15B661C", VA = "0x15B661C")]
	private void PerformCommonScenarioSetup(Scenario s)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x15B6B98", Offset = "0x15B6B98", VA = "0x15B6B98")]
	private void PopulateObjectives()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x15B7630", Offset = "0x15B7630", VA = "0x15B7630")]
	private void PopulateModifiers()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x15B7AF8", Offset = "0x15B7AF8", VA = "0x15B7AF8")]
	public ScenarioManager()
	{
	}
}
[Token(Token = "0x2000208")]
public class TutObjective_BreakAsteroids : Objective
{
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECEC0", Offset = "0x8ECEC0")]
	private sealed class <ShowStartMessage>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BreakAsteroids <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x1591388", Offset = "0x1591388", VA = "0x1591388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x15913D0", Offset = "0x15913D0", VA = "0x15913D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x159122C", Offset = "0x159122C", VA = "0x159122C")]
		[DebuggerHidden]
		public <ShowStartMessage>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1591258", Offset = "0x1591258", VA = "0x1591258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x159125C", Offset = "0x159125C", VA = "0x159125C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1591390", Offset = "0x1591390", VA = "0x1591390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatRange m_asteroidRate;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FloatRange m_asteroidRateWas;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AsteroidEmitter m_asteroidEmitter;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_numPopped;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_targetNumToPop;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_startMessageShown;

	[Token(Token = "0x1700013F")]
	public override string Text
	{
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1794C70", Offset = "0x1794C70", VA = "0x1794C70", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000140")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1794CE4", Offset = "0x1794CE4", VA = "0x1794CE4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1794CF4", Offset = "0x1794CF4", VA = "0x1794CF4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1794CFC", Offset = "0x1794CFC", VA = "0x1794CFC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1794F84", Offset = "0x1794F84", VA = "0x1794F84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9020E8", Offset = "0x9020E8")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1794FFC", Offset = "0x1794FFC", VA = "0x1794FFC", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1795240", Offset = "0x1795240", VA = "0x1795240")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x17953B0", Offset = "0x17953B0", VA = "0x17953B0")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x179550C", Offset = "0x179550C", VA = "0x179550C")]
	private void AsteroidPopped(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x17956DC", Offset = "0x17956DC", VA = "0x17956DC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x17956E4", Offset = "0x17956E4", VA = "0x17956E4")]
	public TutObjective_BreakAsteroids()
	{
	}
}
[Token(Token = "0x200020A")]
public class TutObjective_BuildHouse : Objective
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECED0", Offset = "0x8ECED0")]
	private sealed class <ShowStartMessage>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BuildHouse <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x15916F8", Offset = "0x15916F8", VA = "0x15916F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x1591740", Offset = "0x1591740", VA = "0x1591740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1591494", Offset = "0x1591494", VA = "0x1591494")]
		[DebuggerHidden]
		public <ShowStartMessage>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x15914C0", Offset = "0x15914C0", VA = "0x15914C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x15914C4", Offset = "0x15914C4", VA = "0x15914C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1591700", Offset = "0x1591700", VA = "0x1591700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECEE0", Offset = "0x8ECEE0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Person> <>9__21_0;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Person> <>9__21_1;

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x159143C", Offset = "0x159143C", VA = "0x159143C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1591444", Offset = "0x1591444", VA = "0x1591444")]
		internal bool <Update>b__21_0(Person x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1591470", Offset = "0x1591470", VA = "0x1591470")]
		internal bool <Update>b__21_1(Person x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_placedHouse;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_houseConstructed;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_folkMovedIn;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool m_holdingAHouse;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] m_availableShopPrefabs;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_housesInWorld;

	[Token(Token = "0x17000143")]
	public override string Text
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x179579C", Offset = "0x179579C", VA = "0x179579C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1795810", Offset = "0x1795810", VA = "0x1795810", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x179589C", Offset = "0x179589C", VA = "0x179589C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x17958A4", Offset = "0x17958A4", VA = "0x17958A4", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1795BF0", Offset = "0x1795BF0", VA = "0x1795BF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902198", Offset = "0x902198")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1795C68", Offset = "0x1795C68", VA = "0x1795C68", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x17960B0", Offset = "0x17960B0", VA = "0x17960B0")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x17962D8", Offset = "0x17962D8", VA = "0x17962D8")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1796500", Offset = "0x1796500", VA = "0x1796500")]
	private void BuildingSettles(Building b)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1796630", Offset = "0x1796630", VA = "0x1796630")]
	private void ConstructionComplete(Building b)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x17966EC", Offset = "0x17966EC", VA = "0x17966EC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x17972C4", Offset = "0x17972C4", VA = "0x17972C4")]
	public TutObjective_BuildHouse()
	{
	}
}
[Token(Token = "0x200020D")]
public class TutObjective_BuildPower : Objective
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECEF0", Offset = "0x8ECEF0")]
	private sealed class <ShowStartMessage>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BuildPower <>4__this;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x1591A08", Offset = "0x1591A08", VA = "0x1591A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x1591A50", Offset = "0x1591A50", VA = "0x1591A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1591804", Offset = "0x1591804", VA = "0x1591804")]
		[DebuggerHidden]
		public <ShowStartMessage>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1591830", Offset = "0x1591830", VA = "0x1591830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1591834", Offset = "0x1591834", VA = "0x1591834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1591A10", Offset = "0x1591A10", VA = "0x1591A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF00", Offset = "0x8ECF00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Person> <>9__19_0;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Person> <>9__19_1;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x15917AC", Offset = "0x15917AC", VA = "0x15917AC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x15917B4", Offset = "0x15917B4", VA = "0x15917B4")]
		internal bool <Update>b__19_0(Person x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x15917E0", Offset = "0x15917E0", VA = "0x15917E0")]
		internal bool <Update>b__19_1(Person x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_powerConnectedToCloud;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_powerConstructed;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_powerStationPrefab;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PopOffItemAvailability m_powerStationShopItem;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool powerStationExistsLastFrame;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 m_pieceLocation;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 m_pieceRotation;

	[Token(Token = "0x17000147")]
	public override string Text
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x17972CC", Offset = "0x17972CC", VA = "0x17972CC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1797340", Offset = "0x1797340", VA = "0x1797340", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x17973C4", Offset = "0x17973C4", VA = "0x17973C4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x17973CC", Offset = "0x17973CC", VA = "0x17973CC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1797598", Offset = "0x1797598", VA = "0x1797598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902248", Offset = "0x902248")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1797610", Offset = "0x1797610", VA = "0x1797610", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000AE5")]
	private T GetHeldComponent<T>() where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x17976EC", Offset = "0x17976EC", VA = "0x17976EC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x17980B4", Offset = "0x17980B4", VA = "0x17980B4")]
	private void DrawPlacementHint()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1798208", Offset = "0x1798208", VA = "0x1798208")]
	public TutObjective_BuildPower()
	{
	}
}
[Token(Token = "0x2000210")]
public class TutObjective_InfoPanels : Objective
{
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF10", Offset = "0x8ECF10")]
	private sealed class <ShowStartMessage>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_InfoPanels <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x1591DA0", Offset = "0x1591DA0", VA = "0x1591DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x1591DE8", Offset = "0x1591DE8", VA = "0x1591DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1591A58", Offset = "0x1591A58", VA = "0x1591A58")]
		[DebuggerHidden]
		public <ShowStartMessage>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1591A84", Offset = "0x1591A84", VA = "0x1591A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1591A88", Offset = "0x1591A88", VA = "0x1591A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1591DA8", Offset = "0x1591DA8", VA = "0x1591DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_openedMenu;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool m_complete;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UICityBasicInfo m_cityBasicInfo;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UICityNeeds m_cityNeeds;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UIObjectiveList m_objectiveList;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIPersonListPanel m_personList;

	[Token(Token = "0x1700014B")]
	public override string Text
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x179824C", Offset = "0x179824C", VA = "0x179824C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x17982C0", Offset = "0x17982C0", VA = "0x17982C0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x17982C8", Offset = "0x17982C8", VA = "0x17982C8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x17982D0", Offset = "0x17982D0", VA = "0x17982D0", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x179840C", Offset = "0x179840C", VA = "0x179840C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9022F8", Offset = "0x9022F8")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x1798484", Offset = "0x1798484", VA = "0x1798484", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x1798818", Offset = "0x1798818", VA = "0x1798818", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x17989C8", Offset = "0x17989C8", VA = "0x17989C8")]
	public TutObjective_InfoPanels()
	{
	}
}
[Token(Token = "0x2000212")]
public class TutObjective_Movement : Objective
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_distanceTarget;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_rotateTarget;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_distanceMoved;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_angleRotated;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_playerTrans;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_playerPosLastFrame;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_playerRotLastFrame;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_startMessageHideAt;

	[Token(Token = "0x1700014F")]
	public override string Text
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x17989D0", Offset = "0x17989D0", VA = "0x17989D0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1798A44", Offset = "0x1798A44", VA = "0x1798A44", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1798A70", Offset = "0x1798A70", VA = "0x1798A70", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1798AFC", Offset = "0x1798AFC", VA = "0x1798AFC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1798BF0", Offset = "0x1798BF0", VA = "0x1798BF0", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1798CCC", Offset = "0x1798CCC", VA = "0x1798CCC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x1799310", Offset = "0x1799310", VA = "0x1799310")]
	public TutObjective_Movement()
	{
	}
}
[Token(Token = "0x2000213")]
public class TutObjective_NEW : Objective_HitValue
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF20", Offset = "0x8ECF20")]
	private sealed class <ShowStartMessage>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NEW <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x1591F4C", Offset = "0x1591F4C", VA = "0x1591F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x1591F94", Offset = "0x1591F94", VA = "0x1591F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1591DF0", Offset = "0x1591DF0", VA = "0x1591DF0")]
		[DebuggerHidden]
		public <ShowStartMessage>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1591E1C", Offset = "0x1591E1C", VA = "0x1591E1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1591E20", Offset = "0x1591E20", VA = "0x1591E20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1591F54", Offset = "0x1591F54", VA = "0x1591F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_numThing;

	[Token(Token = "0x17000151")]
	public override string Text
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1799324", Offset = "0x1799324", VA = "0x1799324", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1799398", Offset = "0x1799398", VA = "0x1799398", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x17993B0", Offset = "0x17993B0", VA = "0x17993B0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x17993B8", Offset = "0x17993B8", VA = "0x17993B8", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x17993F0", Offset = "0x17993F0", VA = "0x17993F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9023A8", Offset = "0x9023A8")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1799468", Offset = "0x1799468", VA = "0x1799468", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1799534", Offset = "0x1799534", VA = "0x1799534", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x179953C", Offset = "0x179953C", VA = "0x179953C")]
	public TutObjective_NEW()
	{
	}
}
[Token(Token = "0x2000215")]
public class TutObjective_NewInterest : Objective
{
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF30", Offset = "0x8ECF30")]
	private sealed class <ShowStartMessage>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewInterest <>4__this;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x15925C0", Offset = "0x15925C0", VA = "0x15925C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x1592608", Offset = "0x1592608", VA = "0x1592608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1592464", Offset = "0x1592464", VA = "0x1592464")]
		[DebuggerHidden]
		public <ShowStartMessage>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1592490", Offset = "0x1592490", VA = "0x1592490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1592494", Offset = "0x1592494", VA = "0x1592494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x15925C8", Offset = "0x15925C8", VA = "0x15925C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF40", Offset = "0x8ECF40")]
	private sealed class <GotANewItem>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewInterest <>4__this;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject item;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <interName>5__2;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x1592414", Offset = "0x1592414", VA = "0x1592414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x159245C", Offset = "0x159245C", VA = "0x159245C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1591F9C", Offset = "0x1591F9C", VA = "0x1591F9C")]
		[DebuggerHidden]
		public <GotANewItem>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1591FC8", Offset = "0x1591FC8", VA = "0x1591FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1591FCC", Offset = "0x1591FCC", VA = "0x1591FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x159241C", Offset = "0x159241C", VA = "0x159241C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_completed;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AsteroidEmitter m_asteroidEmitter;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_itemProbabilityBefore;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_lockedItemProbabilityBefore;

	[Token(Token = "0x17000155")]
	public override string Text
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1799544", Offset = "0x1799544", VA = "0x1799544", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x17995B8", Offset = "0x17995B8", VA = "0x17995B8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x17995C0", Offset = "0x17995C0", VA = "0x17995C0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x17995C8", Offset = "0x17995C8", VA = "0x17995C8", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x179980C", Offset = "0x179980C", VA = "0x179980C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902458", Offset = "0x902458")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1799884", Offset = "0x1799884", VA = "0x1799884", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1799A88", Offset = "0x1799A88", VA = "0x1799A88")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1799BE4", Offset = "0x1799BE4", VA = "0x1799BE4")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1799D40", Offset = "0x1799D40", VA = "0x1799D40")]
	private void AsteroidPopped(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1799E1C", Offset = "0x1799E1C", VA = "0x1799E1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9024B8", Offset = "0x9024B8")]
	private IEnumerator GotANewItem(GameObject item)
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1799EB0", Offset = "0x1799EB0", VA = "0x1799EB0", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1799F68", Offset = "0x1799F68", VA = "0x1799F68")]
	public TutObjective_NewInterest()
	{
	}
}
[Token(Token = "0x2000218")]
public class TutObjective_NewPerson : Objective
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF50", Offset = "0x8ECF50")]
	private sealed class <ShowStartMessage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewPerson <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x1592850", Offset = "0x1592850", VA = "0x1592850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x1592898", Offset = "0x1592898", VA = "0x1592898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1592610", Offset = "0x1592610", VA = "0x1592610")]
		[DebuggerHidden]
		public <ShowStartMessage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x159263C", Offset = "0x159263C", VA = "0x159263C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1592640", Offset = "0x1592640", VA = "0x1592640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1592858", Offset = "0x1592858", VA = "0x1592858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_newFolkMovedIn;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_newFolkArrived;

	[Token(Token = "0x1700015B")]
	public override string Text
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1799F78", Offset = "0x1799F78", VA = "0x1799F78", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015C")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1799FEC", Offset = "0x1799FEC", VA = "0x1799FEC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1799FF4", Offset = "0x1799FF4", VA = "0x1799FF4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1799FFC", Offset = "0x1799FFC", VA = "0x1799FFC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x179A054", Offset = "0x179A054", VA = "0x179A054")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9025B8", Offset = "0x9025B8")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x179A0CC", Offset = "0x179A0CC", VA = "0x179A0CC", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x179A25C", Offset = "0x179A25C", VA = "0x179A25C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x179A7D8", Offset = "0x179A7D8", VA = "0x179A7D8")]
	public TutObjective_NewPerson()
	{
	}
}
[Token(Token = "0x200021A")]
public class TutObjective_SpecialistFacilities : Objective
{
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF60", Offset = "0x8ECF60")]
	private sealed class <ShowStartMessage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_SpecialistFacilities <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x1592BE4", Offset = "0x1592BE4", VA = "0x1592BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x1592C2C", Offset = "0x1592C2C", VA = "0x1592C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x15928A0", Offset = "0x15928A0", VA = "0x15928A0")]
		[DebuggerHidden]
		public <ShowStartMessage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x15928CC", Offset = "0x15928CC", VA = "0x15928CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x15928D0", Offset = "0x15928D0", VA = "0x15928D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1592BEC", Offset = "0x1592BEC", VA = "0x1592BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool m_constructionComplete;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Facility m_completedFacility;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x1700015F")]
	public override string Text
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x15CC008", Offset = "0x15CC008", VA = "0x15CC008", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x15CC07C", Offset = "0x15CC07C", VA = "0x15CC07C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x15CC0E8", Offset = "0x15CC0E8", VA = "0x15CC0E8", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x15CC154", Offset = "0x15CC154", VA = "0x15CC154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902668", Offset = "0x902668")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x15CC1CC", Offset = "0x15CC1CC", VA = "0x15CC1CC", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x15CC444", Offset = "0x15CC444", VA = "0x15CC444", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x15CCAD8", Offset = "0x15CCAD8", VA = "0x15CCAD8")]
	public TutObjective_SpecialistFacilities()
	{
	}
}
[Token(Token = "0x200021C")]
public class TutObjective_Wait : Objective_HitValue
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_frameCount;

	[Token(Token = "0x17000163")]
	public override string Text
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x15CCAE0", Offset = "0x15CCAE0", VA = "0x15CCAE0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000164")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x15CCAE8", Offset = "0x15CCAE8", VA = "0x15CCAE8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x15CCAF8", Offset = "0x15CCAF8", VA = "0x15CCAF8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x15CCB0C", Offset = "0x15CCB0C", VA = "0x15CCB0C")]
	public TutObjective_Wait()
	{
	}
}
[Token(Token = "0x200021D")]
public class TutObjective_WhatIsHappiness : Objective
{
	[Serializable]
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF70", Offset = "0x8ECF70")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__13_0;

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1592C98", Offset = "0x1592C98", VA = "0x1592C98")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1592CA0", Offset = "0x1592CA0", VA = "0x1592CA0")]
		internal bool <Begin>b__13_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF80", Offset = "0x8ECF80")]
	private sealed class <ShowStartMessage>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_WhatIsHappiness <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x159379C", Offset = "0x159379C", VA = "0x159379C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x15937E4", Offset = "0x15937E4", VA = "0x15937E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x15932FC", Offset = "0x15932FC", VA = "0x15932FC")]
		[DebuggerHidden]
		public <ShowStartMessage>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1593328", Offset = "0x1593328", VA = "0x1593328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x159332C", Offset = "0x159332C", VA = "0x159332C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x15937A4", Offset = "0x15937A4", VA = "0x15937A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF90", Offset = "0x8ECF90")]
	private sealed class <GotSMINowMoreHP>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_WhatIsHappiness <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x15932AC", Offset = "0x15932AC", VA = "0x15932AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x15932F4", Offset = "0x15932F4", VA = "0x15932F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1592D1C", Offset = "0x1592D1C", VA = "0x1592D1C")]
		[DebuggerHidden]
		public <GotSMINowMoreHP>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1592D48", Offset = "0x1592D48", VA = "0x1592D48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1592D4C", Offset = "0x1592D4C", VA = "0x1592D4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x15932B4", Offset = "0x15932B4", VA = "0x15932B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_busReadyToLaunch;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HG_SeenMyInterest m_HgSeenMyInterest;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_seenAllInterestItems;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool m_seenAllInterestItemsMsgComplete;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_happinessNeededWas;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x17000165")]
	public override string Text
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x15CCB14", Offset = "0x15CCB14", VA = "0x15CCB14", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x15CCB88", Offset = "0x15CCB88", VA = "0x15CCB88", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x15CCB90", Offset = "0x15CCB90", VA = "0x15CCB90", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x15CCB98", Offset = "0x15CCB98", VA = "0x15CCB98", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x15CCE18", Offset = "0x15CCE18", VA = "0x15CCE18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902718", Offset = "0x902718")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x15CCE90", Offset = "0x15CCE90", VA = "0x15CCE90", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x15CCF6C", Offset = "0x15CCF6C", VA = "0x15CCF6C")]
	private void HgSeenMyInterestStatusChanged(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x15CCFC0", Offset = "0x15CCFC0", VA = "0x15CCFC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902778", Offset = "0x902778")]
	private IEnumerator GotSMINowMoreHP()
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x15CD038", Offset = "0x15CD038", VA = "0x15CD038", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x15CD2E0", Offset = "0x15CD2E0", VA = "0x15CD2E0")]
	public TutObjective_WhatIsHappiness()
	{
	}
}
[Token(Token = "0x2000221")]
public class OculusWwiseInitialize : MonoBehaviour
{
	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x15A00C4", Offset = "0x15A00C4", VA = "0x15A00C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x15A00C8", Offset = "0x15A00C8", VA = "0x15A00C8")]
	public OculusWwiseInitialize()
	{
	}
}
[Token(Token = "0x2000222")]
public class ModelVolume : MonoBehaviour
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_scaleAdjustment;

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1ABA164", Offset = "0x1ABA164", VA = "0x1ABA164")]
	public float GetScaleForPreviewBounds(Bounds previewBounds)
	{
		return default(float);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1ABA208", Offset = "0x1ABA208", VA = "0x1ABA208")]
	public void ScaleToFit(Transform previewItem)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1ABA460", Offset = "0x1ABA460", VA = "0x1ABA460")]
	public ModelVolume()
	{
	}
}
[Token(Token = "0x2000223")]
public class PaletteToggler : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_myItem;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_hideItems;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x15A5344", Offset = "0x15A5344", VA = "0x15A5344")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x15A5398", Offset = "0x15A5398", VA = "0x15A5398")]
	public PaletteToggler()
	{
	}
}
[Token(Token = "0x2000224")]
public class PopOffCityPiece : MonoBehaviour
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityPiecePropertyList m_availableCityPieces;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CityPieceProperties m_availableCityPiece;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_itemNameSizePercent;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1924FF0", Offset = "0x1924FF0", VA = "0x1924FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1925050", Offset = "0x1925050", VA = "0x1925050")]
	public PopOffCityPiece()
	{
	}
}
[Token(Token = "0x2000225")]
public class PopOffItem : MonoBehaviour
{
	[Token(Token = "0x2000226")]
	public class NVRHandEvent : UnityEvent<NVRHand>
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x15831B0", Offset = "0x15831B0", VA = "0x15831B0")]
		public NVRHandEvent()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECFA0", Offset = "0x8ECFA0")]
	private sealed class <HideShopCR>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x1583160", Offset = "0x1583160", VA = "0x1583160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x15831A8", Offset = "0x15831A8", VA = "0x15831A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1583058", Offset = "0x1583058", VA = "0x1583058")]
		[DebuggerHidden]
		public <HideShopCR>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1583084", Offset = "0x1583084", VA = "0x1583084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1583088", Offset = "0x1583088", VA = "0x1583088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1583168", Offset = "0x1583168", VA = "0x1583168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_base;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_popOffDist;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_modelRoot;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRHandEvent OnPopOff;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F50A0", Offset = "0x8F50A0")]
	public float m_lerpBackRate;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color m_lineDefaultColour;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color m_lineWillPopColour;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_colourBlendCurve;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_popFX;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F50D8", Offset = "0x8F50D8")]
	public ushort pulseDurationMS;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_lastPulse;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve m_hapticPulse;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_hapticAmp;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ElasticLine m_eLine;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_hasPopped;

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1925060", Offset = "0x1925060", VA = "0x1925060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x192526C", Offset = "0x192526C", VA = "0x192526C")]
	private void HideShop(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1925298", Offset = "0x1925298", VA = "0x1925298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902878", Offset = "0x902878")]
	private IEnumerator HideShopCR()
	{
		return null;
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x19252F4", Offset = "0x19252F4", VA = "0x19252F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1925888", Offset = "0x1925888", VA = "0x1925888")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x19258D4", Offset = "0x19258D4", VA = "0x19258D4")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x19257BC", Offset = "0x19257BC", VA = "0x19257BC")]
	private void PopOff()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1925860", Offset = "0x1925860", VA = "0x1925860")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9028D8", Offset = "0x9028D8")]
	private void DoReset()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x19258D8", Offset = "0x19258D8", VA = "0x19258D8")]
	public PopOffItem()
	{
	}
}
[Token(Token = "0x2000228")]
public class PopOffItemAvailability : MonoBehaviour, IToolTipProvider
{
	[Token(Token = "0x2000229")]
	public enum LockReason
	{
		[Token(Token = "0x4000B11")]
		NotManualLocked = -1,
		[Token(Token = "0x4000B12")]
		Modifier,
		[Token(Token = "0x4000B13")]
		Restricted,
		[Token(Token = "0x4000B14")]
		HP,
		[Token(Token = "0x4000B15")]
		NotYetFound
	}

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_cantBuyMaterial;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_availableLastFrame;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PopOffItem m_poi;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PopOffShopItem m_posi;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItemCost m_poic;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_poiii;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shop m_shop;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_unavailableUI;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text m_unavailableLabel;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer m_unavailableSprite;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_tooltip;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color m_unavailableToolTipColor;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool[] m_locked;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] m_lockReason;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string[] m_lockToolTip;

	[Token(Token = "0x1700016D")]
	public string ToolTipText
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1925A0C", Offset = "0x1925A0C", VA = "0x1925A0C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public int ToolTipOrder
	{
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1925A14", Offset = "0x1925A14", VA = "0x1925A14", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016F")]
	public bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1925A1C", Offset = "0x1925A1C", VA = "0x1925A1C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public Color ToolTipColor
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1925A2C", Offset = "0x1925A2C", VA = "0x1925A2C", Slot = "7")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1925A38", Offset = "0x1925A38", VA = "0x1925A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1925F10", Offset = "0x1925F10", VA = "0x1925F10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1926054", Offset = "0x1926054", VA = "0x1926054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x19260DC", Offset = "0x19260DC", VA = "0x19260DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x19260E4", Offset = "0x19260E4", VA = "0x19260E4")]
	public bool HasBeenFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1926124", Offset = "0x1926124", VA = "0x1926124")]
	public void SetCustomLockedNone()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x1926228", Offset = "0x1926228", VA = "0x1926228")]
	public void SetCustomLocked(bool b, LockReason reason, string tooltip)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1926350", Offset = "0x1926350", VA = "0x1926350")]
	private bool IsAvailable(out string reason)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1925C74", Offset = "0x1925C74", VA = "0x1925C74")]
	private void UpdateAvailable(bool force = false)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x192666C", Offset = "0x192666C", VA = "0x192666C")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1926674", Offset = "0x1926674", VA = "0x1926674")]
	public PopOffItemAvailability()
	{
	}
}
[Token(Token = "0x200022A")]
public class PopOffItemCost : MonoBehaviour
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_cost;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_buildCost;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_priceLabel;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_priceBGs;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_hideLabelsForZeroCost;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_requiresScaffold;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItem m_poi;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x192699C", Offset = "0x192699C", VA = "0x192699C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x1926A8C", Offset = "0x1926A8C", VA = "0x1926A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x1926BF8", Offset = "0x1926BF8", VA = "0x1926BF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1926D10", Offset = "0x1926D10", VA = "0x1926D10")]
	private void ItemPurchased(NVRHand h)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x1926F10", Offset = "0x1926F10", VA = "0x1926F10")]
	public void SetCost(float c, float buildCost = 0f, bool requiresScaffold = false)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x1927060", Offset = "0x1927060", VA = "0x1927060")]
	public PopOffItemCost()
	{
	}
}
[Token(Token = "0x200022B")]
public class PopOffPrefab : MonoBehaviour
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_prefabs;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1927070", Offset = "0x1927070", VA = "0x1927070")]
	public PopOffPrefab()
	{
	}
}
[Token(Token = "0x200022C")]
public class PopOffShopItem : MonoBehaviour, IToolTipProvider, ISfHandHoverResponder
{
	[Serializable]
	[Token(Token = "0x200022D")]
	public class Item
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_locKey;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_toolTipLocKey;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_shopItem;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_previewObject;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer m_previewObjectRenderer;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material m_previewDefaultMaterial;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PurchasableItem m_purchasableItem;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x15831FC", Offset = "0x15831FC", VA = "0x15831FC")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200022E")]
	public enum Alignment
	{
		[Token(Token = "0x4000B37")]
		TransformOrigin,
		[Token(Token = "0x4000B38")]
		GrabPoint
	}

	[Token(Token = "0x200022F")]
	public delegate void ModelChangeDelegate();

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item[] m_items;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item m_currentItem;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Alignment m_alignToHand;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro m_nameLabel;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItem m_popOffItem;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PopOffItemAvailability m_popOffItemAvailability;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToolTip m_toolTip;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_itemNameSizePercent;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_doPopTween;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_tooltip;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ModelChangeDelegate OnModelChanged;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_modelVisible;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material m_overrideMaterial;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float xwas;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float triggerAt;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string ms_nextItemSound;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string ms_prevItemSound;

	[Token(Token = "0x17000171")]
	public string ToolTipText
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1927078", Offset = "0x1927078", VA = "0x1927078", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public int ToolTipOrder
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x19270DC", Offset = "0x19270DC", VA = "0x19270DC", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000173")]
	public bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x19270E4", Offset = "0x19270E4", VA = "0x19270E4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public Color ToolTipColor
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x19270EC", Offset = "0x19270EC", VA = "0x19270EC", Slot = "7")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x19270F4", Offset = "0x19270F4", VA = "0x19270F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x192727C", Offset = "0x192727C", VA = "0x192727C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x1927310", Offset = "0x1927310", VA = "0x1927310")]
	public void PickNextPrefab()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x19277AC", Offset = "0x19277AC", VA = "0x19277AC")]
	public void PickPrevPrefab()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x1927220", Offset = "0x1927220", VA = "0x1927220")]
	public void PickNewPrefab()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x19273B8", Offset = "0x19273B8", VA = "0x19273B8")]
	public void SetupNewPrefab(Item newItem)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x1927854", Offset = "0x1927854", VA = "0x1927854")]
	private void SetCost()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1927958", Offset = "0x1927958", VA = "0x1927958")]
	private void OnPoppedOff(NVRHand hand)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x192661C", Offset = "0x192661C", VA = "0x192661C")]
	public void SetModelVisible(bool b)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1926514", Offset = "0x1926514", VA = "0x1926514")]
	public void SetModelOverrideMaterial(Material overrideMaterial)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1927F44", Offset = "0x1927F44", VA = "0x1927F44", Slot = "8")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x192802C", Offset = "0x192802C", VA = "0x192802C", Slot = "9")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x19282BC", Offset = "0x19282BC", VA = "0x19282BC", Slot = "10")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1928350", Offset = "0x1928350", VA = "0x1928350")]
	public PopOffShopItem()
	{
	}
}
[Token(Token = "0x2000230")]
public class PauseGame
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string ms_pauseSFX;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ms_unPauseSFX;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool ms_paused;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool ms_inputPaused;

	[Token(Token = "0x17000175")]
	public static bool IsPaused
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x15A7B58", Offset = "0x15A7B58", VA = "0x15A7B58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public static bool IsInputPaused
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x15A7BBC", Offset = "0x15A7BBC", VA = "0x15A7BBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x15A7C20", Offset = "0x15A7C20", VA = "0x15A7C20")]
	public static void DoPause()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x15A7DE0", Offset = "0x15A7DE0", VA = "0x15A7DE0")]
	public static void DoResume()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x15A7EC8", Offset = "0x15A7EC8", VA = "0x15A7EC8")]
	public static void DoPauseInput()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x15A7FEC", Offset = "0x15A7FEC", VA = "0x15A7FEC")]
	public static void DoResumeInput()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x15A7D10", Offset = "0x15A7D10", VA = "0x15A7D10")]
	private static void EndEphemeralGameInteractions()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x15A8108", Offset = "0x15A8108", VA = "0x15A8108")]
	public PauseGame()
	{
	}
}
[Token(Token = "0x2000231")]
public class PersonHousing
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Building ownedHouse;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Building assignedHouse;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PersonHousingState state;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onStateChanged;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x190D128", Offset = "0x190D128", VA = "0x190D128")]
	public PersonHousing(Building owned, Building assigned)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x190D36C", Offset = "0x190D36C", VA = "0x190D36C")]
	private void OnBuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1908D60", Offset = "0x1908D60", VA = "0x1908D60")]
	public bool AssignedHouseIsOwnedByAnother(Person person)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x190D450", Offset = "0x190D450", VA = "0x190D450")]
	public void Assign(Building house)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1908E04", Offset = "0x1908E04", VA = "0x1908E04")]
	public void Unassign()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x190D54C", Offset = "0x190D54C", VA = "0x190D54C")]
	public bool TryGetOwned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x190D504", Offset = "0x190D504", VA = "0x190D504")]
	public bool TryGetAssigned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x190D594", Offset = "0x190D594", VA = "0x190D594")]
	public bool TryGetOwnedOrAssigned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x190D5D4", Offset = "0x190D5D4", VA = "0x190D5D4")]
	public void MoveIn(Building newHouse, Person person)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x190D28C", Offset = "0x190D28C", VA = "0x190D28C")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x190D8C8", Offset = "0x190D8C8", VA = "0x190D8C8")]
	public void Highlight(bool value, bool includeAssigned, Highlighter.Style style = Highlighter.Style.OutlineCutThrough)
	{
	}
}
[Token(Token = "0x2000232")]
public enum PersonHousingState
{
	[Token(Token = "0x4000B42")]
	Homeless,
	[Token(Token = "0x4000B43")]
	Housed,
	[Token(Token = "0x4000B44")]
	Assigned
}
[Token(Token = "0x2000233")]
public class PhotoTaker : MonoBehaviour
{
	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1910014", Offset = "0x1910014", VA = "0x1910014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1910018", Offset = "0x1910018", VA = "0x1910018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x191001C", Offset = "0x191001C", VA = "0x191001C")]
	public PhotoTaker()
	{
	}
}
[Token(Token = "0x2000234")]
public class PhraseMaker
{
	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1910024", Offset = "0x1910024", VA = "0x1910024")]
	public static string GenerateFacilityName(FacilityDefinition fd, System.Random rand, List<Interest> interests)
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1910260", Offset = "0x1910260", VA = "0x1910260")]
	public PhraseMaker()
	{
	}
}
[Token(Token = "0x2000235")]
public class PinToController : MonoBehaviour
{
	[Token(Token = "0x2000236")]
	public enum Handedness
	{
		[Token(Token = "0x4000B49")]
		Right,
		[Token(Token = "0x4000B4A")]
		Left
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECFB0", Offset = "0x8ECFB0")]
	private sealed class <Pin>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PinToController <>4__this;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <placed>5__2;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x16BFB98", Offset = "0x16BFB98", VA = "0x16BFB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x16BFBE0", Offset = "0x16BFBE0", VA = "0x16BFBE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x16BF878", Offset = "0x16BF878", VA = "0x16BF878")]
		[DebuggerHidden]
		public <Pin>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x16BF8A4", Offset = "0x16BF8A4", VA = "0x16BF8A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x16BF8A8", Offset = "0x16BF8A8", VA = "0x16BF8A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x16BFBA0", Offset = "0x16BFBA0", VA = "0x16BFBA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons m_button;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Handedness m_handIfUndefined;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1910268", Offset = "0x1910268", VA = "0x1910268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x191030C", Offset = "0x191030C", VA = "0x191030C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1910294", Offset = "0x1910294", VA = "0x1910294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902940", Offset = "0x902940")]
	private IEnumerator Pin()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1910380", Offset = "0x1910380", VA = "0x1910380")]
	public PinToController()
	{
	}
}
[Token(Token = "0x2000238")]
public class PlatformSpecialLoader : MonoBehaviour
{
	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x19110D8", Offset = "0x19110D8", VA = "0x19110D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x19110DC", Offset = "0x19110DC", VA = "0x19110DC")]
	public PlatformSpecialLoader()
	{
	}
}
[Token(Token = "0x2000239")]
public class PointAndSnap : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public delegate void OnPickupDelegate();

	[Token(Token = "0x200023B")]
	public delegate void OnReleasedDelegate(bool didSnap, bool validPlacement, RaycastHit hitInfo);

	[Token(Token = "0x200023C")]
	public delegate bool ValidTarget(Collider collider);

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5110", Offset = "0x8F5110")]
	public static bool ms_highlightBlockers;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5158", Offset = "0x8F5158")]
	public static bool ms_edgeSnapping;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F51A0", Offset = "0x8F51A0")]
	public static float ms_edgeSnapScale;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F51E8", Offset = "0x8F51E8")]
	public static float ms_edgeSnapInset;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5228", Offset = "0x8F5228")]
	public static bool ms_edgeSnappingAuto;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5270", Offset = "0x8F5270")]
	public static float ms_edgeSnapAutoDist;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F52B0", Offset = "0x8F52B0")]
	public static float ms_edgeSnapRayDist;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Collider[] ms_overlapColliderResults;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_customUI;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F52F0", Offset = "0x8F52F0")]
	public PointAndSnapUI m_ui;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter m_previewMeshSource;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_showMeshPreview;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_rayLength;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_rayStartOffset;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F5330", Offset = "0x8F5330")]
	public float m_rayHandCorrectionFraction;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_rayVec;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ReadOnly]
	public bool m_rayHit;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RaycastHit m_hitInfo;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_pickUpPos;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion m_pickupRot;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5358", Offset = "0x8F5358")]
	private Transform <m_pickupParent>k__BackingField;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public OnPickupDelegate OnWillPickUp;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public OnPickupDelegate OnWasPickedUp;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public OnReleasedDelegate OnSnap;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ValidTarget CheckForValidTarget;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform rayLocator;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool rayLocatorWasRotated;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int defaultLayerMask;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bounds m_placementTestBounds;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Collider m_placementCollider;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool m_doCollision;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int m_placementCorrectionAttempts;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool validPlacement;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool validPlacementAtHitPoint;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly float[] placementAttemptDistances;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool updateHeld;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform m_transform;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5368", Offset = "0x8F5368")]
	public float m_edgeCheckDist;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_edgeCheckHeight;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float m_edgeCheckDepth;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 m_snappedPosition;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion m_snappedRotation;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool m_edgeSnapping;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject model;

	[Token(Token = "0x17000179")]
	public Transform m_pickupParent
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1921968", Offset = "0x1921968", VA = "0x1921968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9029F0", Offset = "0x9029F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1921970", Offset = "0x1921970", VA = "0x1921970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902A00", Offset = "0x902A00")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1921978", Offset = "0x1921978", VA = "0x1921978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1921F4C", Offset = "0x1921F4C", VA = "0x1921F4C")]
	private void HideUI()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x192207C", Offset = "0x192207C", VA = "0x192207C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x19225CC", Offset = "0x19225CC", VA = "0x19225CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1922714", Offset = "0x1922714", VA = "0x1922714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x19227AC", Offset = "0x19227AC", VA = "0x19227AC")]
	private void CheckForPossibleSnap()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x192388C", Offset = "0x192388C", VA = "0x192388C")]
	private Bounds GetTestBounds(Vector3 potential3dModelPosition, Quaternion potential3dModelRotation, Vector3 rayLocatorLocalPosition)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1923A94", Offset = "0x1923A94", VA = "0x1923A94")]
	private void UpdateOnRayHit(Vector3 potential3dModelPosition, Quaternion potential3dModelRotation)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1923D38", Offset = "0x1923D38", VA = "0x1923D38")]
	private void UpdateOnRayMiss()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1923338", Offset = "0x1923338", VA = "0x1923338")]
	private Vector3 ValidateRayStart(Vector3 rayLocatorLocalPosition, Vector3 rayDirection)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1923E3C", Offset = "0x1923E3C", VA = "0x1923E3C")]
	private bool Depenetrate(Vector3 rayDirection, Vector3 rayStart, int numTerrainColliders, out Vector3 depenetratedPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x19240BC", Offset = "0x19240BC", VA = "0x19240BC")]
	private static void DebugBounds(Bounds bounds, Quaternion rotation, Color color)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x19246D0", Offset = "0x19246D0", VA = "0x19246D0")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1924840", Offset = "0x1924840", VA = "0x1924840")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1922210", Offset = "0x1922210", VA = "0x1922210")]
	private void Reinit()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x192474C", Offset = "0x192474C", VA = "0x192474C")]
	private void UpdateParentColliders(Transform target)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x19248DC", Offset = "0x19248DC", VA = "0x19248DC")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1923774", Offset = "0x1923774", VA = "0x1923774")]
	private Vector3 GetOffsetPosition(Quaternion rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x1923594", Offset = "0x1923594", VA = "0x1923594")]
	private Quaternion GetRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1924C5C", Offset = "0x1924C5C", VA = "0x1924C5C")]
	public PointAndSnap()
	{
	}
}
[Token(Token = "0x200023D")]
public class PointAndSnapUI : MonoBehaviour
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shapes.Line m_line;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_snapTargetVis;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter m_3dModel;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer m_3dModelRenderer;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_blueMaterial;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_redMaterial;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x1924E38", Offset = "0x1924E38", VA = "0x1924E38")]
	public PointAndSnapUI()
	{
	}
}
[Token(Token = "0x200023E")]
[ExecuteInEditMode]
public class PolylineSpline : Vitei.Line
{
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECFD0", Offset = "0x8ECFD0")]
	private sealed class <GeneratePoints>d__5 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Point <>2__current;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PolylineSpline <>4__this;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <step>5__2;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x1700017A")]
		private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x16C1EFC", Offset = "0x16C1EFC", VA = "0x16C1EFC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Point);
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x16C1F48", Offset = "0x16C1F48", VA = "0x16C1F48", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x16C1DFC", Offset = "0x16C1DFC", VA = "0x16C1DFC")]
		[DebuggerHidden]
		public <GeneratePoints>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x16C1E34", Offset = "0x16C1E34", VA = "0x16C1E34", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x16C1E38", Offset = "0x16C1E38", VA = "0x16C1E38", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x16C1F08", Offset = "0x16C1F08", VA = "0x16C1F08", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x16C1FA8", Offset = "0x16C1FA8", VA = "0x16C1FA8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x16C2058", Offset = "0x16C2058", VA = "0x16C2058", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_start;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_end;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_startCache;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_endCache;

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1924E40", Offset = "0x1924E40", VA = "0x1924E40", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902A10", Offset = "0x902A10")]
	protected override IEnumerable<Point> GeneratePoints()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1924EB8", Offset = "0x1924EB8", VA = "0x1924EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1924F34", Offset = "0x1924F34", VA = "0x1924F34", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1924EBC", Offset = "0x1924EBC", VA = "0x1924EBC")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1924FE8", Offset = "0x1924FE8", VA = "0x1924FE8")]
	public PolylineSpline()
	{
	}
}
[Token(Token = "0x2000240")]
public class Probability : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	public enum Rarity
	{
		[Token(Token = "0x4000B91")]
		Common = 50,
		[Token(Token = "0x4000B92")]
		Uncommon = 30,
		[Token(Token = "0x4000B93")]
		Rare = 10,
		[Token(Token = "0x4000B94")]
		Epic = 5,
		[Token(Token = "0x4000B95")]
		Legendary = 3,
		[Token(Token = "0x4000B96")]
		Mythic = 1,
		[Token(Token = "0x4000B97")]
		Custom = -1
	}

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rarity m_rarity;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F53B0", Offset = "0x8F53B0")]
	[SerializeField]
	private float m_value;

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x192A168", Offset = "0x192A168", VA = "0x192A168")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x192A180", Offset = "0x192A180", VA = "0x192A180")]
	public float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x192A19C", Offset = "0x192A19C", VA = "0x192A19C")]
	public void SetValue(float p)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x192A1AC", Offset = "0x192A1AC", VA = "0x192A1AC")]
	public Probability()
	{
	}
}
[Token(Token = "0x2000242")]
public class ProgressBar_Sprites : MonoBehaviour
{
	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F5418", Offset = "0x8F5418")]
	public float m_progress;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_maxWidth;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_borderWidth;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer m_fillSprite;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer m_fillSpriteBorder;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F5430", Offset = "0x8F5430")]
	public bool m_updateInEditor;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x192A95C", Offset = "0x192A95C", VA = "0x192A95C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x192A970", Offset = "0x192A970", VA = "0x192A970")]
	public void SetProgress(float prog)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x192AA70", Offset = "0x192AA70", VA = "0x192AA70")]
	public ProgressBar_Sprites()
	{
	}
}
[Token(Token = "0x2000243")]
public class Progression : MonoBehaviour
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TheSun m_theSun;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_solarFlaresStartAtScrapBalance;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x192AA84", Offset = "0x192AA84", VA = "0x192AA84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x192AB44", Offset = "0x192AB44", VA = "0x192AB44")]
	public Progression()
	{
	}
}
[Token(Token = "0x2000244")]
public class PurchasableItem : MonoBehaviour
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_cost;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_buildCost;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_requiresScaffold;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StretchableItem stretcher;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasStretcher;

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x192AB54", Offset = "0x192AB54", VA = "0x192AB54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x192AD34", Offset = "0x192AD34", VA = "0x192AD34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x192ADE8", Offset = "0x192ADE8", VA = "0x192ADE8")]
	private void OnExploded(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x192B218", Offset = "0x192B218", VA = "0x192B218")]
	private void OnDidNotExplode(StretchableItem si)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x192B3DC", Offset = "0x192B3DC", VA = "0x192B3DC")]
	public PurchasableItem()
	{
	}
}
[Token(Token = "0x2000245")]
public class Radio : MonoBehaviour
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_songName;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_songNameLabel;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_volumeSteps;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_scrollSpeed;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_numLetters;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_textMonoSpace;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_poweredOffText;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_eventTurnOn;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string m_eventTurnOff;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_sfxLoudnessPush;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_sfxLoudnessRelease;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_sfxPowerPush;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string m_sfxPowerRelease;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string m_sfxVolumePush;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string m_sfxVolumeRelease;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string m_sfxNextTrackPush;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_sfxNextTrackRelease;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isOn;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_volume;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] m_buttonsHiddenToStart;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] m_scrollingText;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int m_lastIdx;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_scrollTimer;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_delayBeforeCanTurnOff;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_turnedOnAt;

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x192F9CC", Offset = "0x192F9CC", VA = "0x192F9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x192FD5C", Offset = "0x192FD5C", VA = "0x192FD5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x192FE0C", Offset = "0x192FE0C", VA = "0x192FE0C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902AE0", Offset = "0x902AE0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902AE0", Offset = "0x902AE0")]
	public void RadioOn()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x192FED8", Offset = "0x192FED8", VA = "0x192FED8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902B44", Offset = "0x902B44")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902B44", Offset = "0x902B44")]
	public void RadioOff()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x192FFB0", Offset = "0x192FFB0", VA = "0x192FFB0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902BA8", Offset = "0x902BA8")]
	public void VolUpPressed()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1930114", Offset = "0x1930114", VA = "0x1930114")]
	public void VolUpUnPressed()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1930200", Offset = "0x1930200", VA = "0x1930200")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902BC0", Offset = "0x902BC0")]
	public void VolDnPressed()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1930364", Offset = "0x1930364", VA = "0x1930364")]
	public void VolDnUnPressed()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1930450", Offset = "0x1930450", VA = "0x1930450")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902BD8", Offset = "0x902BD8")]
	public void LoudnessPressed()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1930568", Offset = "0x1930568", VA = "0x1930568")]
	public void LoudnessUnPressed()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1930654", Offset = "0x1930654", VA = "0x1930654")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902BF0", Offset = "0x902BF0")]
	public void NextTrackPressed()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1930780", Offset = "0x1930780", VA = "0x1930780")]
	public void NextTrackUnPressed()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x193086C", Offset = "0x193086C", VA = "0x193086C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902C08", Offset = "0x902C08")]
	public void PowerPressed()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x193098C", Offset = "0x193098C", VA = "0x193098C")]
	public void PowerUnPressed()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1930A78", Offset = "0x1930A78", VA = "0x1930A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1930B28", Offset = "0x1930B28", VA = "0x1930B28")]
	private void SetSongName(string sn)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x192FAF0", Offset = "0x192FAF0", VA = "0x192FAF0")]
	private void SetScrollingText(string sn)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1930B58", Offset = "0x1930B58", VA = "0x1930B58")]
	public Radio()
	{
	}
}
[Token(Token = "0x2000246")]
public class Relationship
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Person m_personA;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Person m_personB;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_totalTimeSentTogether;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_longestTimeSentTogether;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x1889AB4", Offset = "0x1889AB4", VA = "0x1889AB4")]
	public Relationship()
	{
	}
}
[Token(Token = "0x2000247")]
public class RemapMeshColours : MonoBehaviour
{
	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] m_meshes;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	public Interest m_interest;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x1889DE0", Offset = "0x1889DE0", VA = "0x1889DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1889DE4", Offset = "0x1889DE4", VA = "0x1889DE4")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1889E78", Offset = "0x1889E78", VA = "0x1889E78")]
	public void SetInterest(Interest interest)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1889E80", Offset = "0x1889E80", VA = "0x1889E80")]
	public RemapMeshColours()
	{
	}
}
[Token(Token = "0x2000248")]
public class ResearchItem : MonoBehaviour
{
	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_modelBaseLoc;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_notDiscovered;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_text;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_progressBar;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_inProgressMaterial;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x188B1E0", Offset = "0x188B1E0", VA = "0x188B1E0")]
	public ResearchItem()
	{
	}
}
[Token(Token = "0x2000249")]
public class RobotAnimationListener : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTakeOff;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDropFolk;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnAppearFolk;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x188C380", Offset = "0x188C380", VA = "0x188C380")]
	private void TakeOff()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x188C39C", Offset = "0x188C39C", VA = "0x188C39C")]
	private void DropFolk()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x188C3B8", Offset = "0x188C3B8", VA = "0x188C3B8")]
	private void AppearFolk()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x188C3D4", Offset = "0x188C3D4", VA = "0x188C3D4")]
	public RobotAnimationListener()
	{
	}
}
[Token(Token = "0x200024A")]
public class PlayerProfile
{
	[Token(Token = "0x200024B")]
	public class ScenarioMetadata
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_completed;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> m_interestsDiscovered;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x16C12F4", Offset = "0x16C12F4", VA = "0x16C12F4")]
		public ScenarioMetadata(string name)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x16C09D4", Offset = "0x16C09D4", VA = "0x16C09D4")]
		public static ScenarioMetadata FromJSON(JSONNode node)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x16C1070", Offset = "0x16C1070", VA = "0x16C1070")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}

	[Token(Token = "0x200024C")]
	private struct ProfileData
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScenarioMetadata[] m_scenarioMetadata;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_musicVolume;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_sfxVolume;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageCode m_language;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> m_presentsOpened;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_passthroughEnabled;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_controllerModelsEnabled;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x16C0504", Offset = "0x16C0504", VA = "0x16C0504")]
		public static ProfileData FromJSON(JSONNode node)
		{
			return default(ProfileData);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x16C0C34", Offset = "0x16C0C34", VA = "0x16C0C34")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ms_fileName;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string ms_fileExtension;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, ScenarioMetadata> ms_scenarioData;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<string> ms_presentsOpened;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float ms_musicVolume;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float ms_sfxVolume;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static LanguageCode ms_language;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int ms_passthroughEnabled;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int ms_controllerModelsEnabled;

	[Token(Token = "0x1700017C")]
	public static string ms_savePath
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x19202D8", Offset = "0x19202D8", VA = "0x19202D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1920360", Offset = "0x1920360", VA = "0x1920360")]
	public static Dictionary<string, ScenarioMetadata> GetAllScenarioData()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1920924", Offset = "0x1920924", VA = "0x1920924")]
	private static string ProfileFilename()
	{
		return null;
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x19203C8", Offset = "0x19203C8", VA = "0x19203C8")]
	private static void LoadData()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x19209F4", Offset = "0x19209F4", VA = "0x19209F4")]
	public static void SaveData()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1920EA0", Offset = "0x1920EA0", VA = "0x1920EA0")]
	public static bool IsScenarioComplete(Scenario s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x1920F78", Offset = "0x1920F78", VA = "0x1920F78")]
	public static ScenarioMetadata GetScenarioMetaData(Scenario s)
	{
		return null;
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x19210B8", Offset = "0x19210B8", VA = "0x19210B8")]
	public static void MarkScenarioComplete(Scenario s)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x192112C", Offset = "0x192112C", VA = "0x192112C")]
	public static void MarkInterestsDiscovered(Scenario s, List<Interest> interests)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x19212CC", Offset = "0x19212CC", VA = "0x19212CC")]
	public static void SetMusicVolume(float v)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x192133C", Offset = "0x192133C", VA = "0x192133C")]
	public static float GetMusicVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x19213A4", Offset = "0x19213A4", VA = "0x19213A4")]
	public static void SetSFXVolume(float v)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1921414", Offset = "0x1921414", VA = "0x1921414")]
	public static float GetSFXVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x192147C", Offset = "0x192147C", VA = "0x192147C")]
	public static void SetLanguage(LanguageCode l)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x19214E4", Offset = "0x19214E4", VA = "0x19214E4")]
	public static LanguageCode GetLanguage()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x192154C", Offset = "0x192154C", VA = "0x192154C")]
	public static void SetPassthroughEnabled(bool b)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x19215B8", Offset = "0x19215B8", VA = "0x19215B8")]
	public static int GetPassthroughEnabled()
	{
		return default(int);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1921620", Offset = "0x1921620", VA = "0x1921620")]
	public static void SetControllerModelsEnabled(bool b)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x192168C", Offset = "0x192168C", VA = "0x192168C")]
	public static int GetControllerModelsEnabled()
	{
		return default(int);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x19216F4", Offset = "0x19216F4", VA = "0x19216F4")]
	public static void SetPresentOpened(string id, bool saveImmediately = true)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x19217B4", Offset = "0x19217B4", VA = "0x19217B4")]
	public static bool GetPresentOpened(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1921844", Offset = "0x1921844", VA = "0x1921844")]
	public PlayerProfile()
	{
	}
}
[Token(Token = "0x200024D")]
public class SaveGame : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	private enum LoadMode
	{
		[Token(Token = "0x4000BF0")]
		None,
		[Token(Token = "0x4000BF1")]
		NewGame,
		[Token(Token = "0x4000BF2")]
		LoadGame,
		[Token(Token = "0x4000BF3")]
		Designer
	}

	[Serializable]
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECFE0", Offset = "0x8ECFE0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FileInfo, DateTime> <>9__27_0;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<FileInfo, string> <>9__27_1;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<FileInfo, DateTime> <>9__28_0;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<FileInfo, string> <>9__28_1;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x15868B0", Offset = "0x15868B0", VA = "0x15868B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x15868B8", Offset = "0x15868B8", VA = "0x15868B8")]
		internal DateTime <GetSaveGames>b__27_0(FileInfo f)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x15868D4", Offset = "0x15868D4", VA = "0x15868D4")]
		internal string <GetSaveGames>b__27_1(FileInfo f)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x15868F4", Offset = "0x15868F4", VA = "0x15868F4")]
		internal DateTime <GetAllSaveGames>b__28_0(FileInfo f)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1586910", Offset = "0x1586910", VA = "0x1586910")]
		internal string <GetAllSaveGames>b__28_1(FileInfo f)
		{
			return null;
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECFF0", Offset = "0x8ECFF0")]
	private sealed class <SceneLoadCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveGame <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x1587190", Offset = "0x1587190", VA = "0x1587190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x15871D8", Offset = "0x15871D8", VA = "0x15871D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1586930", Offset = "0x1586930", VA = "0x1586930")]
		[DebuggerHidden]
		public <SceneLoadCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x158695C", Offset = "0x158695C", VA = "0x158695C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1586960", Offset = "0x1586960", VA = "0x1586960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1587198", Offset = "0x1587198", VA = "0x1587198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED000", Offset = "0x8ED000")]
	private sealed class <VerifyAndRebuildPlayerProfileCR>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showProgress;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SaveGame <>4__this;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <saveFileCount>5__2;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <changeCount>5__3;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UIScenarioMenu> <playerHasAccessedMenu>5__4;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIScenarioMenu[] <allScenarioMenus>5__5;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIScenarioMenu <scenarioMenu>5__7;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <j>5__8;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Scenario <scenario>5__9;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string[] <>7__wrap9;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap10;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SaveGameProgressionData <sgpd>5__12;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x1587EF4", Offset = "0x1587EF4", VA = "0x1587EF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x1587F3C", Offset = "0x1587F3C", VA = "0x1587F3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x15871E0", Offset = "0x15871E0", VA = "0x15871E0")]
		[DebuggerHidden]
		public <VerifyAndRebuildPlayerProfileCR>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x158720C", Offset = "0x158720C", VA = "0x158720C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1587210", Offset = "0x1587210", VA = "0x1587210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1587EFC", Offset = "0x1587EFC", VA = "0x1587EFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE0")]
	private const int DefaultEditorSlot = 99;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string GameSceneName;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string TitleSceneName;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AutoSaveKeyword;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SaveGame instance;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string ms_fileExtension;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string _currentSavePath;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5478", Offset = "0x8F5478")]
	private bool <HasLoaded>k__BackingField;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shop m_shop;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scenario m_loadScenario;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LoadMode m_loadMode;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F5488", Offset = "0x8F5488")]
	public bool m_loadEditor;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_editTimeAutoload;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_saveScenarioMap;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RobotDialogueBox m_progressBox;

	[Token(Token = "0x1700017D")]
	public static SaveGame Instance
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1896710", Offset = "0x1896710", VA = "0x1896710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public static string ms_saveDirectory
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1896774", Offset = "0x1896774", VA = "0x1896774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public bool HasLoaded
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1896930", Offset = "0x1896930", VA = "0x1896930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902C20", Offset = "0x902C20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1896938", Offset = "0x1896938", VA = "0x1896938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x902C30", Offset = "0x902C30")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x18967FC", Offset = "0x18967FC", VA = "0x18967FC")]
	public static void SetSavePath(string p)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x18968CC", Offset = "0x18968CC", VA = "0x18968CC")]
	public static string GetSavePath()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1896944", Offset = "0x1896944", VA = "0x1896944")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1896C9C", Offset = "0x1896C9C", VA = "0x1896C9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1896D88", Offset = "0x1896D88", VA = "0x1896D88")]
	public void LoadScenarioForNewSave(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x18970B4", Offset = "0x18970B4", VA = "0x18970B4")]
	public static string[] GetSaveGames(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x18973E4", Offset = "0x18973E4", VA = "0x18973E4")]
	public static string[] GetAllSaveGames()
	{
		return null;
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x1897700", Offset = "0x1897700", VA = "0x1897700")]
	public void LoadSaveGame(Scenario scenario, string savePath)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x189779C", Offset = "0x189779C", VA = "0x189779C")]
	public void DesignScenario(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1897848", Offset = "0x1897848", VA = "0x1897848")]
	public void DoAutosave()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x189785C", Offset = "0x189785C", VA = "0x189785C")]
	public void DoSave(bool isAutoSave)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1897874", Offset = "0x1897874", VA = "0x1897874")]
	private void DoSaveGame(bool isAutoSave)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1897870", Offset = "0x1897870", VA = "0x1897870")]
	private void DoSaveScenario()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x1898044", Offset = "0x1898044", VA = "0x1898044")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x189809C", Offset = "0x189809C", VA = "0x189809C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902C40", Offset = "0x902C40")]
	private IEnumerator SceneLoadCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1896FE4", Offset = "0x1896FE4", VA = "0x1896FE4")]
	private void TriggerSceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1896E34", Offset = "0x1896E34", VA = "0x1896E34")]
	private string GetNewSaveSlotForScenario(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1898114", Offset = "0x1898114", VA = "0x1898114")]
	private string SaveGamePathForScenario(Scenario scenario, int idx)
	{
		return null;
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1898280", Offset = "0x1898280", VA = "0x1898280")]
	public void DoReturnToTitle()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x18982EC", Offset = "0x18982EC", VA = "0x18982EC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902CA0", Offset = "0x902CA0")]
	public void SaveEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x189836C", Offset = "0x189836C", VA = "0x189836C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902CB8", Offset = "0x902CB8")]
	public void LoadEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1898418", Offset = "0x1898418", VA = "0x1898418")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902CD0", Offset = "0x902CD0")]
	public void DeleteEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x189843C", Offset = "0x189843C", VA = "0x189843C")]
	public Scenario GetScenarioFromFilename(string fullPathToFile)
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x189891C", Offset = "0x189891C", VA = "0x189891C")]
	public bool LoadSaveWithFilename(string fullPathToFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x18989C4", Offset = "0x18989C4", VA = "0x18989C4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902CE8", Offset = "0x902CE8")]
	public void RebuildPlayerProfile()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x18989CC", Offset = "0x18989CC", VA = "0x18989CC")]
	public void RebuildPlayerProfile(bool showProgress)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1898A1C", Offset = "0x1898A1C", VA = "0x1898A1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902D00", Offset = "0x902D00")]
	private IEnumerator VerifyAndRebuildPlayerProfileCR(bool showProgress)
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1898AA8", Offset = "0x1898AA8", VA = "0x1898AA8")]
	private void ShowRebuildProgress(string message, float progress)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1898C00", Offset = "0x1898C00", VA = "0x1898C00")]
	public SaveGame()
	{
	}
}
[Token(Token = "0x2000252")]
public class SaveGameFileDropper : MonoBehaviour
{
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x189D664", Offset = "0x189D664", VA = "0x189D664")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x189D6E8", Offset = "0x189D6E8", VA = "0x189D6E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x189D6F0", Offset = "0x189D6F0", VA = "0x189D6F0")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x189D8D8", Offset = "0x189D8D8", VA = "0x189D8D8")]
	public SaveGameFileDropper()
	{
	}
}
[Token(Token = "0x2000253")]
public class SaveGameScreenshotTaker : MonoBehaviour
{
	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraToTexture m_camToTex;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_lookatTarget;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x15B488C", Offset = "0x15B488C", VA = "0x15B488C")]
	public void TakeScreenshot(string pathAndFilename, bool async)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x15B4A84", Offset = "0x15B4A84", VA = "0x15B4A84")]
	public SaveGameScreenshotTaker()
	{
	}
}
[Token(Token = "0x2000254")]
public class ItemUnlockProgression : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public enum ItemType
	{
		[Token(Token = "0x4000C11")]
		CityPiece,
		[Token(Token = "0x4000C12")]
		CityPieceList,
		[Token(Token = "0x4000C13")]
		Prefab
	}

	[Serializable]
	[Token(Token = "0x2000256")]
	public class UnlockableShopItem
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemType m_itemType;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F54D0", Offset = "0x8F54D0")]
		public CityPieceProperties m_cityPiece;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F5520", Offset = "0x8F5520")]
		public CityPiecePropertyList m_cityPieceList;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F5570", Offset = "0x8F5570")]
		public GameObject m_prefab;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_HPRequired;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PopOffItemAvailability m_itemAvailability;

		[Token(Token = "0x17000184")]
		public string ItemIdentifier
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x16AE880", Offset = "0x16AE880", VA = "0x16AE880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x16AE960", Offset = "0x16AE960", VA = "0x16AE960")]
		public UnlockableShopItem()
		{
		}
	}

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UnlockableShopItem> m_lockedItems;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	public List<string> m_unlockedItemIdentifiers;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_newInterestAfterUnlocking;

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x16DA428", Offset = "0x16DA428", VA = "0x16DA428")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x16DAE14", Offset = "0x16DAE14", VA = "0x16DAE14")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902E00", Offset = "0x902E00")]
	public void UnlockAllHPLockedItems()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x16DAA30", Offset = "0x16DAA30", VA = "0x16DAA30")]
	public void ProcessUnlockItems()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x16DB134", Offset = "0x16DB134", VA = "0x16DB134")]
	public void InitShopItems(ShopForInterest shop)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x16DB374", Offset = "0x16DB374", VA = "0x16DB374")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902E48", Offset = "0x902E48")]
	public static void UnlockEverything()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x16DB3F4", Offset = "0x16DB3F4", VA = "0x16DB3F4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902E90", Offset = "0x902E90")]
	public static void UnlockItems()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x16DB528", Offset = "0x16DB528", VA = "0x16DB528")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902ED8", Offset = "0x902ED8")]
	public void UnlockBuildings()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x16D7ECC", Offset = "0x16D7ECC", VA = "0x16D7ECC")]
	public void OnNewDecoUnlocked(Interest inter, GameObject decoPrefab)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x16DB6A8", Offset = "0x16DB6A8", VA = "0x16DB6A8")]
	public ItemUnlockProgression()
	{
	}
}
[Token(Token = "0x2000257")]
public class SaveGameProgressionData
{
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_savePath;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public bool m_isLoaded;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<Interest> m_unlockedInterests;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> m_completedObjectiveNames;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_anyLoadInProgress;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x15B3E04", Offset = "0x15B3E04", VA = "0x15B3E04")]
	public SaveGameProgressionData(string pathToSave, bool asyncLoad = true)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x15B3F10", Offset = "0x15B3F10", VA = "0x15B3F10")]
	public void AsyncLoadProgresionData()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x15B4004", Offset = "0x15B4004", VA = "0x15B4004")]
	private void LoadProgressionDataThreadFn()
	{
	}
}
[Serializable]
[Token(Token = "0x2000258")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ED010", Offset = "0x8ED010")]
public class Scenario : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000259")]
	public class TweakedObjective
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Objective Objective;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1588684", Offset = "0x1588684", VA = "0x1588684")]
		public string GetLocalisedDescription()
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1588778", Offset = "0x1588778", VA = "0x1588778")]
		public TweakedObjective()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	public class TweakedModifier
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Modifier Modifier;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Value;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Min;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Max;

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x158866C", Offset = "0x158866C", VA = "0x158866C")]
		public TweakedModifier()
		{
		}
	}

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_localisationData;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Name_Key;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Description_Key;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Scenario[] PrerequisiteScenarios;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFinal;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MenuModelPrefab;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SkyboxPrefab;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8F55F0", Offset = "0x8F55F0")]
	public int StartingFolk;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F563C", Offset = "0x8F563C")]
	public TweakedObjective[] Objectives;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5674", Offset = "0x8F5674")]
	public TweakedModifier[] Modifiers;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F56AC", Offset = "0x8F56AC")]
	public Interest[] AvailableInterests;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8F56E4", Offset = "0x8F56E4")]
	public int StartingInterests;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F5730", Offset = "0x8F5730")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8F5730", Offset = "0x8F5730")]
	public List<Interest> AlwaysStartWithInterests;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8F57A4", Offset = "0x8F57A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F57A4", Offset = "0x8F57A4")]
	public List<Interest> PotentialStartingInterests;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8F5820", Offset = "0x8F5820")]
	[SerializeField]
	private string FilenameBase;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public string Filename;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x15B5054", Offset = "0x15B5054", VA = "0x15B5054")]
	private bool ValidateStartingFolk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x15B50AC", Offset = "0x15B50AC", VA = "0x15B50AC")]
	public string GetFilenameBase()
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x15B50F0", Offset = "0x15B50F0", VA = "0x15B50F0")]
	private bool StartingInterestsLessThanAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x15B5118", Offset = "0x15B5118", VA = "0x15B5118")]
	private bool ValidateAlwaysStartInterests()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x15B5220", Offset = "0x15B5220", VA = "0x15B5220")]
	private bool ValidatePotentialInterests()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x15B5328", Offset = "0x15B5328", VA = "0x15B5328")]
	public Scenario()
	{
	}
}
[Token(Token = "0x200025B")]
public class UIScenarioMenu : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED070", Offset = "0x8ED070")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x15943C4", Offset = "0x15943C4", VA = "0x15943C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x159440C", Offset = "0x159440C", VA = "0x159440C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x159403C", Offset = "0x159403C", VA = "0x159403C")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1594068", Offset = "0x1594068", VA = "0x1594068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x159406C", Offset = "0x159406C", VA = "0x159406C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x15943CC", Offset = "0x15943CC", VA = "0x15943CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED080", Offset = "0x8ED080")]
	private sealed class <UpdateInterestDetailsFromPlayerProfile>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UIScenarioMenuPanel>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerProfile.ScenarioMetadata <smd>5__3;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x1594B68", Offset = "0x1594B68", VA = "0x1594B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x1594BB0", Offset = "0x1594BB0", VA = "0x1594BB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1594414", Offset = "0x1594414", VA = "0x1594414")]
		[DebuggerHidden]
		public <UpdateInterestDetailsFromPlayerProfile>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1594440", Offset = "0x1594440", VA = "0x1594440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x15944B0", Offset = "0x15944B0", VA = "0x15944B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x159445C", Offset = "0x159445C", VA = "0x159445C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1594B70", Offset = "0x1594B70", VA = "0x1594B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED090", Offset = "0x8ED090")]
	private sealed class <UpdatePlayerProfileForScenario>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario scenario;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SaveGameProgressionData> <waitingForLoad>5__2;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, SaveGameProgressionData> <savesForThisScenario>5__3;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x15950F8", Offset = "0x15950F8", VA = "0x15950F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x1595140", Offset = "0x1595140", VA = "0x1595140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1594BB8", Offset = "0x1594BB8", VA = "0x1594BB8")]
		[DebuggerHidden]
		public <UpdatePlayerProfileForScenario>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1594BE4", Offset = "0x1594BE4", VA = "0x1594BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1594BE8", Offset = "0x1594BE8", VA = "0x1594BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1595100", Offset = "0x1595100", VA = "0x1595100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scenario[] m_scenarios;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_scenarioPanelPrefab;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UIScenarioMenuPanel> m_scenarioPanels;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radius;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_spacingDeg;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_forwardItem;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_appearCascadeDelay;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_autoLayoutPanels;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_subMenu;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5868", Offset = "0x8F5868")]
	public float m_selectMoveDurShow;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_selectMoveDurHide;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Ease m_selectMoveEase;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_selectMoveDurShowHideOthersDur;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Ease m_selectShowHideEase;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_hasStarted;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image m_loadingIndicator;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Interest> m_allInterests;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Interest> m_allUnlockedInterests;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<Scenario, Dictionary<string, SaveGameProgressionData>> m_progDataPerScenario;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Dictionary<string, SaveGameProgressionData> m_allProgData;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x15D6618", Offset = "0x15D6618", VA = "0x15D6618")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902F20", Offset = "0x902F20")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x15D6690", Offset = "0x15D6690", VA = "0x15D6690")]
	private void AddScenarios(Scenario[] scenarios)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x15D686C", Offset = "0x15D686C", VA = "0x15D686C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x15D6C14", Offset = "0x15D6C14", VA = "0x15D6C14")]
	private Vector3 GetPos(int itemId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x15D6C80", Offset = "0x15D6C80", VA = "0x15D6C80")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x15D6F14", Offset = "0x15D6F14", VA = "0x15D6F14")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x902F80", Offset = "0x902F80")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x15D737C", Offset = "0x15D737C", VA = "0x15D737C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x902F98", Offset = "0x902F98")]
	public void UnlockAllScenarios()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x15D748C", Offset = "0x15D748C", VA = "0x15D748C")]
	public void ShowOnly(UIScenarioMenuPanel panel)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x15D7744", Offset = "0x15D7744", VA = "0x15D7744")]
	public void ShowAll()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x15D6B9C", Offset = "0x15D6B9C", VA = "0x15D6B9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x902FE0", Offset = "0x902FE0")]
	public IEnumerator UpdateInterestDetailsFromPlayerProfile()
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x15D7A60", Offset = "0x15D7A60", VA = "0x15D7A60")]
	public SaveGameProgressionData GetSaveGameProgData(string path)
	{
		return null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x15D7B3C", Offset = "0x15D7B3C", VA = "0x15D7B3C")]
	public Dictionary<string, SaveGameProgressionData> GetProgressionDataForScenario(Scenario s)
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x15D7BC0", Offset = "0x15D7BC0", VA = "0x15D7BC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903040", Offset = "0x903040")]
	private IEnumerator UpdatePlayerProfileForScenario(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x15D7C54", Offset = "0x15D7C54", VA = "0x15D7C54")]
	public UIScenarioMenu()
	{
	}
}
[Token(Token = "0x200025F")]
public class UIScenarioMenuPanel : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0A0", Offset = "0x8ED0A0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playSound;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIScenarioMenuPanel <>4__this;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1595148", Offset = "0x1595148", VA = "0x1595148")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1595150", Offset = "0x1595150", VA = "0x1595150")]
		internal void <AppearAfter>b__0()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0B0", Offset = "0x8ED0B0")]
	private sealed class <UpdateInterestDetails>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenuPanel <>4__this;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerProfile.ScenarioMetadata <smd>5__2;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIScenarioMenu <scenarioMenu>5__3;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x1595668", Offset = "0x1595668", VA = "0x1595668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x15956B0", Offset = "0x15956B0", VA = "0x15956B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x15951FC", Offset = "0x15951FC", VA = "0x15951FC")]
		[DebuggerHidden]
		public <UpdateInterestDetails>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1595228", Offset = "0x1595228", VA = "0x1595228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x159522C", Offset = "0x159522C", VA = "0x159522C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1595670", Offset = "0x1595670", VA = "0x1595670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scenario scenario;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text Name;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text Description;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text ObjectivesText;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Locked;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ModelContainer;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform LineContainer;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ConnectionLeftLoc;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ConnectionRightLoc;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button btnSelect;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button btnDetailsNewGame;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button btnDetailsBack;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button btnDesigner;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Unlocked;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject UnlockedContent;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ConfirmRestartMenu;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject DetailsPanel;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject SavesList;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject SavePanelPrefab;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform[] m_detailLocators;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public bool m_allDataPopulated;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool m_subMenusCreated;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool m_allPrerequisitesComplete;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public string[] m_saveGamePaths;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public List<UIScenarioSavePanel> m_savePanels;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image m_loadingIndicator;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ScrollRect m_saveScrollRect;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_ScrollMul;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_saveScrollDur;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float maxOvershoot;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector2 m_scrollTarget;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Button m_scrollLButton;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Button m_scrollRButton;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x15D6A20", Offset = "0x15D6A20", VA = "0x15D6A20")]
	public void AppearAfter(float delay, float dur, Ease ease, bool playSound)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x15D7DDC", Offset = "0x15D7DDC", VA = "0x15D7DDC")]
	private void CheckPrerequisites()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x15D7EBC", Offset = "0x15D7EBC", VA = "0x15D7EBC")]
	public void ReCheckPrerequisites()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x15D814C", Offset = "0x15D814C", VA = "0x15D814C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x15D84E0", Offset = "0x15D84E0", VA = "0x15D84E0", Slot = "4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x903190", Offset = "0x903190")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x15D7F0C", Offset = "0x15D7F0C", VA = "0x15D7F0C")]
	public void PopulateDetails()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x15D7070", Offset = "0x15D7070", VA = "0x15D7070")]
	public void CreateSubMenus()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x15D8698", Offset = "0x15D8698", VA = "0x15D8698")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9031A8", Offset = "0x9031A8")]
	public IEnumerator UpdateInterestDetails()
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x15D8710", Offset = "0x15D8710", VA = "0x15D8710")]
	public void ShowDetails()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x15D8804", Offset = "0x15D8804", VA = "0x15D8804")]
	public void HideDetails()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x15D8890", Offset = "0x15D8890", VA = "0x15D8890")]
	public void StartNew()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x15D8948", Offset = "0x15D8948", VA = "0x15D8948")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x15D898C", Offset = "0x15D898C", VA = "0x15D898C")]
	private void ConfirmRestart()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x15D8990", Offset = "0x15D8990", VA = "0x15D8990")]
	private void CancelRestart()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x15D89D4", Offset = "0x15D89D4", VA = "0x15D89D4")]
	private void DesignStage()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x15D8A8C", Offset = "0x15D8A8C", VA = "0x15D8A8C")]
	public void ScrollSavesLeft()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x15D8C28", Offset = "0x15D8C28", VA = "0x15D8C28")]
	public void ScrollSavesRight()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x15D8A94", Offset = "0x15D8A94", VA = "0x15D8A94")]
	private void ScrollSaves(float amt)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x15D8C34", Offset = "0x15D8C34", VA = "0x15D8C34")]
	public void PopulateConnections()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x15D8ECC", Offset = "0x15D8ECC", VA = "0x15D8ECC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x15D90F0", Offset = "0x15D90F0", VA = "0x15D90F0")]
	public UIScenarioMenuPanel()
	{
	}
}
[Token(Token = "0x2000262")]
public class UIScenarioSavePanel : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0C0", Offset = "0x8ED0C0")]
	private sealed class <Refresh>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioSavePanel <>4__this;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x1596698", Offset = "0x1596698", VA = "0x1596698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x15966E0", Offset = "0x15966E0", VA = "0x15966E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1595D20", Offset = "0x1595D20", VA = "0x1595D20")]
		[DebuggerHidden]
		public <Refresh>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1595D4C", Offset = "0x1595D4C", VA = "0x1595D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1595E24", Offset = "0x1595E24", VA = "0x1595E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1595D68", Offset = "0x1595D68", VA = "0x1595D68")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x15966A0", Offset = "0x15966A0", VA = "0x15966A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0D0", Offset = "0x8ED0D0")]
	private sealed class <PopulateProgressionDetails>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioSavePanel <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1595CD0", Offset = "0x1595CD0", VA = "0x1595CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x1595D18", Offset = "0x1595D18", VA = "0x1595D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x15956B8", Offset = "0x15956B8", VA = "0x15956B8")]
		[DebuggerHidden]
		public <PopulateProgressionDetails>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x15956E4", Offset = "0x15956E4", VA = "0x15956E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x15956E8", Offset = "0x15956E8", VA = "0x15956E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1595CD8", Offset = "0x1595CD8", VA = "0x1595CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_label;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_timeLabel;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage m_image;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_detailsRoot;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_objectivesLabel;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Scenario m_scenario;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_savePath;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture m_screenshot;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SaveGameProgressionData m_progressionData;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x15D9188", Offset = "0x15D9188", VA = "0x15D9188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x15D91D4", Offset = "0x15D91D4", VA = "0x15D91D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903258", Offset = "0x903258")]
	public IEnumerator Refresh()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x15D924C", Offset = "0x15D924C", VA = "0x15D924C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9032B8", Offset = "0x9032B8")]
	public IEnumerator PopulateProgressionDetails()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x15D92C4", Offset = "0x15D92C4", VA = "0x15D92C4")]
	public void LoadMe()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x15D937C", Offset = "0x15D937C", VA = "0x15D937C")]
	public void DeleteMe()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x15D94F0", Offset = "0x15D94F0", VA = "0x15D94F0")]
	public UIScenarioSavePanel()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x15D94F8", Offset = "0x15D94F8", VA = "0x15D94F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903318", Offset = "0x903318")]
	private void <DeleteMe>b__15_0()
	{
	}
}
[Token(Token = "0x2000265")]
public class ScrapCoin : StaticListable<ScrapCoin>, ISaveableComponent
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] ms_raycastResult;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int ms_terrainLayerMask;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TrackedPool<GameObject> Pool;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Saveable]
	private float _value;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Collider[] m_colliders;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody m_rigidBody;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HoldableItem m_holdableItem;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Large;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Medium;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Small;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_randomQuery;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrailRenderer m_trail;

	[Token(Token = "0x17000191")]
	public NVRInteractableItem Interactable
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x15B8094", Offset = "0x15B8094", VA = "0x15B8094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public float m_value
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x15B82D0", Offset = "0x15B82D0", VA = "0x15B82D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x15B8180", Offset = "0x15B8180", VA = "0x15B8180")]
		set
		{
		}
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x15B809C", Offset = "0x15B809C", VA = "0x15B809C")]
	public static ScrapCoin GetFromPool(float value)
	{
		return null;
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x15B82D8", Offset = "0x15B82D8", VA = "0x15B82D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x15B84E4", Offset = "0x15B84E4", VA = "0x15B84E4", Slot = "7")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x15B84E8", Offset = "0x15B84E8", VA = "0x15B84E8", Slot = "8")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x15B84EC", Offset = "0x15B84EC", VA = "0x15B84EC", Slot = "9")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x15B85D0", Offset = "0x15B85D0", VA = "0x15B85D0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x15B875C", Offset = "0x15B875C", VA = "0x15B875C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x15B8860", Offset = "0x15B8860", VA = "0x15B8860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x15B8688", Offset = "0x15B8688", VA = "0x15B8688")]
	public void SetCollidersAsTrigger(bool value)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x15B8760", Offset = "0x15B8760", VA = "0x15B8760")]
	private void QueryGravity()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x15B88D8", Offset = "0x15B88D8", VA = "0x15B88D8")]
	public ScrapCoin()
	{
	}
}
[Token(Token = "0x2000266")]
public class ScrapParticleExplosion : MonoBehaviour
{
	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem MainParticles;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem scrapParticles;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float awakeAt;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Lifetime;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x15B89D8", Offset = "0x15B89D8", VA = "0x15B89D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x15B8AD4", Offset = "0x15B8AD4", VA = "0x15B8AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x15B8B30", Offset = "0x15B8B30", VA = "0x15B8B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x15B8B68", Offset = "0x15B8B68", VA = "0x15B8B68")]
	public ScrapParticleExplosion()
	{
	}
}
[Token(Token = "0x2000267")]
public class Screenshotter : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	private enum State
	{
		[Token(Token = "0x4000CB0")]
		Idle,
		[Token(Token = "0x4000CB1")]
		Generating,
		[Token(Token = "0x4000CB2")]
		Saving
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0E0", Offset = "0x8ED0E0")]
	private sealed class <CameraForTrailerCR>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InstaCam <ic>5__2;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x1589F50", Offset = "0x1589F50", VA = "0x1589F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x1589F98", Offset = "0x1589F98", VA = "0x1589F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1589AB8", Offset = "0x1589AB8", VA = "0x1589AB8")]
		[DebuggerHidden]
		public <CameraForTrailerCR>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1589AE4", Offset = "0x1589AE4", VA = "0x1589AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1589AE8", Offset = "0x1589AE8", VA = "0x1589AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1589F58", Offset = "0x1589F58", VA = "0x1589F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0F0", Offset = "0x8ED0F0")]
	private sealed class <DoSphereGrab>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screenshotter <>4__this;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <instaCamPos>5__2;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <instaCamRot>5__3;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<GameObject, int> <layerDict>5__4;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera <cam>5__5;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Recorder <recorder>5__6;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <longStep>5__7;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <i>5__8;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x158A954", Offset = "0x158A954", VA = "0x158A954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x158A99C", Offset = "0x158A99C", VA = "0x158A99C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1589FA0", Offset = "0x1589FA0", VA = "0x1589FA0")]
		[DebuggerHidden]
		public <DoSphereGrab>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1589FCC", Offset = "0x1589FCC", VA = "0x1589FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1589FD0", Offset = "0x1589FD0", VA = "0x1589FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x158A95C", Offset = "0x158A95C", VA = "0x158A95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_focalPoint;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_height;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5918", Offset = "0x8F5918")]
	public int m_framesToCapture;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_fps;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_width;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F5950", Offset = "0x8F5950")]
	public int m_quality;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State m_state;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_progress;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x15B8B78", Offset = "0x15B8B78", VA = "0x15B8B78")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x15B8C58", Offset = "0x15B8C58", VA = "0x15B8C58")]
	private string GetFilenameWithPath(string extension)
	{
		return null;
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x15B8F1C", Offset = "0x15B8F1C", VA = "0x15B8F1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9033C8", Offset = "0x9033C8")]
	public void ToggleCamera()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x15B9014", Offset = "0x15B9014", VA = "0x15B9014")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903410", Offset = "0x903410")]
	private void CameraForTrailer()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x15B9040", Offset = "0x15B9040", VA = "0x15B9040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903458", Offset = "0x903458")]
	private IEnumerator CameraForTrailerCR()
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x15B909C", Offset = "0x15B909C", VA = "0x15B909C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9034B8", Offset = "0x9034B8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9034B8", Offset = "0x9034B8")]
	public void SingleCapture()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x15B91B0", Offset = "0x15B91B0", VA = "0x15B91B0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x90351C", Offset = "0x90351C")]
	public void OrbitGif()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x15B9254", Offset = "0x15B9254", VA = "0x15B9254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x15B91DC", Offset = "0x15B91DC", VA = "0x15B91DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903564", Offset = "0x903564")]
	private IEnumerator DoSphereGrab()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x15B9258", Offset = "0x15B9258", VA = "0x15B9258")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x15B926C", Offset = "0x15B926C", VA = "0x15B926C")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x15B9274", Offset = "0x15B9274", VA = "0x15B9274")]
	public Screenshotter()
	{
	}
}
[Token(Token = "0x200026B")]
public class SetActiveRandom : MonoBehaviour
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F596C", Offset = "0x8F596C")]
	public float m_isEnabledProbability;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_objects;

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x15B9C28", Offset = "0x15B9C28", VA = "0x15B9C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x15B9CE0", Offset = "0x15B9CE0", VA = "0x15B9CE0")]
	public SetActiveRandom()
	{
	}
}
[Token(Token = "0x200026C")]
public class SetOneActiveRandom : MonoBehaviour
{
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objects;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x15B9CF0", Offset = "0x15B9CF0", VA = "0x15B9CF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x15B9D64", Offset = "0x15B9D64", VA = "0x15B9D64")]
	public SetOneActiveRandom()
	{
	}
}
[Token(Token = "0x200026D")]
public class InfoToggler : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIPersonListPanel m_personPanel;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x16CD8E0", Offset = "0x16CD8E0", VA = "0x16CD8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x16CD964", Offset = "0x16CD964", VA = "0x16CD964")]
	public void OpenAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x16CDAFC", Offset = "0x16CDAFC", VA = "0x16CDAFC")]
	public void OpenAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x16CD9D8", Offset = "0x16CD9D8", VA = "0x16CD9D8")]
	private void Toggle(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x16CDB70", Offset = "0x16CDB70", VA = "0x16CDB70")]
	public InfoToggler()
	{
	}
}
[Token(Token = "0x200026E")]
public class Shop : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_interestShopPrefab;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_levelDesignShopPrefab;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_maxUnbuiltBuildings;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Interest, ShopForInterest> m_interestShops;

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x15BBF30", Offset = "0x15BBF30", VA = "0x15BBF30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x15BC050", Offset = "0x15BC050", VA = "0x15BC050")]
	public void CloseShop()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x15BC0AC", Offset = "0x15BC0AC", VA = "0x15BC0AC")]
	public void AddInterestShopFront(Interest interest)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x15BC2AC", Offset = "0x15BC2AC", VA = "0x15BC2AC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903664", Offset = "0x903664")]
	public void AddLevelDesignShop()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x15BC3A0", Offset = "0x15BC3A0", VA = "0x15BC3A0")]
	public static void SetAllItemsAvailable(bool available, bool setCorrectFacilitiesAvailable = true)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x15BC578", Offset = "0x15BC578", VA = "0x15BC578")]
	public static void SetBasicsAvailable()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x15BC5D4", Offset = "0x15BC5D4", VA = "0x15BC5D4")]
	public static void SetPrefabsAvailable(GameObject[] prefabs, bool available)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x15BC780", Offset = "0x15BC780", VA = "0x15BC780")]
	public static void SetItemsNotAvailable(CityPieceProperties[] unlockPieces, CityPiecePropertyList[] unlockLists, PopOffItemAvailability.LockReason lockReason = PopOffItemAvailability.LockReason.Restricted, [Optional] string lockToolTip)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x15BC9A8", Offset = "0x15BC9A8", VA = "0x15BC9A8")]
	public static void SetItemsAvailable(CityPieceProperties[] unlockPieces, CityPiecePropertyList[] unlockLists, PopOffItemAvailability.LockReason lockReason = PopOffItemAvailability.LockReason.Restricted)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x15BCBB0", Offset = "0x15BCBB0", VA = "0x15BCBB0")]
	public static void SetAllInterestItemsAvailable(bool available)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x15BCE54", Offset = "0x15BCE54", VA = "0x15BCE54")]
	public static void SetDecorationAvailable(GameObject prefab)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x15BD1BC", Offset = "0x15BD1BC", VA = "0x15BD1BC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9036AC", Offset = "0x9036AC")]
	public static void Unlock1InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x15BD1C4", Offset = "0x15BD1C4", VA = "0x15BD1C4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9036F4", Offset = "0x9036F4")]
	public static void Unlock2InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x15BD1CC", Offset = "0x15BD1CC", VA = "0x15BD1CC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x90373C", Offset = "0x90373C")]
	public static void Unlock3InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x15BC50C", Offset = "0x15BC50C", VA = "0x15BC50C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903784", Offset = "0x903784")]
	public static void UnlockFacilitiesForAvailableInterests()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x15B6894", Offset = "0x15B6894", VA = "0x15B6894")]
	public static void UnlockFacilitiesUpTo(int maxInterests)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x15BD1D4", Offset = "0x15BD1D4", VA = "0x15BD1D4")]
	public Shop()
	{
	}
}
[Token(Token = "0x200026F")]
public class ShopForInterest : StaticMapped<ShopForInterest>
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Interest m_interest;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_maxItemsWide;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PopOffShopItem m_item0;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PopOffShopItem m_itemHoriz;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PopOffShopItem m_itemVert;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PopOffShopItem[] m_allPopOffs;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro m_nameLabel;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer m_interestIcon;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_tabLocator;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MeshFilter> m_remappableMeshes;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x15BD1E4", Offset = "0x15BD1E4", VA = "0x15BD1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x15BD2D8", Offset = "0x15BD2D8", VA = "0x15BD2D8")]
	public ShopForInterest()
	{
	}
}
[Token(Token = "0x2000270")]
public class SnappableWorldAffordance : StaticMapped<SnappableWorldAffordance>
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_affordanceVisuals;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_ignoreIfInteracting;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_usable;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_limitVisibility;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Type m_showFor;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Snappable m_snappable;

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x15C4D3C", Offset = "0x15C4D3C", VA = "0x15C4D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x15C4AEC", Offset = "0x15C4AEC", VA = "0x15C4AEC")]
	public void OnBeginSnappableInteraction(Snappable snappable)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x15C4DB8", Offset = "0x15C4DB8", VA = "0x15C4DB8")]
	public void OnEndSnappableInteraction(Snappable snappable)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x15C4DD0", Offset = "0x15C4DD0", VA = "0x15C4DD0")]
	public SnappableWorldAffordance()
	{
	}
}
[Token(Token = "0x2000271")]
public class SolarFlare : StaticMapped<SolarFlare>
{
	[Serializable]
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED100", Offset = "0x8ED100")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SolarFlare, float> <>9__0_0;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x158D578", Offset = "0x158D578", VA = "0x158D578")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x158D580", Offset = "0x158D580", VA = "0x158D580")]
		internal float <TimeInHrsToNextFlareImpact>b__0_0(SolarFlare f)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED110", Offset = "0x8ED110")]
	private sealed class <ApplySpline>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SolarFlare <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x158D6F4", Offset = "0x158D6F4", VA = "0x158D6F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x158D73C", Offset = "0x158D73C", VA = "0x158D73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x158D59C", Offset = "0x158D59C", VA = "0x158D59C")]
		[DebuggerHidden]
		public <ApplySpline>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x158D5C8", Offset = "0x158D5C8", VA = "0x158D5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x158D5CC", Offset = "0x158D5CC", VA = "0x158D5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x158D6FC", Offset = "0x158D6FC", VA = "0x158D6FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_flareModel;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BezierWalker m_splineWalker;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BezierWalkerWithTime m_splineWalkerWithTime;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_splineStartPoint;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_splineMidPoint;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_splineEndPoint;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LineRenderer m_line;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LineRendererSpline m_lineSpline;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SphereCollider m_explosionCollider;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_explosionPrefab;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_dudExplosionPrefab;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5984", Offset = "0x8F5984")]
	public string m_sfxStartLoop;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxStop;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxWarn;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string m_sfxImpactDefenceBubble;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxImpactAnythingElse;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_sfxDistRTPC;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_maxDistForSfx;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_warningSfxAtRealSecondsBeforeImpact;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_splineLastNormalizedT;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_splineLen;

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x15C8F28", Offset = "0x15C8F28", VA = "0x15C8F28")]
	public static float TimeInHrsToNextFlareImpact()
	{
		return default(float);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x15C911C", Offset = "0x15C911C", VA = "0x15C911C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x15C91AC", Offset = "0x15C91AC", VA = "0x15C91AC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x15C9350", Offset = "0x15C9350", VA = "0x15C9350")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9037CC", Offset = "0x9037CC")]
	public void GeneratePath()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x15C9644", Offset = "0x15C9644", VA = "0x15C9644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9037E4", Offset = "0x9037E4")]
	private IEnumerator ApplySpline()
	{
		return null;
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x15C96BC", Offset = "0x15C96BC", VA = "0x15C96BC")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x15C980C", Offset = "0x15C980C", VA = "0x15C980C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x15C98AC", Offset = "0x15C98AC", VA = "0x15C98AC")]
	public void Impact(Collider hitCollider)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x15CA2EC", Offset = "0x15CA2EC", VA = "0x15CA2EC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x15CA374", Offset = "0x15CA374", VA = "0x15CA374")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x15CA408", Offset = "0x15CA408", VA = "0x15CA408")]
	public float TimeInHrsToImpact()
	{
		return default(float);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x15CA4A4", Offset = "0x15CA4A4", VA = "0x15CA4A4")]
	public SolarFlare()
	{
	}
}
[Token(Token = "0x2000274")]
public class SpacefolkControllerLayout : MonoBehaviour
{
	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_deviceName;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_xrLoaderName;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_root;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_ui;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_ctrlModel;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x15CA604", Offset = "0x15CA604", VA = "0x15CA604")]
	public SpacefolkControllerLayout()
	{
	}
}
[Token(Token = "0x2000275")]
public class SpacefolkHand : MonoBehaviour
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRInteractable m_currentHover;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentHighlight;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ISfHandHoverResponder m_currentHoverResponder;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxHighlight;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxRelease;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIButton uiButtonHovering;

	[Token(Token = "0x17000199")]
	public NVRHand NVRHand
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x15CA60C", Offset = "0x15CA60C", VA = "0x15CA60C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public UIButton HoveringButton
	{
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x15CA614", Offset = "0x15CA614", VA = "0x15CA614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x15CA61C", Offset = "0x15CA61C", VA = "0x15CA61C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x15CA734", Offset = "0x15CA734", VA = "0x15CA734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x15CAB3C", Offset = "0x15CAB3C", VA = "0x15CAB3C")]
	private void StartHover(NVRInteractable newItem)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x15CA8D0", Offset = "0x15CA8D0", VA = "0x15CA8D0")]
	private void StopHover(NVRInteractable nvri)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x15CAE80", Offset = "0x15CAE80", VA = "0x15CAE80")]
	public void RefreshHoverState()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x15CAE88", Offset = "0x15CAE88", VA = "0x15CAE88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x15CAE94", Offset = "0x15CAE94", VA = "0x15CAE94")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x15CAF80", Offset = "0x15CAF80", VA = "0x15CAF80")]
	public void HoverUIButton(UIButton button)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x15CAF88", Offset = "0x15CAF88", VA = "0x15CAF88")]
	public SpacefolkHand()
	{
	}
}
[Token(Token = "0x2000276")]
public class SpacefolkHandModel : MonoBehaviour
{
	[Token(Token = "0x2000277")]
	public enum State
	{
		[Token(Token = "0x4000D18")]
		Idle,
		[Token(Token = "0x4000D19")]
		Hover,
		[Token(Token = "0x4000D1A")]
		Point,
		[Token(Token = "0x4000D1B")]
		Grab
	}

	[Serializable]
	[Token(Token = "0x2000278")]
	public class DeviceSetup
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_pluginName;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_root;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_ui;

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x158D744", Offset = "0x158D744", VA = "0x158D744")]
		public DeviceSetup()
		{
		}
	}

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator m_animator;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public State m_state;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpacefolkHand m_hand;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_forcePointing;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_root;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_uiLocator;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F59CC", Offset = "0x8F59CC")]
	private SpacefolkControllerLayout <m_activeLayout>k__BackingField;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_rootOculus_Oculus;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_uiOculus_Oculus;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform m_rootOculus_OpenVR;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_uiOculus_OpenVR;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform m_uiVive;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform m_rootVive;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_uiKnuckles;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform m_rootKnuckles;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform m_uiG2;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform m_rootG2;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DeviceSetup[] m_devices;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpacefolkControllerLayout[] m_deviceLayouts;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_laserLocator;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F59DC", Offset = "0x8F59DC")]
	private bool <m_locatorsSetUp>k__BackingField;

	[Token(Token = "0x1700019B")]
	public SpacefolkControllerLayout m_activeLayout
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x186EF94", Offset = "0x186EF94", VA = "0x186EF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903894", Offset = "0x903894")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x186EF9C", Offset = "0x186EF9C", VA = "0x186EF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038A4", Offset = "0x9038A4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public bool m_locatorsSetUp
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x186EFA4", Offset = "0x186EFA4", VA = "0x186EFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038B4", Offset = "0x9038B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x186EFAC", Offset = "0x186EFAC", VA = "0x186EFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038C4", Offset = "0x9038C4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x186EFB8", Offset = "0x186EFB8", VA = "0x186EFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x186F2A8", Offset = "0x186F2A8", VA = "0x186F2A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x186F208", Offset = "0x186F208", VA = "0x186F208")]
	public void SetIdle()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x186FB10", Offset = "0x186FB10", VA = "0x186FB10")]
	public void SetHovering()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x186FA94", Offset = "0x186FA94", VA = "0x186FA94")]
	public void SetPointing()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x186F9EC", Offset = "0x186F9EC", VA = "0x186F9EC")]
	public void SetGrabbing()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x186FBB8", Offset = "0x186FBB8", VA = "0x186FBB8")]
	public SpacefolkHandModel()
	{
	}
}
[Token(Token = "0x2000279")]
public class SpacefolkMenuPresent : MonoBehaviour
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_idInPlayerProfile;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_activeWhenOpened;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_activeWhenClosed;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ParticleSystem> m_playOnOpen;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_audioOnOpen;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_titleMusicSwitchValue;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Scenario[] PrerequisiteScenarios;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button m_showMenuButton;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_menuToShow;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ReadOnly]
	public GameObject m_myMenu;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[ReadOnly]
	public Button m_menuToShowBackButton;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x186FBC0", Offset = "0x186FBC0", VA = "0x186FBC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1870058", Offset = "0x1870058", VA = "0x1870058")]
	public void Open()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x187014C", Offset = "0x187014C", VA = "0x187014C")]
	public SpacefolkMenuPresent()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x18701A8", Offset = "0x18701A8", VA = "0x18701A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038D4", Offset = "0x9038D4")]
	private void <Start>b__11_0()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x18701C8", Offset = "0x18701C8", VA = "0x18701C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038E4", Offset = "0x9038E4")]
	private void <Start>b__11_1()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x18701E8", Offset = "0x18701E8", VA = "0x18701E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9038F4", Offset = "0x9038F4")]
	private void <Start>b__11_2()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1870208", Offset = "0x1870208", VA = "0x1870208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903904", Offset = "0x903904")]
	private void <Start>b__11_3()
	{
	}
}
[Token(Token = "0x200027A")]
public class SpacefolkSkybox : MonoBehaviour
{
	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer m_skyboxRenderer;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer m_starsRenderer;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubemap m_lightingMatCap;

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1870228", Offset = "0x1870228", VA = "0x1870228")]
	public SpacefolkSkybox()
	{
	}
}
[Token(Token = "0x200027B")]
public class SpacefolkUtil
{
	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1870230", Offset = "0x1870230", VA = "0x1870230")]
	public static Bounds GetBoundsNoDeco(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x18703D0", Offset = "0x18703D0", VA = "0x18703D0")]
	public SpacefolkUtil()
	{
	}
}
[Token(Token = "0x200027C")]
public class SpacefolkWindow : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5A0C", Offset = "0x8F5A0C")]
	public Transform m_standLocStart;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_standLocEnd;

	[Token(Token = "0x1700019D")]
	public virtual FastVector3Int Normal
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x18705CC", Offset = "0x18705CC", VA = "0x18705CC", Slot = "5")]
		get
		{
			return default(FastVector3Int);
		}
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x18703D8", Offset = "0x18703D8", VA = "0x18703D8", Slot = "4")]
	public virtual (Transform, Bounds) GetWorldBlockBounds(Vector3 offset)
	{
		return default((Transform, Bounds));
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x1870670", Offset = "0x1870670", VA = "0x1870670")]
	public SpacefolkWindow()
	{
	}
}
[Token(Token = "0x200027D")]
public class Spaceport : MonoBehaviour
{
	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_openParam;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_openDoorSFX;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_closeDoorSFX;

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x1870678", Offset = "0x1870678", VA = "0x1870678")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1870784", Offset = "0x1870784", VA = "0x1870784")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1870890", Offset = "0x1870890", VA = "0x1870890")]
	public Spaceport()
	{
	}
}
[Token(Token = "0x200027E")]
public class StaticListable<T> : MonoBehaviour where T : UnityEngine.Component
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> AllActive;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> All;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnNewCreated;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnActivated;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnRemoved;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnDeactivated;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChanged;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int m_id;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int s_id;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T component;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isInitialised;

	[Token(Token = "0x6000D75")]
	[AOTStubRequired]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x903914", Offset = "0x903914")]
	public static void ResetStaticListableStatics()
	{
	}

	[Token(Token = "0x6000D76")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000D77")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D78")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D79")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7A")]
	public StaticListable()
	{
	}
}
[Token(Token = "0x200027F")]
public class StretchableItem : MonoBehaviour
{
	[Token(Token = "0x2000280")]
	public enum Scale
	{
		[Token(Token = "0x4000D77")]
		Unknown,
		[Token(Token = "0x4000D78")]
		CarryItem,
		[Token(Token = "0x4000D79")]
		NormalItem,
		[Token(Token = "0x4000D7A")]
		GiantItem
	}

	[Token(Token = "0x2000281")]
	public class StretchableItemAndGOEvent : UnityEvent<StretchableItem, GameObject>
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x158E08C", Offset = "0x158E08C", VA = "0x158E08C")]
		public StretchableItemAndGOEvent()
		{
		}
	}

	[Token(Token = "0x2000282")]
	public class StretchableItemEvent : UnityEvent<StretchableItem>
	{
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x158E0D8", Offset = "0x158E0D8", VA = "0x158E0D8")]
		public StretchableItemEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000283")]
	public class ScaleSettings
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_scale;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MonoBehaviour> m_enabled;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MonoBehaviour> m_disabled;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x158DFCC", Offset = "0x158DFCC", VA = "0x158DFCC")]
		public ScaleSettings(float scale)
		{
		}
	}

	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED120", Offset = "0x8ED120")]
	private sealed class <Explode>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StretchableItem <>4__this;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <newObject>5__2;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRHand <firstHand>5__3;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand <secondHand>5__4;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRInteractableItem <newNvr>5__5;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x158DF7C", Offset = "0x158DF7C", VA = "0x158DF7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x158DFC4", Offset = "0x158DFC4", VA = "0x158DFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x158D93C", Offset = "0x158D93C", VA = "0x158D93C")]
		[DebuggerHidden]
		public <Explode>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x158D968", Offset = "0x158D968", VA = "0x158D968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x158D96C", Offset = "0x158D96C", VA = "0x158D96C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x158DF84", Offset = "0x158DF84", VA = "0x158DF84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject ScrapFXAttractor;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5A54", Offset = "0x8F5A54")]
	private static bool ms_debugSFX;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRInteractableItem nvr;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_body;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer[] m_meshRenderers;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxStretch;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Spring_K;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Spring_B;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Spring_M;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float scaleVel;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	[SerializeField]
	private float initialHandDistance;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool exploded;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float explodedAt;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StretchableItemAndGOEvent DidExplode;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StretchableItemEvent DidNotExplode;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ScrapParticleExplosion Explosion;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5AD4", Offset = "0x8F5AD4")]
	public static bool StretchToDuplicate;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F5B1C", Offset = "0x8F5B1C")]
	public bool OnlyScrap;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[ReadOnly]
	public bool CanExplode;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool CanScale;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startScale;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initialHandAPos;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initialHandBPos;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F5B64", Offset = "0x8F5B64")]
	public float StretchEffect;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float StretchEffectEpsilon;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float MinStretchRadius;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool debug_NoSpring;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool debug_Draw;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ScaleSettings[] m_snapScales;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 handAPos;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 handBPos;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 handAStartPos;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 handBStartPos;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float stretchRadius;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float stretchRadiusMin;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool stretching;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Saveable]
	[ReadOnly]
	public Scale currentScale;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5BB4", Offset = "0x8F5BB4")]
	public GameObject m_vfxEnlarge;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_vfxCompress;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_vfxDuplicate;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5BEC", Offset = "0x8F5BEC")]
	public string m_sfxPlay;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string m_sfxStop;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_sfxBreak;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_sfxEnlarge;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string m_sfxCompress;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string m_sfxDuplicate;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_sfxRtpcVelocity;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_sfxRtpcAmount;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string m_sfx;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string m_sfxSwitchVariety;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string[] m_sfxSwitchOpVariety;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string m_sfxCollide;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string m_sfxRTPCCollide;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float handsDistLastFrame;

	[Token(Token = "0x1700019E")]
	public bool Exploded
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x187A6A0", Offset = "0x187A6A0", VA = "0x187A6A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	public bool WillDuplicate
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x187A6A8", Offset = "0x187A6A8", VA = "0x187A6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x187A518", Offset = "0x187A518", VA = "0x187A518")]
	public static void SetFXAttractorPos(Vector3 p)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x187A728", Offset = "0x187A728", VA = "0x187A728")]
	private Scale ScaleIdxToScale(int idx)
	{
		return default(Scale);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x187A740", Offset = "0x187A740", VA = "0x187A740")]
	private void ApplyCurrentScale()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x187A7F8", Offset = "0x187A7F8", VA = "0x187A7F8")]
	public void SetScale(Scale scale)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x187AB78", Offset = "0x187AB78", VA = "0x187AB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x187AD9C", Offset = "0x187AD9C", VA = "0x187AD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x187AE90", Offset = "0x187AE90", VA = "0x187AE90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x187AEA0", Offset = "0x187AEA0", VA = "0x187AEA0")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x187AFE4", Offset = "0x187AFE4", VA = "0x187AFE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x187A954", Offset = "0x187A954", VA = "0x187A954")]
	private void SetInitialHandDistance()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x187B13C", Offset = "0x187B13C", VA = "0x187B13C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x187B140", Offset = "0x187B140", VA = "0x187B140")]
	private void EndStretchSfx()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x187B250", Offset = "0x187B250", VA = "0x187B250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x187BBB0", Offset = "0x187BBB0", VA = "0x187BBB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903950", Offset = "0x903950")]
	private IEnumerator Explode()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x187BE9C", Offset = "0x187BE9C", VA = "0x187BE9C")]
	private NVRInteractableItem DuplicateOnExplode()
	{
		return null;
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x187C0C8", Offset = "0x187C0C8", VA = "0x187C0C8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9039B0", Offset = "0x9039B0")]
	private void ScaleUp()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x187C188", Offset = "0x187C188", VA = "0x187C188")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9039C8", Offset = "0x9039C8")]
	private void ScaleDown()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x187BC28", Offset = "0x187BC28", VA = "0x187BC28")]
	private void UpdateStretchEffect()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x187C248", Offset = "0x187C248", VA = "0x187C248")]
	public StretchableItem()
	{
	}
}
[Token(Token = "0x2000285")]
[ExecuteInEditMode]
public class StretchyModel : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter m_meshFilter;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh m_sourceMesh;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh m_destMesh;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_pt1Source;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_pt2Source;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_pt1Dest;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_pt2Dest;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] m_vs;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] m_ts;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] m_ns;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color[] m_cs;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3[] m_vd;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_td;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] m_nd;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color[] m_cd;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x187C794", Offset = "0x187C794", VA = "0x187C794")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x187C7A0", Offset = "0x187C7A0", VA = "0x187C7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x187C7A4", Offset = "0x187C7A4", VA = "0x187C7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x187C7A8", Offset = "0x187C7A8", VA = "0x187C7A8")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x187CDF0", Offset = "0x187CDF0", VA = "0x187CDF0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x187CF50", Offset = "0x187CF50", VA = "0x187CF50")]
	public StretchyModel()
	{
	}
}
[Token(Token = "0x2000286")]
public class TNT : MonoBehaviour
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PointAndSnap m_pointAndSnap;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F5C24", Offset = "0x8F5C24")]
	public static bool ms_instantExplode;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timeout;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_textMesh;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_explosionFXPrefab;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F5C6C", Offset = "0x8F5C6C")]
	public float m_refundFraction;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatConst m_processingValueMultiplier;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_countdownActive;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_timeRemaining;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_destructionRefund;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_destructionTarget;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5C84", Offset = "0x8F5C84")]
	public string m_sfxPlaced;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_sfxStartCountdown;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxStopCountdown;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_sfxExplodeBuilding;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_sfxExplodeItem;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_sfxControlSwitch;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string m_sfxControlModeNormal;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxControlModeFinal;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float m_finalSfxFromSecondsRemain;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x187F318", Offset = "0x187F318", VA = "0x187F318")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x187F4CC", Offset = "0x187F4CC", VA = "0x187F4CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x187F54C", Offset = "0x187F54C", VA = "0x187F54C")]
	private static bool CheckForValidTarget(Collider targetCollider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x187F6C4", Offset = "0x187F6C4", VA = "0x187F6C4")]
	private void OnPickup()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x187F800", Offset = "0x187F800", VA = "0x187F800")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x187FC30", Offset = "0x187FC30", VA = "0x187FC30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1880314", Offset = "0x1880314", VA = "0x1880314")]
	public static void ExplodeThing(GameObject thingToExplode, Vector3 position, float radius)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x187F998", Offset = "0x187F998", VA = "0x187F998")]
	private bool FindDestructionTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x1880570", Offset = "0x1880570", VA = "0x1880570")]
	public TNT()
	{
	}
}
[Token(Token = "0x2000287")]
public class FolkAnimationTester : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED140", Offset = "0x8ED140")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAnimationTester <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x15F402C", Offset = "0x15F402C", VA = "0x15F402C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x15F4074", Offset = "0x15F4074", VA = "0x15F4074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x15F3EEC", Offset = "0x15F3EEC", VA = "0x15F3EEC")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x15F3F18", Offset = "0x15F3F18", VA = "0x15F3F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x15F3F1C", Offset = "0x15F3F1C", VA = "0x15F3F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x15F4034", Offset = "0x15F4034", VA = "0x15F4034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FolkAnimationController[] folk;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Person[] persons;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PersonGenerator personGen;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableBehaviours;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool disableEmotions;

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x18A9B4C", Offset = "0x18A9B4C", VA = "0x18A9B4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903A30", Offset = "0x903A30")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x18A9BC4", Offset = "0x18A9BC4", VA = "0x18A9BC4")]
	private void GetAllFolk()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x18A9D24", Offset = "0x18A9D24", VA = "0x18A9D24")]
	private void SetEmotions(FolkAnimationController.Emotions emotion)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x18A9DA8", Offset = "0x18A9DA8", VA = "0x18A9DA8")]
	public void SetHappy()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x18A9DB0", Offset = "0x18A9DB0", VA = "0x18A9DB0")]
	public void SetNeutral()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x18A9DB8", Offset = "0x18A9DB8", VA = "0x18A9DB8")]
	public void SetSad()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x18A9DC0", Offset = "0x18A9DC0", VA = "0x18A9DC0")]
	public void SetBored()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x18A9DC8", Offset = "0x18A9DC8", VA = "0x18A9DC8")]
	public void SetHungry()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x18A9DD0", Offset = "0x18A9DD0", VA = "0x18A9DD0")]
	public void SetTired()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x18A9DD8", Offset = "0x18A9DD8", VA = "0x18A9DD8")]
	public void SetWalking()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x18A9E84", Offset = "0x18A9E84", VA = "0x18A9E84")]
	public void SetState(FolkAnimationController.States state)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x18A9F04", Offset = "0x18A9F04", VA = "0x18A9F04")]
	public void PlayOneshot(FolkAnimationController.States state)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x18A9F80", Offset = "0x18A9F80", VA = "0x18A9F80")]
	public void MakeCheer()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x18A9F88", Offset = "0x18A9F88", VA = "0x18A9F88")]
	public void SetDancing()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x18A9F90", Offset = "0x18A9F90", VA = "0x18A9F90")]
	public void AddPerson()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x18A9FC4", Offset = "0x18A9FC4", VA = "0x18A9FC4")]
	public void RemovePerson()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x18AA06C", Offset = "0x18AA06C", VA = "0x18AA06C")]
	public FolkAnimationTester()
	{
	}
}
[Token(Token = "0x2000289")]
public class PersonActivityTester : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActivityItem ActivityItem;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Person Person;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1905B2C", Offset = "0x1905B2C", VA = "0x1905B2C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x903AE0", Offset = "0x903AE0")]
	private void DoActivity()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1905C2C", Offset = "0x1905C2C", VA = "0x1905C2C")]
	private void GoToActivityResult(AgentController.Result result)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x1905C80", Offset = "0x1905C80", VA = "0x1905C80")]
	public PersonActivityTester()
	{
	}
}
[Token(Token = "0x200028A")]
public class TextTextureMaker : MonoBehaviour
{
	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F5CBC", Offset = "0x8F5CBC")]
	public string m_text;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset m_font;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D latest;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TextMeshPro m_tmp;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera m_cam;

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1784738", Offset = "0x1784738", VA = "0x1784738")]
	public Texture2D MakeTextureWithMyText()
	{
		return null;
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x178478C", Offset = "0x178478C", VA = "0x178478C")]
	public static Texture2D MakeTexture(string txt, TMP_FontAsset font, bool saveToFile, Color bgColour)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1784D74", Offset = "0x1784D74", VA = "0x1784D74")]
	public TextTextureMaker()
	{
	}
}
[Token(Token = "0x200028B")]
public class TheGame : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x200028C")]
	public class TestObject : StaticMapped<TestObject>
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x158F5B8", Offset = "0x158F5B8", VA = "0x158F5B8")]
		public TestObject()
		{
		}
	}

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TheGame Instance;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CityName;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_maxCityRadius;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5D20", Offset = "0x8F5D20")]
	public float m_startTimeHr;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_realSecondsPerGameHour;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Saveable]
	[ReadOnly]
	public double m_gameEpochTimeHrs;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double m_gameDeltaTimeHrs;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float m_hoursInDaytime;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_hoursInANight;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ReadOnly]
	public string m_realTimePerGameDay;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5DB0", Offset = "0x8F5DB0")]
	public GameObject m_skybox;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap m_defaultMatCap;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light m_light;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Gradient m_sunColour;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TheSun m_theSun;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] m_dayNightMaterials;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color[] m_dayNightMaterialDefaultColour;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5DE8", Offset = "0x8F5DE8")]
	[Saveable]
	public List<Interest> m_allInterests;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	[Saveable]
	public List<Interest> m_unlockedInterests;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public List<Interest> m_lockedInterests;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action<Interest> OnAnyInterestChanged;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<Interest> OnAnyInterestUnlocked;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5E7C", Offset = "0x8F5E7C")]
	public Shop m_shop;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] m_alwaysAvailableShopItemPrefabs;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5EB4", Offset = "0x8F5EB4")]
	private Interest <m_noInterest>k__BackingField;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5EC4", Offset = "0x8F5EC4")]
	private Interest <m_anyInterest>k__BackingField;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5ED4", Offset = "0x8F5ED4")]
	private CircularPrefabPool <m_pointAndSnapUIPrefabPool>k__BackingField;

	[Token(Token = "0x170001A4")]
	public float GameHoursPerFullDay
	{
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1786204", Offset = "0x1786204", VA = "0x1786204")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A5")]
	public float deltaGameDays
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1786210", Offset = "0x1786210", VA = "0x1786210")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A6")]
	public float RealSecondsPerFullDay
	{
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x178626C", Offset = "0x178626C", VA = "0x178626C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A7")]
	public float DaysPerRealSecond
	{
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1786250", Offset = "0x1786250", VA = "0x1786250")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A8")]
	public float RealSecondsToGameHours
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1786280", Offset = "0x1786280", VA = "0x1786280")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A9")]
	public float RealSecondsToGameDays
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1786290", Offset = "0x1786290", VA = "0x1786290")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AA")]
	public float GameHoursToRealSeconds
	{
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x17862AC", Offset = "0x17862AC", VA = "0x17862AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AB")]
	public float GameDaysRealSeconds
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x17862B4", Offset = "0x17862B4", VA = "0x17862B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AC")]
	public Interest m_noInterest
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x17867D4", Offset = "0x17867D4", VA = "0x17867D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903AF8", Offset = "0x903AF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x17867DC", Offset = "0x17867DC", VA = "0x17867DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903B08", Offset = "0x903B08")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public Interest m_anyInterest
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x17867E4", Offset = "0x17867E4", VA = "0x17867E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903B18", Offset = "0x903B18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x17867EC", Offset = "0x17867EC", VA = "0x17867EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903B28", Offset = "0x903B28")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public CircularPrefabPool m_pointAndSnapUIPrefabPool
	{
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x17867F4", Offset = "0x17867F4", VA = "0x17867F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903B38", Offset = "0x903B38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x17867FC", Offset = "0x17867FC", VA = "0x17867FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903B48", Offset = "0x903B48")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x17862C8", Offset = "0x17862C8", VA = "0x17862C8")]
	public bool IsInsideSafeZone(Transform transform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1786334", Offset = "0x1786334", VA = "0x1786334")]
	public float AddDayTimes(float start, float offsetHours)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x1786354", Offset = "0x1786354", VA = "0x1786354")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x17865F4", Offset = "0x17865F4", VA = "0x17865F4")]
	public void ResetInterests(Interest[] availableInterests)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x178669C", Offset = "0x178669C", VA = "0x178669C")]
	private void ClearInterests(List<Interest> interests)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1786804", Offset = "0x1786804", VA = "0x1786804")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x903B58", Offset = "0x903B58")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1786854", Offset = "0x1786854", VA = "0x1786854")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x1786954", Offset = "0x1786954", VA = "0x1786954")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1786F5C", Offset = "0x1786F5C", VA = "0x1786F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x1787048", Offset = "0x1787048", VA = "0x1787048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x17870FC", Offset = "0x17870FC", VA = "0x17870FC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x903B6C", Offset = "0x903B6C")]
	public void TestNotification()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1787140", Offset = "0x1787140", VA = "0x1787140")]
	public void Notification(string s)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x17871C0", Offset = "0x17871C0", VA = "0x17871C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x17874D8", Offset = "0x17874D8", VA = "0x17874D8")]
	private void NewPersonAdded(Person p)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x17874DC", Offset = "0x17874DC", VA = "0x17874DC")]
	public void UnlockInterest(Interest inter)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x17876E4", Offset = "0x17876E4", VA = "0x17876E4")]
	private void UnlockInterestAndShop(Interest inter)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x17877C4", Offset = "0x17877C4", VA = "0x17877C4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903B84", Offset = "0x903B84")]
	public void QuickStart()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x17878E4", Offset = "0x17878E4", VA = "0x17878E4", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x17878E8", Offset = "0x17878E8", VA = "0x17878E8", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1787980", Offset = "0x1787980", VA = "0x1787980", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1787A8C", Offset = "0x1787A8C", VA = "0x1787A8C")]
	public void SetSkyboxAndLighting(GameObject skyboxPrefab)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1787D88", Offset = "0x1787D88", VA = "0x1787D88")]
	public void LoadedNewLanguage()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1787E28", Offset = "0x1787E28", VA = "0x1787E28")]
	public TheGame()
	{
	}
}
[Token(Token = "0x200028D")]
public class TheSun : MonoBehaviour
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxFlares;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_flarePrefab;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SolarFlare> m_flares;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double m_flareEveryXDays;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double m_nextFlareLaunch;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient m_flareWarningColour;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ReadOnly]
	[Saveable]
	public float m_flaresLaunched;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Saveable]
	[ReadOnly]
	public float m_flaresImpacted;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double m_hrsToLaunchLastFrame;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_daysOfWarnings;

	[Token(Token = "0x170001AF")]
	public float FlareProgress
	{
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1787350", Offset = "0x1787350", VA = "0x1787350")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x1787EC8", Offset = "0x1787EC8", VA = "0x1787EC8")]
	public double TimeInHrsToNextFlareLaunch()
	{
		return default(double);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x17874A8", Offset = "0x17874A8", VA = "0x17874A8")]
	public Color GetFlareColour()
	{
		return default(Color);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x1787F3C", Offset = "0x1787F3C", VA = "0x1787F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x178811C", Offset = "0x178811C", VA = "0x178811C")]
	public void StartFlaring(float timeToFirstLaunch = -1f)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x178820C", Offset = "0x178820C", VA = "0x178820C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x1788548", Offset = "0x1788548", VA = "0x1788548")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903BCC", Offset = "0x903BCC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x903BCC", Offset = "0x903BCC")]
	public void LaunchSolarFlare()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x1788738", Offset = "0x1788738", VA = "0x1788738")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x903C30", Offset = "0x903C30")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x903C30", Offset = "0x903C30")]
	public void StopAllSolarFlares()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x1788868", Offset = "0x1788868", VA = "0x1788868")]
	public TheSun()
	{
	}
}
[Token(Token = "0x200028E")]
public class ThoughtBubble : MonoBehaviour
{
	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro m_tmp;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_timer;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x178888C", Offset = "0x178888C", VA = "0x178888C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x1788914", Offset = "0x1788914", VA = "0x1788914")]
	public void SetText(string s, float duration)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x178895C", Offset = "0x178895C", VA = "0x178895C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x17889F8", Offset = "0x17889F8", VA = "0x17889F8")]
	public ThoughtBubble()
	{
	}
}
[Token(Token = "0x200028F")]
public class TitleScreenPauser : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pauseSFX;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_unPauseSFX;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isOculusPaused;

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1788A00", Offset = "0x1788A00", VA = "0x1788A00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x1788C00", Offset = "0x1788C00", VA = "0x1788C00")]
	public TitleScreenPauser()
	{
	}
}
[Token(Token = "0x2000290")]
public interface IToolTipProvider
{
	[Token(Token = "0x170001B0")]
	string ToolTipText
	{
		[Token(Token = "0x6000DFD")]
		get;
	}

	[Token(Token = "0x170001B1")]
	int ToolTipOrder
	{
		[Token(Token = "0x6000DFE")]
		get;
	}

	[Token(Token = "0x170001B2")]
	bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000DFF")]
		get;
	}

	[Token(Token = "0x170001B3")]
	Color ToolTipColor
	{
		[Token(Token = "0x6000E00")]
		get;
	}
}
[Token(Token = "0x2000291")]
public class ToolTip : MonoBehaviour
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_uiLocator;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_tip;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<IToolTipProvider> m_providers;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x178BCA0", Offset = "0x178BCA0", VA = "0x178BCA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x178BE6C", Offset = "0x178BE6C", VA = "0x178BE6C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x178C3AC", Offset = "0x178C3AC", VA = "0x178C3AC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x178C460", Offset = "0x178C460", VA = "0x178C460")]
	public void AddProvider(IToolTipProvider provider)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x178C544", Offset = "0x178C544", VA = "0x178C544")]
	public void RemoveProvider(IToolTipProvider provider)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x178C62C", Offset = "0x178C62C", VA = "0x178C62C")]
	private int ProviderSort(IToolTipProvider x, IToolTipProvider y)
	{
		return default(int);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x178C838", Offset = "0x178C838", VA = "0x178C838")]
	public ToolTip()
	{
	}
}
[Token(Token = "0x2000292")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string TxtButtonCol;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x15CD2F0", Offset = "0x15CD2F0", VA = "0x15CD2F0")]
	public static string GetControlLocKeySpecialCase(string prefix)
	{
		return null;
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x15CD52C", Offset = "0x15CD52C", VA = "0x15CD52C")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000293")]
public class TutorialLabel : MonoBehaviour
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F5F54", Offset = "0x8F5F54")]
	[Multiline]
	public string m_textKey;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRButtons m_button;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_isAxis;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_buttonPressCount;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_axisMove;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastAxis;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_labelTag;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_labelTarget;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Spring m_spring;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_wwiseEvent;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_wwiseObject;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x15CD598", Offset = "0x15CD598", VA = "0x15CD598")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x15CD5FC", Offset = "0x15CD5FC", VA = "0x15CD5FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x15CD6E8", Offset = "0x15CD6E8", VA = "0x15CD6E8")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x15CDB58", Offset = "0x15CDB58", VA = "0x15CDB58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x15CDD24", Offset = "0x15CDD24", VA = "0x15CDD24")]
	public TutorialLabel()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x15CDD34", Offset = "0x15CDD34", VA = "0x15CDD34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903C94", Offset = "0x903C94")]
	private bool <Setup>b__15_0(ControllerLocator h)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x15CDD9C", Offset = "0x15CDD9C", VA = "0x15CDD9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903CA4", Offset = "0x903CA4")]
	private bool <Setup>b__15_1(ControllerButtonLocator b)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000294")]
public class TwoStateSelection : MonoBehaviour
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_selected;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_unselected;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x15CE21C", Offset = "0x15CE21C", VA = "0x15CE21C")]
	public void SetSelected(bool b)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x15CE25C", Offset = "0x15CE25C", VA = "0x15CE25C")]
	public TwoStateSelection()
	{
	}
}
[Token(Token = "0x2000295")]
public class BankBalanceLabel : MonoBehaviour
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVar m_float;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_format;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastSeenIntValue;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1771E44", Offset = "0x1771E44", VA = "0x1771E44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x177200C", Offset = "0x177200C", VA = "0x177200C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1772148", Offset = "0x1772148", VA = "0x1772148")]
	private void ValueChanged(float v)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x17721A4", Offset = "0x17721A4", VA = "0x17721A4")]
	public BankBalanceLabel()
	{
	}
}
[Token(Token = "0x2000296")]
public class DialogueBox : MonoBehaviour
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_title;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_message;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button m_buttonRight;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button m_buttonLeft;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_gameWasPaused;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_disableButtonsOnPause;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem m_vfxVanish;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_buttonWasActiveR;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_buttonWasActiveL;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x173C0B0", Offset = "0x173C0B0", VA = "0x173C0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x173C144", Offset = "0x173C144", VA = "0x173C144")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x173C208", Offset = "0x173C208", VA = "0x173C208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x173C488", Offset = "0x173C488", VA = "0x173C488")]
	public DialogueBox()
	{
	}
}
[Token(Token = "0x2000297")]
public class FolkPin : MonoBehaviour
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_timer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_speed;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_flightDuration;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_startPos;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Person m_person;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve m_yOffset;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailRenderer m_trail;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_trailMaxLen;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 lastfn;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 rot;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x18AE650", Offset = "0x18AE650", VA = "0x18AE650")]
	public void Launch(Vector3 fromPos, Person person)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x18AE7DC", Offset = "0x18AE7DC", VA = "0x18AE7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x18AEAE4", Offset = "0x18AEAE4", VA = "0x18AEAE4")]
	public FolkPin()
	{
	}
}
[Token(Token = "0x2000298")]
public class HandBlendShape : MonoBehaviour
{
	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform blendShapeBone;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer hand;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int blendShapeIndex;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1942B3C", Offset = "0x1942B3C", VA = "0x1942B3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1942BD8", Offset = "0x1942BD8", VA = "0x1942BD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1942C9C", Offset = "0x1942C9C", VA = "0x1942C9C")]
	public HandBlendShape()
	{
	}
}
[Token(Token = "0x2000299")]
public class LoadGameButton : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button button;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1B20008", Offset = "0x1B20008", VA = "0x1B20008")]
	public LoadGameButton()
	{
	}
}
[Token(Token = "0x200029A")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_subMenus;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_languageSwitchButtons;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_languageButtonPrefab;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_languageButtonContainer;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1AAF488", Offset = "0x1AAF488", VA = "0x1AAF488")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1AAF834", Offset = "0x1AAF834", VA = "0x1AAF834")]
	public void NextLanguage()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1AAF8D0", Offset = "0x1AAF8D0", VA = "0x1AAF8D0")]
	public void QuitApp()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1AAF8D8", Offset = "0x1AAF8D8", VA = "0x1AAF8D8")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x200029B")]
public class MainMenuOptions : MonoBehaviour
{
	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButtonSlider m_musicSlider;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButtonSlider m_sfxSlider;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5FA0", Offset = "0x8F5FA0")]
	public SkyboxToPassthrough m_skyboxToPassthrough;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerModels m_vrControllerModels;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_passthroughButton;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_passthroughToggle;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_showControllersButton;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text m_showControllerToggle;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1AAF8E0", Offset = "0x1AAF8E0", VA = "0x1AAF8E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1AAFA8C", Offset = "0x1AAFA8C", VA = "0x1AAFA8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1AAFD24", Offset = "0x1AAFD24", VA = "0x1AAFD24")]
	private void OnSFXChange(float v)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1AAFD8C", Offset = "0x1AAFD8C", VA = "0x1AAFD8C")]
	private void OnMusicChange(float v)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1AAFDF4", Offset = "0x1AAFDF4", VA = "0x1AAFDF4")]
	public void OnTogglePassthrough()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1AAFE80", Offset = "0x1AAFE80", VA = "0x1AAFE80")]
	public void OnToggleShowControllers()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1AAFF0C", Offset = "0x1AAFF0C", VA = "0x1AAFF0C")]
	public MainMenuOptions()
	{
	}
}
[Token(Token = "0x200029C")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseMenu ms_instance;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pauseSFX;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_unPauseSFX;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButtonSlider m_musicSlider;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButtonSlider m_sfxSlider;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer m_pauseWorldOverlay;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_menuUI;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] m_otherPages;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_shown;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_overlayFadeDuration;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color m_overlayOnColor;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color m_overlayOffColor;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Camera m_overlayUICamera;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button[] m_saveButtons;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text[] m_saveText;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text[] m_hack_noSaveInTutorialText;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool m_canPause;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isOculusPaused;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] m_hiddenButtons;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DebugMenuUGUI m_debugMenu;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_debugButton;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NVRHand m_hand;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F5FD8", Offset = "0x8F5FD8")]
	public SkyboxToPassthrough m_skyboxToPassthrough;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRControllerModels m_vrControllerModels;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_optionsMenuButton;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_passthroughButton;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TMP_Text m_passthroughToggle;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_showControllersButton;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TMP_Text m_showControllerToggle;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x15A819C", Offset = "0x15A819C", VA = "0x15A819C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x15A82C0", Offset = "0x15A82C0", VA = "0x15A82C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x15A855C", Offset = "0x15A855C", VA = "0x15A855C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x15A884C", Offset = "0x15A884C", VA = "0x15A884C")]
	private void OnSFXChange(float v)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x15A88B4", Offset = "0x15A88B4", VA = "0x15A88B4")]
	private void OnMusicChange(float v)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x15A891C", Offset = "0x15A891C", VA = "0x15A891C")]
	public static void Show()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x15A8F50", Offset = "0x15A8F50", VA = "0x15A8F50")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x15A8FFC", Offset = "0x15A8FFC", VA = "0x15A8FFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x15A89C4", Offset = "0x15A89C4", VA = "0x15A89C4")]
	private void DoShow()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x15A847C", Offset = "0x15A847C", VA = "0x15A847C")]
	private void DoHide(bool instant = false)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x15A9334", Offset = "0x15A9334", VA = "0x15A9334")]
	public void ToggleAtLeftHand()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x15A93C8", Offset = "0x15A93C8", VA = "0x15A93C8")]
	public void ToggleAtRightHand()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x15A93B4", Offset = "0x15A93B4", VA = "0x15A93B4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x15A9448", Offset = "0x15A9448", VA = "0x15A9448")]
	public void OnSaveClicked()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x15A94F8", Offset = "0x15A94F8", VA = "0x15A94F8")]
	public void OnQuitWithoutSaveClicked()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x15A95A4", Offset = "0x15A95A4", VA = "0x15A95A4")]
	public void OnQuitWithSaveClicked()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x15A96A0", Offset = "0x15A96A0", VA = "0x15A96A0")]
	public void OnTogglePassthrough()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x15A972C", Offset = "0x15A972C", VA = "0x15A972C")]
	public void OnToggleShowControllers()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x15A97B8", Offset = "0x15A97B8", VA = "0x15A97B8")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200029D")]
public class RobotDialogueBox : MonoBehaviour
{
	[Token(Token = "0x200029E")]
	public enum TimeBarState
	{
		[Token(Token = "0x4000E52")]
		HideTimeBar,
		[Token(Token = "0x4000E53")]
		ShowTimeBar
	}

	[Token(Token = "0x200029F")]
	public enum Status
	{
		[Token(Token = "0x4000E55")]
		WrongMessage = -1,
		[Token(Token = "0x4000E56")]
		No,
		[Token(Token = "0x4000E57")]
		Yes_FullReadTime,
		[Token(Token = "0x4000E58")]
		Yes_JustEnough
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED150", Offset = "0x8ED150")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RobotDialogueBox <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x158467C", Offset = "0x158467C", VA = "0x158467C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x15846C4", Offset = "0x15846C4", VA = "0x15846C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x15843D0", Offset = "0x15843D0", VA = "0x15843D0")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x15843FC", Offset = "0x15843FC", VA = "0x15843FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1584400", Offset = "0x1584400", VA = "0x1584400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1584684", Offset = "0x1584684", VA = "0x1584684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED160", Offset = "0x8ED160")]
	private sealed class <HideInCR>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RobotDialogueBox <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x1584380", Offset = "0x1584380", VA = "0x1584380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x15843C8", Offset = "0x15843C8", VA = "0x15843C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x158426C", Offset = "0x158426C", VA = "0x158426C")]
		[DebuggerHidden]
		public <HideInCR>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1584298", Offset = "0x1584298", VA = "0x1584298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x158429C", Offset = "0x158429C", VA = "0x158429C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1584388", Offset = "0x1584388", VA = "0x1584388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RobotDialogueBox Instance;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_message;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_hasBesideRobotLocator;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_besideRobotLocator;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_headlockedLocator;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_targetTransform;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] m_showWhenHeadlocked;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] m_showWhenAtRobot;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_goToHeadLockedAngle;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_goToRobotAngle;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_lerpRate;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_initialised;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_currentMessage;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_rebuildMessage;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_popupSFX;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_currentReadTime;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_messageChangedAt;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_timeBarEnabled;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F6010", Offset = "0x8F6010")]
	public RectTransform m_timeBar;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F6048", Offset = "0x8F6048")]
	public float m_timebarMaxX;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool m_doTypewriterEffect;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F6080", Offset = "0x8F6080")]
	private float m_displayCharCount;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F60B8", Offset = "0x8F60B8")]
	public float m_displaySpeed;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x188C3DC", Offset = "0x188C3DC", VA = "0x188C3DC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x903CB4", Offset = "0x903CB4")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x188C42C", Offset = "0x188C42C", VA = "0x188C42C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x188C52C", Offset = "0x188C52C", VA = "0x188C52C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x188C684", Offset = "0x188C684", VA = "0x188C684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903CC8", Offset = "0x903CC8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x188C6FC", Offset = "0x188C6FC", VA = "0x188C6FC")]
	private void GoToRobot()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x188C744", Offset = "0x188C744", VA = "0x188C744")]
	private void GoToHeadlocked()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x188C78C", Offset = "0x188C78C", VA = "0x188C78C")]
	public void SetMessage(string msg, TimeBarState showTimeBar = TimeBarState.HideTimeBar)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x188C99C", Offset = "0x188C99C", VA = "0x188C99C")]
	public void SetAutoHideMessage(string msg)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x188CA10", Offset = "0x188CA10", VA = "0x188CA10")]
	public Status LatestMessageShownForLongEnough()
	{
		return default(Status);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x188CA70", Offset = "0x188CA70", VA = "0x188CA70")]
	public Status MessageShownForLongEnough(string msg)
	{
		return default(Status);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x188CAE8", Offset = "0x188CAE8", VA = "0x188CAE8")]
	public static string StyleText(string msg, Color highlightCol)
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x188CB14", Offset = "0x188CB14", VA = "0x188CB14")]
	public static string StyleText(string msg, string highlightCol = "0068F1")
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x188CC68", Offset = "0x188CC68", VA = "0x188CC68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x188C9C8", Offset = "0x188C9C8", VA = "0x188C9C8")]
	public void HideIn(float seconds)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x188CF50", Offset = "0x188CF50", VA = "0x188CF50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903D28", Offset = "0x903D28")]
	private IEnumerator HideInCR(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x188CFD8", Offset = "0x188CFD8", VA = "0x188CFD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x188CFE0", Offset = "0x188CFE0", VA = "0x188CFE0")]
	public RobotDialogueBox()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ScaffoldBalanceLabel : MonoBehaviour
{
	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_text;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shop m_shop;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_unconstructed;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x15B4F0C", Offset = "0x15B4F0C", VA = "0x15B4F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x15B4F78", Offset = "0x15B4F78", VA = "0x15B4F78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x15B5044", Offset = "0x15B5044", VA = "0x15B5044")]
	public ScaffoldBalanceLabel()
	{
	}
}
[Token(Token = "0x20002A3")]
public class SmartDataStringToTMP : MonoBehaviour
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringVar m_string;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x15C17A0", Offset = "0x15C17A0", VA = "0x15C17A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x15C18E8", Offset = "0x15C18E8", VA = "0x15C18E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x15C1A24", Offset = "0x15C1A24", VA = "0x15C1A24")]
	private void ValueChanged(string v)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x15C1A44", Offset = "0x15C1A44", VA = "0x15C1A44")]
	public SmartDataStringToTMP()
	{
	}
}
[Token(Token = "0x20002A4")]
[ExecuteInEditMode]
public class SpriteFader : MonoBehaviour
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_sprite;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_curve;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_timer;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x1876514", Offset = "0x1876514", VA = "0x1876514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x187651C", Offset = "0x187651C", VA = "0x187651C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x187660C", Offset = "0x187660C", VA = "0x187660C")]
	public SpriteFader()
	{
	}
}
[Token(Token = "0x20002A5")]
public class ToggleWheel : MonoBehaviour
{
	[Token(Token = "0x20002A6")]
	public struct ItemDetails
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sprite m_sprite;
	}

	[Token(Token = "0x20002A7")]
	public interface IDataSource
	{
		[Token(Token = "0x170001B9")]
		int ToggleWheelItemCount
		{
			[Token(Token = "0x6000E74")]
			get;
		}

		[Token(Token = "0x6000E75")]
		ItemDetails ToggleWheelItemDetails(int index);
	}

	[Token(Token = "0x20002A8")]
	private struct VisibleItem
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToggleWheelItem m_iconItem;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform m_hostTransform;
	}

	[Token(Token = "0x20002A9")]
	public class ChangeEvent : UnityEvent<ToggleWheel, float>
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x158F7CC", Offset = "0x158F7CC", VA = "0x158F7CC")]
		public ChangeEvent()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED180", Offset = "0x8ED180")]
	private sealed class <RotateRing>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheel <>4__this;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentIndex;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int newIndex;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x158F77C", Offset = "0x158F77C", VA = "0x158F77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x158F7C4", Offset = "0x158F7C4", VA = "0x158F7C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x158F630", Offset = "0x158F630", VA = "0x158F630")]
		[DebuggerHidden]
		public <RotateRing>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x158F65C", Offset = "0x158F65C", VA = "0x158F65C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x158F660", Offset = "0x158F660", VA = "0x158F660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x158F784", Offset = "0x158F784", VA = "0x158F784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IDataSource m_dataSource;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_arc;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_sideItemCount;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_toggleTransitionTime;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_rotationDuration;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_focusedItemScale;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_edgeItemScale;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_scaleCurve;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleWheelItem m_itemPrefab;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_itemHostTransform;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ChangeEvent m_changeEvent;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_invert;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_currentIndex;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_itemCount;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VisibleItem[] m_visibleItems;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_rotating;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_inputDelta;

	[Token(Token = "0x170001B8")]
	public int Index
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1788C80", Offset = "0x1788C80", VA = "0x1788C80")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x1788C9C", Offset = "0x1788C9C", VA = "0x1788C9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1788EDC", Offset = "0x1788EDC", VA = "0x1788EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1788EE4", Offset = "0x1788EE4", VA = "0x1788EE4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1789418", Offset = "0x1789418", VA = "0x1789418")]
	public void ToggleGoLeft()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x17894E4", Offset = "0x17894E4", VA = "0x17894E4")]
	public void ToggleGoRight()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1789428", Offset = "0x1789428", VA = "0x1789428")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1788F14", Offset = "0x1788F14", VA = "0x1788F14")]
	private void SetupVisibleItems()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1789580", Offset = "0x1789580", VA = "0x1789580")]
	public void SetCurrentIndex(int idx)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x178910C", Offset = "0x178910C", VA = "0x178910C")]
	private void Layout(float focusItemIndex, bool clockwise)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x17894F4", Offset = "0x17894F4", VA = "0x17894F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903E28", Offset = "0x903E28")]
	private IEnumerator RotateRing(int currentIndex, int newIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x17895A8", Offset = "0x17895A8", VA = "0x17895A8")]
	public ToggleWheel()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ToggleWheelItem : MonoBehaviour
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_iconSpriteRenderer;

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x1789668", Offset = "0x1789668", VA = "0x1789668", Slot = "4")]
	public virtual void Setup(ToggleWheel.ItemDetails details)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x1789684", Offset = "0x1789684", VA = "0x1789684")]
	public ToggleWheelItem()
	{
	}
}
[Token(Token = "0x20002AC")]
public class ToggleWheelMenu : StaticMapped<ToggleWheelMenu>, ToggleWheel.IDataSource
{
	[Token(Token = "0x20002AD")]
	public interface IItem
	{
		[Token(Token = "0x170001BE")]
		Sprite m_wheelToggleMenuIcon
		{
			[Token(Token = "0x6000E9B")]
			get;
		}
	}

	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED190", Offset = "0x8ED190")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheelMenu <>4__this;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x158FAD8", Offset = "0x158FAD8", VA = "0x158FAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x158FB20", Offset = "0x158FB20", VA = "0x158FB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x158F8B0", Offset = "0x158F8B0", VA = "0x158F8B0")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x158F8DC", Offset = "0x158F8DC", VA = "0x158F8DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x158F8E0", Offset = "0x158F8E0", VA = "0x158F8E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x158FAE0", Offset = "0x158FAE0", VA = "0x158FAE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED1A0", Offset = "0x8ED1A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ToggleWheelMenuItem> <>9__23_0;

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x158F87C", Offset = "0x158F87C", VA = "0x158F87C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x158F884", Offset = "0x158F884", VA = "0x158F884")]
		internal int <RegisterItem>b__23_0(ToggleWheelMenuItem a, ToggleWheelMenuItem b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_shopOpenSFX;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_shopCloseSFX;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_shopSwitchSFX;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ToggleWheel m_toggleWheel;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ToggleWheelMenuItem> m_menuItems;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ToggleWheelMenuItem m_activeMenuItem;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F60F0", Offset = "0x8F60F0")]
	private NVRHand <m_currentHand>k__BackingField;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpacefolkHandModel m_currentHandModel;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TransformMatcher m_transformMatcher;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_initialised;

	[Token(Token = "0x170001BC")]
	public NVRHand m_currentHand
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x178968C", Offset = "0x178968C", VA = "0x178968C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903ED8", Offset = "0x903ED8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1789694", Offset = "0x1789694", VA = "0x1789694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x903EE8", Offset = "0x903EE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public int ToggleWheelItemCount
	{
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x178969C", Offset = "0x178969C", VA = "0x178969C", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x17896E8", Offset = "0x17896E8", VA = "0x17896E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x17897A8", Offset = "0x17897A8", VA = "0x17897A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903EF8", Offset = "0x903EF8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1789820", Offset = "0x1789820", VA = "0x1789820")]
	private void OnToggleWheelChange(ToggleWheel toggleWheel, float transitionDuration)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1789AD0", Offset = "0x1789AD0", VA = "0x1789AD0")]
	public int GetActiveIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1789B00", Offset = "0x1789B00", VA = "0x1789B00")]
	public int SetActiveIdx(int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1789940", Offset = "0x1789940", VA = "0x1789940")]
	public void ActivateActiveItem()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1789B70", Offset = "0x1789B70", VA = "0x1789B70")]
	public void AddNewItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1789C00", Offset = "0x1789C00", VA = "0x1789C00")]
	private void RegisterItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1789D90", Offset = "0x1789D90", VA = "0x1789D90")]
	private void ReparentAndPrepareItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1789DEC", Offset = "0x1789DEC", VA = "0x1789DEC", Slot = "8")]
	public ToggleWheel.ItemDetails ToggleWheelItemDetails(int index)
	{
		return default(ToggleWheel.ItemDetails);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x1789E7C", Offset = "0x1789E7C", VA = "0x1789E7C")]
	public void ToggleAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x178A104", Offset = "0x178A104", VA = "0x178A104")]
	public void ToggleAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x178A178", Offset = "0x178A178", VA = "0x178A178")]
	public void OpenAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x178A3F4", Offset = "0x178A3F4", VA = "0x178A3F4")]
	public void OpenAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x178A468", Offset = "0x178A468", VA = "0x178A468")]
	public void CloseAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x178A570", Offset = "0x178A570", VA = "0x178A570")]
	public void CloseAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1789EF0", Offset = "0x1789EF0", VA = "0x1789EF0")]
	public void ToggleAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x178A1EC", Offset = "0x178A1EC", VA = "0x178A1EC")]
	public void OpenAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x178A4DC", Offset = "0x178A4DC", VA = "0x178A4DC")]
	public void CloseAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x178A708", Offset = "0x178A708", VA = "0x178A708")]
	private void SnapAndOpen(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x178A5E4", Offset = "0x178A5E4", VA = "0x178A5E4")]
	public void Close()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x178AC34", Offset = "0x178AC34", VA = "0x178AC34")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x178AC5C", Offset = "0x178AC5C", VA = "0x178AC5C")]
	public static void CloseAll()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x178ADC0", Offset = "0x178ADC0", VA = "0x178ADC0")]
	public static void HideAll()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x178AF24", Offset = "0x178AF24", VA = "0x178AF24")]
	public ToggleWheelMenu()
	{
	}
}
[Token(Token = "0x20002B0")]
public class ToggleWheelMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_menuIcon;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_automaticRegistration;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6100", Offset = "0x8F6100")]
	public int m_order;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x178B060", Offset = "0x178B060", VA = "0x178B060")]
	public ToggleWheelMenuItem()
	{
	}
}
[Token(Token = "0x20002B1")]
public class ToggleWheelMenuOpenTrigger : Triggerable
{
	[Token(Token = "0x20002B2")]
	public enum Hand
	{
		[Token(Token = "0x4000E99")]
		Left,
		[Token(Token = "0x4000E9A")]
		Right
	}

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToggleWheelMenu m_menu;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hand m_hand;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x178B078", Offset = "0x178B078", VA = "0x178B078", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x178B0BC", Offset = "0x178B0BC", VA = "0x178B0BC")]
	public ToggleWheelMenuOpenTrigger()
	{
	}
}
[Token(Token = "0x20002B3")]
public class ToggleWheelMenuOpener : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	private enum SuperBool
	{
		[Token(Token = "0x4000EA7")]
		Undefined = -1,
		[Token(Token = "0x4000EA8")]
		False,
		[Token(Token = "0x4000EA9")]
		True
	}

	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED1B0", Offset = "0x8ED1B0")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheelMenuOpener <>4__this;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x158FCF4", Offset = "0x158FCF4", VA = "0x158FCF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x158FD3C", Offset = "0x158FD3C", VA = "0x158FD3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x158FB28", Offset = "0x158FB28", VA = "0x158FB28")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x158FB54", Offset = "0x158FB54", VA = "0x158FB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x158FB58", Offset = "0x158FB58", VA = "0x158FB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x158FCFC", Offset = "0x158FCFC", VA = "0x158FCFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6138", Offset = "0x8F6138")]
	[SerializeField]
	private NVRHand m_hand;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_canTriggerWhilstInteracting;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_triggerAt;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_requireClickOnVive;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F61A0", Offset = "0x8F61A0")]
	public float m_triggerAtOnViveClick;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SuperBool m_requireClick;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_axisWas;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleWheelMenu m_upMenu;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ToggleWheelMenu m_downMenu;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_initialised;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x178B0CC", Offset = "0x178B0CC", VA = "0x178B0CC")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x178B0D4", Offset = "0x178B0D4", VA = "0x178B0D4")]
	public NVRHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x178B0DC", Offset = "0x178B0DC", VA = "0x178B0DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x903FA8", Offset = "0x903FA8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x178B154", Offset = "0x178B154", VA = "0x178B154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x178B3F8", Offset = "0x178B3F8", VA = "0x178B3F8")]
	public void UpPressed()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x178B4CC", Offset = "0x178B4CC", VA = "0x178B4CC")]
	public void DownPressed()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x178B5A0", Offset = "0x178B5A0", VA = "0x178B5A0")]
	public ToggleWheelMenuOpener()
	{
	}
}
[Token(Token = "0x20002B6")]
public class InfoMenuFolk : TouchInfoMenu
{
	[Serializable]
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED1C0", Offset = "0x8ED1C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UIToggleIconWithHighlight> <>9__39_0;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UIToggleIconWithHighlight> <>9__39_1;

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x15FC568", Offset = "0x15FC568", VA = "0x15FC568")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x15FC570", Offset = "0x15FC570", VA = "0x15FC570")]
		internal void <ScrollToGoal>b__39_0(UIToggleIconWithHighlight x)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x15FC590", Offset = "0x15FC590", VA = "0x15FC590")]
		internal void <ScrollToGoal>b__39_1(UIToggleIconWithHighlight x)
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED1D0", Offset = "0x8ED1D0")]
	private sealed class <GoalScroll>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfoMenuFolk <>4__this;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetx;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <start>5__2;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <end>5__3;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__4;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x15FC770", Offset = "0x15FC770", VA = "0x15FC770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x15FC7B8", Offset = "0x15FC7B8", VA = "0x15FC7B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x15FC5B0", Offset = "0x15FC5B0", VA = "0x15FC5B0")]
		[DebuggerHidden]
		public <GoalScroll>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x15FC5DC", Offset = "0x15FC5DC", VA = "0x15FC5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x15FC5E0", Offset = "0x15FC5E0", VA = "0x15FC5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x15FC778", Offset = "0x15FC778", VA = "0x15FC778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] m_panelRoots;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text[] m_nameLabels;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer[] m_interestIcon;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_jobLabels;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] m_abilityLabel;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_goalIconContainer;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_goalIconPrefab;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_dailyGoalIconPrefab;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<UIToggleIconWithHighlight> m_goalIcons;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<UIToggleIconWithHighlight> m_dailyGoalIcons;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_goalContainer;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_goalPrefab;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_dailyGoalPrefab;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<UIFolkGoalSmall> m_goals;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<UIFolkGoalSmall> m_dailyGoals;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_selectedGoal;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int m_goalCount;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_dailyGoalCount;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine m_scrollCR;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_scrollDur;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F61D8", Offset = "0x8F61D8")]
	public SpriteRenderer m_visitedFood;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer m_visitedEntertainment;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SpriteRenderer m_visitedHealth;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ProgressBar_Sprites m_sleepBar;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TMP_Text m_sleepBarLabel;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Person m_currentPerson;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_goalIconSpacing;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_goalDetailSpacing;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x16CB18C", Offset = "0x16CB18C", VA = "0x16CB18C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x16CB334", Offset = "0x16CB334", VA = "0x16CB334", Slot = "4")]
	public override bool IsValidFor(NVRInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x16CB3CC", Offset = "0x16CB3CC", VA = "0x16CB3CC", Slot = "5")]
	public override void StartInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x16CB548", Offset = "0x16CB548", VA = "0x16CB548", Slot = "6")]
	public override Transform GetAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x16CB564", Offset = "0x16CB564", VA = "0x16CB564")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904058", Offset = "0x904058")]
	private void SetPerson()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x16CB520", Offset = "0x16CB520", VA = "0x16CB520")]
	private void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x16CB58C", Offset = "0x16CB58C", VA = "0x16CB58C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x16CC220", Offset = "0x16CC220", VA = "0x16CC220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x16CC458", Offset = "0x16CC458", VA = "0x16CC458")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904070", Offset = "0x904070")]
	public void ScrollGoalsLeft()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x16CC7D8", Offset = "0x16CC7D8", VA = "0x16CC7D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904088", Offset = "0x904088")]
	public void ScrollGoalsRight()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x16CC7E4", Offset = "0x16CC7E4", VA = "0x16CC7E4")]
	public void ScrollToGoal(Transform c)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x16CC464", Offset = "0x16CC464", VA = "0x16CC464")]
	public void ScrollToGoal(int id)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x16CC81C", Offset = "0x16CC81C", VA = "0x16CC81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9040A0", Offset = "0x9040A0")]
	private IEnumerator GoalScroll(float targetx)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x16CC8A4", Offset = "0x16CC8A4", VA = "0x16CC8A4")]
	public InfoMenuFolk()
	{
	}
}
[Token(Token = "0x20002B9")]
public abstract class TouchInfoMenu : MonoBehaviour
{
	[Token(Token = "0x6000ECD")]
	public abstract bool IsValidFor(NVRInteractable interactable);

	[Token(Token = "0x6000ECE")]
	public abstract void StartInteraction(NVRInteractable interactable);

	[Token(Token = "0x6000ECF")]
	public abstract Transform GetAttachPoint();

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x178CC4C", Offset = "0x178CC4C", VA = "0x178CC4C")]
	protected TouchInfoMenu()
	{
	}
}
[Token(Token = "0x20002BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ED1E0", Offset = "0x8ED1E0")]
public class TouchInfoMenuList : ScriptableObject
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TouchInfoMenu[] InfoMenus;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<TouchInfoMenu, TouchInfoMenu> menuCache;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x178CC54", Offset = "0x178CC54", VA = "0x178CC54")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x178CE30", Offset = "0x178CE30", VA = "0x178CE30")]
	public TouchInfoMenu GetInfoMenuFor(NVRInteractable interactable)
	{
		return null;
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x178CFC0", Offset = "0x178CFC0", VA = "0x178CFC0")]
	public bool HasMenuFor(NVRInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x178D050", Offset = "0x178D050", VA = "0x178D050")]
	public TouchInfoMenuList()
	{
	}
}
[Token(Token = "0x20002BB")]
public class UIButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button Button;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_rh;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_lh;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpacefolkHand m_lhAnim;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpacefolkHand m_rhAnim;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider HoverArea;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxCollider TouchArea;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ms_minDistance;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UIButton ms_closestButton;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpacefolkHand m_closestHand;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_pointAt;

	[Token(Token = "0x4000EE1")]
	private const float k_nearishDistance = 5f;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float k_buttonCooldown;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_pressedAt;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_enabledAt;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool pressed;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool hovering;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AK.Wwise.Event HoverSFX;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AK.Wwise.Event ClickSFX;

	[Token(Token = "0x170001C5")]
	public Vector3 PointAt
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x15CE5E0", Offset = "0x15CE5E0", VA = "0x15CE5E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnClick
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x15CE5EC", Offset = "0x15CE5EC", VA = "0x15CE5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904150", Offset = "0x904150")]
		add
		{
		}
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x15CE68C", Offset = "0x15CE68C", VA = "0x15CE68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904160", Offset = "0x904160")]
		remove
		{
		}
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x15CE72C", Offset = "0x15CE72C", VA = "0x15CE72C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x15CE754", Offset = "0x15CE754", VA = "0x15CE754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x15CED7C", Offset = "0x15CED7C", VA = "0x15CED7C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x15CEB2C", Offset = "0x15CEB2C", VA = "0x15CEB2C")]
	private void InteractWith(Vector3 interactPos, SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x15CEF6C", Offset = "0x15CEF6C", VA = "0x15CEF6C")]
	private void Hover()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x15CEFEC", Offset = "0x15CEFEC", VA = "0x15CEFEC")]
	private void UnHover()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x15CF020", Offset = "0x15CF020", VA = "0x15CF020")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x15CEE8C", Offset = "0x15CEE8C", VA = "0x15CEE8C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904170", Offset = "0x904170")]
	public void Pressed()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x15CF01C", Offset = "0x15CF01C", VA = "0x15CF01C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x15CEFB4", Offset = "0x15CEFB4", VA = "0x15CEFB4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x15CF1A4", Offset = "0x15CF1A4", VA = "0x15CF1A4", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x15CF1FC", Offset = "0x15CF1FC", VA = "0x15CF1FC")]
	public UIButton()
	{
	}
}
[Token(Token = "0x20002BC")]
public class UIButtonSlider : MonoBehaviour
{
	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button Up;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Down;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Track;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float value;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Increment;

	[Token(Token = "0x14000013")]
	public event Action<float> ValueChanged
	{
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x15CF260", Offset = "0x15CF260", VA = "0x15CF260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904188", Offset = "0x904188")]
		add
		{
		}
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x15CF300", Offset = "0x15CF300", VA = "0x15CF300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904198", Offset = "0x904198")]
		remove
		{
		}
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x15CF3A0", Offset = "0x15CF3A0", VA = "0x15CF3A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x15CF48C", Offset = "0x15CF48C", VA = "0x15CF48C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x15CF4B0", Offset = "0x15CF4B0", VA = "0x15CF4B0")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x15CF4B8", Offset = "0x15CF4B8", VA = "0x15CF4B8")]
	private void OnUpClick()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x15CF530", Offset = "0x15CF530", VA = "0x15CF530")]
	private void OnDownClick()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x15CF5A8", Offset = "0x15CF5A8", VA = "0x15CF5A8")]
	public UIButtonSlider()
	{
	}
}
[Token(Token = "0x20002BD")]
public class UICityBasicInfo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class MoodPair
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F6268", Offset = "0x8F6268")]
		public float m_val;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite m_icon;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1593818", Offset = "0x1593818", VA = "0x1593818")]
		public MoodPair(float c, Sprite e)
		{
		}
	}

	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED224", Offset = "0x8ED224")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float hp;

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x15937EC", Offset = "0x15937EC", VA = "0x15937EC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x15937F4", Offset = "0x15937F4", VA = "0x15937F4")]
		internal bool <NormalisedHappinessAsMoodIcon>b__0(MoodPair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] m_moodIcon;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_hpLabel;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_populationLabel;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_populationLabelDetail;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F6230", Offset = "0x8F6230")]
	public List<MoodPair> m_moods;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> m_popDetails;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x15CF5BC", Offset = "0x15CF5BC", VA = "0x15CF5BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x15CF918", Offset = "0x15CF918", VA = "0x15CF918")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x15CF8EC", Offset = "0x15CF8EC", VA = "0x15CF8EC")]
	private void UpdateAll()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x15CFFFC", Offset = "0x15CFFFC", VA = "0x15CFFFC")]
	public Sprite NormalisedHappinessAsMoodIcon(float hp)
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x15D0138", Offset = "0x15D0138", VA = "0x15D0138")]
	public Sprite CurrentHappinessAsMoodIcon()
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x15CFBDC", Offset = "0x15CFBDC", VA = "0x15CFBDC")]
	private void UpdateHappinessCounter()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x15CFE38", Offset = "0x15CFE38", VA = "0x15CFE38")]
	private void UpdateFolkCounter()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x15CFF3C", Offset = "0x15CFF3C", VA = "0x15CFF3C")]
	private void UpdateInterestsCounter(Interest interest)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x15D01E4", Offset = "0x15D01E4", VA = "0x15D01E4")]
	private string GetPopDetail(List<Interest> unlockedInterests)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x15D03A4", Offset = "0x15D03A4", VA = "0x15D03A4")]
	public UICityBasicInfo()
	{
	}
}
[Token(Token = "0x20002C0")]
public class UICityNeedRow : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_titleBG;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_icon;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_title;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_content;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x15D0428", Offset = "0x15D0428", VA = "0x15D0428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x15D042C", Offset = "0x15D042C", VA = "0x15D042C")]
	public UICityNeedRow()
	{
	}
}
[Token(Token = "0x20002C1")]
public class UICityNeed_Facility : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FacilityCategory m_category;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] m_titleText;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] m_categoryNameKeys;

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x15D0434", Offset = "0x15D0434", VA = "0x15D0434", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x15D08A0", Offset = "0x15D08A0", VA = "0x15D08A0")]
	public void Init(FacilityCategory category)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x15D0B04", Offset = "0x15D0B04", VA = "0x15D0B04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x15D0438", Offset = "0x15D0438", VA = "0x15D0438")]
	private void Refresh(object x)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x15D0D04", Offset = "0x15D0D04", VA = "0x15D0D04")]
	public UICityNeed_Facility()
	{
	}
}
[Token(Token = "0x20002C2")]
public class UICityNeed_FolkFinder : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EstateAgent m_estateAgent;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x15D0F94", Offset = "0x15D0F94", VA = "0x15D0F94", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x15D1480", Offset = "0x15D1480", VA = "0x15D1480")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x15D1690", Offset = "0x15D1690", VA = "0x15D1690")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x15D0F98", Offset = "0x15D0F98", VA = "0x15D0F98")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x15D17FC", Offset = "0x15D17FC", VA = "0x15D17FC")]
	public UICityNeed_FolkFinder()
	{
	}
}
[Token(Token = "0x20002C3")]
public class UICityNeed_Houses : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x15D1804", Offset = "0x15D1804", VA = "0x15D1804", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x15D19EC", Offset = "0x15D19EC", VA = "0x15D19EC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x15D1C48", Offset = "0x15D1C48", VA = "0x15D1C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x15D1808", Offset = "0x15D1808", VA = "0x15D1808")]
	private void Refresh(object x)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x15D1EC8", Offset = "0x15D1EC8", VA = "0x15D1EC8")]
	public UICityNeed_Houses()
	{
	}
}
[Token(Token = "0x20002C4")]
public class UICityNeed_RocketBoosters : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED234", Offset = "0x8ED234")]
	private sealed class <InitCR>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICityNeed_RocketBoosters <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x1593C34", Offset = "0x1593C34", VA = "0x1593C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x1593C7C", Offset = "0x1593C7C", VA = "0x1593C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1593920", Offset = "0x1593920", VA = "0x1593920")]
		[DebuggerHidden]
		public <InitCR>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x159394C", Offset = "0x159394C", VA = "0x159394C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1593950", Offset = "0x1593950", VA = "0x1593950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1593C3C", Offset = "0x1593C3C", VA = "0x1593C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED244", Offset = "0x8ED244")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Interest> <>9__6_0;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x15938C0", Offset = "0x15938C0", VA = "0x15938C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x15938C8", Offset = "0x15938C8", VA = "0x15938C8")]
		internal int <Refresh>b__6_0(Interest a, Interest b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Objective_BuildRocketBoosters m_objBuildBoosters;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x15D1ED0", Offset = "0x15D1ED0", VA = "0x15D1ED0", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x15D28D0", Offset = "0x15D28D0", VA = "0x15D28D0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x15D28FC", Offset = "0x15D28FC", VA = "0x15D28FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9041A8", Offset = "0x9041A8")]
	private IEnumerator InitCR()
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x15D2974", Offset = "0x15D2974", VA = "0x15D2974")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x15D1ED4", Offset = "0x15D1ED4", VA = "0x15D1ED4")]
	private void Refresh(UnityEngine.Object x)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x15D2B74", Offset = "0x15D2B74", VA = "0x15D2B74")]
	public UICityNeed_RocketBoosters()
	{
	}
}
[Token(Token = "0x20002C7")]
public class UICityNeed_SolarFlare : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED254", Offset = "0x8ED254")]
	private sealed class <UpdateCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICityNeed_SolarFlare <>4__this;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextUpdateT>5__2;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x1593D70", Offset = "0x1593D70", VA = "0x1593D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x1593DB8", Offset = "0x1593DB8", VA = "0x1593DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1593C84", Offset = "0x1593C84", VA = "0x1593C84")]
		[DebuggerHidden]
		public <UpdateCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1593CB0", Offset = "0x1593CB0", VA = "0x1593CB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1593CB4", Offset = "0x1593CB4", VA = "0x1593CB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1593D78", Offset = "0x1593D78", VA = "0x1593D78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine m_runningCR;

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x15D2B7C", Offset = "0x15D2B7C", VA = "0x15D2B7C", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x15D3034", Offset = "0x15D3034", VA = "0x15D3034")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x15D3184", Offset = "0x15D3184", VA = "0x15D3184")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x15D310C", Offset = "0x15D310C", VA = "0x15D310C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904258", Offset = "0x904258")]
	private IEnumerator UpdateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x15D2B80", Offset = "0x15D2B80", VA = "0x15D2B80")]
	private float Refresh()
	{
		return default(float);
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x15D3250", Offset = "0x15D3250", VA = "0x15D3250")]
	public UICityNeed_SolarFlare()
	{
	}
}
[Token(Token = "0x20002C9")]
public interface IUICityNeed
{
	[Token(Token = "0x6000F26")]
	void RefreshNow();
}
[Token(Token = "0x20002CA")]
public class UICityNeeds : MonoBehaviour
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HorizontalOrVerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_standardRowPrefab;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_solarFlareRowPrefab;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UICityNeedRow> m_rows;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite m_iconFolkGeneric;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite m_iconBus;

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x15D3258", Offset = "0x15D3258", VA = "0x15D3258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x15D34B4", Offset = "0x15D34B4", VA = "0x15D34B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x15D325C", Offset = "0x15D325C", VA = "0x15D325C")]
	private void RebuildList()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x15D35EC", Offset = "0x15D35EC", VA = "0x15D35EC")]
	private GameObject AddRow(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x15D3760", Offset = "0x15D3760", VA = "0x15D3760")]
	public UICityNeeds()
	{
	}
}
[Token(Token = "0x20002CB")]
public class UIFolkGoalSmall : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_iconComplete;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_iconNotComplete;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x15D37E4", Offset = "0x15D37E4", VA = "0x15D37E4")]
	public void SetContent(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x15D38C8", Offset = "0x15D38C8", VA = "0x15D38C8")]
	public UIFolkGoalSmall()
	{
	}
}
[Token(Token = "0x20002CC")]
public class UIFolkInfoFullDetailsPanel : MonoBehaviour
{
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x15D38D0", Offset = "0x15D38D0", VA = "0x15D38D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x15D38D4", Offset = "0x15D38D4", VA = "0x15D38D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x15D38D8", Offset = "0x15D38D8", VA = "0x15D38D8")]
	public UIFolkInfoFullDetailsPanel()
	{
	}
}
[Token(Token = "0x20002CD")]
public class UIHappinessGoalRow : MonoBehaviour
{
	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_bg;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_icon;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_content;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_completedEmoji;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_notCompletedEmoji;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_completedIconColour;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color m_notCompletedIconColour;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color m_completedTextColour;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color m_notCompletedTextColour;

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x15D38E0", Offset = "0x15D38E0", VA = "0x15D38E0")]
	public void SetConent(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x15D3A64", Offset = "0x15D3A64", VA = "0x15D3A64")]
	public UIHappinessGoalRow()
	{
	}
}
[Token(Token = "0x20002CE")]
public class UIHoverDummy : MonoBehaviour, ISfHandHoverResponder
{
	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_focalPoint;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AK.Wwise.Event m_hoveringSFX;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_hoveringFrame;

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x15D3C48", Offset = "0x15D3C48", VA = "0x15D3C48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x15D3CF0", Offset = "0x15D3CF0", VA = "0x15D3CF0", Slot = "4")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x15D3CF4", Offset = "0x15D3CF4", VA = "0x15D3CF4", Slot = "6")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x15D3CF8", Offset = "0x15D3CF8", VA = "0x15D3CF8", Slot = "5")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x15D3D60", Offset = "0x15D3D60", VA = "0x15D3D60")]
	public UIHoverDummy()
	{
	}
}
[Token(Token = "0x20002CF")]
public class UIMenuInterestIcon : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_icon;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_iconNotSet;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x15D3D68", Offset = "0x15D3D68", VA = "0x15D3D68")]
	public void SetIcon(Sprite newSprite, Color col)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x15D3FF8", Offset = "0x15D3FF8", VA = "0x15D3FF8")]
	public UIMenuInterestIcon()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x15D4000", Offset = "0x15D4000", VA = "0x15D4000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904308", Offset = "0x904308")]
	private void <SetIcon>b__2_0()
	{
	}
}
[Token(Token = "0x20002D0")]
public class UIObjectiveList : MonoBehaviour
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_cityName;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HorizontalOrVerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_rowPrefab;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UIObjectiveRow> m_rows;

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x15D4030", Offset = "0x15D4030", VA = "0x15D4030")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x15D40A8", Offset = "0x15D40A8", VA = "0x15D40A8")]
	private void RebuildList()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x15D45AC", Offset = "0x15D45AC", VA = "0x15D45AC")]
	public UIObjectiveList()
	{
	}
}
[Token(Token = "0x20002D1")]
public class UIObjectiveRow : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Objective m_objective;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_incompleteIcon;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_completeIcon;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_text;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_inactiveAlpha;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x15D4630", Offset = "0x15D4630", VA = "0x15D4630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x15D44C4", Offset = "0x15D44C4", VA = "0x15D44C4")]
	public void SetObjective(Objective obj)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x15D4638", Offset = "0x15D4638", VA = "0x15D4638")]
	private void Refresh(Objective obj)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x15D47A4", Offset = "0x15D47A4", VA = "0x15D47A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x15D4834", Offset = "0x15D4834", VA = "0x15D4834")]
	public UIObjectiveRow()
	{
	}
}
[Token(Token = "0x20002D2")]
public class UIPersonDetailPanel : MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_happinessGoalTitle;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_dailyHappinesspGoalTitle;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_nameLabel;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_oddRowColour;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_evenRowColour;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UIHappinessGoalRow> m_happinesGoalRows;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<UIHappinessGoalRow> m_dailyHappinesGoalRows;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_isInitialised;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x15D4844", Offset = "0x15D4844", VA = "0x15D4844")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x15D4848", Offset = "0x15D4848", VA = "0x15D4848")]
	private void Init()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x15D4AD8", Offset = "0x15D4AD8", VA = "0x15D4AD8")]
	public void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x15D5270", Offset = "0x15D5270", VA = "0x15D5270")]
	public UIPersonDetailPanel()
	{
	}
}
[Token(Token = "0x20002D3")]
public class UIPersonInfoRow : StaticMapped<UIPersonInfoRow>, ISfHandHoverResponder
{
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED264", Offset = "0x8ED264")]
	private sealed class <GrabbedCR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPersonInfoRow <>4__this;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand <hand>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x1593FEC", Offset = "0x1593FEC", VA = "0x1593FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x1594034", Offset = "0x1594034", VA = "0x1594034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1593DC0", Offset = "0x1593DC0", VA = "0x1593DC0")]
		[DebuggerHidden]
		public <GrabbedCR>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1593DEC", Offset = "0x1593DEC", VA = "0x1593DEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1593DF0", Offset = "0x1593DF0", VA = "0x1593DF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1593FF4", Offset = "0x1593FF4", VA = "0x1593FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_name;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_interest;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_hp;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_homelessIcon;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_dontHaveThingAlpha;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Person m_person;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIPersonDetailPanel m_detailPanel;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FolkPin m_pin;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_pinShownIndicator;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x15D5304", Offset = "0x15D5304", VA = "0x15D5304")]
	public void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x15D5500", Offset = "0x15D5500", VA = "0x15D5500")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x15D5648", Offset = "0x15D5648", VA = "0x15D5648")]
	private void OnAnyHappinessGoalChanged(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x15D564C", Offset = "0x15D564C", VA = "0x15D564C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x15D5740", Offset = "0x15D5740", VA = "0x15D5740")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904318", Offset = "0x904318")]
	public void BeginHovering()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x15D5744", Offset = "0x15D5744", VA = "0x15D5744", Slot = "7")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x15D5A14", Offset = "0x15D5A14", VA = "0x15D5A14", Slot = "8")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x15D56A0", Offset = "0x15D56A0", VA = "0x15D56A0", Slot = "9")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904330", Offset = "0x904330")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x15D5A18", Offset = "0x15D5A18", VA = "0x15D5A18")]
	public void Grabbed()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x15D5A44", Offset = "0x15D5A44", VA = "0x15D5A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904348", Offset = "0x904348")]
	private IEnumerator GrabbedCR()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x15D5ABC", Offset = "0x15D5ABC", VA = "0x15D5ABC")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x15D5AC0", Offset = "0x15D5AC0", VA = "0x15D5AC0")]
	public UIPersonInfoRow()
	{
	}
}
[Token(Token = "0x20002D5")]
public class UIPersonListPanel : MonoBehaviour
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_titleText;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_maxRows;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_firstEntry;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_overviewPrefab;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UIPersonInfoRow> m_rows;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_layoutGroupTransform;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_UIPersonListPanelPrefab;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x15D5B44", Offset = "0x15D5B44", VA = "0x15D5B44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x15D6314", Offset = "0x15D6314", VA = "0x15D6314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x15D65CC", Offset = "0x15D65CC", VA = "0x15D65CC")]
	private void NewPersonArrives(Person p)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x15D5B54", Offset = "0x15D5B54", VA = "0x15D5B54")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9043F8", Offset = "0x9043F8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x15D6604", Offset = "0x15D6604", VA = "0x15D6604")]
	public UIPersonListPanel()
	{
	}
}
[Token(Token = "0x20002D6")]
public class UISetPosZero : MonoBehaviour
{
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x15D9598", Offset = "0x15D9598", VA = "0x15D9598")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x15D9604", Offset = "0x15D9604", VA = "0x15D9604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x15D9608", Offset = "0x15D9608", VA = "0x15D9608")]
	public UISetPosZero()
	{
	}
}
[Token(Token = "0x20002D7")]
public class UIToggleIconWithHighlight : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_iconOn;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_iconOff;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_highlight;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x15D9610", Offset = "0x15D9610", VA = "0x15D9610")]
	public void SetToggle(bool on)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x15D965C", Offset = "0x15D965C", VA = "0x15D965C")]
	public void SetHighlight(bool on)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x15D967C", Offset = "0x15D967C", VA = "0x15D967C")]
	public UIToggleIconWithHighlight()
	{
	}
}
[Token(Token = "0x20002D8")]
public class UITouchInfoMenu : MonoBehaviour
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_root;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TransformMatcher m_transformMatcher;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TouchInfoMenuList TouchMenus;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TouchInfoMenu currentMenu;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_cacheCleared;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x15D9788", Offset = "0x15D9788", VA = "0x15D9788")]
	public static void SceneLoaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x15D9878", Offset = "0x15D9878", VA = "0x15D9878")]
	private void OnBeginInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x15D9B88", Offset = "0x15D9B88", VA = "0x15D9B88")]
	private void OnEndInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x15D9C30", Offset = "0x15D9C30", VA = "0x15D9C30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x15D9F34", Offset = "0x15D9F34", VA = "0x15D9F34")]
	private void OnEndHovering(NVRInteractable arg0)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x15D9F38", Offset = "0x15D9F38", VA = "0x15D9F38")]
	private void OnBeginHovering(NVRInteractable arg0)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x15D9F3C", Offset = "0x15D9F3C", VA = "0x15D9F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x15D9FF0", Offset = "0x15D9FF0", VA = "0x15D9FF0")]
	public UITouchInfoMenu()
	{
	}
}
[Token(Token = "0x20002D9")]
public class UI_Btn_SetLanguage : MonoBehaviour
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageCode m_langCode;

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x15D9FFC", Offset = "0x15D9FFC", VA = "0x15D9FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x15DA0B4", Offset = "0x15DA0B4", VA = "0x15DA0B4")]
	private void OnPressed()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x15DA158", Offset = "0x15DA158", VA = "0x15DA158")]
	public UI_Btn_SetLanguage()
	{
	}
}
[Token(Token = "0x20002DA")]
public class UI_HackyFolkGoalSelector : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InfoMenuFolk m_menu;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int id;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x15DA160", Offset = "0x15DA160", VA = "0x15DA160")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x15DA184", Offset = "0x15DA184", VA = "0x15DA184")]
	public UI_HackyFolkGoalSelector()
	{
	}
}
[Token(Token = "0x20002DB")]
[ExecuteInEditMode]
public class UIHeightMatcher : MonoBehaviour
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform m_source;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform m_me;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x15D3BA8", Offset = "0x15D3BA8", VA = "0x15D3BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x15D3C40", Offset = "0x15D3C40", VA = "0x15D3C40")]
	public UIHeightMatcher()
	{
	}
}
[Token(Token = "0x20002DC")]
public class UIScrollIndicator : StaticMapped<UIScrollIndicator>
{
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x15D9520", Offset = "0x15D9520", VA = "0x15D9520")]
	public UIScrollIndicator()
	{
	}
}
[Token(Token = "0x20002DD")]
public class UIToolTip : StaticMapped<UIToolTip>
{
	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image m_bg;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color m_defaultColour;

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x15D9684", Offset = "0x15D9684", VA = "0x15D9684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x15D96DC", Offset = "0x15D96DC", VA = "0x15D96DC")]
	public void OverrideColour(bool shouldOVerride, Color c)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x15D9710", Offset = "0x15D9710", VA = "0x15D9710")]
	public UIToolTip()
	{
	}
}
[Token(Token = "0x20002DE")]
public class UVScroll : MonoBehaviour
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 speed;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x15DA18C", Offset = "0x15DA18C", VA = "0x15DA18C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x15DA1E8", Offset = "0x15DA1E8", VA = "0x15DA1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x15DA274", Offset = "0x15DA274", VA = "0x15DA274")]
	public UVScroll()
	{
	}
}
[Token(Token = "0x20002DF")]
public class UnityEventOnEnableDisable : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1596B2C", Offset = "0x1596B2C", VA = "0x1596B2C")]
		public GameObjectEvent()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectEvent OnEnabled;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObjectEvent OnDisabled;

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x15DBE80", Offset = "0x15DBE80", VA = "0x15DBE80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x15DBEE8", Offset = "0x15DBEE8", VA = "0x15DBEE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x15DBF50", Offset = "0x15DBF50", VA = "0x15DBF50")]
	public UnityEventOnEnableDisable()
	{
	}
}
[Token(Token = "0x20002E1")]
public class UnityLifecycleEvents : MonoBehaviour
{
	[Token(Token = "0x14000014")]
	public event Action<GameObject> OnEnabled
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x15E0C60", Offset = "0x15E0C60", VA = "0x15E0C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904410", Offset = "0x904410")]
		add
		{
		}
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x15E0D00", Offset = "0x15E0D00", VA = "0x15E0D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904420", Offset = "0x904420")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<GameObject> OnDisabled
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x15E0DA0", Offset = "0x15E0DA0", VA = "0x15E0DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904430", Offset = "0x904430")]
		add
		{
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x15E0E40", Offset = "0x15E0E40", VA = "0x15E0E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904440", Offset = "0x904440")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<GameObject> OnAwoke
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x15E0EE0", Offset = "0x15E0EE0", VA = "0x15E0EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904450", Offset = "0x904450")]
		add
		{
		}
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x15E0F80", Offset = "0x15E0F80", VA = "0x15E0F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904460", Offset = "0x904460")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<GameObject> OnStarted
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x15E1020", Offset = "0x15E1020", VA = "0x15E1020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904470", Offset = "0x904470")]
		add
		{
		}
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x15E10C0", Offset = "0x15E10C0", VA = "0x15E10C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904480", Offset = "0x904480")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<GameObject> OnDestroyed
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x15E1160", Offset = "0x15E1160", VA = "0x15E1160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904490", Offset = "0x904490")]
		add
		{
		}
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x15E1200", Offset = "0x15E1200", VA = "0x15E1200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9044A0", Offset = "0x9044A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x15E12A0", Offset = "0x15E12A0", VA = "0x15E12A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x15E1310", Offset = "0x15E1310", VA = "0x15E1310")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x15E1380", Offset = "0x15E1380", VA = "0x15E1380")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x15E13F0", Offset = "0x15E13F0", VA = "0x15E13F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x15E1460", Offset = "0x15E1460", VA = "0x15E1460")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x15E14D0", Offset = "0x15E14D0", VA = "0x15E14D0")]
	public UnityLifecycleEvents()
	{
	}
}
[Token(Token = "0x20002E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ED284", Offset = "0x8ED284")]
public class UnityObjectList : ScriptableObject
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityObjectWithValueList m_list;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x15E154C", Offset = "0x15E154C", VA = "0x15E154C")]
	public UnityEngine.Object Random([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x15E1594", Offset = "0x15E1594", VA = "0x15E1594")]
	public UnityObjectWithValue RandomObjVal([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x15E182C", Offset = "0x15E182C", VA = "0x15E182C")]
	public void CloneFrom(UnityObjectList source)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x15E1B18", Offset = "0x15E1B18", VA = "0x15E1B18")]
	public UnityObjectList()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E3")]
public class UnityObjectWithValue
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEngine.Object m_obj;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_value;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_valueNorm;

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x15E1B20", Offset = "0x15E1B20", VA = "0x15E1B20")]
	public UnityObjectWithValue()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E4")]
public class UnityObjectWithValueList
{
	[Serializable]
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED294", Offset = "0x8ED294")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<UnityObjectWithValue> <>9__2_0;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1596C2C", Offset = "0x1596C2C", VA = "0x1596C2C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x1596C34", Offset = "0x1596C34", VA = "0x1596C34")]
		internal int <RandomObjVal>b__2_0(UnityObjectWithValue a, UnityObjectWithValue b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<UnityObjectWithValue> m_objValList;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x15E1574", Offset = "0x15E1574", VA = "0x15E1574")]
	public UnityEngine.Object Random([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x15E15AC", Offset = "0x15E15AC", VA = "0x15E15AC")]
	public UnityObjectWithValue RandomObjVal([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x15E1B28", Offset = "0x15E1B28", VA = "0x15E1B28")]
	public static void NormaliseValues(List<UnityObjectWithValue> plist)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x15E1C4C", Offset = "0x15E1C4C", VA = "0x15E1C4C")]
	public void Add(GameObject[] list)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x15E1D48", Offset = "0x15E1D48", VA = "0x15E1D48")]
	public void Add(UnityObjectWithValue owv)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x15E1A94", Offset = "0x15E1A94", VA = "0x15E1A94")]
	public UnityObjectWithValueList()
	{
	}
}
[Token(Token = "0x20002E6")]
public class UtilityAI
{
	[Token(Token = "0x20002E7")]
	public enum ExecutionState
	{
		[Token(Token = "0x4000F76")]
		Running,
		[Token(Token = "0x4000F77")]
		Finished
	}

	[Token(Token = "0x20002E8")]
	public delegate void voidDelegate();

	[Token(Token = "0x20002E9")]
	public delegate ExecutionState ActionDelegate();

	[Token(Token = "0x20002EA")]
	public delegate string stringDelegate();

	[Token(Token = "0x20002EB")]
	public delegate float ScorerDelegate(float min, float max);

	[Token(Token = "0x20002EC")]
	public struct Scorer
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScorerDelegate del;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float min;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float max;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1597338", Offset = "0x1597338", VA = "0x1597338")]
		public Scorer(ScorerDelegate d, float _min, float _max)
		{
		}
	}

	[Token(Token = "0x20002ED")]
	public class AIAction
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActionDelegate action;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public voidDelegate actionEnter;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public voidDelegate actionExit;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public stringDelegate getInfo;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Scorer> scorers;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1597034", Offset = "0x1597034", VA = "0x1597034")]
		public AIAction()
		{
		}
	}

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string emptystring;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AIAction> m_actions;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AIAction m_runningAction;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timer;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_debug;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool m_paused;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string debugStr;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x19DBF60", Offset = "0x19DBF60", VA = "0x19DBF60")]
	public static string EmptyString()
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x19DBFC4", Offset = "0x19DBFC4", VA = "0x19DBFC4")]
	public AIAction GetRunningAction()
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x19DBFCC", Offset = "0x19DBFCC", VA = "0x19DBFCC")]
	public void Pause(bool p)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x19DBFD8", Offset = "0x19DBFD8", VA = "0x19DBFD8")]
	public UtilityAI()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x19DC06C", Offset = "0x19DC06C", VA = "0x19DC06C")]
	public AIAction AddAction(string name, ActionDelegate action, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x19DC250", Offset = "0x19DC250", VA = "0x19DC250")]
	public AIAction AddAction(string name, ActionDelegate action, voidDelegate enter, voidDelegate exit, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x19DC118", Offset = "0x19DC118", VA = "0x19DC118")]
	public AIAction AddAction(string name, ActionDelegate action, voidDelegate enter, voidDelegate exit, stringDelegate getInfo, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x19DC30C", Offset = "0x19DC30C", VA = "0x19DC30C")]
	public void Interrupt()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x19DC358", Offset = "0x19DC358", VA = "0x19DC358")]
	public void Update()
	{
	}
}
[Token(Token = "0x20002EE")]
public class JoesCoolBugReporter : MonoBehaviour
{
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED2A4", Offset = "0x8ED2A4")]
	private sealed class <DoAndroidLogCat>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x16B010C", Offset = "0x16B010C", VA = "0x16B010C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x16B0154", Offset = "0x16B0154", VA = "0x16B0154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x16AFFF4", Offset = "0x16AFFF4", VA = "0x16AFFF4")]
		[DebuggerHidden]
		public <DoAndroidLogCat>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x16B0020", Offset = "0x16B0020", VA = "0x16B0020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x16B0024", Offset = "0x16B0024", VA = "0x16B0024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x16B0114", Offset = "0x16B0114", VA = "0x16B0114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED2B4", Offset = "0x8ED2B4")]
	private sealed class <DoAndroidBugReport>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x16AFFA4", Offset = "0x16AFFA4", VA = "0x16AFFA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x16AFFEC", Offset = "0x16AFFEC", VA = "0x16AFFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x16AFE90", Offset = "0x16AFE90", VA = "0x16AFE90")]
		[DebuggerHidden]
		public <DoAndroidBugReport>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x16AFEBC", Offset = "0x16AFEBC", VA = "0x16AFEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x16AFEC0", Offset = "0x16AFEC0", VA = "0x16AFEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x16AFFAC", Offset = "0x16AFFAC", VA = "0x16AFFAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED2C4", Offset = "0x8ED2C4")]
	private sealed class <RunCommandAndSaveOutput>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string command;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string outputPath;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string arguments;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x16B05F4", Offset = "0x16B05F4", VA = "0x16B05F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x16B063C", Offset = "0x16B063C", VA = "0x16B063C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x16B015C", Offset = "0x16B015C", VA = "0x16B015C")]
		[DebuggerHidden]
		public <RunCommandAndSaveOutput>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x16B0188", Offset = "0x16B0188", VA = "0x16B0188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x16B018C", Offset = "0x16B018C", VA = "0x16B018C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x16B05FC", Offset = "0x16B05FC", VA = "0x16B05FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StreamWriter fileWriter;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Process runningProc;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62F0", Offset = "0x8F62F0")]
	private bool <SaveInProgress>k__BackingField;

	[Token(Token = "0x170001CC")]
	public string LogPath
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x18057FC", Offset = "0x18057FC", VA = "0x18057FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CD")]
	public string BugreportPath
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x18058D8", Offset = "0x18058D8", VA = "0x18058D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CE")]
	public bool SaveInProgress
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x18059B4", Offset = "0x18059B4", VA = "0x18059B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904540", Offset = "0x904540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x18059BC", Offset = "0x18059BC", VA = "0x18059BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x904550", Offset = "0x904550")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x18055AC", Offset = "0x18055AC", VA = "0x18055AC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9044B0", Offset = "0x9044B0")]
	public void SaveBugreportBundle()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x18056D4", Offset = "0x18056D4", VA = "0x18056D4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9044F8", Offset = "0x9044F8")]
	public void SaveLogOutput()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x1805784", Offset = "0x1805784", VA = "0x1805784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904560", Offset = "0x904560")]
	private IEnumerator DoAndroidLogCat()
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x180565C", Offset = "0x180565C", VA = "0x180565C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9045C0", Offset = "0x9045C0")]
	private IEnumerator DoAndroidBugReport()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x18059C8", Offset = "0x18059C8", VA = "0x18059C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904620", Offset = "0x904620")]
	private IEnumerator RunCommandAndSaveOutput(string command, string outputPath, string arguments = "")
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x1805A8C", Offset = "0x1805A8C", VA = "0x1805A8C")]
	private void GotCommandOutput(object sender, DataReceivedEventArgs e)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x1805ABC", Offset = "0x1805ABC", VA = "0x1805ABC")]
	public JoesCoolBugReporter()
	{
	}
}
[Token(Token = "0x20002F2")]
public class LODTweaker : MonoBehaviour
{
	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F6300", Offset = "0x8F6300")]
	private float LodBias;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F6340", Offset = "0x8F6340")]
	private float MaxLod;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1817580", Offset = "0x1817580", VA = "0x1817580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x18175B8", Offset = "0x18175B8", VA = "0x18175B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1817604", Offset = "0x1817604", VA = "0x1817604")]
	public LODTweaker()
	{
	}
}
[Token(Token = "0x20002F3")]
public static class Matrix4x4Extensions
{
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1AB1F7C", Offset = "0x1AB1F7C", VA = "0x1AB1F7C")]
	public static Vector3 Position(this ref Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x1AB1F88", Offset = "0x1AB1F88", VA = "0x1AB1F88")]
	public static Quaternion Rotation(this ref Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1AB1FA0", Offset = "0x1AB1FA0", VA = "0x1AB1FA0")]
	public static Vector3 Scale(this ref Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1AB2068", Offset = "0x1AB2068", VA = "0x1AB2068")]
	public static void Decompose(this ref Matrix4x4 matrix, out Vector3 localPosition, out Quaternion localRotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1AB20D4", Offset = "0x1AB20D4", VA = "0x1AB20D4")]
	public static void Apply(this ref Matrix4x4 matrix, Transform transform)
	{
	}
}
[Token(Token = "0x20002F4")]
public class ObjectCycler : MonoBehaviour
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Objects;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int o;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x159934C", Offset = "0x159934C", VA = "0x159934C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x15993D0", Offset = "0x15993D0", VA = "0x15993D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x1599354", Offset = "0x1599354", VA = "0x1599354")]
	private void Activate(int _o)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x15994B8", Offset = "0x15994B8", VA = "0x15994B8")]
	public ObjectCycler()
	{
	}
}
[Token(Token = "0x20002F5")]
public class ObjectDuplicator : MonoBehaviour
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int Number;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Spacing;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Contents;

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x15994C0", Offset = "0x15994C0", VA = "0x15994C0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x1599568", Offset = "0x1599568", VA = "0x1599568")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9047C0", Offset = "0x9047C0")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1599774", Offset = "0x1599774", VA = "0x1599774")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9047D8", Offset = "0x9047D8")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x1599BC4", Offset = "0x1599BC4", VA = "0x1599BC4")]
	public ObjectDuplicator()
	{
	}
}
[Token(Token = "0x20002F6")]
public static class RandomExtensions
{
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x193128C", Offset = "0x193128C", VA = "0x193128C")]
	public static float NextFloat(this System.Random rand)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x19312B4", Offset = "0x19312B4", VA = "0x19312B4")]
	public static float Range(this System.Random rand, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x1931308", Offset = "0x1931308", VA = "0x1931308")]
	public static double Range(this System.Random rand, double min, double max)
	{
		return default(double);
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x1931358", Offset = "0x1931358", VA = "0x1931358")]
	public static int Range(this System.Random rand, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x1931378", Offset = "0x1931378", VA = "0x1931378")]
	public static float value(this System.Random rand)
	{
		return default(float);
	}
}
[Token(Token = "0x20002F7")]
public class StaticMapped<T> : MonoBehaviour where T : UnityEngine.Component
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, T> AllActive;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, T> All;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnNewCreated;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnActivated;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnRemoved;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnDeactivated;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChanged;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int m_id;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int s_id;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public T component;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isInitialised;

	[Token(Token = "0x6000FEB")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x904840", Offset = "0x904840")]
	[AOTStubRequired]
	public static void ResetStaticListableStatics()
	{
	}

	[Token(Token = "0x6000FEC")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000FED")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FEE")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000FEF")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF0")]
	public static T At(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FF1")]
	public static T FindActive(Predicate<T> predicate)
	{
		return null;
	}

	[Token(Token = "0x6000FF2")]
	public static T ActiveAt(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FF3")]
	public StaticMapped()
	{
	}
}
[Token(Token = "0x20002F8")]
public class VRControllerModels : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED2F4", Offset = "0x8ED2F4")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x1FC9F34", Offset = "0x1FC9F34", VA = "0x1FC9F34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x1FC9F7C", Offset = "0x1FC9F7C", VA = "0x1FC9F7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1FC9E04", Offset = "0x1FC9E04", VA = "0x1FC9E04")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1FC9E30", Offset = "0x1FC9E30", VA = "0x1FC9E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1FC9E34", Offset = "0x1FC9E34", VA = "0x1FC9E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1FC9F3C", Offset = "0x1FC9F3C", VA = "0x1FC9F3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED304", Offset = "0x8ED304")]
	private sealed class <GetControllers>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldBeOn;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x1597E94", Offset = "0x1597E94", VA = "0x1597E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x1597EDC", Offset = "0x1597EDC", VA = "0x1597EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1597B54", Offset = "0x1597B54", VA = "0x1597B54")]
		[DebuggerHidden]
		public <GetControllers>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1597B80", Offset = "0x1597B80", VA = "0x1597B80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1597B84", Offset = "0x1597B84", VA = "0x1597B84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1597E9C", Offset = "0x1597E9C", VA = "0x1597E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED314", Offset = "0x8ED314")]
	private sealed class <TweenControllerVisibility>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float target;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <start>5__2;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__3;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x1FCA2E0", Offset = "0x1FCA2E0", VA = "0x1FCA2E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x1FCA328", Offset = "0x1FCA328", VA = "0x1FCA328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1FC9F84", Offset = "0x1FC9F84", VA = "0x1FC9F84")]
		[DebuggerHidden]
		public <TweenControllerVisibility>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1FC9FB0", Offset = "0x1FC9FB0", VA = "0x1FC9FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1FC9FB4", Offset = "0x1FC9FB4", VA = "0x1FC9FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1FCA2E8", Offset = "0x1FCA2E8", VA = "0x1FCA2E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ControllersVisible;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRRuntimeController[] m_ovrRuntimeControllers;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_controllerMaterial;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_transitionDuration;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material m_runtimeControllerMat;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> m_controllerModelGOs;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> m_controllerModelRenderers;

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x19DD894", Offset = "0x19DD894", VA = "0x19DD894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90487C", Offset = "0x90487C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x19DD90C", Offset = "0x19DD90C", VA = "0x19DD90C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9048DC", Offset = "0x9048DC")]
	private IEnumerator GetControllers(bool shouldBeOn)
	{
		return null;
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x19DD998", Offset = "0x19DD998", VA = "0x19DD998")]
	public bool Toggle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x19DDA6C", Offset = "0x19DDA6C", VA = "0x19DDA6C")]
	public void SetVisible(bool shouldBeVisible, float duration = -1f, float delay = 0f)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x19DDB64", Offset = "0x19DDB64", VA = "0x19DDB64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90493C", Offset = "0x90493C")]
	private IEnumerator TweenControllerVisibility(float target, float duration, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x19DDC00", Offset = "0x19DDC00", VA = "0x19DDC00")]
	public VRControllerModels()
	{
	}
}
[Token(Token = "0x20002FC")]
public class BusStop : MonoBehaviour
{
	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntRange m_numFolkToDropOff;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F63A0", Offset = "0x8F63A0")]
	public int m_initialNoBusDropoffFolkCount;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_initialDropoffUniqueInterests;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F63D8", Offset = "0x8F63D8")]
	public float m_firstDropoffAfterDays;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_firstDropoffFolkCount;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F6410", Offset = "0x8F6410")]
	public float m_gameDaysBetween;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_spaceBus;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_busStop;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_busStopsFor;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float busStartHeight;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 busStartPos;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 busTarget;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_busSpeed;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_busPrelandDistance;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_busJingleDistance;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_busLandingJingle;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnWillArriveSoon;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PersonGenerator m_personGenerator;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_timeBetween;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_timer;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_dropoffCount;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F6448", Offset = "0x8F6448")]
	public GameObject infoTut;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_droppingOffTimer;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool hasPlayedJingle;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool hasPrelanded;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool hasLanded;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	private bool hasTakenOff;

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1A24518", Offset = "0x1A24518", VA = "0x1A24518")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1A2454C", Offset = "0x1A2454C", VA = "0x1A2454C")]
	private void Start()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x1A24750", Offset = "0x1A24750", VA = "0x1A24750")]
	private void Update()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x1A24A84", Offset = "0x1A24A84", VA = "0x1A24A84")]
	public void BusTakeOff()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x1A24A90", Offset = "0x1A24A90", VA = "0x1A24A90")]
	public void BusDropFolk()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1A24B90", Offset = "0x1A24B90", VA = "0x1A24B90")]
	public BusStop()
	{
	}
}
[Token(Token = "0x20002FD")]
public class LightVolumeUtilities : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED324", Offset = "0x8ED324")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material from;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x16B21E0", Offset = "0x16B21E0", VA = "0x16B21E0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x16B21E8", Offset = "0x16B21E8", VA = "0x16B21E8")]
		internal bool <SwapMats>b__0(MeshRenderer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_buildingDefaultMaterial;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumeLightingOnlyMaterial;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_SDFVisualiseMaterialR;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_SDFVisualiseMaterialG;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_SDFVisualiseMaterialB;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_SDFVisualiseMaterialA;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x1B1EF4C", Offset = "0x1B1EF4C", VA = "0x1B1EF4C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904A8C", Offset = "0x904A8C")]
	public void SetBuildingDefaultMaterials()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x1B1F368", Offset = "0x1B1F368", VA = "0x1B1F368")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904AA4", Offset = "0x904AA4")]
	public void SetVolumeLightingOnlyMaterial()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x1B1F3B4", Offset = "0x1B1F3B4", VA = "0x1B1F3B4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904ABC", Offset = "0x904ABC")]
	public void SetSDFVisualiseMaterialsR()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x1B1F400", Offset = "0x1B1F400", VA = "0x1B1F400")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904AD4", Offset = "0x904AD4")]
	public void SetSDFVisualiseMaterialsG()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x1B1F44C", Offset = "0x1B1F44C", VA = "0x1B1F44C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904AEC", Offset = "0x904AEC")]
	public void SetSDFVisualiseMaterialsB()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x1B1F498", Offset = "0x1B1F498", VA = "0x1B1F498")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904B04", Offset = "0x904B04")]
	public void SetSDFVisualiseMaterialsA()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1B1EF9C", Offset = "0x1B1EF9C", VA = "0x1B1EF9C")]
	private void SwapMats(Material from, Material to)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x1B1F4E8", Offset = "0x1B1F4E8", VA = "0x1B1F4E8")]
	public LightVolumeUtilities()
	{
	}
}
[Token(Token = "0x20002FF")]
public class RebakeOnSnap : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	public delegate bool NavMeshEnabledDelegate();

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_calculateLighting;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_calculateNavigation;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_calculateReachability;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshEnabledDelegate m_navMeshEnabledDelegate;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshSourceTag[] m_navMeshSourceTags;

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x1933F2C", Offset = "0x1933F2C", VA = "0x1933F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x1934340", Offset = "0x1934340", VA = "0x1934340")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x19343BC", Offset = "0x19343BC", VA = "0x19343BC")]
	private void Rebake_PointAndSnap(bool didSnap, bool validPlacement, RaycastHit hitinfo)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x19343C0", Offset = "0x19343C0", VA = "0x19343C0")]
	private void Rebake()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x1934344", Offset = "0x1934344", VA = "0x1934344")]
	private void Unbake()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x1934438", Offset = "0x1934438", VA = "0x1934438")]
	private void Bake()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x193467C", Offset = "0x193467C", VA = "0x193467C")]
	public RebakeOnSnap()
	{
	}
}
[Token(Token = "0x2000301")]
public class SDF : MonoBehaviour
{
	[Token(Token = "0x6001028")]
	[Address(RVA = "0x188E2BC", Offset = "0x188E2BC", VA = "0x188E2BC")]
	public static float SDFMap(Vector3 worldPos, List<SDFShape> shapeList)
	{
		return default(float);
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x188E8B8", Offset = "0x188E8B8", VA = "0x188E8B8")]
	public SDF()
	{
	}
}
[Token(Token = "0x2000302")]
public class SDFCommon
{
	[Token(Token = "0x600102A")]
	[Address(RVA = "0x188EAAC", Offset = "0x188EAAC", VA = "0x188EAAC")]
	public static float frac(float f)
	{
		return default(float);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x188EAB8", Offset = "0x188EAB8", VA = "0x188EAB8")]
	public static Vector3 frac(Vector3 f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x188EAD4", Offset = "0x188EAD4", VA = "0x188EAD4")]
	public static Vector3 clamp(Vector3 v, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x188EB58", Offset = "0x188EB58", VA = "0x188EB58")]
	public static Vector3 sqrt(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x188EBCC", Offset = "0x188EBCC", VA = "0x188EBCC")]
	public static float step(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x188EBE0", Offset = "0x188EBE0", VA = "0x188EBE0")]
	public static float vmax(Vector3 v)
	{
		return default(float);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x188EC0C", Offset = "0x188EC0C", VA = "0x188EC0C")]
	public static Vector4 opU(Vector4 d1, Vector4 d2)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x188EC24", Offset = "0x188EC24", VA = "0x188EC24")]
	public static Vector4 opU_PaperValley(Vector4 d1, Vector4 d2)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x188EC5C", Offset = "0x188EC5C", VA = "0x188EC5C")]
	public static float smin_exponential(float a, float b, float k = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x188ECBC", Offset = "0x188ECBC", VA = "0x188ECBC")]
	public static float smin(float a, float b, float k)
	{
		return default(float);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x188ED40", Offset = "0x188ED40", VA = "0x188ED40")]
	public static Vector2 smin(Vector2 a, Vector2 b, float k)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x188EDF8", Offset = "0x188EDF8", VA = "0x188EDF8")]
	public static float smax(float a, float b, float k)
	{
		return default(float);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x188EE7C", Offset = "0x188EE7C", VA = "0x188EE7C")]
	public static Vector3 smax(Vector3 a, Vector3 b, float k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x188EEF8", Offset = "0x188EEF8", VA = "0x188EEF8")]
	public static Vector3 rotX(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x188EF60", Offset = "0x188EF60", VA = "0x188EF60")]
	public static Vector3 rotY(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x188EFC8", Offset = "0x188EFC8", VA = "0x188EFC8")]
	public static Vector3 rotZ(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x188F030", Offset = "0x188F030", VA = "0x188F030")]
	public static Matrix4x4 inverse(Matrix4x4 input)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x188F070", Offset = "0x188F070", VA = "0x188F070")]
	public static Vector3 opTx(Vector3 p, Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x188E61C", Offset = "0x188E61C", VA = "0x188E61C")]
	public static float sdSphere(Vector3 p, float r)
	{
		return default(float);
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x188E658", Offset = "0x188E658", VA = "0x188E658")]
	public static float sdBoxcheap(Vector3 p, Vector3 s)
	{
		return default(float);
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x188E6A8", Offset = "0x188E6A8", VA = "0x188E6A8")]
	public static float sdCapsule(Vector3 p, Vector3 a, Vector3 b, float r)
	{
		return default(float);
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x188E770", Offset = "0x188E770", VA = "0x188E770")]
	public static float sdCappedCylinder(Vector3 p, Vector2 h)
	{
		return default(float);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x188F0E4", Offset = "0x188F0E4", VA = "0x188F0E4")]
	public static float sdCone(Vector3 p, Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x188E81C", Offset = "0x188E81C", VA = "0x188E81C")]
	public static float sdConeApprox(Vector3 p, Vector3 s)
	{
		return default(float);
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x188F208", Offset = "0x188F208", VA = "0x188F208")]
	public static float det(Vector2 a, Vector2 b)
	{
		return default(float);
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x188F218", Offset = "0x188F218", VA = "0x188F218")]
	public static Vector3 getClosest(Vector2 b0, Vector2 b1, Vector2 b2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x188F3B8", Offset = "0x188F3B8", VA = "0x188F3B8")]
	public static Vector4 sdBezierAllData(Vector3 p, Vector3 a, Vector3 b, Vector3 c)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x188F68C", Offset = "0x188F68C", VA = "0x188F68C")]
	public static float sdBezier(Vector3 p, Vector3 a, Vector3 b, Vector3 c, float width, float from, float to, float taperLen)
	{
		return default(float);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x188F740", Offset = "0x188F740", VA = "0x188F740")]
	public static float sdBezier(Vector3 p, Vector3 a, Vector3 b, Vector3 c, float width, float from, float to, float taperLen, out float bezT)
	{
		return default(float);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x188F7FC", Offset = "0x188F7FC", VA = "0x188F7FC")]
	public static Vector3 hsv2rgb(float h, float s, float v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x188F9C8", Offset = "0x188F9C8", VA = "0x188F9C8")]
	public SDFCommon()
	{
	}
}
[Token(Token = "0x2000303")]
public class SDFGPUInterface
{
	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] ms_shapeType;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] ms_combineMode;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector4[] ms_scale;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Matrix4x4[] ms_invMatrix;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int MaxShapes;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int SDFShapeType;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int SDFShapeCombine;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SDFShapeWorldScale;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int SDFShapeMatrixInv;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int SDFShapeCount;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x188F9D0", Offset = "0x188F9D0", VA = "0x188F9D0")]
	static SDFGPUInterface()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x188FBE0", Offset = "0x188FBE0", VA = "0x188FBE0")]
	public static bool SendShapesToGPU(SDFCatList catList)
	{
		return default(bool);
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x1890450", Offset = "0x1890450", VA = "0x1890450")]
	public SDFGPUInterface()
	{
	}
}
[Token(Token = "0x2000304")]
public class SDFShape : StaticMapped<SDFShape>
{
	[Token(Token = "0x2000305")]
	public enum Category
	{
		[Token(Token = "0x4001000")]
		All = -2,
		[Token(Token = "0x4001001")]
		None,
		[Token(Token = "0x4001002")]
		A,
		[Token(Token = "0x4001003")]
		B,
		[Token(Token = "0x4001004")]
		C,
		[Token(Token = "0x4001005")]
		D
	}

	[Token(Token = "0x2000306")]
	public enum Combine
	{
		[Token(Token = "0x4001007")]
		Add,
		[Token(Token = "0x4001008")]
		Subtract,
		[Token(Token = "0x4001009")]
		Intersect,
		[Token(Token = "0x400100A")]
		Blend,
		[Token(Token = "0x400100B")]
		Blend2,
		[Token(Token = "0x400100C")]
		Blend3,
		[Token(Token = "0x400100D")]
		Blend4
	}

	[Token(Token = "0x2000307")]
	public enum Shape
	{
		[Token(Token = "0x400100F")]
		None,
		[Token(Token = "0x4001010")]
		Sphere,
		[Token(Token = "0x4001011")]
		Cuboid,
		[Token(Token = "0x4001012")]
		Capsule,
		[Token(Token = "0x4001013")]
		Bezier,
		[Token(Token = "0x4001014")]
		Cylinder,
		[Token(Token = "0x4001015")]
		Cone
	}

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Category ms_showCategory;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Category m_category;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Combine m_combine;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shape m_shape;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6480", Offset = "0x8F6480")]
	public Transform m_bezierPtA;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F64D0", Offset = "0x8F64D0")]
	public Transform m_bezierPtB;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6520", Offset = "0x8F6520")]
	public Transform m_bezierPtC;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6570", Offset = "0x8F6570")]
	public float m_bezierWidth;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F65C0", Offset = "0x8F65C0")]
	public float m_bezierStart;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6610", Offset = "0x8F6610")]
	public float m_bezierEnd;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F6660", Offset = "0x8F6660")]
	public float m_bezierTaper;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool sentToGPU;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool m_drawAllGizmos;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Color[] GizmoCol;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool m_alwaysShowShape;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool m_alwaysShowBounds;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 min;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 max;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Bounds _bounds;

	[Token(Token = "0x170001DB")]
	public Bounds m_bounds
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x18904D8", Offset = "0x18904D8", VA = "0x18904D8")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x1890458", Offset = "0x1890458", VA = "0x1890458")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x189051C", Offset = "0x189051C", VA = "0x189051C")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x18908F4", Offset = "0x18908F4", VA = "0x18908F4")]
	private void GetBezierBounds(Vector3 p0, Vector3 p1, Vector3 p2, ref Bounds b)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x1890C2C", Offset = "0x1890C2C", VA = "0x1890C2C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x1890CE4", Offset = "0x1890CE4", VA = "0x1890CE4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x1890D80", Offset = "0x1890D80", VA = "0x1890D80")]
	private void DrawGizmos(Color col)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x1891820", Offset = "0x1891820", VA = "0x1891820")]
	public static void GizmoCylinder(Vector3 p, int res = 16)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x1891690", Offset = "0x1891690", VA = "0x1891690")]
	public static void GizmoCylinderZ(Vector3 p, float len, float width, int res = 16)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x1891980", Offset = "0x1891980", VA = "0x1891980")]
	public static void GizmoCone(Vector3 p, int res = 16)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x1891AE0", Offset = "0x1891AE0", VA = "0x1891AE0")]
	public Vector3 GetSourcePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x189143C", Offset = "0x189143C", VA = "0x189143C")]
	public Vector3 GetBezierWorldPositionAtTime(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x18915A8", Offset = "0x18915A8", VA = "0x18915A8")]
	public float GetBezierLength(int approximationSteps)
	{
		return default(float);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x1891B70", Offset = "0x1891B70", VA = "0x1891B70")]
	public void RepositionAtBezierPtA()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x1891BA4", Offset = "0x1891BA4", VA = "0x1891BA4")]
	public void RepositionOriginAt(Vector3 v)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x1891CB4", Offset = "0x1891CB4", VA = "0x1891CB4")]
	public SDFShape()
	{
	}
}
[Token(Token = "0x2000308")]
public class SDFTo3DTexture : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	private enum RenderPassMode
	{
		[Token(Token = "0x4001040")]
		FirstPass,
		[Token(Token = "0x4001041")]
		Add
	}

	[Token(Token = "0x200030A")]
	private enum RenderStatus
	{
		[Token(Token = "0x4001043")]
		Clean,
		[Token(Token = "0x4001044")]
		Dirty,
		[Token(Token = "0x4001045")]
		Rendering
	}

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SDFTo3DTexture Instance;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_autoResUnitsToTexel;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3Int m_volumeResolution;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_autoSizePadding;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader m_renderShader;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderPassMode m_rpMode;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera m_renderRig;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_renderMaterial;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer m_quadRenderer;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F66B0", Offset = "0x8F66B0")]
	public bool m_applyBlur;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F66E8", Offset = "0x8F66E8")]
	public float m_blurAmount;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F6720", Offset = "0x8F6720")]
	public Shader m_blurShader;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_blurMaterial;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[ReadOnly]
	private RenderTexture m_intermediateTex;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	private RenderTexture m_intermediateBlurred;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	private Texture3D m_volumeTex;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F6788", Offset = "0x8F6788")]
	public bool m_showSlicesGizmo;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool m_showResolutionGizmo;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool m_autoRefreshInPlayMode;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_refreshEvery;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool m_resizeTexture;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[ReadOnly]
	public string m_volumeTextureSize;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SDFShape.Category m_showCategory;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F67D0", Offset = "0x8F67D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F67D0", Offset = "0x8F67D0")]
	public int numShapesToSendToGPU;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderStatus m_renderStatus;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool m_doSetupSize;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly List<SDFShape> m_sdfShapeList;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SDFCatList> SDFCategories;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int SDFToTexFeedbackOffset;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int SDFToTexChannelFirstPass;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int SDFToTexAdd;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int SDFToTexChannel;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int SDFToTexPageHeight;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int ResX;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int ResY;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int Rmul;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int SDFVolTexTex;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SDFVolTexInverseMtx;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int SDFVolTexMtx;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int SDFVolTexReadOffset;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float nextRefresh;

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x1891EB0", Offset = "0x1891EB0", VA = "0x1891EB0")]
	public static void ClearStatics(Scene arg0)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x1891FEC", Offset = "0x1891FEC", VA = "0x1891FEC")]
	private static List<SDFCatList> CreateCatLists()
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x18920FC", Offset = "0x18920FC", VA = "0x18920FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x18922CC", Offset = "0x18922CC", VA = "0x18922CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x1892320", Offset = "0x1892320", VA = "0x1892320")]
	private void Update()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x18924F0", Offset = "0x18924F0", VA = "0x18924F0")]
	public static void Render()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x18922D0", Offset = "0x18922D0", VA = "0x18922D0")]
	public void InitRendering()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x1892E2C", Offset = "0x1892E2C", VA = "0x1892E2C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x18925CC", Offset = "0x18925CC", VA = "0x18925CC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904B1C", Offset = "0x904B1C")]
	public void AutoSize()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x1892880", Offset = "0x1892880", VA = "0x1892880")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904B34", Offset = "0x904B34")]
	public void AutoResolution()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x1892FD4", Offset = "0x1892FD4", VA = "0x1892FD4")]
	private float GetTexSizeInMB()
	{
		return default(float);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x189304C", Offset = "0x189304C", VA = "0x189304C")]
	private void InitRenderOnGPU()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x1893790", Offset = "0x1893790", VA = "0x1893790")]
	private int GetSDFCategoryIndex(SDFShape.Category cat)
	{
		return default(int);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x1892BAC", Offset = "0x1892BAC", VA = "0x1892BAC")]
	public void InitShapes()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x1892B0C", Offset = "0x1892B0C", VA = "0x1892B0C")]
	private bool TextureSizeIsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x18923BC", Offset = "0x18923BC", VA = "0x18923BC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904B4C", Offset = "0x904B4C")]
	public void RenderOnGPU()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x1893A74", Offset = "0x1893A74", VA = "0x1893A74")]
	private void RenderShapes(SDFCatList sdfCat)
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x1894108", Offset = "0x1894108", VA = "0x1894108")]
	public bool RenderSomeOnGPU(SDFCatList catList)
	{
		return default(bool);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x1893BE8", Offset = "0x1893BE8", VA = "0x1893BE8")]
	private void ApplyBlurGPU()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x189379C", Offset = "0x189379C", VA = "0x189379C")]
	public void SetShaderGlobals()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x18943E4", Offset = "0x18943E4", VA = "0x18943E4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x1894508", Offset = "0x1894508", VA = "0x1894508")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x18947EC", Offset = "0x18947EC", VA = "0x18947EC")]
	public SDFTo3DTexture()
	{
	}
}
[Token(Token = "0x200030B")]
public class SkyboxToPassthrough : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED334", Offset = "0x8ED334")]
	private sealed class <PassthroughTutorial>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyboxToPassthrough <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x158B504", Offset = "0x158B504", VA = "0x158B504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x158B54C", Offset = "0x158B54C", VA = "0x158B54C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x158B044", Offset = "0x158B044", VA = "0x158B044")]
		[DebuggerHidden]
		public <PassthroughTutorial>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x158B070", Offset = "0x158B070", VA = "0x158B070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x158B074", Offset = "0x158B074", VA = "0x158B074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x158B50C", Offset = "0x158B50C", VA = "0x158B50C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED344", Offset = "0x8ED344")]
	private sealed class <FadeTo>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyboxToPassthrough <>4__this;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targ;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <step>5__2;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x158AFF4", Offset = "0x158AFF4", VA = "0x158AFF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x158B03C", Offset = "0x158B03C", VA = "0x158B03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x158AD64", Offset = "0x158AD64", VA = "0x158AD64")]
		[DebuggerHidden]
		public <FadeTo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x158AD90", Offset = "0x158AD90", VA = "0x158AD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x158AD94", Offset = "0x158AD94", VA = "0x158AD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x158AFFC", Offset = "0x158AFFC", VA = "0x158AFFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F6828", Offset = "0x8F6828")]
	public float m_progress;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_fadingMat;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m_originalMaterial;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_skyboxMat;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_targetProgress;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[OVRLayer]
	public int m_skyboxLayer;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer m_skyBoxRenderer;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_skyboxMatIdx;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock m_skyboxPropBlock;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_skyProgField;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer m_starsRenderer;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_starsMatIdx;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock m_starsPropBlock;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_starsColField;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_canDoIntro;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Scenario m_tutorialSceanrioForIntroMessage;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OVRPassthroughLayer m_passthroughLayer;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color m_introHighlightColour;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DialogueBox m_dialogueBox;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float m_transitionDuration;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x15BF168", Offset = "0x15BF168", VA = "0x15BF168")]
	public bool IsPassthroughOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x15BF17C", Offset = "0x15BF17C", VA = "0x15BF17C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x15BF228", Offset = "0x15BF228", VA = "0x15BF228")]
	private void Start()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x15BF22C", Offset = "0x15BF22C", VA = "0x15BF22C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x15BF184", Offset = "0x15BF184", VA = "0x15BF184")]
	private void EnableSDKPassthroughLayer(bool b)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x15BF234", Offset = "0x15BF234", VA = "0x15BF234")]
	public void SetSkybox(SpacefolkSkybox ssb)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x15BF70C", Offset = "0x15BF70C", VA = "0x15BF70C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904B64", Offset = "0x904B64")]
	private IEnumerator PassthroughTutorial()
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x15BF8A0", Offset = "0x15BF8A0", VA = "0x15BF8A0")]
	private void PassthroughIntro_Enabled()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x15BFC0C", Offset = "0x15BFC0C", VA = "0x15BFC0C")]
	private void PassthroughIntro_Disabled()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x15BFE5C", Offset = "0x15BFE5C", VA = "0x15BFE5C")]
	private void PassthroughIntro_Finished()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x15BFE8C", Offset = "0x15BFE8C", VA = "0x15BFE8C")]
	private void StartToggler()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x15BFE94", Offset = "0x15BFE94", VA = "0x15BFE94")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x15BFE98", Offset = "0x15BFE98", VA = "0x15BFE98")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x904BC4", Offset = "0x904BC4")]
	public bool Toggle()
	{
		return default(bool);
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x15BFB60", Offset = "0x15BFB60", VA = "0x15BFB60")]
	public void Toggle(bool b)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x15BF610", Offset = "0x15BF610", VA = "0x15BF610")]
	private void SetCameraSkyboxLayerEnabled(bool on)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x15BFEDC", Offset = "0x15BFEDC", VA = "0x15BFEDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904BDC", Offset = "0x904BDC")]
	private IEnumerator FadeTo(float targ)
	{
		return null;
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x15BF784", Offset = "0x15BF784", VA = "0x15BF784")]
	private void Apply()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x15BFF64", Offset = "0x15BFF64", VA = "0x15BFF64")]
	private void OnApplicationPause(bool p)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x15BFFB4", Offset = "0x15BFFB4", VA = "0x15BFFB4")]
	public SkyboxToPassthrough()
	{
	}
}
[Token(Token = "0x200030E")]
public class FG_GameObjectGUIDs : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool _dirty;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string[] guids;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public UnityEngine.Object[] objects;

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x174C150", Offset = "0x174C150", VA = "0x174C150")]
	private FG_GameObjectGUIDs()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x174C228", Offset = "0x174C228", VA = "0x174C228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x174C290", Offset = "0x174C290", VA = "0x174C290")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x174C2F8", Offset = "0x174C2F8", VA = "0x174C2F8")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x200030F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED354", Offset = "0x8ED354")]
public class CubeKiller : MonoBehaviour
{
	[Token(Token = "0x6001099")]
	[Address(RVA = "0x16625B8", Offset = "0x16625B8", VA = "0x16625B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x1662638", Offset = "0x1662638", VA = "0x1662638")]
	public CubeKiller()
	{
	}
}
[Token(Token = "0x2000310")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED38C", Offset = "0x8ED38C")]
public class CubeSpawner : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED3C4", Offset = "0x8ED3C4")]
	private sealed class <SpawnCube>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeSpawner <>4__this;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x15E8A24", Offset = "0x15E8A24", VA = "0x15E8A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x15E8A6C", Offset = "0x15E8A6C", VA = "0x15E8A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x15E8874", Offset = "0x15E8874", VA = "0x15E8874")]
		[DebuggerHidden]
		public <SpawnCube>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x15E88A0", Offset = "0x15E88A0", VA = "0x15E88A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x15E88A4", Offset = "0x15E88A4", VA = "0x15E88A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x15E8A2C", Offset = "0x15E8A2C", VA = "0x15E8A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CubePrefab;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Interval;

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x1662640", Offset = "0x1662640", VA = "0x1662640")]
	private void Start()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x16626D4", Offset = "0x16626D4", VA = "0x16626D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904CDC", Offset = "0x904CDC")]
	private IEnumerator SpawnCube()
	{
		return null;
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x166274C", Offset = "0x166274C", VA = "0x166274C")]
	public CubeSpawner()
	{
	}
}
[Token(Token = "0x2000312")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED3D4", Offset = "0x8ED3D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ED3D4", Offset = "0x8ED3D4")]
public class Record : MonoBehaviour
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Recorder m_Recorder;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Progress;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_LastFile;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsSaving;

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x1934684", Offset = "0x1934684", VA = "0x1934684")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x19348C8", Offset = "0x19348C8", VA = "0x19348C8")]
	private void OnProcessingDone()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x19348D4", Offset = "0x19348D4", VA = "0x19348D4")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x19348E8", Offset = "0x19348E8", VA = "0x19348E8")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x1934924", Offset = "0x1934924", VA = "0x1934924")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x1934928", Offset = "0x1934928", VA = "0x1934928")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x193499C", Offset = "0x193499C", VA = "0x193499C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x1934EB4", Offset = "0x1934EB4", VA = "0x1934EB4")]
	public Record()
	{
	}
}
[Token(Token = "0x2000313")]
public enum Chirality
{
	[Token(Token = "0x4001070")]
	Undefined = -1,
	[Token(Token = "0x4001071")]
	Right,
	[Token(Token = "0x4001072")]
	Left
}
[Token(Token = "0x2000314")]
public class GizmoUtils
{
	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x193A7F4", Offset = "0x193A7F4", VA = "0x193A7F4")]
	public static void ToggleGizmos(bool gizmosOn)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x193A7F8", Offset = "0x193A7F8", VA = "0x193A7F8")]
	public GizmoUtils()
	{
	}
}
[Token(Token = "0x2000315")]
public enum OffMeshLinkMoveMethod
{
	[Token(Token = "0x4001074")]
	Teleport,
	[Token(Token = "0x4001075")]
	NormalSpeed,
	[Token(Token = "0x4001076")]
	Parabola,
	[Token(Token = "0x4001077")]
	Curve
}
[Token(Token = "0x2000316")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ED458", Offset = "0x8ED458")]
public class AgentLinkMover : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED4B8", Offset = "0x8ED4B8")]
	private sealed class <DoMoveWithCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator coroutine;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x175BA3C", Offset = "0x175BA3C", VA = "0x175BA3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x175BA84", Offset = "0x175BA84", VA = "0x175BA84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x175B938", Offset = "0x175B938", VA = "0x175B938")]
		[DebuggerHidden]
		public <DoMoveWithCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x175B964", Offset = "0x175B964", VA = "0x175B964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x175B968", Offset = "0x175B968", VA = "0x175B968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x175BA44", Offset = "0x175BA44", VA = "0x175BA44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED4C8", Offset = "0x8ED4C8")]
	private sealed class <NormalSpeed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endPos>5__2;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x175BC80", Offset = "0x175BC80", VA = "0x175BC80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x175BCC8", Offset = "0x175BCC8", VA = "0x175BCC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x175BA8C", Offset = "0x175BA8C", VA = "0x175BA8C")]
		[DebuggerHidden]
		public <NormalSpeed>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x175BAB8", Offset = "0x175BAB8", VA = "0x175BAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x175BABC", Offset = "0x175BABC", VA = "0x175BABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x175BC88", Offset = "0x175BC88", VA = "0x175BC88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED4D8", Offset = "0x8ED4D8")]
	private sealed class <Parabola>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float height;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170001E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x175BED4", Offset = "0x175BED4", VA = "0x175BED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x175BF1C", Offset = "0x175BF1C", VA = "0x175BF1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x175BCD0", Offset = "0x175BCD0", VA = "0x175BCD0")]
		[DebuggerHidden]
		public <Parabola>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x175BCFC", Offset = "0x175BCFC", VA = "0x175BCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x175BD00", Offset = "0x175BD00", VA = "0x175BD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x175BEDC", Offset = "0x175BEDC", VA = "0x175BEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED4E8", Offset = "0x8ED4E8")]
	private sealed class <Curve>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170001E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x175B8E8", Offset = "0x175B8E8", VA = "0x175B8E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x175B930", Offset = "0x175B930", VA = "0x175B930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x175B6E8", Offset = "0x175B6E8", VA = "0x175B6E8")]
		[DebuggerHidden]
		public <Curve>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x175B714", Offset = "0x175B714", VA = "0x175B714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x175B718", Offset = "0x175B718", VA = "0x175B718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x175B8F0", Offset = "0x175B8F0", VA = "0x175B8F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OffMeshLinkMoveMethod m_Method;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_Curve;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine moveCoroutine;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavLinkCustomMovement customMove;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshAgent agent;

	[Token(Token = "0x170001E2")]
	public bool IsMoving
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1A032A8", Offset = "0x1A032A8", VA = "0x1A032A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x1A041C0", Offset = "0x1A041C0", VA = "0x1A041C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x1A04234", Offset = "0x1A04234", VA = "0x1A04234")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1A032B8", Offset = "0x1A032B8", VA = "0x1A032B8")]
	public void CancelMovement()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x1A045AC", Offset = "0x1A045AC", VA = "0x1A045AC")]
	private void FinishMove()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1A043D8", Offset = "0x1A043D8", VA = "0x1A043D8")]
	private void MoveWithCoroutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x1A045F4", Offset = "0x1A045F4", VA = "0x1A045F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904D8C", Offset = "0x904D8C")]
	private IEnumerator DoMoveWithCoroutine(IEnumerator coroutine)
	{
		return null;
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1A04404", Offset = "0x1A04404", VA = "0x1A04404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904DEC", Offset = "0x904DEC")]
	private IEnumerator NormalSpeed(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1A0447C", Offset = "0x1A0447C", VA = "0x1A0447C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904E4C", Offset = "0x904E4C")]
	private IEnumerator Parabola(NavMeshAgent agent, float height, float duration)
	{
		return null;
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x1A04508", Offset = "0x1A04508", VA = "0x1A04508")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x904EAC", Offset = "0x904EAC")]
	private IEnumerator Curve(NavMeshAgent agent, float duration)
	{
		return null;
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1A04688", Offset = "0x1A04688", VA = "0x1A04688", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1A046F4", Offset = "0x1A046F4", VA = "0x1A046F4", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1A046F8", Offset = "0x1A046F8", VA = "0x1A046F8", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1A046FC", Offset = "0x1A046FC", VA = "0x1A046FC")]
	public AgentLinkMover()
	{
	}
}
[Token(Token = "0x200031B")]
public class DestroyOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_Tag;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x173BEE4", Offset = "0x173BEE4", VA = "0x173BEE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x173BFA8", Offset = "0x173BFA8", VA = "0x173BFA8")]
	public DestroyOnTrigger()
	{
	}
}
[Token(Token = "0x200031C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED4F8", Offset = "0x8ED4F8")]
public class DungeonManager : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_Width;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_Height;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Spacing;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_Tiles;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1741AF4", Offset = "0x1741AF4", VA = "0x1741AF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1741E38", Offset = "0x1741E38", VA = "0x1741E38")]
	public DungeonManager()
	{
	}
}
[Token(Token = "0x200031D")]
public class EnableIffSleeping : MonoBehaviour
{
	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour m_Behaviour;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1742708", Offset = "0x1742708", VA = "0x1742708")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1742764", Offset = "0x1742764", VA = "0x1742764")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x1742898", Offset = "0x1742898", VA = "0x1742898")]
	public EnableIffSleeping()
	{
	}
}
[Token(Token = "0x200031E")]
public class FreeCam : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum RotationAxes
	{
		[Token(Token = "0x40010A7")]
		MouseXAndY,
		[Token(Token = "0x40010A8")]
		MouseX,
		[Token(Token = "0x40010A9")]
		MouseY
	}

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lockHeight;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationY;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x18AFA9C", Offset = "0x18AFA9C", VA = "0x18AFA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x18AFD3C", Offset = "0x18AFD3C", VA = "0x18AFD3C")]
	public FreeCam()
	{
	}
}
[Token(Token = "0x2000320")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED50C", Offset = "0x8ED50C")]
public class LocalNavMeshBuilder : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_Size;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_Centre;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshData m_NavMesh;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.AsyncOperation m_Operation;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshDataInstance m_Instance;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<NavMeshBuildSource> m_Sources;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_dirty;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Action> m_callbacks;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_processing;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Action> m_callbackCache;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool generatedOnce;

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x1B20010", Offset = "0x1B20010", VA = "0x1B20010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x1B200C8", Offset = "0x1B200C8", VA = "0x1B200C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x1B200D4", Offset = "0x1B200D4", VA = "0x1B200D4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x90504C", Offset = "0x90504C")]
	public void UpdateNavMesh(params Action[] callbacks)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x1B20188", Offset = "0x1B20188", VA = "0x1B20188")]
	private static Vector3 Quantize(Vector3 v, Vector3 quant)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x1B20344", Offset = "0x1B20344", VA = "0x1B20344")]
	private static Vector3 QuantizeMax(Vector3 v, Vector3 quant)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x1B2036C", Offset = "0x1B2036C", VA = "0x1B2036C")]
	private Bounds QuantizedBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x1B2048C", Offset = "0x1B2048C", VA = "0x1B2048C")]
	private void SetBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x1B204D4", Offset = "0x1B204D4", VA = "0x1B204D4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x1B206A0", Offset = "0x1B206A0", VA = "0x1B206A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x1B208B8", Offset = "0x1B208B8", VA = "0x1B208B8")]
	private void NavMeshGenerationCompleted(UnityEngine.AsyncOperation obj)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x1B20A34", Offset = "0x1B20A34", VA = "0x1B20A34")]
	public LocalNavMeshBuilder()
	{
	}
}
[Token(Token = "0x2000321")]
public class MeshTool : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	public enum ExtrudeMethod
	{
		[Token(Token = "0x40010BB")]
		Vertical,
		[Token(Token = "0x40010BC")]
		MeshNormal
	}

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshFilter> m_Filters;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Radius;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Power;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExtrudeMethod m_Method;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit m_HitInfo;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x1AB93AC", Offset = "0x1AB93AC", VA = "0x1AB93AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x1AB93D0", Offset = "0x1AB93D0", VA = "0x1AB93D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x1AB9698", Offset = "0x1AB9698", VA = "0x1AB9698")]
	private void ModifyMesh(Vector3 displacement, Vector3 center)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x1AB9AB0", Offset = "0x1AB9AB0", VA = "0x1AB9AB0")]
	private static float Gaussian(Vector3 pos, Vector3 mean, float dev)
	{
		return default(float);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x1AB9B24", Offset = "0x1AB9B24", VA = "0x1AB9B24")]
	public MeshTool()
	{
	}
}
[Token(Token = "0x2000323")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED520", Offset = "0x8ED520")]
[ExecuteInEditMode]
public class NavMeshPrefabInstance : MonoBehaviour
{
	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NavMeshData m_NavMesh;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_FollowTransform;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private NavMeshDataInstance m_Instance;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<NavMeshPrefabInstance> s_TrackedInstances;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_Position;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion m_Rotation;

	[Token(Token = "0x170001EB")]
	public NavMeshData navMeshData
	{
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x19B5170", Offset = "0x19B5170", VA = "0x19B5170")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x19B5178", Offset = "0x19B5178", VA = "0x19B5178")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public bool followTransform
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x19B5180", Offset = "0x19B5180", VA = "0x19B5180")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x19B5188", Offset = "0x19B5188", VA = "0x19B5188")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public static List<NavMeshPrefabInstance> trackedInstances
	{
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x19B51BC", Offset = "0x19B51BC", VA = "0x19B51BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x19B5220", Offset = "0x19B5220", VA = "0x19B5220")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x19B552C", Offset = "0x19B552C", VA = "0x19B552C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x19B56CC", Offset = "0x19B56CC", VA = "0x19B56CC")]
	public void UpdateInstance()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x19B5268", Offset = "0x19B5268", VA = "0x19B5268")]
	private void AddInstance()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x19B53A8", Offset = "0x19B53A8", VA = "0x19B53A8")]
	private void AddTracking()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x19B5558", Offset = "0x19B5558", VA = "0x19B5558")]
	private void RemoveTracking()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x19B5190", Offset = "0x19B5190", VA = "0x19B5190")]
	private void SetFollowTransform(bool value)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x19B56F8", Offset = "0x19B56F8", VA = "0x19B56F8")]
	private bool HasMoved()
	{
		return default(bool);
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x19B57C4", Offset = "0x19B57C4", VA = "0x19B57C4")]
	private static void UpdateTrackedInstances()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x19B5928", Offset = "0x19B5928", VA = "0x19B5928")]
	public NavMeshPrefabInstance()
	{
	}
}
[Token(Token = "0x2000324")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED55C", Offset = "0x8ED55C")]
public class NavMeshSourceTag : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	private enum KillMode
	{
		[Token(Token = "0x40010CC")]
		Off,
		[Token(Token = "0x40010CD")]
		Func,
		[Token(Token = "0x40010CE")]
		Inline
	}

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_staticsInitialised;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, NavMeshSourceTag> ms_tags;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static KillMode ms_killMode;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsBlocker;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IsCityPiece;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasSource;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private NavMeshBuildSource m_buildSource;

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x19B59BC", Offset = "0x19B59BC", VA = "0x19B59BC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x905064", Offset = "0x905064")]
	[AOTStubRequired]
	public static void ResetStatics()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x19B5A40", Offset = "0x19B5A40", VA = "0x19B5A40")]
	private static void SceneUnloaded(Scene unloadingScene)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x19B5B78", Offset = "0x19B5B78", VA = "0x19B5B78")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9050A0", Offset = "0x9050A0")]
	public static void NextNavMeshKillMode()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x19B5CEC", Offset = "0x19B5CEC", VA = "0x19B5CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x19B5E4C", Offset = "0x19B5E4C", VA = "0x19B5E4C")]
	private bool DestroyIfUnsafe()
	{
		return default(bool);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x19B5FF8", Offset = "0x19B5FF8", VA = "0x19B5FF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x19B6098", Offset = "0x19B6098", VA = "0x19B6098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x19B6190", Offset = "0x19B6190", VA = "0x19B6190")]
	private static Matrix4x4 GetBlockerTransform(MeshFilter mf, NavMeshBuildSettings buildSettings)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x19B6570", Offset = "0x19B6570", VA = "0x19B6570")]
	public static void Collect(ref List<NavMeshBuildSource> sources, LocalNavMeshBuilder builder, NavMeshBuildSettings buildSettings, out Bounds bounds)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x19B6CF0", Offset = "0x19B6CF0", VA = "0x19B6CF0")]
	private static void CreateBlockerMesh(LocalNavMeshBuilder builder, NavMeshSourceTag tag, Matrix4x4 mat, Mesh m2, Vector3 scale)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x19B6F5C", Offset = "0x19B6F5C", VA = "0x19B6F5C")]
	public NavMeshSourceTag()
	{
	}
}
[Token(Token = "0x2000326")]
public class Oscillator : MonoBehaviour
{
	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Amplitude;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_Period;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_Direction;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_StartPosition;

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x15A069C", Offset = "0x15A069C", VA = "0x15A069C")]
	private void Start()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x15A06D8", Offset = "0x15A06D8", VA = "0x15A06D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x15A0780", Offset = "0x15A0780", VA = "0x15A0780")]
	public Oscillator()
	{
	}
}
[Token(Token = "0x2000327")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED570", Offset = "0x8ED570")]
public class RandomInstancing : MonoBehaviour
{
	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Prefab;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_PoolSize;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_InstancesPerTile;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_RandomPosition;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_RandomOrientation;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Height;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_BaseHash;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_Size;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> m_Instances;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_Used;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_LocX;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_LocZ;

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x19313A0", Offset = "0x19313A0", VA = "0x19313A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x1931510", Offset = "0x1931510", VA = "0x1931510")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x193171C", Offset = "0x193171C", VA = "0x193171C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x1931870", Offset = "0x1931870", VA = "0x1931870")]
	private void Update()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x193151C", Offset = "0x193151C", VA = "0x193151C")]
	private void UpdateInstances()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1931874", Offset = "0x1931874", VA = "0x1931874")]
	private int UpdateTileInstances(int i, int j)
	{
		return default(int);
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1931C1C", Offset = "0x1931C1C", VA = "0x1931C1C")]
	private static int Hash2(int i, int j)
	{
		return default(int);
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1931C3C", Offset = "0x1931C3C", VA = "0x1931C3C")]
	private static float Random(ref int seed)
	{
		return default(float);
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x1931CB0", Offset = "0x1931CB0", VA = "0x1931CB0")]
	public RandomInstancing()
	{
	}
}
[Token(Token = "0x2000328")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ED584", Offset = "0x8ED584")]
public class RandomWalk : MonoBehaviour
{
	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Range;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NavMeshAgent m_Agent;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_initialTarget;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1931D58", Offset = "0x1931D58", VA = "0x1931D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x1931DB4", Offset = "0x1931DB4", VA = "0x1931DB4")]
	public bool IsAtDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x1931E24", Offset = "0x1931E24", VA = "0x1931E24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x1931E90", Offset = "0x1931E90", VA = "0x1931E90")]
	public RandomWalk()
	{
	}
}
[Token(Token = "0x2000329")]
public class SpawnPrefabOnKeyDown : MonoBehaviour
{
	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Prefab;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode m_KeyCode;

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x1871060", Offset = "0x1871060", VA = "0x1871060")]
	private void Update()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x18711D0", Offset = "0x18711D0", VA = "0x18711D0")]
	public SpawnPrefabOnKeyDown()
	{
	}
}
[Token(Token = "0x200032A")]
public class FileDragAndDrop : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED5E4", Offset = "0x8ED5E4")]
	private sealed class <>c
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, string, string> <>9__3_0;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x15F2D18", Offset = "0x15F2D18", VA = "0x15F2D18")]
		public <>c()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x15F2D20", Offset = "0x15F2D20", VA = "0x15F2D20")]
		internal string <OnFiles>b__3_0(string a, string b)
		{
			return null;
		}
	}

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> log;

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x17514A4", Offset = "0x17514A4", VA = "0x17514A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x1751528", Offset = "0x1751528", VA = "0x1751528")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x1751530", Offset = "0x1751530", VA = "0x1751530")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x17518F4", Offset = "0x17518F4", VA = "0x17518F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x1751B78", Offset = "0x1751B78", VA = "0x1751B78")]
	public FileDragAndDrop()
	{
	}
}
[Token(Token = "0x200032C")]
public class ImageExample : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	private class DropInfo
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string file;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pos;

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x15FC4FC", Offset = "0x15FC4FC", VA = "0x15FC4FC")]
		public DropInfo()
		{
		}
	}

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D[] textures;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DropInfo dropInfo;

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x16C8FFC", Offset = "0x16C8FFC", VA = "0x16C8FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x16C9080", Offset = "0x16C9080", VA = "0x16C9080")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x16C9088", Offset = "0x16C9088", VA = "0x16C9088")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x16C9340", Offset = "0x16C9340", VA = "0x16C9340")]
	private void LoadImage(int aIndex, DropInfo aInfo)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x16C9534", Offset = "0x16C9534", VA = "0x16C9534")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x16C9B08", Offset = "0x16C9B08", VA = "0x16C9B08")]
	public ImageExample()
	{
	}
}
[Token(Token = "0x200032E")]
public enum AkAudioAPI
{
	[Token(Token = "0x40010EC")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x40010ED")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x40010EE")]
	AkAudioAPI_Default
}
[Token(Token = "0x200032F")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001EE")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1A1236C", Offset = "0x1A1236C", VA = "0x1A1236C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1A10B34", Offset = "0x1A10B34", VA = "0x1A10B34")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1A123D4", Offset = "0x1A123D4", VA = "0x1A123D4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1A10BAC", Offset = "0x1A10BAC", VA = "0x1A10BAC")]
		set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1A1243C", Offset = "0x1A1243C", VA = "0x1A1243C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1A10C24", Offset = "0x1A10C24", VA = "0x1A10C24")]
		set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1A124A4", Offset = "0x1A124A4", VA = "0x1A124A4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1A10C9C", Offset = "0x1A10C9C", VA = "0x1A10C9C")]
		set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1A1250C", Offset = "0x1A1250C", VA = "0x1A1250C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1A10D14", Offset = "0x1A10D14", VA = "0x1A10D14")]
		set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public string szAppNetworkName
	{
		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1A12574", Offset = "0x1A12574", VA = "0x1A12574")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1A10D8C", Offset = "0x1A10D8C", VA = "0x1A10D8C")]
		set
		{
		}
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x1A120C0", Offset = "0x1A120C0", VA = "0x1A120C0")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x1A12100", Offset = "0x1A12100", VA = "0x1A12100")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x1A1214C", Offset = "0x1A1214C", VA = "0x1A1214C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x1A12180", Offset = "0x1A12180", VA = "0x1A12180", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x1A121F0", Offset = "0x1A121F0", VA = "0x1A121F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x1A0C230", Offset = "0x1A0C230", VA = "0x1A0C230")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x2000330")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40010F2")]
	AkNoAlloc = 0,
	[Token(Token = "0x40010F3")]
	AkMalloc = 1,
	[Token(Token = "0x40010F4")]
	AkAllocMask = 1,
	[Token(Token = "0x40010F5")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40010F6")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x2000331")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F4")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x153C978", Offset = "0x153C978", VA = "0x153C978")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x153C800", Offset = "0x153C800", VA = "0x153C800")]
		set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6001145")]
		[Address(RVA = "0x153CC24", Offset = "0x153CC24", VA = "0x153CC24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001144")]
		[Address(RVA = "0x153CAF8", Offset = "0x153CAF8", VA = "0x153CAF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6001147")]
		[Address(RVA = "0x153CE90", Offset = "0x153CE90", VA = "0x153CE90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001146")]
		[Address(RVA = "0x153CD64", Offset = "0x153CD64", VA = "0x153CD64")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6001149")]
		[Address(RVA = "0x153D0FC", Offset = "0x153D0FC", VA = "0x153D0FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001148")]
		[Address(RVA = "0x153CFD0", Offset = "0x153CFD0", VA = "0x153CFD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x600114B")]
		[Address(RVA = "0x153D340", Offset = "0x153D340", VA = "0x153D340")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600114A")]
		[Address(RVA = "0x153D23C", Offset = "0x153D23C", VA = "0x153D23C")]
		set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x600114D")]
		[Address(RVA = "0x153D528", Offset = "0x153D528", VA = "0x153D528")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600114C")]
		[Address(RVA = "0x153D424", Offset = "0x153D424", VA = "0x153D424")]
		set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x600114F")]
		[Address(RVA = "0x153D710", Offset = "0x153D710", VA = "0x153D710")]
		get
		{
			return default(AkAudioAPI);
		}
		[Token(Token = "0x600114E")]
		[Address(RVA = "0x153D60C", Offset = "0x153D60C", VA = "0x153D60C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001151")]
		[Address(RVA = "0x153D8F8", Offset = "0x153D8F8", VA = "0x153D8F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001150")]
		[Address(RVA = "0x153D7F4", Offset = "0x153D7F4", VA = "0x153D7F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x153DAE0", Offset = "0x153DAE0", VA = "0x153DAE0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x153D9DC", Offset = "0x153D9DC", VA = "0x153D9DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x153DCC8", Offset = "0x153DCC8", VA = "0x153DCC8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x153DBC4", Offset = "0x153DBC4", VA = "0x153DBC4")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6001157")]
		[Address(RVA = "0x153DEB0", Offset = "0x153DEB0", VA = "0x153DEB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001156")]
		[Address(RVA = "0x153DDAC", Offset = "0x153DDAC", VA = "0x153DDAC")]
		set
		{
		}
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x153C4D8", Offset = "0x153C4D8", VA = "0x153C4D8")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x153C518", Offset = "0x153C518", VA = "0x153C518")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x153C564", Offset = "0x153C564", VA = "0x153C564", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x153C598", Offset = "0x153C598", VA = "0x153C598", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x153C608", Offset = "0x153C608", VA = "0x153C608", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x153DF9C", Offset = "0x153DF9C", VA = "0x153DF9C")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x2000332")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6001159")]
	[Address(RVA = "0x1568E88", Offset = "0x1568E88", VA = "0x1568E88")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600115A")]
	[Address(RVA = "0x154DBB8", Offset = "0x154DBB8", VA = "0x154DBB8")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x600115B")]
	[Address(RVA = "0x1568E8C", Offset = "0x1568E8C", VA = "0x1568E8C")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1568F1C", Offset = "0x1568F1C", VA = "0x1568F1C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600115D")]
	[Address(RVA = "0x1568F9C", Offset = "0x1568F9C", VA = "0x1568F9C")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600115E")]
	[Address(RVA = "0x156902C", Offset = "0x156902C", VA = "0x156902C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600115F")]
	[Address(RVA = "0x15690AC", Offset = "0x15690AC", VA = "0x15690AC")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6001160")]
	[Address(RVA = "0x1569120", Offset = "0x1569120", VA = "0x1569120")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001161")]
	[Address(RVA = "0x15691A0", Offset = "0x15691A0", VA = "0x15691A0")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001162")]
	[Address(RVA = "0x1569220", Offset = "0x1569220", VA = "0x1569220")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001163")]
	[Address(RVA = "0x15692B0", Offset = "0x15692B0", VA = "0x15692B0")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001164")]
	[Address(RVA = "0x1569330", Offset = "0x1569330", VA = "0x1569330")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001165")]
	[Address(RVA = "0x15693C0", Offset = "0x15693C0", VA = "0x15693C0")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001166")]
	[Address(RVA = "0x1569440", Offset = "0x1569440", VA = "0x1569440")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001167")]
	[Address(RVA = "0x15694D0", Offset = "0x15694D0", VA = "0x15694D0")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001168")]
	[Address(RVA = "0x1569550", Offset = "0x1569550", VA = "0x1569550")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6001169")]
	[Address(RVA = "0x15695C4", Offset = "0x15695C4", VA = "0x15695C4")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116A")]
	[Address(RVA = "0x1569644", Offset = "0x1569644", VA = "0x1569644")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116B")]
	[Address(RVA = "0x15696C4", Offset = "0x15696C4", VA = "0x15696C4")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116C")]
	[Address(RVA = "0x1569744", Offset = "0x1569744", VA = "0x1569744")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116D")]
	[Address(RVA = "0x15697C4", Offset = "0x15697C4", VA = "0x15697C4")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600116E")]
	[Address(RVA = "0x156986C", Offset = "0x156986C", VA = "0x156986C")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x600116F")]
	[Address(RVA = "0x1569954", Offset = "0x1569954", VA = "0x1569954")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001170")]
	[Address(RVA = "0x15699E4", Offset = "0x15699E4", VA = "0x15699E4")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001171")]
	[Address(RVA = "0x1569A8C", Offset = "0x1569A8C", VA = "0x1569A8C")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001172")]
	[Address(RVA = "0x1569B24", Offset = "0x1569B24", VA = "0x1569B24")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6001173")]
	[Address(RVA = "0x1569BEC", Offset = "0x1569BEC", VA = "0x1569BEC")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6001174")]
	[Address(RVA = "0x1569C60", Offset = "0x1569C60", VA = "0x1569C60")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001175")]
	[Address(RVA = "0x1539ECC", Offset = "0x1539ECC", VA = "0x1539ECC")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1539FC0", Offset = "0x1539FC0", VA = "0x1539FC0")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001177")]
	[Address(RVA = "0x153A0B4", Offset = "0x153A0B4", VA = "0x153A0B4")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001178")]
	[Address(RVA = "0x153A1A8", Offset = "0x153A1A8", VA = "0x153A1A8")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001179")]
	[Address(RVA = "0x153A28C", Offset = "0x153A28C", VA = "0x153A28C")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600117A")]
	[Address(RVA = "0x153A364", Offset = "0x153A364", VA = "0x153A364")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600117B")]
	[Address(RVA = "0x153A474", Offset = "0x153A474", VA = "0x153A474")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600117C")]
	[Address(RVA = "0x153A580", Offset = "0x153A580", VA = "0x153A580")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x600117D")]
	[Address(RVA = "0x1539DD8", Offset = "0x1539DD8", VA = "0x1539DD8")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600117E")]
	[Address(RVA = "0x1569CE0", Offset = "0x1569CE0", VA = "0x1569CE0")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1569D70", Offset = "0x1569D70", VA = "0x1569D70")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001180")]
	[Address(RVA = "0x1569DF0", Offset = "0x1569DF0", VA = "0x1569DF0")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001181")]
	[Address(RVA = "0x1569E80", Offset = "0x1569E80", VA = "0x1569E80")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001182")]
	[Address(RVA = "0x1569F00", Offset = "0x1569F00", VA = "0x1569F00")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1569F80", Offset = "0x1569F80", VA = "0x1569F80")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001184")]
	[Address(RVA = "0x156A010", Offset = "0x156A010", VA = "0x156A010")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001185")]
	[Address(RVA = "0x156A090", Offset = "0x156A090", VA = "0x156A090")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001186")]
	[Address(RVA = "0x156A120", Offset = "0x156A120", VA = "0x156A120")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001187")]
	[Address(RVA = "0x156A1A0", Offset = "0x156A1A0", VA = "0x156A1A0")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001188")]
	[Address(RVA = "0x156A230", Offset = "0x156A230", VA = "0x156A230")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001189")]
	[Address(RVA = "0x156A2B0", Offset = "0x156A2B0", VA = "0x156A2B0")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x600118A")]
	[Address(RVA = "0x156A358", Offset = "0x156A358", VA = "0x156A358")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600118B")]
	[Address(RVA = "0x156A3F8", Offset = "0x156A3F8", VA = "0x156A3F8")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600118C")]
	[Address(RVA = "0x156A46C", Offset = "0x156A46C", VA = "0x156A46C")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600118D")]
	[Address(RVA = "0x15458D4", Offset = "0x15458D4", VA = "0x15458D4")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600118E")]
	[Address(RVA = "0x15459DC", Offset = "0x15459DC", VA = "0x15459DC")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600118F")]
	[Address(RVA = "0x1545AE0", Offset = "0x1545AE0", VA = "0x1545AE0")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001190")]
	[Address(RVA = "0x1545BD4", Offset = "0x1545BD4", VA = "0x1545BD4")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001191")]
	[Address(RVA = "0x1545CC8", Offset = "0x1545CC8", VA = "0x1545CC8")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001192")]
	[Address(RVA = "0x1545DBC", Offset = "0x1545DBC", VA = "0x1545DBC")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001193")]
	[Address(RVA = "0x15457D8", Offset = "0x15457D8", VA = "0x15457D8")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001194")]
	[Address(RVA = "0x154DC84", Offset = "0x154DC84", VA = "0x154DC84")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6001195")]
	[Address(RVA = "0x154DD50", Offset = "0x154DD50", VA = "0x154DD50")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6001196")]
	[Address(RVA = "0x154DE1C", Offset = "0x154DE1C", VA = "0x154DE1C")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001197")]
	[Address(RVA = "0x154DEE8", Offset = "0x154DEE8", VA = "0x154DEE8")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001198")]
	[Address(RVA = "0x154DFB4", Offset = "0x154DFB4", VA = "0x154DFB4")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6001199")]
	[Address(RVA = "0x154E080", Offset = "0x154E080", VA = "0x154E080")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x600119A")]
	[Address(RVA = "0x154E14C", Offset = "0x154E14C", VA = "0x154E14C")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x600119B")]
	[Address(RVA = "0x156A4EC", Offset = "0x156A4EC", VA = "0x156A4EC")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600119C")]
	[Address(RVA = "0x156A57C", Offset = "0x156A57C", VA = "0x156A57C")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119D")]
	[Address(RVA = "0x156A5FC", Offset = "0x156A5FC", VA = "0x156A5FC")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600119E")]
	[Address(RVA = "0x156A68C", Offset = "0x156A68C", VA = "0x156A68C")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119F")]
	[Address(RVA = "0x156A70C", Offset = "0x156A70C", VA = "0x156A70C")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x156A79C", Offset = "0x156A79C", VA = "0x156A79C")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x156A81C", Offset = "0x156A81C", VA = "0x156A81C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x156A8AC", Offset = "0x156A8AC", VA = "0x156A8AC")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x156A92C", Offset = "0x156A92C", VA = "0x156A92C")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x156A9BC", Offset = "0x156A9BC", VA = "0x156A9BC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x156AA3C", Offset = "0x156AA3C", VA = "0x156AA3C")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x156AACC", Offset = "0x156AACC", VA = "0x156AACC")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x156AB4C", Offset = "0x156AB4C", VA = "0x156AB4C")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x156ABCC", Offset = "0x156ABCC", VA = "0x156ABCC")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x156AC4C", Offset = "0x156AC4C", VA = "0x156AC4C")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x156ACCC", Offset = "0x156ACCC", VA = "0x156ACCC")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x156AD4C", Offset = "0x156AD4C", VA = "0x156AD4C")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x156ADCC", Offset = "0x156ADCC", VA = "0x156ADCC")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x156AE94", Offset = "0x156AE94", VA = "0x156AE94")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x156AF1C", Offset = "0x156AF1C", VA = "0x156AF1C")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x156AF90", Offset = "0x156AF90", VA = "0x156AF90")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x156B010", Offset = "0x156B010", VA = "0x156B010")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x156B0A0", Offset = "0x156B0A0", VA = "0x156B0A0")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x156B120", Offset = "0x156B120", VA = "0x156B120")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x156B1A0", Offset = "0x156B1A0", VA = "0x156B1A0")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x156B220", Offset = "0x156B220", VA = "0x156B220")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x156B2A0", Offset = "0x156B2A0", VA = "0x156B2A0")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x156B338", Offset = "0x156B338", VA = "0x156B338")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x156B3D0", Offset = "0x156B3D0", VA = "0x156B3D0")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x156B444", Offset = "0x156B444", VA = "0x156B444")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x156B4C4", Offset = "0x156B4C4", VA = "0x156B4C4")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x156B538", Offset = "0x156B538", VA = "0x156B538")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x156B5AC", Offset = "0x156B5AC", VA = "0x156B5AC")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x156B62C", Offset = "0x156B62C", VA = "0x156B62C")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x156B6A0", Offset = "0x156B6A0", VA = "0x156B6A0")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x156B714", Offset = "0x156B714", VA = "0x156B714")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x1541260", Offset = "0x1541260", VA = "0x1541260")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x1541388", Offset = "0x1541388", VA = "0x1541388")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x1541164", Offset = "0x1541164", VA = "0x1541164")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x15414E4", Offset = "0x15414E4", VA = "0x15414E4")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1541610", Offset = "0x1541610", VA = "0x1541610")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x154173C", Offset = "0x154173C", VA = "0x154173C")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x1541848", Offset = "0x1541848", VA = "0x1541848")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x154193C", Offset = "0x154193C", VA = "0x154193C")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1541A30", Offset = "0x1541A30", VA = "0x1541A30")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1541B24", Offset = "0x1541B24", VA = "0x1541B24")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1541C18", Offset = "0x1541C18", VA = "0x1541C18")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1541D0C", Offset = "0x1541D0C", VA = "0x1541D0C")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x153EF70", Offset = "0x153EF70", VA = "0x153EF70")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x153EE74", Offset = "0x153EE74", VA = "0x153EE74")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x153F088", Offset = "0x153F088", VA = "0x153F088")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x153F1AC", Offset = "0x153F1AC", VA = "0x153F1AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x153F354", Offset = "0x153F354", VA = "0x153F354")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x153F4AC", Offset = "0x153F4AC", VA = "0x153F4AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x153F5B0", Offset = "0x153F5B0", VA = "0x153F5B0")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x153F708", Offset = "0x153F708", VA = "0x153F708")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x153F80C", Offset = "0x153F80C", VA = "0x153F80C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x153F900", Offset = "0x153F900", VA = "0x153F900")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x153F9E4", Offset = "0x153F9E4", VA = "0x153F9E4")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x153FAC8", Offset = "0x153FAC8", VA = "0x153FAC8")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x153FC08", Offset = "0x153FC08", VA = "0x153FC08")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x153FD2C", Offset = "0x153FD2C", VA = "0x153FD2C")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x153FEAC", Offset = "0x153FEAC", VA = "0x153FEAC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x153FFFC", Offset = "0x153FFFC", VA = "0x153FFFC")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1540174", Offset = "0x1540174", VA = "0x1540174")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x15402A8", Offset = "0x15402A8", VA = "0x15402A8")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x154038C", Offset = "0x154038C", VA = "0x154038C")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x15404A8", Offset = "0x15404A8", VA = "0x15404A8")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x15405D4", Offset = "0x15405D4", VA = "0x15405D4")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x15406C8", Offset = "0x15406C8", VA = "0x15406C8")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x15407FC", Offset = "0x15407FC", VA = "0x15407FC")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x154095C", Offset = "0x154095C", VA = "0x154095C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x1540A60", Offset = "0x1540A60", VA = "0x1540A60")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x1540B5C", Offset = "0x1540B5C", VA = "0x1540B5C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x1540C58", Offset = "0x1540C58", VA = "0x1540C58")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x1540D8C", Offset = "0x1540D8C", VA = "0x1540D8C")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x1540EB8", Offset = "0x1540EB8", VA = "0x1540EB8")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x153E7F8", Offset = "0x153E7F8", VA = "0x153E7F8")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x153E94C", Offset = "0x153E94C", VA = "0x153E94C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x153EA88", Offset = "0x153EA88", VA = "0x153EA88")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x153EBAC", Offset = "0x153EBAC", VA = "0x153EBAC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x153ECB8", Offset = "0x153ECB8", VA = "0x153ECB8")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x153EDB4", Offset = "0x153EDB4", VA = "0x153EDB4")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x153E544", Offset = "0x153E544", VA = "0x153E544")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x154E3B4", Offset = "0x154E3B4", VA = "0x154E3B4")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x154E5E0", Offset = "0x154E5E0", VA = "0x154E5E0")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x154E774", Offset = "0x154E774", VA = "0x154E774")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x154E854", Offset = "0x154E854", VA = "0x154E854")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x154E94C", Offset = "0x154E94C", VA = "0x154E94C")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x154EA54", Offset = "0x154EA54", VA = "0x154EA54")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x154EB44", Offset = "0x154EB44", VA = "0x154EB44")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x154EC3C", Offset = "0x154EC3C", VA = "0x154EC3C")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x154ED44", Offset = "0x154ED44", VA = "0x154ED44")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x154EE34", Offset = "0x154EE34", VA = "0x154EE34")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x154EF2C", Offset = "0x154EF2C", VA = "0x154EF2C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x154F034", Offset = "0x154F034", VA = "0x154F034")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x154F124", Offset = "0x154F124", VA = "0x154F124")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x154F21C", Offset = "0x154F21C", VA = "0x154F21C")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x154F324", Offset = "0x154F324", VA = "0x154F324")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x154F414", Offset = "0x154F414", VA = "0x154F414")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x154F4F4", Offset = "0x154F4F4", VA = "0x154F4F4")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001200")]
	[Address(RVA = "0x154F5EC", Offset = "0x154F5EC", VA = "0x154F5EC")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001201")]
	[Address(RVA = "0x154F73C", Offset = "0x154F73C", VA = "0x154F73C")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001202")]
	[Address(RVA = "0x154F81C", Offset = "0x154F81C", VA = "0x154F81C")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001203")]
	[Address(RVA = "0x153ABA8", Offset = "0x153ABA8", VA = "0x153ABA8")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001204")]
	[Address(RVA = "0x153ACDC", Offset = "0x153ACDC", VA = "0x153ACDC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001205")]
	[Address(RVA = "0x153AE54", Offset = "0x153AE54", VA = "0x153AE54")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001206")]
	[Address(RVA = "0x153AF98", Offset = "0x153AF98", VA = "0x153AF98")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001207")]
	[Address(RVA = "0x153B0CC", Offset = "0x153B0CC", VA = "0x153B0CC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001208")]
	[Address(RVA = "0x153B1D8", Offset = "0x153B1D8", VA = "0x153B1D8")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001209")]
	[Address(RVA = "0x153B2CC", Offset = "0x153B2CC", VA = "0x153B2CC")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120A")]
	[Address(RVA = "0x153B3C0", Offset = "0x153B3C0", VA = "0x153B3C0")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600120B")]
	[Address(RVA = "0x153B4B4", Offset = "0x153B4B4", VA = "0x153B4B4")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120C")]
	[Address(RVA = "0x153B5A8", Offset = "0x153B5A8", VA = "0x153B5A8")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600120D")]
	[Address(RVA = "0x153B69C", Offset = "0x153B69C", VA = "0x153B69C")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120E")]
	[Address(RVA = "0x153B7A4", Offset = "0x153B7A4", VA = "0x153B7A4")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600120F")]
	[Address(RVA = "0x153B8F4", Offset = "0x153B8F4", VA = "0x153B8F4")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001210")]
	[Address(RVA = "0x153AAAC", Offset = "0x153AAAC", VA = "0x153AAAC")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001211")]
	[Address(RVA = "0x156B794", Offset = "0x156B794", VA = "0x156B794")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001212")]
	[Address(RVA = "0x156B824", Offset = "0x156B824", VA = "0x156B824")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001213")]
	[Address(RVA = "0x156B8A4", Offset = "0x156B8A4", VA = "0x156B8A4")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6001214")]
	[Address(RVA = "0x156B918", Offset = "0x156B918", VA = "0x156B918")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001215")]
	[Address(RVA = "0x156B998", Offset = "0x156B998", VA = "0x156B998")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001216")]
	[Address(RVA = "0x156BA28", Offset = "0x156BA28", VA = "0x156BA28")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001217")]
	[Address(RVA = "0x156BAA8", Offset = "0x156BAA8", VA = "0x156BAA8")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001218")]
	[Address(RVA = "0x156BB38", Offset = "0x156BB38", VA = "0x156BB38")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001219")]
	[Address(RVA = "0x156BBB8", Offset = "0x156BBB8", VA = "0x156BBB8")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600121A")]
	[Address(RVA = "0x156BC48", Offset = "0x156BC48", VA = "0x156BC48")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121B")]
	[Address(RVA = "0x156BCC8", Offset = "0x156BCC8", VA = "0x156BCC8")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600121C")]
	[Address(RVA = "0x156BD58", Offset = "0x156BD58", VA = "0x156BD58")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121D")]
	[Address(RVA = "0x156BDD8", Offset = "0x156BDD8", VA = "0x156BDD8")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600121E")]
	[Address(RVA = "0x156BE68", Offset = "0x156BE68", VA = "0x156BE68")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121F")]
	[Address(RVA = "0x156BEE8", Offset = "0x156BEE8", VA = "0x156BEE8")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001220")]
	[Address(RVA = "0x156BF78", Offset = "0x156BF78", VA = "0x156BF78")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001221")]
	[Address(RVA = "0x156C000", Offset = "0x156C000", VA = "0x156C000")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001222")]
	[Address(RVA = "0x156C090", Offset = "0x156C090", VA = "0x156C090")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001223")]
	[Address(RVA = "0x156C110", Offset = "0x156C110", VA = "0x156C110")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001224")]
	[Address(RVA = "0x156C1A0", Offset = "0x156C1A0", VA = "0x156C1A0")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001225")]
	[Address(RVA = "0x156C220", Offset = "0x156C220", VA = "0x156C220")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001226")]
	[Address(RVA = "0x156C2B0", Offset = "0x156C2B0", VA = "0x156C2B0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001227")]
	[Address(RVA = "0x156C330", Offset = "0x156C330", VA = "0x156C330")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001228")]
	[Address(RVA = "0x156C3C0", Offset = "0x156C3C0", VA = "0x156C3C0")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001229")]
	[Address(RVA = "0x156C440", Offset = "0x156C440", VA = "0x156C440")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600122A")]
	[Address(RVA = "0x156C4D0", Offset = "0x156C4D0", VA = "0x156C4D0")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122B")]
	[Address(RVA = "0x156C550", Offset = "0x156C550", VA = "0x156C550")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600122C")]
	[Address(RVA = "0x156C5E0", Offset = "0x156C5E0", VA = "0x156C5E0")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122D")]
	[Address(RVA = "0x156C660", Offset = "0x156C660", VA = "0x156C660")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600122E")]
	[Address(RVA = "0x156C6F0", Offset = "0x156C6F0", VA = "0x156C6F0")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122F")]
	[Address(RVA = "0x156C778", Offset = "0x156C778", VA = "0x156C778")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001230")]
	[Address(RVA = "0x156C808", Offset = "0x156C808", VA = "0x156C808")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001231")]
	[Address(RVA = "0x156C890", Offset = "0x156C890", VA = "0x156C890")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001232")]
	[Address(RVA = "0x156C934", Offset = "0x156C934", VA = "0x156C934")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001233")]
	[Address(RVA = "0x156C9B4", Offset = "0x156C9B4", VA = "0x156C9B4")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001234")]
	[Address(RVA = "0x156CA44", Offset = "0x156CA44", VA = "0x156CA44")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001235")]
	[Address(RVA = "0x156CAC4", Offset = "0x156CAC4", VA = "0x156CAC4")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001236")]
	[Address(RVA = "0x156CB54", Offset = "0x156CB54", VA = "0x156CB54")]
	public static extern float CSharp_AkInitSettings_fDebugOutOfRangeLimit_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001237")]
	[Address(RVA = "0x156CBD4", Offset = "0x156CBD4", VA = "0x156CBD4")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001238")]
	[Address(RVA = "0x156CC64", Offset = "0x156CC64", VA = "0x156CC64")]
	public static extern bool CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001239")]
	[Address(RVA = "0x156CCEC", Offset = "0x156CCEC", VA = "0x156CCEC")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x600123A")]
	[Address(RVA = "0x156CD60", Offset = "0x156CD60", VA = "0x156CD60")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600123B")]
	[Address(RVA = "0x156CDE0", Offset = "0x156CDE0", VA = "0x156CDE0")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600123C")]
	[Address(RVA = "0x156CE70", Offset = "0x156CE70", VA = "0x156CE70")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600123D")]
	[Address(RVA = "0x156CEF0", Offset = "0x156CEF0", VA = "0x156CEF0")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600123E")]
	[Address(RVA = "0x156CF80", Offset = "0x156CF80", VA = "0x156CF80")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600123F")]
	[Address(RVA = "0x156D000", Offset = "0x156D000", VA = "0x156D000")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001240")]
	[Address(RVA = "0x156D090", Offset = "0x156D090", VA = "0x156D090")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001241")]
	[Address(RVA = "0x156D110", Offset = "0x156D110", VA = "0x156D110")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001242")]
	[Address(RVA = "0x156D190", Offset = "0x156D190", VA = "0x156D190")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001243")]
	[Address(RVA = "0x156D204", Offset = "0x156D204", VA = "0x156D204")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001244")]
	[Address(RVA = "0x156D294", Offset = "0x156D294", VA = "0x156D294")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6001245")]
	[Address(RVA = "0x156D308", Offset = "0x156D308", VA = "0x156D308")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001246")]
	[Address(RVA = "0x154F8F4", Offset = "0x154F8F4", VA = "0x154F8F4")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6001247")]
	[Address(RVA = "0x154F9E4", Offset = "0x154F9E4", VA = "0x154F9E4")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001248")]
	[Address(RVA = "0x154FB04", Offset = "0x154FB04", VA = "0x154FB04")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001249")]
	[Address(RVA = "0x154FC1C", Offset = "0x154FC1C", VA = "0x154FC1C")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600124A")]
	[Address(RVA = "0x154FD00", Offset = "0x154FD00", VA = "0x154FD00")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600124B")]
	[Address(RVA = "0x154FDF0", Offset = "0x154FDF0", VA = "0x154FDF0")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x600124C")]
	[Address(RVA = "0x154FEE0", Offset = "0x154FEE0", VA = "0x154FEE0")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600124D")]
	[Address(RVA = "0x154FFD0", Offset = "0x154FFD0", VA = "0x154FFD0")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x600124E")]
	[Address(RVA = "0x15500D8", Offset = "0x15500D8", VA = "0x15500D8")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x600124F")]
	[Address(RVA = "0x1550200", Offset = "0x1550200", VA = "0x1550200")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1550328", Offset = "0x1550328", VA = "0x1550328")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1550458", Offset = "0x1550458", VA = "0x1550458")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1550568", Offset = "0x1550568", VA = "0x1550568")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1550650", Offset = "0x1550650", VA = "0x1550650")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1550730", Offset = "0x1550730", VA = "0x1550730")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1550808", Offset = "0x1550808", VA = "0x1550808")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001256")]
	[Address(RVA = "0x15508EC", Offset = "0x15508EC", VA = "0x15508EC")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_0(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001257")]
	[Address(RVA = "0x1550A0C", Offset = "0x1550A0C", VA = "0x1550A0C")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1550B04", Offset = "0x1550B04", VA = "0x1550B04")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001259")]
	[Address(RVA = "0x1550D60", Offset = "0x1550D60", VA = "0x1550D60")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600125A")]
	[Address(RVA = "0x1550FEC", Offset = "0x1550FEC", VA = "0x1550FEC")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1551238", Offset = "0x1551238", VA = "0x1551238")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600125C")]
	[Address(RVA = "0x15513E4", Offset = "0x15513E4", VA = "0x15513E4")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1551638", Offset = "0x1551638", VA = "0x1551638")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600125E")]
	[Address(RVA = "0x15518DC", Offset = "0x15518DC", VA = "0x15518DC")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600125F")]
	[Address(RVA = "0x1551B40", Offset = "0x1551B40", VA = "0x1551B40")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1551D04", Offset = "0x1551D04", VA = "0x1551D04")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1551E90", Offset = "0x1551E90", VA = "0x1551E90")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1552024", Offset = "0x1552024", VA = "0x1552024")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001263")]
	[Address(RVA = "0x15521A0", Offset = "0x15521A0", VA = "0x15521A0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001264")]
	[Address(RVA = "0x1552304", Offset = "0x1552304", VA = "0x1552304")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001265")]
	[Address(RVA = "0x155240C", Offset = "0x155240C", VA = "0x155240C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001266")]
	[Address(RVA = "0x1552580", Offset = "0x1552580", VA = "0x1552580")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001267")]
	[Address(RVA = "0x155272C", Offset = "0x155272C", VA = "0x155272C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001268")]
	[Address(RVA = "0x15528C0", Offset = "0x15528C0", VA = "0x15528C0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1552A3C", Offset = "0x1552A3C", VA = "0x1552A3C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1552B5C", Offset = "0x1552B5C", VA = "0x1552B5C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1552CDC", Offset = "0x1552CDC", VA = "0x1552CDC")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1552E38", Offset = "0x1552E38", VA = "0x1552E38")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1552F28", Offset = "0x1552F28", VA = "0x1552F28")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1553000", Offset = "0x1553000", VA = "0x1553000")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x600126F")]
	[Address(RVA = "0x15530EC", Offset = "0x15530EC", VA = "0x15530EC")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001270")]
	[Address(RVA = "0x15531FC", Offset = "0x15531FC", VA = "0x15531FC")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001271")]
	[Address(RVA = "0x155330C", Offset = "0x155330C", VA = "0x155330C")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001272")]
	[Address(RVA = "0x15533EC", Offset = "0x15533EC", VA = "0x15533EC")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001273")]
	[Address(RVA = "0x15534FC", Offset = "0x15534FC", VA = "0x15534FC")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001274")]
	[Address(RVA = "0x155360C", Offset = "0x155360C", VA = "0x155360C")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1553790", Offset = "0x1553790", VA = "0x1553790")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001276")]
	[Address(RVA = "0x155390C", Offset = "0x155390C", VA = "0x155390C")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1553A70", Offset = "0x1553A70", VA = "0x1553A70")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001278")]
	[Address(RVA = "0x1553BDC", Offset = "0x1553BDC", VA = "0x1553BDC")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001279")]
	[Address(RVA = "0x1553D70", Offset = "0x1553D70", VA = "0x1553D70")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600127A")]
	[Address(RVA = "0x1553EEC", Offset = "0x1553EEC", VA = "0x1553EEC")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600127B")]
	[Address(RVA = "0x1554078", Offset = "0x1554078", VA = "0x1554078")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600127C")]
	[Address(RVA = "0x15541FC", Offset = "0x15541FC", VA = "0x15541FC")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600127D")]
	[Address(RVA = "0x1554368", Offset = "0x1554368", VA = "0x1554368")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600127E")]
	[Address(RVA = "0x15544E4", Offset = "0x15544E4", VA = "0x15544E4")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1554680", Offset = "0x1554680", VA = "0x1554680")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1554804", Offset = "0x1554804", VA = "0x1554804")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001281")]
	[Address(RVA = "0x156D388", Offset = "0x156D388", VA = "0x156D388")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001282")]
	[Address(RVA = "0x15549C4", Offset = "0x15549C4", VA = "0x15549C4")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001283")]
	[Address(RVA = "0x156D408", Offset = "0x156D408", VA = "0x156D408")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1554B20", Offset = "0x1554B20", VA = "0x1554B20")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1554C28", Offset = "0x1554C28", VA = "0x1554C28")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1554D30", Offset = "0x1554D30", VA = "0x1554D30")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1554E6C", Offset = "0x1554E6C", VA = "0x1554E6C")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1554F44", Offset = "0x1554F44", VA = "0x1554F44")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001289")]
	[Address(RVA = "0x155502C", Offset = "0x155502C", VA = "0x155502C")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600128A")]
	[Address(RVA = "0x1555134", Offset = "0x1555134", VA = "0x1555134")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600128B")]
	[Address(RVA = "0x1555224", Offset = "0x1555224", VA = "0x1555224")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600128C")]
	[Address(RVA = "0x155532C", Offset = "0x155532C", VA = "0x155532C")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600128D")]
	[Address(RVA = "0x155544C", Offset = "0x155544C", VA = "0x155544C")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600128E")]
	[Address(RVA = "0x1555554", Offset = "0x1555554", VA = "0x1555554")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600128F")]
	[Address(RVA = "0x1555644", Offset = "0x1555644", VA = "0x1555644")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001290")]
	[Address(RVA = "0x1555724", Offset = "0x1555724", VA = "0x1555724")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001291")]
	[Address(RVA = "0x15557FC", Offset = "0x15557FC", VA = "0x15557FC")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6001292")]
	[Address(RVA = "0x1555964", Offset = "0x1555964", VA = "0x1555964")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001293")]
	[Address(RVA = "0x1555A84", Offset = "0x1555A84", VA = "0x1555A84")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6001294")]
	[Address(RVA = "0x1555BC4", Offset = "0x1555BC4", VA = "0x1555BC4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001295")]
	[Address(RVA = "0x1555D28", Offset = "0x1555D28", VA = "0x1555D28")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1555E8C", Offset = "0x1555E8C", VA = "0x1555E8C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001297")]
	[Address(RVA = "0x1555FF0", Offset = "0x1555FF0", VA = "0x1555FF0")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001298")]
	[Address(RVA = "0x1556134", Offset = "0x1556134", VA = "0x1556134")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001299")]
	[Address(RVA = "0x155621C", Offset = "0x155621C", VA = "0x155621C")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x600129A")]
	[Address(RVA = "0x1556300", Offset = "0x1556300", VA = "0x1556300")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x600129B")]
	[Address(RVA = "0x1556408", Offset = "0x1556408", VA = "0x1556408")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600129C")]
	[Address(RVA = "0x1556528", Offset = "0x1556528", VA = "0x1556528")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600129D")]
	[Address(RVA = "0x1556630", Offset = "0x1556630", VA = "0x1556630")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1556750", Offset = "0x1556750", VA = "0x1556750")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600129F")]
	[Address(RVA = "0x15568EC", Offset = "0x15568EC", VA = "0x15568EC")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1556AA0", Offset = "0x1556AA0", VA = "0x1556AA0")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1556C3C", Offset = "0x1556C3C", VA = "0x1556C3C")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1556DF0", Offset = "0x1556DF0", VA = "0x1556DF0")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1556F28", Offset = "0x1556F28", VA = "0x1556F28")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x1557048", Offset = "0x1557048", VA = "0x1557048")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x1557168", Offset = "0x1557168", VA = "0x1557168")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x1557200", Offset = "0x1557200", VA = "0x1557200")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x155737C", Offset = "0x155737C", VA = "0x155737C")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1557528", Offset = "0x1557528", VA = "0x1557528")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x156D488", Offset = "0x156D488", VA = "0x156D488")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x15576AC", Offset = "0x15576AC", VA = "0x15576AC")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x15577D0", Offset = "0x15577D0", VA = "0x15577D0")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x15578F4", Offset = "0x15578F4", VA = "0x15578F4")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x15579FC", Offset = "0x15579FC", VA = "0x15579FC")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x1557B80", Offset = "0x1557B80", VA = "0x1557B80")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x1557D38", Offset = "0x1557D38", VA = "0x1557D38")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x1557EF0", Offset = "0x1557EF0", VA = "0x1557EF0")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x155808C", Offset = "0x155808C", VA = "0x155808C")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x155818C", Offset = "0x155818C", VA = "0x155818C")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x15584D4", Offset = "0x15584D4", VA = "0x15584D4")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x15585E4", Offset = "0x15585E4", VA = "0x15585E4")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x15589D4", Offset = "0x15589D4", VA = "0x15589D4")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x1558B78", Offset = "0x1558B78", VA = "0x1558B78")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1558CB8", Offset = "0x1558CB8", VA = "0x1558CB8")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1558DD0", Offset = "0x1558DD0", VA = "0x1558DD0")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x1559144", Offset = "0x1559144", VA = "0x1559144")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x15592A0", Offset = "0x15592A0", VA = "0x15592A0")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x15596B8", Offset = "0x15596B8", VA = "0x15596B8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x15598A8", Offset = "0x15598A8", VA = "0x15598A8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1559A44", Offset = "0x1559A44", VA = "0x1559A44")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1559BA0", Offset = "0x1559BA0", VA = "0x1559BA0")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1559CD4", Offset = "0x1559CD4", VA = "0x1559CD4")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1559DF8", Offset = "0x1559DF8", VA = "0x1559DF8")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1559F1C", Offset = "0x1559F1C", VA = "0x1559F1C")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x155A07C", Offset = "0x155A07C", VA = "0x155A07C")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x155A1FC", Offset = "0x155A1FC", VA = "0x155A1FC")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x155A378", Offset = "0x155A378", VA = "0x155A378")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x155A514", Offset = "0x155A514", VA = "0x155A514")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x155A698", Offset = "0x155A698", VA = "0x155A698")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x155A804", Offset = "0x155A804", VA = "0x155A804")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x155A914", Offset = "0x155A914", VA = "0x155A914")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x155AA88", Offset = "0x155AA88", VA = "0x155AA88")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x155AC3C", Offset = "0x155AC3C", VA = "0x155AC3C")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x155ADD8", Offset = "0x155ADD8", VA = "0x155ADD8")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x155AF5C", Offset = "0x155AF5C", VA = "0x155AF5C")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x155B084", Offset = "0x155B084", VA = "0x155B084")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x155B1CC", Offset = "0x155B1CC", VA = "0x155B1CC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x155B324", Offset = "0x155B324", VA = "0x155B324")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x155B464", Offset = "0x155B464", VA = "0x155B464")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x155B58C", Offset = "0x155B58C", VA = "0x155B58C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x155B6CC", Offset = "0x155B6CC", VA = "0x155B6CC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x155B83C", Offset = "0x155B83C", VA = "0x155B83C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x155B994", Offset = "0x155B994", VA = "0x155B994")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x155BAD4", Offset = "0x155BAD4", VA = "0x155BAD4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x155BC60", Offset = "0x155BC60", VA = "0x155BC60")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x155BDDC", Offset = "0x155BDDC", VA = "0x155BDDC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x155BF40", Offset = "0x155BF40", VA = "0x155BF40")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x155C08C", Offset = "0x155C08C", VA = "0x155C08C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x155C17C", Offset = "0x155C17C", VA = "0x155C17C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x155C2D0", Offset = "0x155C2D0", VA = "0x155C2D0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x155C464", Offset = "0x155C464", VA = "0x155C464")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x155C5E0", Offset = "0x155C5E0", VA = "0x155C5E0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x155C744", Offset = "0x155C744", VA = "0x155C744")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x155C84C", Offset = "0x155C84C", VA = "0x155C84C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x155C9A0", Offset = "0x155C9A0", VA = "0x155C9A0")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x155CAF4", Offset = "0x155CAF4", VA = "0x155CAF4")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x155CC6C", Offset = "0x155CC6C", VA = "0x155CC6C")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x155CDB0", Offset = "0x155CDB0", VA = "0x155CDB0")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x155CEC8", Offset = "0x155CEC8", VA = "0x155CEC8")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x155CFC8", Offset = "0x155CFC8", VA = "0x155CFC8")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x155D150", Offset = "0x155D150", VA = "0x155D150")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x155D2C4", Offset = "0x155D2C4", VA = "0x155D2C4")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x155D3DC", Offset = "0x155D3DC", VA = "0x155D3DC")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x155D4EC", Offset = "0x155D4EC", VA = "0x155D4EC")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x155D5FC", Offset = "0x155D5FC", VA = "0x155D5FC")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x155D71C", Offset = "0x155D71C", VA = "0x155D71C")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x155D81C", Offset = "0x155D81C", VA = "0x155D81C")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x155D948", Offset = "0x155D948", VA = "0x155D948")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x155DA5C", Offset = "0x155DA5C", VA = "0x155DA5C")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x155DBE8", Offset = "0x155DBE8", VA = "0x155DBE8")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x155DD8C", Offset = "0x155DD8C", VA = "0x155DD8C")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x155DE94", Offset = "0x155DE94", VA = "0x155DE94")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x155DF84", Offset = "0x155DF84", VA = "0x155DF84")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x155E058", Offset = "0x155E058", VA = "0x155E058")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x155E150", Offset = "0x155E150", VA = "0x155E150")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x155E240", Offset = "0x155E240", VA = "0x155E240")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x155E314", Offset = "0x155E314", VA = "0x155E314")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x155E434", Offset = "0x155E434", VA = "0x155E434")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x155E564", Offset = "0x155E564", VA = "0x155E564")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x155E664", Offset = "0x155E664", VA = "0x155E664")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x155E764", Offset = "0x155E764", VA = "0x155E764")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x155E87C", Offset = "0x155E87C", VA = "0x155E87C")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x155E97C", Offset = "0x155E97C", VA = "0x155E97C")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x155EAAC", Offset = "0x155EAAC", VA = "0x155EAAC")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x155EB9C", Offset = "0x155EB9C", VA = "0x155EB9C")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x155EC7C", Offset = "0x155EC7C", VA = "0x155EC7C")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001300")]
	[Address(RVA = "0x155ED54", Offset = "0x155ED54", VA = "0x155ED54")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001301")]
	[Address(RVA = "0x155EE20", Offset = "0x155EE20", VA = "0x155EE20")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6001302")]
	[Address(RVA = "0x155EEEC", Offset = "0x155EEEC", VA = "0x155EEEC")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6001303")]
	[Address(RVA = "0x154C1A4", Offset = "0x154C1A4", VA = "0x154C1A4")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001304")]
	[Address(RVA = "0x154C298", Offset = "0x154C298", VA = "0x154C298")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001305")]
	[Address(RVA = "0x154C38C", Offset = "0x154C38C", VA = "0x154C38C")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001306")]
	[Address(RVA = "0x154C480", Offset = "0x154C480", VA = "0x154C480")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001307")]
	[Address(RVA = "0x154C574", Offset = "0x154C574", VA = "0x154C574")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001308")]
	[Address(RVA = "0x154C668", Offset = "0x154C668", VA = "0x154C668")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001309")]
	[Address(RVA = "0x154C75C", Offset = "0x154C75C", VA = "0x154C75C")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600130A")]
	[Address(RVA = "0x154C850", Offset = "0x154C850", VA = "0x154C850")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130B")]
	[Address(RVA = "0x154C944", Offset = "0x154C944", VA = "0x154C944")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600130C")]
	[Address(RVA = "0x154CA38", Offset = "0x154CA38", VA = "0x154CA38")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130D")]
	[Address(RVA = "0x154CB2C", Offset = "0x154CB2C", VA = "0x154CB2C")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600130E")]
	[Address(RVA = "0x154CC20", Offset = "0x154CC20", VA = "0x154CC20")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130F")]
	[Address(RVA = "0x154CD14", Offset = "0x154CD14", VA = "0x154CD14")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001310")]
	[Address(RVA = "0x154CE08", Offset = "0x154CE08", VA = "0x154CE08")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001311")]
	[Address(RVA = "0x154CEFC", Offset = "0x154CEFC", VA = "0x154CEFC")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001312")]
	[Address(RVA = "0x154CFF0", Offset = "0x154CFF0", VA = "0x154CFF0")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001313")]
	[Address(RVA = "0x154D0E4", Offset = "0x154D0E4", VA = "0x154D0E4")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001314")]
	[Address(RVA = "0x154D1D8", Offset = "0x154D1D8", VA = "0x154D1D8")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001315")]
	[Address(RVA = "0x154D2D4", Offset = "0x154D2D4", VA = "0x154D2D4")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001316")]
	[Address(RVA = "0x154C0B0", Offset = "0x154C0B0", VA = "0x154C0B0")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001317")]
	[Address(RVA = "0x155EFB8", Offset = "0x155EFB8", VA = "0x155EFB8")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6001318")]
	[Address(RVA = "0x155F084", Offset = "0x155F084", VA = "0x155F084")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6001319")]
	[Address(RVA = "0x156D508", Offset = "0x156D508", VA = "0x156D508")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600131A")]
	[Address(RVA = "0x156D598", Offset = "0x156D598", VA = "0x156D598")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131B")]
	[Address(RVA = "0x156D618", Offset = "0x156D618", VA = "0x156D618")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600131C")]
	[Address(RVA = "0x156D6A8", Offset = "0x156D6A8", VA = "0x156D6A8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131D")]
	[Address(RVA = "0x156D728", Offset = "0x156D728", VA = "0x156D728")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600131E")]
	[Address(RVA = "0x156D7B8", Offset = "0x156D7B8", VA = "0x156D7B8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131F")]
	[Address(RVA = "0x156D838", Offset = "0x156D838", VA = "0x156D838")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6001320")]
	[Address(RVA = "0x156D8AC", Offset = "0x156D8AC", VA = "0x156D8AC")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001321")]
	[Address(RVA = "0x156D92C", Offset = "0x156D92C", VA = "0x156D92C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001322")]
	[Address(RVA = "0x156D9BC", Offset = "0x156D9BC", VA = "0x156D9BC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001323")]
	[Address(RVA = "0x156DA3C", Offset = "0x156DA3C", VA = "0x156DA3C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001324")]
	[Address(RVA = "0x156DACC", Offset = "0x156DACC", VA = "0x156DACC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001325")]
	[Address(RVA = "0x156DB4C", Offset = "0x156DB4C", VA = "0x156DB4C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6001326")]
	[Address(RVA = "0x156DBC0", Offset = "0x156DBC0", VA = "0x156DBC0")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001327")]
	[Address(RVA = "0x156DC40", Offset = "0x156DC40", VA = "0x156DC40")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001328")]
	[Address(RVA = "0x156DCD0", Offset = "0x156DCD0", VA = "0x156DCD0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001329")]
	[Address(RVA = "0x156DD50", Offset = "0x156DD50", VA = "0x156DD50")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600132A")]
	[Address(RVA = "0x156DDE0", Offset = "0x156DDE0", VA = "0x156DDE0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132B")]
	[Address(RVA = "0x156DE60", Offset = "0x156DE60", VA = "0x156DE60")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600132C")]
	[Address(RVA = "0x156DED4", Offset = "0x156DED4", VA = "0x156DED4")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132D")]
	[Address(RVA = "0x156DF54", Offset = "0x156DF54", VA = "0x156DF54")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600132E")]
	[Address(RVA = "0x156DFE4", Offset = "0x156DFE4", VA = "0x156DFE4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132F")]
	[Address(RVA = "0x156E064", Offset = "0x156E064", VA = "0x156E064")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001330")]
	[Address(RVA = "0x156E0F4", Offset = "0x156E0F4", VA = "0x156E0F4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001331")]
	[Address(RVA = "0x156E174", Offset = "0x156E174", VA = "0x156E174")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6001332")]
	[Address(RVA = "0x156E1E8", Offset = "0x156E1E8", VA = "0x156E1E8")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001333")]
	[Address(RVA = "0x156E268", Offset = "0x156E268", VA = "0x156E268")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001334")]
	[Address(RVA = "0x156E2F8", Offset = "0x156E2F8", VA = "0x156E2F8")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001335")]
	[Address(RVA = "0x156E378", Offset = "0x156E378", VA = "0x156E378")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001336")]
	[Address(RVA = "0x156E408", Offset = "0x156E408", VA = "0x156E408")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001337")]
	[Address(RVA = "0x156E488", Offset = "0x156E488", VA = "0x156E488")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001338")]
	[Address(RVA = "0x156E4FC", Offset = "0x156E4FC", VA = "0x156E4FC")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001339")]
	[Address(RVA = "0x156E57C", Offset = "0x156E57C", VA = "0x156E57C")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600133A")]
	[Address(RVA = "0x156E60C", Offset = "0x156E60C", VA = "0x156E60C")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133B")]
	[Address(RVA = "0x156E68C", Offset = "0x156E68C", VA = "0x156E68C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600133C")]
	[Address(RVA = "0x156E700", Offset = "0x156E700", VA = "0x156E700")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133D")]
	[Address(RVA = "0x156E780", Offset = "0x156E780", VA = "0x156E780")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600133E")]
	[Address(RVA = "0x156E810", Offset = "0x156E810", VA = "0x156E810")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133F")]
	[Address(RVA = "0x156E890", Offset = "0x156E890", VA = "0x156E890")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6001340")]
	[Address(RVA = "0x156E904", Offset = "0x156E904", VA = "0x156E904")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001341")]
	[Address(RVA = "0x156E984", Offset = "0x156E984", VA = "0x156E984")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001342")]
	[Address(RVA = "0x156EA14", Offset = "0x156EA14", VA = "0x156EA14")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001343")]
	[Address(RVA = "0x156EA94", Offset = "0x156EA94", VA = "0x156EA94")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001344")]
	[Address(RVA = "0x156EB24", Offset = "0x156EB24", VA = "0x156EB24")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001345")]
	[Address(RVA = "0x156EBA4", Offset = "0x156EBA4", VA = "0x156EBA4")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001346")]
	[Address(RVA = "0x156EC34", Offset = "0x156EC34", VA = "0x156EC34")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001347")]
	[Address(RVA = "0x156ECB4", Offset = "0x156ECB4", VA = "0x156ECB4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001348")]
	[Address(RVA = "0x156ED44", Offset = "0x156ED44", VA = "0x156ED44")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001349")]
	[Address(RVA = "0x156EDC4", Offset = "0x156EDC4", VA = "0x156EDC4")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600134A")]
	[Address(RVA = "0x156EE54", Offset = "0x156EE54", VA = "0x156EE54")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134B")]
	[Address(RVA = "0x156EED4", Offset = "0x156EED4", VA = "0x156EED4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600134C")]
	[Address(RVA = "0x156EF64", Offset = "0x156EF64", VA = "0x156EF64")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134D")]
	[Address(RVA = "0x156EFE4", Offset = "0x156EFE4", VA = "0x156EFE4")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600134E")]
	[Address(RVA = "0x156F074", Offset = "0x156F074", VA = "0x156F074")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134F")]
	[Address(RVA = "0x156F0F4", Offset = "0x156F0F4", VA = "0x156F0F4")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001350")]
	[Address(RVA = "0x156F184", Offset = "0x156F184", VA = "0x156F184")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001351")]
	[Address(RVA = "0x156F204", Offset = "0x156F204", VA = "0x156F204")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001352")]
	[Address(RVA = "0x156F294", Offset = "0x156F294", VA = "0x156F294")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001353")]
	[Address(RVA = "0x156F314", Offset = "0x156F314", VA = "0x156F314")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001354")]
	[Address(RVA = "0x156F3A4", Offset = "0x156F3A4", VA = "0x156F3A4")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001355")]
	[Address(RVA = "0x156F424", Offset = "0x156F424", VA = "0x156F424")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001356")]
	[Address(RVA = "0x156F4B4", Offset = "0x156F4B4", VA = "0x156F4B4")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001357")]
	[Address(RVA = "0x156F534", Offset = "0x156F534", VA = "0x156F534")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001358")]
	[Address(RVA = "0x156F5C4", Offset = "0x156F5C4", VA = "0x156F5C4")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001359")]
	[Address(RVA = "0x156F644", Offset = "0x156F644", VA = "0x156F644")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600135A")]
	[Address(RVA = "0x156F6D4", Offset = "0x156F6D4", VA = "0x156F6D4")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135B")]
	[Address(RVA = "0x156F754", Offset = "0x156F754", VA = "0x156F754")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600135C")]
	[Address(RVA = "0x156F7E4", Offset = "0x156F7E4", VA = "0x156F7E4")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135D")]
	[Address(RVA = "0x156F864", Offset = "0x156F864", VA = "0x156F864")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600135E")]
	[Address(RVA = "0x156F8F4", Offset = "0x156F8F4", VA = "0x156F8F4")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135F")]
	[Address(RVA = "0x156F974", Offset = "0x156F974", VA = "0x156F974")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001360")]
	[Address(RVA = "0x156FA04", Offset = "0x156FA04", VA = "0x156FA04")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001361")]
	[Address(RVA = "0x156FA84", Offset = "0x156FA84", VA = "0x156FA84")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001362")]
	[Address(RVA = "0x156FB14", Offset = "0x156FB14", VA = "0x156FB14")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001363")]
	[Address(RVA = "0x156FB94", Offset = "0x156FB94", VA = "0x156FB94")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001364")]
	[Address(RVA = "0x156FC24", Offset = "0x156FC24", VA = "0x156FC24")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001365")]
	[Address(RVA = "0x156FCA4", Offset = "0x156FCA4", VA = "0x156FCA4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6001366")]
	[Address(RVA = "0x156FD18", Offset = "0x156FD18", VA = "0x156FD18")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001367")]
	[Address(RVA = "0x156FD98", Offset = "0x156FD98", VA = "0x156FD98")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001368")]
	[Address(RVA = "0x156FE28", Offset = "0x156FE28", VA = "0x156FE28")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001369")]
	[Address(RVA = "0x156FEA8", Offset = "0x156FEA8", VA = "0x156FEA8")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600136A")]
	[Address(RVA = "0x156FF50", Offset = "0x156FF50", VA = "0x156FF50")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600136B")]
	[Address(RVA = "0x156FFE0", Offset = "0x156FFE0", VA = "0x156FFE0")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600136C")]
	[Address(RVA = "0x1570054", Offset = "0x1570054", VA = "0x1570054")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x600136D")]
	[Address(RVA = "0x15700C8", Offset = "0x15700C8", VA = "0x15700C8")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600136E")]
	[Address(RVA = "0x15356A4", Offset = "0x15356A4", VA = "0x15356A4")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x600136F")]
	[Address(RVA = "0x153578C", Offset = "0x153578C", VA = "0x153578C")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1535880", Offset = "0x1535880", VA = "0x1535880")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001371")]
	[Address(RVA = "0x1535974", Offset = "0x1535974", VA = "0x1535974")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001372")]
	[Address(RVA = "0x1535A68", Offset = "0x1535A68", VA = "0x1535A68")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001373")]
	[Address(RVA = "0x15355A8", Offset = "0x15355A8", VA = "0x15355A8")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001374")]
	[Address(RVA = "0x15370F8", Offset = "0x15370F8", VA = "0x15370F8")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001375")]
	[Address(RVA = "0x15371EC", Offset = "0x15371EC", VA = "0x15371EC")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001376")]
	[Address(RVA = "0x15372E8", Offset = "0x15372E8", VA = "0x15372E8")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1537004", Offset = "0x1537004", VA = "0x1537004")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001378")]
	[Address(RVA = "0x155F198", Offset = "0x155F198", VA = "0x155F198")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001379")]
	[Address(RVA = "0x155F2C8", Offset = "0x155F2C8", VA = "0x155F2C8")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600137A")]
	[Address(RVA = "0x154D6D4", Offset = "0x154D6D4", VA = "0x154D6D4")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137B")]
	[Address(RVA = "0x154D814", Offset = "0x154D814", VA = "0x154D814")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137C")]
	[Address(RVA = "0x154D8F8", Offset = "0x154D8F8", VA = "0x154D8F8")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137D")]
	[Address(RVA = "0x154D9DC", Offset = "0x154D9DC", VA = "0x154D9DC")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137E")]
	[Address(RVA = "0x154DAD8", Offset = "0x154DAD8", VA = "0x154DAD8")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x600137F")]
	[Address(RVA = "0x154D5F0", Offset = "0x154D5F0", VA = "0x154D5F0")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001380")]
	[Address(RVA = "0x1570148", Offset = "0x1570148", VA = "0x1570148")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001381")]
	[Address(RVA = "0x15701C8", Offset = "0x15701C8", VA = "0x15701C8")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001382")]
	[Address(RVA = "0x1570248", Offset = "0x1570248", VA = "0x1570248")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001383")]
	[Address(RVA = "0x15702BC", Offset = "0x15702BC", VA = "0x15702BC")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001384")]
	[Address(RVA = "0x157033C", Offset = "0x157033C", VA = "0x157033C")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001385")]
	[Address(RVA = "0x15703BC", Offset = "0x15703BC", VA = "0x15703BC")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001386")]
	[Address(RVA = "0x157043C", Offset = "0x157043C", VA = "0x157043C")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001387")]
	[Address(RVA = "0x15704B0", Offset = "0x15704B0", VA = "0x15704B0")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001388")]
	[Address(RVA = "0x1570530", Offset = "0x1570530", VA = "0x1570530")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001389")]
	[Address(RVA = "0x15705B0", Offset = "0x15705B0", VA = "0x15705B0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1570630", Offset = "0x1570630", VA = "0x1570630")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138B")]
	[Address(RVA = "0x15706B0", Offset = "0x15706B0", VA = "0x15706B0")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138C")]
	[Address(RVA = "0x1570730", Offset = "0x1570730", VA = "0x1570730")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138D")]
	[Address(RVA = "0x15707B0", Offset = "0x15707B0", VA = "0x15707B0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138E")]
	[Address(RVA = "0x1570830", Offset = "0x1570830", VA = "0x1570830")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138F")]
	[Address(RVA = "0x15708B0", Offset = "0x15708B0", VA = "0x15708B0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001390")]
	[Address(RVA = "0x1570930", Offset = "0x1570930", VA = "0x1570930")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001391")]
	[Address(RVA = "0x15709B0", Offset = "0x15709B0", VA = "0x15709B0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001392")]
	[Address(RVA = "0x1570A30", Offset = "0x1570A30", VA = "0x1570A30")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001393")]
	[Address(RVA = "0x1570AB0", Offset = "0x1570AB0", VA = "0x1570AB0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001394")]
	[Address(RVA = "0x1570B30", Offset = "0x1570B30", VA = "0x1570B30")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001395")]
	[Address(RVA = "0x1570BB0", Offset = "0x1570BB0", VA = "0x1570BB0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001396")]
	[Address(RVA = "0x1570C30", Offset = "0x1570C30", VA = "0x1570C30")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001397")]
	[Address(RVA = "0x1570CA4", Offset = "0x1570CA4", VA = "0x1570CA4")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001398")]
	[Address(RVA = "0x153480C", Offset = "0x153480C", VA = "0x153480C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001399")]
	[Address(RVA = "0x15348F0", Offset = "0x15348F0", VA = "0x15348F0")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139A")]
	[Address(RVA = "0x1534A10", Offset = "0x1534A10", VA = "0x1534A10")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139B")]
	[Address(RVA = "0x1534B60", Offset = "0x1534B60", VA = "0x1534B60")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600139C")]
	[Address(RVA = "0x1534728", Offset = "0x1534728", VA = "0x1534728")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139D")]
	[Address(RVA = "0x1570D24", Offset = "0x1570D24", VA = "0x1570D24")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139E")]
	[Address(RVA = "0x1570DA4", Offset = "0x1570DA4", VA = "0x1570DA4")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139F")]
	[Address(RVA = "0x1570E24", Offset = "0x1570E24", VA = "0x1570E24")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1570EA4", Offset = "0x1570EA4", VA = "0x1570EA4")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x1570F24", Offset = "0x1570F24", VA = "0x1570F24")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1570FAC", Offset = "0x1570FAC", VA = "0x1570FAC")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1571020", Offset = "0x1571020", VA = "0x1571020")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x15710A0", Offset = "0x15710A0", VA = "0x15710A0")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1571120", Offset = "0x1571120", VA = "0x1571120")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x15711A0", Offset = "0x15711A0", VA = "0x15711A0")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x1571220", Offset = "0x1571220", VA = "0x1571220")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x1571294", Offset = "0x1571294", VA = "0x1571294")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x1537810", Offset = "0x1537810", VA = "0x1537810")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x15378F4", Offset = "0x15378F4", VA = "0x15378F4")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x15379D8", Offset = "0x15379D8", VA = "0x15379D8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x1537ABC", Offset = "0x1537ABC", VA = "0x1537ABC")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x1537BA0", Offset = "0x1537BA0", VA = "0x1537BA0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x1537C84", Offset = "0x1537C84", VA = "0x1537C84")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x1537D68", Offset = "0x1537D68", VA = "0x1537D68")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x1537E4C", Offset = "0x1537E4C", VA = "0x1537E4C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x1537F30", Offset = "0x1537F30", VA = "0x1537F30")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x1538014", Offset = "0x1538014", VA = "0x1538014")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x15380F8", Offset = "0x15380F8", VA = "0x15380F8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x1538218", Offset = "0x1538218", VA = "0x1538218")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x1538304", Offset = "0x1538304", VA = "0x1538304")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x153772C", Offset = "0x153772C", VA = "0x153772C")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x1536950", Offset = "0x1536950", VA = "0x1536950")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x1536A34", Offset = "0x1536A34", VA = "0x1536A34")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x1536B18", Offset = "0x1536B18", VA = "0x1536B18")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x1536BFC", Offset = "0x1536BFC", VA = "0x1536BFC")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x1536CE8", Offset = "0x1536CE8", VA = "0x1536CE8")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x153686C", Offset = "0x153686C", VA = "0x153686C")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x1571314", Offset = "0x1571314", VA = "0x1571314")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x1571394", Offset = "0x1571394", VA = "0x1571394")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1571414", Offset = "0x1571414", VA = "0x1571414")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1571494", Offset = "0x1571494", VA = "0x1571494")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1571514", Offset = "0x1571514", VA = "0x1571514")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1571588", Offset = "0x1571588", VA = "0x1571588")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1535E74", Offset = "0x1535E74", VA = "0x1535E74")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x1535F58", Offset = "0x1535F58", VA = "0x1535F58")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x153603C", Offset = "0x153603C", VA = "0x153603C")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1536120", Offset = "0x1536120", VA = "0x1536120")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x1536240", Offset = "0x1536240", VA = "0x1536240")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x153639C", Offset = "0x153639C", VA = "0x153639C")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x1535D90", Offset = "0x1535D90", VA = "0x1535D90")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x1571608", Offset = "0x1571608", VA = "0x1571608")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x1571690", Offset = "0x1571690", VA = "0x1571690")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x1571704", Offset = "0x1571704", VA = "0x1571704")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x1571784", Offset = "0x1571784", VA = "0x1571784")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x157180C", Offset = "0x157180C", VA = "0x157180C")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x1571880", Offset = "0x1571880", VA = "0x1571880")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x1571900", Offset = "0x1571900", VA = "0x1571900")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x1571990", Offset = "0x1571990", VA = "0x1571990")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x1571A00", Offset = "0x1571A00", VA = "0x1571A00")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x1571A74", Offset = "0x1571A74", VA = "0x1571A74")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x1571AF4", Offset = "0x1571AF4", VA = "0x1571AF4")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x1571B64", Offset = "0x1571B64", VA = "0x1571B64")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x1571BF4", Offset = "0x1571BF4", VA = "0x1571BF4")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x1571C68", Offset = "0x1571C68", VA = "0x1571C68")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x155F43C", Offset = "0x155F43C", VA = "0x155F43C")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x155F5D0", Offset = "0x155F5D0", VA = "0x155F5D0")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x155F74C", Offset = "0x155F74C", VA = "0x155F74C")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x155F86C", Offset = "0x155F86C", VA = "0x155F86C")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x155F974", Offset = "0x155F974", VA = "0x155F974")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x155FAE8", Offset = "0x155FAE8", VA = "0x155FAE8")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x155FC94", Offset = "0x155FC94", VA = "0x155FC94")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x155FE28", Offset = "0x155FE28", VA = "0x155FE28")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x155FF60", Offset = "0x155FF60", VA = "0x155FF60")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x1560080", Offset = "0x1560080", VA = "0x1560080")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x1560180", Offset = "0x1560180", VA = "0x1560180")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x1560254", Offset = "0x1560254", VA = "0x1560254")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x156035C", Offset = "0x156035C", VA = "0x156035C")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x1560464", Offset = "0x1560464", VA = "0x1560464")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x156058C", Offset = "0x156058C", VA = "0x156058C")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x15606A4", Offset = "0x15606A4", VA = "0x15606A4")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x15607B4", Offset = "0x15607B4", VA = "0x15607B4")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x15426A0", Offset = "0x15426A0", VA = "0x15426A0")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x1542794", Offset = "0x1542794", VA = "0x1542794")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x1542888", Offset = "0x1542888", VA = "0x1542888")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x154297C", Offset = "0x154297C", VA = "0x154297C")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x1542A70", Offset = "0x1542A70", VA = "0x1542A70")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x1542B64", Offset = "0x1542B64", VA = "0x1542B64")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x1542C58", Offset = "0x1542C58", VA = "0x1542C58")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x1542D4C", Offset = "0x1542D4C", VA = "0x1542D4C")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1542E48", Offset = "0x1542E48", VA = "0x1542E48")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x1542F3C", Offset = "0x1542F3C", VA = "0x1542F3C")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x1543030", Offset = "0x1543030", VA = "0x1543030")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x1543124", Offset = "0x1543124", VA = "0x1543124")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x1543220", Offset = "0x1543220", VA = "0x1543220")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x1543314", Offset = "0x1543314", VA = "0x1543314")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x1543410", Offset = "0x1543410", VA = "0x1543410")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x1543504", Offset = "0x1543504", VA = "0x1543504")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x15435F8", Offset = "0x15435F8", VA = "0x15435F8")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x15436EC", Offset = "0x15436EC", VA = "0x15436EC")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x15437E0", Offset = "0x15437E0", VA = "0x15437E0")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x15438D4", Offset = "0x15438D4", VA = "0x15438D4")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x15439C8", Offset = "0x15439C8", VA = "0x15439C8")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x1543ABC", Offset = "0x1543ABC", VA = "0x1543ABC")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x1543BB0", Offset = "0x1543BB0", VA = "0x1543BB0")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001400")]
	[Address(RVA = "0x1543CA4", Offset = "0x1543CA4", VA = "0x1543CA4")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001401")]
	[Address(RVA = "0x1543D98", Offset = "0x1543D98", VA = "0x1543D98")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001402")]
	[Address(RVA = "0x1543E8C", Offset = "0x1543E8C", VA = "0x1543E8C")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001403")]
	[Address(RVA = "0x1543F80", Offset = "0x1543F80", VA = "0x1543F80")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001404")]
	[Address(RVA = "0x1544074", Offset = "0x1544074", VA = "0x1544074")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001405")]
	[Address(RVA = "0x1544168", Offset = "0x1544168", VA = "0x1544168")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001406")]
	[Address(RVA = "0x154425C", Offset = "0x154425C", VA = "0x154425C")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001407")]
	[Address(RVA = "0x1544350", Offset = "0x1544350", VA = "0x1544350")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001408")]
	[Address(RVA = "0x1544444", Offset = "0x1544444", VA = "0x1544444")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001409")]
	[Address(RVA = "0x1544538", Offset = "0x1544538", VA = "0x1544538")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600140A")]
	[Address(RVA = "0x154462C", Offset = "0x154462C", VA = "0x154462C")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600140B")]
	[Address(RVA = "0x1544720", Offset = "0x1544720", VA = "0x1544720")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600140C")]
	[Address(RVA = "0x1544814", Offset = "0x1544814", VA = "0x1544814")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600140D")]
	[Address(RVA = "0x1544910", Offset = "0x1544910", VA = "0x1544910")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x600140E")]
	[Address(RVA = "0x15425AC", Offset = "0x15425AC", VA = "0x15425AC")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600140F")]
	[Address(RVA = "0x1538714", Offset = "0x1538714", VA = "0x1538714")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001410")]
	[Address(RVA = "0x1538808", Offset = "0x1538808", VA = "0x1538808")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001411")]
	[Address(RVA = "0x15388FC", Offset = "0x15388FC", VA = "0x15388FC")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001412")]
	[Address(RVA = "0x15389F0", Offset = "0x15389F0", VA = "0x15389F0")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001413")]
	[Address(RVA = "0x1538AE4", Offset = "0x1538AE4", VA = "0x1538AE4")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001414")]
	[Address(RVA = "0x1538BD8", Offset = "0x1538BD8", VA = "0x1538BD8")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001415")]
	[Address(RVA = "0x1538CBC", Offset = "0x1538CBC", VA = "0x1538CBC")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001416")]
	[Address(RVA = "0x1538D94", Offset = "0x1538D94", VA = "0x1538D94")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001417")]
	[Address(RVA = "0x1538EA4", Offset = "0x1538EA4", VA = "0x1538EA4")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001418")]
	[Address(RVA = "0x1538FB0", Offset = "0x1538FB0", VA = "0x1538FB0")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6001419")]
	[Address(RVA = "0x1538620", Offset = "0x1538620", VA = "0x1538620")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600141A")]
	[Address(RVA = "0x1560968", Offset = "0x1560968", VA = "0x1560968")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600141B")]
	[Address(RVA = "0x1560AD4", Offset = "0x1560AD4", VA = "0x1560AD4")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600141C")]
	[Address(RVA = "0x1560C38", Offset = "0x1560C38", VA = "0x1560C38")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600141D")]
	[Address(RVA = "0x1560DBC", Offset = "0x1560DBC", VA = "0x1560DBC")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600141E")]
	[Address(RVA = "0x1560F40", Offset = "0x1560F40", VA = "0x1560F40")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600141F")]
	[Address(RVA = "0x156108C", Offset = "0x156108C", VA = "0x156108C")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001420")]
	[Address(RVA = "0x15611A8", Offset = "0x15611A8", VA = "0x15611A8")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001421")]
	[Address(RVA = "0x15612A8", Offset = "0x15612A8", VA = "0x15612A8")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001422")]
	[Address(RVA = "0x1561418", Offset = "0x1561418", VA = "0x1561418")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001423")]
	[Address(RVA = "0x1561584", Offset = "0x1561584", VA = "0x1561584")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001424")]
	[Address(RVA = "0x1561700", Offset = "0x1561700", VA = "0x1561700")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001425")]
	[Address(RVA = "0x1561838", Offset = "0x1561838", VA = "0x1561838")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001426")]
	[Address(RVA = "0x1561960", Offset = "0x1561960", VA = "0x1561960")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001427")]
	[Address(RVA = "0x1561AA8", Offset = "0x1561AA8", VA = "0x1561AA8")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001428")]
	[Address(RVA = "0x1561BDC", Offset = "0x1561BDC", VA = "0x1561BDC")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001429")]
	[Address(RVA = "0x1561D08", Offset = "0x1561D08", VA = "0x1561D08")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600142A")]
	[Address(RVA = "0x1561DE8", Offset = "0x1561DE8", VA = "0x1561DE8")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600142B")]
	[Address(RVA = "0x1561EC8", Offset = "0x1561EC8", VA = "0x1561EC8")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600142C")]
	[Address(RVA = "0x1562004", Offset = "0x1562004", VA = "0x1562004")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x600142D")]
	[Address(RVA = "0x15621A4", Offset = "0x15621A4", VA = "0x15621A4")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600142E")]
	[Address(RVA = "0x15622B4", Offset = "0x15622B4", VA = "0x15622B4")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600142F")]
	[Address(RVA = "0x15623AC", Offset = "0x15623AC", VA = "0x15623AC")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001430")]
	[Address(RVA = "0x156248C", Offset = "0x156248C", VA = "0x156248C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001431")]
	[Address(RVA = "0x156256C", Offset = "0x156256C", VA = "0x156256C")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001432")]
	[Address(RVA = "0x156264C", Offset = "0x156264C", VA = "0x156264C")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001433")]
	[Address(RVA = "0x156272C", Offset = "0x156272C", VA = "0x156272C")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001434")]
	[Address(RVA = "0x156281C", Offset = "0x156281C", VA = "0x156281C")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001435")]
	[Address(RVA = "0x156290C", Offset = "0x156290C", VA = "0x156290C")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001436")]
	[Address(RVA = "0x15629F4", Offset = "0x15629F4", VA = "0x15629F4")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001437")]
	[Address(RVA = "0x1562ADC", Offset = "0x1562ADC", VA = "0x1562ADC")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001438")]
	[Address(RVA = "0x1562BC4", Offset = "0x1562BC4", VA = "0x1562BC4")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001439")]
	[Address(RVA = "0x1562CAC", Offset = "0x1562CAC", VA = "0x1562CAC")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600143A")]
	[Address(RVA = "0x1562DA4", Offset = "0x1562DA4", VA = "0x1562DA4")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600143B")]
	[Address(RVA = "0x1571CE8", Offset = "0x1571CE8", VA = "0x1571CE8")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600143C")]
	[Address(RVA = "0x1571D78", Offset = "0x1571D78", VA = "0x1571D78")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600143D")]
	[Address(RVA = "0x1571DF8", Offset = "0x1571DF8", VA = "0x1571DF8")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600143E")]
	[Address(RVA = "0x1571E88", Offset = "0x1571E88", VA = "0x1571E88")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600143F")]
	[Address(RVA = "0x1571F08", Offset = "0x1571F08", VA = "0x1571F08")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001440")]
	[Address(RVA = "0x1571F98", Offset = "0x1571F98", VA = "0x1571F98")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001441")]
	[Address(RVA = "0x1572018", Offset = "0x1572018", VA = "0x1572018")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001442")]
	[Address(RVA = "0x157208C", Offset = "0x157208C", VA = "0x157208C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001443")]
	[Address(RVA = "0x157211C", Offset = "0x157211C", VA = "0x157211C")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001444")]
	[Address(RVA = "0x157219C", Offset = "0x157219C", VA = "0x157219C")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001445")]
	[Address(RVA = "0x157222C", Offset = "0x157222C", VA = "0x157222C")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001446")]
	[Address(RVA = "0x15722C4", Offset = "0x15722C4", VA = "0x15722C4")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001447")]
	[Address(RVA = "0x1572354", Offset = "0x1572354", VA = "0x1572354")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001448")]
	[Address(RVA = "0x15723E4", Offset = "0x15723E4", VA = "0x15723E4")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001449")]
	[Address(RVA = "0x157246C", Offset = "0x157246C", VA = "0x157246C")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600144A")]
	[Address(RVA = "0x15724EC", Offset = "0x15724EC", VA = "0x15724EC")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600144B")]
	[Address(RVA = "0x157257C", Offset = "0x157257C", VA = "0x157257C")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600144C")]
	[Address(RVA = "0x15725FC", Offset = "0x15725FC", VA = "0x15725FC")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600144D")]
	[Address(RVA = "0x157267C", Offset = "0x157267C", VA = "0x157267C")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600144E")]
	[Address(RVA = "0x1572704", Offset = "0x1572704", VA = "0x1572704")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600144F")]
	[Address(RVA = "0x1572784", Offset = "0x1572784", VA = "0x1572784")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001450")]
	[Address(RVA = "0x15727F8", Offset = "0x15727F8", VA = "0x15727F8")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001451")]
	[Address(RVA = "0x1572890", Offset = "0x1572890", VA = "0x1572890")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001452")]
	[Address(RVA = "0x1572920", Offset = "0x1572920", VA = "0x1572920")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001453")]
	[Address(RVA = "0x15729A0", Offset = "0x15729A0", VA = "0x15729A0")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001454")]
	[Address(RVA = "0x1572A30", Offset = "0x1572A30", VA = "0x1572A30")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001455")]
	[Address(RVA = "0x1572AB0", Offset = "0x1572AB0", VA = "0x1572AB0")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1572B40", Offset = "0x1572B40", VA = "0x1572B40")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1572BC0", Offset = "0x1572BC0", VA = "0x1572BC0")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1572C50", Offset = "0x1572C50", VA = "0x1572C50")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1572CD0", Offset = "0x1572CD0", VA = "0x1572CD0")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1572D60", Offset = "0x1572D60", VA = "0x1572D60")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145B")]
	[Address(RVA = "0x1572DE0", Offset = "0x1572DE0", VA = "0x1572DE0")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600145C")]
	[Address(RVA = "0x1572E70", Offset = "0x1572E70", VA = "0x1572E70")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1572EF0", Offset = "0x1572EF0", VA = "0x1572EF0")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1562E94", Offset = "0x1562E94", VA = "0x1562E94")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x600145F")]
	[Address(RVA = "0x1562F5C", Offset = "0x1562F5C", VA = "0x1562F5C")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6001460")]
	[Address(RVA = "0x1563028", Offset = "0x1563028", VA = "0x1563028")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6001461")]
	[Address(RVA = "0x15630F4", Offset = "0x15630F4", VA = "0x15630F4")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6001462")]
	[Address(RVA = "0x15631BC", Offset = "0x15631BC", VA = "0x15631BC")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6001463")]
	[Address(RVA = "0x1563288", Offset = "0x1563288", VA = "0x1563288")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6001464")]
	[Address(RVA = "0x1563354", Offset = "0x1563354", VA = "0x1563354")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6001465")]
	[Address(RVA = "0x1563428", Offset = "0x1563428", VA = "0x1563428")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001466")]
	[Address(RVA = "0x1563500", Offset = "0x1563500", VA = "0x1563500")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6001467")]
	[Address(RVA = "0x1572F70", Offset = "0x1572F70", VA = "0x1572F70")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6001468")]
	[Address(RVA = "0x1572FE4", Offset = "0x1572FE4", VA = "0x1572FE4")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6001469")]
	[Address(RVA = "0x1573058", Offset = "0x1573058", VA = "0x1573058")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600146A")]
	[Address(RVA = "0x15730D8", Offset = "0x15730D8", VA = "0x15730D8")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x600146B")]
	[Address(RVA = "0x157314C", Offset = "0x157314C", VA = "0x157314C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600146C")]
	[Address(RVA = "0x15731DC", Offset = "0x15731DC", VA = "0x15731DC")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600146D")]
	[Address(RVA = "0x157325C", Offset = "0x157325C", VA = "0x157325C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600146E")]
	[Address(RVA = "0x15732EC", Offset = "0x15732EC", VA = "0x15732EC")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600146F")]
	[Address(RVA = "0x157336C", Offset = "0x157336C", VA = "0x157336C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001470")]
	[Address(RVA = "0x15733FC", Offset = "0x15733FC", VA = "0x15733FC")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001471")]
	[Address(RVA = "0x157347C", Offset = "0x157347C", VA = "0x157347C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001472")]
	[Address(RVA = "0x157350C", Offset = "0x157350C", VA = "0x157350C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001473")]
	[Address(RVA = "0x157358C", Offset = "0x157358C", VA = "0x157358C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001474")]
	[Address(RVA = "0x157361C", Offset = "0x157361C", VA = "0x157361C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001475")]
	[Address(RVA = "0x157369C", Offset = "0x157369C", VA = "0x157369C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001476")]
	[Address(RVA = "0x157372C", Offset = "0x157372C", VA = "0x157372C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001477")]
	[Address(RVA = "0x15737AC", Offset = "0x15737AC", VA = "0x15737AC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001478")]
	[Address(RVA = "0x157383C", Offset = "0x157383C", VA = "0x157383C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001479")]
	[Address(RVA = "0x15738BC", Offset = "0x15738BC", VA = "0x15738BC")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600147A")]
	[Address(RVA = "0x157393C", Offset = "0x157393C", VA = "0x157393C")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600147B")]
	[Address(RVA = "0x15739B0", Offset = "0x15739B0", VA = "0x15739B0")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600147C")]
	[Address(RVA = "0x1573A48", Offset = "0x1573A48", VA = "0x1573A48")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600147D")]
	[Address(RVA = "0x1573AC8", Offset = "0x1573AC8", VA = "0x1573AC8")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600147E")]
	[Address(RVA = "0x1573B58", Offset = "0x1573B58", VA = "0x1573B58")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600147F")]
	[Address(RVA = "0x1573BFC", Offset = "0x1573BFC", VA = "0x1573BFC")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001480")]
	[Address(RVA = "0x1573C8C", Offset = "0x1573C8C", VA = "0x1573C8C")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001481")]
	[Address(RVA = "0x1573D0C", Offset = "0x1573D0C", VA = "0x1573D0C")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6001482")]
	[Address(RVA = "0x1573D80", Offset = "0x1573D80", VA = "0x1573D80")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001483")]
	[Address(RVA = "0x1573E10", Offset = "0x1573E10", VA = "0x1573E10")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001484")]
	[Address(RVA = "0x1573E90", Offset = "0x1573E90", VA = "0x1573E90")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001485")]
	[Address(RVA = "0x1573F20", Offset = "0x1573F20", VA = "0x1573F20")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001486")]
	[Address(RVA = "0x1573FA0", Offset = "0x1573FA0", VA = "0x1573FA0")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001487")]
	[Address(RVA = "0x1574030", Offset = "0x1574030", VA = "0x1574030")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001488")]
	[Address(RVA = "0x15740B0", Offset = "0x15740B0", VA = "0x15740B0")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001489")]
	[Address(RVA = "0x1574140", Offset = "0x1574140", VA = "0x1574140")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148A")]
	[Address(RVA = "0x15741C0", Offset = "0x15741C0", VA = "0x15741C0")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600148B")]
	[Address(RVA = "0x1574250", Offset = "0x1574250", VA = "0x1574250")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148C")]
	[Address(RVA = "0x15742D0", Offset = "0x15742D0", VA = "0x15742D0")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600148D")]
	[Address(RVA = "0x1574360", Offset = "0x1574360", VA = "0x1574360")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148E")]
	[Address(RVA = "0x15743E0", Offset = "0x15743E0", VA = "0x15743E0")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600148F")]
	[Address(RVA = "0x1574470", Offset = "0x1574470", VA = "0x1574470")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001490")]
	[Address(RVA = "0x15744F0", Offset = "0x15744F0", VA = "0x15744F0")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001491")]
	[Address(RVA = "0x1574580", Offset = "0x1574580", VA = "0x1574580")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001492")]
	[Address(RVA = "0x1574600", Offset = "0x1574600", VA = "0x1574600")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001493")]
	[Address(RVA = "0x1574690", Offset = "0x1574690", VA = "0x1574690")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001494")]
	[Address(RVA = "0x1574710", Offset = "0x1574710", VA = "0x1574710")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001495")]
	[Address(RVA = "0x15747A0", Offset = "0x15747A0", VA = "0x15747A0")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001496")]
	[Address(RVA = "0x1574820", Offset = "0x1574820", VA = "0x1574820")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001497")]
	[Address(RVA = "0x15748A0", Offset = "0x15748A0", VA = "0x15748A0")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001498")]
	[Address(RVA = "0x1574914", Offset = "0x1574914", VA = "0x1574914")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001499")]
	[Address(RVA = "0x15749B4", Offset = "0x15749B4", VA = "0x15749B4")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600149A")]
	[Address(RVA = "0x1574A44", Offset = "0x1574A44", VA = "0x1574A44")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600149B")]
	[Address(RVA = "0x1574AC4", Offset = "0x1574AC4", VA = "0x1574AC4")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600149C")]
	[Address(RVA = "0x1574B54", Offset = "0x1574B54", VA = "0x1574B54")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600149D")]
	[Address(RVA = "0x1574BD4", Offset = "0x1574BD4", VA = "0x1574BD4")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600149E")]
	[Address(RVA = "0x1574C64", Offset = "0x1574C64", VA = "0x1574C64")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600149F")]
	[Address(RVA = "0x1574CE4", Offset = "0x1574CE4", VA = "0x1574CE4")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x1574D64", Offset = "0x1574D64", VA = "0x1574D64")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x1574DD8", Offset = "0x1574DD8", VA = "0x1574DD8")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x1574E68", Offset = "0x1574E68", VA = "0x1574E68")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x1574EE8", Offset = "0x1574EE8", VA = "0x1574EE8")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x1574F5C", Offset = "0x1574F5C", VA = "0x1574F5C")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x1575004", Offset = "0x1575004", VA = "0x1575004")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x1575094", Offset = "0x1575094", VA = "0x1575094")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x1575114", Offset = "0x1575114", VA = "0x1575114")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x15751A4", Offset = "0x15751A4", VA = "0x15751A4")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x1575224", Offset = "0x1575224", VA = "0x1575224")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x15752B4", Offset = "0x15752B4", VA = "0x15752B4")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x1575334", Offset = "0x1575334", VA = "0x1575334")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x15753C4", Offset = "0x15753C4", VA = "0x15753C4")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x1575444", Offset = "0x1575444", VA = "0x1575444")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x15754C4", Offset = "0x15754C4", VA = "0x15754C4")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x1575538", Offset = "0x1575538", VA = "0x1575538")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x15755C8", Offset = "0x15755C8", VA = "0x15755C8")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x1575648", Offset = "0x1575648", VA = "0x1575648")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x15756BC", Offset = "0x15756BC", VA = "0x15756BC")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x157574C", Offset = "0x157574C", VA = "0x157574C")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x15757CC", Offset = "0x15757CC", VA = "0x15757CC")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x157585C", Offset = "0x157585C", VA = "0x157585C")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x15758DC", Offset = "0x15758DC", VA = "0x15758DC")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x1575980", Offset = "0x1575980", VA = "0x1575980")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x1575A00", Offset = "0x1575A00", VA = "0x1575A00")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x1575A80", Offset = "0x1575A80", VA = "0x1575A80")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x1575B00", Offset = "0x1575B00", VA = "0x1575B00")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x1575B74", Offset = "0x1575B74", VA = "0x1575B74")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x1575C04", Offset = "0x1575C04", VA = "0x1575C04")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x1546200", Offset = "0x1546200", VA = "0x1546200")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x1546350", Offset = "0x1546350", VA = "0x1546350")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x1546444", Offset = "0x1546444", VA = "0x1546444")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x1546538", Offset = "0x1546538", VA = "0x1546538")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x154662C", Offset = "0x154662C", VA = "0x154662C")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x1546720", Offset = "0x1546720", VA = "0x1546720")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x1546814", Offset = "0x1546814", VA = "0x1546814")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x1546908", Offset = "0x1546908", VA = "0x1546908")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x15469FC", Offset = "0x15469FC", VA = "0x15469FC")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x1546AF0", Offset = "0x1546AF0", VA = "0x1546AF0")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x1546BD0", Offset = "0x1546BD0", VA = "0x1546BD0")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x1546D14", Offset = "0x1546D14", VA = "0x1546D14")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x1546E58", Offset = "0x1546E58", VA = "0x1546E58")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x1546F5C", Offset = "0x1546F5C", VA = "0x1546F5C")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x1547088", Offset = "0x1547088", VA = "0x1547088")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x1547194", Offset = "0x1547194", VA = "0x1547194")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x15460E4", Offset = "0x15460E4", VA = "0x15460E4")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x1575C84", Offset = "0x1575C84", VA = "0x1575C84")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x1575D14", Offset = "0x1575D14", VA = "0x1575D14")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x1575D94", Offset = "0x1575D94", VA = "0x1575D94")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x1575E24", Offset = "0x1575E24", VA = "0x1575E24")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x1575EA4", Offset = "0x1575EA4", VA = "0x1575EA4")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x1575F34", Offset = "0x1575F34", VA = "0x1575F34")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x1575FB4", Offset = "0x1575FB4", VA = "0x1575FB4")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1576044", Offset = "0x1576044", VA = "0x1576044")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x15760C4", Offset = "0x15760C4", VA = "0x15760C4")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x1576154", Offset = "0x1576154", VA = "0x1576154")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x15761D4", Offset = "0x15761D4", VA = "0x15761D4")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x1576248", Offset = "0x1576248", VA = "0x1576248")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x15762D8", Offset = "0x15762D8", VA = "0x15762D8")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x1576368", Offset = "0x1576368", VA = "0x1576368")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x15763F8", Offset = "0x15763F8", VA = "0x15763F8")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x1576488", Offset = "0x1576488", VA = "0x1576488")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x1576518", Offset = "0x1576518", VA = "0x1576518")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x157658C", Offset = "0x157658C", VA = "0x157658C")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x1548A9C", Offset = "0x1548A9C", VA = "0x1548A9C")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x1548BAC", Offset = "0x1548BAC", VA = "0x1548BAC")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x1548C3C", Offset = "0x1548C3C", VA = "0x1548C3C")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x1548D58", Offset = "0x1548D58", VA = "0x1548D58")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x1548DE8", Offset = "0x1548DE8", VA = "0x1548DE8")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x1548E68", Offset = "0x1548E68", VA = "0x1548E68")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x1548F5C", Offset = "0x1548F5C", VA = "0x1548F5C")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x1548FDC", Offset = "0x1548FDC", VA = "0x1548FDC")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x15490D0", Offset = "0x15490D0", VA = "0x15490D0")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x1549150", Offset = "0x1549150", VA = "0x1549150")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x1549244", Offset = "0x1549244", VA = "0x1549244")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x15492C4", Offset = "0x15492C4", VA = "0x15492C4")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x15493B8", Offset = "0x15493B8", VA = "0x15493B8")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x1549438", Offset = "0x1549438", VA = "0x1549438")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x154952C", Offset = "0x154952C", VA = "0x154952C")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x1548A1C", Offset = "0x1548A1C", VA = "0x1548A1C")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x15635CC", Offset = "0x15635CC", VA = "0x15635CC")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x1563708", Offset = "0x1563708", VA = "0x1563708")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x156383C", Offset = "0x156383C", VA = "0x156383C")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x1563984", Offset = "0x1563984", VA = "0x1563984")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x1563B04", Offset = "0x1563B04", VA = "0x1563B04")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x1563C50", Offset = "0x1563C50", VA = "0x1563C50")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x1563DB4", Offset = "0x1563DB4", VA = "0x1563DB4")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x1563EBC", Offset = "0x1563EBC", VA = "0x1563EBC")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x1563FAC", Offset = "0x1563FAC", VA = "0x1563FAC")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x1564148", Offset = "0x1564148", VA = "0x1564148")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x15641F8", Offset = "0x15641F8", VA = "0x15641F8")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x15642D8", Offset = "0x15642D8", VA = "0x15642D8")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x156440C", Offset = "0x156440C", VA = "0x156440C")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x1564558", Offset = "0x1564558", VA = "0x1564558")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x15645F0", Offset = "0x15645F0", VA = "0x15645F0")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x15646F8", Offset = "0x15646F8", VA = "0x15646F8")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001500")]
	[Address(RVA = "0x153C8E8", Offset = "0x153C8E8", VA = "0x153C8E8")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001501")]
	[Address(RVA = "0x153CA38", Offset = "0x153CA38", VA = "0x153CA38")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001502")]
	[Address(RVA = "0x153CB94", Offset = "0x153CB94", VA = "0x153CB94")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001503")]
	[Address(RVA = "0x153CCE4", Offset = "0x153CCE4", VA = "0x153CCE4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001504")]
	[Address(RVA = "0x153CE00", Offset = "0x153CE00", VA = "0x153CE00")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001505")]
	[Address(RVA = "0x153CF50", Offset = "0x153CF50", VA = "0x153CF50")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001506")]
	[Address(RVA = "0x153D06C", Offset = "0x153D06C", VA = "0x153D06C")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001507")]
	[Address(RVA = "0x153D1BC", Offset = "0x153D1BC", VA = "0x153D1BC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001508")]
	[Address(RVA = "0x153D2B0", Offset = "0x153D2B0", VA = "0x153D2B0")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001509")]
	[Address(RVA = "0x153D3A4", Offset = "0x153D3A4", VA = "0x153D3A4")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150A")]
	[Address(RVA = "0x153D498", Offset = "0x153D498", VA = "0x153D498")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600150B")]
	[Address(RVA = "0x153D58C", Offset = "0x153D58C", VA = "0x153D58C")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150C")]
	[Address(RVA = "0x153D680", Offset = "0x153D680", VA = "0x153D680")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600150D")]
	[Address(RVA = "0x153D774", Offset = "0x153D774", VA = "0x153D774")]
	public static extern int CSharp_AkPlatformInitSettings_eAudioAPI_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150E")]
	[Address(RVA = "0x153D868", Offset = "0x153D868", VA = "0x153D868")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600150F")]
	[Address(RVA = "0x153D95C", Offset = "0x153D95C", VA = "0x153D95C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001510")]
	[Address(RVA = "0x153DA50", Offset = "0x153DA50", VA = "0x153DA50")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001511")]
	[Address(RVA = "0x153DB44", Offset = "0x153DB44", VA = "0x153DB44")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001512")]
	[Address(RVA = "0x153DC38", Offset = "0x153DC38", VA = "0x153DC38")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001513")]
	[Address(RVA = "0x153DD2C", Offset = "0x153DD2C", VA = "0x153DD2C")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001514")]
	[Address(RVA = "0x153DE20", Offset = "0x153DE20", VA = "0x153DE20")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001515")]
	[Address(RVA = "0x153DF14", Offset = "0x153DF14", VA = "0x153DF14")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001516")]
	[Address(RVA = "0x153E018", Offset = "0x153E018", VA = "0x153E018")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001517")]
	[Address(RVA = "0x153C780", Offset = "0x153C780", VA = "0x153C780")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001518")]
	[Address(RVA = "0x1564830", Offset = "0x1564830", VA = "0x1564830")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001519")]
	[Address(RVA = "0x157660C", Offset = "0x157660C", VA = "0x157660C")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600151A")]
	[Address(RVA = "0x157669C", Offset = "0x157669C", VA = "0x157669C")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151B")]
	[Address(RVA = "0x157671C", Offset = "0x157671C", VA = "0x157671C")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x600151C")]
	[Address(RVA = "0x1576790", Offset = "0x1576790", VA = "0x1576790")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151D")]
	[Address(RVA = "0x1576810", Offset = "0x1576810", VA = "0x1576810")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600151E")]
	[Address(RVA = "0x15768A0", Offset = "0x15768A0", VA = "0x15768A0")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151F")]
	[Address(RVA = "0x1576920", Offset = "0x1576920", VA = "0x1576920")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001520")]
	[Address(RVA = "0x15769B0", Offset = "0x15769B0", VA = "0x15769B0")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001521")]
	[Address(RVA = "0x1576A30", Offset = "0x1576A30", VA = "0x1576A30")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001522")]
	[Address(RVA = "0x1576AC0", Offset = "0x1576AC0", VA = "0x1576AC0")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001523")]
	[Address(RVA = "0x1576B40", Offset = "0x1576B40", VA = "0x1576B40")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001524")]
	[Address(RVA = "0x1576BD0", Offset = "0x1576BD0", VA = "0x1576BD0")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001525")]
	[Address(RVA = "0x1576C50", Offset = "0x1576C50", VA = "0x1576C50")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001526")]
	[Address(RVA = "0x1576CE0", Offset = "0x1576CE0", VA = "0x1576CE0")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001527")]
	[Address(RVA = "0x1576D60", Offset = "0x1576D60", VA = "0x1576D60")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001528")]
	[Address(RVA = "0x1576DF0", Offset = "0x1576DF0", VA = "0x1576DF0")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001529")]
	[Address(RVA = "0x1576E70", Offset = "0x1576E70", VA = "0x1576E70")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600152A")]
	[Address(RVA = "0x1576F00", Offset = "0x1576F00", VA = "0x1576F00")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600152B")]
	[Address(RVA = "0x1576F80", Offset = "0x1576F80", VA = "0x1576F80")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600152C")]
	[Address(RVA = "0x1577010", Offset = "0x1577010", VA = "0x1577010")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600152D")]
	[Address(RVA = "0x1577090", Offset = "0x1577090", VA = "0x1577090")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600152E")]
	[Address(RVA = "0x1577120", Offset = "0x1577120", VA = "0x1577120")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600152F")]
	[Address(RVA = "0x15771A0", Offset = "0x15771A0", VA = "0x15771A0")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001530")]
	[Address(RVA = "0x1577230", Offset = "0x1577230", VA = "0x1577230")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001531")]
	[Address(RVA = "0x15772B8", Offset = "0x15772B8", VA = "0x15772B8")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001532")]
	[Address(RVA = "0x1577348", Offset = "0x1577348", VA = "0x1577348")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001533")]
	[Address(RVA = "0x15773C8", Offset = "0x15773C8", VA = "0x15773C8")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6001534")]
	[Address(RVA = "0x157743C", Offset = "0x157743C", VA = "0x157743C")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001535")]
	[Address(RVA = "0x15774BC", Offset = "0x15774BC", VA = "0x15774BC")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001536")]
	[Address(RVA = "0x157754C", Offset = "0x157754C", VA = "0x157754C")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001537")]
	[Address(RVA = "0x15775CC", Offset = "0x15775CC", VA = "0x15775CC")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001538")]
	[Address(RVA = "0x157765C", Offset = "0x157765C", VA = "0x157765C")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001539")]
	[Address(RVA = "0x15776DC", Offset = "0x15776DC", VA = "0x15776DC")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600153A")]
	[Address(RVA = "0x157776C", Offset = "0x157776C", VA = "0x157776C")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153B")]
	[Address(RVA = "0x15777EC", Offset = "0x15777EC", VA = "0x15777EC")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600153C")]
	[Address(RVA = "0x157787C", Offset = "0x157787C", VA = "0x157787C")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153D")]
	[Address(RVA = "0x15778FC", Offset = "0x15778FC", VA = "0x15778FC")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x600153E")]
	[Address(RVA = "0x1577970", Offset = "0x1577970", VA = "0x1577970")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153F")]
	[Address(RVA = "0x1564920", Offset = "0x1564920", VA = "0x1564920")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6001540")]
	[Address(RVA = "0x15649FC", Offset = "0x15649FC", VA = "0x15649FC")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001541")]
	[Address(RVA = "0x1564ADC", Offset = "0x1564ADC", VA = "0x1564ADC")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6001542")]
	[Address(RVA = "0x153BD84", Offset = "0x153BD84", VA = "0x153BD84")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001543")]
	[Address(RVA = "0x153BED4", Offset = "0x153BED4", VA = "0x153BED4")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001544")]
	[Address(RVA = "0x153C030", Offset = "0x153C030", VA = "0x153C030")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001545")]
	[Address(RVA = "0x153C180", Offset = "0x153C180", VA = "0x153C180")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001546")]
	[Address(RVA = "0x153C274", Offset = "0x153C274", VA = "0x153C274")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001547")]
	[Address(RVA = "0x153C368", Offset = "0x153C368", VA = "0x153C368")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001548")]
	[Address(RVA = "0x153C464", Offset = "0x153C464", VA = "0x153C464")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6001549")]
	[Address(RVA = "0x153BC1C", Offset = "0x153BC1C", VA = "0x153BC1C")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154A")]
	[Address(RVA = "0x15779F0", Offset = "0x15779F0", VA = "0x15779F0")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x600154B")]
	[Address(RVA = "0x1577A64", Offset = "0x1577A64", VA = "0x1577A64")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154C")]
	[Address(RVA = "0x1577AE4", Offset = "0x1577AE4", VA = "0x1577AE4")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x600154D")]
	[Address(RVA = "0x1577B58", Offset = "0x1577B58", VA = "0x1577B58")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600154E")]
	[Address(RVA = "0x1577BE8", Offset = "0x1577BE8", VA = "0x1577BE8")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154F")]
	[Address(RVA = "0x1577C68", Offset = "0x1577C68", VA = "0x1577C68")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001550")]
	[Address(RVA = "0x1577CF8", Offset = "0x1577CF8", VA = "0x1577CF8")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001551")]
	[Address(RVA = "0x1577D78", Offset = "0x1577D78", VA = "0x1577D78")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001552")]
	[Address(RVA = "0x1577E08", Offset = "0x1577E08", VA = "0x1577E08")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001553")]
	[Address(RVA = "0x1577E88", Offset = "0x1577E88", VA = "0x1577E88")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001554")]
	[Address(RVA = "0x1577F18", Offset = "0x1577F18", VA = "0x1577F18")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001555")]
	[Address(RVA = "0x1577F98", Offset = "0x1577F98", VA = "0x1577F98")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001556")]
	[Address(RVA = "0x1578028", Offset = "0x1578028", VA = "0x1578028")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001557")]
	[Address(RVA = "0x15780B0", Offset = "0x15780B0", VA = "0x15780B0")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001558")]
	[Address(RVA = "0x1578154", Offset = "0x1578154", VA = "0x1578154")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001559")]
	[Address(RVA = "0x15781D4", Offset = "0x15781D4", VA = "0x15781D4")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600155A")]
	[Address(RVA = "0x1578254", Offset = "0x1578254", VA = "0x1578254")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x600155B")]
	[Address(RVA = "0x15782C8", Offset = "0x15782C8", VA = "0x15782C8")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600155C")]
	[Address(RVA = "0x1578348", Offset = "0x1578348", VA = "0x1578348")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600155D")]
	[Address(RVA = "0x15783D8", Offset = "0x15783D8", VA = "0x15783D8")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600155E")]
	[Address(RVA = "0x1578458", Offset = "0x1578458", VA = "0x1578458")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600155F")]
	[Address(RVA = "0x15784E8", Offset = "0x15784E8", VA = "0x15784E8")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001560")]
	[Address(RVA = "0x1578568", Offset = "0x1578568", VA = "0x1578568")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001561")]
	[Address(RVA = "0x15785F8", Offset = "0x15785F8", VA = "0x15785F8")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001562")]
	[Address(RVA = "0x1578678", Offset = "0x1578678", VA = "0x1578678")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001563")]
	[Address(RVA = "0x1578708", Offset = "0x1578708", VA = "0x1578708")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001564")]
	[Address(RVA = "0x1578788", Offset = "0x1578788", VA = "0x1578788")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001565")]
	[Address(RVA = "0x1578818", Offset = "0x1578818", VA = "0x1578818")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001566")]
	[Address(RVA = "0x1578898", Offset = "0x1578898", VA = "0x1578898")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001567")]
	[Address(RVA = "0x1578928", Offset = "0x1578928", VA = "0x1578928")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001568")]
	[Address(RVA = "0x15789A8", Offset = "0x15789A8", VA = "0x15789A8")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001569")]
	[Address(RVA = "0x1578A38", Offset = "0x1578A38", VA = "0x1578A38")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156A")]
	[Address(RVA = "0x1578AB8", Offset = "0x1578AB8", VA = "0x1578AB8")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600156B")]
	[Address(RVA = "0x1578B48", Offset = "0x1578B48", VA = "0x1578B48")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156C")]
	[Address(RVA = "0x1578BC8", Offset = "0x1578BC8", VA = "0x1578BC8")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600156D")]
	[Address(RVA = "0x1578C58", Offset = "0x1578C58", VA = "0x1578C58")]
	public static extern bool CSharp_AkInitializationSettings_useAsyncOpen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156E")]
	[Address(RVA = "0x1578CE0", Offset = "0x1578CE0", VA = "0x1578CE0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600156F")]
	[Address(RVA = "0x1578D54", Offset = "0x1578D54", VA = "0x1578D54")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001570")]
	[Address(RVA = "0x1578DD4", Offset = "0x1578DD4", VA = "0x1578DD4")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001571")]
	[Address(RVA = "0x1578E7C", Offset = "0x1578E7C", VA = "0x1578E7C")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001572")]
	[Address(RVA = "0x1578F2C", Offset = "0x1578F2C", VA = "0x1578F2C")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001573")]
	[Address(RVA = "0x1578FC4", Offset = "0x1578FC4", VA = "0x1578FC4")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001574")]
	[Address(RVA = "0x1579044", Offset = "0x1579044", VA = "0x1579044")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001575")]
	[Address(RVA = "0x15790D4", Offset = "0x15790D4", VA = "0x15790D4")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001576")]
	[Address(RVA = "0x1579148", Offset = "0x1579148", VA = "0x1579148")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001577")]
	[Address(RVA = "0x15791D8", Offset = "0x15791D8", VA = "0x15791D8")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001578")]
	[Address(RVA = "0x1579258", Offset = "0x1579258", VA = "0x1579258")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001579")]
	[Address(RVA = "0x15792E8", Offset = "0x15792E8", VA = "0x15792E8")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600157A")]
	[Address(RVA = "0x1579368", Offset = "0x1579368", VA = "0x1579368")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600157B")]
	[Address(RVA = "0x157940C", Offset = "0x157940C", VA = "0x157940C")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600157C")]
	[Address(RVA = "0x157948C", Offset = "0x157948C", VA = "0x157948C")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600157D")]
	[Address(RVA = "0x157951C", Offset = "0x157951C", VA = "0x157951C")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600157E")]
	[Address(RVA = "0x157959C", Offset = "0x157959C", VA = "0x157959C")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600157F")]
	[Address(RVA = "0x157962C", Offset = "0x157962C", VA = "0x157962C")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001580")]
	[Address(RVA = "0x15796AC", Offset = "0x15796AC", VA = "0x15796AC")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001581")]
	[Address(RVA = "0x157973C", Offset = "0x157973C", VA = "0x157973C")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001582")]
	[Address(RVA = "0x1564BF4", Offset = "0x1564BF4", VA = "0x1564BF4")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001583")]
	[Address(RVA = "0x1564D48", Offset = "0x1564D48", VA = "0x1564D48")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001584")]
	[Address(RVA = "0x1564E3C", Offset = "0x1564E3C", VA = "0x1564E3C")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001585")]
	[Address(RVA = "0x1564F14", Offset = "0x1564F14", VA = "0x1564F14")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001586")]
	[Address(RVA = "0x1565020", Offset = "0x1565020", VA = "0x1565020")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001587")]
	[Address(RVA = "0x156513C", Offset = "0x156513C", VA = "0x156513C")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001588")]
	[Address(RVA = "0x1565268", Offset = "0x1565268", VA = "0x1565268")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001589")]
	[Address(RVA = "0x1565374", Offset = "0x1565374", VA = "0x1565374")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600158A")]
	[Address(RVA = "0x156546C", Offset = "0x156546C", VA = "0x156546C")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600158B")]
	[Address(RVA = "0x156557C", Offset = "0x156557C", VA = "0x156557C")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600158C")]
	[Address(RVA = "0x156568C", Offset = "0x156568C", VA = "0x156568C")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600158D")]
	[Address(RVA = "0x1565784", Offset = "0x1565784", VA = "0x1565784")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600158E")]
	[Address(RVA = "0x156587C", Offset = "0x156587C", VA = "0x156587C")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600158F")]
	[Address(RVA = "0x156598C", Offset = "0x156598C", VA = "0x156598C")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001590")]
	[Address(RVA = "0x1565ADC", Offset = "0x1565ADC", VA = "0x1565ADC")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001591")]
	[Address(RVA = "0x1565BB8", Offset = "0x1565BB8", VA = "0x1565BB8")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6001592")]
	[Address(RVA = "0x1565C8C", Offset = "0x1565C8C", VA = "0x1565C8C")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001593")]
	[Address(RVA = "0x1565D64", Offset = "0x1565D64", VA = "0x1565D64")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x6001594")]
	[Address(RVA = "0x1565EE4", Offset = "0x1565EE4", VA = "0x1565EE4")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001595")]
	[Address(RVA = "0x156606C", Offset = "0x156606C", VA = "0x156606C")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001596")]
	[Address(RVA = "0x1566338", Offset = "0x1566338", VA = "0x1566338")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001597")]
	[Address(RVA = "0x1566448", Offset = "0x1566448", VA = "0x1566448")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001598")]
	[Address(RVA = "0x1566590", Offset = "0x1566590", VA = "0x1566590")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001599")]
	[Address(RVA = "0x1566714", Offset = "0x1566714", VA = "0x1566714")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159A")]
	[Address(RVA = "0x1566808", Offset = "0x1566808", VA = "0x1566808")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159B")]
	[Address(RVA = "0x1566910", Offset = "0x1566910", VA = "0x1566910")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159C")]
	[Address(RVA = "0x1566A04", Offset = "0x1566A04", VA = "0x1566A04")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159D")]
	[Address(RVA = "0x1566B0C", Offset = "0x1566B0C", VA = "0x1566B0C")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159E")]
	[Address(RVA = "0x1566BE4", Offset = "0x1566BE4", VA = "0x1566BE4")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x600159F")]
	[Address(RVA = "0x1566CB0", Offset = "0x1566CB0", VA = "0x1566CB0")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x1566E30", Offset = "0x1566E30", VA = "0x1566E30")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x1566FE4", Offset = "0x1566FE4", VA = "0x1566FE4")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x1567088", Offset = "0x1567088", VA = "0x1567088")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x1567148", Offset = "0x1567148", VA = "0x1567148")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x15672A0", Offset = "0x15672A0", VA = "0x15672A0")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x15673C4", Offset = "0x15673C4", VA = "0x15673C4")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x156758C", Offset = "0x156758C", VA = "0x156758C")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x153E120", Offset = "0x153E120", VA = "0x153E120")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x15797BC", Offset = "0x15797BC", VA = "0x15797BC")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x157983C", Offset = "0x157983C", VA = "0x157983C")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x15798BC", Offset = "0x15798BC", VA = "0x15798BC")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x15343E4", Offset = "0x15343E4", VA = "0x15343E4")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x157993C", Offset = "0x157993C", VA = "0x157993C")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x15799BC", Offset = "0x15799BC", VA = "0x15799BC")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x15373E8", Offset = "0x15373E8", VA = "0x15373E8")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x1536528", Offset = "0x1536528", VA = "0x1536528")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x1579A3C", Offset = "0x1579A3C", VA = "0x1579A3C")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x2000333")]
public class AkSoundEngine
{
	[Token(Token = "0x2000334")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x2000335")]
	private class AutoObject
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1761F78", Offset = "0x1761F78", VA = "0x1761F78")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x17620A8", Offset = "0x17620A8", VA = "0x17620A8", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40010F9")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40010FA")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40010FB")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40010FC")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40010FD")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40010FE")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40010FF")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x4001100")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x4001101")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x4001102")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x4001103")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x4001104")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x4001105")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x4001106")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x4001107")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x4001108")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x4001109")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x400110A")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x400110B")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x400110C")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x400110D")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x400110E")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x400110F")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x4001110")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x4001111")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x4001112")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x4001113")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x4001114")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x4001115")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x4001116")]
	public const int NULL = 0;

	[Token(Token = "0x4001117")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x4001118")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x4001119")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x400111A")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x400111B")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x400111C")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x400111D")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x400111E")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x400111F")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x4001120")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x4001121")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x4001122")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x4001123")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x4001124")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x4001125")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x4001126")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x4001127")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x4001128")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4001129")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x400112A")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x400112B")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x400112C")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x400112D")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x400112E")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x400112F")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4001130")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4001131")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4001132")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x4001133")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x4001134")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x4001135")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x4001136")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4001137")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4001138")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4001139")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x400113A")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x400113B")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x400113C")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x400113D")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x400113E")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x400113F")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4001140")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4001141")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4001142")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x4001143")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x4001144")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x4001145")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x4001146")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4001147")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4001148")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4001149")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x400114A")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x400114B")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x400114C")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x400114D")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x400114E")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x400114F")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4001150")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4001151")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4001152")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4001153")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x4001154")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x4001155")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x4001156")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4001157")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4001158")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4001159")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x400115A")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x400115B")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x400115C")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x400115D")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x400115E")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x400115F")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4001160")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4001161")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4001162")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x4001163")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x4001164")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x4001165")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x4001166")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4001167")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4001168")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4001169")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x400116A")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x400116B")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x400116C")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x400116D")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x400116E")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x400116F")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4001170")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4001171")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4001172")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x4001173")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x4001174")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x4001175")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x4001176")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4001177")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4001178")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4001179")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x400117A")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x400117B")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x400117C")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x400117D")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x400117E")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x400117F")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4001180")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4001181")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4001182")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x4001183")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x4001184")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x4001185")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x4001186")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4001187")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4001188")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4001189")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x400118A")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x400118B")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x400118C")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x400118D")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x400118E")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x400118F")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4001190")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4001191")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4001192")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x4001193")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x4001194")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x4001195")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x4001196")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4001197")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4001198")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4001199")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x400119A")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x400119B")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x400119C")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x400119D")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x400119E")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x400119F")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x40011A0")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x40011A1")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x40011A2")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x40011A3")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x40011A4")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x40011A5")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x40011A6")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x40011A7")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x40011A8")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x40011A9")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x40011AA")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x40011AB")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x40011AC")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x40011AD")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x40011AE")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x40011AF")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x40011B0")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x40011B1")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x40011B2")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x40011B3")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x40011B4")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x40011B5")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x40011B6")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x40011B7")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x40011B8")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x40011B9")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x40011BA")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x40011BB")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x40011BC")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x40011BD")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x40011BE")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x40011BF")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x40011C0")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x40011C1")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x40011C2")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x40011C3")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x40011C4")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x40011C5")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x40011C6")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x40011C7")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x40011C8")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x40011C9")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x40011CA")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x40011CB")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x40011CC")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x40011CD")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x40011CE")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x40011CF")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x40011D0")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x40011D1")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x40011D2")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x40011D3")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x40011D4")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40011D5")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40011D6")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40011D7")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40011D8")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40011D9")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40011DA")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40011DB")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40011DC")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40011DD")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40011DE")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40011DF")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40011E0")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40011E1")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40011E2")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40011E3")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40011E4")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40011E5")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40011E6")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40011E7")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40011E8")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40011E9")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40011EA")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40011EB")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40011EC")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40011ED")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40011EE")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40011EF")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40011F0")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40011F1")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40011F2")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40011F3")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40011F4")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40011F5")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40011F6")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40011F7")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40011F8")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40011F9")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40011FA")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40011FB")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40011FC")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40011FD")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40011FE")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40011FF")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x4001200")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x4001201")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x4001202")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x4001203")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x4001204")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x4001205")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x4001206")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x4001207")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x4001208")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x4001209")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x400120A")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x400120B")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x400120C")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x400120D")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x400120E")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x400120F")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x4001210")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x4001211")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x4001212")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x4001213")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x4001214")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x4001215")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x4001216")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x4001217")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x4001218")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x4001219")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x400121A")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x400121B")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x400121C")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x400121D")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x400121E")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x400121F")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x4001220")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x4001221")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x4001222")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x4001223")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x4001224")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x4001225")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x4001226")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x4001227")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x4001228")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x4001229")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x400122A")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x400122B")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x400122C")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x400122D")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x400122E")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x400122F")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4001230")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x4001231")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x4001232")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x4001233")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x4001234")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x4001235")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x4001236")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x4001237")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x4001238")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x4001239")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x400123A")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x400123B")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x400123C")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x400123D")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x400123E")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x400123F")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4001240")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x4001241")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x4001242")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x4001243")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x4001244")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x4001245")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x4001246")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x4001247")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x4001249")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x400124A")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x400124B")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x400124C")]
	public const string Deprecation_2019_1_8 = "This functionality is deprecated as of Wwise v2019.1.8 and will be removed in a future release.";

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170001FF")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x154DB60", Offset = "0x154DB60", VA = "0x154DB60")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000200")]
	public static ushort AK_INT
	{
		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x154DC2C", Offset = "0x154DC2C", VA = "0x154DC2C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000201")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x154DCF8", Offset = "0x154DCF8", VA = "0x154DCF8")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000202")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x154DDC4", Offset = "0x154DDC4", VA = "0x154DDC4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000203")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x154DE90", Offset = "0x154DE90", VA = "0x154DE90")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000204")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x154DF5C", Offset = "0x154DF5C", VA = "0x154DF5C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000205")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x154E028", Offset = "0x154E028", VA = "0x154E028")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000206")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x154E0F4", Offset = "0x154E0F4", VA = "0x154E0F4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000207")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x600168A")]
		[Address(RVA = "0x155EF60", Offset = "0x155EF60", VA = "0x155EF60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000208")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x600168B")]
		[Address(RVA = "0x155F02C", Offset = "0x155F02C", VA = "0x155F02C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000209")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1562E3C", Offset = "0x1562E3C", VA = "0x1562E3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020A")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1562F04", Offset = "0x1562F04", VA = "0x1562F04")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020B")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1562FD0", Offset = "0x1562FD0", VA = "0x1562FD0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020C")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x156309C", Offset = "0x156309C", VA = "0x156309C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020D")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1563164", Offset = "0x1563164", VA = "0x1563164")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020E")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1563230", Offset = "0x1563230", VA = "0x1563230")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020F")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x15632FC", Offset = "0x15632FC", VA = "0x15632FC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000210")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x15634A8", Offset = "0x15634A8", VA = "0x15634A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x15633C8", Offset = "0x15633C8", VA = "0x15633C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1567774", Offset = "0x1567774", VA = "0x1567774")]
		set
		{
		}
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x154E1C0", Offset = "0x154E1C0", VA = "0x154E1C0")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x154E464", Offset = "0x154E464", VA = "0x154E464")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x154E688", Offset = "0x154E688", VA = "0x154E688")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x154E7F4", Offset = "0x154E7F4", VA = "0x154E7F4")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x154E8D4", Offset = "0x154E8D4", VA = "0x154E8D4")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x154E9E4", Offset = "0x154E9E4", VA = "0x154E9E4")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x154EAE4", Offset = "0x154EAE4", VA = "0x154EAE4")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x154EBC4", Offset = "0x154EBC4", VA = "0x154EBC4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x154ECD4", Offset = "0x154ECD4", VA = "0x154ECD4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x154EDD4", Offset = "0x154EDD4", VA = "0x154EDD4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x154EEB4", Offset = "0x154EEB4", VA = "0x154EEB4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x154EFC4", Offset = "0x154EFC4", VA = "0x154EFC4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x154F0C4", Offset = "0x154F0C4", VA = "0x154F0C4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x154F1A4", Offset = "0x154F1A4", VA = "0x154F1A4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x154F2B4", Offset = "0x154F2B4", VA = "0x154F2B4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x154F3B4", Offset = "0x154F3B4", VA = "0x154F3B4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x154F494", Offset = "0x154F494", VA = "0x154F494")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x154F574", Offset = "0x154F574", VA = "0x154F574")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x154F684", Offset = "0x154F684", VA = "0x154F684")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x154F7BC", Offset = "0x154F7BC", VA = "0x154F7BC")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x154F89C", Offset = "0x154F89C", VA = "0x154F89C")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x154F970", Offset = "0x154F970", VA = "0x154F970")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x154FA64", Offset = "0x154FA64", VA = "0x154FA64")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x154FB84", Offset = "0x154FB84", VA = "0x154FB84")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x154FC90", Offset = "0x154FC90", VA = "0x154FC90")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x154FD90", Offset = "0x154FD90", VA = "0x154FD90")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x154FE70", Offset = "0x154FE70", VA = "0x154FE70")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x154FF70", Offset = "0x154FF70", VA = "0x154FF70")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x1550050", Offset = "0x1550050", VA = "0x1550050")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x1550188", Offset = "0x1550188", VA = "0x1550188")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x15502A0", Offset = "0x15502A0", VA = "0x15502A0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x15503D8", Offset = "0x15503D8", VA = "0x15503D8")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x1550500", Offset = "0x1550500", VA = "0x1550500")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x15505F0", Offset = "0x15505F0", VA = "0x15505F0")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x15506D0", Offset = "0x15506D0", VA = "0x15506D0")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x15507B0", Offset = "0x15507B0", VA = "0x15507B0")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x155087C", Offset = "0x155087C", VA = "0x155087C")]
	public static AKRESULT RegisterPluginDLL(string in_DllName, string in_DllPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x15509AC", Offset = "0x15509AC", VA = "0x15509AC")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x1550AA4", Offset = "0x1550AA4", VA = "0x1550AA4")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x1550B9C", Offset = "0x1550B9C", VA = "0x1550B9C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x1550E38", Offset = "0x1550E38", VA = "0x1550E38")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x15510B4", Offset = "0x15510B4", VA = "0x15510B4")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x15512E8", Offset = "0x15512E8", VA = "0x15512E8")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x1551474", Offset = "0x1551474", VA = "0x1551474")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x1551728", Offset = "0x1551728", VA = "0x1551728")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x15519BC", Offset = "0x15519BC", VA = "0x15519BC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x1551C08", Offset = "0x1551C08", VA = "0x1551C08")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x1551DAC", Offset = "0x1551DAC", VA = "0x1551DAC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x1551F50", Offset = "0x1551F50", VA = "0x1551F50")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x15520D4", Offset = "0x15520D4", VA = "0x15520D4")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x1552248", Offset = "0x1552248", VA = "0x1552248")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x155239C", Offset = "0x155239C", VA = "0x155239C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x155249C", Offset = "0x155249C", VA = "0x155249C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x1552658", Offset = "0x1552658", VA = "0x1552658")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x15527F4", Offset = "0x15527F4", VA = "0x15527F4")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x1552980", Offset = "0x1552980", VA = "0x1552980")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x1552AEC", Offset = "0x1552AEC", VA = "0x1552AEC")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x1552C04", Offset = "0x1552C04", VA = "0x1552C04")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x1552D84", Offset = "0x1552D84", VA = "0x1552D84")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x1552EC8", Offset = "0x1552EC8", VA = "0x1552EC8")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x1552FA8", Offset = "0x1552FA8", VA = "0x1552FA8")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x1553074", Offset = "0x1553074", VA = "0x1553074")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x1553184", Offset = "0x1553184", VA = "0x1553184")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x15532AC", Offset = "0x15532AC", VA = "0x15532AC")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x155338C", Offset = "0x155338C", VA = "0x155338C")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x1553484", Offset = "0x1553484", VA = "0x1553484")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x1553594", Offset = "0x1553594", VA = "0x1553594")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x15536BC", Offset = "0x15536BC", VA = "0x15536BC")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x1553840", Offset = "0x1553840", VA = "0x1553840")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x15539B4", Offset = "0x15539B4", VA = "0x15539B4")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x1553B08", Offset = "0x1553B08", VA = "0x1553B08")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x1553CA4", Offset = "0x1553CA4", VA = "0x1553CA4")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x1553E30", Offset = "0x1553E30", VA = "0x1553E30")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x1553F9C", Offset = "0x1553F9C", VA = "0x1553F9C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x1554130", Offset = "0x1554130", VA = "0x1554130")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x15542A4", Offset = "0x15542A4", VA = "0x15542A4")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x1554408", Offset = "0x1554408", VA = "0x1554408")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x15545B4", Offset = "0x15545B4", VA = "0x15545B4")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x1554740", Offset = "0x1554740", VA = "0x1554740")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x15548BC", Offset = "0x15548BC", VA = "0x15548BC")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x1554920", Offset = "0x1554920", VA = "0x1554920")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x1554A44", Offset = "0x1554A44", VA = "0x1554A44")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x1554AA8", Offset = "0x1554AA8", VA = "0x1554AA8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x1554BB8", Offset = "0x1554BB8", VA = "0x1554BB8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x1554CB8", Offset = "0x1554CB8", VA = "0x1554CB8")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x1554DC8", Offset = "0x1554DC8", VA = "0x1554DC8")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x1554EEC", Offset = "0x1554EEC", VA = "0x1554EEC")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x1554FB4", Offset = "0x1554FB4", VA = "0x1554FB4")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x15550C4", Offset = "0x15550C4", VA = "0x15550C4")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x15551C4", Offset = "0x15551C4", VA = "0x15551C4")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x15552A4", Offset = "0x15552A4", VA = "0x15552A4")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x15553D4", Offset = "0x15553D4", VA = "0x15553D4")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x15554E4", Offset = "0x15554E4", VA = "0x15554E4")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x15555E4", Offset = "0x15555E4", VA = "0x15555E4")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x15556C4", Offset = "0x15556C4", VA = "0x15556C4")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x15557A4", Offset = "0x15557A4", VA = "0x15557A4")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x1555878", Offset = "0x1555878", VA = "0x1555878")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x1555A2C", Offset = "0x1555A2C", VA = "0x1555A2C")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x1555AF8", Offset = "0x1555AF8", VA = "0x1555AF8")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x1555C6C", Offset = "0x1555C6C", VA = "0x1555C6C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x1555DC0", Offset = "0x1555DC0", VA = "0x1555DC0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x1555F34", Offset = "0x1555F34", VA = "0x1555F34")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x1556088", Offset = "0x1556088", VA = "0x1556088")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x15561C4", Offset = "0x15561C4", VA = "0x15561C4")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x1556290", Offset = "0x1556290", VA = "0x1556290")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x1556390", Offset = "0x1556390", VA = "0x1556390")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x15564B8", Offset = "0x15564B8", VA = "0x15564B8")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x15565B8", Offset = "0x15565B8", VA = "0x15565B8")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x15566C8", Offset = "0x15566C8", VA = "0x15566C8")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x15567F8", Offset = "0x15567F8", VA = "0x15567F8")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x15569B4", Offset = "0x15569B4", VA = "0x15569B4")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x1556B48", Offset = "0x1556B48", VA = "0x1556B48")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x1556CEC", Offset = "0x1556CEC", VA = "0x1556CEC")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x1556EB0", Offset = "0x1556EB0", VA = "0x1556EB0")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x1556FD8", Offset = "0x1556FD8", VA = "0x1556FD8")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x15570F0", Offset = "0x15570F0", VA = "0x15570F0")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x1535224", Offset = "0x1535224", VA = "0x1535224")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x1557290", Offset = "0x1557290", VA = "0x1557290")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x155743C", Offset = "0x155743C", VA = "0x155743C")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x15575D0", Offset = "0x15575D0", VA = "0x15575D0")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x1557634", Offset = "0x1557634", VA = "0x1557634")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x1557760", Offset = "0x1557760", VA = "0x1557760")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x155787C", Offset = "0x155787C", VA = "0x155787C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x155798C", Offset = "0x155798C", VA = "0x155798C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x1557A8C", Offset = "0x1557A8C", VA = "0x1557A8C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x1557C4C", Offset = "0x1557C4C", VA = "0x1557C4C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x1557DFC", Offset = "0x1557DFC", VA = "0x1557DFC")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x1557FA0", Offset = "0x1557FA0", VA = "0x1557FA0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x1558134", Offset = "0x1558134", VA = "0x1558134")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x1558200", Offset = "0x1558200", VA = "0x1558200")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x155856C", Offset = "0x155856C", VA = "0x155856C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x1558684", Offset = "0x1558684", VA = "0x1558684")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x1558A84", Offset = "0x1558A84", VA = "0x1558A84")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x1558C30", Offset = "0x1558C30", VA = "0x1558C30")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x1558D48", Offset = "0x1558D48", VA = "0x1558D48")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x1558E60", Offset = "0x1558E60", VA = "0x1558E60")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x1559210", Offset = "0x1559210", VA = "0x1559210")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x1559358", Offset = "0x1559358", VA = "0x1559358")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x155979C", Offset = "0x155979C", VA = "0x155979C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x1559978", Offset = "0x1559978", VA = "0x1559978")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x1559AD4", Offset = "0x1559AD4", VA = "0x1559AD4")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x1559C30", Offset = "0x1559C30", VA = "0x1559C30")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x1559D54", Offset = "0x1559D54", VA = "0x1559D54")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x1559E78", Offset = "0x1559E78", VA = "0x1559E78")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x1559F9C", Offset = "0x1559F9C", VA = "0x1559F9C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x155A12C", Offset = "0x155A12C", VA = "0x155A12C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x155A294", Offset = "0x155A294", VA = "0x155A294")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x155A438", Offset = "0x155A438", VA = "0x155A438")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x155A5CC", Offset = "0x155A5CC", VA = "0x155A5CC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x155A740", Offset = "0x155A740", VA = "0x155A740")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x155A8A4", Offset = "0x155A8A4", VA = "0x155A8A4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x155A9A4", Offset = "0x155A9A4", VA = "0x155A9A4")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x155AB60", Offset = "0x155AB60", VA = "0x155AB60")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x155AD0C", Offset = "0x155AD0C", VA = "0x155AD0C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x155AE98", Offset = "0x155AE98", VA = "0x155AE98")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x155B014", Offset = "0x155B014", VA = "0x155B014")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x155B12C", Offset = "0x155B12C", VA = "0x155B12C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x155B28C", Offset = "0x155B28C", VA = "0x155B28C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x155B3DC", Offset = "0x155B3DC", VA = "0x155B3DC")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x155B50C", Offset = "0x155B50C", VA = "0x155B50C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x155B62C", Offset = "0x155B62C", VA = "0x155B62C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x155B7A4", Offset = "0x155B7A4", VA = "0x155B7A4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x155B90C", Offset = "0x155B90C", VA = "0x155B90C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x155BA54", Offset = "0x155BA54", VA = "0x155BA54")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x155BB8C", Offset = "0x155BB8C", VA = "0x155BB8C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x155BD10", Offset = "0x155BD10", VA = "0x155BD10")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x155BE84", Offset = "0x155BE84", VA = "0x155BE84")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x155BFD8", Offset = "0x155BFD8", VA = "0x155BFD8")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x155C11C", Offset = "0x155C11C", VA = "0x155C11C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x155C1FC", Offset = "0x155C1FC", VA = "0x155C1FC")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x155C398", Offset = "0x155C398", VA = "0x155C398")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x155C524", Offset = "0x155C524", VA = "0x155C524")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x155C690", Offset = "0x155C690", VA = "0x155C690")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x155C7EC", Offset = "0x155C7EC", VA = "0x155C7EC")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x155C8E4", Offset = "0x155C8E4", VA = "0x155C8E4")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x155CA38", Offset = "0x155CA38", VA = "0x155CA38")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x155CBB8", Offset = "0x155CBB8", VA = "0x155CBB8")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x155CCFC", Offset = "0x155CCFC", VA = "0x155CCFC")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x155CE58", Offset = "0x155CE58", VA = "0x155CE58")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x155CF58", Offset = "0x155CF58", VA = "0x155CF58")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x155D088", Offset = "0x155D088", VA = "0x155D088")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x155D1E8", Offset = "0x155D1E8", VA = "0x155D1E8")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x155D364", Offset = "0x155D364", VA = "0x155D364")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x155D474", Offset = "0x155D474", VA = "0x155D474")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x155D584", Offset = "0x155D584", VA = "0x155D584")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x155D6AC", Offset = "0x155D6AC", VA = "0x155D6AC")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x155D7AC", Offset = "0x155D7AC", VA = "0x155D7AC")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x155D8C4", Offset = "0x155D8C4", VA = "0x155D8C4")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x155D9D8", Offset = "0x155D9D8", VA = "0x155D9D8")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x155DB04", Offset = "0x155DB04", VA = "0x155DB04")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x155DC90", Offset = "0x155DC90", VA = "0x155DC90")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x155DE34", Offset = "0x155DE34", VA = "0x155DE34")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x155DF2C", Offset = "0x155DF2C", VA = "0x155DF2C")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x155DFF8", Offset = "0x155DFF8", VA = "0x155DFF8")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x155E0F0", Offset = "0x155E0F0", VA = "0x155E0F0")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x155E1E8", Offset = "0x155E1E8", VA = "0x155E1E8")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x155E2B4", Offset = "0x155E2B4", VA = "0x155E2B4")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x155E394", Offset = "0x155E394", VA = "0x155E394")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x155E4CC", Offset = "0x155E4CC", VA = "0x155E4CC")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x155E5F4", Offset = "0x155E5F4", VA = "0x155E5F4")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x155E6F4", Offset = "0x155E6F4", VA = "0x155E6F4")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x155E80C", Offset = "0x155E80C", VA = "0x155E80C")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x155E90C", Offset = "0x155E90C", VA = "0x155E90C")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x155EA3C", Offset = "0x155EA3C", VA = "0x155EA3C")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x155EB3C", Offset = "0x155EB3C", VA = "0x155EB3C")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x155EC1C", Offset = "0x155EC1C", VA = "0x155EC1C")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x155ECFC", Offset = "0x155ECFC", VA = "0x155ECFC")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x155EDC8", Offset = "0x155EDC8", VA = "0x155EDC8")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x155EE94", Offset = "0x155EE94", VA = "0x155EE94")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x155F0F8", Offset = "0x155F0F8", VA = "0x155F0F8")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x155F230", Offset = "0x155F230", VA = "0x155F230")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x155F358", Offset = "0x155F358", VA = "0x155F358")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x155F4FC", Offset = "0x155F4FC", VA = "0x155F4FC")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x155F680", Offset = "0x155F680", VA = "0x155F680")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x155F7F4", Offset = "0x155F7F4", VA = "0x155F7F4")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x155F904", Offset = "0x155F904", VA = "0x155F904")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x155FA04", Offset = "0x155FA04", VA = "0x155FA04")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x155FBC0", Offset = "0x155FBC0", VA = "0x155FBC0")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x155FD5C", Offset = "0x155FD5C", VA = "0x155FD5C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x155FEE8", Offset = "0x155FEE8", VA = "0x155FEE8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x1560010", Offset = "0x1560010", VA = "0x1560010")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x1560128", Offset = "0x1560128", VA = "0x1560128")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x15601F4", Offset = "0x15601F4", VA = "0x15601F4")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x15602D4", Offset = "0x15602D4", VA = "0x15602D4")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x15603DC", Offset = "0x15603DC", VA = "0x15603DC")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x1560514", Offset = "0x1560514", VA = "0x1560514")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0x156062C", Offset = "0x156062C", VA = "0x156062C")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x156073C", Offset = "0x156073C", VA = "0x156073C")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x156084C", Offset = "0x156084C", VA = "0x156084C")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x15609F8", Offset = "0x15609F8", VA = "0x15609F8")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x1560B64", Offset = "0x1560B64", VA = "0x1560B64")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x1560CE8", Offset = "0x1560CE8", VA = "0x1560CE8")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x1560E84", Offset = "0x1560E84", VA = "0x1560E84")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x1560FD8", Offset = "0x1560FD8", VA = "0x1560FD8")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x1561138", Offset = "0x1561138", VA = "0x1561138")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x1561238", Offset = "0x1561238", VA = "0x1561238")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x1561350", Offset = "0x1561350", VA = "0x1561350")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x15614B0", Offset = "0x15614B0", VA = "0x15614B0")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x156161C", Offset = "0x156161C", VA = "0x156161C")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x15617A8", Offset = "0x15617A8", VA = "0x15617A8")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x15618D0", Offset = "0x15618D0", VA = "0x15618D0")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x1561A10", Offset = "0x1561A10", VA = "0x1561A10")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x1561B38", Offset = "0x1561B38", VA = "0x1561B38")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x1561C64", Offset = "0x1561C64", VA = "0x1561C64")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x1561D88", Offset = "0x1561D88", VA = "0x1561D88")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x1561E68", Offset = "0x1561E68", VA = "0x1561E68")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x1561F48", Offset = "0x1561F48", VA = "0x1561F48")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x156212C", Offset = "0x156212C", VA = "0x156212C")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x156223C", Offset = "0x156223C", VA = "0x156223C")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x156234C", Offset = "0x156234C", VA = "0x156234C")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x156242C", Offset = "0x156242C", VA = "0x156242C")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x156250C", Offset = "0x156250C", VA = "0x156250C")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x15625EC", Offset = "0x15625EC", VA = "0x15625EC")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x15626CC", Offset = "0x15626CC", VA = "0x15626CC")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x15627AC", Offset = "0x15627AC", VA = "0x15627AC")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x15628AC", Offset = "0x15628AC", VA = "0x15628AC")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x1562994", Offset = "0x1562994", VA = "0x1562994")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x1562A7C", Offset = "0x1562A7C", VA = "0x1562A7C")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x1562B64", Offset = "0x1562B64", VA = "0x1562B64")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x1562C4C", Offset = "0x1562C4C", VA = "0x1562C4C")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x1562D2C", Offset = "0x1562D2C", VA = "0x1562D2C")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x1563574", Offset = "0x1563574", VA = "0x1563574")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x1563640", Offset = "0x1563640", VA = "0x1563640")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x1563798", Offset = "0x1563798", VA = "0x1563798")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x15638BC", Offset = "0x15638BC", VA = "0x15638BC")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x1563A1C", Offset = "0x1563A1C", VA = "0x1563A1C")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x1563BB4", Offset = "0x1563BB4", VA = "0x1563BB4")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x1563CF8", Offset = "0x1563CF8", VA = "0x1563CF8")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x1563E4C", Offset = "0x1563E4C", VA = "0x1563E4C")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x1563F4C", Offset = "0x1563F4C", VA = "0x1563F4C")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x156402C", Offset = "0x156402C", VA = "0x156402C")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x1548368", Offset = "0x1548368", VA = "0x1548368")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x1564278", Offset = "0x1564278", VA = "0x1564278")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x1564358", Offset = "0x1564358", VA = "0x1564358")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x156449C", Offset = "0x156449C", VA = "0x156449C")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x154BD8C", Offset = "0x154BD8C", VA = "0x154BD8C")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x1564688", Offset = "0x1564688", VA = "0x1564688")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x1564788", Offset = "0x1564788", VA = "0x1564788")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x15648C0", Offset = "0x15648C0", VA = "0x15648C0")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x15649A4", Offset = "0x15649A4", VA = "0x15649A4")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x1564A6C", Offset = "0x1564A6C", VA = "0x1564A6C")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x1564B80", Offset = "0x1564B80", VA = "0x1564B80")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x1564C74", Offset = "0x1564C74", VA = "0x1564C74")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x1564DC8", Offset = "0x1564DC8", VA = "0x1564DC8")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x1564EBC", Offset = "0x1564EBC", VA = "0x1564EBC")]
	public static void Term()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x1564F84", Offset = "0x1564F84", VA = "0x1564F84")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x15650A0", Offset = "0x15650A0", VA = "0x15650A0")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x15651BC", Offset = "0x15651BC", VA = "0x15651BC")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x1565314", Offset = "0x1565314", VA = "0x1565314")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x156540C", Offset = "0x156540C", VA = "0x156540C")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x1565504", Offset = "0x1565504", VA = "0x1565504")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x156562C", Offset = "0x156562C", VA = "0x156562C")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x1565724", Offset = "0x1565724", VA = "0x1565724")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x156581C", Offset = "0x156581C", VA = "0x156581C")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x1565914", Offset = "0x1565914", VA = "0x1565914")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x1565A3C", Offset = "0x1565A3C", VA = "0x1565A3C")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x1534E2C", Offset = "0x1534E2C", VA = "0x1534E2C")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x1565C2C", Offset = "0x1565C2C", VA = "0x1565C2C")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x1565D0C", Offset = "0x1565D0C", VA = "0x1565D0C")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x1565DD8", Offset = "0x1565DD8", VA = "0x1565DD8")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x1565FCC", Offset = "0x1565FCC", VA = "0x1565FCC")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x156627C", Offset = "0x156627C", VA = "0x156627C")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x15663D8", Offset = "0x15663D8", VA = "0x15663D8")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x15664E0", Offset = "0x15664E0", VA = "0x15664E0")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x1566640", Offset = "0x1566640", VA = "0x1566640")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x1566794", Offset = "0x1566794", VA = "0x1566794")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x1566888", Offset = "0x1566888", VA = "0x1566888")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x1566990", Offset = "0x1566990", VA = "0x1566990")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x1566A84", Offset = "0x1566A84", VA = "0x1566A84")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x1566B8C", Offset = "0x1566B8C", VA = "0x1566B8C")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x1566C58", Offset = "0x1566C58", VA = "0x1566C58")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x1566D24", Offset = "0x1566D24", VA = "0x1566D24")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x1566ED8", Offset = "0x1566ED8", VA = "0x1566ED8")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x1549C38", Offset = "0x1549C38", VA = "0x1549C38")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x1547ECC", Offset = "0x1547ECC", VA = "0x1547ECC")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x15671FC", Offset = "0x15671FC", VA = "0x15671FC")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x1567320", Offset = "0x1567320", VA = "0x1567320")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x1567444", Offset = "0x1567444", VA = "0x1567444")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x1534A90", Offset = "0x1534A90", VA = "0x1534A90")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x1567680", Offset = "0x1567680", VA = "0x1567680")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x15362C0", Offset = "0x15362C0", VA = "0x15362C0")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x15676E4", Offset = "0x15676E4", VA = "0x15676E4")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x15475F8", Offset = "0x15475F8", VA = "0x15475F8")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0x1567828", Offset = "0x1567828", VA = "0x1567828")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x1567988", Offset = "0x1567988", VA = "0x1567988")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x1567A48", Offset = "0x1567A48", VA = "0x1567A48")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x1567BA8", Offset = "0x1567BA8", VA = "0x1567BA8")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x1567D34", Offset = "0x1567D34", VA = "0x1567D34")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x1567E3C", Offset = "0x1567E3C", VA = "0x1567E3C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9050E8", Offset = "0x9050E8")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x1567FAC", Offset = "0x1567FAC", VA = "0x1567FAC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x905120", Offset = "0x905120")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x1568158", Offset = "0x1568158", VA = "0x1568158")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x905158", Offset = "0x905158")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x15682C8", Offset = "0x15682C8", VA = "0x15682C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x905190", Offset = "0x905190")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x154E344", Offset = "0x154E344", VA = "0x154E344")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x1568474", Offset = "0x1568474", VA = "0x1568474")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x15678D8", Offset = "0x15678D8", VA = "0x15678D8")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x1567AF8", Offset = "0x1567AF8", VA = "0x1567AF8")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x15685C0", Offset = "0x15685C0", VA = "0x15685C0")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x1568534", Offset = "0x1568534", VA = "0x1568534")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x15686F4", Offset = "0x15686F4", VA = "0x15686F4")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x1568758", Offset = "0x1568758", VA = "0x1568758")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x2000336")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000212")]
	public int nPriority
	{
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x157D5BC", Offset = "0x157D5BC", VA = "0x157D5BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001725")]
		[Address(RVA = "0x157D548", Offset = "0x157D548", VA = "0x157D548")]
		set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public uint uStackSize
	{
		[Token(Token = "0x6001728")]
		[Address(RVA = "0x157D694", Offset = "0x157D694", VA = "0x157D694")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x157D620", Offset = "0x157D620", VA = "0x157D620")]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public int uSchedPolicy
	{
		[Token(Token = "0x600172A")]
		[Address(RVA = "0x157D76C", Offset = "0x157D76C", VA = "0x157D76C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001729")]
		[Address(RVA = "0x157D6F8", Offset = "0x157D6F8", VA = "0x157D6F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x600172C")]
		[Address(RVA = "0x157D844", Offset = "0x157D844", VA = "0x157D844")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600172B")]
		[Address(RVA = "0x157D7D0", Offset = "0x157D7D0", VA = "0x157D7D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x153CAB8", Offset = "0x153CAB8", VA = "0x153CAB8")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0x153C89C", Offset = "0x153C89C", VA = "0x153C89C")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0x157D32C", Offset = "0x157D32C", VA = "0x157D32C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0x157D360", Offset = "0x157D360", VA = "0x157D360", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0x157D3D0", Offset = "0x157D3D0", VA = "0x157D3D0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x157D8A8", Offset = "0x157D8A8", VA = "0x157D8A8")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x2000337")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x1581334", Offset = "0x1581334", VA = "0x1581334")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x1581374", Offset = "0x1581374", VA = "0x1581374")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x15813C0", Offset = "0x15813C0", VA = "0x15813C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x15813F4", Offset = "0x15813F4", VA = "0x15813F4", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x1581464", Offset = "0x1581464", VA = "0x1581464", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x15815DC", Offset = "0x15815DC", VA = "0x15815DC")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x2000338")]
public enum AKRESULT
{
	[Token(Token = "0x4001254")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4001255")]
	AK_Success = 1,
	[Token(Token = "0x4001256")]
	AK_Fail = 2,
	[Token(Token = "0x4001257")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x4001258")]
	AK_NotCompatible = 4,
	[Token(Token = "0x4001259")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x400125A")]
	AK_InvalidFile = 7,
	[Token(Token = "0x400125B")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x400125C")]
	AK_MaxReached = 9,
	[Token(Token = "0x400125D")]
	AK_InvalidID = 14,
	[Token(Token = "0x400125E")]
	AK_IDNotFound = 15,
	[Token(Token = "0x400125F")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4001260")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4001261")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4001262")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4001263")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4001264")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4001265")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x4001266")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x4001267")]
	AK_PathNotFound = 36,
	[Token(Token = "0x4001268")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x4001269")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x400126A")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x400126B")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x400126C")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x400126D")]
	AK_DataNeeded = 43,
	[Token(Token = "0x400126E")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x400126F")]
	AK_DataReady = 45,
	[Token(Token = "0x4001270")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4001271")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4001272")]
	AK_Cancelled = 53,
	[Token(Token = "0x4001273")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4001274")]
	AK_BankReadError = 56,
	[Token(Token = "0x4001275")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x4001276")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x4001277")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x4001278")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4001279")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x400127A")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x400127B")]
	AK_RenderedFX = 71,
	[Token(Token = "0x400127C")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x400127D")]
	AK_ProcessDone = 73,
	[Token(Token = "0x400127E")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x400127F")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4001280")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4001281")]
	AK_Busy = 77,
	[Token(Token = "0x4001282")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4001283")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4001284")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4001285")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x4001286")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x4001287")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x4001288")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4001289")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x400128A")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x400128B")]
	AK_OpenSLError = 87,
	[Token(Token = "0x400128C")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x400128D")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x400128E")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x400128F")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4001290")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4001291")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x4001292")]
	AK_InvalidFloatValue = 94
}
[Token(Token = "0x2000339")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4001294")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4001295")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x4001296")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x200033A")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x4001298")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4001299")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x400129A")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x200033B")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000216")]
	public uint textureID
	{
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1A04B18", Offset = "0x1A04B18", VA = "0x1A04B18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1A04AA0", Offset = "0x1A04AA0", VA = "0x1A04AA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1A04BF8", Offset = "0x1A04BF8", VA = "0x1A04BF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1A04B80", Offset = "0x1A04B80", VA = "0x1A04B80")]
		set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public string strName
	{
		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1A04CD8", Offset = "0x1A04CD8", VA = "0x1A04CD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1A04C60", Offset = "0x1A04C60", VA = "0x1A04C60")]
		set
		{
		}
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x1A04774", Offset = "0x1A04774", VA = "0x1A04774")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x1A047B4", Offset = "0x1A047B4", VA = "0x1A047B4")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x1A04800", Offset = "0x1A04800", VA = "0x1A04800", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x1A04834", Offset = "0x1A04834", VA = "0x1A04834", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x1A048A4", Offset = "0x1A048A4", VA = "0x1A048A4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x1A04A20", Offset = "0x1A04A20", VA = "0x1A04A20")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x1A04D80", Offset = "0x1A04D80", VA = "0x1A04D80")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x1A04DE8", Offset = "0x1A04DE8", VA = "0x1A04DE8")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x1A04E50", Offset = "0x1A04E50", VA = "0x1A04E50")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x1A04EAC", Offset = "0x1A04EAC", VA = "0x1A04EAC")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200033C")]
public enum AkActionOnEventType
{
	[Token(Token = "0x400129E")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x400129F")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x40012A0")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x40012A1")]
	AkActionOnEventType_Break,
	[Token(Token = "0x40012A2")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x200033D")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x40012A4")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x40012A5")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x40012A6")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x40012A7")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x40012A8")]
	AkDeviceState_All = 15
}
[Token(Token = "0x200033E")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000219")]
	public uint uSampleRate
	{
		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1A06AF4", Offset = "0x1A06AF4", VA = "0x1A06AF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1A06A7C", Offset = "0x1A06A7C", VA = "0x1A06A7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1A06C48", Offset = "0x1A06C48", VA = "0x1A06C48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1A06B5C", Offset = "0x1A06B5C", VA = "0x1A06B5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1A06DC4", Offset = "0x1A06DC4", VA = "0x1A06DC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1A06D4C", Offset = "0x1A06D4C", VA = "0x1A06D4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1A06EA4", Offset = "0x1A06EA4", VA = "0x1A06EA4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1A06E2C", Offset = "0x1A06E2C", VA = "0x1A06E2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public uint uTypeID
	{
		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1A06F84", Offset = "0x1A06F84", VA = "0x1A06F84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1A06F0C", Offset = "0x1A06F0C", VA = "0x1A06F0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1A07064", Offset = "0x1A07064", VA = "0x1A07064")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1A06FEC", Offset = "0x1A06FEC", VA = "0x1A06FEC")]
		set
		{
		}
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x1A067D0", Offset = "0x1A067D0", VA = "0x1A067D0")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x1A06810", Offset = "0x1A06810", VA = "0x1A06810")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x1A0685C", Offset = "0x1A0685C", VA = "0x1A0685C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x1A06890", Offset = "0x1A06890", VA = "0x1A06890", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x1A06900", Offset = "0x1A06900", VA = "0x1A06900", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x1A070CC", Offset = "0x1A070CC", VA = "0x1A070CC")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x1A07134", Offset = "0x1A07134", VA = "0x1A07134")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x1A0719C", Offset = "0x1A0719C", VA = "0x1A0719C")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x1A07204", Offset = "0x1A07204", VA = "0x1A07204")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x1A0726C", Offset = "0x1A0726C", VA = "0x1A0726C")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x1A072D4", Offset = "0x1A072D4", VA = "0x1A072D4")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x1A073AC", Offset = "0x1A073AC", VA = "0x1A073AC")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x1A07414", Offset = "0x1A07414", VA = "0x1A07414")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x200033F")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021F")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1A08208", Offset = "0x1A08208", VA = "0x1A08208")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x1A07F5C", Offset = "0x1A07F5C", VA = "0x1A07F5C")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x1A07F9C", Offset = "0x1A07F9C", VA = "0x1A07F9C")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x1A07FE8", Offset = "0x1A07FE8", VA = "0x1A07FE8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x1A0801C", Offset = "0x1A0801C", VA = "0x1A0801C", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x1A0808C", Offset = "0x1A0808C", VA = "0x1A0808C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x1A08270", Offset = "0x1A08270", VA = "0x1A08270")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x2000340")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000220")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x600176A")]
		[Address(RVA = "0x1A08FC0", Offset = "0x1A08FC0", VA = "0x1A08FC0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1A08F48", Offset = "0x1A08F48", VA = "0x1A08F48")]
		set
		{
		}
	}

	[Token(Token = "0x17000221")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1A090A0", Offset = "0x1A090A0", VA = "0x1A090A0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1A09028", Offset = "0x1A09028", VA = "0x1A09028")]
		set
		{
		}
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x1A08C9C", Offset = "0x1A08C9C", VA = "0x1A08C9C")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x1A08CDC", Offset = "0x1A08CDC", VA = "0x1A08CDC")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x1A08D28", Offset = "0x1A08D28", VA = "0x1A08D28", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x1A08D5C", Offset = "0x1A08D5C", VA = "0x1A08D5C", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x1A08DCC", Offset = "0x1A08DCC", VA = "0x1A08DCC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x1A09108", Offset = "0x1A09108", VA = "0x1A09108")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x2000341")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000222")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1A09434", Offset = "0x1A09434", VA = "0x1A09434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x1A09188", Offset = "0x1A09188", VA = "0x1A09188")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x1A091C8", Offset = "0x1A091C8", VA = "0x1A091C8")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x1A09214", Offset = "0x1A09214", VA = "0x1A09214", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x1A09248", Offset = "0x1A09248", VA = "0x1A09248", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x1A092B8", Offset = "0x1A092B8", VA = "0x1A092B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0x1A0949C", Offset = "0x1A0949C", VA = "0x1A0949C")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x2000342")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000223")]
	public ulong listenerID
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1A0A178", Offset = "0x1A0A178", VA = "0x1A0A178")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x600177A")]
		[Address(RVA = "0x1A0A100", Offset = "0x1A0A100", VA = "0x1A0A100")]
		set
		{
		}
	}

	[Token(Token = "0x17000224")]
	public uint auxBusID
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1A0A258", Offset = "0x1A0A258", VA = "0x1A0A258")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1A0A1E0", Offset = "0x1A0A1E0", VA = "0x1A0A1E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000225")]
	public float fControlValue
	{
		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1A0A338", Offset = "0x1A0A338", VA = "0x1A0A338")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1A0A2C0", Offset = "0x1A0A2C0", VA = "0x1A0A2C0")]
		set
		{
		}
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0x1A096FC", Offset = "0x1A096FC", VA = "0x1A096FC")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x1A09E94", Offset = "0x1A09E94", VA = "0x1A09E94")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x1A09EE0", Offset = "0x1A09EE0", VA = "0x1A09EE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x1A09F14", Offset = "0x1A09F14", VA = "0x1A09F14", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x1A09F84", Offset = "0x1A09F84", VA = "0x1A09F84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x1A0A3A0", Offset = "0x1A0A3A0", VA = "0x1A0A3A0")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x1A0A47C", Offset = "0x1A0A47C", VA = "0x1A0A47C")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x1A0A548", Offset = "0x1A0A548", VA = "0x1A0A548")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x2000343")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000226")]
	public uint bankID
	{
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1A0AD60", Offset = "0x1A0AD60", VA = "0x1A0AD60")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000227")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1A0ADC8", Offset = "0x1A0ADC8", VA = "0x1A0ADC8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000228")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1A0AE30", Offset = "0x1A0AE30", VA = "0x1A0AE30")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000229")]
	public int memPoolId
	{
		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1A0AE98", Offset = "0x1A0AE98", VA = "0x1A0AE98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x1A0AAB4", Offset = "0x1A0AAB4", VA = "0x1A0AAB4")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x1A0AAF4", Offset = "0x1A0AAF4", VA = "0x1A0AAF4")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x1A0AB40", Offset = "0x1A0AB40", VA = "0x1A0AB40", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x1A0AB74", Offset = "0x1A0AB74", VA = "0x1A0AB74", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x1A0ABE4", Offset = "0x1A0ABE4", VA = "0x1A0ABE4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x1A0AF00", Offset = "0x1A0AF00", VA = "0x1A0AF00")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x2000344")]
public enum AkBankContent
{
	[Token(Token = "0x40012B6")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x40012B7")]
	AkBankContent_All
}
[Token(Token = "0x2000345")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x40012B9")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x40012BA")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x40012BB")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000346")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022A")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1A0C56C", Offset = "0x1A0C56C", VA = "0x1A0C56C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700022B")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1A0C5D4", Offset = "0x1A0C5D4", VA = "0x1A0C5D4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x1A0C2C0", Offset = "0x1A0C2C0", VA = "0x1A0C2C0")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x1A0C300", Offset = "0x1A0C300", VA = "0x1A0C300")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x1A0C34C", Offset = "0x1A0C34C", VA = "0x1A0C34C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x1A0C380", Offset = "0x1A0C380", VA = "0x1A0C380", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x1A0C3F0", Offset = "0x1A0C3F0", VA = "0x1A0C3F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x1A0C63C", Offset = "0x1A0C63C", VA = "0x1A0C63C")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x2000347")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x1A0E920", Offset = "0x1A0E920", VA = "0x1A0E920")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x1A0E960", Offset = "0x1A0E960", VA = "0x1A0E960")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x1A0E9AC", Offset = "0x1A0E9AC", VA = "0x1A0E9AC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x1A0E9E0", Offset = "0x1A0E9E0", VA = "0x1A0E9E0", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x1A0EA50", Offset = "0x1A0EA50", VA = "0x1A0EA50", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x1A0D254", Offset = "0x1A0D254", VA = "0x1A0D254")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x1A0D3B8", Offset = "0x1A0D3B8", VA = "0x1A0D3B8")]
	public static void Term()
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x1A0E290", Offset = "0x1A0E290", VA = "0x1A0E290")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x1A0D498", Offset = "0x1A0D498", VA = "0x1A0D498")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x1A0E2EC", Offset = "0x1A0E2EC", VA = "0x1A0E2EC")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x1A0EBCC", Offset = "0x1A0EBCC", VA = "0x1A0EBCC")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x1A0EC6C", Offset = "0x1A0EC6C", VA = "0x1A0EC6C")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x2000348")]
public enum AkCallbackType
{
	[Token(Token = "0x40012C1")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x40012C2")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x40012C3")]
	AK_Marker = 4,
	[Token(Token = "0x40012C4")]
	AK_Duration = 8,
	[Token(Token = "0x40012C5")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x40012C6")]
	AK_Starvation = 32,
	[Token(Token = "0x40012C7")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x40012C8")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x40012C9")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x40012CA")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x40012CB")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40012CC")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40012CD")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40012CE")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40012CF")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40012D0")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40012D1")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40012D2")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40012D3")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40012D4")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40012D5")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40012D6")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40012D7")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40012D8")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40012D9")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x2000349")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022C")]
	public uint uNumChannels
	{
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1A0EF84", Offset = "0x1A0EF84", VA = "0x1A0EF84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1A0EF0C", Offset = "0x1A0EF0C", VA = "0x1A0EF0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public uint eConfigType
	{
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1A0F064", Offset = "0x1A0F064", VA = "0x1A0F064")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1A0EFEC", Offset = "0x1A0EFEC", VA = "0x1A0EFEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public uint uChannelMask
	{
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1A0F144", Offset = "0x1A0F144", VA = "0x1A0F144")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1A0F0CC", Offset = "0x1A0F0CC", VA = "0x1A0F0CC")]
		set
		{
		}
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x1A06D0C", Offset = "0x1A06D0C", VA = "0x1A06D0C")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x1A06BFC", Offset = "0x1A06BFC", VA = "0x1A06BFC")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x1A0ECEC", Offset = "0x1A0ECEC", VA = "0x1A0ECEC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x1A0ED20", Offset = "0x1A0ED20", VA = "0x1A0ED20", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x1A0ED90", Offset = "0x1A0ED90", VA = "0x1A0ED90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x1A0F1AC", Offset = "0x1A0F1AC", VA = "0x1A0F1AC")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x1A0F22C", Offset = "0x1A0F22C", VA = "0x1A0F22C")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x1A0F2C4", Offset = "0x1A0F2C4", VA = "0x1A0F2C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x1A0F32C", Offset = "0x1A0F32C", VA = "0x1A0F32C")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x1A0F3A4", Offset = "0x1A0F3A4", VA = "0x1A0F3A4")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x1A0F424", Offset = "0x1A0F424", VA = "0x1A0F424")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x1A0F49C", Offset = "0x1A0F49C", VA = "0x1A0F49C")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x1A0F514", Offset = "0x1A0F514", VA = "0x1A0F514")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x1A0F57C", Offset = "0x1A0F57C", VA = "0x1A0F57C")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x1A0F5E4", Offset = "0x1A0F5E4", VA = "0x1A0F5E4")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x1A0F65C", Offset = "0x1A0F65C", VA = "0x1A0F65C")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x1A0F708", Offset = "0x1A0F708", VA = "0x1A0F708")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x1A0F7B4", Offset = "0x1A0F7B4", VA = "0x1A0F7B4")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200034A")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40012DD")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40012DE")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40012DF")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x200034B")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022F")]
	public AkTransform position
	{
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1A0FB54", Offset = "0x1A0FB54", VA = "0x1A0FB54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1A0FAC8", Offset = "0x1A0FAC8", VA = "0x1A0FAC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public uint uInputChannels
	{
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1A0FC90", Offset = "0x1A0FC90", VA = "0x1A0FC90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1A0FC18", Offset = "0x1A0FC18", VA = "0x1A0FC18")]
		set
		{
		}
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x1A0F81C", Offset = "0x1A0F81C", VA = "0x1A0F81C")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x1A0F85C", Offset = "0x1A0F85C", VA = "0x1A0F85C")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x1A0F8A8", Offset = "0x1A0F8A8", VA = "0x1A0F8A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x1A0F8DC", Offset = "0x1A0F8DC", VA = "0x1A0F8DC", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x1A0F94C", Offset = "0x1A0F94C", VA = "0x1A0F94C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200034C")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40012E3")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40012E4")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x200034D")]
public enum AkConnectionType
{
	[Token(Token = "0x40012E6")]
	ConnectionType_Direct,
	[Token(Token = "0x40012E7")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40012E8")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x200034E")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40012EA")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40012EB")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40012EC")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40012ED")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40012EE")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40012EF")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40012F0")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40012F1")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40012F2")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40012F3")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40012F4")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x200034F")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000231")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1A12940", Offset = "0x1A12940", VA = "0x1A12940")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1A128C8", Offset = "0x1A128C8", VA = "0x1A128C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1A129A8", Offset = "0x1A129A8", VA = "0x1A129A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1A102F0", Offset = "0x1A102F0", VA = "0x1A102F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1A12A88", Offset = "0x1A12A88", VA = "0x1A12A88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1A12A10", Offset = "0x1A12A10", VA = "0x1A12A10")]
		set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public int ePoolAttributes
	{
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1A12B68", Offset = "0x1A12B68", VA = "0x1A12B68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1A12AF0", Offset = "0x1A12AF0", VA = "0x1A12AF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public uint uGranularity
	{
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1A12C48", Offset = "0x1A12C48", VA = "0x1A12C48")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1A12BD0", Offset = "0x1A12BD0", VA = "0x1A12BD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1A12D28", Offset = "0x1A12D28", VA = "0x1A12D28")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1A12CB0", Offset = "0x1A12CB0", VA = "0x1A12CB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1A12E1C", Offset = "0x1A12E1C", VA = "0x1A12E1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1A12D90", Offset = "0x1A12D90", VA = "0x1A12D90")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1A12EE0", Offset = "0x1A12EE0", VA = "0x1A12EE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1A10368", Offset = "0x1A10368", VA = "0x1A10368")]
		set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1A12FC0", Offset = "0x1A12FC0", VA = "0x1A12FC0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1A12F48", Offset = "0x1A12F48", VA = "0x1A12F48")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1A13028", Offset = "0x1A13028", VA = "0x1A13028")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1A103E0", Offset = "0x1A103E0", VA = "0x1A103E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1A13090", Offset = "0x1A13090", VA = "0x1A13090")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1A10458", Offset = "0x1A10458", VA = "0x1A10458")]
		set
		{
		}
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x1A1261C", Offset = "0x1A1261C", VA = "0x1A1261C")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x1A1265C", Offset = "0x1A1265C", VA = "0x1A1265C")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x1A126A8", Offset = "0x1A126A8", VA = "0x1A126A8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x1A126DC", Offset = "0x1A126DC", VA = "0x1A126DC", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0x1A1274C", Offset = "0x1A1274C", VA = "0x1A1274C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x1A130F8", Offset = "0x1A130F8", VA = "0x1A130F8")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x2000350")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40012F8")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40012F9")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40012FA")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40012FB")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x2000351")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40012FE")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x1700023C")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1A134B0", Offset = "0x1A134B0", VA = "0x1A134B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1A13424", Offset = "0x1A13424", VA = "0x1A13424")]
		set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	public uint nodeCount
	{
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1A135EC", Offset = "0x1A135EC", VA = "0x1A135EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1A13574", Offset = "0x1A13574", VA = "0x1A13574")]
		set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public float diffraction
	{
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1A136CC", Offset = "0x1A136CC", VA = "0x1A136CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1A13654", Offset = "0x1A13654", VA = "0x1A13654")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public float totLength
	{
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1A137AC", Offset = "0x1A137AC", VA = "0x1A137AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1A13734", Offset = "0x1A13734", VA = "0x1A13734")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public float obstructionValue
	{
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1A1388C", Offset = "0x1A1388C", VA = "0x1A1388C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1A13814", Offset = "0x1A13814", VA = "0x1A13814")]
		set
		{
		}
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x1A13178", Offset = "0x1A13178", VA = "0x1A13178")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x1A131B8", Offset = "0x1A131B8", VA = "0x1A131B8")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x1A13204", Offset = "0x1A13204", VA = "0x1A13204", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x1A13238", Offset = "0x1A13238", VA = "0x1A13238", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x1A132A8", Offset = "0x1A132A8", VA = "0x1A132A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x1A138F4", Offset = "0x1A138F4", VA = "0x1A138F4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x1A13950", Offset = "0x1A13950", VA = "0x1A13950")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x1A13A24", Offset = "0x1A13A24", VA = "0x1A13A24")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x1A13A9C", Offset = "0x1A13A9C", VA = "0x1A13A9C")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x1A13B14", Offset = "0x1A13B14", VA = "0x1A13B14")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x1A13B8C", Offset = "0x1A13B8C", VA = "0x1A13B8C")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x1A13C2C", Offset = "0x1A13C2C", VA = "0x1A13C2C")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x2000352")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000241")]
	public float fDuration
	{
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1A14418", Offset = "0x1A14418", VA = "0x1A14418")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000242")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1A14480", Offset = "0x1A14480", VA = "0x1A14480")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000243")]
	public uint audioNodeID
	{
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x1A144E8", Offset = "0x1A144E8", VA = "0x1A144E8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000244")]
	public uint mediaID
	{
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x1A14550", Offset = "0x1A14550", VA = "0x1A14550")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000245")]
	public bool bStreaming
	{
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1A145B8", Offset = "0x1A145B8", VA = "0x1A145B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x1A0E894", Offset = "0x1A0E894", VA = "0x1A0E894")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x1A13EE0", Offset = "0x1A13EE0", VA = "0x1A13EE0")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x1A13F2C", Offset = "0x1A13F2C", VA = "0x1A13F2C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x1A14040", Offset = "0x1A14040", VA = "0x1A14040", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x1A14110", Offset = "0x1A14110", VA = "0x1A14110", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x1A14620", Offset = "0x1A14620", VA = "0x1A14620")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x2000353")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000246")]
	public uint playingID
	{
		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1A14958", Offset = "0x1A14958", VA = "0x1A14958")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000247")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1A149C0", Offset = "0x1A149C0", VA = "0x1A149C0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000248")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1A14A28", Offset = "0x1A14A28", VA = "0x1A14A28")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x1A0E770", Offset = "0x1A0E770", VA = "0x1A0E770")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x1A14690", Offset = "0x1A14690", VA = "0x1A14690")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x1A146DC", Offset = "0x1A146DC", VA = "0x1A146DC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x1A1476C", Offset = "0x1A1476C", VA = "0x1A1476C", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0x1A147D4", Offset = "0x1A147D4", VA = "0x1A147D4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x1A14A90", Offset = "0x1A14A90", VA = "0x1A14A90")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x2000354")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x4001302")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x4001303")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000355")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000249")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1A15268", Offset = "0x1A15268", VA = "0x1A15268")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1A151F0", Offset = "0x1A151F0", VA = "0x1A151F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1A15348", Offset = "0x1A15348", VA = "0x1A15348")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1A152D0", Offset = "0x1A152D0", VA = "0x1A152D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1A15428", Offset = "0x1A15428", VA = "0x1A15428")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1A153B0", Offset = "0x1A153B0", VA = "0x1A153B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700024C")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1A15508", Offset = "0x1A15508", VA = "0x1A15508")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1A15490", Offset = "0x1A15490", VA = "0x1A15490")]
		set
		{
		}
	}

	[Token(Token = "0x1700024D")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1A155E8", Offset = "0x1A155E8", VA = "0x1A155E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1A15570", Offset = "0x1A15570", VA = "0x1A15570")]
		set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1A156C8", Offset = "0x1A156C8", VA = "0x1A156C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1A15650", Offset = "0x1A15650", VA = "0x1A15650")]
		set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1A157A8", Offset = "0x1A157A8", VA = "0x1A157A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1A15730", Offset = "0x1A15730", VA = "0x1A15730")]
		set
		{
		}
	}

	[Token(Token = "0x17000250")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1A15888", Offset = "0x1A15888", VA = "0x1A15888")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1A15810", Offset = "0x1A15810", VA = "0x1A15810")]
		set
		{
		}
	}

	[Token(Token = "0x17000251")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1A15968", Offset = "0x1A15968", VA = "0x1A15968")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1A158F0", Offset = "0x1A158F0", VA = "0x1A158F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000252")]
	public byte useImageSources
	{
		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1A15A48", Offset = "0x1A15A48", VA = "0x1A15A48")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1A159D0", Offset = "0x1A159D0", VA = "0x1A159D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x1A14EC4", Offset = "0x1A14EC4", VA = "0x1A14EC4")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x1A14F04", Offset = "0x1A14F04", VA = "0x1A14F04")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x1A14F50", Offset = "0x1A14F50", VA = "0x1A14F50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x1A14F84", Offset = "0x1A14F84", VA = "0x1A14F84", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x1A14FF4", Offset = "0x1A14FF4", VA = "0x1A14FF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x1A15170", Offset = "0x1A15170", VA = "0x1A15170")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x2000356")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000253")]
	public uint playingID
	{
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1A07D30", Offset = "0x1A07D30", VA = "0x1A07D30")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000254")]
	public uint eventID
	{
		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1A16528", Offset = "0x1A16528", VA = "0x1A16528")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x1A0E6D8", Offset = "0x1A0E6D8", VA = "0x1A0E6D8")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x1A164DC", Offset = "0x1A164DC", VA = "0x1A164DC")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x1A13FB0", Offset = "0x1A13FB0", VA = "0x1A13FB0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x1A140A8", Offset = "0x1A140A8", VA = "0x1A140A8", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x1A14294", Offset = "0x1A14294", VA = "0x1A14294", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x1A16590", Offset = "0x1A16590", VA = "0x1A16590")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000357")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000255")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1A182D0", Offset = "0x1A182D0", VA = "0x1A182D0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1A18258", Offset = "0x1A18258", VA = "0x1A18258")]
		set
		{
		}
	}

	[Token(Token = "0x17000256")]
	public uint idCodec
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1A183B0", Offset = "0x1A183B0", VA = "0x1A183B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1A18338", Offset = "0x1A18338", VA = "0x1A18338")]
		set
		{
		}
	}

	[Token(Token = "0x17000257")]
	public string szFile
	{
		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1A18490", Offset = "0x1A18490", VA = "0x1A18490")]
		get
		{
			return null;
		}
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1A18418", Offset = "0x1A18418", VA = "0x1A18418")]
		set
		{
		}
	}

	[Token(Token = "0x17000258")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1A185B0", Offset = "0x1A185B0", VA = "0x1A185B0")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1A18538", Offset = "0x1A18538", VA = "0x1A18538")]
		set
		{
		}
	}

	[Token(Token = "0x17000259")]
	public uint uiMemorySize
	{
		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1A18690", Offset = "0x1A18690", VA = "0x1A18690")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1A18618", Offset = "0x1A18618", VA = "0x1A18618")]
		set
		{
		}
	}

	[Token(Token = "0x1700025A")]
	public uint idFile
	{
		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1A18770", Offset = "0x1A18770", VA = "0x1A18770")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1A186F8", Offset = "0x1A186F8", VA = "0x1A186F8")]
		set
		{
		}
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x1A17BC8", Offset = "0x1A17BC8", VA = "0x1A17BC8")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x1A17C08", Offset = "0x1A17C08", VA = "0x1A17C08")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x1A17C54", Offset = "0x1A17C54", VA = "0x1A17C54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x1A17C88", Offset = "0x1A17C88", VA = "0x1A17C88", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x1A17CF8", Offset = "0x1A17CF8", VA = "0x1A17CF8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0x1A17E74", Offset = "0x1A17E74", VA = "0x1A17E74")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x1A17EF4", Offset = "0x1A17EF4", VA = "0x1A17EF4")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0x1A17FA4", Offset = "0x1A17FA4", VA = "0x1A17FA4")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0x1A1804C", Offset = "0x1A1804C", VA = "0x1A1804C")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0x1A180F4", Offset = "0x1A180F4", VA = "0x1A180F4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0x1A1815C", Offset = "0x1A1815C", VA = "0x1A1815C")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x1A181FC", Offset = "0x1A181FC", VA = "0x1A181FC")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x2000358")]
public enum AkFloorPlane
{
	[Token(Token = "0x400130A")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x400130B")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x400130C")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x400130D")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000359")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x400130F")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4001310")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x4001311")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x4001312")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x4001313")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x4001314")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x4001315")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x4001316")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x4001317")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x4001318")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x4001319")]
	AkGlobalCallbackLocation_Init = 1024,
	[Token(Token = "0x400131A")]
	AkGlobalCallbackLocation_Suspend = 2048,
	[Token(Token = "0x400131B")]
	AkGlobalCallbackLocation_WakeupFromSuspend = 4096,
	[Token(Token = "0x400131C")]
	AkGlobalCallbackLocation_Num = 13
}
[Token(Token = "0x200035A")]
public enum AkGroupType
{
	[Token(Token = "0x400131E")]
	AkGroupType_Switch,
	[Token(Token = "0x400131F")]
	AkGroupType_State
}
[Token(Token = "0x200035B")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700025B")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1A1A934", Offset = "0x1A1A934", VA = "0x1A1A934")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1A1A8A8", Offset = "0x1A1A8A8", VA = "0x1A1A8A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1A1AA70", Offset = "0x1A1AA70", VA = "0x1A1AA70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1A1A9F8", Offset = "0x1A1A9F8", VA = "0x1A1A9F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025D")]
	public float fLevel
	{
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1A1AB50", Offset = "0x1A1AB50", VA = "0x1A1AB50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x1A1AAD8", Offset = "0x1A1AAD8", VA = "0x1A1AAD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025E")]
	public float fDiffraction
	{
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1A1AC30", Offset = "0x1A1AC30", VA = "0x1A1AC30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1A1ABB8", Offset = "0x1A1ABB8", VA = "0x1A1ABB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1A1AD10", Offset = "0x1A1AD10", VA = "0x1A1AD10")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1A1AC98", Offset = "0x1A1AC98", VA = "0x1A1AC98")]
		set
		{
		}
	}

	[Token(Token = "0x17000260")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1A1ADF0", Offset = "0x1A1ADF0", VA = "0x1A1ADF0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1A1AD78", Offset = "0x1A1AD78", VA = "0x1A1AD78")]
		set
		{
		}
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x1A1A4C0", Offset = "0x1A1A4C0", VA = "0x1A1A4C0")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x1A1A500", Offset = "0x1A1A500", VA = "0x1A1A500")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0x1A1A54C", Offset = "0x1A1A54C", VA = "0x1A1A54C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x1A1A580", Offset = "0x1A1A580", VA = "0x1A1A580", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x1A1A5F0", Offset = "0x1A1A5F0", VA = "0x1A1A5F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x1A1A76C", Offset = "0x1A1A76C", VA = "0x1A1A76C")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x1A1A7EC", Offset = "0x1A1A7EC", VA = "0x1A1A7EC")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x200035C")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000261")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1A1B3D0", Offset = "0x1A1B3D0", VA = "0x1A1B3D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1A1B330", Offset = "0x1A1B330", VA = "0x1A1B330")]
		set
		{
		}
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0x1A1AE58", Offset = "0x1A1AE58", VA = "0x1A1AE58")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0x1A1AE98", Offset = "0x1A1AE98", VA = "0x1A1AE98")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0x1A1AEE4", Offset = "0x1A1AEE4", VA = "0x1A1AEE4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0x1A1AF18", Offset = "0x1A1AF18", VA = "0x1A1AF18", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x1A1AF88", Offset = "0x1A1AF88", VA = "0x1A1AF88", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x1A1B104", Offset = "0x1A1B104", VA = "0x1A1B104")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x1A1B184", Offset = "0x1A1B184", VA = "0x1A1B184")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x1A1B240", Offset = "0x1A1B240", VA = "0x1A1B240")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x1A1B2B8", Offset = "0x1A1B2B8", VA = "0x1A1B2B8")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x200035D")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000262")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1A1B740", Offset = "0x1A1B740", VA = "0x1A1B740")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1A11B74", Offset = "0x1A11B74", VA = "0x1A11B74")]
		set
		{
		}
	}

	[Token(Token = "0x17000263")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1A1B7A8", Offset = "0x1A1B7A8", VA = "0x1A1B7A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001867")]
		[Address(RVA = "0x1A11BEC", Offset = "0x1A11BEC", VA = "0x1A11BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1A1B810", Offset = "0x1A1B810", VA = "0x1A1B810")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1A11C64", Offset = "0x1A11C64", VA = "0x1A11C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000265")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1A1B878", Offset = "0x1A1B878", VA = "0x1A1B878")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1A11CDC", Offset = "0x1A11CDC", VA = "0x1A11CDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000266")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1A1B8E0", Offset = "0x1A1B8E0", VA = "0x1A1B8E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1A10554", Offset = "0x1A10554", VA = "0x1A10554")]
		set
		{
		}
	}

	[Token(Token = "0x17000267")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1A1B948", Offset = "0x1A1B948", VA = "0x1A1B948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1A105CC", Offset = "0x1A105CC", VA = "0x1A105CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000268")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1A1B9B0", Offset = "0x1A1B9B0", VA = "0x1A1B9B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1A10644", Offset = "0x1A10644", VA = "0x1A10644")]
		set
		{
		}
	}

	[Token(Token = "0x17000269")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1A1BA18", Offset = "0x1A1BA18", VA = "0x1A1BA18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1A11D54", Offset = "0x1A11D54", VA = "0x1A11D54")]
		set
		{
		}
	}

	[Token(Token = "0x1700026A")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1A1BA80", Offset = "0x1A1BA80", VA = "0x1A1BA80")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1A106BC", Offset = "0x1A106BC", VA = "0x1A106BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700026B")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1A1BAE8", Offset = "0x1A1BAE8", VA = "0x1A1BAE8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1A10734", Offset = "0x1A10734", VA = "0x1A10734")]
		set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1A11DCC", Offset = "0x1A11DCC", VA = "0x1A11DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001879")]
		[Address(RVA = "0x1A1BB50", Offset = "0x1A1BB50", VA = "0x1A1BB50")]
		set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1A1BBDC", Offset = "0x1A1BBDC", VA = "0x1A1BBDC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1A107AC", Offset = "0x1A107AC", VA = "0x1A107AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700026E")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1A1BCBC", Offset = "0x1A1BCBC", VA = "0x1A1BCBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1A1BC44", Offset = "0x1A1BC44", VA = "0x1A1BC44")]
		set
		{
		}
	}

	[Token(Token = "0x1700026F")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1A1BD9C", Offset = "0x1A1BD9C", VA = "0x1A1BD9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1A1BD24", Offset = "0x1A1BD24", VA = "0x1A1BD24")]
		set
		{
		}
	}

	[Token(Token = "0x17000270")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1A11F08", Offset = "0x1A11F08", VA = "0x1A11F08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1A11E90", Offset = "0x1A11E90", VA = "0x1A11E90")]
		set
		{
		}
	}

	[Token(Token = "0x17000271")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1A1BE7C", Offset = "0x1A1BE7C", VA = "0x1A1BE7C")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1A1BE04", Offset = "0x1A1BE04", VA = "0x1A1BE04")]
		set
		{
		}
	}

	[Token(Token = "0x17000272")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1A1BEE4", Offset = "0x1A1BEE4", VA = "0x1A1BEE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1A1089C", Offset = "0x1A1089C", VA = "0x1A1089C")]
		set
		{
		}
	}

	[Token(Token = "0x17000273")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1A1BF4C", Offset = "0x1A1BF4C", VA = "0x1A1BF4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1A10824", Offset = "0x1A10824", VA = "0x1A10824")]
		set
		{
		}
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x1A1B494", Offset = "0x1A1B494", VA = "0x1A1B494")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0x1A1B4D4", Offset = "0x1A1B4D4", VA = "0x1A1B4D4")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0x1A1B520", Offset = "0x1A1B520", VA = "0x1A1B520", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0x1A1B554", Offset = "0x1A1B554", VA = "0x1A1B554", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0x1A1B5C4", Offset = "0x1A1B5C4", VA = "0x1A1B5C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0x1A1BFB4", Offset = "0x1A1BFB4", VA = "0x1A1BFB4")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x200035E")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000274")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1A11170", Offset = "0x1A11170", VA = "0x1A11170")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1A1C2E0", Offset = "0x1A1C2E0", VA = "0x1A1C2E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000275")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x6001893")]
		[Address(RVA = "0x1A1131C", Offset = "0x1A1131C", VA = "0x1A1131C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001892")]
		[Address(RVA = "0x1A1C36C", Offset = "0x1A1C36C", VA = "0x1A1C36C")]
		set
		{
		}
	}

	[Token(Token = "0x17000276")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1A11258", Offset = "0x1A11258", VA = "0x1A11258")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1A1C3F8", Offset = "0x1A1C3F8", VA = "0x1A1C3F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000277")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1A11404", Offset = "0x1A11404", VA = "0x1A11404")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1A1C498", Offset = "0x1A1C498", VA = "0x1A1C498")]
		set
		{
		}
	}

	[Token(Token = "0x17000278")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1A114C8", Offset = "0x1A114C8", VA = "0x1A114C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1A1C538", Offset = "0x1A1C538", VA = "0x1A1C538")]
		set
		{
		}
	}

	[Token(Token = "0x17000279")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1A1158C", Offset = "0x1A1158C", VA = "0x1A1158C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1A1C5C4", Offset = "0x1A1C5C4", VA = "0x1A1C5C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700027A")]
	public uint preparePoolSize
	{
		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1A1C650", Offset = "0x1A1C650", VA = "0x1A1C650")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1A11734", Offset = "0x1A11734", VA = "0x1A11734")]
		set
		{
		}
	}

	[Token(Token = "0x1700027B")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1A11670", Offset = "0x1A11670", VA = "0x1A11670")]
		get
		{
			return null;
		}
		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1A1C6B8", Offset = "0x1A1C6B8", VA = "0x1A1C6B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700027C")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1A1C744", Offset = "0x1A1C744", VA = "0x1A1C744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1A117AC", Offset = "0x1A117AC", VA = "0x1A117AC")]
		set
		{
		}
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0x1A1C034", Offset = "0x1A1C034", VA = "0x1A1C034")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x1A1C074", Offset = "0x1A1C074", VA = "0x1A1C074")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x1A1C0C0", Offset = "0x1A1C0C0", VA = "0x1A1C0C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x1A1C0F4", Offset = "0x1A1C0F4", VA = "0x1A1C0F4", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x1A1C164", Offset = "0x1A1C164", VA = "0x1A1C164", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x1A0BFFC", Offset = "0x1A0BFFC", VA = "0x1A0BFFC")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x200035F")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700027D")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1A1D14C", Offset = "0x1A1D14C", VA = "0x1A1D14C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1A1D0C0", Offset = "0x1A1D0C0", VA = "0x1A1D0C0")]
		set
		{
		}
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x1A1CE14", Offset = "0x1A1CE14", VA = "0x1A1CE14")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x1A1CE54", Offset = "0x1A1CE54", VA = "0x1A1CE54")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x1A1CEA0", Offset = "0x1A1CEA0", VA = "0x1A1CEA0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x1A1CED4", Offset = "0x1A1CED4", VA = "0x1A1CED4", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x1A1CF44", Offset = "0x1A1CF44", VA = "0x1A1CF44", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x1A1D210", Offset = "0x1A1D210", VA = "0x1A1D210")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x1A1D2B8", Offset = "0x1A1D2B8", VA = "0x1A1D2B8")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x1A1D360", Offset = "0x1A1D360", VA = "0x1A1D360")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x1A1D408", Offset = "0x1A1D408", VA = "0x1A1D408")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x1A1D4A8", Offset = "0x1A1D4A8", VA = "0x1A1D4A8")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x1A1D548", Offset = "0x1A1D548", VA = "0x1A1D548")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x2000360")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x400132B")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x400132C")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x400132D")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x400132E")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x400132F")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4001330")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4001331")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4001332")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4001333")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4001334")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4001335")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4001336")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4001337")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4001338")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x4001339")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400133A")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400133B")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x400133C")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x400133D")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x400133E")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x400133F")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4001340")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4001341")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4001342")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4001343")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4001344")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4001345")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x4001346")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4001347")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4001348")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x4001349")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x400134A")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x400134B")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x400134C")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x400134D")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x400134E")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x400134F")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4001350")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4001351")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4001352")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4001353")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4001354")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4001355")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x4001356")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4001357")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4001358")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x4001359")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x400135A")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x400135B")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x400135C")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x400135D")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x400135E")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x400135F")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4001360")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4001361")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4001362")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4001363")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4001364")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4001365")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x4001366")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4001367")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4001368")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x4001369")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x400136A")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x400136B")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x400136C")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x400136D")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x400136E")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x400136F")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4001370")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4001371")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4001372")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4001373")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4001374")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4001375")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x4001376")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4001377")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4001378")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x4001379")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x400137A")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x400137B")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x400137C")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x400137D")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x400137E")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x400137F")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4001380")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4001381")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4001382")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4001383")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4001384")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4001385")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x4001386")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4001387")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4001388")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x4001389")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x400138A")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x400138B")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x2000361")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000362")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000291")]
		public byte byParam1
		{
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x17603A4", Offset = "0x17603A4", VA = "0x17603A4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x176032C", Offset = "0x176032C", VA = "0x176032C")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public byte byParam2
		{
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0x1760484", Offset = "0x1760484", VA = "0x1760484")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x176040C", Offset = "0x176040C", VA = "0x176040C")]
			set
			{
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1760080", Offset = "0x1760080", VA = "0x1760080")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x17600C0", Offset = "0x17600C0", VA = "0x17600C0")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x176010C", Offset = "0x176010C", VA = "0x176010C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1760140", Offset = "0x1760140", VA = "0x1760140", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x17601B0", Offset = "0x17601B0", VA = "0x17601B0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x17604EC", Offset = "0x17604EC", VA = "0x17604EC")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x2000363")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000293")]
		public byte byNote
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x1760D7C", Offset = "0x1760D7C", VA = "0x1760D7C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x1760D04", Offset = "0x1760D04", VA = "0x1760D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public byte byVelocity
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x1760E5C", Offset = "0x1760E5C", VA = "0x1760E5C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x1760DE4", Offset = "0x1760DE4", VA = "0x1760DE4")]
			set
			{
			}
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1760A58", Offset = "0x1760A58", VA = "0x1760A58")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1760A98", Offset = "0x1760A98", VA = "0x1760A98")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1760AE4", Offset = "0x1760AE4", VA = "0x1760AE4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1760B18", Offset = "0x1760B18", VA = "0x1760B18", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1760B88", Offset = "0x1760B88", VA = "0x1760B88", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x1760EC4", Offset = "0x1760EC4", VA = "0x1760EC4")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x2000364")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000295")]
		public byte byCc
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x175FAAC", Offset = "0x175FAAC", VA = "0x175FAAC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x175FA34", Offset = "0x175FA34", VA = "0x175FA34")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public byte byValue
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x175FB8C", Offset = "0x175FB8C", VA = "0x175FB8C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x175FB14", Offset = "0x175FB14", VA = "0x175FB14")]
			set
			{
			}
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x175F788", Offset = "0x175F788", VA = "0x175F788")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x175F7C8", Offset = "0x175F7C8", VA = "0x175F7C8")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x175F814", Offset = "0x175F814", VA = "0x175F814", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x175F848", Offset = "0x175F848", VA = "0x175F848", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x175F8B8", Offset = "0x175F8B8", VA = "0x175F8B8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x175FBF4", Offset = "0x175FBF4", VA = "0x175FBF4")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000365")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000297")]
		public byte byValueLsb
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x1761268", Offset = "0x1761268", VA = "0x1761268")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x17611F0", Offset = "0x17611F0", VA = "0x17611F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public byte byValueMsb
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x1761348", Offset = "0x1761348", VA = "0x1761348")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x17612D0", Offset = "0x17612D0", VA = "0x17612D0")]
			set
			{
			}
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x1760F44", Offset = "0x1760F44", VA = "0x1760F44")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x1760F84", Offset = "0x1760F84", VA = "0x1760F84")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1760FD0", Offset = "0x1760FD0", VA = "0x1760FD0", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1761004", Offset = "0x1761004", VA = "0x1761004", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x1761074", Offset = "0x1761074", VA = "0x1761074", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x17613B0", Offset = "0x17613B0", VA = "0x17613B0")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000366")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000299")]
		public byte byNote
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x1760890", Offset = "0x1760890", VA = "0x1760890")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x1760818", Offset = "0x1760818", VA = "0x1760818")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public byte byValue
		{
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x1760970", Offset = "0x1760970", VA = "0x1760970")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x17608F8", Offset = "0x17608F8", VA = "0x17608F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x176056C", Offset = "0x176056C", VA = "0x176056C")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x17605AC", Offset = "0x17605AC", VA = "0x17605AC")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x17605F8", Offset = "0x17605F8", VA = "0x17605F8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x176062C", Offset = "0x176062C", VA = "0x176062C", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x176069C", Offset = "0x176069C", VA = "0x176069C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x17609D8", Offset = "0x17609D8", VA = "0x17609D8")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000367")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700029B")]
		public byte byValue
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x175FF98", Offset = "0x175FF98", VA = "0x175FF98")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x175FF20", Offset = "0x175FF20", VA = "0x175FF20")]
			set
			{
			}
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x175FC74", Offset = "0x175FC74", VA = "0x175FC74")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x175FCB4", Offset = "0x175FCB4", VA = "0x175FCB4")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x175FD00", Offset = "0x175FD00", VA = "0x175FD00", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x175FD34", Offset = "0x175FD34", VA = "0x175FD34", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x175FDA4", Offset = "0x175FDA4", VA = "0x175FDA4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1760000", Offset = "0x1760000", VA = "0x1760000")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000368")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700029C")]
		public byte byProgramNum
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x1761754", Offset = "0x1761754", VA = "0x1761754")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x17616DC", Offset = "0x17616DC", VA = "0x17616DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1761430", Offset = "0x1761430", VA = "0x1761430")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1761470", Offset = "0x1761470", VA = "0x1761470")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x17614BC", Offset = "0x17614BC", VA = "0x17614BC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x17614F0", Offset = "0x17614F0", VA = "0x17614F0", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1761560", Offset = "0x1761560", VA = "0x1761560", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x17617BC", Offset = "0x17617BC", VA = "0x17617BC")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700027E")]
	public byte byChan
	{
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1A1DE58", Offset = "0x1A1DE58", VA = "0x1A1DE58")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1A1DDE0", Offset = "0x1A1DDE0", VA = "0x1A1DDE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700027F")]
	public tGen Gen
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1A1DF4C", Offset = "0x1A1DF4C", VA = "0x1A1DF4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1A1DEC0", Offset = "0x1A1DEC0", VA = "0x1A1DEC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000280")]
	public tCc Cc
	{
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1A1E09C", Offset = "0x1A1E09C", VA = "0x1A1E09C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1A1E010", Offset = "0x1A1E010", VA = "0x1A1E010")]
		set
		{
		}
	}

	[Token(Token = "0x17000281")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1A1E1EC", Offset = "0x1A1E1EC", VA = "0x1A1E1EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1A1E160", Offset = "0x1A1E160", VA = "0x1A1E160")]
		set
		{
		}
	}

	[Token(Token = "0x17000282")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1A1E33C", Offset = "0x1A1E33C", VA = "0x1A1E33C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1A1E2B0", Offset = "0x1A1E2B0", VA = "0x1A1E2B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000283")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1A1E48C", Offset = "0x1A1E48C", VA = "0x1A1E48C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1A1E400", Offset = "0x1A1E400", VA = "0x1A1E400")]
		set
		{
		}
	}

	[Token(Token = "0x17000284")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1A1E5DC", Offset = "0x1A1E5DC", VA = "0x1A1E5DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1A1E550", Offset = "0x1A1E550", VA = "0x1A1E550")]
		set
		{
		}
	}

	[Token(Token = "0x17000285")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1A1E72C", Offset = "0x1A1E72C", VA = "0x1A1E72C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1A1E6A0", Offset = "0x1A1E6A0", VA = "0x1A1E6A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1A1E868", Offset = "0x1A1E868", VA = "0x1A1E868")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1A1E7F0", Offset = "0x1A1E7F0", VA = "0x1A1E7F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000287")]
	public byte byOnOffNote
	{
		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1A1E948", Offset = "0x1A1E948", VA = "0x1A1E948")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1A1E8D0", Offset = "0x1A1E8D0", VA = "0x1A1E8D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000288")]
	public byte byVelocity
	{
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1A1EA28", Offset = "0x1A1EA28", VA = "0x1A1EA28")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1A1E9B0", Offset = "0x1A1E9B0", VA = "0x1A1E9B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000289")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1A1EB08", Offset = "0x1A1EB08", VA = "0x1A1EB08")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1A1EA90", Offset = "0x1A1EA90", VA = "0x1A1EA90")]
		set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public byte byCcValue
	{
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1A1EBE8", Offset = "0x1A1EBE8", VA = "0x1A1EBE8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1A1EB70", Offset = "0x1A1EB70", VA = "0x1A1EB70")]
		set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public byte byValueLsb
	{
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1A1ECC8", Offset = "0x1A1ECC8", VA = "0x1A1ECC8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1A1EC50", Offset = "0x1A1EC50", VA = "0x1A1EC50")]
		set
		{
		}
	}

	[Token(Token = "0x1700028C")]
	public byte byValueMsb
	{
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1A1EDA8", Offset = "0x1A1EDA8", VA = "0x1A1EDA8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1A1ED30", Offset = "0x1A1ED30", VA = "0x1A1ED30")]
		set
		{
		}
	}

	[Token(Token = "0x1700028D")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1A1EE88", Offset = "0x1A1EE88", VA = "0x1A1EE88")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1A1EE10", Offset = "0x1A1EE10", VA = "0x1A1EE10")]
		set
		{
		}
	}

	[Token(Token = "0x1700028E")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1A1EF68", Offset = "0x1A1EF68", VA = "0x1A1EF68")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1A1EEF0", Offset = "0x1A1EEF0", VA = "0x1A1EEF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700028F")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1A1F048", Offset = "0x1A1F048", VA = "0x1A1F048")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1A1EFD0", Offset = "0x1A1EFD0", VA = "0x1A1EFD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000290")]
	public byte byProgramNum
	{
		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1A1F128", Offset = "0x1A1F128", VA = "0x1A1F128")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1A1F0B0", Offset = "0x1A1F0B0", VA = "0x1A1F0B0")]
		set
		{
		}
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x1A1DB34", Offset = "0x1A1DB34", VA = "0x1A1DB34")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0x1A1DB74", Offset = "0x1A1DB74", VA = "0x1A1DB74")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0x1A1DBC0", Offset = "0x1A1DBC0", VA = "0x1A1DBC0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x1A1DBF4", Offset = "0x1A1DBF4", VA = "0x1A1DBF4", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x1A1DC64", Offset = "0x1A1DC64", VA = "0x1A1DC64", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0x1A1F190", Offset = "0x1A1F190", VA = "0x1A1F190")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x2000369")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700029D")]
	public byte byChan
	{
		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1A1F4CC", Offset = "0x1A1F4CC", VA = "0x1A1F4CC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029E")]
	public byte byParam1
	{
		[Token(Token = "0x6001923")]
		[Address(RVA = "0x1A1F534", Offset = "0x1A1F534", VA = "0x1A1F534")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029F")]
	public byte byParam2
	{
		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1A1F59C", Offset = "0x1A1F59C", VA = "0x1A1F59C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A0")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1A1F604", Offset = "0x1A1F604", VA = "0x1A1F604")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x170002A1")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1A1F66C", Offset = "0x1A1F66C", VA = "0x1A1F66C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A2")]
	public byte byVelocity
	{
		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1A1F6D4", Offset = "0x1A1F6D4", VA = "0x1A1F6D4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A3")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1A1F73C", Offset = "0x1A1F73C", VA = "0x1A1F73C")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170002A4")]
	public byte byCcValue
	{
		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1A1F7A4", Offset = "0x1A1F7A4", VA = "0x1A1F7A4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A5")]
	public byte byValueLsb
	{
		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1A1F80C", Offset = "0x1A1F80C", VA = "0x1A1F80C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A6")]
	public byte byValueMsb
	{
		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1A1F874", Offset = "0x1A1F874", VA = "0x1A1F874")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A7")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1A1F8DC", Offset = "0x1A1F8DC", VA = "0x1A1F8DC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A8")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1A1F944", Offset = "0x1A1F944", VA = "0x1A1F944")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A9")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1A1F9AC", Offset = "0x1A1F9AC", VA = "0x1A1F9AC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AA")]
	public byte byProgramNum
	{
		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1A1FA14", Offset = "0x1A1FA14", VA = "0x1A1FA14")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0x1A0E808", Offset = "0x1A0E808", VA = "0x1A0E808")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0x1A1F210", Offset = "0x1A1F210", VA = "0x1A1F210")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0x1A1F25C", Offset = "0x1A1F25C", VA = "0x1A1F25C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x1A1F2E0", Offset = "0x1A1F2E0", VA = "0x1A1F2E0", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0x1A1F348", Offset = "0x1A1F348", VA = "0x1A1F348", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0x1A1FA7C", Offset = "0x1A1FA7C", VA = "0x1A1FA7C")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x200036A")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x400139E")]
	NOTE_OFF = 128,
	[Token(Token = "0x400139F")]
	NOTE_ON = 144,
	[Token(Token = "0x40013A0")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x40013A1")]
	CONTROLLER = 176,
	[Token(Token = "0x40013A2")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x40013A3")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x40013A4")]
	PITCH_BEND = 224,
	[Token(Token = "0x40013A5")]
	SYSEX = 240,
	[Token(Token = "0x40013A6")]
	ESCAPE = 247,
	[Token(Token = "0x40013A7")]
	META = 255
}
[Token(Token = "0x200036B")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002AB")]
	public uint uOffset
	{
		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1A1FEC4", Offset = "0x1A1FEC4", VA = "0x1A1FEC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1A1FE4C", Offset = "0x1A1FE4C", VA = "0x1A1FE4C")]
		set
		{
		}
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0x1A1FAEC", Offset = "0x1A1FAEC", VA = "0x1A1FAEC")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0x1A1FB84", Offset = "0x1A1FB84", VA = "0x1A1FB84")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0x1A1FBD0", Offset = "0x1A1FBD0", VA = "0x1A1FBD0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0x1A1FC60", Offset = "0x1A1FC60", VA = "0x1A1FC60", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0x1A1FCC8", Offset = "0x1A1FCC8", VA = "0x1A1FCC8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001938")]
	[Address(RVA = "0x1A1FF2C", Offset = "0x1A1FF2C", VA = "0x1A1FF2C")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0x1A20008", Offset = "0x1A20008", VA = "0x1A20008")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0x1A200A8", Offset = "0x1A200A8", VA = "0x1A200A8")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600193B")]
	[Address(RVA = "0x1A20104", Offset = "0x1A20104", VA = "0x1A20104")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x200036C")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002AC")]
	public uint uIdentifier
	{
		[Token(Token = "0x6001941")]
		[Address(RVA = "0x15347A8", Offset = "0x15347A8", VA = "0x15347A8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002AD")]
	public uint uPosition
	{
		[Token(Token = "0x6001942")]
		[Address(RVA = "0x153488C", Offset = "0x153488C", VA = "0x153488C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002AE")]
	public string strLabel
	{
		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1534970", Offset = "0x1534970", VA = "0x1534970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0x1534358", Offset = "0x1534358", VA = "0x1534358")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0x1534464", Offset = "0x1534464", VA = "0x1534464")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0x15344B0", Offset = "0x15344B0", VA = "0x15344B0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0x1534534", Offset = "0x1534534", VA = "0x1534534", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0x15345A4", Offset = "0x15345A4", VA = "0x15345A4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001944")]
	[Address(RVA = "0x1534AF4", Offset = "0x1534AF4", VA = "0x1534AF4")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x200036D")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AF")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x600194C")]
		[Address(RVA = "0x153581C", Offset = "0x153581C", VA = "0x153581C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1535718", Offset = "0x1535718", VA = "0x1535718")]
		set
		{
		}
	}

	[Token(Token = "0x170002B0")]
	public uint uDebugFlags
	{
		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1535A04", Offset = "0x1535A04", VA = "0x1535A04")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1535900", Offset = "0x1535900", VA = "0x1535900")]
		set
		{
		}
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0x1535300", Offset = "0x1535300", VA = "0x1535300")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0x1535340", Offset = "0x1535340", VA = "0x1535340")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x153538C", Offset = "0x153538C", VA = "0x153538C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x15353C0", Offset = "0x15353C0", VA = "0x15353C0", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x1535430", Offset = "0x1535430", VA = "0x1535430", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0x1535628", Offset = "0x1535628", VA = "0x1535628")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x200036E")]
public enum AkMeteringFlags
{
	[Token(Token = "0x40013AD")]
	AK_NoMetering = 0,
	[Token(Token = "0x40013AE")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x40013AF")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x40013B0")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x40013B1")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x40013B2")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x200036F")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x40013B4")]
	ErrorCode_NoError,
	[Token(Token = "0x40013B5")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x40013B6")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x40013B7")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x40013B8")]
	ErrorCode_IODevice,
	[Token(Token = "0x40013B9")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x40013BA")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x40013BB")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x40013BC")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x40013BD")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x40013BE")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x40013BF")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x40013C0")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x40013C1")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x40013C2")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x40013C3")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x40013C4")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x40013C5")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x40013C6")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x40013C7")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x40013C8")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x40013C9")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x40013CA")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x40013CB")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x40013CC")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x40013CD")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x40013CE")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x40013CF")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x40013D0")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x40013D1")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x40013D2")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x40013D3")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x40013D4")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x40013D5")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x40013D6")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x40013D7")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x40013D8")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x40013D9")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x40013DA")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x40013DB")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x40013DC")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40013DD")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40013DE")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40013DF")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40013E0")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40013E1")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40013E2")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40013E3")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40013E4")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40013E5")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40013E6")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40013E7")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40013E8")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40013E9")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40013EA")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40013EB")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40013EC")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40013ED")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40013EE")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40013EF")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40013F0")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40013F1")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40013F2")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40013F3")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40013F4")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40013F5")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40013F6")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40013F7")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40013F8")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40013F9")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40013FA")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40013FB")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40013FC")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40013FD")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40013FE")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40013FF")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x4001400")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4001401")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x4001402")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x4001403")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x4001404")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x4001405")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x4001406")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x4001407")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x4001408")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x4001409")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x400140A")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x400140B")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x400140C")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x400140D")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x400140E")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x400140F")]
	ErrorCode_AudioDeviceOverproduction,
	[Token(Token = "0x4001410")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x4001411")]
	Num_ErrorCodes
}
[Token(Token = "0x2000370")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4001413")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4001414")]
	ErrorLevel_Error,
	[Token(Token = "0x4001415")]
	ErrorLevel_All
}
[Token(Token = "0x2000371")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B1")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1535E10", Offset = "0x1535E10", VA = "0x1535E10")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170002B2")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1535EF4", Offset = "0x1535EF4", VA = "0x1535EF4")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170002B3")]
	public uint playingID
	{
		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1535FD8", Offset = "0x1535FD8", VA = "0x1535FD8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B4")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001957")]
		[Address(RVA = "0x15360BC", Offset = "0x15360BC", VA = "0x15360BC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170002B5")]
	public string message
	{
		[Token(Token = "0x6001958")]
		[Address(RVA = "0x15361A0", Offset = "0x15361A0", VA = "0x15361A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x1535AE8", Offset = "0x1535AE8", VA = "0x1535AE8")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x1535B28", Offset = "0x1535B28", VA = "0x1535B28")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0x1535B74", Offset = "0x1535B74", VA = "0x1535B74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0x1535BA8", Offset = "0x1535BA8", VA = "0x1535BA8", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0x1535C18", Offset = "0x1535C18", VA = "0x1535C18", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0x1536320", Offset = "0x1536320", VA = "0x1536320")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x2000372")]
public enum AkMultiPositionType
{
	[Token(Token = "0x4001419")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x400141A")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x400141B")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000373")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002B6")]
	public uint playlistID
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0x15368EC", Offset = "0x15368EC", VA = "0x15368EC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B7")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x6001960")]
		[Address(RVA = "0x15369D0", Offset = "0x15369D0", VA = "0x15369D0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B8")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1536AB4", Offset = "0x1536AB4", VA = "0x1536AB4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B9")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1536B98", Offset = "0x1536B98", VA = "0x1536B98")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0x153649C", Offset = "0x153649C", VA = "0x153649C")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0x15365A8", Offset = "0x15365A8", VA = "0x15365A8")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x15365F4", Offset = "0x15365F4", VA = "0x15365F4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x1536678", Offset = "0x1536678", VA = "0x1536678", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x15366E8", Offset = "0x15366E8", VA = "0x15366E8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0x1536C7C", Offset = "0x1536C7C", VA = "0x1536C7C")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x2000374")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002BA")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1537188", Offset = "0x1537188", VA = "0x1537188")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1537084", Offset = "0x1537084", VA = "0x1537084")]
		set
		{
		}
	}

	[Token(Token = "0x6001964")]
	[Address(RVA = "0x1536D5C", Offset = "0x1536D5C", VA = "0x1536D5C")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0x1536D9C", Offset = "0x1536D9C", VA = "0x1536D9C")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0x1536DE8", Offset = "0x1536DE8", VA = "0x1536DE8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001967")]
	[Address(RVA = "0x1536E1C", Offset = "0x1536E1C", VA = "0x1536E1C", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0x1536E8C", Offset = "0x1536E8C", VA = "0x1536E8C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0x153726C", Offset = "0x153726C", VA = "0x153726C")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x2000375")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002BB")]
	public uint playingID
	{
		[Token(Token = "0x6001971")]
		[Address(RVA = "0x15377AC", Offset = "0x15377AC", VA = "0x15377AC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002BC")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1537890", Offset = "0x1537890", VA = "0x1537890")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BD")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1537974", Offset = "0x1537974", VA = "0x1537974")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BE")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1537A58", Offset = "0x1537A58", VA = "0x1537A58")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BF")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6001975")]
		[Address(RVA = "0x1537B3C", Offset = "0x1537B3C", VA = "0x1537B3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C0")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1537C20", Offset = "0x1537C20", VA = "0x1537C20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C1")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1537D04", Offset = "0x1537D04", VA = "0x1537D04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C2")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1537DE8", Offset = "0x1537DE8", VA = "0x1537DE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C3")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1537ECC", Offset = "0x1537ECC", VA = "0x1537ECC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C4")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1537FB0", Offset = "0x1537FB0", VA = "0x1537FB0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C5")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1538094", Offset = "0x1538094", VA = "0x1538094")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x170002C6")]
	public string userCueName
	{
		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1538178", Offset = "0x1538178", VA = "0x1538178")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0x153735C", Offset = "0x153735C", VA = "0x153735C")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0x1537468", Offset = "0x1537468", VA = "0x1537468")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0x15374B4", Offset = "0x15374B4", VA = "0x15374B4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0x1537538", Offset = "0x1537538", VA = "0x1537538", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0x15375A8", Offset = "0x15375A8", VA = "0x15375A8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x1538298", Offset = "0x1538298", VA = "0x1538298")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x2000376")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C7")]
	public uint objID
	{
		[Token(Token = "0x6001984")]
		[Address(RVA = "0x15387A4", Offset = "0x15387A4", VA = "0x15387A4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001983")]
		[Address(RVA = "0x15386A0", Offset = "0x15386A0", VA = "0x15386A0")]
		set
		{
		}
	}

	[Token(Token = "0x170002C8")]
	public uint parentID
	{
		[Token(Token = "0x6001986")]
		[Address(RVA = "0x153898C", Offset = "0x153898C", VA = "0x153898C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1538888", Offset = "0x1538888", VA = "0x1538888")]
		set
		{
		}
	}

	[Token(Token = "0x170002C9")]
	public int iDepth
	{
		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1538B74", Offset = "0x1538B74", VA = "0x1538B74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1538A70", Offset = "0x1538A70", VA = "0x1538A70")]
		set
		{
		}
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x1538378", Offset = "0x1538378", VA = "0x1538378")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x15383B8", Offset = "0x15383B8", VA = "0x15383B8")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x1538404", Offset = "0x1538404", VA = "0x1538404", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0x1538438", Offset = "0x1538438", VA = "0x1538438", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0x15384A8", Offset = "0x15384A8", VA = "0x15384A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x1538C58", Offset = "0x1538C58", VA = "0x1538C58")]
	public void Clear()
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x1538D3C", Offset = "0x1538D3C", VA = "0x1538D3C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x1538E08", Offset = "0x1538E08", VA = "0x1538E08")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x1538F34", Offset = "0x1538F34", VA = "0x1538F34")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x2000377")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CA")]
	public float occlusion
	{
		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1539F5C", Offset = "0x1539F5C", VA = "0x1539F5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1539E58", Offset = "0x1539E58", VA = "0x1539E58")]
		set
		{
		}
	}

	[Token(Token = "0x170002CB")]
	public float obstruction
	{
		[Token(Token = "0x6001995")]
		[Address(RVA = "0x153A144", Offset = "0x153A144", VA = "0x153A144")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001994")]
		[Address(RVA = "0x153A040", Offset = "0x153A040", VA = "0x153A040")]
		set
		{
		}
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0x1539B30", Offset = "0x1539B30", VA = "0x1539B30")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0x1539B70", Offset = "0x1539B70", VA = "0x1539B70")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0x1539BBC", Offset = "0x1539BBC", VA = "0x1539BBC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0x1539BF0", Offset = "0x1539BF0", VA = "0x1539BF0", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0x1539C60", Offset = "0x1539C60", VA = "0x1539C60", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0x153A228", Offset = "0x153A228", VA = "0x153A228")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0x153A30C", Offset = "0x153A30C", VA = "0x153A30C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0x153A3D8", Offset = "0x153A3D8", VA = "0x153A3D8")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0x153A504", Offset = "0x153A504", VA = "0x153A504")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x2000378")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CC")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x153B268", Offset = "0x153B268", VA = "0x153B268")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x153B164", Offset = "0x153B164", VA = "0x153B164")]
		set
		{
		}
	}

	[Token(Token = "0x170002CD")]
	public uint idDevice
	{
		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x153B450", Offset = "0x153B450", VA = "0x153B450")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x153B34C", Offset = "0x153B34C", VA = "0x153B34C")]
		set
		{
		}
	}

	[Token(Token = "0x170002CE")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x153B638", Offset = "0x153B638", VA = "0x153B638")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x153B534", Offset = "0x153B534", VA = "0x153B534")]
		set
		{
		}
	}

	[Token(Token = "0x170002CF")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x153B834", Offset = "0x153B834", VA = "0x153B834")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x153B71C", Offset = "0x153B71C", VA = "0x153B71C")]
		set
		{
		}
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0x153A804", Offset = "0x153A804", VA = "0x153A804")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0x153A844", Offset = "0x153A844", VA = "0x153A844")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0x153A890", Offset = "0x153A890", VA = "0x153A890", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0x153A8C4", Offset = "0x153A8C4", VA = "0x153A8C4", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0x153A934", Offset = "0x153A934", VA = "0x153A934", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0x153AB2C", Offset = "0x153AB2C", VA = "0x153AB2C")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0x153AC1C", Offset = "0x153AC1C", VA = "0x153AC1C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0x153AD9C", Offset = "0x153AD9C", VA = "0x153AD9C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0x153AF04", Offset = "0x153AF04", VA = "0x153AF04")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0x153B040", Offset = "0x153B040", VA = "0x153B040")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x2000379")]
public enum AkPanningRule
{
	[Token(Token = "0x4001427")]
	AkPanningRule_Speakers,
	[Token(Token = "0x4001428")]
	AkPanningRule_Headphones
}
[Token(Token = "0x200037A")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D0")]
	public AkVector listenerPos
	{
		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x153BE14", Offset = "0x153BE14", VA = "0x153BE14")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x153BC9C", Offset = "0x153BC9C", VA = "0x153BC9C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D1")]
	public AkVector emitterPos
	{
		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x153C0C0", Offset = "0x153C0C0", VA = "0x153C0C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x153BF94", Offset = "0x153BF94", VA = "0x153BF94")]
		set
		{
		}
	}

	[Token(Token = "0x170002D2")]
	public uint numValidPaths
	{
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x153C304", Offset = "0x153C304", VA = "0x153C304")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x153C200", Offset = "0x153C200", VA = "0x153C200")]
		set
		{
		}
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0x153B974", Offset = "0x153B974", VA = "0x153B974")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0x153B9B4", Offset = "0x153B9B4", VA = "0x153B9B4")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0x153BA00", Offset = "0x153BA00", VA = "0x153BA00", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0x153BA34", Offset = "0x153BA34", VA = "0x153BA34", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0x153BAA4", Offset = "0x153BAA4", VA = "0x153BAA4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0x153C3E8", Offset = "0x153C3E8", VA = "0x153C3E8")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x200037B")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0x153E08C", Offset = "0x153E08C", VA = "0x153E08C")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0x153E1E0", Offset = "0x153E1E0", VA = "0x153E1E0")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0x153E22C", Offset = "0x153E22C", VA = "0x153E22C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0x153E2EC", Offset = "0x153E2EC", VA = "0x153E2EC", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0x153E3C4", Offset = "0x153E3C4", VA = "0x153E3C4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0x153E73C", Offset = "0x153E73C", VA = "0x153E73C")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0x153E8B8", Offset = "0x153E8B8", VA = "0x153E8B8")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0x153E9FC", Offset = "0x153E9FC", VA = "0x153E9FC")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0x153EB30", Offset = "0x153EB30", VA = "0x153EB30")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0x153EC44", Offset = "0x153EC44", VA = "0x153EC44")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0x153ED48", Offset = "0x153ED48", VA = "0x153ED48")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x200037C")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0x153E1A0", Offset = "0x153E1A0", VA = "0x153E1A0")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0x153EE28", Offset = "0x153EE28", VA = "0x153EE28")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0x153E2B8", Offset = "0x153E2B8", VA = "0x153E2B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x153E354", Offset = "0x153E354", VA = "0x153E354", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0x153E5C4", Offset = "0x153E5C4", VA = "0x153E5C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x153EEF4", Offset = "0x153EEF4", VA = "0x153EEF4")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0x153EFE4", Offset = "0x153EFE4", VA = "0x153EFE4")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0x153F108", Offset = "0x153F108", VA = "0x153F108")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0x153F22C", Offset = "0x153F22C", VA = "0x153F22C")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0x153F3E4", Offset = "0x153F3E4", VA = "0x153F3E4")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0x153F53C", Offset = "0x153F53C", VA = "0x153F53C")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0x153F640", Offset = "0x153F640", VA = "0x153F640")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0x153F798", Offset = "0x153F798", VA = "0x153F798")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0x153F89C", Offset = "0x153F89C", VA = "0x153F89C")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0x153F980", Offset = "0x153F980", VA = "0x153F980")]
	public void Term()
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0x153FA64", Offset = "0x153FA64", VA = "0x153FA64")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0x153FB48", Offset = "0x153FB48", VA = "0x153FB48")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0x153FCC8", Offset = "0x153FCC8", VA = "0x153FCC8")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0x153FDB4", Offset = "0x153FDB4", VA = "0x153FDB4")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0x153FF3C", Offset = "0x153FF3C", VA = "0x153FF3C")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0x154007C", Offset = "0x154007C", VA = "0x154007C")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0x1540204", Offset = "0x1540204", VA = "0x1540204")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0x1540328", Offset = "0x1540328", VA = "0x1540328")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0x154040C", Offset = "0x154040C", VA = "0x154040C")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0x1540538", Offset = "0x1540538", VA = "0x1540538")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0x1540664", Offset = "0x1540664", VA = "0x1540664")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0x1540748", Offset = "0x1540748", VA = "0x1540748")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x154088C", Offset = "0x154088C", VA = "0x154088C")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0x15409EC", Offset = "0x15409EC", VA = "0x15409EC")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0x1540AF8", Offset = "0x1540AF8", VA = "0x1540AF8")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0x1540BE4", Offset = "0x1540BE4", VA = "0x1540BE4")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0x1540CF0", Offset = "0x1540CF0", VA = "0x1540CF0")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0x1540E1C", Offset = "0x1540E1C", VA = "0x1540E1C")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200037D")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D3")]
	public uint audioNodeID
	{
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x15418D8", Offset = "0x15418D8", VA = "0x15418D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x15417D4", Offset = "0x15417D4", VA = "0x15417D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public int msDelay
	{
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1541AC0", Offset = "0x1541AC0", VA = "0x1541AC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x15419BC", Offset = "0x15419BC", VA = "0x15419BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002D5")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1541CA8", Offset = "0x1541CA8", VA = "0x1541CA8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1541BA4", Offset = "0x1541BA4", VA = "0x1541BA4")]
		set
		{
		}
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0x153FC88", Offset = "0x153FC88", VA = "0x153FC88")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0x153F308", Offset = "0x153F308", VA = "0x153F308")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0x1540F48", Offset = "0x1540F48", VA = "0x1540F48", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0x1540F7C", Offset = "0x1540F7C", VA = "0x1540F7C", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0x1540FEC", Offset = "0x1540FEC", VA = "0x1540FEC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0x15411E4", Offset = "0x15411E4", VA = "0x15411E4")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0x15412D4", Offset = "0x15412D4", VA = "0x15412D4")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0x1541408", Offset = "0x1541408", VA = "0x1541408")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0x1541574", Offset = "0x1541574", VA = "0x1541574")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0x15416A8", Offset = "0x15416A8", VA = "0x15416A8")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200037E")]
public enum AkPluginType
{
	[Token(Token = "0x4001431")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4001432")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4001433")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4001434")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4001435")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x4001436")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x4001437")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x4001438")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x200037F")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D6")]
	public float fCenterPct
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1542730", Offset = "0x1542730", VA = "0x1542730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x154262C", Offset = "0x154262C", VA = "0x154262C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1542918", Offset = "0x1542918", VA = "0x1542918")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1542814", Offset = "0x1542814", VA = "0x1542814")]
		set
		{
		}
	}

	[Token(Token = "0x170002D8")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1542B00", Offset = "0x1542B00", VA = "0x1542B00")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x15429FC", Offset = "0x15429FC", VA = "0x15429FC")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1542CE8", Offset = "0x1542CE8", VA = "0x1542CE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1542BE4", Offset = "0x1542BE4", VA = "0x1542BE4")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x1542ED8", Offset = "0x1542ED8", VA = "0x1542ED8")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1542DD4", Offset = "0x1542DD4", VA = "0x1542DD4")]
		set
		{
		}
	}

	[Token(Token = "0x170002DB")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x15430C0", Offset = "0x15430C0", VA = "0x15430C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1542FBC", Offset = "0x1542FBC", VA = "0x1542FBC")]
		set
		{
		}
	}

	[Token(Token = "0x170002DC")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x15432B0", Offset = "0x15432B0", VA = "0x15432B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x15431AC", Offset = "0x15431AC", VA = "0x15431AC")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public float fInnerAngle
	{
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x15434A0", Offset = "0x15434A0", VA = "0x15434A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x154339C", Offset = "0x154339C", VA = "0x154339C")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public float fOuterAngle
	{
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x1543688", Offset = "0x1543688", VA = "0x1543688")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1543584", Offset = "0x1543584", VA = "0x1543584")]
		set
		{
		}
	}

	[Token(Token = "0x170002DF")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1543870", Offset = "0x1543870", VA = "0x1543870")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x154376C", Offset = "0x154376C", VA = "0x154376C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E0")]
	public float LPFCone
	{
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1543A58", Offset = "0x1543A58", VA = "0x1543A58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1543954", Offset = "0x1543954", VA = "0x1543954")]
		set
		{
		}
	}

	[Token(Token = "0x170002E1")]
	public float HPFCone
	{
		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1543C40", Offset = "0x1543C40", VA = "0x1543C40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1543B3C", Offset = "0x1543B3C", VA = "0x1543B3C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E2")]
	public float fMaxDistance
	{
		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1543E28", Offset = "0x1543E28", VA = "0x1543E28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1543D24", Offset = "0x1543D24", VA = "0x1543D24")]
		set
		{
		}
	}

	[Token(Token = "0x170002E3")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1544010", Offset = "0x1544010", VA = "0x1544010")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1543F0C", Offset = "0x1543F0C", VA = "0x1543F0C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x15441F8", Offset = "0x15441F8", VA = "0x15441F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x15440F4", Offset = "0x15440F4", VA = "0x15440F4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E5")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x15443E0", Offset = "0x15443E0", VA = "0x15443E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x15442DC", Offset = "0x15442DC", VA = "0x15442DC")]
		set
		{
		}
	}

	[Token(Token = "0x170002E6")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x15445C8", Offset = "0x15445C8", VA = "0x15445C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x15444C4", Offset = "0x15444C4", VA = "0x15444C4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E7")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x15447B0", Offset = "0x15447B0", VA = "0x15447B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x15446AC", Offset = "0x15446AC", VA = "0x15446AC")]
		set
		{
		}
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0x1542304", Offset = "0x1542304", VA = "0x1542304")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0x1542344", Offset = "0x1542344", VA = "0x1542344")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019F6")]
	[Address(RVA = "0x1542390", Offset = "0x1542390", VA = "0x1542390", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0x15423C4", Offset = "0x15423C4", VA = "0x15423C4", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x1542434", Offset = "0x1542434", VA = "0x1542434", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x1544894", Offset = "0x1544894", VA = "0x1544894")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x2000380")]
public enum AkPreparationType
{
	[Token(Token = "0x400143C")]
	Preparation_Load,
	[Token(Token = "0x400143D")]
	Preparation_Unload,
	[Token(Token = "0x400143E")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x2000381")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4001440")]
	RTPCValue_Default,
	[Token(Token = "0x4001441")]
	RTPCValue_Global,
	[Token(Token = "0x4001442")]
	RTPCValue_GameObject,
	[Token(Token = "0x4001443")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4001444")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000382")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E8")]
	public float fPrev
	{
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1545B70", Offset = "0x1545B70", VA = "0x1545B70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x1545A6C", Offset = "0x1545A6C", VA = "0x1545A6C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E9")]
	public float fNext
	{
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x1545D58", Offset = "0x1545D58", VA = "0x1545D58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x1545C54", Offset = "0x1545C54", VA = "0x1545C54")]
		set
		{
		}
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x1545530", Offset = "0x1545530", VA = "0x1545530")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x1545570", Offset = "0x1545570", VA = "0x1545570")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x15455BC", Offset = "0x15455BC", VA = "0x15455BC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x15455F0", Offset = "0x15455F0", VA = "0x15455F0", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x1545660", Offset = "0x1545660", VA = "0x1545660", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x1545858", Offset = "0x1545858", VA = "0x1545858")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x1545948", Offset = "0x1545948", VA = "0x1545948")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000383")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002EA")]
	public AkVector imageSource
	{
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x1546290", Offset = "0x1546290", VA = "0x1546290")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1546164", Offset = "0x1546164", VA = "0x1546164")]
		set
		{
		}
	}

	[Token(Token = "0x170002EB")]
	public uint numPathPoints
	{
		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x15464D4", Offset = "0x15464D4", VA = "0x15464D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x15463D0", Offset = "0x15463D0", VA = "0x15463D0")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public uint numReflections
	{
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x15466BC", Offset = "0x15466BC", VA = "0x15466BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x15465B8", Offset = "0x15465B8", VA = "0x15465B8")]
		set
		{
		}
	}

	[Token(Token = "0x170002ED")]
	public float level
	{
		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x15468A4", Offset = "0x15468A4", VA = "0x15468A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x15467A0", Offset = "0x15467A0", VA = "0x15467A0")]
		set
		{
		}
	}

	[Token(Token = "0x170002EE")]
	public bool isOccluded
	{
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x1546A8C", Offset = "0x1546A8C", VA = "0x1546A8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1546988", Offset = "0x1546988", VA = "0x1546988")]
		set
		{
		}
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0x1545E3C", Offset = "0x1545E3C", VA = "0x1545E3C")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0x1545E7C", Offset = "0x1545E7C", VA = "0x1545E7C")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x1545EC8", Offset = "0x1545EC8", VA = "0x1545EC8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x1545EFC", Offset = "0x1545EFC", VA = "0x1545EFC", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x1545F6C", Offset = "0x1545F6C", VA = "0x1545F6C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x1546B78", Offset = "0x1546B78", VA = "0x1546B78")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x1546C44", Offset = "0x1546C44", VA = "0x1546C44")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x1546DA4", Offset = "0x1546DA4", VA = "0x1546DA4")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x1546EE8", Offset = "0x1546EE8", VA = "0x1546EE8")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x1546FEC", Offset = "0x1546FEC", VA = "0x1546FEC")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x1547118", Offset = "0x1547118", VA = "0x1547118")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000384")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002EF")]
	public AkVector Up
	{
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x15479AC", Offset = "0x15479AC", VA = "0x15479AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1548B10", Offset = "0x1548B10", VA = "0x1548B10")]
		set
		{
		}
	}

	[Token(Token = "0x170002F0")]
	public AkVector Front
	{
		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1547BC8", Offset = "0x1547BC8", VA = "0x1547BC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1548CBC", Offset = "0x1548CBC", VA = "0x1548CBC")]
		set
		{
		}
	}

	[Token(Token = "0x170002F1")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1548EF8", Offset = "0x1548EF8", VA = "0x1548EF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1547C88", Offset = "0x1547C88", VA = "0x1547C88")]
		set
		{
		}
	}

	[Token(Token = "0x170002F2")]
	public float ReverbLevel
	{
		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x154906C", Offset = "0x154906C", VA = "0x154906C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1547CFC", Offset = "0x1547CFC", VA = "0x1547CFC")]
		set
		{
		}
	}

	[Token(Token = "0x170002F3")]
	public float WallOcclusion
	{
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x15491E0", Offset = "0x15491E0", VA = "0x15491E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1547D70", Offset = "0x1547D70", VA = "0x1547D70")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x1549354", Offset = "0x1549354", VA = "0x1549354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1547DE4", Offset = "0x1547DE4", VA = "0x1547DE4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F5")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x15494C8", Offset = "0x15494C8", VA = "0x15494C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1547E58", Offset = "0x1547E58", VA = "0x1547E58")]
		set
		{
		}
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x1548774", Offset = "0x1548774", VA = "0x1548774")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x15487B4", Offset = "0x15487B4", VA = "0x15487B4")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0x1548800", Offset = "0x1548800", VA = "0x1548800", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x1548834", Offset = "0x1548834", VA = "0x1548834", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x15488A4", Offset = "0x15488A4", VA = "0x15488A4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x1547930", Offset = "0x1547930", VA = "0x1547930")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000385")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002F6")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x154C234", Offset = "0x154C234", VA = "0x154C234")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x154C130", Offset = "0x154C130", VA = "0x154C130")]
		set
		{
		}
	}

	[Token(Token = "0x170002F7")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x154C41C", Offset = "0x154C41C", VA = "0x154C41C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x154C318", Offset = "0x154C318", VA = "0x154C318")]
		set
		{
		}
	}

	[Token(Token = "0x170002F8")]
	public int iActiveDuration
	{
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x154C604", Offset = "0x154C604", VA = "0x154C604")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x154C500", Offset = "0x154C500", VA = "0x154C500")]
		set
		{
		}
	}

	[Token(Token = "0x170002F9")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x154C7EC", Offset = "0x154C7EC", VA = "0x154C7EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x154C6E8", Offset = "0x154C6E8", VA = "0x154C6E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002FA")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x154C9D4", Offset = "0x154C9D4", VA = "0x154C9D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x154C8D0", Offset = "0x154C8D0", VA = "0x154C8D0")]
		set
		{
		}
	}

	[Token(Token = "0x170002FB")]
	public float fBeatDuration
	{
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x154CBBC", Offset = "0x154CBBC", VA = "0x154CBBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x154CAB8", Offset = "0x154CAB8", VA = "0x154CAB8")]
		set
		{
		}
	}

	[Token(Token = "0x170002FC")]
	public float fBarDuration
	{
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x154CDA4", Offset = "0x154CDA4", VA = "0x154CDA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x154CCA0", Offset = "0x154CCA0", VA = "0x154CCA0")]
		set
		{
		}
	}

	[Token(Token = "0x170002FD")]
	public float fGridDuration
	{
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x154CF8C", Offset = "0x154CF8C", VA = "0x154CF8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x154CE88", Offset = "0x154CE88", VA = "0x154CE88")]
		set
		{
		}
	}

	[Token(Token = "0x170002FE")]
	public float fGridOffset
	{
		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x154D174", Offset = "0x154D174", VA = "0x154D174")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x154D070", Offset = "0x154D070", VA = "0x154D070")]
		set
		{
		}
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0x154BE08", Offset = "0x154BE08", VA = "0x154BE08")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0x154BE48", Offset = "0x154BE48", VA = "0x154BE48")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x154BE94", Offset = "0x154BE94", VA = "0x154BE94", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x154BEC8", Offset = "0x154BEC8", VA = "0x154BEC8", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x154BF38", Offset = "0x154BF38", VA = "0x154BF38", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x154D258", Offset = "0x154D258", VA = "0x154D258")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000386")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002FF")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x154D670", Offset = "0x154D670", VA = "0x154D670")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000300")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x154D754", Offset = "0x154D754", VA = "0x154D754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000301")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x154D894", Offset = "0x154D894", VA = "0x154D894")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x154D348", Offset = "0x154D348", VA = "0x154D348")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x154D388", Offset = "0x154D388", VA = "0x154D388")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x154D3D4", Offset = "0x154D3D4", VA = "0x154D3D4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x154D408", Offset = "0x154D408", VA = "0x154D408", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x154D478", Offset = "0x154D478", VA = "0x154D478", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0x154D978", Offset = "0x154D978", VA = "0x154D978")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0x154DA5C", Offset = "0x154DA5C", VA = "0x154DA5C")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x2000387")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4001450")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4001451")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4001452")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000388")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000302")]
	public uint sourceID
	{
		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1579D60", Offset = "0x1579D60", VA = "0x1579D60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1579CEC", Offset = "0x1579CEC", VA = "0x1579CEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000303")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x1579E38", Offset = "0x1579E38", VA = "0x1579E38")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1579DC4", Offset = "0x1579DC4", VA = "0x1579DC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000304")]
	public uint uMediaSize
	{
		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x1579F10", Offset = "0x1579F10", VA = "0x1579F10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1579E9C", Offset = "0x1579E9C", VA = "0x1579E9C")]
		set
		{
		}
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0x1579A44", Offset = "0x1579A44", VA = "0x1579A44")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0x1579A84", Offset = "0x1579A84", VA = "0x1579A84")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0x1579AD0", Offset = "0x1579AD0", VA = "0x1579AD0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0x1579B04", Offset = "0x1579B04", VA = "0x1579B04", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x1579B74", Offset = "0x1579B74", VA = "0x1579B74", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x1579F74", Offset = "0x1579F74", VA = "0x1579F74")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0x1579FD8", Offset = "0x1579FD8", VA = "0x1579FD8")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0x157A030", Offset = "0x157A030", VA = "0x157A030")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0x157A0CC", Offset = "0x157A0CC", VA = "0x157A0CC")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x2000389")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000305")]
	public int uPoolID
	{
		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x157ABD4", Offset = "0x157ABD4", VA = "0x157ABD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x157AB60", Offset = "0x157AB60", VA = "0x157AB60")]
		set
		{
		}
	}

	[Token(Token = "0x17000306")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x157ACAC", Offset = "0x157ACAC", VA = "0x157ACAC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x157AC38", Offset = "0x157AC38", VA = "0x157AC38")]
		set
		{
		}
	}

	[Token(Token = "0x17000307")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x157AD84", Offset = "0x157AD84", VA = "0x157AD84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x157AD10", Offset = "0x157AD10", VA = "0x157AD10")]
		set
		{
		}
	}

	[Token(Token = "0x17000308")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x157AE5C", Offset = "0x157AE5C", VA = "0x157AE5C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x157ADE8", Offset = "0x157ADE8", VA = "0x157ADE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000309")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x157AF34", Offset = "0x157AF34", VA = "0x157AF34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x157AEC0", Offset = "0x157AEC0", VA = "0x157AEC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700030A")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x157B00C", Offset = "0x157B00C", VA = "0x157B00C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x157AF98", Offset = "0x157AF98", VA = "0x157AF98")]
		set
		{
		}
	}

	[Token(Token = "0x1700030B")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x157B0E4", Offset = "0x157B0E4", VA = "0x157B0E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x157B070", Offset = "0x157B070", VA = "0x157B070")]
		set
		{
		}
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0x157A888", Offset = "0x157A888", VA = "0x157A888")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0x1564CFC", Offset = "0x1564CFC", VA = "0x1564CFC")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0x157A8C8", Offset = "0x157A8C8", VA = "0x157A8C8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0x157A8FC", Offset = "0x157A8FC", VA = "0x157A8FC", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0x157A96C", Offset = "0x157A96C", VA = "0x157A96C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x157AAE4", Offset = "0x157AAE4", VA = "0x157AAE4")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200038A")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4001458")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x4001459")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x200038B")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030C")]
	public uint uMemorySize
	{
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x157B87C", Offset = "0x157B87C", VA = "0x157B87C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x157B808", Offset = "0x157B808", VA = "0x157B808")]
		set
		{
		}
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0x157B5AC", Offset = "0x157B5AC", VA = "0x157B5AC")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0x15666C8", Offset = "0x15666C8", VA = "0x15666C8")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0x157B5EC", Offset = "0x157B5EC", VA = "0x157B5EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0x157B620", Offset = "0x157B620", VA = "0x157B620", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0x157B690", Offset = "0x157B690", VA = "0x157B690", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0x157B8E0", Offset = "0x157B8E0", VA = "0x157B8E0")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x200038C")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030D")]
	public uint uIdxThread
	{
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x157D244", Offset = "0x157D244", VA = "0x157D244")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x157D1D0", Offset = "0x157D1D0", VA = "0x157D1D0")]
		set
		{
		}
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0x157CF28", Offset = "0x157CF28", VA = "0x157CF28")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x157CF68", Offset = "0x157CF68", VA = "0x157CF68")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x157CFB4", Offset = "0x157CFB4", VA = "0x157CFB4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x157CFE8", Offset = "0x157CFE8", VA = "0x157CFE8", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x157D058", Offset = "0x157D058", VA = "0x157D058", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x157D2A8", Offset = "0x157D2A8", VA = "0x157D2A8")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x200038D")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x157F8F8", Offset = "0x157F8F8", VA = "0x157F8F8")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x156091C", Offset = "0x156091C", VA = "0x156091C")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x157F938", Offset = "0x157F938", VA = "0x157F938", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x157F96C", Offset = "0x157F96C", VA = "0x157F96C", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x157F9DC", Offset = "0x157F9DC", VA = "0x157F9DC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x157FB54", Offset = "0x157FB54", VA = "0x157FB54")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x157FBF8", Offset = "0x157FBF8", VA = "0x157FBF8")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x157FC9C", Offset = "0x157FC9C", VA = "0x157FC9C")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x157FD40", Offset = "0x157FD40", VA = "0x157FD40")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x154A200", Offset = "0x154A200", VA = "0x154A200")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x157FE04", Offset = "0x157FE04", VA = "0x157FE04")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0x157FEA0", Offset = "0x157FEA0", VA = "0x157FEA0")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0x157FF2C", Offset = "0x157FF2C", VA = "0x157FF2C")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0x157FFD8", Offset = "0x157FFD8", VA = "0x157FFD8")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x154A184", Offset = "0x154A184", VA = "0x154A184")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x200038E")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030E")]
	public ushort point0
	{
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1580454", Offset = "0x1580454", VA = "0x1580454")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x157C818", Offset = "0x157C818", VA = "0x157C818")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public ushort point1
	{
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x15804B8", Offset = "0x15804B8", VA = "0x15804B8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x157C88C", Offset = "0x157C88C", VA = "0x157C88C")]
		set
		{
		}
	}

	[Token(Token = "0x17000310")]
	public ushort point2
	{
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x158051C", Offset = "0x158051C", VA = "0x158051C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x157C900", Offset = "0x157C900", VA = "0x157C900")]
		set
		{
		}
	}

	[Token(Token = "0x17000311")]
	public ushort surface
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1580580", Offset = "0x1580580", VA = "0x1580580")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x157C974", Offset = "0x157C974", VA = "0x157C974")]
		set
		{
		}
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x1580084", Offset = "0x1580084", VA = "0x1580084")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x15800C4", Offset = "0x15800C4", VA = "0x15800C4")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x1580110", Offset = "0x1580110", VA = "0x1580110", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x1580144", Offset = "0x1580144", VA = "0x1580144", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x15801B4", Offset = "0x15801B4", VA = "0x15801B4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x158032C", Offset = "0x158032C", VA = "0x158032C")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x15803A8", Offset = "0x15803A8", VA = "0x15803A8")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x15805E4", Offset = "0x15805E4", VA = "0x15805E4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x1580648", Offset = "0x1580648", VA = "0x1580648")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x15806A0", Offset = "0x15806A0", VA = "0x15806A0")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200038F")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000312")]
	public float X
	{
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x15818E0", Offset = "0x15818E0", VA = "0x15818E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x1547A6C", Offset = "0x1547A6C", VA = "0x1547A6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000313")]
	public float Y
	{
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1581944", Offset = "0x1581944", VA = "0x1581944")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1547AE0", Offset = "0x1547AE0", VA = "0x1547AE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000314")]
	public float Z
	{
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x15819A8", Offset = "0x15819A8", VA = "0x15819A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1547B54", Offset = "0x1547B54", VA = "0x1547B54")]
		set
		{
		}
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x153BF54", Offset = "0x153BF54", VA = "0x153BF54")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x153BD38", Offset = "0x153BD38", VA = "0x153BD38")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x1581660", Offset = "0x1581660", VA = "0x1581660", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x1581694", Offset = "0x1581694", VA = "0x1581694", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x1581704", Offset = "0x1581704", VA = "0x1581704", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x158187C", Offset = "0x158187C", VA = "0x158187C")]
	public void Zero()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x154A324", Offset = "0x154A324", VA = "0x154A324")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000390")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000315")]
	public float X
	{
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x1581DD4", Offset = "0x1581DD4", VA = "0x1581DD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x157C660", Offset = "0x157C660", VA = "0x157C660")]
		set
		{
		}
	}

	[Token(Token = "0x17000316")]
	public float Y
	{
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x1581E38", Offset = "0x1581E38", VA = "0x1581E38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x157C6D4", Offset = "0x157C6D4", VA = "0x157C6D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000317")]
	public float Z
	{
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x1581E9C", Offset = "0x1581E9C", VA = "0x1581E9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x157C748", Offset = "0x157C748", VA = "0x157C748")]
		set
		{
		}
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x1581A0C", Offset = "0x1581A0C", VA = "0x1581A0C")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x1581A4C", Offset = "0x1581A4C", VA = "0x1581A4C")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0x1581A98", Offset = "0x1581A98", VA = "0x1581A98", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x1581ACC", Offset = "0x1581ACC", VA = "0x1581ACC", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x1581B3C", Offset = "0x1581B3C", VA = "0x1581B3C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x1581CB4", Offset = "0x1581CB4", VA = "0x1581CB4")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x1581D30", Offset = "0x1581D30", VA = "0x1581D30")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x1581F00", Offset = "0x1581F00", VA = "0x1581F00")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0x1581F64", Offset = "0x1581F64", VA = "0x1581F64")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0x1581FBC", Offset = "0x1581FBC", VA = "0x1581FBC")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000391")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x17575CC", Offset = "0x17575CC", VA = "0x17575CC")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x175760C", Offset = "0x175760C", VA = "0x175760C")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x1757658", Offset = "0x1757658", VA = "0x1757658", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x175768C", Offset = "0x175768C", VA = "0x175768C", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0x17576FC", Offset = "0x17576FC", VA = "0x17576FC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0x1757878", Offset = "0x1757878", VA = "0x1757878")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x17578D4", Offset = "0x17578D4", VA = "0x17578D4")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x2000392")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x1757954", Offset = "0x1757954", VA = "0x1757954")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x1757994", Offset = "0x1757994", VA = "0x1757994")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x17579E0", Offset = "0x17579E0", VA = "0x17579E0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x1757A14", Offset = "0x1757A14", VA = "0x1757A14", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x1757A84", Offset = "0x1757A84", VA = "0x1757A84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x1757C00", Offset = "0x1757C00", VA = "0x1757C00")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x1757C5C", Offset = "0x1757C5C", VA = "0x1757C5C")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000393")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0x1757CDC", Offset = "0x1757CDC", VA = "0x1757CDC")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0x1757D1C", Offset = "0x1757D1C", VA = "0x1757D1C")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0x1757D68", Offset = "0x1757D68", VA = "0x1757D68", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AF6")]
	[Address(RVA = "0x1757D9C", Offset = "0x1757D9C", VA = "0x1757D9C", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0x1757E0C", Offset = "0x1757E0C", VA = "0x1757E0C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x1757F88", Offset = "0x1757F88", VA = "0x1757F88")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x1757FE4", Offset = "0x1757FE4", VA = "0x1757FE4")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000394")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000395")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000396")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001472")]
			None = 0,
			[Token(Token = "0x4001473")]
			AAudio = 1,
			[Token(Token = "0x4001474")]
			OpenSL_ES = 2,
			[Token(Token = "0x4001475")]
			Default = -1
		}

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F68C0", Offset = "0x8F68C0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8F68C0", Offset = "0x8F68C0")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6944", Offset = "0x8F6944")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x175BF24", Offset = "0x175BF24", VA = "0x175BF24", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x175BF68", Offset = "0x175BF68", VA = "0x175BF68")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x1A06470", Offset = "0x1A06470", VA = "0x1A06470")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x1A067B8", Offset = "0x1A067B8", VA = "0x1A067B8", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x1A067C0", Offset = "0x1A067C0", VA = "0x1A067C0", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x1A067C8", Offset = "0x1A067C8", VA = "0x1A067C8", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000397")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000398")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8ED5F4", Offset = "0x8ED5F4")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x200039A")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8ED608", Offset = "0x8ED608")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x1A076D8", Offset = "0x1A076D8", VA = "0x1A076D8")]
	public static uint PostAudioInputEvent(AK.Wwise.Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x1A079B4", Offset = "0x1A079B4", VA = "0x1A079B4")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x1A07AD0", Offset = "0x1A07AD0", VA = "0x1A07AD0")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x1A07494", Offset = "0x1A07494", VA = "0x1A07494")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9051C8", Offset = "0x9051C8")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x1A075A8", Offset = "0x1A075A8", VA = "0x1A075A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x905228", Offset = "0x905228")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x1A077D0", Offset = "0x1A077D0", VA = "0x1A077D0")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x1A078AC", Offset = "0x1A078AC", VA = "0x1A078AC")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x1A07BEC", Offset = "0x1A07BEC", VA = "0x1A07BEC")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x200039C")]
public static class AkBankManager
{
	[Token(Token = "0x200039D")]
	private class BankHandle
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F697C", Offset = "0x8F697C")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000318")]
		public int RefCount
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x175D99C", Offset = "0x175D99C", VA = "0x175D99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905288", Offset = "0x905288")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x175D9A4", Offset = "0x175D9A4", VA = "0x175D9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905298", Offset = "0x905298")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x175D198", Offset = "0x175D198", VA = "0x175D198")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x175D9AC", Offset = "0x175D9AC", VA = "0x175D9AC", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x175DA20", Offset = "0x175DA20", VA = "0x175DA20")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x175DB40", Offset = "0x175DB40", VA = "0x175DB40", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x175DB30", Offset = "0x175DB30", VA = "0x175DB30")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x175DBC0", Offset = "0x175DBC0", VA = "0x175DBC0")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x175D380", Offset = "0x175D380", VA = "0x175D380")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200039E")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x175D148", Offset = "0x175D148", VA = "0x175D148")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x175D1CC", Offset = "0x175D1CC", VA = "0x175D1CC")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x175D8B4", Offset = "0x175D8B4", VA = "0x175D8B4", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200039F")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x175DC68", Offset = "0x175DC68", VA = "0x175DC68")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x175DF68", Offset = "0x175DF68", VA = "0x175DF68", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x175E108", Offset = "0x175E108", VA = "0x175E108", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x1A0AF80", Offset = "0x1A0AF80", VA = "0x1A0AF80")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x1A0B0C4", Offset = "0x1A0B0C4", VA = "0x1A0B0C4")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x1A0B174", Offset = "0x1A0B174", VA = "0x1A0B174")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x1A0B2F4", Offset = "0x1A0B2F4", VA = "0x1A0B2F4")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x1A0B378", Offset = "0x1A0B378", VA = "0x1A0B378")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x1A0B56C", Offset = "0x1A0B56C", VA = "0x1A0B56C")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x1A0B724", Offset = "0x1A0B724", VA = "0x1A0B724")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x20003A0")]
public class AkBasePathGetter
{
	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool LogWarnings;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string DefaultBasePath;

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x1A0B998", Offset = "0x1A0B998", VA = "0x1A0B998")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x1A0BA10", Offset = "0x1A0BA10", VA = "0x1A0BA10")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x1A0BAD4", Offset = "0x1A0BAD4", VA = "0x1A0BAD4")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x1A0BC74", Offset = "0x1A0BC74", VA = "0x1A0BC74")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x1A0BBB8", Offset = "0x1A0BBB8", VA = "0x1A0BBB8")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x1A0BDC4", Offset = "0x1A0BDC4", VA = "0x1A0BDC4")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x1A0BED8", Offset = "0x1A0BED8", VA = "0x1A0BED8")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x20003A1")]
public static class AkCallbackManager
{
	[Token(Token = "0x20003A2")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x20003A3")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x20003A4")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x20003A5")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x175EB14", Offset = "0x175EB14", VA = "0x175EB14")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x175EC64", Offset = "0x175EC64", VA = "0x175EC64")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x175E5C4", Offset = "0x175E5C4", VA = "0x175E5C4")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x20003A7")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x20003A8")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x175E4B4", Offset = "0x175E4B4", VA = "0x175E4B4")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20003A9")]
	public class InitializationSettings
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x175EC6C", Offset = "0x175EC6C", VA = "0x175EC6C")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F698C", Offset = "0x8F698C")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000319")]
	public static bool IsLoggingEnabled
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1A0C6BC", Offset = "0x1A0C6BC", VA = "0x1A0C6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052A8", Offset = "0x9052A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1A0C720", Offset = "0x1A0C720", VA = "0x1A0C720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9052B8", Offset = "0x9052B8")]
		set
		{
		}
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x1A0C78C", Offset = "0x1A0C78C", VA = "0x1A0C78C")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x1A0CA60", Offset = "0x1A0CA60", VA = "0x1A0CA60")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x1A0CD58", Offset = "0x1A0CD58", VA = "0x1A0CD58")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x1A0D050", Offset = "0x1A0D050", VA = "0x1A0D050")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x1A0D114", Offset = "0x1A0D114", VA = "0x1A0D114")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x1A0D2C8", Offset = "0x1A0D2C8", VA = "0x1A0D2C8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0x1A0D414", Offset = "0x1A0D414", VA = "0x1A0D414")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0x1A0D4FC", Offset = "0x1A0D4FC", VA = "0x1A0D4FC")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0x1A0D5C4", Offset = "0x1A0D5C4", VA = "0x1A0D5C4")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x20003AA")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x1700031A")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1A0BFA8", Offset = "0x1A0BFA8", VA = "0x1A0BFA8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031B")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1A0C07C", Offset = "0x1A0C07C", VA = "0x1A0C07C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031C")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1A0C0D4", Offset = "0x1A0C0D4", VA = "0x1A0C0D4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031D")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1A0C12C", Offset = "0x1A0C12C", VA = "0x1A0C12C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031E")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1A0C170", Offset = "0x1A0C170", VA = "0x1A0C170", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031F")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1A0C178", Offset = "0x1A0C178", VA = "0x1A0C178", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000320")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1A0C1DC", Offset = "0x1A0C1DC", VA = "0x1A0C1DC", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000321")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1A0C2B0", Offset = "0x1A0C2B0", VA = "0x1A0C2B0", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x1A0C2B8", Offset = "0x1A0C2B8", VA = "0x1A0C2B8")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003AB")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x20003AC")]
	public enum PanningRule
	{
		[Token(Token = "0x40014AA")]
		Speakers,
		[Token(Token = "0x40014AB")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x20003AD")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x20003AE")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x40014B0")]
			Anonymous,
			[Token(Token = "0x40014B1")]
			Standard,
			[Token(Token = "0x40014B2")]
			Ambisonic
		}

		[Token(Token = "0x20003AF")]
		public enum ChannelMask
		{
			[Token(Token = "0x40014B4")]
			NONE = 0,
			[Token(Token = "0x40014B5")]
			FRONT_LEFT = 1,
			[Token(Token = "0x40014B6")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x40014B7")]
			FRONT_CENTER = 4,
			[Token(Token = "0x40014B8")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x40014B9")]
			BACK_LEFT = 16,
			[Token(Token = "0x40014BA")]
			BACK_RIGHT = 32,
			[Token(Token = "0x40014BB")]
			BACK_CENTER = 256,
			[Token(Token = "0x40014BC")]
			SIDE_LEFT = 512,
			[Token(Token = "0x40014BD")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x40014BE")]
			TOP = 2048,
			[Token(Token = "0x40014BF")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x40014C0")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x40014C1")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x40014C2")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x40014C3")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x40014C4")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x40014C5")]
			SETUP_MONO = 4,
			[Token(Token = "0x40014C6")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x40014C7")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x40014C8")]
			SETUP_STEREO = 3,
			[Token(Token = "0x40014C9")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x40014CA")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x40014CB")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x40014CC")]
			SETUP_4 = 1539,
			[Token(Token = "0x40014CD")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x40014CE")]
			SETUP_5 = 1543,
			[Token(Token = "0x40014CF")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x40014D0")]
			SETUP_6 = 1587,
			[Token(Token = "0x40014D1")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x40014D2")]
			SETUP_7 = 1591,
			[Token(Token = "0x40014D3")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x40014D4")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x40014D5")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x40014D6")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x40014D7")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x40014D8")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x40014D9")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x40014DA")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x40014DB")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x40014DC")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x40014DD")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x40014DE")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x40014DF")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x40014E0")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x40014E1")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x40014E2")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x40014E3")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x40014E4")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x40014E5")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x40014E6")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x40014E7")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x40014E8")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x40014E9")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x40014EA")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x40014EB")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x40014EC")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x40014ED")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x40014EE")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x40014EF")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6A7C", Offset = "0x8F6A7C")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6AB4", Offset = "0x8F6AB4")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8F6AB4", Offset = "0x8F6AB4")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6B38", Offset = "0x8F6B38")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x175F158", Offset = "0x175F158", VA = "0x175F158")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x175F1D8", Offset = "0x175F1D8", VA = "0x175F1D8")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F699C", Offset = "0x8F699C")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F69D4", Offset = "0x8F69D4")]
	public uint m_DeviceID;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6A0C", Offset = "0x8F6A0C")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6A44", Offset = "0x8F6A44")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x1A10ED8", Offset = "0x1A10ED8", VA = "0x1A10ED8")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x1A0671C", Offset = "0x1A0671C", VA = "0x1A0671C")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x20003B0")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x154DB4C", Offset = "0x154DB4C", VA = "0x154DB4C", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x154DB50", Offset = "0x154DB50", VA = "0x154DB50")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20003B1")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x20003B3")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4001508")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4001509")]
			UseObstruction = 2,
			[Token(Token = "0x400150A")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6FEC", Offset = "0x8F6FEC")]
		public uint m_PoolSize;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7024", Offset = "0x8F7024")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F7024", Offset = "0x8F7024")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7078", Offset = "0x8F7078")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8F7078", Offset = "0x8F7078")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F70FC", Offset = "0x8F70FC")]
		public float m_MovementThreshold;

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x175F1E0", Offset = "0x175F1E0", VA = "0x175F1E0")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6B70", Offset = "0x8F6B70")]
	public string m_BasePath;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6BA8", Offset = "0x8F6BA8")]
	public string m_StartupLanguage;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6BE0", Offset = "0x8F6BE0")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6C18", Offset = "0x8F6C18")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6C50", Offset = "0x8F6C50")]
	public bool m_EngineLogging;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6C88", Offset = "0x8F6C88")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6CC0", Offset = "0x8F6CC0")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6CF8", Offset = "0x8F6CF8")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F6D30", Offset = "0x8F6D30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6D30", Offset = "0x8F6D30")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6D84", Offset = "0x8F6D84")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6DBC", Offset = "0x8F6DBC")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6DF4", Offset = "0x8F6DF4")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6E2C", Offset = "0x8F6E2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F6E2C", Offset = "0x8F6E2C")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6E80", Offset = "0x8F6E80")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6EB8", Offset = "0x8F6EB8")]
	public uint m_SampleRate;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6EF0", Offset = "0x8F6EF0")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F6F28", Offset = "0x8F6F28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6F28", Offset = "0x8F6F28")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6F7C", Offset = "0x8F6F7C")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F6FB4", Offset = "0x8F6FB4")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x1A11234", Offset = "0x1A11234", VA = "0x1A11234")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0x1A11A30", Offset = "0x1A11A30", VA = "0x1A11A30")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x1A11A38", Offset = "0x1A11A38", VA = "0x1A11A38", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x1A11650", Offset = "0x1A11650", VA = "0x1A11650")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x1A113E0", Offset = "0x1A113E0", VA = "0x1A113E0")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x1A11FB0", Offset = "0x1A11FB0", VA = "0x1A11FB0", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x1A11FB4", Offset = "0x1A11FB4", VA = "0x1A11FB4", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x1A12018", Offset = "0x1A12018", VA = "0x1A12018", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0x1A1209C", Offset = "0x1A1209C", VA = "0x1A1209C", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0x1A120A0", Offset = "0x1A120A0", VA = "0x1A120A0", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x1A065EC", Offset = "0x1A065EC", VA = "0x1A065EC")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003B4")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F747C", Offset = "0x8F747C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F747C", Offset = "0x8F747C")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F74D0", Offset = "0x8F74D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F74D0", Offset = "0x8F74D0")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x175F144", Offset = "0x175F144", VA = "0x175F144")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7134", Offset = "0x8F7134")]
	public uint m_IOMemorySize;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F716C", Offset = "0x8F716C")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F71A4", Offset = "0x8F71A4")]
	public bool m_UseStreamCache;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F71DC", Offset = "0x8F71DC")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7214", Offset = "0x8F7214")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F724C", Offset = "0x8F724C")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7284", Offset = "0x8F7284")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F72BC", Offset = "0x8F72BC")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F72F4", Offset = "0x8F72F4")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F732C", Offset = "0x8F732C")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7364", Offset = "0x8F7364")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F739C", Offset = "0x8F739C")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F73D4", Offset = "0x8F73D4")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F740C", Offset = "0x8F740C")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7444", Offset = "0x8F7444")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x1A1029C", Offset = "0x1A1029C", VA = "0x1A1029C", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x1A104D0", Offset = "0x1A104D0", VA = "0x1A104D0", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x1A10914", Offset = "0x1A10914", VA = "0x1A10914", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x1A10918", Offset = "0x1A10918", VA = "0x1A10918", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x1A1096C", Offset = "0x1A1096C", VA = "0x1A1096C", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x1A10970", Offset = "0x1A10970", VA = "0x1A10970", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x1A10A78", Offset = "0x1A10A78", VA = "0x1A10A78")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003B6")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F752C", Offset = "0x8F752C")]
	public uint m_PoolSize;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7564", Offset = "0x8F7564")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F759C", Offset = "0x8F759C")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F75D4", Offset = "0x8F75D4")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F760C", Offset = "0x8F760C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7644", Offset = "0x8F7644")]
	public string m_NetworkName;

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x1A10AA8", Offset = "0x1A10AA8", VA = "0x1A10AA8", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x1A10E04", Offset = "0x1A10E04", VA = "0x1A10E04")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x20003B7")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x17000322")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1A10FC4", Offset = "0x1A10FC4", VA = "0x1A10FC4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000323")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1A11824", Offset = "0x1A11824", VA = "0x1A11824", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000324")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1A1189C", Offset = "0x1A1189C", VA = "0x1A1189C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000325")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1A1192C", Offset = "0x1A1192C", VA = "0x1A1192C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000326")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1A11954", Offset = "0x1A11954", VA = "0x1A11954", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000327")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1A11980", Offset = "0x1A11980", VA = "0x1A11980", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000328")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1A119A8", Offset = "0x1A119A8", VA = "0x1A119A8", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000329")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1A119D4", Offset = "0x1A119D4", VA = "0x1A119D4", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B80")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6001B81")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6001B82")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x1A11A28", Offset = "0x1A11A28", VA = "0x1A11A28")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x20003B8")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8ED61C", Offset = "0x8ED61C")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type Type;

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x1A15AB0", Offset = "0x1A15AB0", VA = "0x1A15AB0")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x20003B9")]
public class AkLogger
{
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8ED654", Offset = "0x8ED654")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x1700032A")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1A1D794", Offset = "0x1A1D794", VA = "0x1A1D794")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x1A1D658", Offset = "0x1A1D658", VA = "0x1A1D658")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x1A1D7F8", Offset = "0x1A1D7F8", VA = "0x1A1D7F8", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x1A1D920", Offset = "0x1A1D920", VA = "0x1A1D920")]
	public void Init()
	{
	}

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x1A1D5C8", Offset = "0x1A1D5C8", VA = "0x1A1D5C8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9052C8", Offset = "0x9052C8")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6001B92")]
	[Address(RVA = "0x1A1D924", Offset = "0x1A1D924", VA = "0x1A1D924")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x1A1D9B4", Offset = "0x1A1D9B4", VA = "0x1A1D9B4")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x1A1DA44", Offset = "0x1A1DA44", VA = "0x1A1DA44")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x20003BB")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0x154A548", Offset = "0x154A548", VA = "0x154A548")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x154B28C", Offset = "0x154B28C", VA = "0x154B28C")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x1549630", Offset = "0x1549630", VA = "0x1549630")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x1547F6C", Offset = "0x1547F6C", VA = "0x1547F6C")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x154B8DC", Offset = "0x154B8DC", VA = "0x154B8DC")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x20003BC")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x154DB58", Offset = "0x154DB58", VA = "0x154DB58")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x20003BD")]
public class AkUtilities
{
	[Token(Token = "0x20003BE")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4001529")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x400152A")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x1700032B")]
		public static byte HashSize
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x1762EFC", Offset = "0x1762EFC", VA = "0x1762EFC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x1762E78", Offset = "0x1762E78", VA = "0x1762E78")]
			set
			{
			}
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1762E70", Offset = "0x1762E70", VA = "0x1762E70")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1762F60", Offset = "0x1762F60", VA = "0x1762F60")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x176309C", Offset = "0x176309C", VA = "0x176309C")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x1581658", Offset = "0x1581658", VA = "0x1581658")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x20003BF")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x20003C0")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x17000330")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x176370C", Offset = "0x176370C", VA = "0x176370C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x17637A8", Offset = "0x17637A8", VA = "0x17637A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x17631CC", Offset = "0x17631CC", VA = "0x17631CC")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1763260", Offset = "0x1763260", VA = "0x1763260")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x17630DC", Offset = "0x17630DC", VA = "0x17630DC")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x17632C4", Offset = "0x17632C4", VA = "0x17632C4")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1763388", Offset = "0x1763388", VA = "0x1763388")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x17636A8", Offset = "0x17636A8", VA = "0x17636A8")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003C1")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x17630C0", Offset = "0x17630C0", VA = "0x17630C0", Slot = "12")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x17630C8", Offset = "0x17630C8", VA = "0x17630C8", Slot = "13")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x17630D0", Offset = "0x17630D0", VA = "0x17630D0", Slot = "14")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x17630D8", Offset = "0x17630D8", VA = "0x17630D8")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x1700032C")]
	public bool IsValid
	{
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1A95684", Offset = "0x1A95684", VA = "0x1A95684")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700032D")]
	public int Count
	{
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1A956F0", Offset = "0x1A956F0", VA = "0x1A956F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700032E")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1A95754", Offset = "0x1A95754", VA = "0x1A95754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032F")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x1A95AB0", Offset = "0x1A95AB0", VA = "0x1A95AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x1A9573C", Offset = "0x1A9573C", VA = "0x1A9573C", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0x1A95744", Offset = "0x1A95744", VA = "0x1A95744", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x1A9574C", Offset = "0x1A9574C", VA = "0x1A9574C", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x1A958BC", Offset = "0x1A958BC", VA = "0x1A958BC")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x1A95BF0", Offset = "0x1A95BF0", VA = "0x1A95BF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x1A95D84", Offset = "0x1A95D84", VA = "0x1A95D84")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x1A964A4", Offset = "0x1A964A4", VA = "0x1A964A4")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x1A965CC", Offset = "0x1A965CC", VA = "0x1A965CC")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x1A967A0", Offset = "0x1A967A0", VA = "0x1A967A0")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x1A96954", Offset = "0x1A96954", VA = "0x1A96954")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x20003C2")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000331")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1A04FA8", Offset = "0x1A04FA8", VA = "0x1A04FA8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0x1A04F4C", Offset = "0x1A04F4C", VA = "0x1A04F4C")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x1A05004", Offset = "0x1A05004", VA = "0x1A05004", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x1A05068", Offset = "0x1A05068", VA = "0x1A05068", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x1A050CC", Offset = "0x1A050CC", VA = "0x1A050CC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20003C3")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8ED668", Offset = "0x8ED668")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x400153C")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x17000332")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1A095D4", Offset = "0x1A095D4", VA = "0x1A095D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000333")]
	public bool isFull
	{
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1A0973C", Offset = "0x1A0973C", VA = "0x1A0973C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x1A0951C", Offset = "0x1A0951C", VA = "0x1A0951C")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0x1A097A0", Offset = "0x1A097A0", VA = "0x1A097A0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x1A09834", Offset = "0x1A09834", VA = "0x1A09834", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0x1A0989C", Offset = "0x1A0989C", VA = "0x1A0989C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0x1A098A4", Offset = "0x1A098A4", VA = "0x1A098A4")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0x1A099C4", Offset = "0x1A099C4", VA = "0x1A099C4")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0x1A09AA0", Offset = "0x1A09AA0", VA = "0x1A09AA0")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x1A09BF4", Offset = "0x1A09BF4", VA = "0x1A09BF4")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x1A09CF4", Offset = "0x1A09CF4", VA = "0x1A09CF4")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x1A09DB4", Offset = "0x1A09DB4", VA = "0x1A09DB4")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x1A09E84", Offset = "0x1A09E84", VA = "0x1A09E84")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x1A09E8C", Offset = "0x1A09E8C", VA = "0x1A09E8C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x1A096C0", Offset = "0x1A096C0", VA = "0x1A096C0")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C4")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8ED6A0", Offset = "0x8ED6A0")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F777C", Offset = "0x8F777C")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000334")]
	public int Capacity
	{
		[Token(Token = "0x6001BD9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905328", Offset = "0x905328")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001BDA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905338", Offset = "0x905338")]
		private set
		{
		}
	}

	[Token(Token = "0x17000335")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6001BDC")]
		get;
	}

	[Token(Token = "0x17000336")]
	public T Item
	{
		[Token(Token = "0x6001BE1")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001BE2")]
		set
		{
		}
	}

	[Token(Token = "0x6001BD6")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001BD7")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BD8")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6001BDB")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BDD")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BDE")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BDF")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001BE0")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6001BE3")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BE4")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C5")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F778C", Offset = "0x8F778C")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000337")]
	public uint Count
	{
		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1A0FD84", Offset = "0x1A0FD84", VA = "0x1A0FD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905348", Offset = "0x905348")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1A0FD8C", Offset = "0x1A0FD8C", VA = "0x1A0FD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905358", Offset = "0x905358")]
		private set
		{
		}
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x1A0FCF8", Offset = "0x1A0FCF8", VA = "0x1A0FCF8")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x1A0FD94", Offset = "0x1A0FD94", VA = "0x1A0FD94", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x1A0FE28", Offset = "0x1A0FE28", VA = "0x1A0FE28", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x1A0FE90", Offset = "0x1A0FE90", VA = "0x1A0FE90")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x1A0FEA0", Offset = "0x1A0FEA0", VA = "0x1A0FEA0")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x20003C6")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x17000338")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1A13D08", Offset = "0x1A13D08", VA = "0x1A13D08", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x1A13CAC", Offset = "0x1A13CAC", VA = "0x1A13CAC")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x1A13D64", Offset = "0x1A13D64", VA = "0x1A13D64", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x1A13DC8", Offset = "0x1A13DC8", VA = "0x1A13DC8", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x20003C7")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x17000339")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1A18834", Offset = "0x1A18834", VA = "0x1A18834", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x1A187D8", Offset = "0x1A187D8", VA = "0x1A187D8")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x1A18890", Offset = "0x1A18890", VA = "0x1A18890", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0x1A188F4", Offset = "0x1A188F4", VA = "0x1A188F4", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0x1A1895C", Offset = "0x1A1895C", VA = "0x1A1895C", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0x1A189C0", Offset = "0x1A189C0", VA = "0x1A189C0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x20003C8")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8ED6D8", Offset = "0x8ED6D8")]
public class AkMIDIPostArray
{
	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700033A")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1A20248", Offset = "0x1A20248", VA = "0x1A20248")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1A2036C", Offset = "0x1A2036C", VA = "0x1A2036C")]
		set
		{
		}
	}

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0x1A20174", Offset = "0x1A20174", VA = "0x1A20174")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0x1A20484", Offset = "0x1A20484", VA = "0x1A20484", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x1A20548", Offset = "0x1A20548", VA = "0x1A20548")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x1A2061C", Offset = "0x1A2061C", VA = "0x1A2061C")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x1A2074C", Offset = "0x1A2074C", VA = "0x1A2074C")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x1A20754", Offset = "0x1A20754", VA = "0x1A20754")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0x1A20330", Offset = "0x1A20330", VA = "0x1A20330")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C9")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x1700033B")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1539080", Offset = "0x1539080", VA = "0x1539080", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x1539024", Offset = "0x1539024", VA = "0x1539024")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x15390D8", Offset = "0x15390D8", VA = "0x15390D8", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x1539138", Offset = "0x1539138", VA = "0x1539138", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x153919C", Offset = "0x153919C", VA = "0x153919C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x20003CA")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x1700033C")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x153A650", Offset = "0x153A650", VA = "0x153A650", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x153A5F4", Offset = "0x153A5F4", VA = "0x153A5F4")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0x153A6A8", Offset = "0x153A6A8", VA = "0x153A6A8", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x153A708", Offset = "0x153A708", VA = "0x153A708", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x153A76C", Offset = "0x153A76C", VA = "0x153A76C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x20003CB")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F779C", Offset = "0x8F779C")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700033D")]
	public uint Count
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1541E18", Offset = "0x1541E18", VA = "0x1541E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905368", Offset = "0x905368")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1541E20", Offset = "0x1541E20", VA = "0x1541E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905378", Offset = "0x905378")]
		private set
		{
		}
	}

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x1541D8C", Offset = "0x1541D8C", VA = "0x1541D8C")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x1541E28", Offset = "0x1541E28", VA = "0x1541E28", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x1541EBC", Offset = "0x1541EBC", VA = "0x1541EBC", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x1541F24", Offset = "0x1541F24", VA = "0x1541F24")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x1541F34", Offset = "0x1541F34", VA = "0x1541F34")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x20003CC")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x1700033E")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1547264", Offset = "0x1547264", VA = "0x1547264", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x1547208", Offset = "0x1547208", VA = "0x1547208")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x15472BC", Offset = "0x15472BC", VA = "0x15472BC", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x1547320", Offset = "0x1547320", VA = "0x1547320", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x20003CD")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x1700033F")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x157A1A4", Offset = "0x157A1A4", VA = "0x157A1A4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x157A148", Offset = "0x157A148", VA = "0x157A148")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x157A1FC", Offset = "0x157A1FC", VA = "0x157A1FC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x157A25C", Offset = "0x157A25C", VA = "0x157A25C", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x157A2C0", Offset = "0x157A2C0", VA = "0x157A2C0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x20003CE")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000340")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x158073C", Offset = "0x158073C", VA = "0x158073C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0x157C7BC", Offset = "0x157C7BC", VA = "0x157C7BC")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x1580794", Offset = "0x1580794", VA = "0x1580794", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0x15807F4", Offset = "0x15807F4", VA = "0x15807F4", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0x1580858", Offset = "0x1580858", VA = "0x1580858", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x20003CF")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000341")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1A954B8", Offset = "0x1A954B8", VA = "0x1A954B8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0x1A9545C", Offset = "0x1A9545C", VA = "0x1A9545C")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6001C20")]
	[Address(RVA = "0x1A95514", Offset = "0x1A95514", VA = "0x1A95514", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x1A95578", Offset = "0x1A95578", VA = "0x1A95578", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x1A955DC", Offset = "0x1A955DC", VA = "0x1A955DC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x20003D0")]
public class AkTimelineEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20003D1")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4001565")]
		None = 0,
		[Token(Token = "0x4001566")]
		Playback = 1,
		[Token(Token = "0x4001567")]
		Retrigger = 2,
		[Token(Token = "0x4001568")]
		DelayedStop = 4,
		[Token(Token = "0x4001569")]
		Seek = 8,
		[Token(Token = "0x400156A")]
		FadeIn = 0x10,
		[Token(Token = "0x400156B")]
		FadeOut = 0x20
	}

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4001553")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4001555")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x4001563")]
	private const float alph = 0.05f;

	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x157DBC4", Offset = "0x157DBC4", VA = "0x157DBC4")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x157DC8C", Offset = "0x157DC8C", VA = "0x157DC8C")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C25")]
	[Address(RVA = "0x157DCB0", Offset = "0x157DCB0", VA = "0x157DCB0", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C26")]
	[Address(RVA = "0x157E084", Offset = "0x157E084", VA = "0x157E084", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C27")]
	[Address(RVA = "0x157E254", Offset = "0x157E254", VA = "0x157E254", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C28")]
	[Address(RVA = "0x157E36C", Offset = "0x157E36C", VA = "0x157E36C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001C29")]
	[Address(RVA = "0x157DDEC", Offset = "0x157DDEC", VA = "0x157DDEC")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C2A")]
	[Address(RVA = "0x157DF48", Offset = "0x157DF48", VA = "0x157DF48")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0x157DFE4", Offset = "0x157DFE4", VA = "0x157DFE4")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0x157E6F4", Offset = "0x157E6F4", VA = "0x157E6F4")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0x157E804", Offset = "0x157E804", VA = "0x157E804")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x157E334", Offset = "0x157E334", VA = "0x157E334")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x157E8E4", Offset = "0x157E8E4", VA = "0x157E8E4")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x157E55C", Offset = "0x157E55C", VA = "0x157E55C")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x157E65C", Offset = "0x157E65C", VA = "0x157E65C")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x157E170", Offset = "0x157E170", VA = "0x157E170")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x157E58C", Offset = "0x157E58C", VA = "0x157E58C")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0x157E99C", Offset = "0x157E99C", VA = "0x157E99C")]
	public AkTimelineEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20003D2")]
public class AkTimelineEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eventDurationMax;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineClip owningClip;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x17000342")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x157D924", Offset = "0x157D924", VA = "0x157D924", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x157D92C", Offset = "0x157D92C", VA = "0x157D92C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x157DB40", Offset = "0x157DB40", VA = "0x157DB40")]
	public AkTimelineEventPlayable()
	{
	}
}
[Token(Token = "0x20003D3")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8ED720", Offset = "0x8ED720")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8ED720", Offset = "0x8ED720")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8ED720", Offset = "0x8ED720")]
public class AkTimelineEventTrack : TrackAsset
{
	[Token(Token = "0x6001C38")]
	[Address(RVA = "0x157E9B0", Offset = "0x157E9B0", VA = "0x157E9B0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C39")]
	[Address(RVA = "0x157EDC8", Offset = "0x157EDC8", VA = "0x157EDC8")]
	public AkTimelineEventTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D4")]
public class AkTimelineRtpcPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float value;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F77FC", Offset = "0x8F77FC")]
	private RTPC <RTPC>k__BackingField;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F780C", Offset = "0x8F780C")]
	private bool <setGlobally>k__BackingField;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F781C", Offset = "0x8F781C")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x17000343")]
	public RTPC RTPC
	{
		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x157F02C", Offset = "0x157F02C", VA = "0x157F02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905398", Offset = "0x905398")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x157F024", Offset = "0x157F024", VA = "0x157F024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905388", Offset = "0x905388")]
		set
		{
		}
	}

	[Token(Token = "0x17000344")]
	public bool setGlobally
	{
		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x157F040", Offset = "0x157F040", VA = "0x157F040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053B8", Offset = "0x9053B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x157F034", Offset = "0x157F034", VA = "0x157F034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053A8", Offset = "0x9053A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000345")]
	public GameObject gameObject
	{
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x157F050", Offset = "0x157F050", VA = "0x157F050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053D8", Offset = "0x9053D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x157F048", Offset = "0x157F048", VA = "0x157F048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053C8", Offset = "0x9053C8")]
		set
		{
		}
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x157F058", Offset = "0x157F058", VA = "0x157F058", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData frameData, object playerData)
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x157F01C", Offset = "0x157F01C", VA = "0x157F01C")]
	public AkTimelineRtpcPlayableBehaviour()
	{
	}
}
[Token(Token = "0x20003D5")]
public class AkTimelineRtpcPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC RTPC;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setGlobally;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkTimelineRtpcPlayableBehaviour template;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F782C", Offset = "0x8F782C")]
	private TimelineClip <owningClip>k__BackingField;

	[Token(Token = "0x17000346")]
	public TimelineClip owningClip
	{
		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x157EE30", Offset = "0x157EE30", VA = "0x157EE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053E8", Offset = "0x9053E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x157EE38", Offset = "0x157EE38", VA = "0x157EE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9053F8", Offset = "0x9053F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000347")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x157EE40", Offset = "0x157EE40", VA = "0x157EE40", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x157EE2C", Offset = "0x157EE2C", VA = "0x157EE2C")]
	public void SetupClipDisplay()
	{
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x157EE48", Offset = "0x157EE48", VA = "0x157EE48", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject gameObject)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x157EF74", Offset = "0x157EF74", VA = "0x157EF74")]
	public AkTimelineRtpcPlayable()
	{
	}
}
[Token(Token = "0x20003D6")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8ED7DC", Offset = "0x8ED7DC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8ED7DC", Offset = "0x8ED7DC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8ED7DC", Offset = "0x8ED7DC")]
public class AkTimelineRtpcTrack : TrackAsset
{
	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x157F1C4", Offset = "0x157F1C4", VA = "0x157F1C4", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject gameObject, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x157F58C", Offset = "0x157F58C", VA = "0x157F58C")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x157F894", Offset = "0x157F894", VA = "0x157F894")]
	public AkTimelineRtpcTrack()
	{
	}
}
[Token(Token = "0x20003D7")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000348")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x19EC6C4", Offset = "0x19EC6C4", VA = "0x19EC6C4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x19EC728", Offset = "0x19EC728", VA = "0x19EC728")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x20003D8")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000349")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x19ECAE0", Offset = "0x19ECAE0", VA = "0x19ECAE0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0x19ECB44", Offset = "0x19ECB44", VA = "0x19ECB44")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x20003D9")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700034A")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x19ECB98", Offset = "0x19ECB98", VA = "0x19ECB98", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0x19ECBFC", Offset = "0x19ECBFC", VA = "0x19ECBFC")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x20003DA")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700034B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x19ECC50", Offset = "0x19ECC50", VA = "0x19ECC50", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0x19ECCB4", Offset = "0x19ECCB4", VA = "0x19ECCB4")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x20003DB")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AkShowOnly]
	private string objectName;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AkShowOnly]
	private uint id;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AkShowOnly]
	private string guid;

	[Token(Token = "0x1700034C")]
	public Guid Guid
	{
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x19ECFD4", Offset = "0x19ECFD4", VA = "0x19ECFD4")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x1700034D")]
	public string ObjectName
	{
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x19ED074", Offset = "0x19ED074", VA = "0x19ED074")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034E")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x19ED07C", Offset = "0x19ED07C", VA = "0x19ED07C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034F")]
	public uint Id
	{
		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x19ED084", Offset = "0x19ED084", VA = "0x19ED084")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000350")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C5B")]
		get;
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x19EC72C", Offset = "0x19EC72C", VA = "0x19EC72C")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x20003DC")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x17000351")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C5D")]
		get;
		[Token(Token = "0x6001C5E")]
		set;
	}

	[Token(Token = "0x17000352")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C5F")]
		get;
	}

	[Token(Token = "0x17000353")]
	public override string DisplayName
	{
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x19ECD08", Offset = "0x19ECD08", VA = "0x19ECD08", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x19ECDC8", Offset = "0x19ECDC8", VA = "0x19ECDC8")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x20003DD")]
public enum WwiseObjectType
{
	[Token(Token = "0x4001585")]
	None,
	[Token(Token = "0x4001586")]
	AuxBus,
	[Token(Token = "0x4001587")]
	Bus,
	[Token(Token = "0x4001588")]
	Event,
	[Token(Token = "0x4001589")]
	Folder,
	[Token(Token = "0x400158A")]
	PhysicalFolder,
	[Token(Token = "0x400158B")]
	Project,
	[Token(Token = "0x400158C")]
	Soundbank,
	[Token(Token = "0x400158D")]
	State,
	[Token(Token = "0x400158E")]
	StateGroup,
	[Token(Token = "0x400158F")]
	Switch,
	[Token(Token = "0x4001590")]
	SwitchGroup,
	[Token(Token = "0x4001591")]
	WorkUnit,
	[Token(Token = "0x4001592")]
	GameParameter,
	[Token(Token = "0x4001593")]
	Trigger,
	[Token(Token = "0x4001594")]
	AcousticTexture
}
[Token(Token = "0x20003DE")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000354")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x19ED1C4", Offset = "0x19ED1C4", VA = "0x19ED1C4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x19ED228", Offset = "0x19ED228", VA = "0x19ED228")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x20003DF")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000355")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x19ED34C", Offset = "0x19ED34C", VA = "0x19ED34C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x19ED3B0", Offset = "0x19ED3B0", VA = "0x19ED3B0")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x20003E0")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AkShowOnly]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000356")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x19ED404", Offset = "0x19ED404", VA = "0x19ED404", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000357")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x19ED468", Offset = "0x19ED468", VA = "0x19ED468", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x19ED470", Offset = "0x19ED470", VA = "0x19ED470", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000358")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x19ED500", Offset = "0x19ED500", VA = "0x19ED500", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x19ED564", Offset = "0x19ED564", VA = "0x19ED564")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x20003E1")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000359")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x19ED858", Offset = "0x19ED858", VA = "0x19ED858", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x19ED8BC", Offset = "0x19ED8BC", VA = "0x19ED8BC")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x20003E2")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AkShowOnly]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x1700035A")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x19ED910", Offset = "0x19ED910", VA = "0x19ED910", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x1700035B")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x19ED974", Offset = "0x19ED974", VA = "0x19ED974", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x19ED97C", Offset = "0x19ED97C", VA = "0x19ED97C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700035C")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x19EDA0C", Offset = "0x19EDA0C", VA = "0x19EDA0C", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x19EDA70", Offset = "0x19EDA70", VA = "0x19EDA70")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x20003E3")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700035D")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x19EDAD4", Offset = "0x19EDAD4", VA = "0x19EDAD4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x19EDB38", Offset = "0x19EDB38", VA = "0x19EDB38")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x20003E4")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x1534350", Offset = "0x1534350", VA = "0x1534350")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x20003E5")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20003E6")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20003E7")]
		public enum AudioAPI
		{
			[Token(Token = "0x40015A5")]
			None = 0,
			[Token(Token = "0x40015A6")]
			Wasapi = 1,
			[Token(Token = "0x40015A7")]
			XAudio2 = 2,
			[Token(Token = "0x40015A8")]
			DirectSound = 4,
			[Token(Token = "0x40015A9")]
			Default = -1
		}

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7984", Offset = "0x8F7984")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8F7984", Offset = "0x8F7984")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7A08", Offset = "0x8F7A08")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x17630A4", Offset = "0x17630A4", VA = "0x17630A4", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x17630A8", Offset = "0x17630A8", VA = "0x17630A8")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x1A95664", Offset = "0x1A95664", VA = "0x1A95664", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x1A9566C", Offset = "0x1A9566C", VA = "0x1A9566C", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x1A95674", Offset = "0x1A95674", VA = "0x1A95674", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x1A9567C", Offset = "0x1A9567C", VA = "0x1A9567C")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x20003E8")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x40015AB")]
	Simple_Mode,
	[Token(Token = "0x40015AC")]
	Large_Mode,
	[Token(Token = "0x40015AD")]
	MultiPosition_Mode
}
[Token(Token = "0x20003E9")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x1536410", Offset = "0x1536410", VA = "0x1536410")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x1536418", Offset = "0x1536418", VA = "0x1536418")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x20003EA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED894", Offset = "0x8ED894")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x1A05168", Offset = "0x1A05168", VA = "0x1A05168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x1A05644", Offset = "0x1A05644", VA = "0x1A05644", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x1A05B60", Offset = "0x1A05B60", VA = "0x1A05B60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x1A05D74", Offset = "0x1A05D74", VA = "0x1A05D74", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x1A06238", Offset = "0x1A06238", VA = "0x1A06238")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x1A05470", Offset = "0x1A05470", VA = "0x1A05470")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x1A05894", Offset = "0x1A05894", VA = "0x1A05894")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x1A06310", Offset = "0x1A06310", VA = "0x1A06310")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x20003EB")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x1700035E")]
	public Vector3 Position
	{
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1A062A4", Offset = "0x1A062A4", VA = "0x1A062A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700035F")]
	public Vector3 Forward
	{
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1A062C8", Offset = "0x1A062C8", VA = "0x1A062C8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000360")]
	public Vector3 Up
	{
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1A062EC", Offset = "0x1A062EC", VA = "0x1A062EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x1A06468", Offset = "0x1A06468", VA = "0x1A06468")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x20003EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED8CC", Offset = "0x8ED8CC")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED8CC", Offset = "0x8ED8CC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ED8CC", Offset = "0x8ED8CC")]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	public class BaseListenerList
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x17000362")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x175CC58", Offset = "0x175CC58", VA = "0x175CC58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x175CC60", Offset = "0x175CC60", VA = "0x175CC60", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x175CD70", Offset = "0x175CD70", VA = "0x175CD70", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x175CE80", Offset = "0x175CE80", VA = "0x175CE80")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x175CED4", Offset = "0x175CED4", VA = "0x175CED4")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x20003EE")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x175CFA4", Offset = "0x175CFA4", VA = "0x175CFA4", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x175D074", Offset = "0x175D074", VA = "0x175D074", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x175D144", Offset = "0x175D144", VA = "0x175D144")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x17000361")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1A082F0", Offset = "0x1A082F0", VA = "0x1A082F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x1A08354", Offset = "0x1A08354", VA = "0x1A08354")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x1A083E0", Offset = "0x1A083E0", VA = "0x1A083E0")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x1A0846C", Offset = "0x1A0846C", VA = "0x1A0846C")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x1A085C0", Offset = "0x1A085C0", VA = "0x1A085C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x1A08770", Offset = "0x1A08770", VA = "0x1A08770")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0x1A08844", Offset = "0x1A08844", VA = "0x1A08844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x1A08918", Offset = "0x1A08918", VA = "0x1A08918")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x1A08A90", Offset = "0x1A08A90", VA = "0x1A08A90")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x1A08A98", Offset = "0x1A08A98", VA = "0x1A08A98")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0x1A08B64", Offset = "0x1A08B64", VA = "0x1A08B64")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x20003EF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED974", Offset = "0x8ED974")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8ED974", Offset = "0x8ED974")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Bank data;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7A88", Offset = "0x8F7A88")]
	[HideInInspector]
	[SerializeField]
	private string bankNameInternal;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7AE4", Offset = "0x8F7AE4")]
	[SerializeField]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000363")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D0B4", Offset = "0x90D0B4")]
	public string bankName
	{
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x1A0A870", Offset = "0x1A0A870", VA = "0x1A0A870")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000364")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D0EC", Offset = "0x90D0EC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x1A0A8DC", Offset = "0x1A0A8DC", VA = "0x1A0A8DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0x1A0A5A4", Offset = "0x1A0A5A4", VA = "0x1A0A5A4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0x1A0A6B0", Offset = "0x1A0A6B0", VA = "0x1A0A6B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0x1A0A738", Offset = "0x1A0A738", VA = "0x1A0A738", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0x1A0A694", Offset = "0x1A0A694", VA = "0x1A0A694")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0x1A0A780", Offset = "0x1A0A780", VA = "0x1A0A780", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x1A0A99C", Offset = "0x1A0A99C", VA = "0x1A0A99C")]
	public AkBank()
	{
	}
}
[Token(Token = "0x20003F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ED9D4", Offset = "0x8ED9D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ED9D4", Offset = "0x8ED9D4")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x1A14B00", Offset = "0x1A14B00", VA = "0x1A14B00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x1A14B68", Offset = "0x1A14B68", VA = "0x1A14B68", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x1A14D64", Offset = "0x1A14D64", VA = "0x1A14D64", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x1A14EBC", Offset = "0x1A14EBC", VA = "0x1A14EBC")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x20003F1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EDA58", Offset = "0x8EDA58")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDA58", Offset = "0x8EDA58")]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x175F200", Offset = "0x175F200", VA = "0x175F200", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x175F29C", Offset = "0x175F29C", VA = "0x175F29C")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x20003F3")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x175F2A4", Offset = "0x175F2A4", VA = "0x175F2A4", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x175F300", Offset = "0x175F300", VA = "0x175F300")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40015C5")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7B40", Offset = "0x8F7B40")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7B50", Offset = "0x8F7B50")]
	[HideInInspector]
	[SerializeField]
	private int auxBusIdInternal;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7BAC", Offset = "0x8F7BAC")]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000365")]
	public Collider Collider
	{
		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x1A15AE4", Offset = "0x1A15AE4", VA = "0x1A15AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905408", Offset = "0x905408")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1A15AEC", Offset = "0x1A15AEC", VA = "0x1A15AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905418", Offset = "0x905418")]
		private set
		{
		}
	}

	[Token(Token = "0x17000366")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D124", Offset = "0x90D124")]
	public int m_auxBusID
	{
		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x1A15B50", Offset = "0x1A15B50", VA = "0x1A15B50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000367")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D15C", Offset = "0x90D15C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1A15B64", Offset = "0x1A15B64", VA = "0x1A15B64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x1A15AF4", Offset = "0x1A15AF4", VA = "0x1A15AF4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x1A15C24", Offset = "0x1A15C24", VA = "0x1A15C24")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x905428", Offset = "0x905428")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x1A15C40", Offset = "0x1A15C40", VA = "0x1A15C40")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x905460", Offset = "0x905460")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x1A15C48", Offset = "0x1A15C48", VA = "0x1A15C48")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x20003F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EDAEC", Offset = "0x8EDAEC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDAEC", Offset = "0x8EDAEC")]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40015CF")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x17000368")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1A15D6C", Offset = "0x1A15D6C", VA = "0x1A15D6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000369")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1A15E1C", Offset = "0x1A15E1C", VA = "0x1A15E1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x1A15FBC", Offset = "0x1A15FBC", VA = "0x1A15FBC")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x1A1615C", Offset = "0x1A1615C", VA = "0x1A1615C")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x20003F5")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x1A161DC", Offset = "0x1A161DC", VA = "0x1A161DC")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20003F6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDB80", Offset = "0x8EDB80")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EDB80", Offset = "0x8EDB80")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x20003F7")]
	public class CallbackData
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x175F308", Offset = "0x175F308", VA = "0x175F308")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x175F3C8", Offset = "0x175F3C8", VA = "0x175F3C8")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AK.Wwise.Event data;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7C08", Offset = "0x8F7C08")]
	private int eventIdInternal;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7C64", Offset = "0x8F7C64")]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F7CC0", Offset = "0x8F7CC0")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x1700036A")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x1A161D4", Offset = "0x1A161D4", VA = "0x1A161D4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700036B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D194", Offset = "0x90D194")]
	public int eventID
	{
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1A162E4", Offset = "0x1A162E4", VA = "0x1A162E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700036C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D1CC", Offset = "0x90D1CC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x1A162F8", Offset = "0x1A162F8", VA = "0x1A162F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700036D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D204", Offset = "0x90D204")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1A163B8", Offset = "0x1A163B8", VA = "0x1A163B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x1A057F8", Offset = "0x1A057F8", VA = "0x1A057F8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x1A161E4", Offset = "0x1A161E4", VA = "0x1A161E4")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x1A05F88", Offset = "0x1A05F88", VA = "0x1A05F88", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x1A162B0", Offset = "0x1A162B0", VA = "0x1A162B0")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x1A162B8", Offset = "0x1A162B8", VA = "0x1A162B8")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x1A0631C", Offset = "0x1A0631C", VA = "0x1A0631C")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x20003F8")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x1A163C0", Offset = "0x1A163C0", VA = "0x1A163C0")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20003F9")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EDC04", Offset = "0x8EDC04")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x1700036E")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x1A16600", Offset = "0x1A16600", VA = "0x1A16600", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x1A16608", Offset = "0x1A16608", VA = "0x1A16608", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0x1A168CC", Offset = "0x1A168CC", VA = "0x1A168CC")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x20003FA")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20003FB")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x400160D")]
		None = 0,
		[Token(Token = "0x400160E")]
		Playback = 1,
		[Token(Token = "0x400160F")]
		Retrigger = 2,
		[Token(Token = "0x4001610")]
		DelayedStop = 4,
		[Token(Token = "0x4001611")]
		Seek = 8,
		[Token(Token = "0x4001612")]
		FadeIn = 0x10,
		[Token(Token = "0x4001613")]
		FadeOut = 0x20
	}

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x40015FA")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x40015FC")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x400160B")]
	private const float alph = 0.05f;

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0x1A16954", Offset = "0x1A16954", VA = "0x1A16954")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x1A16A18", Offset = "0x1A16A18", VA = "0x1A16A18")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0x1A16A3C", Offset = "0x1A16A3C", VA = "0x1A16A3C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x1A16E10", Offset = "0x1A16E10", VA = "0x1A16E10", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x1A16FE0", Offset = "0x1A16FE0", VA = "0x1A16FE0", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0x1A170F8", Offset = "0x1A170F8", VA = "0x1A170F8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x1A16B78", Offset = "0x1A16B78", VA = "0x1A16B78")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x1A16CD4", Offset = "0x1A16CD4", VA = "0x1A16CD4")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x1A16D70", Offset = "0x1A16D70", VA = "0x1A16D70")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x1A17490", Offset = "0x1A17490", VA = "0x1A17490")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x1A175A0", Offset = "0x1A175A0", VA = "0x1A175A0")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x1A170C0", Offset = "0x1A170C0", VA = "0x1A170C0")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x1A17680", Offset = "0x1A17680", VA = "0x1A17680")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x1A172F4", Offset = "0x1A172F4", VA = "0x1A172F4")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x1A173F8", Offset = "0x1A173F8", VA = "0x1A173F8")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x1A16EFC", Offset = "0x1A16EFC", VA = "0x1A16EFC")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x1A17324", Offset = "0x1A17324", VA = "0x1A17324")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x1A17738", Offset = "0x1A17738", VA = "0x1A17738")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20003FC")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8EDC4C", Offset = "0x8EDC4C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8EDC4C", Offset = "0x8EDC4C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8EDC4C", Offset = "0x8EDC4C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EDC4C", Offset = "0x8EDC4C")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x1A1774C", Offset = "0x1A1774C", VA = "0x1A1774C", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x1A17B64", Offset = "0x1A17B64", VA = "0x1A17B64")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x20003FD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDD2C", Offset = "0x8EDD2C")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8EDD2C", Offset = "0x8EDD2C")]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x400161D")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private int listenerMask;

	[Token(Token = "0x1700036F")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1A14D2C", Offset = "0x1A14D2C", VA = "0x1A14D2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000370")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1A14D48", Offset = "0x1A14D48", VA = "0x1A14D48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x1A08A50", Offset = "0x1A08A50", VA = "0x1A08A50")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x1A08A70", Offset = "0x1A08A70", VA = "0x1A08A70")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x1A086B4", Offset = "0x1A086B4", VA = "0x1A086B4")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x1A18A5C", Offset = "0x1A18A5C", VA = "0x1A18A5C")]
	internal void SetPosition(bool force = false)
	{
	}

	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x1A18C34", Offset = "0x1A18C34", VA = "0x1A18C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x1A192CC", Offset = "0x1A192CC", VA = "0x1A192CC")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x1A192D0", Offset = "0x1A192D0", VA = "0x1A192D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x1A192E4", Offset = "0x1A192E4", VA = "0x1A192E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x1A19458", Offset = "0x1A19458", VA = "0x1A19458")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x1A194DC", Offset = "0x1A194DC", VA = "0x1A194DC", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x1A19578", Offset = "0x1A19578", VA = "0x1A19578", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0x1A1959C", Offset = "0x1A1959C", VA = "0x1A1959C", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x1A195C0", Offset = "0x1A195C0", VA = "0x1A195C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0x1A195D8", Offset = "0x1A195D8", VA = "0x1A195D8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x1A19838", Offset = "0x1A19838", VA = "0x1A19838")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x20003FE")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x1A1993C", Offset = "0x1A1993C", VA = "0x1A1993C")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x1A19C44", Offset = "0x1A19C44", VA = "0x1A19C44")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x1A19090", Offset = "0x1A19090", VA = "0x1A19090")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x1A19D78", Offset = "0x1A19D78", VA = "0x1A19D78")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x1A19EFC", Offset = "0x1A19EFC", VA = "0x1A19EFC")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0x1A18F38", Offset = "0x1A18F38", VA = "0x1A18F38")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0x1A19F80", Offset = "0x1A19F80", VA = "0x1A19F80")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x1A195F8", Offset = "0x1A195F8", VA = "0x1A195F8")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x1A18DF0", Offset = "0x1A18DF0", VA = "0x1A18DF0")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20003FF")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0x1A1A0C4", Offset = "0x1A1A0C4", VA = "0x1A1A0C4")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x1A191B4", Offset = "0x1A191B4", VA = "0x1A191B4")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x1A1A2B0", Offset = "0x1A1A2B0", VA = "0x1A1A2B0", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x1A1A39C", Offset = "0x1A1A39C", VA = "0x1A1A39C", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x1A198B0", Offset = "0x1A198B0", VA = "0x1A198B0")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000400")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x1A1A488", Offset = "0x1A1A488", VA = "0x1A1A488")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000401")]
public class AkGameObjPositionData
{
	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x1A18DE8", Offset = "0x1A18DE8", VA = "0x1A18DE8")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000402")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001D07")]
	[Address(RVA = "0x1A1A490", Offset = "0x1A1A490", VA = "0x1A1A490")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x2000403")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8EDD9C", Offset = "0x8EDD9C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDD9C", Offset = "0x8EDD9C")]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0x1A1C7AC", Offset = "0x1A1C7AC", VA = "0x1A1C7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0x1A1C8C4", Offset = "0x1A1C8C4", VA = "0x1A1C8C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0x1A1C9BC", Offset = "0x1A1C9BC", VA = "0x1A1C9BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0x1A1CA6C", Offset = "0x1A1CA6C", VA = "0x1A1CA6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0x1A1CB24", Offset = "0x1A1CB24", VA = "0x1A1CB24")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0x1A1CBE8", Offset = "0x1A1CBE8", VA = "0x1A1CBE8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0x1A1CCAC", Offset = "0x1A1CCAC", VA = "0x1A1CCAC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0x1A1CD5C", Offset = "0x1A1CD5C", VA = "0x1A1CD5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0x1A1CE0C", Offset = "0x1A1CE0C", VA = "0x1A1CE0C")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x2000404")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDE0C", Offset = "0x8EDE0C")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x17000371")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x1761A58", Offset = "0x1761A58", VA = "0x1761A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1761AA0", Offset = "0x1761AA0", VA = "0x1761AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x176183C", Offset = "0x176183C", VA = "0x176183C")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1761868", Offset = "0x1761868", VA = "0x1761868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x176186C", Offset = "0x176186C", VA = "0x176186C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1761A60", Offset = "0x1761A60", VA = "0x1761A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001632")]
	private const int WaitMs = 50;

	[Token(Token = "0x4001633")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4001634")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x1534BD4", Offset = "0x1534BD4", VA = "0x1534BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x1534D10", Offset = "0x1534D10", VA = "0x1534D10")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0x1534BE8", Offset = "0x1534BE8", VA = "0x1534BE8")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0x1534EC0", Offset = "0x1534EC0", VA = "0x1534EC0")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x15350F4", Offset = "0x15350F4", VA = "0x15350F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905498", Offset = "0x905498")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0x1534DF4", Offset = "0x1534DF4", VA = "0x1534DF4")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0x153516C", Offset = "0x153516C", VA = "0x153516C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0x1535294", Offset = "0x1535294", VA = "0x1535294")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x2000406")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1761AA8", Offset = "0x1761AA8", VA = "0x1761AA8")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1761B38", Offset = "0x1761B38", VA = "0x1761B38")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7E2C", Offset = "0x8F7E2C")]
	public float fadeTime;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7E64", Offset = "0x8F7E64")]
	public LayerMask LayerMask;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7E9C", Offset = "0x8F7E9C")]
	public float maxDistance;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7ED4", Offset = "0x8F7ED4")]
	public float refreshInterval;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x1539234", Offset = "0x1539234", VA = "0x1539234")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001D20")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x1539274", Offset = "0x1539274", VA = "0x1539274")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0x1539590", Offset = "0x1539590", VA = "0x1539590")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6001D23")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6001D24")]
	[Address(RVA = "0x153986C", Offset = "0x153986C", VA = "0x153986C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0x1539A10", Offset = "0x1539A10", VA = "0x1539A10")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x2000408")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EDE1C", Offset = "0x8EDE1C")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F0C", Offset = "0x8F7F0C")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F1C", Offset = "0x8F7F1C")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x17000373")]
	public RTPC Parameter
	{
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1544984", Offset = "0x1544984", VA = "0x1544984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905548", Offset = "0x905548")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x154498C", Offset = "0x154498C", VA = "0x154498C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905558", Offset = "0x905558")]
		set
		{
		}
	}

	[Token(Token = "0x17000374")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1544994", Offset = "0x1544994", VA = "0x1544994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905568", Offset = "0x905568")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x154499C", Offset = "0x154499C", VA = "0x154499C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905578", Offset = "0x905578")]
		set
		{
		}
	}

	[Token(Token = "0x17000375")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x15449A4", Offset = "0x15449A4", VA = "0x15449A4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0x15449AC", Offset = "0x15449AC", VA = "0x15449AC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0x1544B48", Offset = "0x1544B48", VA = "0x1544B48")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000409")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EDE54", Offset = "0x8EDE54")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F3C", Offset = "0x8F7F3C")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F4C", Offset = "0x8F7F4C")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F5C", Offset = "0x8F7F5C")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F7F6C", Offset = "0x8F7F6C")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x17000376")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1544BCC", Offset = "0x1544BCC", VA = "0x1544BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905598", Offset = "0x905598")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x1544BC0", Offset = "0x1544BC0", VA = "0x1544BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x905588", Offset = "0x905588")]
		set
		{
		}
	}

	[Token(Token = "0x17000377")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x1544BE0", Offset = "0x1544BE0", VA = "0x1544BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055B8", Offset = "0x9055B8")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1544BD4", Offset = "0x1544BD4", VA = "0x1544BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055A8", Offset = "0x9055A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000378")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x1544BF0", Offset = "0x1544BF0", VA = "0x1544BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055D8", Offset = "0x9055D8")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1544BE8", Offset = "0x1544BE8", VA = "0x1544BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055C8", Offset = "0x9055C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000379")]
	public RTPC parameter
	{
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1544C00", Offset = "0x1544C00", VA = "0x1544C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055F8", Offset = "0x9055F8")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1544BF8", Offset = "0x1544BF8", VA = "0x1544BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9055E8", Offset = "0x9055E8")]
		set
		{
		}
	}

	[Token(Token = "0x6001D37")]
	[Address(RVA = "0x1544C08", Offset = "0x1544C08", VA = "0x1544C08", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001D38")]
	[Address(RVA = "0x1544BB8", Offset = "0x1544BB8", VA = "0x1544BB8")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x200040A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EDE8C", Offset = "0x8EDE8C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8EDE8C", Offset = "0x8EDE8C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8EDE8C", Offset = "0x8EDE8C")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8EDE8C", Offset = "0x8EDE8C")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0x1544D90", Offset = "0x1544D90", VA = "0x1544D90", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0x1544E60", Offset = "0x1544E60", VA = "0x1544E60")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0x15451AC", Offset = "0x15451AC", VA = "0x15451AC")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0x15454CC", Offset = "0x15454CC", VA = "0x15454CC")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x200040B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDF68", Offset = "0x8EDF68")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EDF68", Offset = "0x8EDF68")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x200040C")]
	public class PriorityList
	{
		[Token(Token = "0x200040D")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x1FCC020", Offset = "0x1FCC020", VA = "0x1FCC020", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x1FCC0CC", Offset = "0x1FCC0CC", VA = "0x1FCC0CC")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1761B40", Offset = "0x1761B40", VA = "0x1761B40")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1761C14", Offset = "0x1761C14", VA = "0x1761C14")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1761C80", Offset = "0x1761C80", VA = "0x1761C80")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1761DFC", Offset = "0x1761DFC", VA = "0x1761DFC")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1761E60", Offset = "0x1761E60", VA = "0x1761E60")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1761D0C", Offset = "0x1761D0C", VA = "0x1761D0C")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1761E7C", Offset = "0x1761E7C", VA = "0x1761E7C")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7F7C", Offset = "0x8F7F7C")]
	public int priority;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F7FB4", Offset = "0x8F7FB4")]
	public float reverbLevel;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F7FCC", Offset = "0x8F7FCC")]
	public float wallOcclusion;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AK.Wwise.Event roomToneEvent;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F7FE4", Offset = "0x8F7FE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F7FE4", Offset = "0x8F7FE4")]
	public float roomToneAuxSend;

	[Token(Token = "0x1700037A")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x15473B8", Offset = "0x15473B8", VA = "0x15473B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0x1547584", Offset = "0x1547584", VA = "0x1547584")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0x1547670", Offset = "0x1547670", VA = "0x1547670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0x154824C", Offset = "0x154824C", VA = "0x154824C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x1548284", Offset = "0x1548284", VA = "0x1548284")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x15483C8", Offset = "0x15483C8", VA = "0x15483C8")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x15484D0", Offset = "0x15484D0", VA = "0x15484D0")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0x15485D8", Offset = "0x15485D8", VA = "0x15485D8")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x200040E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EDFFC", Offset = "0x8EDFFC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EDFFC", Offset = "0x8EDFFC")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x200040F")]
	public enum State
	{
		[Token(Token = "0x4001668")]
		Closed,
		[Token(Token = "0x4001669")]
		Open
	}

	[Token(Token = "0x4001660")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x1700037B")]
	public bool portalActive
	{
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x15495B4", Offset = "0x15495B4", VA = "0x15495B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x15495BC", Offset = "0x15495BC", VA = "0x15495BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700037C")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1549714", Offset = "0x1549714", VA = "0x1549714")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700037D")]
	private ulong backRoomID
	{
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1549874", Offset = "0x1549874", VA = "0x1549874")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700037E")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x15497AC", Offset = "0x15497AC", VA = "0x15497AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037F")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x154990C", Offset = "0x154990C", VA = "0x154990C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000380")]
	public bool IsValid
	{
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1549D28", Offset = "0x1549D28", VA = "0x1549D28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001D54")]
	[Address(RVA = "0x1549940", Offset = "0x1549940", VA = "0x1549940")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6001D55")]
	[Address(RVA = "0x1549A50", Offset = "0x1549A50", VA = "0x1549A50")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D56")]
	[Address(RVA = "0x1549A5C", Offset = "0x1549A5C", VA = "0x1549A5C")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D57")]
	[Address(RVA = "0x1549A68", Offset = "0x1549A68", VA = "0x1549A68")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0x1549AA4", Offset = "0x1549AA4", VA = "0x1549AA4")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0x1549C1C", Offset = "0x1549C1C", VA = "0x1549C1C")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0x1549D5C", Offset = "0x1549D5C", VA = "0x1549D5C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0x154ABF0", Offset = "0x154ABF0", VA = "0x154ABF0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0x154ACF0", Offset = "0x154ACF0", VA = "0x154ACF0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0x154ABE8", Offset = "0x154ABE8", VA = "0x154ABE8")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D61")]
	[Address(RVA = "0x154AD08", Offset = "0x154AD08", VA = "0x154AD08", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001D62")]
	[Address(RVA = "0x15497E4", Offset = "0x15497E4", VA = "0x15497E4")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D63")]
	[Address(RVA = "0x154ACF8", Offset = "0x154ACF8", VA = "0x154ACF8")]
	public void Open()
	{
	}

	[Token(Token = "0x6001D64")]
	[Address(RVA = "0x154AD00", Offset = "0x154AD00", VA = "0x154AD00")]
	public void Close()
	{
	}

	[Token(Token = "0x6001D65")]
	[Address(RVA = "0x154B3F0", Offset = "0x154B3F0", VA = "0x154B3F0")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6001D66")]
	[Address(RVA = "0x154B5FC", Offset = "0x154B5FC", VA = "0x154B5FC")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6001D67")]
	[Address(RVA = "0x154A3A0", Offset = "0x154A3A0", VA = "0x154A3A0")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0x154B7F8", Offset = "0x154B7F8", VA = "0x154B7F8")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000410")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EE090", Offset = "0x8EE090")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE090", Offset = "0x8EE090")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6001D69")]
	[Address(RVA = "0x154BB9C", Offset = "0x154BB9C", VA = "0x154BB9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0x154BC1C", Offset = "0x154BC1C", VA = "0x154BC1C", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0x154BCA8", Offset = "0x154BCA8", VA = "0x154BCA8", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0x154BE04", Offset = "0x154BE04", VA = "0x154BE04")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000411")]
public class AkSoundEngineController
{
	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x17000381")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1568844", Offset = "0x1568844", VA = "0x1568844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0x15688C8", Offset = "0x15688C8", VA = "0x15688C8")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0x15688D0", Offset = "0x15688D0", VA = "0x15688D0", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0x156897C", Offset = "0x156897C", VA = "0x156897C")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6001D71")]
	[Address(RVA = "0x15689C0", Offset = "0x15689C0", VA = "0x15689C0")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6001D72")]
	[Address(RVA = "0x1568A5C", Offset = "0x1568A5C", VA = "0x1568A5C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001D73")]
	[Address(RVA = "0x1568B4C", Offset = "0x1568B4C", VA = "0x1568B4C")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0x1568D40", Offset = "0x1568D40", VA = "0x1568D40")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0x1568D44", Offset = "0x1568D44", VA = "0x1568D44")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6001D76")]
	[Address(RVA = "0x1568DA0", Offset = "0x1568DA0", VA = "0x1568DA0")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001D77")]
	[Address(RVA = "0x1568E84", Offset = "0x1568E84", VA = "0x1568E84")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001D78")]
	[Address(RVA = "0x1568DB0", Offset = "0x1568DB0", VA = "0x1568DB0")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000412")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0x157A358", Offset = "0x157A358", VA = "0x157A358")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0x154849C", Offset = "0x154849C", VA = "0x154849C")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0x15485A4", Offset = "0x15485A4", VA = "0x15485A4")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D7C")]
	[Address(RVA = "0x157A3E8", Offset = "0x157A3E8", VA = "0x157A3E8")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x6001D7D")]
	[Address(RVA = "0x157A520", Offset = "0x157A520", VA = "0x157A520")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000413")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE114", Offset = "0x8EE114")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EE114", Offset = "0x8EE114")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8048", Offset = "0x8F8048")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8048", Offset = "0x8F8048")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F80A8", Offset = "0x8F80A8")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F80E0", Offset = "0x8F80E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F80E0", Offset = "0x8F80E0")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F8134", Offset = "0x8F8134")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8134", Offset = "0x8F8134")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F8188", Offset = "0x8F8188")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8188", Offset = "0x8F8188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8188", Offset = "0x8F8188")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8200", Offset = "0x8F8200")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8200", Offset = "0x8F8200")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8260", Offset = "0x8F8260")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8298", Offset = "0x8F8298")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0x157A590", Offset = "0x157A590", VA = "0x157A590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0x157A790", Offset = "0x157A790", VA = "0x157A790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D80")]
	[Address(RVA = "0x157A804", Offset = "0x157A804", VA = "0x157A804")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000414")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE198", Offset = "0x8EE198")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EE198", Offset = "0x8EE198")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000415")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000384")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1762540", Offset = "0x1762540", VA = "0x1762540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1762548", Offset = "0x1762548", VA = "0x1762548")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x176294C", Offset = "0x176294C", VA = "0x176294C")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1762630", Offset = "0x1762630", VA = "0x1762630")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1762A34", Offset = "0x1762A34", VA = "0x1762A34")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x17000382")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x15474A4", Offset = "0x15474A4", VA = "0x15474A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000383")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x157B148", Offset = "0x157B148", VA = "0x157B148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D83")]
	[Address(RVA = "0x157B1AC", Offset = "0x157B1AC", VA = "0x157B1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D84")]
	[Address(RVA = "0x157B208", Offset = "0x157B208", VA = "0x157B208")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D85")]
	[Address(RVA = "0x157B280", Offset = "0x157B280", VA = "0x157B280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x157B2F8", Offset = "0x157B2F8", VA = "0x157B2F8")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000416")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8EE22C", Offset = "0x8EE22C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE22C", Offset = "0x8EE22C")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F82D0", Offset = "0x8F82D0")]
	private int valueIdInternal;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F832C", Offset = "0x8F832C")]
	private int groupIdInternal;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F8388", Offset = "0x8F8388")]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F83E4", Offset = "0x8F83E4")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000385")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x157B374", Offset = "0x157B374", VA = "0x157B374", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000386")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D23C", Offset = "0x90D23C")]
	public int valueID
	{
		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x157B398", Offset = "0x157B398", VA = "0x157B398")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000387")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D274", Offset = "0x90D274")]
	public int groupID
	{
		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x157B3AC", Offset = "0x157B3AC", VA = "0x157B3AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000388")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D2AC", Offset = "0x90D2AC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x157B3C0", Offset = "0x157B3C0", VA = "0x157B3C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000389")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D2E4", Offset = "0x90D2E4")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x157B480", Offset = "0x157B480", VA = "0x157B480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x157B37C", Offset = "0x157B37C", VA = "0x157B37C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x157B53C", Offset = "0x157B53C", VA = "0x157B53C")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000417")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EE27C", Offset = "0x8EE27C")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE27C", Offset = "0x8EE27C")]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8440", Offset = "0x8F8440")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8478", Offset = "0x8F8478")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F84B0", Offset = "0x8F84B0")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F84E8", Offset = "0x8F84E8")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x157B95C", Offset = "0x157B95C", VA = "0x157B95C")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x157B980", Offset = "0x157B980", VA = "0x157B980")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0x157C9E8", Offset = "0x157C9E8", VA = "0x157C9E8")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0x157CAB0", Offset = "0x157CAB0", VA = "0x157CAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D98")]
	[Address(RVA = "0x157CB0C", Offset = "0x157CB0C", VA = "0x157CB0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D99")]
	[Address(RVA = "0x157CBE8", Offset = "0x157CBE8", VA = "0x157CBE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D9A")]
	[Address(RVA = "0x157CBF0", Offset = "0x157CBF0", VA = "0x157CBF0")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x2000418")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8EE320", Offset = "0x8EE320")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE320", Offset = "0x8EE320")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F8520", Offset = "0x8F8520")]
	private int valueIdInternal;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F857C", Offset = "0x8F857C")]
	private int groupIdInternal;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F85D8", Offset = "0x8F85D8")]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F8634", Offset = "0x8F8634")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x1700038A")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x157CC60", Offset = "0x157CC60", VA = "0x157CC60", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700038B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D31C", Offset = "0x90D31C")]
	public int valueID
	{
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x157CD14", Offset = "0x157CD14", VA = "0x157CD14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700038C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D354", Offset = "0x90D354")]
	public int groupID
	{
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x157CD28", Offset = "0x157CD28", VA = "0x157CD28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700038D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D38C", Offset = "0x90D38C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x157CD3C", Offset = "0x157CD3C", VA = "0x157CD3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700038E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D3C4", Offset = "0x90D3C4")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x157CDFC", Offset = "0x157CDFC", VA = "0x157CDFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D9C")]
	[Address(RVA = "0x157CC68", Offset = "0x157CC68", VA = "0x157CC68", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0x157CEB8", Offset = "0x157CEB8", VA = "0x157CEB8")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x2000419")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0x157D324", Offset = "0x157D324", VA = "0x157D324")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x200041A")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x200041B")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0x15808F0", Offset = "0x15808F0", VA = "0x15808F0")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0x1580C38", Offset = "0x1580C38", VA = "0x1580C38")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200041C")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001DA9")]
	[Address(RVA = "0x1580C40", Offset = "0x1580C40", VA = "0x1580C40")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6001DAA")]
	[Address(RVA = "0x1580D4C", Offset = "0x1580D4C", VA = "0x1580D4C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001DAB")]
	[Address(RVA = "0x1580E58", Offset = "0x1580E58", VA = "0x1580E58")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200041D")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001DAC")]
	[Address(RVA = "0x1580E60", Offset = "0x1580E60", VA = "0x1580E60")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6001DAD")]
	[Address(RVA = "0x1580F6C", Offset = "0x1580F6C", VA = "0x1580F6C")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200041E")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6001DAE")]
	[Address(RVA = "0x1580F74", Offset = "0x1580F74", VA = "0x1580F74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0x1580F8C", Offset = "0x1580F8C", VA = "0x1580F8C")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x200041F")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0x1580F94", Offset = "0x1580F94", VA = "0x1580F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0x1580FAC", Offset = "0x1580FAC", VA = "0x1580FAC")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x2000420")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0x1580FB4", Offset = "0x1580FB4", VA = "0x1580FB4")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0x15810C0", Offset = "0x15810C0", VA = "0x15810C0")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x2000421")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0x15810C8", Offset = "0x15810C8", VA = "0x15810C8")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0x15811D4", Offset = "0x15811D4", VA = "0x15811D4")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000422")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x400168D")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400168E")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400168F")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001690")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6001DB6")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0x154AB10", Offset = "0x154AB10", VA = "0x154AB10", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0x154AC70", Offset = "0x154AC70", VA = "0x154AC70", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0x154AE18", Offset = "0x154AE18", VA = "0x154AE18", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001DBA")]
	[Address(RVA = "0x15811DC", Offset = "0x15811DC", VA = "0x15811DC")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001DBB")]
	[Address(RVA = "0x154A62C", Offset = "0x154A62C", VA = "0x154A62C")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001DBC")]
	[Address(RVA = "0x154AE28", Offset = "0x154AE28", VA = "0x154AE28")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001DBD")]
	[Address(RVA = "0x15486BC", Offset = "0x15486BC", VA = "0x15486BC")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000423")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700038F")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6001DBF")]
		get;
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0x1A13E64", Offset = "0x1A13E64", VA = "0x1A13E64", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0x1A13E6C", Offset = "0x1A13E6C", VA = "0x1A13E6C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0x1A13E74", Offset = "0x1A13E74", VA = "0x1A13E74", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0x1A13E7C", Offset = "0x1A13E7C", VA = "0x1A13E7C")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000424")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x1581314", Offset = "0x1581314", VA = "0x1581314")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000425")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0x158131C", Offset = "0x158131C", VA = "0x158131C")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000426")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0x1581324", Offset = "0x1581324", VA = "0x1581324")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000427")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0x158132C", Offset = "0x158132C", VA = "0x158132C")]
	public AkTriggerMouseUp()
	{
	}
}
[Token(Token = "0x2000428")]
public class AOTStubRequiredAttribute : Attribute
{
	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0x1A02530", Offset = "0x1A02530", VA = "0x1A02530")]
	public AOTStubRequiredAttribute()
	{
	}
}
[Token(Token = "0x2000429")]
public class AnimEventSpawnVFX : MonoBehaviour
{
	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_spawnAt;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_localOffset;

	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0x1A9E154", Offset = "0x1A9E154", VA = "0x1A9E154")]
	public void SpawnVFX(object obj)
	{
	}

	[Token(Token = "0x6001DCA")]
	[Address(RVA = "0x1A9E238", Offset = "0x1A9E238", VA = "0x1A9E238")]
	public void SpawnVFXAsChild(object obj)
	{
	}

	[Token(Token = "0x6001DCB")]
	[Address(RVA = "0x1A9E31C", Offset = "0x1A9E31C", VA = "0x1A9E31C")]
	public AnimEventSpawnVFX()
	{
	}
}
[Token(Token = "0x200042A")]
[ExecuteAlways]
public class AxisGizmo : ImmediateModeShapeDrawer
{
	[Token(Token = "0x200042B")]
	public enum Plane
	{
		[Token(Token = "0x400169F")]
		No,
		[Token(Token = "0x40016A0")]
		XZ,
		[Token(Token = "0x40016A1")]
		XY,
		[Token(Token = "0x40016A2")]
		ZY
	}

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_scale;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_customColour;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F8690", Offset = "0x8F8690")]
	public Color m_colour;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Plane m_plane;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 m_planeOffset;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_useShapes;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_showInBuild;

	[Token(Token = "0x6001DCC")]
	[Address(RVA = "0x1AAAF08", Offset = "0x1AAAF08", VA = "0x1AAAF08", Slot = "4")]
	public override void DrawShapes(Camera cam)
	{
	}

	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0x1AABD78", Offset = "0x1AABD78", VA = "0x1AABD78")]
	public AxisGizmo()
	{
	}
}
[Token(Token = "0x200042C")]
public class BugReporter : MonoBehaviour
{
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE3A0", Offset = "0x8EE3A0")]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BugReporter <>4__this;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x1768954", Offset = "0x1768954", VA = "0x1768954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x176899C", Offset = "0x176899C", VA = "0x176899C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1768534", Offset = "0x1768534", VA = "0x1768534")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1768560", Offset = "0x1768560", VA = "0x1768560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1768564", Offset = "0x1768564", VA = "0x1768564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x176895C", Offset = "0x176895C", VA = "0x176895C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE3B0", Offset = "0x8EE3B0")]
	private sealed class <RefreshPhotoCR>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fn;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BugReporter <>4__this;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x17000392")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x17684E4", Offset = "0x17684E4", VA = "0x17684E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x176852C", Offset = "0x176852C", VA = "0x176852C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1768190", Offset = "0x1768190", VA = "0x1768190")]
		[DebuggerHidden]
		public <RefreshPhotoCR>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x17681BC", Offset = "0x17681BC", VA = "0x17681BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1768294", Offset = "0x1768294", VA = "0x1768294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x17681D8", Offset = "0x17681D8", VA = "0x17681D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x17684EC", Offset = "0x17684EC", VA = "0x17684EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE3C0", Offset = "0x8EE3C0")]
	private sealed class <>c
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__44_0;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<char, char> <>9__48_0;

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1768138", Offset = "0x1768138", VA = "0x1768138")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1768140", Offset = "0x1768140", VA = "0x1768140")]
		internal bool <SendBugAsEmail>b__44_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x1768148", Offset = "0x1768148", VA = "0x1768148")]
		internal char <Rot13>b__48_0(char s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_titleSource;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_bodySource;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BugReporter ms_instance;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_attachSaveFile;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_attachSaveIndicator;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_attachBugReportBundle;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_attachBugReportBundleButton;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_attachBugReportBundleIndicator;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_attachLog;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_attachLogButton;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_attachLogIndicator;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_attachPhoto;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_attachPhotoButton;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_attachPhotoIndicator;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_newPhotoButton;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D m_latestPhoto;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_latestPhotoPath;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material m_photoMat;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer m_photoRenderer;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_defaultBodyText;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_lastBodyText;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_tempLogFilePath;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text m_submitButtonText;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string PlayerName;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_testEmail;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_testPassword;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string to;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string m_senderEmail;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string m_senderPass13;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string subject;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8F86C8", Offset = "0x8F86C8")]
	public string body;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_sending;

	[Token(Token = "0x6001DCE")]
	[Address(RVA = "0x177D358", Offset = "0x177D358", VA = "0x177D358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905608", Offset = "0x905608")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001DCF")]
	[Address(RVA = "0x177D3D0", Offset = "0x177D3D0", VA = "0x177D3D0")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6001DD0")]
	[Address(RVA = "0x177D4A0", Offset = "0x177D4A0", VA = "0x177D4A0")]
	public void ToggleAttachSave()
	{
	}

	[Token(Token = "0x6001DD1")]
	[Address(RVA = "0x177D4D4", Offset = "0x177D4D4", VA = "0x177D4D4")]
	public void ToggleAttachBugReport()
	{
	}

	[Token(Token = "0x6001DD2")]
	[Address(RVA = "0x177D508", Offset = "0x177D508", VA = "0x177D508")]
	public void ToggleAttachLog()
	{
	}

	[Token(Token = "0x6001DD3")]
	[Address(RVA = "0x177D53C", Offset = "0x177D53C", VA = "0x177D53C")]
	public void ToggleAttachPhoto()
	{
	}

	[Token(Token = "0x6001DD4")]
	[Address(RVA = "0x177D570", Offset = "0x177D570", VA = "0x177D570")]
	public void PressNewPhoto()
	{
	}

	[Token(Token = "0x6001DD5")]
	[Address(RVA = "0x177D6B8", Offset = "0x177D6B8", VA = "0x177D6B8")]
	private void RefreshPhoto(string fn)
	{
	}

	[Token(Token = "0x6001DD6")]
	[Address(RVA = "0x177D718", Offset = "0x177D718", VA = "0x177D718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905668", Offset = "0x905668")]
	private IEnumerator RefreshPhotoCR(string fn)
	{
		return null;
	}

	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0x177D7AC", Offset = "0x177D7AC", VA = "0x177D7AC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9056C8", Offset = "0x9056C8")]
	public static void ToggleBugReporter()
	{
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0x177DC54", Offset = "0x177DC54", VA = "0x177DC54")]
	public void Send()
	{
	}

	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0x177E704", Offset = "0x177E704", VA = "0x177E704")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x905710", Offset = "0x905710")]
	public void TestSending()
	{
	}

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0x177DD60", Offset = "0x177DD60", VA = "0x177DD60")]
	private void SendBugAsEmail(bool test = false)
	{
	}

	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x177E938", Offset = "0x177E938", VA = "0x177E938")]
	private void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x177EA5C", Offset = "0x177EA5C", VA = "0x177EA5C")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x177EBB0", Offset = "0x177EBB0", VA = "0x177EBB0")]
	private void Revert()
	{
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0x177E7A8", Offset = "0x177E7A8", VA = "0x177E7A8")]
	private static string Rot13(string input)
	{
		return null;
	}

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0x177EC2C", Offset = "0x177EC2C", VA = "0x177EC2C")]
	public BugReporter()
	{
	}
}
[Token(Token = "0x2000430")]
public static class ColorExtensions
{
	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0x1A2F028", Offset = "0x1A2F028", VA = "0x1A2F028")]
	public static Color SetR(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0x1A2F05C", Offset = "0x1A2F05C", VA = "0x1A2F05C")]
	public static Color SetG(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0x1A2F090", Offset = "0x1A2F090", VA = "0x1A2F090")]
	public static Color SetB(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0x1A2F0C4", Offset = "0x1A2F0C4", VA = "0x1A2F0C4")]
	public static Color SetA(this Color c, float v = 0f)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000431")]
[ExecuteInEditMode]
public class CompanionScenes : MonoBehaviour
{
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE3F0", Offset = "0x8EE3F0")]
	private sealed class <LoadAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> scenesToLoad;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompanionScenes <>4__this;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Scene <s>5__3;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x15E83AC", Offset = "0x15E83AC", VA = "0x15E83AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x15E83F4", Offset = "0x15E83F4", VA = "0x15E83F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x15E81E4", Offset = "0x15E81E4", VA = "0x15E81E4")]
		[DebuggerHidden]
		public <LoadAsync>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x15E8210", Offset = "0x15E8210", VA = "0x15E8210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x15E8214", Offset = "0x15E8214", VA = "0x15E8214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x15E83B4", Offset = "0x15E83B4", VA = "0x15E83B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F86D8", Offset = "0x8F86D8")]
	public bool m_autoLoadInEditor;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F8728", Offset = "0x8F8728")]
	public int m_setActiveScene;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SceneField> m_requiredScenes;

	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0x1A31C08", Offset = "0x1A31C08", VA = "0x1A31C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DF6")]
	[Address(RVA = "0x1A31C54", Offset = "0x1A31C54", VA = "0x1A31C54")]
	private void LoadNow()
	{
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0x1A31E9C", Offset = "0x1A31E9C", VA = "0x1A31E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905808", Offset = "0x905808")]
	private IEnumerator LoadAsync(List<string> scenesToLoad)
	{
		return null;
	}

	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0x1A31F30", Offset = "0x1A31F30", VA = "0x1A31F30")]
	public CompanionScenes()
	{
	}
}
[Token(Token = "0x2000433")]
public static class ComponentExtensions
{
	[Token(Token = "0x6001DFF")]
	public static T CloneValues<T>(this UnityEngine.Component comp, T source) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6001E00")]
	[Address(RVA = "0x1A32750", Offset = "0x1A32750", VA = "0x1A32750")]
	public static UnityEngine.Component CloneValues(this UnityEngine.Component comp, UnityEngine.Component source)
	{
		return null;
	}

	[Token(Token = "0x6001E01")]
	public static T GetComponentInParents<T>(this UnityEngine.Component target) where T : UnityEngine.Component
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000434")]
public class SceneField : ISerializationCallbackReceiver
{
	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[HideInInspector]
	private string sceneName;

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x15B7B10", Offset = "0x15B7B10", VA = "0x15B7B10")]
	public static implicit operator string(SceneField sceneField)
	{
		return null;
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x15B7B28", Offset = "0x15B7B28", VA = "0x15B7B28", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x15B7B2C", Offset = "0x15B7B2C", VA = "0x15B7B2C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001E05")]
	[Address(RVA = "0x15B7B30", Offset = "0x15B7B30", VA = "0x15B7B30")]
	public SceneField()
	{
	}
}
[Serializable]
[Token(Token = "0x2000435")]
public class UDateTime : ISerializationCallbackReceiver
{
	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public DateTime dateTime;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private string _dateTime;

	[Token(Token = "0x6001E06")]
	[Address(RVA = "0x15CE264", Offset = "0x15CE264", VA = "0x15CE264")]
	public static implicit operator DateTime(UDateTime udt)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x15CE27C", Offset = "0x15CE27C", VA = "0x15CE27C")]
	public static implicit operator UDateTime(DateTime dt)
	{
		return null;
	}

	[Token(Token = "0x6001E08")]
	[Address(RVA = "0x15CE2EC", Offset = "0x15CE2EC", VA = "0x15CE2EC", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x15CE35C", Offset = "0x15CE35C", VA = "0x15CE35C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x15CE2E4", Offset = "0x15CE2E4", VA = "0x15CE2E4")]
	public UDateTime()
	{
	}
}
[Token(Token = "0x2000436")]
public class LangDemo : MonoBehaviour
{
	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 scrollView;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUISkin mySkin;

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x1818168", Offset = "0x1818168", VA = "0x1818168")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x1818E0C", Offset = "0x1818E0C", VA = "0x1818E0C")]
	private void ChangedLanguage(LanguageCode code)
	{
	}

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x181914C", Offset = "0x181914C", VA = "0x181914C")]
	public LangDemo()
	{
	}
}
[Token(Token = "0x2000437")]
internal enum IsolatedArabicLetters
{
	[Token(Token = "0x40016DD")]
	Hamza = 65152,
	[Token(Token = "0x40016DE")]
	Alef = 65165,
	[Token(Token = "0x40016DF")]
	AlefHamza = 65155,
	[Token(Token = "0x40016E0")]
	WawHamza = 65157,
	[Token(Token = "0x40016E1")]
	AlefMaksoor = 65159,
	[Token(Token = "0x40016E2")]
	AlefMaksora = 65263,
	[Token(Token = "0x40016E3")]
	HamzaNabera = 65161,
	[Token(Token = "0x40016E4")]
	Ba = 65167,
	[Token(Token = "0x40016E5")]
	Ta = 65173,
	[Token(Token = "0x40016E6")]
	Tha2 = 65177,
	[Token(Token = "0x40016E7")]
	Jeem = 65181,
	[Token(Token = "0x40016E8")]
	H7aa = 65185,
	[Token(Token = "0x40016E9")]
	Khaa2 = 65189,
	[Token(Token = "0x40016EA")]
	Dal = 65193,
	[Token(Token = "0x40016EB")]
	Thal = 65195,
	[Token(Token = "0x40016EC")]
	Ra2 = 65197,
	[Token(Token = "0x40016ED")]
	Zeen = 65199,
	[Token(Token = "0x40016EE")]
	Seen = 65201,
	[Token(Token = "0x40016EF")]
	Sheen = 65205,
	[Token(Token = "0x40016F0")]
	S9a = 65209,
	[Token(Token = "0x40016F1")]
	Dha = 65213,
	[Token(Token = "0x40016F2")]
	T6a = 65217,
	[Token(Token = "0x40016F3")]
	T6ha = 65221,
	[Token(Token = "0x40016F4")]
	Ain = 65225,
	[Token(Token = "0x40016F5")]
	Gain = 65229,
	[Token(Token = "0x40016F6")]
	Fa = 65233,
	[Token(Token = "0x40016F7")]
	Gaf = 65237,
	[Token(Token = "0x40016F8")]
	Kaf = 65241,
	[Token(Token = "0x40016F9")]
	Lam = 65245,
	[Token(Token = "0x40016FA")]
	Meem = 65249,
	[Token(Token = "0x40016FB")]
	Noon = 65253,
	[Token(Token = "0x40016FC")]
	Ha = 65257,
	[Token(Token = "0x40016FD")]
	Waw = 65261,
	[Token(Token = "0x40016FE")]
	Ya = 65265,
	[Token(Token = "0x40016FF")]
	AlefMad = 65153,
	[Token(Token = "0x4001700")]
	TaMarboota = 65171,
	[Token(Token = "0x4001701")]
	PersianPe = 64342,
	[Token(Token = "0x4001702")]
	PersianChe = 64378,
	[Token(Token = "0x4001703")]
	PersianZe = 64394,
	[Token(Token = "0x4001704")]
	PersianGaf = 64402,
	[Token(Token = "0x4001705")]
	PersianGaf2 = 64398
}
[Token(Token = "0x2000438")]
internal enum GeneralArabicLetters
{
	[Token(Token = "0x4001707")]
	Hamza = 1569,
	[Token(Token = "0x4001708")]
	Alef = 1575,
	[Token(Token = "0x4001709")]
	AlefHamza = 1571,
	[Token(Token = "0x400170A")]
	WawHamza = 1572,
	[Token(Token = "0x400170B")]
	AlefMaksoor = 1573,
	[Token(Token = "0x400170C")]
	AlefMagsora = 1609,
	[Token(Token = "0x400170D")]
	HamzaNabera = 1574,
	[Token(Token = "0x400170E")]
	Ba = 1576,
	[Token(Token = "0x400170F")]
	Ta = 1578,
	[Token(Token = "0x4001710")]
	Tha2 = 1579,
	[Token(Token = "0x4001711")]
	Jeem = 1580,
	[Token(Token = "0x4001712")]
	H7aa = 1581,
	[Token(Token = "0x4001713")]
	Khaa2 = 1582,
	[Token(Token = "0x4001714")]
	Dal = 1583,
	[Token(Token = "0x4001715")]
	Thal = 1584,
	[Token(Token = "0x4001716")]
	Ra2 = 1585,
	[Token(Token = "0x4001717")]
	Zeen = 1586,
	[Token(Token = "0x4001718")]
	Seen = 1587,
	[Token(Token = "0x4001719")]
	Sheen = 1588,
	[Token(Token = "0x400171A")]
	S9a = 1589,
	[Token(Token = "0x400171B")]
	Dha = 1590,
	[Token(Token = "0x400171C")]
	T6a = 1591,
	[Token(Token = "0x400171D")]
	T6ha = 1592,
	[Token(Token = "0x400171E")]
	Ain = 1593,
	[Token(Token = "0x400171F")]
	Gain = 1594,
	[Token(Token = "0x4001720")]
	Fa = 1601,
	[Token(Token = "0x4001721")]
	Gaf = 1602,
	[Token(Token = "0x4001722")]
	Kaf = 1603,
	[Token(Token = "0x4001723")]
	Lam = 1604,
	[Token(Token = "0x4001724")]
	Meem = 1605,
	[Token(Token = "0x4001725")]
	Noon = 1606,
	[Token(Token = "0x4001726")]
	Ha = 1607,
	[Token(Token = "0x4001727")]
	Waw = 1608,
	[Token(Token = "0x4001728")]
	Ya = 1610,
	[Token(Token = "0x4001729")]
	AlefMad = 1570,
	[Token(Token = "0x400172A")]
	TaMarboota = 1577,
	[Token(Token = "0x400172B")]
	PersianPe = 1662,
	[Token(Token = "0x400172C")]
	PersianChe = 1670,
	[Token(Token = "0x400172D")]
	PersianZe = 1688,
	[Token(Token = "0x400172E")]
	PersianGaf = 1711,
	[Token(Token = "0x400172F")]
	PersianGaf2 = 1705
}
[Token(Token = "0x2000439")]
internal class ArabicMapping
{
	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int from;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int to;

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x1AA5CC4", Offset = "0x1AA5CC4", VA = "0x1AA5CC4")]
	public ArabicMapping(int from, int to)
	{
	}
}
[Token(Token = "0x200043A")]
internal class ArabicTable
{
	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ArabicMapping> mapList;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ArabicTable arabicMapper;

	[Token(Token = "0x17000396")]
	internal static ArabicTable ArabicMapper
	{
		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1AA50D4", Offset = "0x1AA50D4", VA = "0x1AA50D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x1AA5CFC", Offset = "0x1AA5CFC", VA = "0x1AA5CFC")]
	private ArabicTable()
	{
	}

	[Token(Token = "0x6001E11")]
	[Address(RVA = "0x1AA5154", Offset = "0x1AA5154", VA = "0x1AA5154")]
	internal int Convert(int toBeConverted)
	{
		return default(int);
	}
}
[Token(Token = "0x200043B")]
internal class TashkeelLocation
{
	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char tashkeel;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int position;

	[Token(Token = "0x6001E12")]
	[Address(RVA = "0x18806E8", Offset = "0x18806E8", VA = "0x18806E8")]
	public TashkeelLocation(char tashkeel, int position)
	{
	}
}
[Token(Token = "0x200043C")]
internal class ArabicFixerTool
{
	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static bool showTashkeel;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	internal static bool useHinduNumbers;

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x1AA4B98", Offset = "0x1AA4B98", VA = "0x1AA4B98")]
	internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x1AA4E80", Offset = "0x1AA4E80", VA = "0x1AA4E80")]
	internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x1AA3E0C", Offset = "0x1AA3E0C", VA = "0x1AA3E0C")]
	internal static string FixLine(string str)
	{
		return null;
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x1AA52B0", Offset = "0x1AA52B0", VA = "0x1AA52B0")]
	internal static bool IsIgnoredCharacter(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x1AA591C", Offset = "0x1AA591C", VA = "0x1AA591C")]
	internal static bool IsLeadingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x1AA57B0", Offset = "0x1AA57B0", VA = "0x1AA57B0")]
	internal static bool IsFinishingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E19")]
	[Address(RVA = "0x1AA540C", Offset = "0x1AA540C", VA = "0x1AA540C")]
	internal static bool IsMiddleLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0x1AA5C60", Offset = "0x1AA5C60", VA = "0x1AA5C60")]
	public ArabicFixerTool()
	{
	}
}
[Token(Token = "0x200043D")]
public interface ILocalizable
{
	[Token(Token = "0x6001E1C")]
	void Localize();
}
[Token(Token = "0x200043E")]
public static class Language
{
	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ReadingSpeedMinDisplayTime;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float ReadingSpeedSecondsPerWord;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float ReadingSpeedSecondsPerSJKChar;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool TestMode;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string settingsAssetPath;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LocalizationSettings _settings;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<string> availableLanguages;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static LanguageCode currentLanguage;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static CultureInfo currentCultureInfo;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<string, Dictionary<string, string>> currentEntrySheets;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<string, int> m_variations;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly string[] NativeLanguageNames;

	[Token(Token = "0x17000397")]
	public static LocalizationSettings settings
	{
		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x18194B8", Offset = "0x18194B8", VA = "0x18194B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0x18192D4", Offset = "0x18192D4", VA = "0x18192D4")]
	public static float TimeToRead(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6001E1F")]
	[Address(RVA = "0x18196E4", Offset = "0x18196E4", VA = "0x18196E4")]
	static Language()
	{
	}

	[Token(Token = "0x6001E20")]
	[Address(RVA = "0x181D928", Offset = "0x181D928", VA = "0x181D928")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6001E21")]
	[Address(RVA = "0x181DF4C", Offset = "0x181DF4C", VA = "0x181DF4C")]
	private static void LoadAvailableLanguages()
	{
	}

	[Token(Token = "0x6001E22")]
	[Address(RVA = "0x181EC60", Offset = "0x181EC60", VA = "0x181EC60")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9058E8", Offset = "0x9058E8")]
	public static void ToggleTestMode()
	{
	}

	[Token(Token = "0x6001E23")]
	[Address(RVA = "0x1818D14", Offset = "0x1818D14", VA = "0x1818D14")]
	public static string[] GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x6001E24")]
	[Address(RVA = "0x1818D98", Offset = "0x1818D98", VA = "0x1818D98")]
	public static bool SwitchLanguage(string langCode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E25")]
	[Address(RVA = "0x181E518", Offset = "0x181E518", VA = "0x181E518")]
	public static bool SwitchLanguage(LanguageCode code)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E26")]
	[Address(RVA = "0x181F4F4", Offset = "0x181F4F4", VA = "0x181F4F4")]
	public static void AppendDataFromCSV(string csvData, string appendToSheet, char separator)
	{
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x181ECD4", Offset = "0x181ECD4", VA = "0x181ECD4")]
	private static void DoSwitch(LanguageCode newLang)
	{
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x181FD4C", Offset = "0x181FD4C", VA = "0x181FD4C")]
	public static void RefreshAllLocalizables()
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x18201D0", Offset = "0x18201D0", VA = "0x18201D0")]
	public static LanguageCode CycleLanguages()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x1819008", Offset = "0x1819008", VA = "0x1819008")]
	public static UnityEngine.Object GetAsset(string name)
	{
		return null;
	}

	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0x181EAE8", Offset = "0x181EAE8", VA = "0x181EAE8")]
	private static bool HasLanguageFile(string lang, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0x181F890", Offset = "0x181F890", VA = "0x181F890")]
	private static string GetLanguageFileContents(string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x6001E2D")]
	[Address(RVA = "0x18203E8", Offset = "0x18203E8", VA = "0x18203E8")]
	public static LanguageCode CurrentLanguage()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E2E")]
	[Address(RVA = "0x182044C", Offset = "0x182044C", VA = "0x182044C")]
	public static CultureInfo CurrentCultureInfo()
	{
		return null;
	}

	[Token(Token = "0x6001E2F")]
	[Address(RVA = "0x18204B0", Offset = "0x18204B0", VA = "0x18204B0")]
	private static string Testify(string s)
	{
		return null;
	}

	[Token(Token = "0x6001E30")]
	[Address(RVA = "0x1820708", Offset = "0x1820708", VA = "0x1820708")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0x1820B0C", Offset = "0x1820B0C", VA = "0x1820B0C")]
	public static bool TryGet(string key, out string result)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E32")]
	[Address(RVA = "0x1820820", Offset = "0x1820820", VA = "0x1820820")]
	public static bool TryGet(string key, string sheetTitle, out string result)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0x1818A40", Offset = "0x1818A40", VA = "0x1818A40")]
	public static string Get(string key, string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0x1820C38", Offset = "0x1820C38", VA = "0x1820C38")]
	public static string GetVariation(string keyStem)
	{
		return null;
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0x1820E3C", Offset = "0x1820E3C", VA = "0x1820E3C")]
	private static int CountVariations(string keyStem)
	{
		return default(int);
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0x1820F20", Offset = "0x1820F20", VA = "0x1820F20")]
	public static bool Has(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E37")]
	[Address(RVA = "0x182100C", Offset = "0x182100C", VA = "0x182100C")]
	public static bool Has(string key, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E38")]
	[Address(RVA = "0x181FABC", Offset = "0x181FABC", VA = "0x181FABC")]
	private static void SendMonoMessage(string methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6001E39")]
	[Address(RVA = "0x181E4F8", Offset = "0x181E4F8", VA = "0x181E4F8")]
	public static LanguageCode LanguageNameToCode(SystemLanguage name)
	{
		return default(LanguageCode);
	}
}
[Token(Token = "0x200043F")]
public enum LanguageCode
{
	[Token(Token = "0x4001745")]
	N,
	[Token(Token = "0x4001746")]
	AA,
	[Token(Token = "0x4001747")]
	AB,
	[Token(Token = "0x4001748")]
	AF,
	[Token(Token = "0x4001749")]
	AM,
	[Token(Token = "0x400174A")]
	AR,
	[Token(Token = "0x400174B")]
	AR_SA,
	[Token(Token = "0x400174C")]
	AR_EG,
	[Token(Token = "0x400174D")]
	AR_DZ,
	[Token(Token = "0x400174E")]
	AR_YE,
	[Token(Token = "0x400174F")]
	AR_JO,
	[Token(Token = "0x4001750")]
	AR_KW,
	[Token(Token = "0x4001751")]
	AR_BH,
	[Token(Token = "0x4001752")]
	AR_IQ,
	[Token(Token = "0x4001753")]
	AR_MA,
	[Token(Token = "0x4001754")]
	AR_LY,
	[Token(Token = "0x4001755")]
	AR_OM,
	[Token(Token = "0x4001756")]
	AR_SY,
	[Token(Token = "0x4001757")]
	AR_LB,
	[Token(Token = "0x4001758")]
	AR_AE,
	[Token(Token = "0x4001759")]
	AR_QA,
	[Token(Token = "0x400175A")]
	AS,
	[Token(Token = "0x400175B")]
	AY,
	[Token(Token = "0x400175C")]
	AZ,
	[Token(Token = "0x400175D")]
	BA,
	[Token(Token = "0x400175E")]
	BE,
	[Token(Token = "0x400175F")]
	BG,
	[Token(Token = "0x4001760")]
	BH,
	[Token(Token = "0x4001761")]
	BI,
	[Token(Token = "0x4001762")]
	BN,
	[Token(Token = "0x4001763")]
	BO,
	[Token(Token = "0x4001764")]
	BR,
	[Token(Token = "0x4001765")]
	CA,
	[Token(Token = "0x4001766")]
	CO,
	[Token(Token = "0x4001767")]
	CS,
	[Token(Token = "0x4001768")]
	CY,
	[Token(Token = "0x4001769")]
	DA,
	[Token(Token = "0x400176A")]
	DE,
	[Token(Token = "0x400176B")]
	DE_AT,
	[Token(Token = "0x400176C")]
	DE_LI,
	[Token(Token = "0x400176D")]
	DE_CH,
	[Token(Token = "0x400176E")]
	DE_LU,
	[Token(Token = "0x400176F")]
	DZ,
	[Token(Token = "0x4001770")]
	EL,
	[Token(Token = "0x4001771")]
	EN,
	[Token(Token = "0x4001772")]
	EN_US,
	[Token(Token = "0x4001773")]
	EN_AU,
	[Token(Token = "0x4001774")]
	EN_NZ,
	[Token(Token = "0x4001775")]
	EN_ZA,
	[Token(Token = "0x4001776")]
	EN_CB,
	[Token(Token = "0x4001777")]
	EN_TT,
	[Token(Token = "0x4001778")]
	EN_GB,
	[Token(Token = "0x4001779")]
	EN_CA,
	[Token(Token = "0x400177A")]
	EN_IE,
	[Token(Token = "0x400177B")]
	EN_JM,
	[Token(Token = "0x400177C")]
	EN_BZ,
	[Token(Token = "0x400177D")]
	EN_SC,
	[Token(Token = "0x400177E")]
	EO,
	[Token(Token = "0x400177F")]
	ES,
	[Token(Token = "0x4001780")]
	ES_LATAM,
	[Token(Token = "0x4001781")]
	ES_MX,
	[Token(Token = "0x4001782")]
	ES_CR,
	[Token(Token = "0x4001783")]
	ES_DO,
	[Token(Token = "0x4001784")]
	ES_CO,
	[Token(Token = "0x4001785")]
	ES_AR,
	[Token(Token = "0x4001786")]
	ES_CL,
	[Token(Token = "0x4001787")]
	ES_PY,
	[Token(Token = "0x4001788")]
	ES_SV,
	[Token(Token = "0x4001789")]
	ES_NI,
	[Token(Token = "0x400178A")]
	ES_GT,
	[Token(Token = "0x400178B")]
	ES_PA,
	[Token(Token = "0x400178C")]
	ES_VE,
	[Token(Token = "0x400178D")]
	ES_PE,
	[Token(Token = "0x400178E")]
	ES_EC,
	[Token(Token = "0x400178F")]
	ES_UY,
	[Token(Token = "0x4001790")]
	ES_BO,
	[Token(Token = "0x4001791")]
	ES_HN,
	[Token(Token = "0x4001792")]
	ES_PR,
	[Token(Token = "0x4001793")]
	ET,
	[Token(Token = "0x4001794")]
	EU,
	[Token(Token = "0x4001795")]
	FA,
	[Token(Token = "0x4001796")]
	FI,
	[Token(Token = "0x4001797")]
	FJ,
	[Token(Token = "0x4001798")]
	FO,
	[Token(Token = "0x4001799")]
	FR,
	[Token(Token = "0x400179A")]
	FR_BE,
	[Token(Token = "0x400179B")]
	FR_CH,
	[Token(Token = "0x400179C")]
	FR_CA,
	[Token(Token = "0x400179D")]
	FR_LU,
	[Token(Token = "0x400179E")]
	FY,
	[Token(Token = "0x400179F")]
	GA,
	[Token(Token = "0x40017A0")]
	GD,
	[Token(Token = "0x40017A1")]
	GL,
	[Token(Token = "0x40017A2")]
	GN,
	[Token(Token = "0x40017A3")]
	GU,
	[Token(Token = "0x40017A4")]
	HA,
	[Token(Token = "0x40017A5")]
	HI,
	[Token(Token = "0x40017A6")]
	HE,
	[Token(Token = "0x40017A7")]
	HR,
	[Token(Token = "0x40017A8")]
	HU,
	[Token(Token = "0x40017A9")]
	HY,
	[Token(Token = "0x40017AA")]
	IA,
	[Token(Token = "0x40017AB")]
	ID,
	[Token(Token = "0x40017AC")]
	IE,
	[Token(Token = "0x40017AD")]
	IK,
	[Token(Token = "0x40017AE")]
	IN,
	[Token(Token = "0x40017AF")]
	IS,
	[Token(Token = "0x40017B0")]
	IT,
	[Token(Token = "0x40017B1")]
	IT_CH,
	[Token(Token = "0x40017B2")]
	IU,
	[Token(Token = "0x40017B3")]
	IW,
	[Token(Token = "0x40017B4")]
	JA,
	[Token(Token = "0x40017B5")]
	JI,
	[Token(Token = "0x40017B6")]
	JW,
	[Token(Token = "0x40017B7")]
	KA,
	[Token(Token = "0x40017B8")]
	KK,
	[Token(Token = "0x40017B9")]
	KL,
	[Token(Token = "0x40017BA")]
	KM,
	[Token(Token = "0x40017BB")]
	KN,
	[Token(Token = "0x40017BC")]
	KO,
	[Token(Token = "0x40017BD")]
	KS,
	[Token(Token = "0x40017BE")]
	KU,
	[Token(Token = "0x40017BF")]
	KY,
	[Token(Token = "0x40017C0")]
	LA,
	[Token(Token = "0x40017C1")]
	LN,
	[Token(Token = "0x40017C2")]
	LO,
	[Token(Token = "0x40017C3")]
	LT,
	[Token(Token = "0x40017C4")]
	LV,
	[Token(Token = "0x40017C5")]
	MG,
	[Token(Token = "0x40017C6")]
	MI,
	[Token(Token = "0x40017C7")]
	MK,
	[Token(Token = "0x40017C8")]
	ML,
	[Token(Token = "0x40017C9")]
	MN,
	[Token(Token = "0x40017CA")]
	MO,
	[Token(Token = "0x40017CB")]
	MR,
	[Token(Token = "0x40017CC")]
	MS,
	[Token(Token = "0x40017CD")]
	MT,
	[Token(Token = "0x40017CE")]
	MY,
	[Token(Token = "0x40017CF")]
	NA,
	[Token(Token = "0x40017D0")]
	NE,
	[Token(Token = "0x40017D1")]
	NL,
	[Token(Token = "0x40017D2")]
	NL_BE,
	[Token(Token = "0x40017D3")]
	NO,
	[Token(Token = "0x40017D4")]
	OC,
	[Token(Token = "0x40017D5")]
	OM,
	[Token(Token = "0x40017D6")]
	OR,
	[Token(Token = "0x40017D7")]
	PA,
	[Token(Token = "0x40017D8")]
	PL,
	[Token(Token = "0x40017D9")]
	PS,
	[Token(Token = "0x40017DA")]
	PT,
	[Token(Token = "0x40017DB")]
	PT_BR,
	[Token(Token = "0x40017DC")]
	QU,
	[Token(Token = "0x40017DD")]
	RM,
	[Token(Token = "0x40017DE")]
	RN,
	[Token(Token = "0x40017DF")]
	RO,
	[Token(Token = "0x40017E0")]
	RO_MO,
	[Token(Token = "0x40017E1")]
	RU,
	[Token(Token = "0x40017E2")]
	RU_MO,
	[Token(Token = "0x40017E3")]
	RW,
	[Token(Token = "0x40017E4")]
	SA,
	[Token(Token = "0x40017E5")]
	SD,
	[Token(Token = "0x40017E6")]
	SG,
	[Token(Token = "0x40017E7")]
	SH,
	[Token(Token = "0x40017E8")]
	SI,
	[Token(Token = "0x40017E9")]
	SK,
	[Token(Token = "0x40017EA")]
	SL,
	[Token(Token = "0x40017EB")]
	SM,
	[Token(Token = "0x40017EC")]
	SN,
	[Token(Token = "0x40017ED")]
	SO,
	[Token(Token = "0x40017EE")]
	SQ,
	[Token(Token = "0x40017EF")]
	SR,
	[Token(Token = "0x40017F0")]
	SS,
	[Token(Token = "0x40017F1")]
	ST,
	[Token(Token = "0x40017F2")]
	SU,
	[Token(Token = "0x40017F3")]
	SV,
	[Token(Token = "0x40017F4")]
	SV_FI,
	[Token(Token = "0x40017F5")]
	SW,
	[Token(Token = "0x40017F6")]
	TA,
	[Token(Token = "0x40017F7")]
	TE,
	[Token(Token = "0x40017F8")]
	TG,
	[Token(Token = "0x40017F9")]
	TH,
	[Token(Token = "0x40017FA")]
	TI,
	[Token(Token = "0x40017FB")]
	TK,
	[Token(Token = "0x40017FC")]
	TL,
	[Token(Token = "0x40017FD")]
	TN,
	[Token(Token = "0x40017FE")]
	TO,
	[Token(Token = "0x40017FF")]
	TR,
	[Token(Token = "0x4001800")]
	TS,
	[Token(Token = "0x4001801")]
	TT,
	[Token(Token = "0x4001802")]
	TW,
	[Token(Token = "0x4001803")]
	UG,
	[Token(Token = "0x4001804")]
	UK,
	[Token(Token = "0x4001805")]
	UR,
	[Token(Token = "0x4001806")]
	UZ,
	[Token(Token = "0x4001807")]
	VI,
	[Token(Token = "0x4001808")]
	VO,
	[Token(Token = "0x4001809")]
	WO,
	[Token(Token = "0x400180A")]
	XH,
	[Token(Token = "0x400180B")]
	YI,
	[Token(Token = "0x400180C")]
	YO,
	[Token(Token = "0x400180D")]
	ZA,
	[Token(Token = "0x400180E")]
	ZH,
	[Token(Token = "0x400180F")]
	ZH_TW,
	[Token(Token = "0x4001810")]
	ZH_HK,
	[Token(Token = "0x4001811")]
	ZH_CN,
	[Token(Token = "0x4001812")]
	ZH_SG,
	[Token(Token = "0x4001813")]
	ZU
}
[Token(Token = "0x2000440")]
public static class LangStringExtensions
{
	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0x1819154", Offset = "0x1819154", VA = "0x1819154")]
	public static string UnescapeXML(this string s)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000441")]
public class LocalizationSettings : ScriptableObject
{
	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] sheetTitles;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSystemLanguagePerDefault;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string defaultLangCode;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool testMode;

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x1B20CD4", Offset = "0x1B20CD4", VA = "0x1B20CD4")]
	public static LanguageCode GetLanguageEnum(string langCode)
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x1B21130", Offset = "0x1B21130", VA = "0x1B21130")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x2000442")]
public class LocalizedAsset : MonoBehaviour
{
	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object localizeTarget;

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x1B21194", Offset = "0x1B21194", VA = "0x1B21194")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001E3E")]
	[Address(RVA = "0x1B216B4", Offset = "0x1B216B4", VA = "0x1B216B4")]
	public void LocalizeAsset()
	{
	}

	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x1B2119C", Offset = "0x1B2119C", VA = "0x1B2119C")]
	public static void LocalizeAsset(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x1B216BC", Offset = "0x1B216BC", VA = "0x1B216BC")]
	public LocalizedAsset()
	{
	}
}
[Token(Token = "0x2000443")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EE420", Offset = "0x8EE420")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EE420", Offset = "0x8EE420")]
public class UGUILocalizeM2H : MonoBehaviour
{
	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string sheet;

	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x15CE390", Offset = "0x15CE390", VA = "0x15CE390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x15CE57C", Offset = "0x15CE57C", VA = "0x15CE57C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x15CE580", Offset = "0x15CE580", VA = "0x15CE580")]
	public void ChangedLanguage(LanguageCode code)
	{
	}

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x15CE394", Offset = "0x15CE394", VA = "0x15CE394")]
	public void Localize()
	{
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x15CE584", Offset = "0x15CE584", VA = "0x15CE584")]
	public UGUILocalizeM2H()
	{
	}
}
[Token(Token = "0x2000444")]
public abstract class HashFunction
{
	[Token(Token = "0x6001E46")]
	public abstract uint GetHash(params int[] data);

	[Token(Token = "0x6001E47")]
	[Address(RVA = "0x19488E4", Offset = "0x19488E4", VA = "0x19488E4")]
	public System.Random MakeGenerator(int data)
	{
		return null;
	}

	[Token(Token = "0x6001E48")]
	[Address(RVA = "0x194896C", Offset = "0x194896C", VA = "0x194896C", Slot = "5")]
	public virtual uint GetHash(int data)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E49")]
	[Address(RVA = "0x19489F8", Offset = "0x19489F8", VA = "0x19489F8", Slot = "6")]
	public virtual uint GetHash(int x, int y)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0x1948A94", Offset = "0x1948A94", VA = "0x1948A94", Slot = "7")]
	public virtual uint GetHash(int x, int y, int z)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0x1948B48", Offset = "0x1948B48", VA = "0x1948B48")]
	public float Value(params int[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0x1948B78", Offset = "0x1948B78", VA = "0x1948B78")]
	public float Value(int data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0x1948BA8", Offset = "0x1948BA8", VA = "0x1948BA8")]
	public float Value(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0x1948BD8", Offset = "0x1948BD8", VA = "0x1948BD8")]
	public float Value(int x, int y, int z)
	{
		return default(float);
	}

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0x1948C08", Offset = "0x1948C08", VA = "0x1948C08")]
	public int Range(int min, int max, params int[] data)
	{
		return default(int);
	}

	[Token(Token = "0x6001E50")]
	[Address(RVA = "0x1948C50", Offset = "0x1948C50", VA = "0x1948C50")]
	public int Range(int min, int max, int data)
	{
		return default(int);
	}

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0x1948C98", Offset = "0x1948C98", VA = "0x1948C98")]
	public int Range(int min, int max, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6001E52")]
	[Address(RVA = "0x1948CE8", Offset = "0x1948CE8", VA = "0x1948CE8")]
	public int Range(int min, int max, int x, int y, int z)
	{
		return default(int);
	}

	[Token(Token = "0x6001E53")]
	[Address(RVA = "0x1948D3C", Offset = "0x1948D3C", VA = "0x1948D3C")]
	public float Range(float min, float max, params int[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E54")]
	[Address(RVA = "0x1948D88", Offset = "0x1948D88", VA = "0x1948D88")]
	public float Range(float min, float max, int data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E55")]
	[Address(RVA = "0x1948DD4", Offset = "0x1948DD4", VA = "0x1948DD4")]
	public float Range(float min, float max, int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6001E56")]
	[Address(RVA = "0x1948E20", Offset = "0x1948E20", VA = "0x1948E20")]
	public float Range(float min, float max, int x, int y, int z)
	{
		return default(float);
	}

	[Token(Token = "0x6001E57")]
	[Address(RVA = "0x1948E6C", Offset = "0x1948E6C", VA = "0x1948E6C")]
	protected HashFunction()
	{
	}
}
[Token(Token = "0x2000445")]
public class XXHash : HashFunction
{
	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint seed;

	[Token(Token = "0x400181C")]
	private const uint PRIME32_1 = 2654435761u;

	[Token(Token = "0x400181D")]
	private const uint PRIME32_2 = 2246822519u;

	[Token(Token = "0x400181E")]
	private const uint PRIME32_3 = 3266489917u;

	[Token(Token = "0x400181F")]
	private const uint PRIME32_4 = 668265263u;

	[Token(Token = "0x4001820")]
	private const uint PRIME32_5 = 374761393u;

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x19EDB8C", Offset = "0x19EDB8C", VA = "0x19EDB8C")]
	public XXHash(int seed)
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x19EDBB8", Offset = "0x19EDBB8", VA = "0x19EDBB8")]
	public uint GetHash(byte[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x19EDE5C", Offset = "0x19EDE5C", VA = "0x19EDE5C")]
	public uint GetHash(params uint[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x19EE03C", Offset = "0x19EE03C", VA = "0x19EE03C", Slot = "4")]
	public override uint GetHash(params int[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x19EE1FC", Offset = "0x19EE1FC", VA = "0x19EE1FC", Slot = "5")]
	public override uint GetHash(int buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x19EDDB8", Offset = "0x19EDDB8", VA = "0x19EDDB8")]
	private static uint CalcSubHash(uint value, byte[] buf, int index)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x19EE01C", Offset = "0x19EE01C", VA = "0x19EE01C")]
	private static uint CalcSubHash(uint value, uint read_value)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x19EDE50", Offset = "0x19EDE50", VA = "0x19EDE50")]
	private static uint RotateLeft(uint value, int count)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000446")]
public class DebugTools : MonoBehaviour
{
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4A4", Offset = "0x8EE4A4")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugTools <>4__this;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x15ECA08", Offset = "0x15ECA08", VA = "0x15ECA08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x15ECA50", Offset = "0x15ECA50", VA = "0x15ECA50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x15EC790", Offset = "0x15EC790", VA = "0x15EC790")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x15EC7BC", Offset = "0x15EC7BC", VA = "0x15EC7BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x15EC7C0", Offset = "0x15EC7C0", VA = "0x15EC7C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x15ECA10", Offset = "0x15ECA10", VA = "0x15ECA10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugTools Instance;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_ignoreOculusDashEvents;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F87E0", Offset = "0x8F87E0")]
	public bool m_pressXAToPauseEditor;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8828", Offset = "0x8F8828")]
	public bool m_wwiseEngineLogging;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8870", Offset = "0x8F8870")]
	public int m_msaa;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_lh;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_rh;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons m_resetViewButtonLeft;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public NVRButtons m_resetViewButtonRight;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRPlugin.ColorSpace currentColourSpace;

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x1671068", Offset = "0x1671068", VA = "0x1671068")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x905940", Offset = "0x905940")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x16710B8", Offset = "0x16710B8", VA = "0x16710B8")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x16711B8", Offset = "0x16711B8", VA = "0x16711B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x1671308", Offset = "0x1671308", VA = "0x1671308")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x16713B4", Offset = "0x16713B4", VA = "0x16713B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905954", Offset = "0x905954")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x167142C", Offset = "0x167142C", VA = "0x167142C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9059B4", Offset = "0x9059B4")]
	public void TestLocalisation()
	{
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x1671504", Offset = "0x1671504", VA = "0x1671504")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9059FC", Offset = "0x9059FC")]
	public void NextColourSpace()
	{
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x16716DC", Offset = "0x16716DC", VA = "0x16716DC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905A44", Offset = "0x905A44")]
	public void TriggerAutosave()
	{
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x1671788", Offset = "0x1671788", VA = "0x1671788")]
	public DebugTools()
	{
	}
}
[Token(Token = "0x2000448")]
public class EntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4B4", Offset = "0x8EE4B4")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntitlementCheck <>4__this;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x15EF71C", Offset = "0x15EF71C", VA = "0x15EF71C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x15EF764", Offset = "0x15EF764", VA = "0x15EF764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x15EF2E4", Offset = "0x15EF2E4", VA = "0x15EF2E4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x15EF310", Offset = "0x15EF310", VA = "0x15EF310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x15EF314", Offset = "0x15EF314", VA = "0x15EF314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x15EF724", Offset = "0x15EF724", VA = "0x15EF724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x1742908", Offset = "0x1742908", VA = "0x1742908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905ADC", Offset = "0x905ADC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x1742980", Offset = "0x1742980", VA = "0x1742980")]
	private void EntitlementCheckComplete(Message msg)
	{
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x1742B30", Offset = "0x1742B30", VA = "0x1742B30")]
	public EntitlementCheck()
	{
	}
}
[Token(Token = "0x200044A")]
public class EventPlayUnityAudioSource : Triggerable
{
	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource m_source;

	[Token(Token = "0x6001E78")]
	[Address(RVA = "0x174805C", Offset = "0x174805C", VA = "0x174805C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x1748078", Offset = "0x1748078", VA = "0x1748078")]
	public EventPlayUnityAudioSource()
	{
	}
}
[Token(Token = "0x200044B")]
public class AntiHeadPos : MonoBehaviour
{
	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x1A9E770", Offset = "0x1A9E770", VA = "0x1A9E770")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x1A9E824", Offset = "0x1A9E824", VA = "0x1A9E824")]
	public AntiHeadPos()
	{
	}
}
[Token(Token = "0x200044C")]
public class FlatlandHand : MonoBehaviour
{
	[Token(Token = "0x200044D")]
	private enum Controller
	{
		[Token(Token = "0x4001847")]
		None,
		[Token(Token = "0x4001848")]
		Mouse,
		[Token(Token = "0x4001849")]
		Keyboard
	}

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentTouchCount;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 delta;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_reachMin;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_reachMax;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NVRVirtualHand m_hand;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_reach;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_reachSpeed;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_handPosLerpRate;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_handRotLerpRate;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_handTargetPos;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion m_handTargetRot;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F88B0", Offset = "0x8F88B0")]
	public KeyCode m_triggerKey;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode m_rotateKey;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Controller m_lastControl;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool m_useCursorPos;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_rayDist;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask m_layerMaskTriggers;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_yOffset;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_lastDist;

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x18A02DC", Offset = "0x18A02DC", VA = "0x18A02DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x18A03F4", Offset = "0x18A03F4", VA = "0x18A03F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x18A0AC8", Offset = "0x18A0AC8", VA = "0x18A0AC8")]
	public FlatlandHand()
	{
	}
}
[Token(Token = "0x200044E")]
public class FlatlandPlayer : MonoBehaviour
{
	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FlatlandPlayer Instance;

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x18A0AF0", Offset = "0x18A0AF0", VA = "0x18A0AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x18A0B44", Offset = "0x18A0B44", VA = "0x18A0B44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x18A0B48", Offset = "0x18A0B48", VA = "0x18A0B48")]
	public FlatlandPlayer()
	{
	}
}
[Token(Token = "0x200044F")]
public class GyroControlCamera : MonoBehaviour
{
	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _lastCompassUpdateTime;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion _correction;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _targetCorrection;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _compassOrientation;

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x193D388", Offset = "0x193D388", VA = "0x193D388")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x193D3C8", Offset = "0x193D3C8", VA = "0x193D3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x193D800", Offset = "0x193D800", VA = "0x193D800")]
	public GyroControlCamera()
	{
	}
}
[Token(Token = "0x2000450")]
public class KeyboardMover : MonoBehaviour
{
	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_shiftMultiplier;

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0x1817248", Offset = "0x1817248", VA = "0x1817248")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0x18174C0", Offset = "0x18174C0", VA = "0x18174C0")]
	public KeyboardMover()
	{
	}
}
[Token(Token = "0x2000451")]
public class MouseLookCamera : MonoBehaviour
{
	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 m_sensitivity;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_minX;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_maxX;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_minY;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_maxY;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 m_stickExtents;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatRange m_zoomSensitivityRange;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatRange m_fovRange;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float zoom;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_lbState;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_rbState;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 m_eulerRot;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion m_initialRot;

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0x1ABE260", Offset = "0x1ABE260", VA = "0x1ABE260")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0x1ABE29C", Offset = "0x1ABE29C", VA = "0x1ABE29C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0x1ABE4C8", Offset = "0x1ABE4C8", VA = "0x1ABE4C8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0x1ABE50C", Offset = "0x1ABE50C", VA = "0x1ABE50C")]
	public MouseLookCamera()
	{
	}
}
[Token(Token = "0x2000452")]
public class MouseMoveCamera : MonoBehaviour
{
	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_lbState;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_rbState;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_mbState;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool m_latState;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_inOutState;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_moveSpeed;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_startPos;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_lastMousePos;

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0x1ABE628", Offset = "0x1ABE628", VA = "0x1ABE628")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0x1ABE62C", Offset = "0x1ABE62C", VA = "0x1ABE62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0x1ABE850", Offset = "0x1ABE850", VA = "0x1ABE850")]
	public MouseMoveCamera()
	{
	}
}
[Token(Token = "0x2000453")]
public class SFCFlatlandPlayer : MonoBehaviour
{
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4C4", Offset = "0x8EE4C4")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SFCFlatlandPlayer <>4__this;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x15863A4", Offset = "0x15863A4", VA = "0x15863A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x15863EC", Offset = "0x15863EC", VA = "0x15863EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1586158", Offset = "0x1586158", VA = "0x1586158")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1586184", Offset = "0x1586184", VA = "0x1586184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x1586188", Offset = "0x1586188", VA = "0x1586188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x15863AC", Offset = "0x15863AC", VA = "0x15863AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_lhLocator;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_leftHand;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_shop;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_bin;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToggleWheelMenuOpener m_shopToggle;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode m_lefthandY;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode m_lefthandX;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KeyCode m_righthandB;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public KeyCode m_righthandA;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode m_stickLeft;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode m_stickRight;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ToggleWheel m_toggleWheel;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] m_menuNav;

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0x1894B5C", Offset = "0x1894B5C", VA = "0x1894B5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905B8C", Offset = "0x905B8C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0x1894BD4", Offset = "0x1894BD4", VA = "0x1894BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0x1894C68", Offset = "0x1894C68", VA = "0x1894C68")]
	public void ShopToggleUp()
	{
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0x1894D60", Offset = "0x1894D60", VA = "0x1894D60")]
	public void ShopToggleDown()
	{
	}

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0x1894E58", Offset = "0x1894E58", VA = "0x1894E58")]
	public void ShopToggleLeft()
	{
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0x1894E6C", Offset = "0x1894E6C", VA = "0x1894E6C")]
	public void ShopToggleRight()
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0x1894E80", Offset = "0x1894E80", VA = "0x1894E80")]
	public SFCFlatlandPlayer()
	{
	}
}
[Token(Token = "0x2000455")]
public class VrOrFlatlandEnabler : MonoBehaviour
{
	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F88E8", Offset = "0x8F88E8")]
	public GameObject[] VR;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] VRPrefabs;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8920", Offset = "0x8F8920")]
	public GameObject[] Flatland;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] FlatlandPrefabs;

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0x19EA59C", Offset = "0x19EA59C", VA = "0x19EA59C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0x19EA68C", Offset = "0x19EA68C", VA = "0x19EA68C")]
	public VrOrFlatlandEnabler()
	{
	}
}
[Token(Token = "0x2000456")]
public class GroundSticker : MonoBehaviour
{
	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_layerMask;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_rayLength;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_rayStartOffset;

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0x193D154", Offset = "0x193D154", VA = "0x193D154")]
	public void SnapToGround()
	{
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0x193D348", Offset = "0x193D348", VA = "0x193D348")]
	public GroundSticker()
	{
	}
}
[Token(Token = "0x2000457")]
public class InstaCam : MonoBehaviour
{
	[Token(Token = "0x2000458")]
	public class StringEvent : UnityEvent<string>
	{
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x16AE234", Offset = "0x16AE234", VA = "0x16AE234")]
		public StringEvent()
		{
		}
	}

	[Token(Token = "0x2000459")]
	private enum Zoom
	{
		[Token(Token = "0x40018D3")]
		Idle,
		[Token(Token = "0x40018D4")]
		In,
		[Token(Token = "0x40018D5")]
		Out
	}

	[Token(Token = "0x200045A")]
	private enum State
	{
		[Token(Token = "0x40018D7")]
		Idle,
		[Token(Token = "0x40018D8")]
		Recording,
		[Token(Token = "0x40018D9")]
		Saving,
		[Token(Token = "0x40018DA")]
		Saved
	}

	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4D4", Offset = "0x8EE4D4")]
	private sealed class <Start>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstaCam <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x16AE1E4", Offset = "0x16AE1E4", VA = "0x16AE1E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x16AE22C", Offset = "0x16AE22C", VA = "0x16AE22C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x16ADE44", Offset = "0x16ADE44", VA = "0x16ADE44")]
		[DebuggerHidden]
		public <Start>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x16ADE70", Offset = "0x16ADE70", VA = "0x16ADE70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x16ADE74", Offset = "0x16ADE74", VA = "0x16ADE74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x16AE1EC", Offset = "0x16AE1EC", VA = "0x16AE1EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4E4", Offset = "0x8EE4E4")]
	private sealed class <PrintAnimCR>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstaCam <>4__this;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x15FD414", Offset = "0x15FD414", VA = "0x15FD414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x15FD45C", Offset = "0x15FD45C", VA = "0x15FD45C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x15FD284", Offset = "0x15FD284", VA = "0x15FD284")]
		[DebuggerHidden]
		public <PrintAnimCR>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x15FD2B0", Offset = "0x15FD2B0", VA = "0x15FD2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x15FD2B4", Offset = "0x15FD2B4", VA = "0x15FD2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x15FD41C", Offset = "0x15FD41C", VA = "0x15FD41C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InstaCam Instance;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons m_takeShotBtn;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NVRButtons m_pauseTimeBtn;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_holdTakeShotForGif;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_recordGifAfter;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_camera;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraToTexture m_camToTex;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2Int[] m_resolutions;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_interactable;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand m_hand;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material m_previewMaterial;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture m_fullScreenRenderTex;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_fullScreenOutputter;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8958", Offset = "0x8F8958")]
	public bool m_showOnFlatScreen;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F89A0", Offset = "0x8F89A0")]
	public bool m_alwaysUpdatePreview;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro m_infoLabel;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F89E8", Offset = "0x8F89E8")]
	public bool m_dimPreviewWhenNotHeld;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MPB_Texture m_previewMPB;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color m_dimmedColour;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animation m_interactionAnim;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationClip m_animClipOnBeginInteraction;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationClip m_animClipOnEndInteraction;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem m_vfxOnFlip;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform[] m_flipForRightHand;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8A20", Offset = "0x8F8A20")]
	public TextMeshPro m_shutterLabel;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshPro m_aspectLabel;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8A58", Offset = "0x8F8A58")]
	public FloatRange m_zoomRange;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_zoomSpeed;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve m_zoomCurve;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int m_zoomSteps;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] m_zoomIndicators;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform m_lens;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform m_lensMinLoc;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform m_lensMaxLoc;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8A90", Offset = "0x8F8A90")]
	public Transform m_myCamLocator;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_placableCameraPrefab;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TransformMatcher m_camTransfomMatcher;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8AC8", Offset = "0x8F8AC8")]
	public float m_positionLerp;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8B08", Offset = "0x8F8B08")]
	public float m_rotationLerp;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F8B48", Offset = "0x8F8B48")]
	public bool m_snapBetweenCameras;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8B90", Offset = "0x8F8B90")]
	public LayerMask m_defaultLayerMask;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LayerMask m_gameUILayerMask;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public LayerMask m_allUILayerMask;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public StringEvent OnPhotoTaken;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public string m_latestPhotoPath;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int m_currentRes;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool m_wasAttached;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float m_btnDownAt;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8BD8", Offset = "0x8F8BD8")]
	public string m_sfxTakePhoto;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject m_sfxTakePhotoGO;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string m_sfxZoomIn1Shot;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string m_sfxZoomOut1Shot;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string m_sfxZoomInStart;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string m_sfxZoomInStop;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string m_sfxZoomOutStart;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public string m_sfxZoomOutStop;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject m_sfxZoomGO;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string m_sfxFlipModel;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8C10", Offset = "0x8F8C10")]
	public string m_strKeyNotHeld;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string m_strKeyTakePhotoTip;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string m_strKeyZoomTipPrefix;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string m_strKeyPauseTimeTip;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string m_strKeyTimeIsPaused;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string m_strKeySaving;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public string m_strKeySaved;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int m_tipId;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Zoom m_zoomState;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8C48", Offset = "0x8F8C48")]
	public Animation m_anim;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AnimationClip m_printAnimClip;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform m_photoRoot;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject m_photoPrefab;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public int m_maxPhotos;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private CircularPrefabPool m_photos;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<Texture2D> m_photoTextures;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Coroutine m_playingAnimCR;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string m_infoMessage;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float m_infoMessageTempExpires;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F8C80", Offset = "0x8F8C80")]
	public int m_gifWidth;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int m_gifHeight;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public int m_gifFps;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F8CB8", Offset = "0x8F8CB8")]
	public int m_gifQuality;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public int m_gifMaxLen;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Recorder m_gifRecorder;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private State m_gifState;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float m_gifProgress;

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0x16D1580", Offset = "0x16D1580", VA = "0x16D1580")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x905C3C", Offset = "0x905C3C")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0x16D15D0", Offset = "0x16D15D0", VA = "0x16D15D0")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0x16D16D0", Offset = "0x16D16D0", VA = "0x16D16D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0x16D19D8", Offset = "0x16D19D8", VA = "0x16D19D8")]
	public static void InstantiateMe()
	{
	}

	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0x16D1BE0", Offset = "0x16D1BE0", VA = "0x16D1BE0")]
	public static void PutInPlayersView()
	{
	}

	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0x16D1DC0", Offset = "0x16D1DC0", VA = "0x16D1DC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905C50", Offset = "0x905C50")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0x16D1E38", Offset = "0x16D1E38", VA = "0x16D1E38")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0x16D235C", Offset = "0x16D235C", VA = "0x16D235C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0x16D1F5C", Offset = "0x16D1F5C", VA = "0x16D1F5C")]
	private void SetupForHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0x16D2764", Offset = "0x16D2764", VA = "0x16D2764")]
	public static string GetTimestampedFilename()
	{
		return null;
	}

	[Token(Token = "0x6001EA9")]
	[Address(RVA = "0x16D2820", Offset = "0x16D2820", VA = "0x16D2820")]
	public static string GetFileFolder()
	{
		return null;
	}

	[Token(Token = "0x6001EAA")]
	[Address(RVA = "0x16D2890", Offset = "0x16D2890", VA = "0x16D2890")]
	public static string GetFilePathNoExtension()
	{
		return null;
	}

	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0x16D28EC", Offset = "0x16D28EC", VA = "0x16D28EC")]
	private void SetLabel()
	{
	}

	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0x16D28F0", Offset = "0x16D28F0", VA = "0x16D28F0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x905CB0", Offset = "0x905CB0")]
	public void TakeShotNow()
	{
	}

	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0x16D28F8", Offset = "0x16D28F8", VA = "0x16D28F8")]
	public void TakeShotNow(string filenameSuffix)
	{
	}

	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0x16D2D7C", Offset = "0x16D2D7C", VA = "0x16D2D7C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x905CC8", Offset = "0x905CC8")]
	public void NextResolution()
	{
	}

	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0x16D2DDC", Offset = "0x16D2DDC", VA = "0x16D2DDC")]
	private void SetResolution(int idx)
	{
	}

	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0x16D2EA0", Offset = "0x16D2EA0", VA = "0x16D2EA0")]
	public void SetZoom(float amt)
	{
	}

	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0x16D3160", Offset = "0x16D3160", VA = "0x16D3160")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x905CE0", Offset = "0x905CE0")]
	public void ZoomIn()
	{
	}

	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0x16D3218", Offset = "0x16D3218", VA = "0x16D3218")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x905CF8", Offset = "0x905CF8")]
	public void ZoomOut()
	{
	}

	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0x16D32D0", Offset = "0x16D32D0", VA = "0x16D32D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0x16D3A40", Offset = "0x16D3A40", VA = "0x16D3A40")]
	private void PauseTime()
	{
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0x16D256C", Offset = "0x16D256C", VA = "0x16D256C")]
	private void ResumeTime()
	{
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x16D3DE4", Offset = "0x16D3DE4", VA = "0x16D3DE4")]
	private void SetCameraLoc(Transform t)
	{
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x16D3FBC", Offset = "0x16D3FBC", VA = "0x16D3FBC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905D10", Offset = "0x905D10")]
	public void AddCameraLocation()
	{
	}

	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0x16D416C", Offset = "0x16D416C", VA = "0x16D416C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905D58", Offset = "0x905D58")]
	public void NextCameraLocation()
	{
	}

	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0x16D435C", Offset = "0x16D435C", VA = "0x16D435C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905DA0", Offset = "0x905DA0")]
	public void SetLayerMaskHideUI()
	{
	}

	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0x16D4398", Offset = "0x16D4398", VA = "0x16D4398")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905DE8", Offset = "0x905DE8")]
	public void SetLayerMaskShowGameUI()
	{
	}

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0x16D43D4", Offset = "0x16D43D4", VA = "0x16D43D4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x905E30", Offset = "0x905E30")]
	public void SetLayerMaskShowAllUI()
	{
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0x16D4410", Offset = "0x16D4410", VA = "0x16D4410")]
	private void SetupPrinting()
	{
	}

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0x16D2A84", Offset = "0x16D2A84", VA = "0x16D2A84")]
	private void PrintPhoto(Texture2D tex, CameraToTexture.SaveLocation saveLoc)
	{
	}

	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0x16D44D0", Offset = "0x16D44D0", VA = "0x16D44D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905E78", Offset = "0x905E78")]
	private IEnumerator PrintAnimCR()
	{
		return null;
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x16D4548", Offset = "0x16D4548", VA = "0x16D4548")]
	private void DetachCurrentPhoto()
	{
	}

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x16D2694", Offset = "0x16D2694", VA = "0x16D2694")]
	private void SetInfo(string txt)
	{
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x16D25B4", Offset = "0x16D25B4", VA = "0x16D25B4")]
	private void SetTempInfo(string txt, float duration)
	{
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x16D3AFC", Offset = "0x16D3AFC", VA = "0x16D3AFC")]
	private void UpdateInfoScreen()
	{
	}

	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0x16D2160", Offset = "0x16D2160", VA = "0x16D2160")]
	private void SetInfoScreenTip()
	{
	}

	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0x16D3BA0", Offset = "0x16D3BA0", VA = "0x16D3BA0")]
	public void StartRecordingGif()
	{
	}

	[Token(Token = "0x6001EC5")]
	[Address(RVA = "0x16D3D6C", Offset = "0x16D3D6C", VA = "0x16D3D6C")]
	public void StopRecordingGif()
	{
	}

	[Token(Token = "0x6001EC6")]
	[Address(RVA = "0x16D4640", Offset = "0x16D4640", VA = "0x16D4640")]
	private void OnGifSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6001EC7")]
	[Address(RVA = "0x16D4654", Offset = "0x16D4654", VA = "0x16D4654")]
	private void OnGifSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6001EC8")]
	[Address(RVA = "0x16D4660", Offset = "0x16D4660", VA = "0x16D4660")]
	public InstaCam()
	{
	}
}
[Token(Token = "0x200045D")]
public class PlaceableCamera : StaticMapped<PlaceableCamera>
{
	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_fov;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NVRInteractableItem m_interactable;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InstaCam m_instaCam;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_autoSetName;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_wasAttachedLastFrame;

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0x19106E8", Offset = "0x19106E8", VA = "0x19106E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0x1910848", Offset = "0x1910848", VA = "0x1910848")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0x1910A04", Offset = "0x1910A04", VA = "0x1910A04")]
	public void Save()
	{
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x1910BA0", Offset = "0x1910BA0", VA = "0x1910BA0")]
	public void Load()
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x1910D8C", Offset = "0x1910D8C", VA = "0x1910D8C")]
	public PlaceableCamera()
	{
	}
}
[Token(Token = "0x200045E")]
public class PrintedPhoto : MonoBehaviour
{
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE4F4", Offset = "0x8EE4F4")]
	private sealed class <LifetimeCR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrintedPhoto <>4__this;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x158380C", Offset = "0x158380C", VA = "0x158380C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x1583854", Offset = "0x1583854", VA = "0x1583854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x158345C", Offset = "0x158345C", VA = "0x158345C")]
		[DebuggerHidden]
		public <LifetimeCR>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x1583488", Offset = "0x1583488", VA = "0x1583488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x158348C", Offset = "0x158348C", VA = "0x158348C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1583814", Offset = "0x1583814", VA = "0x1583814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_bg;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_photoImage;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MPB_Texture m_photoMPB;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_label;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_border;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_chin;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_aspect;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_popForce;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 m_twistForce;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody m_rb;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_disappearFx;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxDisappear;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_lifetime;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Collider m_collider;

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x1929B20", Offset = "0x1929B20", VA = "0x1929B20")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x1929D10", Offset = "0x1929D10", VA = "0x1929D10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0x1929B24", Offset = "0x1929B24", VA = "0x1929B24")]
	private void Resize()
	{
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0x1929D6C", Offset = "0x1929D6C", VA = "0x1929D6C")]
	public void AttachTo(Transform newParent)
	{
	}

	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0x1929E6C", Offset = "0x1929E6C", VA = "0x1929E6C")]
	public void Detach()
	{
	}

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x1929FE8", Offset = "0x1929FE8", VA = "0x1929FE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x905F78", Offset = "0x905F78")]
	private IEnumerator LifetimeCR()
	{
		return null;
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x192A060", Offset = "0x192A060", VA = "0x192A060")]
	public void SetTexture(Texture2D tex)
	{
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x192A0EC", Offset = "0x192A0EC", VA = "0x192A0EC")]
	public PrintedPhoto()
	{
	}
}
[Token(Token = "0x2000460")]
public class TriggerOnNVRControllerButton : Vitei.Trigger
{
	[Serializable]
	[Token(Token = "0x2000461")]
	public class Pair
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VROpenXrRuntime openXRRuntime;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Util.VRControllerType controller;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disable;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons button;

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x159121C", Offset = "0x159121C", VA = "0x159121C")]
		public Pair()
		{
		}
	}

	[Token(Token = "0x2000462")]
	public enum Handedness
	{
		[Token(Token = "0x4001906")]
		Right,
		[Token(Token = "0x4001907")]
		Left
	}

	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE504", Offset = "0x8EE504")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VRControllerType ctrlType;

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x159118C", Offset = "0x159118C", VA = "0x159118C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1591194", Offset = "0x1591194", VA = "0x1591194")]
		internal bool <TrySetup>b__1(Pair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE514", Offset = "0x8EE514")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VROpenXrRuntime openXRRuntime;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x15911CC", Offset = "0x15911CC", VA = "0x15911CC")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x15911D4", Offset = "0x15911D4", VA = "0x15911D4")]
		internal bool <TrySetup>b__0(Pair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRHand m_hand;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons m_triggerButton;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_disableForOpenXR;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Pair> m_openXrOverrides;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Handedness m_handIfUndefined;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool m_canTriggerWhenHandAttached;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool m_canTrigger;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool m_isSetup;

	[Token(Token = "0x6001EE9")]
	[Address(RVA = "0x1792D68", Offset = "0x1792D68", VA = "0x1792D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EEA")]
	[Address(RVA = "0x1792EC8", Offset = "0x1792EC8", VA = "0x1792EC8")]
	private void TrySetup()
	{
	}

	[Token(Token = "0x6001EEB")]
	[Address(RVA = "0x17935EC", Offset = "0x17935EC", VA = "0x17935EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0x1793724", Offset = "0x1793724", VA = "0x1793724")]
	public TriggerOnNVRControllerButton()
	{
	}
}
[Token(Token = "0x2000465")]
public class LinearMovement : MonoBehaviour
{
	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_duration;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_velocity;

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0x1B1FF60", Offset = "0x1B1FF60", VA = "0x1B1FF60")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0x1B1FFB4", Offset = "0x1B1FFB4", VA = "0x1B1FFB4")]
	public LinearMovement()
	{
	}
}
[Token(Token = "0x2000466")]
public class LocalizedTextMesh : MonoBehaviour
{
	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyValue;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_cachedDefaultWrapping;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_defaultWrapping;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool m_wordWrapCJK;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool localizeFontOnly;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_overrideFontAndStyle;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8CD4", Offset = "0x8F8CD4")]
	public TMP_FontAsset m_englishFont;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[@EnumFlags]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8D0C", Offset = "0x8F8D0C")]
	public FontStyles m_englishStyle;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8D58", Offset = "0x8F8D58")]
	public TMP_FontAsset m_chineseSimplifiedFont;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8D90", Offset = "0x8F8D90")]
	[@EnumFlags]
	public FontStyles m_chineseSimplifiedFontStyle;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8DDC", Offset = "0x8F8DDC")]
	public TMP_FontAsset m_chineseTraditionalFont;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[@EnumFlags]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8E14", Offset = "0x8F8E14")]
	public FontStyles m_chineseTraditionalFontStyle;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8E60", Offset = "0x8F8E60")]
	public TMP_FontAsset m_japaneseFont;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8E98", Offset = "0x8F8E98")]
	[@EnumFlags]
	public FontStyles m_japaneseStyle;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8EE4", Offset = "0x8F8EE4")]
	public TMP_FontAsset m_koreanFont;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[@EnumFlags]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8F1C", Offset = "0x8F8F1C")]
	public FontStyles m_koreanStyle;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F8F68", Offset = "0x8F8F68")]
	public TMP_FontAsset m_russianFont;

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0x1B21864", Offset = "0x1B21864", VA = "0x1B21864")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0x1B21E0C", Offset = "0x1B21E0C", VA = "0x1B21E0C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x1B21868", Offset = "0x1B21868", VA = "0x1B21868")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x906028", Offset = "0x906028")]
	public void Localize()
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x1B21E10", Offset = "0x1B21E10", VA = "0x1B21E10")]
	public LocalizedTextMesh()
	{
	}
}
[Token(Token = "0x2000467")]
public class NVRStickEventTrigger : MonoBehaviour
{
	[Token(Token = "0x2000468")]
	private enum SuperBool
	{
		[Token(Token = "0x400192C")]
		Undefined = -1,
		[Token(Token = "0x400192D")]
		False,
		[Token(Token = "0x400192E")]
		True
	}

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F8FA0", Offset = "0x8F8FA0")]
	private NVRHand m_hand;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_canTriggerWhilstInteracting;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_triggerAt;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_requireClickOnVive;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F9000", Offset = "0x8F9000")]
	public float m_triggerAtOnViveClick;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SuperBool m_requireClick;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_stickLabel;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUp;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnRight;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDown;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnLeft;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_axisWas;

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x19A938C", Offset = "0x19A938C", VA = "0x19A938C")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0x19A94C4", Offset = "0x19A94C4", VA = "0x19A94C4")]
	public NVRHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0x19A94CC", Offset = "0x19A94CC", VA = "0x19A94CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x19A9630", Offset = "0x19A9630", VA = "0x19A9630")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x19A9924", Offset = "0x19A9924", VA = "0x19A9924")]
	public NVRStickEventTrigger()
	{
	}
}
[Token(Token = "0x2000469")]
public class ObjectSensorVisualise : MonoBehaviour
{
	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnyObjectSensor sensor;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color on;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color off;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MPB_Colour mpb;

	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0x159CF70", Offset = "0x159CF70", VA = "0x159CF70")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0x159D028", Offset = "0x159D028", VA = "0x159D028")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EFF")]
	[Address(RVA = "0x159D0A4", Offset = "0x159D0A4", VA = "0x159D0A4")]
	public ObjectSensorVisualise()
	{
	}
}
[Token(Token = "0x200046A")]
public class PlatformSpecificEnable : MonoBehaviour
{
	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_objects;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EnumFlagsAttribute]
	public RuntimePlatform m_enableFor;

	[Token(Token = "0x6001F00")]
	[Address(RVA = "0x19110E4", Offset = "0x19110E4", VA = "0x19110E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0x1911120", Offset = "0x1911120", VA = "0x1911120")]
	public PlatformSpecificEnable()
	{
	}
}
[Token(Token = "0x200046B")]
public class PlayerMover : MonoBehaviour
{
	[Token(Token = "0x200046C")]
	public enum InputMethod
	{
		[Token(Token = "0x4001972")]
		GripButton,
		[Token(Token = "0x4001973")]
		GripForce,
		[Token(Token = "0x4001974")]
		Touchpad
	}

	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE524", Offset = "0x8EE524")]
	private sealed class <Setup>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Util.VRControllerType <controllerType>5__2;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x16C01A0", Offset = "0x16C01A0", VA = "0x16C01A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x16C01E8", Offset = "0x16C01E8", VA = "0x16C01E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x16BFBE8", Offset = "0x16BFBE8", VA = "0x16BFBE8")]
		[DebuggerHidden]
		public <Setup>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x16BFC14", Offset = "0x16BFC14", VA = "0x16BFC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x16BFC18", Offset = "0x16BFC18", VA = "0x16BFC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x16C01A8", Offset = "0x16C01A8", VA = "0x16C01A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE534", Offset = "0x8EE534")]
	private sealed class <Spin>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dur;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ang;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x16C04B4", Offset = "0x16C04B4", VA = "0x16C04B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x16C04FC", Offset = "0x16C04FC", VA = "0x16C04FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x16C01F0", Offset = "0x16C01F0", VA = "0x16C01F0")]
		[DebuggerHidden]
		public <Spin>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x16C021C", Offset = "0x16C021C", VA = "0x16C021C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x16C0220", Offset = "0x16C0220", VA = "0x16C0220", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x16C04BC", Offset = "0x16C04BC", VA = "0x16C04BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand m_lh;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_rh;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRPlayer m_player;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_lhStartPos;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_rhStartPos;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_lhStartPosLS;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_rhStartPosLS;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_refStartRoot;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_refStartPlayer;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform m_refEndRoot;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform m_refEndPlayer;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_move;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool m_rotate;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool m_scale;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public InputMethod m_inputMethod;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_gripForceTriggerPoint;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_pulseMag;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ushort m_pulseLen;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool m_canReset;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public NVRButtons m_resetViewButtonLeft;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NVRButtons m_resetViewButtonRight;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_maxRadiusFromOrigin;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9048", Offset = "0x8F9048")]
	public bool m_dimSkyboxOnMove;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock m_mpbSkybox;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MeshRenderer m_skyboxRenderer;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_skyboxBrightProp;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock m_mpbStars;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MeshRenderer m_starsRenderer;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color m_starsColour;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_skyboxMinBright;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_skyboxMaxBright;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_skyboxBrightness;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float m_skyboxFadeOutRate;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_skyboxFadeInRate;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_skyboxLinearMin;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_skyboxRotMin;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool m_initialised;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 m_posLastFrame;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion m_rotLastFrame;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float m_l_gripAxisLastFrame;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool m_l_gripHeldThisFrame;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool m_l_gripHeldLastFrame;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float m_r_gripAxisLastFrame;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_r_gripHeldThisFrame;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool m_r_gripHeldLastFrame;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool Grip_L_JustDown;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	private bool Grip_L_JustUp;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool Grip_L_Held;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	private bool Grip_R_JustDown;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
	private bool Grip_R_JustUp;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
	private bool Grip_R_Held;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9080", Offset = "0x8F9080")]
	public bool m_canSpin;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F90B8", Offset = "0x8F90B8")]
	public Transform m_spinAround;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F90F0", Offset = "0x8F90F0")]
	public float m_spinAngle;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9128", Offset = "0x8F9128")]
	public float m_spinDuration;

	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float triggerAt;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector2 m_lhAxisWas;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector2 m_rhAxisWas;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform m_spinRoot;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool m_isSpinning;

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0x191DAE4", Offset = "0x191DAE4", VA = "0x191DAE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0x191DB1C", Offset = "0x191DB1C", VA = "0x191DB1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906040", Offset = "0x906040")]
	private IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0x191DB94", Offset = "0x191DB94", VA = "0x191DB94")]
	private void RecordStartVars()
	{
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0x191DEA8", Offset = "0x191DEA8", VA = "0x191DEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0x191EED4", Offset = "0x191EED4", VA = "0x191EED4")]
	private void UpdateSpin()
	{
	}

	[Token(Token = "0x6001F07")]
	[Address(RVA = "0x191F108", Offset = "0x191F108", VA = "0x191F108")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9060A0", Offset = "0x9060A0")]
	private IEnumerator Spin(float ang, float dur)
	{
		return null;
	}

	[Token(Token = "0x6001F08")]
	[Address(RVA = "0x191F194", Offset = "0x191F194", VA = "0x191F194")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001F09")]
	[Address(RVA = "0x191F1D0", Offset = "0x191F1D0", VA = "0x191F1D0")]
	public PlayerMover()
	{
	}
}
[Token(Token = "0x200046F")]
public class RayastLine : MonoBehaviour
{
	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shapes.Line m_line;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_rayLength;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_rayStartOffset;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 m_rayDirWorld;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_hideIfNoHit;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_hitObject;

	[Token(Token = "0x6001F16")]
	[Address(RVA = "0x1933928", Offset = "0x1933928", VA = "0x1933928")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F17")]
	[Address(RVA = "0x1933BD4", Offset = "0x1933BD4", VA = "0x1933BD4")]
	public RayastLine()
	{
	}
}
[Token(Token = "0x2000470")]
public class SFX : MonoBehaviour
{
	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject ms_stretchSound;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject ms_stretchSoundReservationHolder;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CircularPrefabPool ms_pool;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool ms_initialised;

	[Token(Token = "0x6001F18")]
	[Address(RVA = "0x1894EA0", Offset = "0x1894EA0", VA = "0x1894EA0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9061A0", Offset = "0x9061A0")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x6001F19")]
	[Address(RVA = "0x1894F18", Offset = "0x1894F18", VA = "0x1894F18")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001F1A")]
	[Address(RVA = "0x1895044", Offset = "0x1895044", VA = "0x1895044")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001F1B")]
	[Address(RVA = "0x18896F4", Offset = "0x18896F4", VA = "0x18896F4")]
	public static GameObject GetTempGameObject(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001F1C")]
	[Address(RVA = "0x1895214", Offset = "0x1895214", VA = "0x1895214")]
	public static GameObject ReserveStretchSoundObject(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0x1895288", Offset = "0x1895288", VA = "0x1895288")]
	public static GameObject GetStretchSoundObject(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0x18953B4", Offset = "0x18953B4", VA = "0x18953B4")]
	public SFX()
	{
	}
}
[Token(Token = "0x2000471")]
public class SetStartView : MonoBehaviour
{
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE544", Offset = "0x8EE544")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetStartView <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x158AD14", Offset = "0x158AD14", VA = "0x158AD14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x158AD5C", Offset = "0x158AD5C", VA = "0x158AD5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x158AB40", Offset = "0x158AB40", VA = "0x158AB40")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x158AB6C", Offset = "0x158AB6C", VA = "0x158AB6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x158AB70", Offset = "0x158AB70", VA = "0x158AB70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x158AD1C", Offset = "0x158AD1C", VA = "0x158AD1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001F20")]
	[Address(RVA = "0x15B9DEC", Offset = "0x15B9DEC", VA = "0x15B9DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9061B4", Offset = "0x9061B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001F21")]
	[Address(RVA = "0x15B9E64", Offset = "0x15B9E64", VA = "0x15B9E64")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x906214", Offset = "0x906214")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x906214", Offset = "0x906214")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x15BA08C", Offset = "0x15BA08C", VA = "0x15BA08C")]
	public SetStartView()
	{
	}
}
[Token(Token = "0x2000473")]
[ExecuteInEditMode]
public class ShaderControllerSphereSetter : MonoBehaviour
{
	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_leftHand;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_rightHand;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_radius;

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x15BA094", Offset = "0x15BA094", VA = "0x15BA094")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x15BA160", Offset = "0x15BA160", VA = "0x15BA160")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x15BA1C4", Offset = "0x15BA1C4", VA = "0x15BA1C4")]
	public ShaderControllerSphereSetter()
	{
	}
}
[Token(Token = "0x2000474")]
public class SinMover : MonoBehaviour
{
	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_amplitude;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_frequency;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_offset;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_startPos;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 offset;

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x15BEE20", Offset = "0x15BEE20", VA = "0x15BEE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x15BEE5C", Offset = "0x15BEE5C", VA = "0x15BEE5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0x15BEF20", Offset = "0x15BEF20", VA = "0x15BEF20")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x15BF118", Offset = "0x15BF118", VA = "0x15BF118")]
	public SinMover()
	{
	}
}
[Token(Token = "0x2000475")]
public class Snappable : MonoBehaviour
{
	[Token(Token = "0x2000476")]
	public enum SnapOutcome
	{
		[Token(Token = "0x40019B2")]
		Nothing,
		[Token(Token = "0x40019B3")]
		ReturnToPrevious,
		[Token(Token = "0x40019B4")]
		SnapToLocation
	}

	[Token(Token = "0x2000477")]
	public interface IDelegate
	{
		[Token(Token = "0x6001F39")]
		SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation);

		[Token(Token = "0x6001F3A")]
		SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation);

		[Token(Token = "0x6001F3B")]
		void SnappableShowingPreview(Snappable snappable);

		[Token(Token = "0x6001F3C")]
		void SnappableInteractionDidBegin(Snappable snappable);

		[Token(Token = "0x6001F3D")]
		void SnappableInteractionDidEnd(Snappable snappable);
	}

	[Token(Token = "0x2000478")]
	public delegate void OnPickupDelegate();

	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE564", Offset = "0x8EE564")]
	private sealed class <Settle>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Snappable <>4__this;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <shouldSnap>5__2;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <shouldReset>5__3;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Matrix4x4 <previewMatrix>5__4;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float <flashT>5__5;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 <dropPos>5__6;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion <dropRot>5__7;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 <targetPos>5__8;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion <targetRot>5__9;

		[Token(Token = "0x170003AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x158C25C", Offset = "0x158C25C", VA = "0x158C25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x158C2A4", Offset = "0x158C2A4", VA = "0x158C2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x158B84C", Offset = "0x158B84C", VA = "0x158B84C")]
		[DebuggerHidden]
		public <Settle>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x158B878", Offset = "0x158B878", VA = "0x158B878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x158B87C", Offset = "0x158B87C", VA = "0x158B87C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x158C264", Offset = "0x158C264", VA = "0x158C264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9160", Offset = "0x8F9160")]
	public bool m_snapPosition;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9198", Offset = "0x8F9198")]
	public Vector3 m_grid;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F91D0", Offset = "0x8F91D0")]
	public Vector3 m_offset;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9208", Offset = "0x8F9208")]
	public bool m_snapRotation;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9240", Offset = "0x8F9240")]
	public Vector3 m_rotGrid;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9278", Offset = "0x8F9278")]
	public Vector3 m_rotOffset;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Bounds m_snapVolume;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_timeToSettle;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool m_settling;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Mesh m_previewMesh;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnPickupDelegate OnWasPickedUp;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnSettled;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool m_autoGenFullModel;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string m_snapSFX;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_snapBlockedSFX;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_settledSFX;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_settledBlockedSFX;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IDelegate m_delegate;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_errorFlashDur;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_errorFlashFreq;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_currentlyPlacing;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_snappedPosition;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion m_snappedRotation;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SnapOutcome m_snapOutcome;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 m_startPos;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion m_startRot;

	[Token(Token = "0x170003AA")]
	public bool IsSnapped
	{
		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x15C3CC4", Offset = "0x15C3CC4", VA = "0x15C3CC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<bool> OnWillSettle
	{
		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x15C3B84", Offset = "0x15C3B84", VA = "0x15C3B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9062C8", Offset = "0x9062C8")]
		add
		{
		}
		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x15C3C24", Offset = "0x15C3C24", VA = "0x15C3C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9062D8", Offset = "0x9062D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6001F33")]
	[Address(RVA = "0x15C3CD4", Offset = "0x15C3CD4", VA = "0x15C3CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F34")]
	[Address(RVA = "0x15C4188", Offset = "0x15C4188", VA = "0x15C4188")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001F35")]
	[Address(RVA = "0x15C45C0", Offset = "0x15C45C0", VA = "0x15C45C0")]
	private void GetSnapped(out Vector3 positionOut, out Quaternion rotationOut)
	{
	}

	[Token(Token = "0x6001F36")]
	[Address(RVA = "0x15C3F20", Offset = "0x15C3F20", VA = "0x15C3F20")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6001F37")]
	[Address(RVA = "0x15C4A74", Offset = "0x15C4A74", VA = "0x15C4A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9062E8", Offset = "0x9062E8")]
	private IEnumerator Settle()
	{
		return null;
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0x15C4C00", Offset = "0x15C4C00", VA = "0x15C4C00")]
	public Snappable()
	{
	}
}
[Token(Token = "0x200047A")]
public class TMPFontFallbackChanger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200047B")]
	public class FontSetting
	{
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageCode m_langCode;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset m_font;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x158E3C0", Offset = "0x158E3C0", VA = "0x158E3C0")]
		public FontSetting()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200047C")]
	public class FontData
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset m_font;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<FontSetting> m_fallbacks;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x158E170", Offset = "0x158E170", VA = "0x158E170")]
		public TMP_FontAsset GetFallbackFor(LanguageCode newLang)
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x158E258", Offset = "0x158E258", VA = "0x158E258")]
		public void ApplyFor(LanguageCode newLang)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x158E3B8", Offset = "0x158E3B8", VA = "0x158E3B8")]
		public FontData()
		{
		}
	}

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FontData[] m_fontData;

	[Token(Token = "0x6001F48")]
	[Address(RVA = "0x187EF64", Offset = "0x187EF64", VA = "0x187EF64")]
	public TMP_FontAsset GetFallbackFontFor(TMP_FontAsset source, LanguageCode langCode)
	{
		return null;
	}

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x187F080", Offset = "0x187F080", VA = "0x187F080")]
	private void LoadedNewLanguage(LanguageCode newLang)
	{
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x187F0FC", Offset = "0x187F0FC", VA = "0x187F0FC")]
	public TMPFontFallbackChanger()
	{
	}
}
[Token(Token = "0x200047D")]
public class TMP_AutosizeMultiple : MonoBehaviour
{
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE574", Offset = "0x8EE574")]
	private sealed class <ApplyCR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_AutosizeMultiple <>4__this;

		[Token(Token = "0x170003AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x158E468", Offset = "0x158E468", VA = "0x158E468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x158E4B0", Offset = "0x158E4B0", VA = "0x158E4B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x158E3C8", Offset = "0x158E3C8", VA = "0x158E3C8")]
		[DebuggerHidden]
		public <ApplyCR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x158E3F4", Offset = "0x158E3F4", VA = "0x158E3F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x158E3F8", Offset = "0x158E3F8", VA = "0x158E3F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x158E470", Offset = "0x158E470", VA = "0x158E470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] m_texts;

	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x187F104", Offset = "0x187F104", VA = "0x187F104")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x906398", Offset = "0x906398")]
	private void Apply()
	{
	}

	[Token(Token = "0x6001F50")]
	[Address(RVA = "0x187F268", Offset = "0x187F268", VA = "0x187F268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9063B0", Offset = "0x9063B0")]
	private IEnumerator ApplyCR()
	{
		return null;
	}

	[Token(Token = "0x6001F51")]
	[Address(RVA = "0x187F2E0", Offset = "0x187F2E0", VA = "0x187F2E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F52")]
	[Address(RVA = "0x187F30C", Offset = "0x187F30C", VA = "0x187F30C")]
	private void ChangedLanguage()
	{
	}

	[Token(Token = "0x6001F53")]
	[Address(RVA = "0x187F310", Offset = "0x187F310", VA = "0x187F310")]
	public TMP_AutosizeMultiple()
	{
	}
}
[Token(Token = "0x200047F")]
[SelectionBase]
[ExecuteInEditMode]
public class IssueSignpost : MonoBehaviour
{
	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ms_thetaScale;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool ms_showInPlayMode;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public string issueId;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public string issueType;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public string status;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string title;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Multiline]
	public string description;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string user;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI m_text_header;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshProUGUI m_text_body;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image m_image;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string oldTitle;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string oldDescription;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 oldPosition;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[ReadOnly]
	public string issueTypeId;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	[ReadOnly]
	public string issueTypeAvatar;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static Dictionary<string, Dictionary<string, string>> ms_availableTransitions;

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x16D9014", Offset = "0x16D9014", VA = "0x16D9014")]
	public static void SetScaleConstantSmall()
	{
	}

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x16D907C", Offset = "0x16D907C", VA = "0x16D907C")]
	public static void SetScaleConstantLarge()
	{
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x16D90E8", Offset = "0x16D90E8", VA = "0x16D90E8")]
	public static void SetScaleRealSmall()
	{
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x16D9150", Offset = "0x16D9150", VA = "0x16D9150")]
	public static void SetScaleRealLarge()
	{
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x16D91B8", Offset = "0x16D91B8", VA = "0x16D91B8")]
	public static void SetAllVisibility(bool b)
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x16D92B8", Offset = "0x16D92B8", VA = "0x16D92B8")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x16D92BC", Offset = "0x16D92BC", VA = "0x16D92BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x16D9328", Offset = "0x16D9328", VA = "0x16D9328")]
	public bool IsDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x16D93A4", Offset = "0x16D93A4", VA = "0x16D93A4")]
	public void MakeClean()
	{
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x16D9404", Offset = "0x16D9404", VA = "0x16D9404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x16D94A8", Offset = "0x16D94A8", VA = "0x16D94A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0x16D9324", Offset = "0x16D9324", VA = "0x16D9324")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x906460", Offset = "0x906460")]
	public void HideChildren()
	{
	}

	[Token(Token = "0x6001F66")]
	[Address(RVA = "0x16D94AC", Offset = "0x16D94AC", VA = "0x16D94AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x906498", Offset = "0x906498")]
	public void ShowChildren()
	{
	}

	[Token(Token = "0x6001F67")]
	[Address(RVA = "0x16D94B0", Offset = "0x16D94B0", VA = "0x16D94B0")]
	public IssueSignpost()
	{
	}
}
[Token(Token = "0x2000480")]
public class TextFittingSprite : MonoBehaviour
{
	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_sprite;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_scaleVal;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_padding;

	[Token(Token = "0x6001F69")]
	[Address(RVA = "0x17846C8", Offset = "0x17846C8", VA = "0x17846C8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x9064D0", Offset = "0x9064D0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0x1784720", Offset = "0x1784720", VA = "0x1784720")]
	public TextFittingSprite()
	{
	}
}
[Token(Token = "0x2000481")]
public class Texticle : MonoBehaviour
{
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE5BC", Offset = "0x8EE5BC")]
	private sealed class <FitAfter1Frame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texticle <>4__this;

		[Token(Token = "0x170003AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x158F31C", Offset = "0x158F31C", VA = "0x158F31C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x158F364", Offset = "0x158F364", VA = "0x158F364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x158F274", Offset = "0x158F274", VA = "0x158F274")]
		[DebuggerHidden]
		public <FitAfter1Frame>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x158F2A0", Offset = "0x158F2A0", VA = "0x158F2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x158F2A4", Offset = "0x158F2A4", VA = "0x158F2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x158F324", Offset = "0x158F324", VA = "0x158F324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE5CC", Offset = "0x8EE5CC")]
	private sealed class <FaceCamera>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texticle <>4__this;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x158F224", Offset = "0x158F224", VA = "0x158F224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x158F26C", Offset = "0x158F26C", VA = "0x158F26C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x158F0B4", Offset = "0x158F0B4", VA = "0x158F0B4")]
		[DebuggerHidden]
		public <FaceCamera>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x158F0E0", Offset = "0x158F0E0", VA = "0x158F0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x158F0E4", Offset = "0x158F0E4", VA = "0x158F0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x158F22C", Offset = "0x158F22C", VA = "0x158F22C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_label;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip m_shortAnim;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip m_longAnim;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip m_staticAnim;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextFittingSprite m_textFitter;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform m_faceCamera;

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x1784D7C", Offset = "0x1784D7C", VA = "0x1784D7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x1784E10", Offset = "0x1784E10", VA = "0x1784E10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9064E8", Offset = "0x9064E8")]
	private IEnumerator FitAfter1Frame()
	{
		return null;
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x1784E88", Offset = "0x1784E88", VA = "0x1784E88")]
	public void Go()
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x1784EDC", Offset = "0x1784EDC", VA = "0x1784EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906548", Offset = "0x906548")]
	private IEnumerator FaceCamera()
	{
		return null;
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x1784F54", Offset = "0x1784F54", VA = "0x1784F54")]
	public Texticle()
	{
	}
}
[Token(Token = "0x2000484")]
public class Texticles : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	public enum Style
	{
		[Token(Token = "0x40019EF")]
		Standard,
		[Token(Token = "0x40019F0")]
		SpeechBubble,
		[Token(Token = "0x40019F1")]
		ThoughtBubble
	}

	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE5DC", Offset = "0x8EE5DC")]
	private sealed class <LinearMove>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform texticle;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 from;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 to;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool is2D;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__2;

		[Token(Token = "0x170003B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x158F568", Offset = "0x158F568", VA = "0x158F568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x158F5B0", Offset = "0x158F5B0", VA = "0x158F5B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x158F36C", Offset = "0x158F36C", VA = "0x158F36C")]
		[DebuggerHidden]
		public <LinearMove>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x158F398", Offset = "0x158F398", VA = "0x158F398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x158F39C", Offset = "0x158F39C", VA = "0x158F39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x158F570", Offset = "0x158F570", VA = "0x158F570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texticles Instance;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabStandard;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_prefabSpeechBubble;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_prefabThoughtBubble;

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x1784F5C", Offset = "0x1784F5C", VA = "0x1784F5C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x906648", Offset = "0x906648")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x1784FAC", Offset = "0x1784FAC", VA = "0x1784FAC")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x17850AC", Offset = "0x17850AC", VA = "0x17850AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x1785100", Offset = "0x1785100", VA = "0x1785100")]
	public static void Do(Vector3 pos, string text)
	{
	}

	[Token(Token = "0x6001F80")]
	[Address(RVA = "0x178517C", Offset = "0x178517C", VA = "0x178517C")]
	public static Texticle Do(Vector3 pos, string text, Color col, Style style = Style.Standard, float scale = 1f, bool doLongAnim = false)
	{
		return null;
	}

	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x1785574", Offset = "0x1785574", VA = "0x1785574")]
	public static Texticle Do(Vector3 posFrom, Vector3 posTo, int value, Color col, Style style = Style.Standard, float scale = 1f, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001F82")]
	[Address(RVA = "0x1785678", Offset = "0x1785678", VA = "0x1785678")]
	public static Texticle Do(Vector3 posFrom, Vector3 posTo, string text, Color col, Style style = Style.Standard, float scale = 1f, [Optional] Transform parent, bool is2D = false)
	{
		return null;
	}

	[Token(Token = "0x6001F83")]
	[Address(RVA = "0x1785B0C", Offset = "0x1785B0C", VA = "0x1785B0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90665C", Offset = "0x90665C")]
	private IEnumerator LinearMove(Transform texticle, Vector3 from, Vector3 to, float duration, bool is2D = false)
	{
		return null;
	}

	[Token(Token = "0x6001F84")]
	[Address(RVA = "0x1785BE4", Offset = "0x1785BE4", VA = "0x1785BE4")]
	public Texticles()
	{
	}
}
[Token(Token = "0x2000487")]
public class TriggerOnMouseDown : Vitei.Trigger
{
	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x1792D60", Offset = "0x1792D60", VA = "0x1792D60")]
	public TriggerOnMouseDown()
	{
	}
}
[Token(Token = "0x2000488")]
public class TriggerOnNVRStick : Vitei.Trigger
{
	[Token(Token = "0x2000489")]
	public enum Dir
	{
		[Token(Token = "0x4001A00")]
		Up,
		[Token(Token = "0x4001A01")]
		Down,
		[Token(Token = "0x4001A02")]
		Left,
		[Token(Token = "0x4001A03")]
		Right
	}

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Chirality m_hand;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8F93A0", Offset = "0x8F93A0")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dir m_direction;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_triggerAt;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 m_axisWas;

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x1793734", Offset = "0x1793734", VA = "0x1793734")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x1793814", Offset = "0x1793814", VA = "0x1793814")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x17939DC", Offset = "0x17939DC", VA = "0x17939DC")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0x1793A34", Offset = "0x1793A34", VA = "0x1793A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F90")]
	[Address(RVA = "0x1793BB0", Offset = "0x1793BB0", VA = "0x1793BB0")]
	public TriggerOnNVRStick()
	{
	}
}
[Token(Token = "0x200048A")]
public class UserBugReporter : MonoBehaviour
{
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE5EC", Offset = "0x8EE5EC")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserBugReporter <>4__this;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x1596FE4", Offset = "0x1596FE4", VA = "0x1596FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x159702C", Offset = "0x159702C", VA = "0x159702C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1596D18", Offset = "0x1596D18", VA = "0x1596D18")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1596D44", Offset = "0x1596D44", VA = "0x1596D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1596D48", Offset = "0x1596D48", VA = "0x1596D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1596FEC", Offset = "0x1596FEC", VA = "0x1596FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE5FC", Offset = "0x8EE5FC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__15_0;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<char, char> <>9__19_0;

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1596CC0", Offset = "0x1596CC0", VA = "0x1596CC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1596CC8", Offset = "0x1596CC8", VA = "0x1596CC8")]
		internal bool <SendBugAsEmail>b__15_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1596CD0", Offset = "0x1596CD0", VA = "0x1596CD0")]
		internal char <Rot13>b__19_0(char s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_defaultButtonText;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button m_submitButton;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_submitButtonText;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_outputText;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_tempLogFilePath;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_bugId;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_toEmail;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string m_senderEmail;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_senderPass;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string subject;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8F9400", Offset = "0x8F9400")]
	public string body;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_sending;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string PlayerName;

	[Token(Token = "0x6001F91")]
	[Address(RVA = "0x15E2498", Offset = "0x15E2498", VA = "0x15E2498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90670C", Offset = "0x90670C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001F92")]
	[Address(RVA = "0x15E2510", Offset = "0x15E2510", VA = "0x15E2510")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6001F93")]
	[Address(RVA = "0x15E25E0", Offset = "0x15E25E0", VA = "0x15E25E0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x90676C", Offset = "0x90676C")]
	public void SendBugAsEmail()
	{
	}

	[Token(Token = "0x6001F94")]
	[Address(RVA = "0x15E34A0", Offset = "0x15E34A0", VA = "0x15E34A0")]
	private void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x6001F95")]
	[Address(RVA = "0x15E3644", Offset = "0x15E3644", VA = "0x15E3644")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001F96")]
	[Address(RVA = "0x15E3670", Offset = "0x15E3670", VA = "0x15E3670")]
	private void Revert()
	{
	}

	[Token(Token = "0x6001F97")]
	[Address(RVA = "0x15E3310", Offset = "0x15E3310", VA = "0x15E3310")]
	private static string Rot13(string input)
	{
		return null;
	}

	[Token(Token = "0x6001F98")]
	[Address(RVA = "0x15E36EC", Offset = "0x15E36EC", VA = "0x15E36EC")]
	public UserBugReporter()
	{
	}
}
[Token(Token = "0x200048D")]
public class VFX : MonoBehaviour
{
	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0x19DC894", Offset = "0x19DC894", VA = "0x19DC894")]
	public static GameObject Spawn(GameObject prefab, Transform t, bool parentToTransform = false)
	{
		return null;
	}

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x19DC9A4", Offset = "0x19DC9A4", VA = "0x19DC9A4")]
	public static GameObject Spawn(GameObject prefab, Transform t, Vector3 localOffset, bool parentToTransform = false)
	{
		return null;
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x19DCBB8", Offset = "0x19DCBB8", VA = "0x19DCBB8")]
	public static GameObject Spawn(GameObject prefab, Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x19DCCA8", Offset = "0x19DCCA8", VA = "0x19DCCA8")]
	public static GameObject Spawn(GameObject prefab, Vector3 pos, Vector3 fwd)
	{
		return null;
	}

	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0x19DCDB4", Offset = "0x19DCDB4", VA = "0x19DCDB4")]
	public VFX()
	{
	}
}
[Token(Token = "0x200048E")]
public class VersionNumberNamed : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE60C", Offset = "0x8EE60C")]
	private sealed class <UpdateTimeCR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VersionNumberNamed <>4__this;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitForOneSecond>5__2;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1FCA714", Offset = "0x1FCA714", VA = "0x1FCA714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1FCA75C", Offset = "0x1FCA75C", VA = "0x1FCA75C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1FCA37C", Offset = "0x1FCA37C", VA = "0x1FCA37C")]
		[DebuggerHidden]
		public <UpdateTimeCR>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1FCA3A8", Offset = "0x1FCA3A8", VA = "0x1FCA3A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1FCA3AC", Offset = "0x1FCA3AC", VA = "0x1FCA3AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1FCA71C", Offset = "0x1FCA71C", VA = "0x1FCA71C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9410", Offset = "0x8F9410")]
	public int id;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string versionString;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DateTime buildDate;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text tmpro;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] BuildNames;

	[Token(Token = "0x170003B7")]
	public string BuildDate
	{
		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x19E113C", Offset = "0x19E113C", VA = "0x19E113C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0x19E1230", Offset = "0x19E1230", VA = "0x19E1230")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FAA")]
	[Address(RVA = "0x19E1A44", Offset = "0x19E1A44", VA = "0x19E1A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9067D4", Offset = "0x9067D4")]
	private IEnumerator UpdateTimeCR()
	{
		return null;
	}

	[Token(Token = "0x6001FAB")]
	[Address(RVA = "0x19E1ABC", Offset = "0x19E1ABC", VA = "0x19E1ABC")]
	public VersionNumberNamed()
	{
	}
}
[Token(Token = "0x2000490")]
public class VisibilityList : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public enum Mode
	{
		[Token(Token = "0x4001A2B")]
		ObjectActivated,
		[Token(Token = "0x4001A2C")]
		RendererEnabled
	}

	[Serializable]
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE61C", Offset = "0x8EE61C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, Renderer> <>9__13_0;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, Renderer> <>9__13_1;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<GameObject, Renderer> <>9__14_0;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<GameObject, Renderer> <>9__14_1;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x1FCA7C8", Offset = "0x1FCA7C8", VA = "0x1FCA7C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1FCA7D0", Offset = "0x1FCA7D0", VA = "0x1FCA7D0")]
		internal Renderer <Enter>b__13_0(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x1FCA824", Offset = "0x1FCA824", VA = "0x1FCA824")]
		internal Renderer <Enter>b__13_1(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1FCA878", Offset = "0x1FCA878", VA = "0x1FCA878")]
		internal Renderer <Exit>b__14_0(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1FCA8CC", Offset = "0x1FCA8CC", VA = "0x1FCA8CC")]
		internal Renderer <Exit>b__14_1(GameObject x)
		{
			return null;
		}
	}

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_triggerAtStart;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_triggerWithPhysicsEnterExit;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Mode m_mode;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_objectsToHide;

	[Token(Token = "0x4001A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_objectsToShow;

	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_changeFarPlane;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_origFarPlane;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9460", Offset = "0x8F9460")]
	public float newFarPlane;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_skybox;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material m_originalSkybox;

	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0x19E6420", Offset = "0x19E6420", VA = "0x19E6420")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0x19E65C0", Offset = "0x19E65C0", VA = "0x19E65C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0x19E65D0", Offset = "0x19E65D0", VA = "0x19E65D0")]
	public void Enter()
	{
	}

	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0x19E6ECC", Offset = "0x19E6ECC", VA = "0x19E6ECC")]
	public void Exit()
	{
	}

	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0x19E763C", Offset = "0x19E763C", VA = "0x19E763C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0x19E76D0", Offset = "0x19E76D0", VA = "0x19E76D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0x19E7764", Offset = "0x19E7764", VA = "0x19E7764")]
	public VisibilityList()
	{
	}
}
[Token(Token = "0x2000493")]
public class WwiseSetup : MonoBehaviour
{
	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wwisePrefab;

	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0x19ED27C", Offset = "0x19ED27C", VA = "0x19ED27C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001FC1")]
	[Address(RVA = "0x19ED344", Offset = "0x19ED344", VA = "0x19ED344")]
	public WwiseSetup()
	{
	}
}
[Token(Token = "0x2000494")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EE62C", Offset = "0x8EE62C")]
public class DebugMenuItem : Attribute
{
	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string subMenu;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minValue;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxValue;

	[Token(Token = "0x6001FC2")]
	[Address(RVA = "0x166F180", Offset = "0x166F180", VA = "0x166F180")]
	public DebugMenuItem(string addToSubMenu = "", float min = -100f, float max = 100f)
	{
	}
}
[Token(Token = "0x2000495")]
public class NVR_UI_Canvas : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE640", Offset = "0x8EE640")]
	private sealed class <FindPlayer>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVR_UI_Canvas <>4__this;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRCanvasInput <nci>5__2;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x16B7A8C", Offset = "0x16B7A8C", VA = "0x16B7A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x16B7AD4", Offset = "0x16B7AD4", VA = "0x16B7AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x16B77A4", Offset = "0x16B77A4", VA = "0x16B77A4")]
		[DebuggerHidden]
		public <FindPlayer>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x16B77D0", Offset = "0x16B77D0", VA = "0x16B77D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x16B77D4", Offset = "0x16B77D4", VA = "0x16B77D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x16B7A94", Offset = "0x16B7A94", VA = "0x16B7A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0x19AFD44", Offset = "0x19AFD44", VA = "0x19AFD44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0x19AFD70", Offset = "0x19AFD70", VA = "0x19AFD70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906884", Offset = "0x906884")]
	private IEnumerator FindPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0x19AFDE8", Offset = "0x19AFDE8", VA = "0x19AFDE8")]
	public NVR_UI_Canvas()
	{
	}
}
[Token(Token = "0x2000497")]
public class ActiveInactiveDebugger : MonoBehaviour
{
	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_debugActivate;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_debugDectivate;

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0x1A025E0", Offset = "0x1A025E0", VA = "0x1A025E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0x1A0268C", Offset = "0x1A0268C", VA = "0x1A0268C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0x1A02738", Offset = "0x1A02738", VA = "0x1A02738")]
	public ActiveInactiveDebugger()
	{
	}
}
[Token(Token = "0x2000498")]
public static class CollectionExtensions
{
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE660", Offset = "0x8EE660")]
	private sealed class <GetWrappingEnumerator>d__15<T> : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<T> list;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<T> <enumerator>5__2;

		[Token(Token = "0x170003BC")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001FFC")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFE")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF9")]
		[DebuggerHidden]
		public <GetWrappingEnumerator>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001FFA")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FFB")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFD")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE670", Offset = "0x8EE670")]
	private sealed class <Select>d__17<T, U> : IEnumerator<U>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private U <>2__current;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<T, U> selector;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<T> enumerator;

		[Token(Token = "0x170003BE")]
		private U System.Collections.Generic.IEnumerator<U>.Current
		{
			[Token(Token = "0x6002002")]
			[DebuggerHidden]
			get
			{
				return (U)null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002004")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFF")]
		[DebuggerHidden]
		public <Select>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002000")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002001")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002003")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE680", Offset = "0x8EE680")]
	private sealed class <>c__DisplayClass38_0<T> where T : UnityEngine.Object
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x6002005")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6002006")]
		internal bool <FindByNames>b__0(T s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FCF")]
	public static int FirstIndexOf<T>(this T[] array, T item)
	{
		return default(int);
	}

	[Token(Token = "0x6001FD0")]
	public static T Last<T>(this T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD1")]
	public static T GetSafe<T>(this T[] array, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD2")]
	public static void Swap<T>(this T[] array, int a, int b)
	{
	}

	[Token(Token = "0x6001FD3")]
	public static T Random<T>(this IEnumerable<T> collection, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD4")]
	public static T Random<T>(this T[] array, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD5")]
	public static int RandomIndex<T>(this T[] array, [Optional] System.Random rand)
	{
		return default(int);
	}

	[Token(Token = "0x6001FD6")]
	public static int RandomIndex<T>(this List<T> list, [Optional] System.Random rand)
	{
		return default(int);
	}

	[Token(Token = "0x6001FD7")]
	public static T Random<T>(this List<T> list, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD8")]
	public static int WrapIndex<T>(this T[] array, int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6001FD9")]
	public static int WrapIndex<T>(this List<T> list, int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6001FDA")]
	public static T Next<T>(this T[] arr, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FDB")]
	public static T Prev<T>(this T[] arr, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FDC")]
	public static T Next<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FDD")]
	public static T Prev<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FDE")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906A24", Offset = "0x906A24")]
	public static IEnumerator<T> GetWrappingEnumerator<T>(this IEnumerable<T> list)
	{
		return null;
	}

	[Token(Token = "0x6001FDF")]
	public static T GetNext<T>(this IEnumerator<T> enumerator)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x906AA4", Offset = "0x906AA4")]
	public static IEnumerator<U> Select<T, U>(this IEnumerator<T> enumerator, Func<T, U> selector)
	{
		return null;
	}

	[Token(Token = "0x6001FE1")]
	public static void Swap<T>(this List<T> list, int a, int b)
	{
	}

	[Token(Token = "0x6001FE2")]
	public static void AddOrSet<T, TS>(this Dictionary<T, TS> dict, T key, TS value)
	{
	}

	[Token(Token = "0x6001FE3")]
	public static bool AddIfUnique<T>(this List<T> list, T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE4")]
	public static bool AddUniques<T>(this List<T> list, T[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE5")]
	public static bool AddUniques<T>(this List<T> list, List<T> items)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE6")]
	public static int Find<T>(this T[] array, T val)
	{
		return default(int);
	}

	[Token(Token = "0x6001FE7")]
	public static bool Contains<T>(this T[] array, T val)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE8")]
	public static bool ContainsAny<T>(this T[] array, T[] lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE9")]
	public static bool ContainsAny<T>(this T[] array, List<T> lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FEA")]
	public static bool ContainsAny<T>(this List<T> list, T[] lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FEB")]
	public static bool ContainsAny<T>(this List<T> list, List<T> lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FEC")]
	public static T Last<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FED")]
	public static int GetNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FEE")]
	public static int GetNotNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FEF")]
	public static int CountNotNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FF0")]
	public static void AddUniqueGameObjects<T>(this List<GameObject> list, List<T> newItems) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FF1")]
	public static void AddUniqueGameObjects<T>(this List<GameObject> list, T[] newItems) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FF2")]
	public static T GetSafe<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FF3")]
	public static void Shuffle<T>(this List<T> list, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x6001FF4")]
	public static void RemoveNulls<T>(this List<T> list) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FF5")]
	public static T FindByNames<T>(this IEnumerable<T> list, params string[] names) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6001FF6")]
	public static T Smallest<T, V>(this Dictionary<int, T> list, Func<T, V> valueGetter, out V smallestVal) where V : IComparable
	{
		return (T)null;
	}

	[Token(Token = "0x6001FF7")]
	public static T Smallest<T, V>(this List<T> list, Func<T, V> valueGetter, out V smallestVal) where V : IComparable
	{
		return (T)null;
	}

	[Token(Token = "0x6001FF8")]
	public static void ForEach<T>(this List<T> list, Func<T, T> action)
	{
	}
}
[Token(Token = "0x200049C")]
public static class ColliderExtensions
{
	[Token(Token = "0x6002007")]
	public static T GetComponentInMeOrAttachedRigidBody<T>(this Collider col) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0x1A2EB28", Offset = "0x1A2EB28", VA = "0x1A2EB28")]
	public static UnityEngine.Component GetComponentInMeOrAttachedRigidBody(this Collider col, Type t)
	{
		return null;
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0x1A2EC2C", Offset = "0x1A2EC2C", VA = "0x1A2EC2C")]
	public static UnityEngine.Component GetComponentInMeOrAttachedRigidBody(this Collider col, string s)
	{
		return null;
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0x1A2ED30", Offset = "0x1A2ED30", VA = "0x1A2ED30")]
	public static void SetAllEnabled(this List<Collider> list, bool isEnabled)
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0x1A2EE44", Offset = "0x1A2EE44", VA = "0x1A2EE44")]
	public static void SetAllEnabled(this Collider[] list, bool isEnabled)
	{
	}
}
[Token(Token = "0x200049D")]
public static class MMGameObjectExtensions
{
	[Token(Token = "0x600200C")]
	[Address(RVA = "0x1AADBB4", Offset = "0x1AADBB4", VA = "0x1AADBB4")]
	public static GameObject Clone(this GameObject go, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600200D")]
	public static T GetOrAddComponent<T>(this GameObject go) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0x1AADC70", Offset = "0x1AADC70", VA = "0x1AADC70")]
	public static UnityEngine.Component GetOrAddComponent(this GameObject go, Type t)
	{
		return null;
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0x1AADD2C", Offset = "0x1AADD2C", VA = "0x1AADD2C")]
	public static bool IsChildOf(this GameObject go, Type componentType)
	{
		return default(bool);
	}

	[Token(Token = "0x6002010")]
	public static T GetComponentInParents<T>(this GameObject target) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6002011")]
	public static List<T> GetComponentsInChildrenEvenIfInactive<T>(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0x1AADD60", Offset = "0x1AADD60", VA = "0x1AADD60")]
	public static void SetLayerRecursive(this GameObject target, int layer)
	{
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0x1AADE24", Offset = "0x1AADE24", VA = "0x1AADE24")]
	public static Vector3 GetCenter(this GameObject me)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0x1AADF40", Offset = "0x1AADF40", VA = "0x1AADF40")]
	public static void SetAllActive(this GameObject[] array, bool active)
	{
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0x1AAE030", Offset = "0x1AAE030", VA = "0x1AAE030")]
	public static void SetAllActive(this List<GameObject> list, bool active)
	{
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0x1AAE144", Offset = "0x1AAE144", VA = "0x1AAE144")]
	public static void SetAllActive(this UnityEngine.Component[] array, bool active)
	{
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0x1AAE240", Offset = "0x1AAE240", VA = "0x1AAE240")]
	public static void SetAllMaterialsColour(this GameObject me, Color col)
	{
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0x1AAE390", Offset = "0x1AAE390", VA = "0x1AAE390")]
	public static void SetAllMaterials(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0x1AAE3FC", Offset = "0x1AAE3FC", VA = "0x1AAE3FC")]
	public static void SetAllSharedMaterials(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x600201A")]
	[Address(RVA = "0x1AAE468", Offset = "0x1AAE468", VA = "0x1AAE468")]
	public static void AddSharedMaterialToEnd(this GameObject me, Material newMat)
	{
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0x1AAE4D4", Offset = "0x1AAE4D4", VA = "0x1AAE4D4")]
	public static void RemoveSharedMaterialFromEnd(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x600201C")]
	[Address(RVA = "0x1AAE540", Offset = "0x1AAE540", VA = "0x1AAE540")]
	public static void SetTagRecursive(this GameObject go, string tag)
	{
	}

	[Token(Token = "0x600201D")]
	[Address(RVA = "0x1AAE570", Offset = "0x1AAE570", VA = "0x1AAE570")]
	public static void SetTagRecursive(this Transform tr, string tag)
	{
	}

	[Token(Token = "0x600201E")]
	[Address(RVA = "0x1AAE600", Offset = "0x1AAE600", VA = "0x1AAE600")]
	public static Bounds GetBounds(this GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600201F")]
	[Address(RVA = "0x1AAE714", Offset = "0x1AAE714", VA = "0x1AAE714")]
	public static void PlayAllChildParticleSystems(this GameObject go)
	{
	}

	[Token(Token = "0x6002020")]
	[Address(RVA = "0x1AAE7BC", Offset = "0x1AAE7BC", VA = "0x1AAE7BC")]
	public static void StopAllChildParticleSystems(this GameObject go)
	{
	}
}
[Token(Token = "0x200049E")]
public static class MonoBehaviorExtensions
{
	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<UnityEngine.Component> Components;

	[Token(Token = "0x6002021")]
	[Address(RVA = "0x1ABDECC", Offset = "0x1ABDECC", VA = "0x1ABDECC")]
	public static void SetAllEnabled(this MonoBehaviour[] array, bool isEnabled)
	{
	}

	[Token(Token = "0x6002022")]
	[Address(RVA = "0x1ABDFBC", Offset = "0x1ABDFBC", VA = "0x1ABDFBC")]
	public static void SetAllEnabled(this List<MonoBehaviour> list, bool isEnabled)
	{
	}

	[Token(Token = "0x6002023")]
	[Address(RVA = "0x1ABE0D0", Offset = "0x1ABE0D0", VA = "0x1ABE0D0")]
	public static void SetAllGameObjectsActive(this UnityEngine.Component[] array, bool isActive)
	{
	}

	[Token(Token = "0x6002024")]
	public static void SetAllGameObjectsActive<T>(this List<T> list, bool isActive) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6002025")]
	public static void SetAllGameObjectsActive<T>(this Dictionary<int, T> list, bool isActive) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6002026")]
	public static int CountActiveInHierarchy<T>(this List<T> list, bool isActive) where T : UnityEngine.Component
	{
		return default(int);
	}

	[Token(Token = "0x6002027")]
	public static bool Fetch<T>(this MonoBehaviour me, out T obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002028")]
	public static bool FetchInChildren<T>(this MonoBehaviour me, out T obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002029")]
	public static bool FetchFromParents<T>(this MonoBehaviour me, out T obj) where T : UnityEngine.Component
	{
		return default(bool);
	}
}
[Token(Token = "0x200049F")]
public static class ParticleSystemExtensions
{
	[Token(Token = "0x600202B")]
	[Address(RVA = "0x15A5754", Offset = "0x15A5754", VA = "0x15A5754")]
	public static void PlayAll(this ParticleSystem[] array)
	{
	}

	[Token(Token = "0x600202C")]
	[Address(RVA = "0x15A5838", Offset = "0x15A5838", VA = "0x15A5838")]
	public static void StopAll(this ParticleSystem[] array)
	{
	}

	[Token(Token = "0x600202D")]
	[Address(RVA = "0x15A591C", Offset = "0x15A591C", VA = "0x15A591C")]
	public static void PlayAll(this List<ParticleSystem> list)
	{
	}

	[Token(Token = "0x600202E")]
	[Address(RVA = "0x15A5A24", Offset = "0x15A5A24", VA = "0x15A5A24")]
	public static void StopAll(this List<ParticleSystem> list)
	{
	}
}
[Token(Token = "0x20004A0")]
public static class RectExtensions
{
	[Token(Token = "0x600202F")]
	[Address(RVA = "0x1886D84", Offset = "0x1886D84", VA = "0x1886D84")]
	public static Rect MoveLeftEdge(this Rect r, float amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x6002030")]
	[Address(RVA = "0x1886DF0", Offset = "0x1886DF0", VA = "0x1886DF0")]
	public static Rect Expand(this Rect r, float amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x6002031")]
	[Address(RVA = "0x1886E9C", Offset = "0x1886E9C", VA = "0x1886E9C")]
	public static Rect Expand(this Rect r, Vector2 amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x6002032")]
	[Address(RVA = "0x1886F58", Offset = "0x1886F58", VA = "0x1886F58")]
	public static bool ContainsCompletely(this Rect r, Rect other)
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A1")]
public static class RendererExtensions
{
	[Token(Token = "0x6002033")]
	[Address(RVA = "0x1889E88", Offset = "0x1889E88", VA = "0x1889E88")]
	public static void SetAllMaterialsColour(this Renderer[] rs, Color col)
	{
	}

	[Token(Token = "0x6002034")]
	[Address(RVA = "0x1889F9C", Offset = "0x1889F9C", VA = "0x1889F9C")]
	public static void SetAllMaterials(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0x188A1FC", Offset = "0x188A1FC", VA = "0x188A1FC")]
	public static void SetAllSharedMaterials(this Renderer[] rs, Material newMat, int materialIdx)
	{
	}

	[Token(Token = "0x6002036")]
	[Address(RVA = "0x188A3D8", Offset = "0x188A3D8", VA = "0x188A3D8")]
	public static void SetAllSharedMaterials(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002037")]
	[Address(RVA = "0x188A55C", Offset = "0x188A55C", VA = "0x188A55C")]
	public static void AddSharedMaterialToEnd(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002038")]
	[Address(RVA = "0x188A85C", Offset = "0x188A85C", VA = "0x188A85C")]
	public static void RemoveSharedMaterialFromEnd(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002039")]
	[Address(RVA = "0x188AAD0", Offset = "0x188AAD0", VA = "0x188AAD0")]
	public static void SetAllMaterialsColour(this List<Renderer> rs, Color col)
	{
	}

	[Token(Token = "0x600203A")]
	[Address(RVA = "0x188AC20", Offset = "0x188AC20", VA = "0x188AC20")]
	public static void SetAllSharedMaterials(this List<Renderer> rs, Material newMat)
	{
	}

	[Token(Token = "0x600203B")]
	[Address(RVA = "0x188ADE4", Offset = "0x188ADE4", VA = "0x188ADE4")]
	public static void SetAllMaterials(this List<Renderer> rs, Material newMat)
	{
	}
}
[Token(Token = "0x20004A2")]
public static class MMSpriteExtensions
{
	[Token(Token = "0x600203C")]
	[Address(RVA = "0x1AAE864", Offset = "0x1AAE864", VA = "0x1AAE864")]
	public static float MaxDimension(this Sprite s)
	{
		return default(float);
	}
}
[Token(Token = "0x20004A3")]
public static class StringExtensions
{
	[Token(Token = "0x600203D")]
	[Address(RVA = "0x187CFA4", Offset = "0x187CFA4", VA = "0x187CFA4")]
	public static int Count(this string str, char c)
	{
		return default(int);
	}

	[Token(Token = "0x600203E")]
	[Address(RVA = "0x187D014", Offset = "0x187D014", VA = "0x187D014")]
	public static bool AnyContains(this string[] array, string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600203F")]
	[Address(RVA = "0x187D0A0", Offset = "0x187D0A0", VA = "0x187D0A0")]
	public static bool AnyContains(this List<string> list, string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6002040")]
	[Address(RVA = "0x187D158", Offset = "0x187D158", VA = "0x187D158")]
	public static bool ContainsAny(this string str, string[] array, bool ignoreCase = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6002041")]
	[Address(RVA = "0x187D200", Offset = "0x187D200", VA = "0x187D200")]
	public static bool ContainsAny(this string str, List<string> list, bool ignoreCase = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6002042")]
	[Address(RVA = "0x187D2CC", Offset = "0x187D2CC", VA = "0x187D2CC")]
	public static bool ContainsAll(this string str, string[] array, bool ignoreCase = false)
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A4")]
public static class TransformExtensions
{
	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE720", Offset = "0x8EE720")]
	private sealed class <IterateHierarchyInclusive>d__18 : IEnumerable<Transform>, IEnumerable, IEnumerator<Transform>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform <>2__current;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform <>3__target;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator<Transform> <>7__wrap1;

		[Token(Token = "0x170003C0")]
		private Transform System.Collections.Generic.IEnumerator<UnityEngine.Transform>.Current
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x1591088", Offset = "0x1591088", VA = "0x1591088", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x15910D0", Offset = "0x15910D0", VA = "0x15910D0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1590CA8", Offset = "0x1590CA8", VA = "0x1590CA8")]
		[DebuggerHidden]
		public <IterateHierarchyInclusive>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x1590CE0", Offset = "0x1590CE0", VA = "0x1590CE0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x1590DB8", Offset = "0x1590DB8", VA = "0x1590DB8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1590CFC", Offset = "0x1590CFC", VA = "0x1590CFC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1591090", Offset = "0x1591090", VA = "0x1591090", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x15910D8", Offset = "0x15910D8", VA = "0x15910D8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1591188", Offset = "0x1591188", VA = "0x1591188", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE730", Offset = "0x8EE730")]
	private sealed class <IterateHierarchy>d__19 : IEnumerable<Transform>, IEnumerable, IEnumerator<Transform>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform <>2__current;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform <>3__target;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator <>7__wrap1;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <t>5__3;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator<Transform> <>7__wrap3;

		[Token(Token = "0x170003C2")]
		private Transform System.Collections.Generic.IEnumerator<UnityEngine.Transform>.Current
		{
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x1590BA4", Offset = "0x1590BA4", VA = "0x1590BA4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x1590BEC", Offset = "0x1590BEC", VA = "0x1590BEC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x15904E4", Offset = "0x15904E4", VA = "0x15904E4")]
		[DebuggerHidden]
		public <IterateHierarchy>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x159051C", Offset = "0x159051C", VA = "0x159051C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1590728", Offset = "0x1590728", VA = "0x1590728", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x1590660", Offset = "0x1590660", VA = "0x1590660")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x15905A4", Offset = "0x15905A4", VA = "0x15905A4")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1590BAC", Offset = "0x1590BAC", VA = "0x1590BAC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1590BF4", Offset = "0x1590BF4", VA = "0x1590BF4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1590CA4", Offset = "0x1590CA4", VA = "0x1590CA4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x6002043")]
	[Address(RVA = "0x1790870", Offset = "0x1790870", VA = "0x1790870")]
	public static void SetToIdentityLocal(this Transform target)
	{
	}

	[Token(Token = "0x6002044")]
	[Address(RVA = "0x1787D40", Offset = "0x1787D40", VA = "0x1787D40")]
	public static void SetToIdentity(this Transform target)
	{
	}

	[Token(Token = "0x6002045")]
	[Address(RVA = "0x17908CC", Offset = "0x17908CC", VA = "0x17908CC")]
	public static void SetPosRot(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002046")]
	[Address(RVA = "0x1790924", Offset = "0x1790924", VA = "0x1790924")]
	public static void MatchProperties(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002047")]
	[Address(RVA = "0x1790994", Offset = "0x1790994", VA = "0x1790994")]
	public static void MatchParentAndProperties(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002048")]
	[Address(RVA = "0x1788E78", Offset = "0x1788E78", VA = "0x1788E78")]
	public static void ReparentAndIdentity(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002049")]
	[Address(RVA = "0x17909E4", Offset = "0x17909E4", VA = "0x17909E4")]
	public static void LerpPosRot(this Transform target, Transform source, float lerpRate)
	{
	}

	[Token(Token = "0x600204A")]
	[Address(RVA = "0x1790B24", Offset = "0x1790B24", VA = "0x1790B24")]
	public static Bounds TransformBounds(this Transform target, Bounds bounds)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600204B")]
	[Address(RVA = "0x1790BCC", Offset = "0x1790BCC", VA = "0x1790BCC")]
	public static Bounds InverseTransformBounds(this Transform target, Bounds bounds)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0x1790C74", Offset = "0x1790C74", VA = "0x1790C74")]
	public static void MoveTowards(this Transform t, Vector3 target, float dist)
	{
	}

	[Token(Token = "0x600204D")]
	[Address(RVA = "0x1790D5C", Offset = "0x1790D5C", VA = "0x1790D5C")]
	public static void ScaleAround(this Transform target, Vector3 localScale, Vector3 localPivot)
	{
	}

	[Token(Token = "0x600204E")]
	[Address(RVA = "0x1790E38", Offset = "0x1790E38", VA = "0x1790E38")]
	public static float DistanceTo(this Transform target, Transform dest)
	{
		return default(float);
	}

	[Token(Token = "0x600204F")]
	[Address(RVA = "0x1790EC0", Offset = "0x1790EC0", VA = "0x1790EC0")]
	public static float DistanceSqTo(this Transform target, Transform dest)
	{
		return default(float);
	}

	[Token(Token = "0x6002050")]
	[Address(RVA = "0x178BD64", Offset = "0x178BD64", VA = "0x178BD64")]
	public static Transform FindChildRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002051")]
	[Address(RVA = "0x1790F48", Offset = "0x1790F48", VA = "0x1790F48")]
	public static Transform FindChildContainingRecursive(this Transform target, string contains)
	{
		return null;
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0x1791054", Offset = "0x1791054", VA = "0x1791054")]
	public static Transform FindActiveChildRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002053")]
	[Address(RVA = "0x1791178", Offset = "0x1791178", VA = "0x1791178")]
	public static Transform FindActiveChildContainingRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0x17912A0", Offset = "0x17912A0", VA = "0x17912A0")]
	public static List<Transform> FindChildrenContainingRecursive(this Transform target, string partOfName, [Optional] List<Transform> found)
	{
		return null;
	}

	[Token(Token = "0x6002055")]
	[Address(RVA = "0x17913CC", Offset = "0x17913CC", VA = "0x17913CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907204", Offset = "0x907204")]
	public static IEnumerable<Transform> IterateHierarchyInclusive(this Transform target)
	{
		return null;
	}

	[Token(Token = "0x6002056")]
	[Address(RVA = "0x1791444", Offset = "0x1791444", VA = "0x1791444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907274", Offset = "0x907274")]
	public static IEnumerable<Transform> IterateHierarchy(this Transform target)
	{
		return null;
	}

	[Token(Token = "0x6002057")]
	[Address(RVA = "0x17914BC", Offset = "0x17914BC", VA = "0x17914BC")]
	public static void SetHideFlagsRecursively(this Transform t, HideFlags flags)
	{
	}

	[Token(Token = "0x6002058")]
	[Address(RVA = "0x1791540", Offset = "0x1791540", VA = "0x1791540")]
	public static bool IsChildOf(this Transform target, Type componentType)
	{
		return default(bool);
	}

	[Token(Token = "0x6002059")]
	public static T GetComponentInThisOrParents<T>(this Transform target)
	{
		return (T)null;
	}

	[Token(Token = "0x600205A")]
	public static T GetComponentInParents<T>(this Transform target) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x600205B")]
	[Address(RVA = "0x1791648", Offset = "0x1791648", VA = "0x1791648")]
	public static string TreeAsString(this Transform transf)
	{
		return null;
	}

	[Token(Token = "0x600205C")]
	[Address(RVA = "0x179172C", Offset = "0x179172C", VA = "0x179172C")]
	public static bool IsChildOf(this Transform thisTrans, Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600205D")]
	[Address(RVA = "0x1791838", Offset = "0x1791838", VA = "0x1791838")]
	public static Transform AddChild(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x600205E")]
	[Address(RVA = "0x17918F4", Offset = "0x17918F4", VA = "0x17918F4")]
	public static Transform ReplaceChildWithNew(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x600205F")]
	public static void EnsureOnlyXChildrenOfType<T>(this Transform transf, int count, GameObject prefab)
	{
	}
}
[Token(Token = "0x20004A7")]
public static class VectorExtensions
{
	[Token(Token = "0x6002073")]
	[Address(RVA = "0x19DFFB4", Offset = "0x19DFFB4", VA = "0x19DFFB4")]
	public static Vector3 Randomized(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002074")]
	[Address(RVA = "0x19E0020", Offset = "0x19E0020", VA = "0x19E0020")]
	public static Vector3 ClampMagnitude(this Vector3 v, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002075")]
	[Address(RVA = "0x19E00AC", Offset = "0x19E00AC", VA = "0x19E00AC")]
	public static Vector3 MoveTowards(this Vector3 v, Vector3 target, float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002076")]
	[Address(RVA = "0x19E011C", Offset = "0x19E011C", VA = "0x19E011C")]
	public static Vector3 Div(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002077")]
	[Address(RVA = "0x19E012C", Offset = "0x19E012C", VA = "0x19E012C")]
	public static Vector3 Mul(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002078")]
	[Address(RVA = "0x19E013C", Offset = "0x19E013C", VA = "0x19E013C")]
	public static Vector3 Abs(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002079")]
	[Address(RVA = "0x19E014C", Offset = "0x19E014C", VA = "0x19E014C")]
	public static Vector3 Safe(this Vector3 v, Vector3 fallback, out bool fix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600207A")]
	[Address(RVA = "0x19E01E0", Offset = "0x19E01E0", VA = "0x19E01E0")]
	public static Vector3 Quantize(this Vector3 v, float q)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20004A8")]
public static class InternetVectorExtensions
{
	[Token(Token = "0x600207B")]
	[Address(RVA = "0x16D8EF8", Offset = "0x16D8EF8", VA = "0x16D8EF8")]
	public static Vector2 xy(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600207C")]
	[Address(RVA = "0x16D8EFC", Offset = "0x16D8EFC", VA = "0x16D8EFC")]
	public static Vector2 xz(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600207D")]
	[Address(RVA = "0x16D8F04", Offset = "0x16D8F04", VA = "0x16D8F04")]
	public static Vector2 yx(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600207E")]
	[Address(RVA = "0x16D8F14", Offset = "0x16D8F14", VA = "0x16D8F14")]
	public static Vector2 yz(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600207F")]
	[Address(RVA = "0x16D8F20", Offset = "0x16D8F20", VA = "0x16D8F20")]
	public static Vector2 zx(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002080")]
	[Address(RVA = "0x16D8F2C", Offset = "0x16D8F2C", VA = "0x16D8F2C")]
	public static Vector2 zy(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002081")]
	[Address(RVA = "0x16D8F34", Offset = "0x16D8F34", VA = "0x16D8F34")]
	public static Vector3 xxx(this Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002082")]
	[Address(RVA = "0x16CC218", Offset = "0x16CC218", VA = "0x16CC218")]
	public static Vector3 SetX(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002083")]
	[Address(RVA = "0x16D8F40", Offset = "0x16D8F40", VA = "0x16D8F40")]
	public static Vector3 SetY(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002084")]
	[Address(RVA = "0x16D8F48", Offset = "0x16D8F48", VA = "0x16D8F48")]
	public static Vector3 SetZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002085")]
	[Address(RVA = "0x16D8F50", Offset = "0x16D8F50", VA = "0x16D8F50")]
	public static Vector3 SetXY(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002086")]
	[Address(RVA = "0x16D8F5C", Offset = "0x16D8F5C", VA = "0x16D8F5C")]
	public static Vector3 SetYZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002087")]
	[Address(RVA = "0x16D8F68", Offset = "0x16D8F68", VA = "0x16D8F68")]
	public static Vector3 SetXZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002088")]
	[Address(RVA = "0x16D8F74", Offset = "0x16D8F74", VA = "0x16D8F74")]
	public static Vector3 xy_(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002089")]
	[Address(RVA = "0x16D8F78", Offset = "0x16D8F78", VA = "0x16D8F78")]
	public static Vector3 x_y(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208A")]
	[Address(RVA = "0x16D8F88", Offset = "0x16D8F88", VA = "0x16D8F88")]
	public static Vector3 _xy(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208B")]
	[Address(RVA = "0x16D8F9C", Offset = "0x16D8F9C", VA = "0x16D8F9C")]
	public static Vector3 yx_(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208C")]
	[Address(RVA = "0x16D8FAC", Offset = "0x16D8FAC", VA = "0x16D8FAC")]
	public static Vector3 y_x(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208D")]
	[Address(RVA = "0x16D8FC0", Offset = "0x16D8FC0", VA = "0x16D8FC0")]
	public static Vector3 _yx(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600208E")]
	[Address(RVA = "0x16D8FD0", Offset = "0x16D8FD0", VA = "0x16D8FD0")]
	public static Vector2 xy(this Vector4 v2)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600208F")]
	[Address(RVA = "0x16D8FD4", Offset = "0x16D8FD4", VA = "0x16D8FD4")]
	public static Vector3 xyz(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002090")]
	[Address(RVA = "0x16D8FD8", Offset = "0x16D8FD8", VA = "0x16D8FD8")]
	public static Vector3 xxx(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002091")]
	[Address(RVA = "0x16D8FE4", Offset = "0x16D8FE4", VA = "0x16D8FE4")]
	public static Vector3 yyy(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002092")]
	[Address(RVA = "0x16D8FF0", Offset = "0x16D8FF0", VA = "0x16D8FF0")]
	public static Vector3 zzz(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002093")]
	[Address(RVA = "0x16D8FFC", Offset = "0x16D8FFC", VA = "0x16D8FFC")]
	public static Vector3 www(this Vector4 v2)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20004A9")]
public class Colours
{
	[Token(Token = "0x170003C4")]
	public static Color AliceBlue
	{
		[Token(Token = "0x6002094")]
		[Address(RVA = "0x1A2F6E0", Offset = "0x1A2F6E0", VA = "0x1A2F6E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C5")]
	public static Color LightSalmon
	{
		[Token(Token = "0x6002095")]
		[Address(RVA = "0x1A2F724", Offset = "0x1A2F724", VA = "0x1A2F724")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C6")]
	public static Color AntiqueWhite
	{
		[Token(Token = "0x6002096")]
		[Address(RVA = "0x1A2F768", Offset = "0x1A2F768", VA = "0x1A2F768")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C7")]
	public static Color LightSeaGreen
	{
		[Token(Token = "0x6002097")]
		[Address(RVA = "0x1A2F7B0", Offset = "0x1A2F7B0", VA = "0x1A2F7B0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C8")]
	public static Color Aqua
	{
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x1A2F7F8", Offset = "0x1A2F7F8", VA = "0x1A2F7F8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C9")]
	public static Color LightSkyBlue
	{
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x1A2F834", Offset = "0x1A2F834", VA = "0x1A2F834")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CA")]
	public static Color Aquamarine
	{
		[Token(Token = "0x600209A")]
		[Address(RVA = "0x1A2F87C", Offset = "0x1A2F87C", VA = "0x1A2F87C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CB")]
	public static Color LightSlateGray
	{
		[Token(Token = "0x600209B")]
		[Address(RVA = "0x1A2F8C0", Offset = "0x1A2F8C0", VA = "0x1A2F8C0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CC")]
	public static Color Azure
	{
		[Token(Token = "0x600209C")]
		[Address(RVA = "0x1A2F908", Offset = "0x1A2F908", VA = "0x1A2F908")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CD")]
	public static Color LightSteelBlue
	{
		[Token(Token = "0x600209D")]
		[Address(RVA = "0x1A2F948", Offset = "0x1A2F948", VA = "0x1A2F948")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CE")]
	public static Color Beige
	{
		[Token(Token = "0x600209E")]
		[Address(RVA = "0x1A2F990", Offset = "0x1A2F990", VA = "0x1A2F990")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CF")]
	public static Color LightYellow
	{
		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1A2F9D4", Offset = "0x1A2F9D4", VA = "0x1A2F9D4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D0")]
	public static Color Bisque
	{
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1A2FA14", Offset = "0x1A2FA14", VA = "0x1A2FA14")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D1")]
	public static Color Lime
	{
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1A2FA58", Offset = "0x1A2FA58", VA = "0x1A2FA58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D2")]
	public static Color Black
	{
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1A2FA94", Offset = "0x1A2FA94", VA = "0x1A2FA94")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D3")]
	public static Color LimeGreen
	{
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1A2FAD0", Offset = "0x1A2FAD0", VA = "0x1A2FAD0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D4")]
	public static Color BlanchedAlmond
	{
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1A2FB14", Offset = "0x1A2FB14", VA = "0x1A2FB14")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D5")]
	public static Color Linen
	{
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1A2FB54", Offset = "0x1A2FB54", VA = "0x1A2FB54")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D6")]
	public static Color Blue
	{
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1A2FB9C", Offset = "0x1A2FB9C", VA = "0x1A2FB9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D7")]
	public static Color Magenta
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1A2FBD8", Offset = "0x1A2FBD8", VA = "0x1A2FBD8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D8")]
	public static Color BlueViolet
	{
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1A2FC14", Offset = "0x1A2FC14", VA = "0x1A2FC14")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D9")]
	public static Color Maroon
	{
		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1A2FC5C", Offset = "0x1A2FC5C", VA = "0x1A2FC5C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DA")]
	public static Color Brown
	{
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1A2FC9C", Offset = "0x1A2FC9C", VA = "0x1A2FC9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DB")]
	public static Color MediumAquamarine
	{
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x1A2FCE0", Offset = "0x1A2FCE0", VA = "0x1A2FCE0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DC")]
	public static Color BurlyWood
	{
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1A2FD28", Offset = "0x1A2FD28", VA = "0x1A2FD28")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DD")]
	public static Color MediumBlue
	{
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x1A2FD70", Offset = "0x1A2FD70", VA = "0x1A2FD70")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DE")]
	public static Color CadetBlue
	{
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x1A2FDB0", Offset = "0x1A2FDB0", VA = "0x1A2FDB0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DF")]
	public static Color MediumOrchid
	{
		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x1A2FDF8", Offset = "0x1A2FDF8", VA = "0x1A2FDF8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E0")]
	public static Color Chartreuse
	{
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x1A2FE40", Offset = "0x1A2FE40", VA = "0x1A2FE40")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E1")]
	public static Color MediumPurple
	{
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1A2FE80", Offset = "0x1A2FE80", VA = "0x1A2FE80")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E2")]
	public static Color Chocolate
	{
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x1A2FEC8", Offset = "0x1A2FEC8", VA = "0x1A2FEC8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E3")]
	public static Color MediumSeaGreen
	{
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x1A2FF10", Offset = "0x1A2FF10", VA = "0x1A2FF10")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E4")]
	public static Color Coral
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1A2FF58", Offset = "0x1A2FF58", VA = "0x1A2FF58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E5")]
	public static Color MediumSlateBlue
	{
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1A2FF9C", Offset = "0x1A2FF9C", VA = "0x1A2FF9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E6")]
	public static Color CornflowerBlue
	{
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1A2FFE4", Offset = "0x1A2FFE4", VA = "0x1A2FFE4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E7")]
	public static Color MediumSpringGreen
	{
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1A3002C", Offset = "0x1A3002C", VA = "0x1A3002C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E8")]
	public static Color Cornsilk
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1A30070", Offset = "0x1A30070", VA = "0x1A30070")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E9")]
	public static Color MediumTurquoise
	{
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1A300B4", Offset = "0x1A300B4", VA = "0x1A300B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EA")]
	public static Color Crimson
	{
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1A300FC", Offset = "0x1A300FC", VA = "0x1A300FC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EB")]
	public static Color MediumVioletRed
	{
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1A30144", Offset = "0x1A30144", VA = "0x1A30144")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EC")]
	public static Color Cyan
	{
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1A3018C", Offset = "0x1A3018C", VA = "0x1A3018C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003ED")]
	public static Color MidnightBlue
	{
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1A301C8", Offset = "0x1A301C8", VA = "0x1A301C8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EE")]
	public static Color DarkBlue
	{
		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1A3020C", Offset = "0x1A3020C", VA = "0x1A3020C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EF")]
	public static Color MintCream
	{
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1A3024C", Offset = "0x1A3024C", VA = "0x1A3024C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F0")]
	public static Color DarkCyan
	{
		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1A30290", Offset = "0x1A30290", VA = "0x1A30290")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F1")]
	public static Color MistyRose
	{
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1A302D0", Offset = "0x1A302D0", VA = "0x1A302D0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F2")]
	public static Color DarkGoldenrod
	{
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1A30314", Offset = "0x1A30314", VA = "0x1A30314")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F3")]
	public static Color Moccasin
	{
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1A3035C", Offset = "0x1A3035C", VA = "0x1A3035C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F4")]
	public static Color DarkGray
	{
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1A303A0", Offset = "0x1A303A0", VA = "0x1A303A0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F5")]
	public static Color NavajoWhite
	{
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1A303E0", Offset = "0x1A303E0", VA = "0x1A303E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F6")]
	public static Color DarkGreen
	{
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1A30424", Offset = "0x1A30424", VA = "0x1A30424")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F7")]
	public static Color Navy
	{
		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1A30464", Offset = "0x1A30464", VA = "0x1A30464")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F8")]
	public static Color DarkKhaki
	{
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1A304A4", Offset = "0x1A304A4", VA = "0x1A304A4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F9")]
	public static Color OldLace
	{
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1A304EC", Offset = "0x1A304EC", VA = "0x1A304EC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FA")]
	public static Color DarkMagena
	{
		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1A30534", Offset = "0x1A30534", VA = "0x1A30534")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FB")]
	public static Color Olive
	{
		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1A30574", Offset = "0x1A30574", VA = "0x1A30574")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FC")]
	public static Color DarkOliveGreen
	{
		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1A305B4", Offset = "0x1A305B4", VA = "0x1A305B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FD")]
	public static Color OliveDrab
	{
		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1A305FC", Offset = "0x1A305FC", VA = "0x1A305FC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FE")]
	public static Color DarkOrange
	{
		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1A30644", Offset = "0x1A30644", VA = "0x1A30644")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FF")]
	public static Color Orange
	{
		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1A30684", Offset = "0x1A30684", VA = "0x1A30684")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000400")]
	public static Color DarkOrchid
	{
		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1A306C4", Offset = "0x1A306C4", VA = "0x1A306C4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000401")]
	public static Color OrangeRed
	{
		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1A3070C", Offset = "0x1A3070C", VA = "0x1A3070C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000402")]
	public static Color DarkRed
	{
		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1A3074C", Offset = "0x1A3074C", VA = "0x1A3074C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000403")]
	public static Color Orchid
	{
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1A3078C", Offset = "0x1A3078C", VA = "0x1A3078C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000404")]
	public static Color DarkSalmon
	{
		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1A307D4", Offset = "0x1A307D4", VA = "0x1A307D4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000405")]
	public static Color PaleGoldenrod
	{
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1A3081C", Offset = "0x1A3081C", VA = "0x1A3081C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000406")]
	public static Color DarkSeaGreen
	{
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1A30864", Offset = "0x1A30864", VA = "0x1A30864")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000407")]
	public static Color PaleGreen
	{
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1A308A8", Offset = "0x1A308A8", VA = "0x1A308A8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000408")]
	public static Color DarkSlateBlue
	{
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1A308EC", Offset = "0x1A308EC", VA = "0x1A308EC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000409")]
	public static Color PaleTurquoise
	{
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1A30934", Offset = "0x1A30934", VA = "0x1A30934")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040A")]
	public static Color DarkSlateGray
	{
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1A30978", Offset = "0x1A30978", VA = "0x1A30978")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040B")]
	public static Color PaleVioletRed
	{
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1A309BC", Offset = "0x1A309BC", VA = "0x1A309BC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040C")]
	public static Color DarkTurquoise
	{
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1A30A04", Offset = "0x1A30A04", VA = "0x1A30A04")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040D")]
	public static Color PapayaWhip
	{
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1A30A48", Offset = "0x1A30A48", VA = "0x1A30A48")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040E")]
	public static Color DarkViolet
	{
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1A30A8C", Offset = "0x1A30A8C", VA = "0x1A30A8C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040F")]
	public static Color PeachPuff
	{
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1A30AD0", Offset = "0x1A30AD0", VA = "0x1A30AD0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000410")]
	public static Color DeepPink
	{
		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1A30B14", Offset = "0x1A30B14", VA = "0x1A30B14")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000411")]
	public static Color Peru
	{
		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1A30B58", Offset = "0x1A30B58", VA = "0x1A30B58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000412")]
	public static Color DeepSkyBlue
	{
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1A30BA0", Offset = "0x1A30BA0", VA = "0x1A30BA0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000413")]
	public static Color Pink
	{
		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x1A30BE0", Offset = "0x1A30BE0", VA = "0x1A30BE0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000414")]
	public static Color DimGray
	{
		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1A30C24", Offset = "0x1A30C24", VA = "0x1A30C24")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000415")]
	public static Color Plum
	{
		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1A30C64", Offset = "0x1A30C64", VA = "0x1A30C64")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000416")]
	public static Color DodgerBlue
	{
		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x1A30CA8", Offset = "0x1A30CA8", VA = "0x1A30CA8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000417")]
	public static Color PowderBlue
	{
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1A30CEC", Offset = "0x1A30CEC", VA = "0x1A30CEC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000418")]
	public static Color Firebrick
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1A30D34", Offset = "0x1A30D34", VA = "0x1A30D34")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000419")]
	public static Color Purple
	{
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1A30D78", Offset = "0x1A30D78", VA = "0x1A30D78")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041A")]
	public static Color FloralWhite
	{
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1A30DB8", Offset = "0x1A30DB8", VA = "0x1A30DB8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041B")]
	public static Color Red
	{
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1A30DFC", Offset = "0x1A30DFC", VA = "0x1A30DFC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041C")]
	public static Color ForestGreen
	{
		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1A30E38", Offset = "0x1A30E38", VA = "0x1A30E38")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041D")]
	public static Color RosyBrown
	{
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1A30E7C", Offset = "0x1A30E7C", VA = "0x1A30E7C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041E")]
	public static Color Fuschia
	{
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1A30EC0", Offset = "0x1A30EC0", VA = "0x1A30EC0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041F")]
	public static Color RoyalBlue
	{
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1A30EFC", Offset = "0x1A30EFC", VA = "0x1A30EFC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000420")]
	public static Color Gainsboro
	{
		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1A30F44", Offset = "0x1A30F44", VA = "0x1A30F44")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000421")]
	public static Color SaddleBrown
	{
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1A30F84", Offset = "0x1A30F84", VA = "0x1A30F84")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000422")]
	public static Color GhostWhite
	{
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1A30FCC", Offset = "0x1A30FCC", VA = "0x1A30FCC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000423")]
	public static Color Salmon
	{
		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1A3100C", Offset = "0x1A3100C", VA = "0x1A3100C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000424")]
	public static Color Gold
	{
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1A31054", Offset = "0x1A31054", VA = "0x1A31054")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000425")]
	public static Color SandyBrown
	{
		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1A31094", Offset = "0x1A31094", VA = "0x1A31094")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000426")]
	public static Color Goldenrod
	{
		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1A310DC", Offset = "0x1A310DC", VA = "0x1A310DC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000427")]
	public static Color SeaGreen
	{
		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1A31124", Offset = "0x1A31124", VA = "0x1A31124")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000428")]
	public static Color Gray
	{
		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1A3116C", Offset = "0x1A3116C", VA = "0x1A3116C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000429")]
	public static Color Seashell
	{
		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1A311AC", Offset = "0x1A311AC", VA = "0x1A311AC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042A")]
	public static Color Green
	{
		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1A311F0", Offset = "0x1A311F0", VA = "0x1A311F0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042B")]
	public static Color Sienna
	{
		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1A31230", Offset = "0x1A31230", VA = "0x1A31230")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042C")]
	public static Color GreenYellow
	{
		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1A31278", Offset = "0x1A31278", VA = "0x1A31278")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042D")]
	public static Color Silver
	{
		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x1A312BC", Offset = "0x1A312BC", VA = "0x1A312BC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042E")]
	public static Color Honeydew
	{
		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1A312FC", Offset = "0x1A312FC", VA = "0x1A312FC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042F")]
	public static Color SkyBlue
	{
		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1A3133C", Offset = "0x1A3133C", VA = "0x1A3133C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000430")]
	public static Color HotPink
	{
		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1A31384", Offset = "0x1A31384", VA = "0x1A31384")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000431")]
	public static Color SlateBlue
	{
		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1A313C8", Offset = "0x1A313C8", VA = "0x1A313C8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000432")]
	public static Color IndianRed
	{
		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1A31410", Offset = "0x1A31410", VA = "0x1A31410")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000433")]
	public static Color SlateGray
	{
		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1A31454", Offset = "0x1A31454", VA = "0x1A31454")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000434")]
	public static Color Indigo
	{
		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1A3149C", Offset = "0x1A3149C", VA = "0x1A3149C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000435")]
	public static Color Snow
	{
		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1A314E0", Offset = "0x1A314E0", VA = "0x1A314E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000436")]
	public static Color Ivory
	{
		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1A31520", Offset = "0x1A31520", VA = "0x1A31520")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000437")]
	public static Color SpringGreen
	{
		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1A31560", Offset = "0x1A31560", VA = "0x1A31560")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000438")]
	public static Color Khaki
	{
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1A315A0", Offset = "0x1A315A0", VA = "0x1A315A0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000439")]
	public static Color SteelBlue
	{
		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1A315E8", Offset = "0x1A315E8", VA = "0x1A315E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043A")]
	public static Color Lavender
	{
		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1A31630", Offset = "0x1A31630", VA = "0x1A31630")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043B")]
	public static Color Tan
	{
		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1A31674", Offset = "0x1A31674", VA = "0x1A31674")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043C")]
	public static Color LavenderBlush
	{
		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1A316BC", Offset = "0x1A316BC", VA = "0x1A316BC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043D")]
	public static Color Teal
	{
		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1A31700", Offset = "0x1A31700", VA = "0x1A31700")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043E")]
	public static Color LawnGreen
	{
		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1A31740", Offset = "0x1A31740", VA = "0x1A31740")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043F")]
	public static Color Thistle
	{
		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1A31784", Offset = "0x1A31784", VA = "0x1A31784")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000440")]
	public static Color LemonChiffon
	{
		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1A317C8", Offset = "0x1A317C8", VA = "0x1A317C8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000441")]
	public static Color Tomato
	{
		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1A3180C", Offset = "0x1A3180C", VA = "0x1A3180C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000442")]
	public static Color LightBlue
	{
		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1A31854", Offset = "0x1A31854", VA = "0x1A31854")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000443")]
	public static Color Turquoise
	{
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1A3189C", Offset = "0x1A3189C", VA = "0x1A3189C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000444")]
	public static Color LightCoral
	{
		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1A318E4", Offset = "0x1A318E4", VA = "0x1A318E4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000445")]
	public static Color Violet
	{
		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1A31928", Offset = "0x1A31928", VA = "0x1A31928")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000446")]
	public static Color LightCyan
	{
		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1A3196C", Offset = "0x1A3196C", VA = "0x1A3196C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000447")]
	public static Color Wheat
	{
		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1A319AC", Offset = "0x1A319AC", VA = "0x1A319AC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000448")]
	public static Color LightGoldenrodYellow
	{
		[Token(Token = "0x6002118")]
		[Address(RVA = "0x1A319F4", Offset = "0x1A319F4", VA = "0x1A319F4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000449")]
	public static Color White
	{
		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1A31A38", Offset = "0x1A31A38", VA = "0x1A31A38")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044A")]
	public static Color LightGreen
	{
		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1A31A74", Offset = "0x1A31A74", VA = "0x1A31A74")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044B")]
	public static Color WhiteSmoke
	{
		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1A31AB8", Offset = "0x1A31AB8", VA = "0x1A31AB8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044C")]
	public static Color LightGray
	{
		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1A31AF8", Offset = "0x1A31AF8", VA = "0x1A31AF8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044D")]
	public static Color Yellow
	{
		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1A31B38", Offset = "0x1A31B38", VA = "0x1A31B38")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044E")]
	public static Color LightPink
	{
		[Token(Token = "0x600211E")]
		[Address(RVA = "0x1A31B74", Offset = "0x1A31B74", VA = "0x1A31B74")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700044F")]
	public static Color YellowGreen
	{
		[Token(Token = "0x600211F")]
		[Address(RVA = "0x1A31BB8", Offset = "0x1A31BB8", VA = "0x1A31BB8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0x1A31C00", Offset = "0x1A31C00", VA = "0x1A31C00")]
	public Colours()
	{
	}
}
[Token(Token = "0x20004AA")]
[ExecuteInEditMode]
public class MPB_Colour : MonoBehaviour
{
	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_materialIndex;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_field;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_colour;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6002121")]
	[Address(RVA = "0x1AAE8EC", Offset = "0x1AAE8EC", VA = "0x1AAE8EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0x1AAE980", Offset = "0x1AAE980", VA = "0x1AAE980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0x1AAEA20", Offset = "0x1AAEA20", VA = "0x1AAEA20")]
	private void Update()
	{
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0x1AAE984", Offset = "0x1AAE984", VA = "0x1AAE984")]
	public void Apply()
	{
	}

	[Token(Token = "0x6002125")]
	[Address(RVA = "0x1AAEA88", Offset = "0x1AAEA88", VA = "0x1AAEA88")]
	public MPB_Colour()
	{
	}
}
[Token(Token = "0x20004AB")]
public class MPB_Texture : MonoBehaviour
{
	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_materialIndex;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9498", Offset = "0x8F9498")]
	public string m_texField;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture m_texture;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture m_textureWas;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_setColour;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F94F0", Offset = "0x8F94F0")]
	public string m_colField;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9528", Offset = "0x8F9528")]
	public Color m_colour;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color m_colourWas;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer _renderer;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6002126")]
	[Address(RVA = "0x1AAEAF4", Offset = "0x1AAEAF4", VA = "0x1AAEAF4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6002127")]
	[Address(RVA = "0x1AAEBF0", Offset = "0x1AAEBF0", VA = "0x1AAEBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002128")]
	[Address(RVA = "0x1AAEAF8", Offset = "0x1AAEAF8", VA = "0x1AAEAF8")]
	public void Apply()
	{
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0x1AAEC8C", Offset = "0x1AAEC8C", VA = "0x1AAEC8C")]
	public MPB_Texture()
	{
	}
}
[Token(Token = "0x20004AC")]
public class InspectorButtonsTest : MonoBehaviour
{
	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE770", Offset = "0x8EE770")]
	private sealed class <DoProcGen>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InspectorButtonsTest <>4__this;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x15FD234", Offset = "0x15FD234", VA = "0x15FD234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x15FD27C", Offset = "0x15FD27C", VA = "0x15FD27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x15FCE98", Offset = "0x15FCE98", VA = "0x15FCE98")]
		[DebuggerHidden]
		public <DoProcGen>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x15FCEC4", Offset = "0x15FCEC4", VA = "0x15FCEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x15FCEC8", Offset = "0x15FCEC8", VA = "0x15FCEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x15FD23C", Offset = "0x15FD23C", VA = "0x15FD23C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ProgressBar]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9560", Offset = "0x8F9560")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9560", Offset = "0x8F9560")]
	public float procgenProgress;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string procGenFeedback;

	[Token(Token = "0x600212A")]
	[Address(RVA = "0x16D14E8", Offset = "0x16D14E8", VA = "0x16D14E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907664", Offset = "0x907664")]
	private IEnumerator DoProcGen()
	{
		return null;
	}

	[Token(Token = "0x600212B")]
	[Address(RVA = "0x16D1560", Offset = "0x16D1560", VA = "0x16D1560")]
	private void ClearWorld()
	{
	}

	[Token(Token = "0x600212C")]
	[Address(RVA = "0x16D1568", Offset = "0x16D1568", VA = "0x16D1568")]
	public InspectorButtonsTest()
	{
	}
}
[Token(Token = "0x20004AE")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MinLimit;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxLimit;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowEditRange;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ShowDebugValues;

	[Token(Token = "0x6002133")]
	[Address(RVA = "0x1AB9BBC", Offset = "0x1AB9BBC", VA = "0x1AB9BBC")]
	public MinMaxAttribute(int min, int max)
	{
	}
}
[Token(Token = "0x20004AF")]
public class ProgressBarAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hideWhenZero;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x6002134")]
	[Address(RVA = "0x192A954", Offset = "0x192A954", VA = "0x192A954")]
	public ProgressBarAttribute()
	{
	}
}
[Token(Token = "0x20004B0")]
public class StatsBarAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueMax;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StatsBarColor color;

	[Token(Token = "0x6002135")]
	[Address(RVA = "0x1876EAC", Offset = "0x1876EAC", VA = "0x1876EAC")]
	public StatsBarAttribute([Optional] string valueMax, StatsBarColor color = StatsBarColor.Red)
	{
	}
}
[Token(Token = "0x20004B1")]
public enum StatsBarColor
{
	[Token(Token = "0x4001A71")]
	Red,
	[Token(Token = "0x4001A72")]
	Pink,
	[Token(Token = "0x4001A73")]
	Orange,
	[Token(Token = "0x4001A74")]
	Yellow,
	[Token(Token = "0x4001A75")]
	Green,
	[Token(Token = "0x4001A76")]
	Blue,
	[Token(Token = "0x4001A77")]
	Indigo,
	[Token(Token = "0x4001A78")]
	Violet,
	[Token(Token = "0x4001A79")]
	White
}
[Token(Token = "0x20004B2")]
public class StatsComponent : MonoBehaviour
{
	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8F964C", Offset = "0x8F964C")]
	public float health;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8F9688", Offset = "0x8F9688")]
	public float mana;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8F96C4", Offset = "0x8F96C4")]
	public float strength;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float statMax;

	[Token(Token = "0x6002136")]
	[Address(RVA = "0x1876EF4", Offset = "0x1876EF4", VA = "0x1876EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002137")]
	[Address(RVA = "0x1876F08", Offset = "0x1876F08", VA = "0x1876F08")]
	private void Update()
	{
	}

	[Token(Token = "0x6002138")]
	[Address(RVA = "0x1876FB4", Offset = "0x1876FB4", VA = "0x1876FB4")]
	public StatsComponent()
	{
	}
}
[Token(Token = "0x20004B3")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EE780", Offset = "0x8EE780")]
public class TestButtonAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonLabel;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string methodName;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isActiveAtRuntime;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isActiveInEditor;

	[Token(Token = "0x6002139")]
	[Address(RVA = "0x1883AD4", Offset = "0x1883AD4", VA = "0x1883AD4")]
	public TestButtonAttribute(string buttonLabel, string methodName, int order = 1)
	{
	}
}
[Token(Token = "0x20004B4")]
public class VMath
{
	[Token(Token = "0x20004B5")]
	public struct Circle
	{
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 c;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float r;

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1597B48", Offset = "0x1597B48", VA = "0x1597B48")]
		public Circle(Vector2 center, float radius)
		{
		}
	}

	[Token(Token = "0x4001A82")]
	public const float MS_2_MPH = 2.2369356f;

	[Token(Token = "0x4001A83")]
	public const float MS_2_KPH = 3.6f;

	[Token(Token = "0x4001A84")]
	public const float KPH_2_MPH = 0.621371f;

	[Token(Token = "0x600213A")]
	[Address(RVA = "0x19DCDBC", Offset = "0x19DCDBC", VA = "0x19DCDBC")]
	public static Vector3 Bezier(Vector3 ptA, Vector3 ptB, Vector3 ptC, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600213B")]
	[Address(RVA = "0x19DCEA8", Offset = "0x19DCEA8", VA = "0x19DCEA8")]
	private Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600213C")]
	[Address(RVA = "0x19DCFD4", Offset = "0x19DCFD4", VA = "0x19DCFD4")]
	public static float SignedAngleXZ(Transform from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x600213D")]
	[Address(RVA = "0x19DD080", Offset = "0x19DD080", VA = "0x19DD080")]
	public static bool CircleCircleIntersection(Circle A, Circle B, out Vector2 p1, out Vector2 p2)
	{
		return default(bool);
	}

	[Token(Token = "0x600213E")]
	[Address(RVA = "0x19DD1BC", Offset = "0x19DD1BC", VA = "0x19DD1BC")]
	public static Vector2 LineRectIntersect(Vector2 lineStart, Vector2 lineEnd, Vector2 ra, Vector2 rb, Vector2 rc, Vector2 rd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600213F")]
	[Address(RVA = "0x19DD2B4", Offset = "0x19DD2B4", VA = "0x19DD2B4")]
	private static bool LineLineIntersect(Vector2 l1a, Vector2 l1b, Vector2 l2a, Vector2 l2b, ref Vector2 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6002140")]
	[Address(RVA = "0x19DD340", Offset = "0x19DD340", VA = "0x19DD340")]
	public static float Smoothstep(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6002141")]
	[Address(RVA = "0x19DD378", Offset = "0x19DD378", VA = "0x19DD378")]
	public static float LerpSin(float from, float to, float fraction)
	{
		return default(float);
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0x19DD3D0", Offset = "0x19DD3D0", VA = "0x19DD3D0")]
	public static float LerpSinBounce(float from, float to, float fraction)
	{
		return default(float);
	}

	[Token(Token = "0x6002143")]
	[Address(RVA = "0x19DD434", Offset = "0x19DD434", VA = "0x19DD434")]
	public static Vector3 LerpSinBounce(Vector3 from, Vector3 to, float fraction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002144")]
	[Address(RVA = "0x19DD4D0", Offset = "0x19DD4D0", VA = "0x19DD4D0")]
	public static float Eerp(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6002145")]
	[Address(RVA = "0x19DD518", Offset = "0x19DD518", VA = "0x19DD518")]
	public static float Round(float value, int decimalPlaces)
	{
		return default(float);
	}

	[Token(Token = "0x6002146")]
	[Address(RVA = "0x19DD5C8", Offset = "0x19DD5C8", VA = "0x19DD5C8")]
	public static float Sin01(float angRad)
	{
		return default(float);
	}

	[Token(Token = "0x6002147")]
	[Address(RVA = "0x19DD5E8", Offset = "0x19DD5E8", VA = "0x19DD5E8")]
	public static float Cos01(float angRad)
	{
		return default(float);
	}

	[Token(Token = "0x6002148")]
	[Address(RVA = "0x19DD608", Offset = "0x19DD608", VA = "0x19DD608")]
	public static int Wrap(int v, int minInclusive, int maxExclusive)
	{
		return default(int);
	}

	[Token(Token = "0x6002149")]
	[Address(RVA = "0x19DD628", Offset = "0x19DD628", VA = "0x19DD628")]
	public static float Wrap(float v, float minInclusive, float maxExclusive)
	{
		return default(float);
	}

	[Token(Token = "0x600214A")]
	[Address(RVA = "0x19DD654", Offset = "0x19DD654", VA = "0x19DD654")]
	public static float WrapDegrees(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600214B")]
	[Address(RVA = "0x19DD698", Offset = "0x19DD698", VA = "0x19DD698")]
	public static float WrapDegrees180(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600214C")]
	[Address(RVA = "0x19DD6E4", Offset = "0x19DD6E4", VA = "0x19DD6E4")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600214D")]
	[Address(RVA = "0x19DD764", Offset = "0x19DD764", VA = "0x19DD764")]
	public bool WithinRadius(Vector3 A, Vector3 B, float r)
	{
		return default(bool);
	}

	[Token(Token = "0x600214E")]
	[Address(RVA = "0x19DD7B4", Offset = "0x19DD7B4", VA = "0x19DD7B4")]
	public static float Normalise(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600214F")]
	[Address(RVA = "0x19DD7C8", Offset = "0x19DD7C8", VA = "0x19DD7C8")]
	public static float NormaliseUnclamped(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002150")]
	[Address(RVA = "0x19DD7D8", Offset = "0x19DD7D8", VA = "0x19DD7D8")]
	public static float UnNormalise(float normlisedValue, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002151")]
	[Address(RVA = "0x19DD80C", Offset = "0x19DD80C", VA = "0x19DD80C")]
	public float Propagate(float w, float p, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6002152")]
	[Address(RVA = "0x19DD828", Offset = "0x19DD828", VA = "0x19DD828")]
	public static Vector2 Abs(Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002153")]
	[Address(RVA = "0x19DD844", Offset = "0x19DD844", VA = "0x19DD844")]
	public static Vector3 Abs(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002154")]
	[Address(RVA = "0x19DD86C", Offset = "0x19DD86C", VA = "0x19DD86C")]
	public static Vector3 Mul(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002155")]
	[Address(RVA = "0x19DD87C", Offset = "0x19DD87C", VA = "0x19DD87C")]
	public static Vector3 Div(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002156")]
	[Address(RVA = "0x19DD88C", Offset = "0x19DD88C", VA = "0x19DD88C")]
	public VMath()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B6")]
public class Vector3Range
{
	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Min;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Max;

	[Token(Token = "0x17000452")]
	public Vector3 Range
	{
		[Token(Token = "0x6002158")]
		[Address(RVA = "0x19DEE4C", Offset = "0x19DEE4C", VA = "0x19DEE4C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000453")]
	public Vector3 RandomValue
	{
		[Token(Token = "0x6002159")]
		[Address(RVA = "0x19DEE6C", Offset = "0x19DEE6C", VA = "0x19DEE6C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x19DEED8", Offset = "0x19DEED8", VA = "0x19DEED8")]
	public Vector3Range(Vector3 min, Vector3 max)
	{
	}
}
[Token(Token = "0x20004B7")]
public class CenterOfMassSetter : MonoBehaviour
{
	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_centerOfMass;

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x1A27F24", Offset = "0x1A27F24", VA = "0x1A27F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x1A28024", Offset = "0x1A28024", VA = "0x1A28024")]
	public CenterOfMassSetter()
	{
	}
}
[Token(Token = "0x20004B8")]
public class BitMaskAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type propType;

	[Token(Token = "0x600215D")]
	[Address(RVA = "0x177A85C", Offset = "0x177A85C", VA = "0x177A85C")]
	public BitMaskAttribute(Type aType)
	{
	}
}
[Token(Token = "0x20004B9")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EE7B8", Offset = "0x8EE7B8")]
public class ConditionalHideAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ConditionalSourceField;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HideInInspector;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool HideIfTrue;

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x1A32AB4", Offset = "0x1A32AB4", VA = "0x1A32AB4")]
	public ConditionalHideAttribute(string conditionalSourceField)
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0x1A32B3C", Offset = "0x1A32B3C", VA = "0x1A32B3C")]
	public ConditionalHideAttribute(string conditionalSourceField, bool showInInspector)
	{
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0x1A32BCC", Offset = "0x1A32BCC", VA = "0x1A32BCC")]
	public ConditionalHideAttribute(string conditionalSourceField, bool showInInspector, bool hideIfTrue)
	{
	}
}
[Token(Token = "0x20004BA")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EE7F0", Offset = "0x8EE7F0")]
public class ConditionalShowEnumAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ConditionalSourceField;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ConditionalSourceValue;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HideInInspector;

	[Token(Token = "0x6002161")]
	[Address(RVA = "0x1A32C70", Offset = "0x1A32C70", VA = "0x1A32C70")]
	public ConditionalShowEnumAttribute(string conditionalSourceField, string conditionalSourceValue)
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x1A32D24", Offset = "0x1A32D24", VA = "0x1A32D24")]
	public ConditionalShowEnumAttribute(string conditionalSourceField, string conditionalSourceValue, bool hideInInspector)
	{
	}
}
[Token(Token = "0x20004BB")]
public class DropdownAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ListSourceField;

	[Token(Token = "0x6002163")]
	[Address(RVA = "0x1741A78", Offset = "0x1741A78", VA = "0x1741A78")]
	public DropdownAttribute(string listSourceField)
	{
	}
}
[Token(Token = "0x20004BC")]
public class EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6002164")]
	[Address(RVA = "0x1742B38", Offset = "0x1742B38", VA = "0x1742B38")]
	public EnumFlags()
	{
	}
}
[Token(Token = "0x20004BD")]
public class HighlightAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color col;

	[Token(Token = "0x6002165")]
	[Address(RVA = "0x194ACF4", Offset = "0x194ACF4", VA = "0x194ACF4")]
	public HighlightAttribute(float r = 1f, float g = 0f, float b = 0f)
	{
	}
}
[Token(Token = "0x20004BE")]
public class HighlightDemo : MonoBehaviour
{
	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8F9700", Offset = "0x8F9700")]
	public int Int;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8F971C", Offset = "0x8F971C")]
	public float Float;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8F973C", Offset = "0x8F973C")]
	public float[] Array;

	[Token(Token = "0x6002166")]
	[Address(RVA = "0x194AD64", Offset = "0x194AD64", VA = "0x194AD64")]
	public HighlightDemo()
	{
	}
}
[Token(Token = "0x20004BF")]
public class HighlightIfNullAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color col;

	[Token(Token = "0x6002167")]
	[Address(RVA = "0x194B0B0", Offset = "0x194B0B0", VA = "0x194B0B0")]
	public HighlightIfNullAttribute(float r = 1f, float g = 0f, float b = 0f)
	{
	}
}
[Token(Token = "0x20004C0")]
public class ReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6002168")]
	[Address(RVA = "0x1933C2C", Offset = "0x1933C2C", VA = "0x1933C2C")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x20004C1")]
public class EventTriggerUIButton : Triggerable
{
	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button m_button;

	[Token(Token = "0x6002169")]
	[Address(RVA = "0x174A30C", Offset = "0x174A30C", VA = "0x174A30C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0x174A334", Offset = "0x174A334", VA = "0x174A334")]
	public EventTriggerUIButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20004C2")]
public class Spring
{
	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Vector3 m_anchor;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Vector3 m_endPoint;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_springK;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_springDamp;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_maxLength;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxTimeStep;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_vel;

	[Token(Token = "0x600216B")]
	[Address(RVA = "0x18763CC", Offset = "0x18763CC", VA = "0x18763CC")]
	public void Update()
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0x1876500", Offset = "0x1876500", VA = "0x1876500")]
	public Spring()
	{
	}
}
[Token(Token = "0x20004C3")]
public class DisableAfter : MonoBehaviour
{
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE828", Offset = "0x8EE828")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableAfter <>4__this;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x15EE22C", Offset = "0x15EE22C", VA = "0x15EE22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x15EE274", Offset = "0x15EE274", VA = "0x15EE274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x15EE170", Offset = "0x15EE170", VA = "0x15EE170")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x15EE19C", Offset = "0x15EE19C", VA = "0x15EE19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x15EE1A0", Offset = "0x15EE1A0", VA = "0x15EE1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x15EE234", Offset = "0x15EE234", VA = "0x15EE234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_disableAfterNFrames;

	[Token(Token = "0x600216D")]
	[Address(RVA = "0x173C490", Offset = "0x173C490", VA = "0x173C490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907714", Offset = "0x907714")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0x173C508", Offset = "0x173C508", VA = "0x173C508")]
	public DisableAfter()
	{
	}
}
[Token(Token = "0x20004C5")]
public class Names
{
	[Token(Token = "0x20004C6")]
	public enum Gender
	{
		[Token(Token = "0x4001AA6")]
		Female,
		[Token(Token = "0x4001AA7")]
		Male,
		[Token(Token = "0x4001AA8")]
		Any
	}

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] m_boysNames;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] m_girlsNames;

	[Token(Token = "0x6002175")]
	[Address(RVA = "0x19B1B9C", Offset = "0x19B1B9C", VA = "0x19B1B9C")]
	public static void LoadNames()
	{
	}

	[Token(Token = "0x6002176")]
	[Address(RVA = "0x19B1E08", Offset = "0x19B1E08", VA = "0x19B1E08")]
	public static string GetRandom(Gender gender = Gender.Any, int fromTopN = -1, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6002177")]
	[Address(RVA = "0x19B1F68", Offset = "0x19B1F68", VA = "0x19B1F68")]
	public Names()
	{
	}
}
[Token(Token = "0x20004C7")]
public class WwiseAnimEvent : MonoBehaviour
{
	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_wwiseObj;

	[Token(Token = "0x6002179")]
	[Address(RVA = "0x19EC7F8", Offset = "0x19EC7F8", VA = "0x19EC7F8")]
	public void Start()
	{
	}

	[Token(Token = "0x600217A")]
	[Address(RVA = "0x19EC8A0", Offset = "0x19EC8A0", VA = "0x19EC8A0")]
	public void PostWwiseEvent(string eventName)
	{
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0x19EC918", Offset = "0x19EC918", VA = "0x19EC918")]
	public WwiseAnimEvent()
	{
	}
}
[Token(Token = "0x20004C8")]
public class WwiseAnimEventMultipleSources : MonoBehaviour
{
	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_audioSourceWwiseObjs;

	[Token(Token = "0x600217C")]
	[Address(RVA = "0x19EC920", Offset = "0x19EC920", VA = "0x19EC920")]
	public void PostWwiseEventToSpecificSource(AnimationEvent e)
	{
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0x19ECAD8", Offset = "0x19ECAD8", VA = "0x19ECAD8")]
	public WwiseAnimEventMultipleSources()
	{
	}
}
[Token(Token = "0x20004C9")]
public class WwiseImpact : MonoBehaviour
{
	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_rtpc;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_playSoundEvent;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange m_impulseRange;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_minTimeBetweenTriggers;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_lastTimeTriggered;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_debug;

	[Token(Token = "0x600217E")]
	[Address(RVA = "0x19ECDCC", Offset = "0x19ECDCC", VA = "0x19ECDCC")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600217F")]
	[Address(RVA = "0x19ECF5C", Offset = "0x19ECF5C", VA = "0x19ECF5C")]
	public WwiseImpact()
	{
	}
}
[Serializable]
[Token(Token = "0x20004CA")]
public class WWiseRTPC
{
	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameObj;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange Range;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Value;

	[Token(Token = "0x6002180")]
	[Address(RVA = "0x19EA694", Offset = "0x19EA694", VA = "0x19EA694")]
	public void SetGameObjectIfNull(GameObject ngo)
	{
	}

	[Token(Token = "0x6002181")]
	[Address(RVA = "0x19EA730", Offset = "0x19EA730", VA = "0x19EA730")]
	public void Set(float newValue)
	{
	}

	[Token(Token = "0x6002182")]
	[Address(RVA = "0x19EA7B0", Offset = "0x19EA7B0", VA = "0x19EA7B0")]
	public void SetFromNormalised(float newValue)
	{
	}

	[Token(Token = "0x6002183")]
	[Address(RVA = "0x19EA86C", Offset = "0x19EA86C", VA = "0x19EA86C")]
	public WWiseRTPC()
	{
	}
}
[Token(Token = "0x20004CB")]
public class WwiseRTPCSetter : MonoBehaviour
{
	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_rtpcName;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_audioObj;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange Range;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8F9778", Offset = "0x8F9778")]
	public float m_valueNormalised;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_valueNormalisedLastFrame;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_valueExact;

	[Token(Token = "0x6002184")]
	[Address(RVA = "0x19ED08C", Offset = "0x19ED08C", VA = "0x19ED08C")]
	private void Update()
	{
	}

	[Token(Token = "0x6002185")]
	[Address(RVA = "0x19ED140", Offset = "0x19ED140", VA = "0x19ED140")]
	public WwiseRTPCSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20004CC")]
public class WwiseSwitch
{
	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string SwitchName;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ValueNames;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Value;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GameObj;

	[Token(Token = "0x6002186")]
	[Address(RVA = "0x19ED5C8", Offset = "0x19ED5C8", VA = "0x19ED5C8")]
	public WwiseSwitch(string name, string[] values)
	{
	}

	[Token(Token = "0x6002187")]
	[Address(RVA = "0x19ED618", Offset = "0x19ED618", VA = "0x19ED618")]
	public void SetGameObjectIfNull(GameObject ngo)
	{
	}

	[Token(Token = "0x6002188")]
	[Address(RVA = "0x19ED6B4", Offset = "0x19ED6B4", VA = "0x19ED6B4")]
	public void Set(int id)
	{
	}

	[Token(Token = "0x6002189")]
	[Address(RVA = "0x19ED76C", Offset = "0x19ED76C", VA = "0x19ED76C")]
	public void Set(string newValue)
	{
	}

	[Token(Token = "0x600218A")]
	[Address(RVA = "0x19ED7FC", Offset = "0x19ED7FC", VA = "0x19ED7FC")]
	public void Randomise()
	{
	}
}
[Token(Token = "0x20004CD")]
public class printf : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	private class PersistentMessage
	{
		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3? pos;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string str;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timer;

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1FCC010", Offset = "0x1FCC010", VA = "0x1FCC010")]
		public PersistentMessage()
		{
		}
	}

	[Token(Token = "0x20004CF")]
	private class PositionalMessage
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string str;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pos;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color col;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1FCC018", Offset = "0x1FCC018", VA = "0x1FCC018")]
		public PositionalMessage()
		{
		}
	}

	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE838", Offset = "0x8EE838")]
	private sealed class <ClearAtEndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x1FCB8CC", Offset = "0x1FCB8CC", VA = "0x1FCB8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1FCB914", Offset = "0x1FCB914", VA = "0x1FCB914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1FCB784", Offset = "0x1FCB784", VA = "0x1FCB784")]
		[DebuggerHidden]
		public <ClearAtEndOfFrame>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1FCB7B0", Offset = "0x1FCB7B0", VA = "0x1FCB7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1FCB7B4", Offset = "0x1FCB7B4", VA = "0x1FCB7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1FCB8D4", Offset = "0x1FCB8D4", VA = "0x1FCB8D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE848", Offset = "0x8EE848")]
	private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public printf <>4__this;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <cam>5__2;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x1FCBFC0", Offset = "0x1FCBFC0", VA = "0x1FCBFC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x1FCC008", Offset = "0x1FCC008", VA = "0x1FCC008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1FCB91C", Offset = "0x1FCB91C", VA = "0x1FCB91C")]
		[DebuggerHidden]
		public <Start>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1FCB948", Offset = "0x1FCB948", VA = "0x1FCB948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1FCB94C", Offset = "0x1FCB94C", VA = "0x1FCB94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x1FCBFC8", Offset = "0x1FCBFC8", VA = "0x1FCBFC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static printf Instance;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject ms_instanceObject;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool ms_showInScene;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<PositionalMessage> m_positionalMessages;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<PersistentMessage> ms_logs;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int ms_logCount;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int ms_maxLogs;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ArrayList m_lines;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_allLines;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_allLogs;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_doOnGui;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D m_whiteTex;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GUIStyle m_guiStyle;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Font m_monoFont;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro m_linesLabel;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro m_logsLabel;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material m_AlwaysOnTopMaterial;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material m_DepthTestMaterial;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool messagesAtTop;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F9790", Offset = "0x8F9790")]
	public bool m_showSystemLogs;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F97D8", Offset = "0x8F97D8")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F97D8", Offset = "0x8F97D8")]
	public bool m_showLogs;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F9848", Offset = "0x8F9848")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F9848", Offset = "0x8F9848")]
	public bool m_showWarnings;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F98B8", Offset = "0x8F98B8")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F98B8", Offset = "0x8F98B8")]
	public bool m_showErrors;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Dictionary<LogType, string> LogFormat;

	[Token(Token = "0x600218B")]
	[Address(RVA = "0x1758064", Offset = "0x1758064", VA = "0x1758064")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x9077C4", Offset = "0x9077C4")]
	private static void TogglePrintf()
	{
	}

	[Token(Token = "0x600218C")]
	[Address(RVA = "0x1758168", Offset = "0x1758168", VA = "0x1758168")]
	private static void Instantiate()
	{
	}

	[Token(Token = "0x600218D")]
	[Address(RVA = "0x1758440", Offset = "0x1758440", VA = "0x1758440")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600218E")]
	[Address(RVA = "0x1758530", Offset = "0x1758530", VA = "0x1758530")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x90780C", Offset = "0x90780C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x90780C", Offset = "0x90780C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x90780C", Offset = "0x90780C")]
	public static void Print(string s)
	{
	}

	[Token(Token = "0x600218F")]
	[Address(RVA = "0x1758674", Offset = "0x1758674", VA = "0x1758674")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907890", Offset = "0x907890")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907890", Offset = "0x907890")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907890", Offset = "0x907890")]
	public static void Print(float f)
	{
	}

	[Token(Token = "0x6002190")]
	[Address(RVA = "0x1758678", Offset = "0x1758678", VA = "0x1758678")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907914", Offset = "0x907914")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907914", Offset = "0x907914")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907914", Offset = "0x907914")]
	public static void Print(Vector3 vector, string title = "")
	{
	}

	[Token(Token = "0x6002191")]
	[Address(RVA = "0x1758844", Offset = "0x1758844", VA = "0x1758844")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907998", Offset = "0x907998")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907998", Offset = "0x907998")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907998", Offset = "0x907998")]
	public static void Print(string s, Vector3 p)
	{
	}

	[Token(Token = "0x6002192")]
	[Address(RVA = "0x1758848", Offset = "0x1758848", VA = "0x1758848")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907A1C", Offset = "0x907A1C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907A1C", Offset = "0x907A1C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907A1C", Offset = "0x907A1C")]
	public static void Print(string s, Vector3 p, Vector2 offsetScreenSpace)
	{
	}

	[Token(Token = "0x6002193")]
	[Address(RVA = "0x175884C", Offset = "0x175884C", VA = "0x175884C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907AA0", Offset = "0x907AA0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907AA0", Offset = "0x907AA0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907AA0", Offset = "0x907AA0")]
	public static void Print(string s, Vector3 p, Color c, Vector2 offsetScreenSpace)
	{
	}

	[Token(Token = "0x6002194")]
	[Address(RVA = "0x1758898", Offset = "0x1758898", VA = "0x1758898")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907B24", Offset = "0x907B24")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907B24", Offset = "0x907B24")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907B24", Offset = "0x907B24")]
	private static void Print(string s, Vector2 p, Color c)
	{
	}

	[Token(Token = "0x6002195")]
	[Address(RVA = "0x1758AC4", Offset = "0x1758AC4", VA = "0x1758AC4")]
	public static void PrintCallstack()
	{
	}

	[Token(Token = "0x6002196")]
	[Address(RVA = "0x1758B84", Offset = "0x1758B84", VA = "0x1758B84")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907BA8", Offset = "0x907BA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907BA8", Offset = "0x907BA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907BA8", Offset = "0x907BA8")]
	public static void Log(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002197")]
	[Address(RVA = "0x1758E18", Offset = "0x1758E18", VA = "0x1758E18")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907C2C", Offset = "0x907C2C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907C2C", Offset = "0x907C2C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907C2C", Offset = "0x907C2C")]
	public static void SystemLog(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002198")]
	[Address(RVA = "0x1758EE0", Offset = "0x1758EE0", VA = "0x1758EE0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907CB0", Offset = "0x907CB0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907CB0", Offset = "0x907CB0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907CB0", Offset = "0x907CB0")]
	public static void SystemLogError(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002199")]
	[Address(RVA = "0x1758FA8", Offset = "0x1758FA8", VA = "0x1758FA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907D34", Offset = "0x907D34")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907D34", Offset = "0x907D34")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907D34", Offset = "0x907D34")]
	public static void LogNoTimeStamp(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x600219A")]
	[Address(RVA = "0x1759168", Offset = "0x1759168", VA = "0x1759168")]
	public static void ClearLogs()
	{
	}

	[Token(Token = "0x600219B")]
	[Address(RVA = "0x17591EC", Offset = "0x17591EC", VA = "0x17591EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907DB8", Offset = "0x907DB8")]
	private IEnumerator ClearAtEndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x600219C")]
	[Address(RVA = "0x1759248", Offset = "0x1759248", VA = "0x1759248")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x907E18", Offset = "0x907E18")]
	public void ClearLog()
	{
	}

	[Token(Token = "0x600219D")]
	[Address(RVA = "0x17592CC", Offset = "0x17592CC", VA = "0x17592CC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x907E60", Offset = "0x907E60")]
	public void RenderOnTop()
	{
	}

	[Token(Token = "0x600219E")]
	[Address(RVA = "0x1759330", Offset = "0x1759330", VA = "0x1759330")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x907EA8", Offset = "0x907EA8")]
	public void RenderWithDepthTest()
	{
	}

	[Token(Token = "0x600219F")]
	[Address(RVA = "0x1759394", Offset = "0x1759394", VA = "0x1759394")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021A0")]
	[Address(RVA = "0x17594E8", Offset = "0x17594E8", VA = "0x17594E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x907EF0", Offset = "0x907EF0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60021A1")]
	[Address(RVA = "0x1759560", Offset = "0x1759560", VA = "0x1759560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60021A2")]
	[Address(RVA = "0x1759594", Offset = "0x1759594", VA = "0x1759594")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60021A3")]
	[Address(RVA = "0x17595FC", Offset = "0x17595FC", VA = "0x17595FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60021A4")]
	[Address(RVA = "0x175983C", Offset = "0x175983C", VA = "0x175983C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907F50", Offset = "0x907F50")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907F50", Offset = "0x907F50")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x907F50", Offset = "0x907F50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60021A5")]
	[Address(RVA = "0x175A6AC", Offset = "0x175A6AC", VA = "0x175A6AC")]
	public printf()
	{
	}
}
namespace Vitei
{
	[Token(Token = "0x20004D2")]
	public class AnimEventBroadcastMessage : MonoBehaviour
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_targetObject;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTargetObject;

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1A9D2E0", Offset = "0x1A9D2E0", VA = "0x1A9D2E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1A9D398", Offset = "0x1A9D398", VA = "0x1A9D398")]
		private void BroadcastAMessage(string message)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1A9D4C0", Offset = "0x1A9D4C0", VA = "0x1A9D4C0")]
		public AnimEventBroadcastMessage()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class AnimEventFireTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_rootObject;

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1A9D4C8", Offset = "0x1A9D4C8", VA = "0x1A9D4C8")]
		private void FireTrigger(string objName)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1A9D638", Offset = "0x1A9D638", VA = "0x1A9D638")]
		public AnimEventFireTrigger()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class AnimEventGameObjectGroups : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public class GameObjState
		{
			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_gameObj;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_setActive;

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x1763C24", Offset = "0x1763C24", VA = "0x1763C24")]
			public GameObjState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D6")]
		public class GameObjStateGroup
		{
			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_name;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObjState[] m_items;

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x1763C2C", Offset = "0x1763C2C", VA = "0x1763C2C")]
			public GameObjStateGroup()
			{
			}
		}

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjStateGroup[] m_groups;

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1A9D640", Offset = "0x1A9D640", VA = "0x1A9D640")]
		public void AnimEventGameObjectGroup(string name)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1A9D718", Offset = "0x1A9D718", VA = "0x1A9D718")]
		public AnimEventGameObjectGroups()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class AnimEventGameObjectSetActive : MonoBehaviour
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_gameObjects;

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1A9D720", Offset = "0x1A9D720", VA = "0x1A9D720")]
		public void GameObjectSetActive(int id)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1A9D768", Offset = "0x1A9D768", VA = "0x1A9D768")]
		public void GameObjectSetInactive(int id)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1A9D7B0", Offset = "0x1A9D7B0", VA = "0x1A9D7B0")]
		public AnimEventGameObjectSetActive()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class AnimEventPlayParticles : MonoBehaviour
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_rootObject;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1A9D7B8", Offset = "0x1A9D7B8", VA = "0x1A9D7B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1A9D860", Offset = "0x1A9D860", VA = "0x1A9D860")]
		public void PlayParticles(string gameObjName)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1A9DB98", Offset = "0x1A9DB98", VA = "0x1A9DB98")]
		public void StopParticles(string gameObjName)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1A9DD70", Offset = "0x1A9DD70", VA = "0x1A9DD70")]
		public AnimEventPlayParticles()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class AnimEventSendMessage : MonoBehaviour
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_targetObject;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTargetObject;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_findObjectOnExectute;

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1A9DD78", Offset = "0x1A9DD78", VA = "0x1A9DD78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1A9DE88", Offset = "0x1A9DE88", VA = "0x1A9DE88")]
		private void SendAMessage(string message)
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1A9E094", Offset = "0x1A9E094", VA = "0x1A9E094")]
		public AnimEventSendMessage()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class AnimEventSetMaterials : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DB")]
		public class GameObjMats
		{
			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] m_objRoots;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material m_material;

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x1763C34", Offset = "0x1763C34", VA = "0x1763C34")]
			public GameObjMats()
			{
			}
		}

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjMats[] m_groups;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1A9E09C", Offset = "0x1A9E09C", VA = "0x1A9E09C")]
		private void AnimEventSetMaterial(int groupIndex)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x1A9E14C", Offset = "0x1A9E14C", VA = "0x1A9E14C")]
		public AnimEventSetMaterials()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class DebugDraw
	{
		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x166AD24", Offset = "0x166AD24", VA = "0x166AD24")]
		public static void Line(float x1, float y1, float x2, float y2)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x166AD7C", Offset = "0x166AD7C", VA = "0x166AD7C")]
		public static void Line(float x1, float y1, float x2, float y2, Color col)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x166AEA8", Offset = "0x166AEA8", VA = "0x166AEA8")]
		public static void Crosshair(float x1, float y1, float scale, Color col)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x166AF34", Offset = "0x166AF34", VA = "0x166AF34")]
		public static void Circle(Vector3 p, float r, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x166B094", Offset = "0x166B094", VA = "0x166B094")]
		public static void Circle(Vector3 p, float r, Vector3 normal, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x166B300", Offset = "0x166B300", VA = "0x166B300")]
		public static void DrawAxisGizmo(Vector3 pos, float scale = 1f)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x166B468", Offset = "0x166B468", VA = "0x166B468")]
		public static void CircleWithGizmos(Vector3 p, float r, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x166B500", Offset = "0x166B500", VA = "0x166B500")]
		public static void CircleWithGizmos(Vector3 p, float r, Vector3 normal, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x166B728", Offset = "0x166B728", VA = "0x166B728")]
		public static void EllipseGizmo(Vector3 p, float rx, float ry, int res = 16, float totalAngle = 360f, float startAngle = 0f)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x166B848", Offset = "0x166B848", VA = "0x166B848")]
		public static void Ellipse(Vector3 p, float rx, float ry, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x166B9B4", Offset = "0x166B9B4", VA = "0x166B9B4")]
		public static void Ellipse(Transform t, float rx, float rz, Color col, int res = 16, [Optional] Vector3 offset)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x166BC0C", Offset = "0x166BC0C", VA = "0x166BC0C")]
		public static void DrawHandlesArcConnecting(Vector3 ptA, Vector3 ptB)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x166BC10", Offset = "0x166BC10", VA = "0x166BC10")]
		public static void DrawAxis(Vector3 pos, float scale = 1f, float duration = 0f)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x166BE30", Offset = "0x166BE30", VA = "0x166BE30")]
		public static void Bounds(Bounds b, Color col, float time = 0f)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x166C1A4", Offset = "0x166C1A4", VA = "0x166C1A4")]
		public DebugDraw()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class DebugDrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_colourStart;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_colourEnd;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_depthSteps;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x166C1AC", Offset = "0x166C1AC", VA = "0x166C1AC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x166C1F0", Offset = "0x166C1F0", VA = "0x166C1F0")]
		private void DrawTree(Transform t, int depth)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x166C32C", Offset = "0x166C32C", VA = "0x166C32C")]
		public DebugDrawSkeleton()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class Label3D : MonoBehaviour
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Transform, Label3D> ms_labels;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_label;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_baseScale;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro m_text;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer m_renderer;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_attachedTo;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lifetime;

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x181760C", Offset = "0x181760C", VA = "0x181760C")]
		public static Label3D AddLabel(Transform trans, string txt, float lifetime = -1f)
		{
			return null;
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x1817964", Offset = "0x1817964", VA = "0x1817964")]
		public static Label3D Label(Transform trans, string txt)
		{
			return null;
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1817C0C", Offset = "0x1817C0C", VA = "0x1817C0C")]
		public static void HideLabel(Transform trans)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1817D0C", Offset = "0x1817D0C", VA = "0x1817D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1817714", Offset = "0x1817714", VA = "0x1817714")]
		private void Init()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1817D8C", Offset = "0x1817D8C", VA = "0x1817D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x181806C", Offset = "0x181806C", VA = "0x181806C")]
		public Label3D()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class HSVColour
	{
		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x19409D0", Offset = "0x19409D0", VA = "0x19409D0")]
		public static Color Rand()
		{
			return default(Color);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1940A00", Offset = "0x1940A00", VA = "0x1940A00")]
		public static Color HSV(float h, float s, float v, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1940B5C", Offset = "0x1940B5C", VA = "0x1940B5C")]
		public static void ColorToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1940C8C", Offset = "0x1940C8C", VA = "0x1940C8C")]
		public HSVColour()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class RandomColour : MonoBehaviour
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_totallyRandom;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color m_from;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color m_to;

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1930D54", Offset = "0x1930D54", VA = "0x1930D54")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1930E58", Offset = "0x1930E58", VA = "0x1930E58")]
		public static Color GetRandom()
		{
			return default(Color);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1930EE4", Offset = "0x1930EE4", VA = "0x1930EE4")]
		public static Color GetRandomBetween(Color c1, Color c2)
		{
			return default(Color);
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1930FB4", Offset = "0x1930FB4", VA = "0x1930FB4")]
		public RandomColour()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class RandomColourMPB : MonoBehaviour
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_totallyRandom;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9928", Offset = "0x8F9928")]
		public Gradient m_col;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color m_actualColor;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1931000", Offset = "0x1931000", VA = "0x1931000")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x19311F0", Offset = "0x19311F0", VA = "0x19311F0")]
		public static Color GetRandom()
		{
			return default(Color);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x193127C", Offset = "0x193127C", VA = "0x193127C")]
		public RandomColourMPB()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class Blink : MonoBehaviour
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer[] m_renderers;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_blinkRate;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_onOffRatio;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x177A890", Offset = "0x177A890", VA = "0x177A890")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x177A8EC", Offset = "0x177A8EC", VA = "0x177A8EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x177A9A0", Offset = "0x177A9A0", VA = "0x177A9A0")]
		public Blink()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class MaterialSwapper : MonoBehaviour
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_materialtoSwap;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] m_altMaterials;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_sometimesDontSwap;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Material[]> m_originalMaterials;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool originalSwapComplete;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1AB1050", Offset = "0x1AB1050", VA = "0x1AB1050")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1AB13A8", Offset = "0x1AB13A8", VA = "0x1AB13A8")]
		public void SwapBack()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1AB10C8", Offset = "0x1AB10C8", VA = "0x1AB10C8")]
		public void DoSwap()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1AB1540", Offset = "0x1AB1540", VA = "0x1AB1540")]
		public MaterialSwapper()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class TextureSwapper : MonoBehaviour
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_material;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] m_textures;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_sometimesDontSwap;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture m_originalTexture;

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1785BEC", Offset = "0x1785BEC", VA = "0x1785BEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1785E10", Offset = "0x1785E10", VA = "0x1785E10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1785EE0", Offset = "0x1785EE0", VA = "0x1785EE0")]
		public TextureSwapper()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class Maths
	{
		[Token(Token = "0x20004E6")]
		public struct Circle
		{
			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 c;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float r;

			[Token(Token = "0x6002214")]
			[Address(RVA = "0x16B4578", Offset = "0x16B4578", VA = "0x16B4578")]
			public Circle(Vector2 center, float radius)
			{
			}
		}

		[Token(Token = "0x4001B0F")]
		public const float MS_2_MPH = 2.2369356f;

		[Token(Token = "0x4001B10")]
		public const float MS_2_KPH = 3.6f;

		[Token(Token = "0x4001B11")]
		public const float KPH_2_MPH = 0.621371f;

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1AB1550", Offset = "0x1AB1550", VA = "0x1AB1550")]
		public static Vector3 Bezier(Vector3 ptA, Vector3 ptB, Vector3 ptC, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1AB163C", Offset = "0x1AB163C", VA = "0x1AB163C")]
		public static Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1AB1768", Offset = "0x1AB1768", VA = "0x1AB1768")]
		public static Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point, out float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1AB18A4", Offset = "0x1AB18A4", VA = "0x1AB18A4")]
		public static float SignedAngleXZ(Transform from, Vector3 to)
		{
			return default(float);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1AB1950", Offset = "0x1AB1950", VA = "0x1AB1950")]
		public static bool CircleCircleIntersection(Circle A, Circle B, out Vector2 p1, out Vector2 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1AB1A8C", Offset = "0x1AB1A8C", VA = "0x1AB1A8C")]
		public static float Smoothstep(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1AB1AC4", Offset = "0x1AB1AC4", VA = "0x1AB1AC4")]
		public static float LerpSin(float from, float to, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1AB1B1C", Offset = "0x1AB1B1C", VA = "0x1AB1B1C")]
		public static float LerpSinBounce(float from, float to, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1AB1B80", Offset = "0x1AB1B80", VA = "0x1AB1B80")]
		public static Vector3 LerpSinBounce(Vector3 from, Vector3 to, float fraction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1AB1C1C", Offset = "0x1AB1C1C", VA = "0x1AB1C1C")]
		public static float Round(float value, int decimalPlaces)
		{
			return default(float);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1AB1CCC", Offset = "0x1AB1CCC", VA = "0x1AB1CCC")]
		public static float Sin01(float angRad)
		{
			return default(float);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1AB1CEC", Offset = "0x1AB1CEC", VA = "0x1AB1CEC")]
		public static float Cos01(float angRad)
		{
			return default(float);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1AB1D0C", Offset = "0x1AB1D0C", VA = "0x1AB1D0C")]
		public static int Wrap(int v, int minInclusive, int maxExclusive)
		{
			return default(int);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1AB1D2C", Offset = "0x1AB1D2C", VA = "0x1AB1D2C")]
		public static float Wrap(float v, float minInclusive, float maxExclusive)
		{
			return default(float);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1AB1D58", Offset = "0x1AB1D58", VA = "0x1AB1D58")]
		public static float WrapDegrees(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1AB1D9C", Offset = "0x1AB1D9C", VA = "0x1AB1D9C")]
		public static float WrapDegrees180(float value)
		{
			return default(float);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x1AB1DE8", Offset = "0x1AB1DE8", VA = "0x1AB1DE8")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1AB1E68", Offset = "0x1AB1E68", VA = "0x1AB1E68")]
		public bool WithinRadius(Vector3 A, Vector3 B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1AB1EB8", Offset = "0x1AB1EB8", VA = "0x1AB1EB8")]
		public static float Normalise(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1AB1ECC", Offset = "0x1AB1ECC", VA = "0x1AB1ECC")]
		public static float NormaliseUnclamped(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1AB1EDC", Offset = "0x1AB1EDC", VA = "0x1AB1EDC")]
		public static float UnNormalise(float normlisedValue, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1AB1F10", Offset = "0x1AB1F10", VA = "0x1AB1F10")]
		public static Vector2 Abs(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1AB1F2C", Offset = "0x1AB1F2C", VA = "0x1AB1F2C")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1AB1F54", Offset = "0x1AB1F54", VA = "0x1AB1F54")]
		public static Vector3 Mul(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1AB1F64", Offset = "0x1AB1F64", VA = "0x1AB1F64")]
		public static Vector3 Div(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1AB1F74", Offset = "0x1AB1F74", VA = "0x1AB1F74")]
		public Maths()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E7")]
	public class FloatRange
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Min;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Max;

		[Token(Token = "0x1700045A")]
		public float Range
		{
			[Token(Token = "0x6002215")]
			[Address(RVA = "0x18A0EAC", Offset = "0x18A0EAC", VA = "0x18A0EAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045B")]
		public float RandomValue
		{
			[Token(Token = "0x6002216")]
			[Address(RVA = "0x18A0EB8", Offset = "0x18A0EB8", VA = "0x18A0EB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x18A0EC4", Offset = "0x18A0EC4", VA = "0x18A0EC4")]
		public void Rearrange()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x18A0ED8", Offset = "0x18A0ED8", VA = "0x18A0ED8")]
		public float NormalizeUnclamped(float input)
		{
			return default(float);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x18A0EEC", Offset = "0x18A0EEC", VA = "0x18A0EEC")]
		public float NormalizeClamp(float input)
		{
			return default(float);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x18A0F04", Offset = "0x18A0F04", VA = "0x18A0F04")]
		public float Clamp(float input)
		{
			return default(float);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x18A0F10", Offset = "0x18A0F10", VA = "0x18A0F10")]
		public float GetFromNormalized(float input0to1)
		{
			return default(float);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x18A0F28", Offset = "0x18A0F28", VA = "0x18A0F28")]
		public float GetFromNormalizedUnclamped(float input0to1)
		{
			return default(float);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x18A0F40", Offset = "0x18A0F40", VA = "0x18A0F40")]
		public FloatRange(float min, float max)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x18A0F80", Offset = "0x18A0F80", VA = "0x18A0F80")]
		public bool Contains(float v)
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x18A0FA4", Offset = "0x18A0FA4", VA = "0x18A0FA4")]
		public float Sample(float x)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E8")]
	public class IntRange
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Min;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Max;

		[Token(Token = "0x1700045C")]
		public int Range
		{
			[Token(Token = "0x6002220")]
			[Address(RVA = "0x16D4D70", Offset = "0x16D4D70", VA = "0x16D4D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700045D")]
		public int RandomValue
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0x16D4D7C", Offset = "0x16D4D7C", VA = "0x16D4D7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x16D4D90", Offset = "0x16D4D90", VA = "0x16D4D90")]
		public void Rearrange()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x16D4DA4", Offset = "0x16D4DA4", VA = "0x16D4DA4")]
		public int Clamp(int input)
		{
			return default(int);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x16D4DB8", Offset = "0x16D4DB8", VA = "0x16D4DB8")]
		public IntRange(int min, int max)
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x16D4DF8", Offset = "0x16D4DF8", VA = "0x16D4DF8")]
		public bool Contains(int v)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E9")]
	public class Vector3Range
	{
		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Min;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Max;

		[Token(Token = "0x1700045E")]
		public Vector3 Range
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x19DEF5C", Offset = "0x19DEF5C", VA = "0x19DEF5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700045F")]
		public Vector3 RandomValue
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x19DEF7C", Offset = "0x19DEF7C", VA = "0x19DEF7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x19DEFE8", Offset = "0x19DEFE8", VA = "0x19DEFE8")]
		public Vector3Range(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class AnyObjectSensor : MonoBehaviour
	{
		[Token(Token = "0x20004EB")]
		public delegate void TriggerDelegate(GameObject go);

		[Serializable]
		[Token(Token = "0x20004EC")]
		public class ObjectDelegateSet
		{
			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_object;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type m_type;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerDelegate m_onEnterDelegate;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriggerDelegate m_onExitDelegate;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> m_items;

			[Token(Token = "0x6002242")]
			[Address(RVA = "0x1763C3C", Offset = "0x1763C3C", VA = "0x1763C3C")]
			public ObjectDelegateSet(GameObject go, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
			{
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x1763D1C", Offset = "0x1763D1C", VA = "0x1763D1C")]
			public ObjectDelegateSet(Type type, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
			{
			}
		}

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ObjectDelegateSet> m_watchList;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9978", Offset = "0x8F9978")]
		private List<GameObject> <m_triggerObjs>k__BackingField;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9988", Offset = "0x8F9988")]
		private List<GameObject> <m_collisionObjs>k__BackingField;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Collider> m_ignoreList;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9998", Offset = "0x8F9998")]
		public LayerMask m_layerMask;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnTriggeredOn;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnTriggeredOff;

		[Token(Token = "0x17000460")]
		public List<GameObject> m_triggerObjs
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x1A9E82C", Offset = "0x1A9E82C", VA = "0x1A9E82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908074", Offset = "0x908074")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x1A9E834", Offset = "0x1A9E834", VA = "0x1A9E834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908084", Offset = "0x908084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public List<GameObject> m_collisionObjs
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x1A9E83C", Offset = "0x1A9E83C", VA = "0x1A9E83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908094", Offset = "0x908094")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x1A9E844", Offset = "0x1A9E844", VA = "0x1A9E844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9080A4", Offset = "0x9080A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public bool OnForAnyObject
		{
			[Token(Token = "0x600222D")]
			[Address(RVA = "0x1A9E84C", Offset = "0x1A9E84C", VA = "0x1A9E84C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000463")]
		public bool OnForWatched
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0x1A9E8A0", Offset = "0x1A9E8A0", VA = "0x1A9E8A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000464")]
		public bool OnForWatchedObjects
		{
			[Token(Token = "0x600222F")]
			[Address(RVA = "0x1A9EB5C", Offset = "0x1A9EB5C", VA = "0x1A9EB5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000465")]
		public bool OnForWatchedTypes
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x1A9ED14", Offset = "0x1A9ED14", VA = "0x1A9ED14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1A9EEF4", Offset = "0x1A9EEF4", VA = "0x1A9EEF4")]
		public AnyObjectSensor()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1A9F0A8", Offset = "0x1A9F0A8", VA = "0x1A9F0A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1A9F3CC", Offset = "0x1A9F3CC", VA = "0x1A9F3CC")]
		private void ObjectRemoved(GameObject go)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1A9F560", Offset = "0x1A9F560", VA = "0x1A9F560")]
		public void WatchFor(GameObject go, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1A9F60C", Offset = "0x1A9F60C", VA = "0x1A9F60C")]
		public void WatchFor(Type type, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1A9F6B8", Offset = "0x1A9F6B8", VA = "0x1A9F6B8")]
		public void StopWatchingFor(GameObject go)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1A9F7DC", Offset = "0x1A9F7DC", VA = "0x1A9F7DC")]
		public void StopWatchingFor(Type type)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1A9F900", Offset = "0x1A9F900", VA = "0x1A9F900")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1A9F954", Offset = "0x1A9F954", VA = "0x1A9F954")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1A9FD80", Offset = "0x1A9FD80", VA = "0x1A9FD80")]
		public void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1A9FE88", Offset = "0x1A9FE88", VA = "0x1A9FE88")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1AA0290", Offset = "0x1AA0290", VA = "0x1AA0290")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1AA03E0", Offset = "0x1AA03E0", VA = "0x1AA03E0")]
		public void ForceRemoveObject(GameObject go)
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class Detatchable : MonoBehaviour
	{
		[Token(Token = "0x6002244")]
		[Address(RVA = "0x173C004", Offset = "0x173C004", VA = "0x173C004")]
		private void Start()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x173C0A8", Offset = "0x173C0A8", VA = "0x173C0A8")]
		public Detatchable()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class ObjectSensor : MonoBehaviour
	{
		[Token(Token = "0x20004EF")]
		public delegate void TriggerDelegate(Collider col);

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_target;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F99D0", Offset = "0x8F99D0")]
		private bool <On>k__BackingField;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color m_onColour;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color m_offColour;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer m_visualiser;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public TriggerDelegate m_onAnyTriggerEnter;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TriggerDelegate m_onAnyTriggerExit;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TriggerDelegate m_onTargetTriggerEnter;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerDelegate m_onTargetTriggerExit;

		[Token(Token = "0x17000466")]
		public bool On
		{
			[Token(Token = "0x6002247")]
			[Address(RVA = "0x159CBA8", Offset = "0x159CBA8", VA = "0x159CBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9080B4", Offset = "0x9080B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002248")]
			[Address(RVA = "0x159CBB0", Offset = "0x159CBB0", VA = "0x159CBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9080C4", Offset = "0x9080C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x159CB10", Offset = "0x159CB10", VA = "0x159CB10")]
		public void SetTarget(GameObject value)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x159CBBC", Offset = "0x159CBBC", VA = "0x159CBBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x159CC78", Offset = "0x159CC78", VA = "0x159CC78")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x159CDAC", Offset = "0x159CDAC", VA = "0x159CDAC")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x159CEDC", Offset = "0x159CEDC", VA = "0x159CEDC")]
		public ObjectSensor()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6002251")]
		[Address(RVA = "0x15C0040", Offset = "0x15C0040", VA = "0x15C0040")]
		private void Start()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x15C00B8", Offset = "0x15C00B8", VA = "0x15C00B8")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public enum SetColour
	{
		[Token(Token = "0x4001B30")]
		Default,
		[Token(Token = "0x4001B31")]
		Random,
		[Token(Token = "0x4001B32")]
		Specify
	}
	[Token(Token = "0x20004F2")]
	public class CameraToTexture : MonoBehaviour
	{
		[Token(Token = "0x20004F3")]
		public enum SaveLocation
		{
			[Token(Token = "0x4001B3C")]
			Path,
			[Token(Token = "0x4001B3D")]
			DeviceGallery
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE858", Offset = "0x8EE858")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] bytes;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraToTexture <>4__this;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string title;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string desc;

			[Token(Token = "0x6002261")]
			[Address(RVA = "0x176A92C", Offset = "0x176A92C", VA = "0x176A92C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002262")]
			[Address(RVA = "0x176A934", Offset = "0x176A934", VA = "0x176A934")]
			internal void <TakeScreenShot>b__0()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE868", Offset = "0x8EE868")]
		private sealed class <>c__DisplayClass14_1
		{
			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass14_0 CS$<>8__locals1;

			[Token(Token = "0x6002263")]
			[Address(RVA = "0x176A974", Offset = "0x176A974", VA = "0x176A974")]
			public <>c__DisplayClass14_1()
			{
			}

			[Token(Token = "0x6002264")]
			[Address(RVA = "0x176A97C", Offset = "0x176A97C", VA = "0x176A97C")]
			internal void <TakeScreenShot>b__1()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE878", Offset = "0x8EE878")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] bytes;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verbose;

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x176AA8C", Offset = "0x176AA8C", VA = "0x176AA8C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0x176AA94", Offset = "0x176AA94", VA = "0x176AA94")]
			internal void <SaveTexture2DToDisc>b__0()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE888", Offset = "0x8EE888")]
		private sealed class <SaveTexture2DToDisc>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verbose;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int w;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int h;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Texture2D screenShot;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string name;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226A")]
				[Address(RVA = "0x176AE84", Offset = "0x176AE84", VA = "0x176AE84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226C")]
				[Address(RVA = "0x176AECC", Offset = "0x176AECC", VA = "0x176AECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x176AB84", Offset = "0x176AB84", VA = "0x176AB84")]
			[DebuggerHidden]
			public <SaveTexture2DToDisc>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x176ABB0", Offset = "0x176ABB0", VA = "0x176ABB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x176ABB4", Offset = "0x176ABB4", VA = "0x176ABB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x176AE8C", Offset = "0x176AE8C", VA = "0x176AE8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ms_defaultWidth;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ms_defaultHeight;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_verbose;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_previewRootTrans;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MPB_Texture m_previewMPBTex;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTexture currentTex;

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x1A263A0", Offset = "0x1A263A0", VA = "0x1A263A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x1A26588", Offset = "0x1A26588", VA = "0x1A26588")]
		public void SetResolution(int w, int h)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x1A264A4", Offset = "0x1A264A4", VA = "0x1A264A4")]
		private void SetupPreview(RenderTexture renderTex)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x1A2674C", Offset = "0x1A2674C", VA = "0x1A2674C")]
		public static string ScreenShotPathAndName(int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x1A26970", Offset = "0x1A26970", VA = "0x1A26970")]
		private static string GetFilename(string imageName, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x1A26974", Offset = "0x1A26974", VA = "0x1A26974")]
		private void TakeShotWithDefaults()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x1A269F8", Offset = "0x1A269F8", VA = "0x1A269F8")]
		public Texture2D TakeScreenShot([Optional] string name, SaveLocation saveLocation = SaveLocation.Path, bool refreshAssetsWhendone = true, SetColour setBgCol = SetColour.Default, bool alphaBg = false, [Optional] Color bgCol, [Optional] Shader shader, string title = "", string desc = "")
		{
			return null;
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1A26F78", Offset = "0x1A26F78", VA = "0x1A26F78")]
		public void TakeAsyncScreenShotToTextureAndSave([Optional] string pathAndfilename)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x1A2705C", Offset = "0x1A2705C", VA = "0x1A2705C")]
		public static Texture2D TakeScreenShotToTexture(Camera camera, int w = -1, int h = -1, [Optional] string name, SetColour setBgCol = SetColour.Default, [Optional] Color bgCol, bool alphaBg = false, [Optional] Shader shader)
		{
			return null;
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x1A273AC", Offset = "0x1A273AC", VA = "0x1A273AC")]
		public static void TakeScreenShotToTexture(Camera camera, ref Texture2D screenShot, ref RenderTexture rt, int w = -1, int h = -1, [Optional] Shader shader)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x1A272F8", Offset = "0x1A272F8", VA = "0x1A272F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9080D4", Offset = "0x9080D4")]
		public static IEnumerator SaveTexture2DToDisc(Texture2D screenShot, int w = -1, int h = -1, [Optional] string name, bool verbose = true)
		{
			return null;
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x1A27608", Offset = "0x1A27608", VA = "0x1A27608")]
		[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x908134", Offset = "0x908134")]
		private void SavePNGToDeviceGallery(byte[] pngBytes, string imageName, string imageDesc)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x1A27EB0", Offset = "0x1A27EB0", VA = "0x1A27EB0")]
		public CameraToTexture()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class CollisionObjectHider : MonoBehaviour
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer[] m_collisionRenderers;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_hideAllOnStartup;

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x1A2EF34", Offset = "0x1A2EF34", VA = "0x1A2EF34")]
		private void Start()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1A2F018", Offset = "0x1A2F018", VA = "0x1A2F018")]
		public CollisionObjectHider()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class MeshBaker
	{
		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1AB8BFC", Offset = "0x1AB8BFC", VA = "0x1AB8BFC")]
		public static GameObject Combine(GameObject rootObj, bool save)
		{
			return null;
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1AB9124", Offset = "0x1AB9124", VA = "0x1AB9124")]
		public MeshBaker()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class MeshGroupManager : MonoBehaviour
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_meshGroupParent;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1AB93A4", Offset = "0x1AB93A4", VA = "0x1AB93A4")]
		public MeshGroupManager()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class EventAddForce : Triggerable
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3Range m_forceRange;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody m_target;

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x17449B4", Offset = "0x17449B4", VA = "0x17449B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x1744A70", Offset = "0x1744A70", VA = "0x1744A70", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1744AB4", Offset = "0x1744AB4", VA = "0x1744AB4")]
		public EventAddForce()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class EventAddForceAtPoint : Triggerable
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody m_target;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_forcePoint;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_forceAlongZ;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_disconnectFromParent;

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1744B40", Offset = "0x1744B40", VA = "0x1744B40", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x1744C60", Offset = "0x1744C60", VA = "0x1744C60")]
		public EventAddForceAtPoint()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class EventAddTorque : Triggerable
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3Range m_forceRange;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody m_target;

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x1744C68", Offset = "0x1744C68", VA = "0x1744C68")]
		private void Start()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x1744D24", Offset = "0x1744D24", VA = "0x1744D24", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x1744D68", Offset = "0x1744D68", VA = "0x1744D68")]
		public EventAddTorque()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class EventApplyConstantForceForNSeconds : Triggerable
	{
		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE898", Offset = "0x8EE898")]
		private sealed class <ApplyForceCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventApplyConstantForceForNSeconds <>4__this;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002280")]
				[Address(RVA = "0x15EF8E4", Offset = "0x15EF8E4", VA = "0x15EF8E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002282")]
				[Address(RVA = "0x15EF92C", Offset = "0x15EF92C", VA = "0x15EF92C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0x15EF76C", Offset = "0x15EF76C", VA = "0x15EF76C")]
			[DebuggerHidden]
			public <ApplyForceCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0x15EF798", Offset = "0x15EF798", VA = "0x15EF798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x15EF79C", Offset = "0x15EF79C", VA = "0x15EF79C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x15EF8EC", Offset = "0x15EF8EC", VA = "0x15EF8EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_duration;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody m_rb;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_forcePoint;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_forceAlongZ;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x1744DF4", Offset = "0x1744DF4", VA = "0x1744DF4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x1744E3C", Offset = "0x1744E3C", VA = "0x1744E3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9081CC", Offset = "0x9081CC")]
		private IEnumerator ApplyForceCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x1744EB4", Offset = "0x1744EB4", VA = "0x1744EB4")]
		public EventApplyConstantForceForNSeconds()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class EventCallFunction : Triggerable
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8F99F0", Offset = "0x8F99F0")]
		public UnityEvent m_events;

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x1744ECC", Offset = "0x1744ECC", VA = "0x1744ECC", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x1744EE8", Offset = "0x1744EE8", VA = "0x1744EE8")]
		public EventCallFunction()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class EventCallFunctionOnUntrigger : Triggerable
	{
		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent m_events;

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1744EF0", Offset = "0x1744EF0", VA = "0x1744EF0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x1744EF4", Offset = "0x1744EF4", VA = "0x1744EF4", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x1744F10", Offset = "0x1744F10", VA = "0x1744F10")]
		public EventCallFunctionOnUntrigger()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class EventChangeParent : Triggerable
	{
		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_child;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_newParent;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useTempItemsParent;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x1744F18", Offset = "0x1744F18", VA = "0x1744F18", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x1744FAC", Offset = "0x1744FAC", VA = "0x1744FAC")]
		public EventChangeParent()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class EventChangeUnityFogColour : Triggerable
	{
		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8A8", Offset = "0x8EE8A8")]
		private sealed class <LerpFog>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventChangeUnityFogColour <>4__this;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <fromColour>5__2;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <fromDensity>5__3;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <t>5__4;

			[Token(Token = "0x1700046B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002290")]
				[Address(RVA = "0x15EFA78", Offset = "0x15EFA78", VA = "0x15EFA78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002292")]
				[Address(RVA = "0x15EFAC0", Offset = "0x15EFAC0", VA = "0x15EFAC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x15EF934", Offset = "0x15EF934", VA = "0x15EF934")]
			[DebuggerHidden]
			public <LerpFog>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0x15EF960", Offset = "0x15EF960", VA = "0x15EF960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x15EF964", Offset = "0x15EF964", VA = "0x15EF964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x15EFA80", Offset = "0x15EFA80", VA = "0x15EFA80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_colour;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_changeDensity;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9A28", Offset = "0x8F9A28")]
		public float m_density;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_duration;

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x1744FB4", Offset = "0x1744FB4", VA = "0x1744FB4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x1745028", Offset = "0x1745028", VA = "0x1745028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90827C", Offset = "0x90827C")]
		private IEnumerator LerpFog()
		{
			return null;
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x17450A0", Offset = "0x17450A0", VA = "0x17450A0")]
		public EventChangeUnityFogColour()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class EventCycleActive : Triggerable
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currentActive;

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x17450E0", Offset = "0x17450E0", VA = "0x17450E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x17452F8", Offset = "0x17452F8", VA = "0x17452F8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x17453C0", Offset = "0x17453C0", VA = "0x17453C0")]
		public EventCycleActive()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class EventCycleAnimation : Triggerable
	{
		[Serializable]
		[Token(Token = "0x2000507")]
		public class AnimAndClip
		{
			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animation m_animation;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip m_clip;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationClip[] m_followUpQueue;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_speed;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float m_blendLength;

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x15EFAC8", Offset = "0x15EFAC8", VA = "0x15EFAC8")]
			public AnimAndClip()
			{
			}
		}

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimAndClip[] m_animations;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextAnim;

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x17453D0", Offset = "0x17453D0", VA = "0x17453D0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x1745570", Offset = "0x1745570", VA = "0x1745570")]
		public EventCycleAnimation()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class EventDeleteObject : Triggerable
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_destroySelf;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x1745584", Offset = "0x1745584", VA = "0x1745584")]
		private void Start()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x17456B8", Offset = "0x17456B8", VA = "0x17456B8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x17457E0", Offset = "0x17457E0", VA = "0x17457E0")]
		public EventDeleteObject()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class EventEnableComponent : Triggerable
	{
		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] m_components;

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1745B20", Offset = "0x1745B20", VA = "0x1745B20", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x1745B90", Offset = "0x1745B90", VA = "0x1745B90")]
		public EventEnableComponent()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class EventDropItems : Triggerable
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemDropper m_itemDropper;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_numToDrop;

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x1745A48", Offset = "0x1745A48", VA = "0x1745A48", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1745A98", Offset = "0x1745A98", VA = "0x1745A98")]
		public EventDropItems()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class EventDisableComponent : Triggerable
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] m_components;

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x17457E8", Offset = "0x17457E8", VA = "0x17457E8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1745858", Offset = "0x1745858", VA = "0x1745858")]
		public EventDisableComponent()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class EventFadeCurtain : Triggerable
	{
		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fadeLength;

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1745B98", Offset = "0x1745B98", VA = "0x1745B98", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1745E60", Offset = "0x1745E60", VA = "0x1745E60")]
		public EventFadeCurtain()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class EventFadeMaterial : Triggerable
	{
		[Serializable]
		[Token(Token = "0x200050E")]
		public class MaterialColourPairs
		{
			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material m_material;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Material m_workingMaterial;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_useCurrentcolourAsStart;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Color m_from;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Color m_to;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool m_initialiseColoursOnAwake;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[HideInInspector]
			public Color m_defaultcolour;

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x15EFD44", Offset = "0x15EFD44", VA = "0x15EFD44")]
			public MaterialColourPairs()
			{
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8B8", Offset = "0x8EE8B8")]
		private sealed class <Fade>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventFadeMaterial <>4__this;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700046D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AE")]
				[Address(RVA = "0x15EFCF4", Offset = "0x15EFCF4", VA = "0x15EFCF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B0")]
				[Address(RVA = "0x15EFD3C", Offset = "0x15EFD3C", VA = "0x15EFD3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x15EFAD8", Offset = "0x15EFAD8", VA = "0x15EFAD8")]
			[DebuggerHidden]
			public <Fade>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60022AC")]
			[Address(RVA = "0x15EFB04", Offset = "0x15EFB04", VA = "0x15EFB04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x15EFB08", Offset = "0x15EFB08", VA = "0x15EFB08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x15EFCFC", Offset = "0x15EFCFC", VA = "0x15EFCFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialColourPairs[] m_materials;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color[] m_defaultcolour;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1745E70", Offset = "0x1745E70", VA = "0x1745E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1745F6C", Offset = "0x1745F6C", VA = "0x1745F6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x1745FF0", Offset = "0x1745FF0", VA = "0x1745FF0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x1746094", Offset = "0x1746094", VA = "0x1746094", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x174601C", Offset = "0x174601C", VA = "0x174601C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90832C", Offset = "0x90832C")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1746098", Offset = "0x1746098", VA = "0x1746098")]
		public EventFadeMaterial()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class EventFadeObjectMaterials : Triggerable
	{
		[Serializable]
		[Token(Token = "0x2000511")]
		public class FadingMaterial
		{
			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material m_sourceMaterial;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material m_modifiedMaterial;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_defaultColour;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_from;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color m_to;

			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x15F0304", Offset = "0x15F0304", VA = "0x15F0304")]
			public FadingMaterial()
			{
			}
		}

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8C8", Offset = "0x8EE8C8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Renderer> allRenderers;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<FadingMaterial> <>9__0;

			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x15EFD90", Offset = "0x15EFD90", VA = "0x15EFD90")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x15EFD98", Offset = "0x15EFD98", VA = "0x15EFD98")]
			internal bool <Start>b__0(FadingMaterial a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8D8", Offset = "0x8EE8D8")]
		private sealed class <Fade>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventFadeObjectMaterials <>4__this;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700046F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BD")]
				[Address(RVA = "0x15F02B4", Offset = "0x15F02B4", VA = "0x15F02B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BF")]
				[Address(RVA = "0x15F02FC", Offset = "0x15F02FC", VA = "0x15F02FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x15EFEF4", Offset = "0x15EFEF4", VA = "0x15EFEF4")]
			[DebuggerHidden]
			public <Fade>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x15EFF20", Offset = "0x15EFF20", VA = "0x15EFF20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x15EFF24", Offset = "0x15EFF24", VA = "0x15EFF24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x15F02BC", Offset = "0x15F02BC", VA = "0x15F02BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<FadingMaterial> ms_allFadingMaterials;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_duration;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve m_fadeCurve;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FadingMaterial> m_materialsToFade;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> m_objectsToFade;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> m_namedObjectsToFade;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_fromLightness;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_toLightness;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_initColoursToFromValue;

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x17460A8", Offset = "0x17460A8", VA = "0x17460A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x17460F8", Offset = "0x17460F8", VA = "0x17460F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x174683C", Offset = "0x174683C", VA = "0x174683C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x17468E0", Offset = "0x17468E0", VA = "0x17468E0", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x1746868", Offset = "0x1746868", VA = "0x1746868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9083DC", Offset = "0x9083DC")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x17468E4", Offset = "0x17468E4", VA = "0x17468E4")]
		public EventFadeObjectMaterials()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class EventJointBreak : Triggerable
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int breakAfterNTriggers;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Joint m_breakable;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_dragOnBreak;

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x174693C", Offset = "0x174693C", VA = "0x174693C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1746A38", Offset = "0x1746A38", VA = "0x1746A38")]
		public EventJointBreak()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class EventLerpTransform : Triggerable
	{
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8E8", Offset = "0x8EE8E8")]
		private sealed class <Lerp>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLerpTransform <>4__this;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <sp>5__2;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <sr>5__3;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <ss>5__4;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__5;

			[Token(Token = "0x17000471")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C8")]
				[Address(RVA = "0x15F05B0", Offset = "0x15F05B0", VA = "0x15F05B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022CA")]
				[Address(RVA = "0x15F05F8", Offset = "0x15F05F8", VA = "0x15F05F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x15F030C", Offset = "0x15F030C", VA = "0x15F030C")]
			[DebuggerHidden]
			public <Lerp>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x15F0338", Offset = "0x15F0338", VA = "0x15F0338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x15F033C", Offset = "0x15F033C", VA = "0x15F033C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x15F05B8", Offset = "0x15F05B8", VA = "0x15F05B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_moveThis;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_toThis;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_lerpPos;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_lerpRot;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_lerpScale;

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x1746A48", Offset = "0x1746A48", VA = "0x1746A48", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1746A74", Offset = "0x1746A74", VA = "0x1746A74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90848C", Offset = "0x90848C")]
		private IEnumerator Lerp()
		{
			return null;
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1746AEC", Offset = "0x1746AEC", VA = "0x1746AEC")]
		public EventLerpTransform()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class EventLoadLevel : Triggerable
	{
		[Token(Token = "0x2000518")]
		public delegate void OnLevelUnloadDelegate();

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE8F8", Offset = "0x8EE8F8")]
		private sealed class <FadeAndLoad>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLoadLevel <>4__this;

			[Token(Token = "0x17000473")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0x15F0EF8", Offset = "0x15F0EF8", VA = "0x15F0EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0x15F0F40", Offset = "0x15F0F40", VA = "0x15F0F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x15F0600", Offset = "0x15F0600", VA = "0x15F0600")]
			[DebuggerHidden]
			public <FadeAndLoad>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x15F062C", Offset = "0x15F062C", VA = "0x15F062C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x15F0630", Offset = "0x15F0630", VA = "0x15F0630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x15F0F00", Offset = "0x15F0F00", VA = "0x15F0F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9A8C", Offset = "0x8F9A8C")]
		public string m_levelToLoad;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_autoAppendSubScenes;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> m_levelsToLoadAdditively;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> m_subScenesToLoad;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fadeLength;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_fadeColour;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool m_triggered;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnLevelUnloadDelegate OnLevelUnload;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_loadingCoroutine;

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1746F30", Offset = "0x1746F30", VA = "0x1746F30", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1746F70", Offset = "0x1746F70", VA = "0x1746F70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90853C", Offset = "0x90853C")]
		protected IEnumerator FadeAndLoad()
		{
			return null;
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x1746FE8", Offset = "0x1746FE8", VA = "0x1746FE8")]
		public EventLoadLevel()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class EventLoadLevelAsync : Triggerable
	{
		[Token(Token = "0x200051B")]
		public delegate void OnLevelUnloadDelegate();

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE908", Offset = "0x8EE908")]
		private sealed class <DoLoad>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLoadLevelAsync <>4__this;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <amtPerLevel>5__2;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <chunks>5__3;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.AsyncOperation <ll>5__4;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <p>5__5;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityEngine.AsyncOperation[] <sublevelAsync>5__6;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__7;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022E2")]
				[Address(RVA = "0x15F1820", Offset = "0x15F1820", VA = "0x15F1820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022E4")]
				[Address(RVA = "0x15F1868", Offset = "0x15F1868", VA = "0x15F1868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x15F0F94", Offset = "0x15F0F94", VA = "0x15F0F94")]
			[DebuggerHidden]
			public <DoLoad>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x15F0FC0", Offset = "0x15F0FC0", VA = "0x15F0FC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x15F0FC4", Offset = "0x15F0FC4", VA = "0x15F0FC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x15F1828", Offset = "0x15F1828", VA = "0x15F1828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8F9AC4", Offset = "0x8F9AC4")]
		public string m_levelToLoad;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_autoAppendSubScenes;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> m_levelsToLoadAdditively;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> m_subScenesToLoad;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fadeLength;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_fadeColour;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool m_triggered;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer m_radialRenderer;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_loadMat;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_lerpRate;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnLevelUnloadDelegate OnLevelUnload;

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1747114", Offset = "0x1747114", VA = "0x1747114", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1747154", Offset = "0x1747154", VA = "0x1747154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9085EC", Offset = "0x9085EC")]
		protected IEnumerator DoLoad()
		{
			return null;
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x17471CC", Offset = "0x17471CC", VA = "0x17471CC")]
		public EventLoadLevelAsync()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class EventParticlesPlay : Triggerable
	{
		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] m_particles;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_spawnParticles;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] m_spawnParticlesTransform;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_makeSpawnedFxChildren;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_scaleToMatchMe;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] m_spawnedObjects;

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1747648", Offset = "0x1747648", VA = "0x1747648", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1747994", Offset = "0x1747994", VA = "0x1747994")]
		public void Stop()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1747AF8", Offset = "0x1747AF8", VA = "0x1747AF8")]
		public EventParticlesPlay()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class EventParticlesStop : Triggerable
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ParticleSystem> m_particles;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedParticles;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_spawnedParticlesParent;

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1747B00", Offset = "0x1747B00", VA = "0x1747B00")]
		private void Start()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x1747B04", Offset = "0x1747B04", VA = "0x1747B04")]
		private void FindNamedParticles()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1747CD4", Offset = "0x1747CD4", VA = "0x1747CD4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1747E48", Offset = "0x1747E48", VA = "0x1747E48")]
		public EventParticlesStop()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class EventPlayAnimation : Triggerable
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation m_animation;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedObjectWithAnimation;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationClip m_animClip;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip[] m_animClipQueue;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_speed;

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x1747E50", Offset = "0x1747E50", VA = "0x1747E50")]
		private void Start()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1747F60", Offset = "0x1747F60", VA = "0x1747F60", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x174804C", Offset = "0x174804C", VA = "0x174804C")]
		public EventPlayAnimation()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class EventPrintf : Triggerable
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_optionalMessage;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x17484C8", Offset = "0x17484C8", VA = "0x17484C8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x1748574", Offset = "0x1748574", VA = "0x1748574")]
		public EventPrintf()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class EventSendMessage : Triggerable
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_messageToSend;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_includeReferenceToThis;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_paramString;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> m_objectsToSendTo;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] m_namedObjectsToSendTo;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_taggedObjectsToSendTo;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_targetsAreSetup;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_onlySendToActiveObjects;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool m_sendToObjectThatCausedTriggerToFire;

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x174857C", Offset = "0x174857C", VA = "0x174857C")]
		private void FindTargetObjects()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x17486A0", Offset = "0x17486A0", VA = "0x17486A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x17486B0", Offset = "0x17486B0", VA = "0x17486B0", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1748A48", Offset = "0x1748A48", VA = "0x1748A48", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x17486B8", Offset = "0x17486B8", VA = "0x17486B8")]
		private void TriggerImpl(bool untrigger)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1748A50", Offset = "0x1748A50", VA = "0x1748A50")]
		public EventSendMessage()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class EventSetActive : Triggerable
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_isProgressive;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_doActivate;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_progressiveIndex;

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x1748A58", Offset = "0x1748A58", VA = "0x1748A58")]
		private void Start()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1748B60", Offset = "0x1748B60", VA = "0x1748B60", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x1748C8C", Offset = "0x1748C8C", VA = "0x1748C8C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x1748D40", Offset = "0x1748D40", VA = "0x1748D40")]
		public EventSetActive()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class EventSetColour : Triggerable
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_setTriggerer;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color m_colour;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> m_objectsToSet;

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1748D48", Offset = "0x1748D48", VA = "0x1748D48", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x1748F84", Offset = "0x1748F84", VA = "0x1748F84")]
		public EventSetColour()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class EventSetInactive : Triggerable
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1749020", Offset = "0x1749020", VA = "0x1749020")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x1749118", Offset = "0x1749118", VA = "0x1749118", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x174922C", Offset = "0x174922C", VA = "0x174922C")]
		public EventSetInactive()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class EventSetInactiveWithParticles : Triggerable
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_particlePrefab;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> m_particles;

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1749234", Offset = "0x1749234", VA = "0x1749234")]
		private void Start()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x174944C", Offset = "0x174944C", VA = "0x174944C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x1749614", Offset = "0x1749614", VA = "0x1749614")]
		public EventSetInactiveWithParticles()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class EventSetLayer : Triggerable
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_newLayer;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_layerMask;

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x174961C", Offset = "0x174961C", VA = "0x174961C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1749648", Offset = "0x1749648", VA = "0x1749648", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1749674", Offset = "0x1749674", VA = "0x1749674")]
		public EventSetLayer()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class EventSetMaterials : Triggerable
	{
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Renderer> m_renderers;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedRenderers;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_material;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_unTriggerMaterial;

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x17496D0", Offset = "0x17496D0", VA = "0x17496D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x17496D4", Offset = "0x17496D4", VA = "0x17496D4")]
		private void FindNamed()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x17498A4", Offset = "0x17498A4", VA = "0x17498A4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x17498B8", Offset = "0x17498B8", VA = "0x17498B8", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x17498CC", Offset = "0x17498CC", VA = "0x17498CC")]
		public EventSetMaterials()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class EventSetMecanimBool : Triggerable
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_variableName;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_value;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_DoUntrigger;

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x17498D4", Offset = "0x17498D4", VA = "0x17498D4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x17498FC", Offset = "0x17498FC", VA = "0x17498FC", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1749938", Offset = "0x1749938", VA = "0x1749938")]
		public EventSetMecanimBool()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class EventSetMecanimTrigger : Triggerable
	{
		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_trigger;

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1749940", Offset = "0x1749940", VA = "0x1749940", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x1749964", Offset = "0x1749964", VA = "0x1749964")]
		public EventSetMecanimTrigger()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class EventSetMecanimTriggerOnMany : Triggerable
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator[] m_animator;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_trigger;

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x174996C", Offset = "0x174996C", VA = "0x174996C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x17499DC", Offset = "0x17499DC", VA = "0x17499DC")]
		public EventSetMecanimTriggerOnMany()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class EventSetNearPlane : Triggerable
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera m_camera;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_nearPlane;

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x17499E4", Offset = "0x17499E4", VA = "0x17499E4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1749A08", Offset = "0x1749A08", VA = "0x1749A08")]
		public EventSetNearPlane()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class EventSetRigidbodyProperties : Triggerable
	{
		[Token(Token = "0x200052D")]
		public enum NewBool
		{
			[Token(Token = "0x4001C13")]
			DontChange,
			[Token(Token = "0x4001C14")]
			True,
			[Token(Token = "0x4001C15")]
			False
		}

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_rootObjects;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Rigidbody> m_allRigidBodies;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewBool m_isKinematic;

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1749A10", Offset = "0x1749A10", VA = "0x1749A10")]
		private void Start()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1749B30", Offset = "0x1749B30", VA = "0x1749B30", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1749BE0", Offset = "0x1749BE0", VA = "0x1749BE0")]
		public EventSetRigidbodyProperties()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class EventSetTransform : Triggerable
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_setThis;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_toThis;

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1749BE8", Offset = "0x1749BE8", VA = "0x1749BE8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1749C4C", Offset = "0x1749C4C", VA = "0x1749C4C")]
		public EventSetTransform()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class EventSpawnPrefab : Triggerable
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_prefab;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_location;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_makeChildOfLocation;

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1749C54", Offset = "0x1749C54", VA = "0x1749C54", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1749D94", Offset = "0x1749D94", VA = "0x1749D94")]
		public EventSpawnPrefab()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class EventTagAs : Triggerable
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tag;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_recursive;

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1749D9C", Offset = "0x1749D9C", VA = "0x1749D9C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1749E10", Offset = "0x1749E10", VA = "0x1749E10")]
		public EventTagAs()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class EventToggleActive : Triggerable
	{
		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_revertOnExit;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] m_defaultActive;

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1749E74", Offset = "0x1749E74", VA = "0x1749E74")]
		private void Start()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x174A120", Offset = "0x174A120", VA = "0x174A120", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x174A22C", Offset = "0x174A22C", VA = "0x174A22C", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x174A2FC", Offset = "0x174A2FC", VA = "0x174A2FC")]
		public EventToggleActive()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class TriggerParticlesStopStartOnPlayerTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] m_particles;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_particlesParent;

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1794A8C", Offset = "0x1794A8C", VA = "0x1794A8C")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1794B98", Offset = "0x1794B98", VA = "0x1794B98")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1794C5C", Offset = "0x1794C5C", VA = "0x1794C5C")]
		public TriggerParticlesStopStartOnPlayerTrigger()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public abstract class Triggerable : MonoBehaviour
	{
		[Token(Token = "0x6002324")]
		public abstract void Trigger();

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x1794C6C", Offset = "0x1794C6C", VA = "0x1794C6C", Slot = "5")]
		public virtual void Untrigger()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x178B0C4", Offset = "0x178B0C4", VA = "0x178B0C4")]
		protected Triggerable()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class KeyboardTrigger : Trigger
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode m_triggerKey;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_untriggerOnRelease;

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x18174D4", Offset = "0x18174D4", VA = "0x18174D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1817538", Offset = "0x1817538", VA = "0x1817538")]
		public KeyboardTrigger()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public abstract class Trigger : MonoBehaviour
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triggerable[] m_triggerables;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9AFC", Offset = "0x8F9AFC")]
		public bool m_on;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x17923D4", Offset = "0x17923D4", VA = "0x17923D4")]
		public void ResetTriggerablesList()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x17923E0", Offset = "0x17923E0", VA = "0x17923E0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x1792444", Offset = "0x1792444", VA = "0x1792444")]
		public void FireTrigger()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1792514", Offset = "0x1792514", VA = "0x1792514")]
		public void UnfireTrigger()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x17925D8", Offset = "0x17925D8", VA = "0x17925D8")]
		protected Trigger()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class TriggerAfterDelay : Trigger
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_triggerAfter;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_originalTime;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_loop;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_repeatOnEnable;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_waitForLevelLoadToFinish;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		private bool hasFired;

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x17925E0", Offset = "0x17925E0", VA = "0x17925E0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x179260C", Offset = "0x179260C", VA = "0x179260C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x1792624", Offset = "0x1792624", VA = "0x1792624")]
		private void Update()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x1792694", Offset = "0x1792694", VA = "0x1792694")]
		public TriggerAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class TriggerOnCollision : TriggerWithObject
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minSpeed;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_triggerableByComponent;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Type> m_triggerableByTypes;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool m_repeatable;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_debug;

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x17926A4", Offset = "0x17926A4", VA = "0x17926A4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1792948", Offset = "0x1792948", VA = "0x1792948")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1792C5C", Offset = "0x1792C5C", VA = "0x1792C5C")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x1792C6C", Offset = "0x1792C6C", VA = "0x1792C6C")]
		public TriggerOnCollision()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class TriggerOnEnable : Trigger
	{
		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1792C84", Offset = "0x1792C84", VA = "0x1792C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1792C88", Offset = "0x1792C88", VA = "0x1792C88")]
		public TriggerOnEnable()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class TriggerOnGameObjectsDisabled : Trigger
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> m_gameObjectsToWatch;

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1792C90", Offset = "0x1792C90", VA = "0x1792C90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1792D50", Offset = "0x1792D50", VA = "0x1792D50")]
		public TriggerOnGameObjectsDisabled()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class TriggerOnMouse : Trigger
	{
		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1792D58", Offset = "0x1792D58", VA = "0x1792D58")]
		public TriggerOnMouse()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class TriggerOnOtherGameObjectEnabled : Trigger
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_gameObjectToWatch;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_enabledLastFrame;

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1793BC4", Offset = "0x1793BC4", VA = "0x1793BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1793C6C", Offset = "0x1793C6C", VA = "0x1793C6C")]
		public TriggerOnOtherGameObjectEnabled()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class TriggerOnStart : MonoBehaviour
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_repeatOnEveryStart;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_hasExecuted;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_waitForLevelLoadToFinish;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Triggerable[] m_triggerables;

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x1793C74", Offset = "0x1793C74", VA = "0x1793C74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1793CD0", Offset = "0x1793CD0", VA = "0x1793CD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x1793D64", Offset = "0x1793D64", VA = "0x1793D64")]
		public TriggerOnStart()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class TriggerOnTrigger : TriggerWithObject
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] m_triggerableByNamed;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_triggerableByComponent;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Type> m_triggerableByTypes;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> m_allTriggerableBy;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8F9B68", Offset = "0x8F9B68")]
		public bool m_evenWhenInteractingWithSomethingElse;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_repeatable;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_canTriggerOnEnable;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Collider> m_ignoreColliders;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_enabledAt;

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1793D6C", Offset = "0x1793D6C", VA = "0x1793D6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1793D94", Offset = "0x1793D94", VA = "0x1793D94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1793DA0", Offset = "0x1793DA0", VA = "0x1793DA0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x1794098", Offset = "0x1794098", VA = "0x1794098")]
		private void Start()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1794190", Offset = "0x1794190", VA = "0x1794190")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x179458C", Offset = "0x179458C", VA = "0x179458C")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1794628", Offset = "0x1794628", VA = "0x1794628")]
		public TriggerOnTrigger()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class TriggerOnTriggerExit : Trigger
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] m_triggerableByNamed;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> m_allTriggerableBy;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool m_repeatable;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x17946C8", Offset = "0x17946C8", VA = "0x17946C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1794758", Offset = "0x1794758", VA = "0x1794758")]
		private void Start()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x1794850", Offset = "0x1794850", VA = "0x1794850")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1794A7C", Offset = "0x1794A7C", VA = "0x1794A7C")]
		public TriggerOnTriggerExit()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class TriggerWithObject : Trigger
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Collider m_lastTriggeredBy;

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x1792C7C", Offset = "0x1792C7C", VA = "0x1792C7C")]
		public TriggerWithObject()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class TriggerWithScript : Trigger
	{
		[Token(Token = "0x600234C")]
		[Address(RVA = "0x1794C64", Offset = "0x1794C64", VA = "0x1794C64")]
		public TriggerWithScript()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class CircularPrefabPool
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_capacity;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject[] m_objects;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextObject;

		[Token(Token = "0x17000477")]
		public int NumActive
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x1A2B718", Offset = "0x1A2B718", VA = "0x1A2B718")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x1A2B79C", Offset = "0x1A2B79C", VA = "0x1A2B79C")]
		public CircularPrefabPool(int capacity, GameObject prefab)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x1A2B94C", Offset = "0x1A2B94C", VA = "0x1A2B94C")]
		public CircularPrefabPool(int capacity, GameObject[] prefabs)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1A2BB78", Offset = "0x1A2BB78", VA = "0x1A2BB78")]
		public GameObject GetNext()
		{
			return null;
		}
	}
	[Token(Token = "0x2000542")]
	public class ObjectPools : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000543")]
		public class PreAllocatedCircularPool
		{
			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_prefab;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_count;

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x16B9E98", Offset = "0x16B9E98", VA = "0x16B9E98")]
			public PreAllocatedCircularPool()
			{
			}
		}

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<GameObject, TrackedPool<GameObject>> ms_pools;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<GameObject, CircularPrefabPool> ms_circularPools;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PreAllocatedCircularPool> m_preAllocCircularPools;

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x159BCCC", Offset = "0x159BCCC", VA = "0x159BCCC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x90869C", Offset = "0x90869C")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x159BD30", Offset = "0x159BD30", VA = "0x159BD30")]
		public static void ClearStatics(Scene arg0)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x159BE30", Offset = "0x159BE30", VA = "0x159BE30")]
		public static void CreateStatics()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x159BF9C", Offset = "0x159BF9C", VA = "0x159BF9C")]
		public static TrackedPool<GameObject> GetOrCreatePool(GameObject prefab, int poolSize = 16, [Optional] string defaultParentName)
		{
			return null;
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x159C498", Offset = "0x159C498", VA = "0x159C498")]
		public static CircularPrefabPool GetOrCreateCircularPool(GameObject prefab, int poolSize = 16, [Optional] string defaultParentName)
		{
			return null;
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x159C988", Offset = "0x159C988", VA = "0x159C988")]
		public void Start()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x159CB08", Offset = "0x159CB08", VA = "0x159CB08")]
		public ObjectPools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000544")]
	public class TrackedPool<T>
	{
		[Token(Token = "0x2000545")]
		public delegate T CreateObject();

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> m_available;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> m_inUse;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private System.Random m_random;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject m_prefab;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameObject> m_prefabList;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreateObject m_objectCreator;

		[Token(Token = "0x17000478")]
		public int AvailableCount
		{
			[Token(Token = "0x6002359")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000479")]
		public int InUseCount
		{
			[Token(Token = "0x600235A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700047A")]
		public int TotalCount
		{
			[Token(Token = "0x600235B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600235C")]
		public TrackedPool(int startingCapacity = 0)
		{
		}

		[Token(Token = "0x600235D")]
		public TrackedPool(T[] startingArray)
		{
		}

		[Token(Token = "0x600235E")]
		public TrackedPool(List<T> startingList)
		{
		}

		[Token(Token = "0x600235F")]
		public TrackedPool(List<GameObject> prefabList, int startingCapacity)
		{
		}

		[Token(Token = "0x6002360")]
		public TrackedPool(GameObject prefab, int startingCapacity)
		{
		}

		[Token(Token = "0x6002361")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6002362")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002363")]
		public bool AddIfUnique(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002364")]
		public void Add(List<T> items)
		{
		}

		[Token(Token = "0x6002365")]
		public void Add(GameObject prefab, int count)
		{
		}

		[Token(Token = "0x6002366")]
		public void Remove(T item)
		{
		}

		[Token(Token = "0x6002367")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002368")]
		public T GetNextAvailable()
		{
			return (T)null;
		}

		[Token(Token = "0x6002369")]
		public T GetRandomAvailable()
		{
			return (T)null;
		}

		[Token(Token = "0x600236A")]
		public T Get(T request)
		{
			return (T)null;
		}

		[Token(Token = "0x600236B")]
		public void SetInUse(T item)
		{
		}

		[Token(Token = "0x600236C")]
		public void Return(T u)
		{
		}

		[Token(Token = "0x600236D")]
		public void SetAllAvailable()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[ExecuteInEditMode]
	public class BezierLine : Line
	{
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE928", Offset = "0x8EE928")]
		private sealed class <GeneratePoints>d__6 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BezierLine <>4__this;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700047B")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x6002378")]
				[Address(RVA = "0x1766544", Offset = "0x1766544", VA = "0x1766544", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600237A")]
				[Address(RVA = "0x1766590", Offset = "0x1766590", VA = "0x1766590", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002375")]
			[Address(RVA = "0x17663BC", Offset = "0x17663BC", VA = "0x17663BC")]
			[DebuggerHidden]
			public <GeneratePoints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0x17663F4", Offset = "0x17663F4", VA = "0x17663F4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002377")]
			[Address(RVA = "0x17663F8", Offset = "0x17663F8", VA = "0x17663F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x1766550", Offset = "0x1766550", VA = "0x1766550", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x17665F0", Offset = "0x17665F0", VA = "0x17665F0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x17666A0", Offset = "0x17666A0", VA = "0x17666A0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_ptA;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_ptB;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_ptC;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_ptACache;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_ptBCache;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_ptCCache;

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1773AE8", Offset = "0x1773AE8", VA = "0x1773AE8", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9086B0", Offset = "0x9086B0")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1773B60", Offset = "0x1773B60", VA = "0x1773B60", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1773C54", Offset = "0x1773C54", VA = "0x1773C54")]
		public BezierLine()
		{
		}
	}
	[Token(Token = "0x2000548")]
	[ExecuteInEditMode]
	public class ElasticLine : Line
	{
		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE948", Offset = "0x8EE948")]
		private sealed class <GeneratePoints>d__8 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ElasticLine <>4__this;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lineN>5__2;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <midPt>5__3;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <tScale>5__4;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <i>5__5;

			[Token(Token = "0x1700047D")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x6002384")]
				[Address(RVA = "0x15EF184", Offset = "0x15EF184", VA = "0x15EF184", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x1700047E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002386")]
				[Address(RVA = "0x15EF1D0", Offset = "0x15EF1D0", VA = "0x15EF1D0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0x15EEDE4", Offset = "0x15EEDE4", VA = "0x15EEDE4")]
			[DebuggerHidden]
			public <GeneratePoints>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0x15EEE1C", Offset = "0x15EEE1C", VA = "0x15EEE1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0x15EEE20", Offset = "0x15EEE20", VA = "0x15EEE20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002385")]
			[Address(RVA = "0x15EF190", Offset = "0x15EF190", VA = "0x15EF190", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x15EF230", Offset = "0x15EF230", VA = "0x15EF230", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x15EF2E0", Offset = "0x15EF2E0", VA = "0x15EF2E0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_minWidth;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_maxLength;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Spring m_spring;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_simulateInLocalSpace;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_endCache;

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1741EB0", Offset = "0x1741EB0", VA = "0x1741EB0", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908780", Offset = "0x908780")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1741F28", Offset = "0x1741F28", VA = "0x1741F28")]
		private void Start()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x174201C", Offset = "0x174201C", VA = "0x174201C", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x17420D0", Offset = "0x17420D0", VA = "0x17420D0")]
		public ElasticLine()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class ItemDropper : MonoBehaviour
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_prefabs;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_maxInWorld;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_autoDrop;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_spacing;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timer;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CircularPrefabPool m_prefabPool;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_randomStartRotation;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9BC0", Offset = "0x8F9BC0")]
		public Vector3Range m_rotationRange;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_randomStartVel;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_useMyRotationForVel;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 m_directionalVelMin;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 m_directionalVelRnd;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_onlyDropIfInActiveAvailable;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_waitingToDropSpecial;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_waitingToDropStandard;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9BF8", Offset = "0x8F9BF8")]
		public GameObject m_wwiseGameObject;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_standardDropSound;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_specialDropSound;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string m_audioToPlay;

		[Token(Token = "0x1700047F")]
		public int NumActive
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0x16D9668", Offset = "0x16D9668", VA = "0x16D9668")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000480")]
		public bool CanDrop
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0x16D9684", Offset = "0x16D9684", VA = "0x16D9684")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x16D96C0", Offset = "0x16D96C0", VA = "0x16D96C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x16D974C", Offset = "0x16D974C", VA = "0x16D974C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x16D9750", Offset = "0x16D9750", VA = "0x16D9750")]
		private void Update()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x16D99A8", Offset = "0x16D99A8", VA = "0x16D99A8")]
		public void SpecialDrop()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x16D9834", Offset = "0x16D9834", VA = "0x16D9834")]
		public void Drop()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x16D99B8", Offset = "0x16D99B8", VA = "0x16D99B8")]
		public void Dump()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x16D99F4", Offset = "0x16D99F4", VA = "0x16D99F4")]
		public void KillAllItems()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x16D9A6C", Offset = "0x16D9A6C", VA = "0x16D9A6C")]
		public void ClearDropLists()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x16D9844", Offset = "0x16D9844", VA = "0x16D9844")]
		private void DropItem()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x16D9A74", Offset = "0x16D9A74", VA = "0x16D9A74")]
		private void SpawnNew(GameObject o)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x16D9E4C", Offset = "0x16D9E4C", VA = "0x16D9E4C")]
		public ItemDropper()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask m_layerMask;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float theta;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_maxDist;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_sourceTransform;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_drawLaserLineRenderer;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] m_linePts;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9C30", Offset = "0x8F9C30")]
		private Collider <m_currentCollider>k__BackingField;

		[Token(Token = "0x17000481")]
		public Collider m_currentCollider
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x1B1C008", Offset = "0x1B1C008", VA = "0x1B1C008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908850", Offset = "0x908850")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x1B1C010", Offset = "0x1B1C010", VA = "0x1B1C010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908860", Offset = "0x908860")]
			private set
			{
			}
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x1B1C018", Offset = "0x1B1C018", VA = "0x1B1C018")]
		private void Start()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x1B1C0E8", Offset = "0x1B1C0E8", VA = "0x1B1C0E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x1B1C4FC", Offset = "0x1B1C4FC", VA = "0x1B1C4FC")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public abstract class Line : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public struct Point
		{
			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_position;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float m_width;

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x16B227C", Offset = "0x16B227C", VA = "0x16B227C")]
			public Point(Vector3 position)
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x16B2290", Offset = "0x16B2290", VA = "0x16B2290")]
			public Point(Vector3 position, float width)
			{
			}
		}

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Polyline m_polyLine;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer m_line;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_numPoints;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_displayLengthThreshold;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_sleepDistanceThreshold;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_sleeping;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Point[] m_points;

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x1B1F4F0", Offset = "0x1B1F4F0", VA = "0x1B1F4F0")]
		protected void WakeUp()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x1B1F4F8", Offset = "0x1B1F4F8", VA = "0x1B1F4F8")]
		protected bool ThresholdCheck(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x1B1F54C", Offset = "0x1B1F54C", VA = "0x1B1F54C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1B1FD64", Offset = "0x1B1FD64", VA = "0x1B1FD64")]
		public Vector3 GetPointWorld(int idx)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x1B1FD00", Offset = "0x1B1FD00", VA = "0x1B1FD00")]
		public Vector3 GetPointLocal(int idx)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023A0")]
		protected abstract IEnumerable<Point> GeneratePoints();

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x1B1FDA4", Offset = "0x1B1FDA4", VA = "0x1B1FDA4")]
		protected Line()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[ExecuteInEditMode]
	public class ManhattanLine : Line
	{
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE968", Offset = "0x8EE968")]
		private sealed class <GeneratePoints>d__4 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ManhattanLine <>4__this;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <midPt>5__2;

			[Token(Token = "0x17000482")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x60023AB")]
				[Address(RVA = "0x16B4418", Offset = "0x16B4418", VA = "0x16B4418", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x17000483")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0x16B4464", Offset = "0x16B4464", VA = "0x16B4464", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x16B4270", Offset = "0x16B4270", VA = "0x16B4270")]
			[DebuggerHidden]
			public <GeneratePoints>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x16B42A8", Offset = "0x16B42A8", VA = "0x16B42A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x16B42AC", Offset = "0x16B42AC", VA = "0x16B42AC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x16B4424", Offset = "0x16B4424", VA = "0x16B4424", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023AE")]
			[Address(RVA = "0x16B44C4", Offset = "0x16B44C4", VA = "0x16B44C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x16B4574", Offset = "0x16B4574", VA = "0x16B4574", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_endCache;

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1AB06B0", Offset = "0x1AB06B0", VA = "0x1AB06B0", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908870", Offset = "0x908870")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1AB0728", Offset = "0x1AB0728", VA = "0x1AB0728")]
		private void Start()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1AB0734", Offset = "0x1AB0734", VA = "0x1AB0734", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x1AB07E8", Offset = "0x1AB07E8", VA = "0x1AB07E8")]
		public ManhattanLine()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class Placeholder : MonoBehaviour
	{
		[Token(Token = "0x2000551")]
		public enum Fn
		{
			[Token(Token = "0x4001CB7")]
			OnEnable,
			[Token(Token = "0x4001CB8")]
			Awake,
			[Token(Token = "0x4001CB9")]
			Start,
			[Token(Token = "0x4001CBA")]
			Manual
		}

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_prefab;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_material;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useScale;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_takeName;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_destroyMe;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool m_makeMyChild;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool done;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Fn m_instantiateTime;

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x1910E14", Offset = "0x1910E14", VA = "0x1910E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x19110A4", Offset = "0x19110A4", VA = "0x19110A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x19110B4", Offset = "0x19110B4", VA = "0x19110B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x1910E28", Offset = "0x1910E28", VA = "0x1910E28")]
		public void DoInstantiate()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x19110C8", Offset = "0x19110C8", VA = "0x19110C8")]
		public Placeholder()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class Resettable : MonoBehaviour
	{
		[Token(Token = "0x2000553")]
		public delegate void ResettableDelegate();

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ResettableDelegate OnResetToStart;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ResettableDelegate OnResetToCheckpoint;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ResettableDelegate OnSaveCheckpoint;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isHardReset;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_startPosition;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion m_startRotation;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_checkpointPosition;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_checkpointRotation;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_checkpointVelocity;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_checkpointAngularVelocity;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x188B1E8", Offset = "0x188B1E8", VA = "0x188B1E8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x908940", Offset = "0x908940")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x188B28C", Offset = "0x188B28C", VA = "0x188B28C")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x188B3B8", Offset = "0x188B3B8", VA = "0x188B3B8")]
		public static void ResetToStart()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x188B47C", Offset = "0x188B47C", VA = "0x188B47C")]
		public static void ResetToCheckpoint()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x188B520", Offset = "0x188B520", VA = "0x188B520")]
		public static void SaveCheckpoint()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x188B5C4", Offset = "0x188B5C4", VA = "0x188B5C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x188B900", Offset = "0x188B900", VA = "0x188B900")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x188BAF8", Offset = "0x188BAF8", VA = "0x188BAF8")]
		public void DoResetToStart()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x188BBF0", Offset = "0x188BBF0", VA = "0x188BBF0")]
		public void DoResetToCheckpoint()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x188BCE0", Offset = "0x188BCE0", VA = "0x188BCE0")]
		private void DoSaveCheckpoint()
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x188BDC8", Offset = "0x188BDC8", VA = "0x188BDC8")]
		public Resettable()
		{
		}
	}
	[Token(Token = "0x2000554")]
	[ExecuteInEditMode]
	public class SaggyLine : Line
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE988", Offset = "0x8EE988")]
		private sealed class <GeneratePoints>d__8 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SaggyLine <>4__this;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000484")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x60023CC")]
				[Address(RVA = "0x15866EC", Offset = "0x15866EC", VA = "0x15866EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x17000485")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CE")]
				[Address(RVA = "0x1586738", Offset = "0x1586738", VA = "0x1586738", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x15863F4", Offset = "0x15863F4", VA = "0x15863F4")]
			[DebuggerHidden]
			public <GeneratePoints>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x158642C", Offset = "0x158642C", VA = "0x158642C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x1586430", Offset = "0x1586430", VA = "0x1586430", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x15866F8", Offset = "0x15866F8", VA = "0x15866F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x1586798", Offset = "0x1586798", VA = "0x1586798", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x1586848", Offset = "0x1586848", VA = "0x1586848", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_maxSag;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Spring m_spring;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_simulateInLocalSpace;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_endCache;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_firstRun;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x18956B0", Offset = "0x18956B0", VA = "0x18956B0", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908954", Offset = "0x908954")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1895728", Offset = "0x1895728", VA = "0x1895728")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1895824", Offset = "0x1895824", VA = "0x1895824", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x18958D8", Offset = "0x18958D8", VA = "0x18958D8")]
		public SaggyLine()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class Appearer : MonoBehaviour
	{
		[Token(Token = "0x2000557")]
		public enum Tween
		{
			[Token(Token = "0x4001CE5")]
			Linear,
			[Token(Token = "0x4001CE6")]
			Sin,
			[Token(Token = "0x4001CE7")]
			Bounce,
			[Token(Token = "0x4001CE8")]
			Curve
		}

		[Token(Token = "0x2000558")]
		public enum State
		{
			[Token(Token = "0x4001CEA")]
			Appear,
			[Token(Token = "0x4001CEB")]
			Visible,
			[Token(Token = "0x4001CEC")]
			Disappear,
			[Token(Token = "0x4001CED")]
			Hidden
		}

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Tween m_tween;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve m_curve;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StateMachine<State> m_sm;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public State m_transition;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private State m_initialTransition;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_timer;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FloatRange m_timerStartRandom;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_initialTimer;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_progress;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_targetScale;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_shouldOverrideTargetScale;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 m_overrideTargetScale;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9C40", Offset = "0x8F9C40")]
		public GameObject m_wwiseObject;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_wwiseEventStart;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_wwiseEventEnd;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_timerWas;

		[Token(Token = "0x17000486")]
		public bool Visible
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1AA25D4", Offset = "0x1AA25D4", VA = "0x1AA25D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1AA2464", Offset = "0x1AA2464", VA = "0x1AA2464")]
		public void Appear(float delay = 0f)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1AA24D0", Offset = "0x1AA24D0", VA = "0x1AA24D0")]
		public void Disappear(float delay = 0f)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1AA2544", Offset = "0x1AA2544", VA = "0x1AA2544")]
		public void Hide()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1AA2628", Offset = "0x1AA2628", VA = "0x1AA2628")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1AA28A8", Offset = "0x1AA28A8", VA = "0x1AA28A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1AA2978", Offset = "0x1AA2978", VA = "0x1AA2978")]
		private void Update()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x1AA2A6C", Offset = "0x1AA2A6C", VA = "0x1AA2A6C")]
		private void UpdateAppear()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1AA2C4C", Offset = "0x1AA2C4C", VA = "0x1AA2C4C")]
		private void UpdateVisible()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1AA2C50", Offset = "0x1AA2C50", VA = "0x1AA2C50")]
		private void UpdateDisappear()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1AA2CFC", Offset = "0x1AA2CFC", VA = "0x1AA2CFC")]
		private void UpdateHidden()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x1AA2D00", Offset = "0x1AA2D00", VA = "0x1AA2D00")]
		public Appearer()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class ChildMaker : MonoBehaviour
	{
		[Token(Token = "0x200055A")]
		public enum BuildType
		{
			[Token(Token = "0x4001CF5")]
			All_Builds,
			[Token(Token = "0x4001CF6")]
			PC_Only,
			[Token(Token = "0x4001CF7")]
			PS4_Only
		}

		[Token(Token = "0x200055B")]
		public enum ActionTime
		{
			[Token(Token = "0x4001CF9")]
			Awake,
			[Token(Token = "0x4001CFA")]
			Start
		}

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_newParent;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_localPosToZero;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_localRotRotToZero;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_localScaleToOne;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BuildType m_reparentFor;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActionTime m_reparentAt;

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x1A2B3D4", Offset = "0x1A2B3D4", VA = "0x1A2B3D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x1A2B4B8", Offset = "0x1A2B4B8", VA = "0x1A2B4B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x1A2B3E4", Offset = "0x1A2B3E4", VA = "0x1A2B3E4")]
		private void DoReparent()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1A2B4CC", Offset = "0x1A2B4CC", VA = "0x1A2B4CC")]
		public ChildMaker()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class ChildSnatcher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public class OtherChildPair
		{
			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string childName;

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x176B32C", Offset = "0x176B32C", VA = "0x176B32C")]
			public OtherChildPair()
			{
			}
		}

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_makeMyChildren;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OtherChildPair[] m_named;

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1A2B4D4", Offset = "0x1A2B4D4", VA = "0x1A2B4D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1A2B710", Offset = "0x1A2B710", VA = "0x1A2B710")]
		public ChildSnatcher()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class LookAt : MonoBehaviour
	{
		[Token(Token = "0x200055F")]
		public enum TargetCamera
		{
			[Token(Token = "0x4001D0A")]
			None,
			[Token(Token = "0x4001D0B")]
			Main
		}

		[Token(Token = "0x2000560")]
		public enum Axis
		{
			[Token(Token = "0x4001D0D")]
			X,
			[Token(Token = "0x4001D0E")]
			Y,
			[Token(Token = "0x4001D0F")]
			Z,
			[Token(Token = "0x4001D10")]
			Free
		}

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_zeroRotationIfNoTarget;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Axis localAxis;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TargetCamera m_lookAtCameraIfNoTargetSet;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_applyRotationOffset;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8F9C78", Offset = "0x8F9C78")]
		public Vector3 m_rotOffset;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_lerpToTarget;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_lerpRate;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_faceAway;

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1AACDC0", Offset = "0x1AACDC0", VA = "0x1AACDC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1AACDC4", Offset = "0x1AACDC4", VA = "0x1AACDC4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1AAD204", Offset = "0x1AAD204", VA = "0x1AAD204")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class PerfectLocalTransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTarget;

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x15A9954", Offset = "0x15A9954", VA = "0x15A9954")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x15A9A50", Offset = "0x15A9A50", VA = "0x15A9A50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x15A9B34", Offset = "0x15A9B34", VA = "0x15A9B34")]
		public PerfectLocalTransformMatcher()
		{
		}
	}
	[Token(Token = "0x2000562")]
	[ExecuteInEditMode]
	public class PerfectTransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTarget;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_executeInEditor;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_matchScale;

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x15A9B3C", Offset = "0x15A9B3C", VA = "0x15A9B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x15A9C38", Offset = "0x15A9C38", VA = "0x15A9C38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x15A9D78", Offset = "0x15A9D78", VA = "0x15A9D78")]
		public PerfectTransformMatcher()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class SimpleMovement : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		public enum Scope
		{
			[Token(Token = "0x4001D20")]
			Global,
			[Token(Token = "0x4001D21")]
			Local
		}

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_randomiseVelocity;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Scope m_velocityScope;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_velocity;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatRange m_velocityMagnitdeRange;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_randomiseAngularVel;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Scope m_rotationalScope;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_angularVel;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatRange m_AngularVelMagnitudeRange;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x15BE1B8", Offset = "0x15BE1B8", VA = "0x15BE1B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x15BE268", Offset = "0x15BE268", VA = "0x15BE268")]
		private void Update()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x15BE518", Offset = "0x15BE518", VA = "0x15BE518")]
		public SimpleMovement()
		{
		}
	}
	[Token(Token = "0x2000565")]
	public class TransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		public enum TargetRef
		{
			[Token(Token = "0x4001D43")]
			reference,
			[Token(Token = "0x4001D44")]
			name
		}

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetRef m_targetRef;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_target;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_namedTarget;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_prefectMatch;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_prefectMatchPosOnEnable;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_prefectMatchRotYOnEnable;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_xPosMatchRate;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_yPosMatchRate;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_zPosMatchRate;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_xRotMatchRate;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_yRotMatchRate;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_zRotMatchRate;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_xPosMatch;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool m_yPosMatch;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool m_zPosMatch;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool m_xRotMatch;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_yRotMatch;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_zRotMatch;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_doWorldSpaceOffset;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_offsetWorldSpace;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_doLocalSpaceOffset;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 m_offsetLocalSpace;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_doLocalRotationOffset;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 m_offsetLocalRotation;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_updateInEditor;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_xPosVel;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_yPosVel;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_zPosVel;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_xRotVel;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_yRotVel;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_zRotVel;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool m_useScaledTime;

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x17919D4", Offset = "0x17919D4", VA = "0x17919D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x1791B84", Offset = "0x1791B84", VA = "0x1791B84")]
		private void SetupTarget()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x1792090", Offset = "0x1792090", VA = "0x1792090")]
		private void Start()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x1791C7C", Offset = "0x1791C7C", VA = "0x1791C7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x178AA04", Offset = "0x178AA04", VA = "0x178AA04")]
		public void MatchNow()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x1792094", Offset = "0x1792094", VA = "0x1792094")]
		public TransformMatcher()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class BuildInfoLabel : MonoBehaviour
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_text;

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x177EDA8", Offset = "0x177EDA8", VA = "0x177EDA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x177EEBC", Offset = "0x177EEBC", VA = "0x177EEBC")]
		public BuildInfoLabel()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class DisableOnAwake : MonoBehaviour
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x173C518", Offset = "0x173C518", VA = "0x173C518")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x173C51C", Offset = "0x173C51C", VA = "0x173C51C")]
		public void DoHide()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x173C544", Offset = "0x173C544", VA = "0x173C544")]
		public DisableOnAwake()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class DisableOnSceneLoad : MonoBehaviour
	{
		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x173C54C", Offset = "0x173C54C", VA = "0x173C54C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x173C590", Offset = "0x173C590", VA = "0x173C590")]
		public void DoHide()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x173C5B8", Offset = "0x173C5B8", VA = "0x173C5B8")]
		public DisableOnSceneLoad()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class FadeCurtain : MonoBehaviour
	{
		[Token(Token = "0x200056B")]
		public enum FadeDir
		{
			[Token(Token = "0x4001D57")]
			ToOpaque,
			[Token(Token = "0x4001D58")]
			ToTransparent,
			[Token(Token = "0x4001D59")]
			Hold
		}

		[Token(Token = "0x200056C")]
		public enum FadeType
		{
			[Token(Token = "0x4001D5B")]
			Standard,
			[Token(Token = "0x4001D5C")]
			CustomCurve
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE9A8", Offset = "0x8EE9A8")]
		private sealed class <WarmUp>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeCurtain <>4__this;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002413")]
				[Address(RVA = "0x15F29A0", Offset = "0x15F29A0", VA = "0x15F29A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0x15F29E8", Offset = "0x15F29E8", VA = "0x15F29E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x15F264C", Offset = "0x15F264C", VA = "0x15F264C")]
			[DebuggerHidden]
			public <WarmUp>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0x15F2678", Offset = "0x15F2678", VA = "0x15F2678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x15F267C", Offset = "0x15F267C", VA = "0x15F267C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x15F29A8", Offset = "0x15F29A8", VA = "0x15F29A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useSeparateCamera;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FadeCurtain _master;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9CBC", Offset = "0x8F9CBC")]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8F9CBC", Offset = "0x8F9CBC")]
		public bool m_isMaster;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_curtain;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera[] m_camera;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color m_opaque;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color m_transparent;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_fadeTimer;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_fadeTimerLastFrame;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_fadeDuration;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private FadeDir m_fadeDir;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FadeType m_fadeType;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve m_customCurve;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OVRPassthroughLayer m_passthroughLayer;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_passthroughWasEnabled;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_initialised;

		[Token(Token = "0x17000487")]
		public bool IsOpaque
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x1750228", Offset = "0x1750228", VA = "0x1750228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000488")]
		public bool IsTransparent
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x175023C", Offset = "0x175023C", VA = "0x175023C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000489")]
		public bool IsFading
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x175024C", Offset = "0x175024C", VA = "0x175024C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048A")]
		public static FadeCurtain Master
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x1745BC8", Offset = "0x1745BC8", VA = "0x1745BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x175026C", Offset = "0x175026C", VA = "0x175026C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x908A24", Offset = "0x908A24")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x17502BC", Offset = "0x17502BC", VA = "0x17502BC")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x17503BC", Offset = "0x17503BC", VA = "0x17503BC")]
		private void GoOpaque()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1750480", Offset = "0x1750480", VA = "0x1750480")]
		private void GoTransparent()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x175048C", Offset = "0x175048C", VA = "0x175048C")]
		public void SetColour(Color c)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x17504A4", Offset = "0x17504A4", VA = "0x17504A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1750844", Offset = "0x1750844", VA = "0x1750844")]
		private void EnableCurtain()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x17507CC", Offset = "0x17507CC", VA = "0x17507CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908A38", Offset = "0x908A38")]
		private IEnumerator WarmUp()
		{
			return null;
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x17508D0", Offset = "0x17508D0", VA = "0x17508D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x17503C8", Offset = "0x17503C8", VA = "0x17503C8")]
		public void FadeToOpaque(float duration, FadeType fadeType = FadeType.Standard)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1745D8C", Offset = "0x1745D8C", VA = "0x1745D8C")]
		public void FadeToTransparent(float duration, FadeType fadeType = FadeType.Standard)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x1750C90", Offset = "0x1750C90", VA = "0x1750C90")]
		public void SetOpaqueInstantaneous()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x17506C4", Offset = "0x17506C4", VA = "0x17506C4")]
		public void SetTransparentInstantaneous()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x1750D94", Offset = "0x1750D94", VA = "0x1750D94")]
		public FadeCurtain()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class HideOnAwake : MonoBehaviour
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_hideChildren;

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x194AC00", Offset = "0x194AC00", VA = "0x194AC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x194AC04", Offset = "0x194AC04", VA = "0x194AC04")]
		public void DoHide()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x194ACEC", Offset = "0x194ACEC", VA = "0x194ACEC")]
		public HideOnAwake()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class StateMachine<T> where T : Enum
	{
		[Token(Token = "0x2000570")]
		public delegate void StateDelegate();

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_enterFns;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_updateFns;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_lateupdateFns;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_exitFns;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_currentState;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_nextState;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool nextStateEqualsCurrentState;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9D60", Offset = "0x8F9D60")]
		private int <NumStates>k__BackingField;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9D70", Offset = "0x8F9D70")]
		private float <StateTimer>k__BackingField;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F9D80", Offset = "0x8F9D80")]
		private float <StateTimerUnscaled>k__BackingField;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_currentStateAsInt;

		[Token(Token = "0x1700048D")]
		public T State
		{
			[Token(Token = "0x6002419")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600241A")]
			set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public int NumStates
		{
			[Token(Token = "0x600241B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908AE8", Offset = "0x908AE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600241C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908AF8", Offset = "0x908AF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public float StateTimer
		{
			[Token(Token = "0x600241D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908B08", Offset = "0x908B08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600241E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908B18", Offset = "0x908B18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000490")]
		public float StateTimerUnscaled
		{
			[Token(Token = "0x600241F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908B28", Offset = "0x908B28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x908B38", Offset = "0x908B38")]
			private set
			{
			}
		}

		[Token(Token = "0x6002421")]
		public StateMachine(T startState)
		{
		}

		[Token(Token = "0x6002422")]
		public void AddState(T state, StateDelegate updateDelegate)
		{
		}

		[Token(Token = "0x6002423")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate enterDelegate)
		{
		}

		[Token(Token = "0x6002424")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate enterDelegate, StateDelegate exitDelegate)
		{
		}

		[Token(Token = "0x6002425")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate lateUpdateDelegate, StateDelegate enterDelegate, StateDelegate exitDelegate)
		{
		}

		[Token(Token = "0x6002426")]
		public void Update()
		{
		}

		[Token(Token = "0x6002427")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002428")]
		public void PrintfDebugInfo()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class Util
	{
		[Token(Token = "0x2000572")]
		public delegate bool ComponentDelegate<T>(T cmp);

		[Token(Token = "0x2000573")]
		public enum VRSDK
		{
			[Token(Token = "0x4001D74")]
			Uninitialised = -1,
			[Token(Token = "0x4001D75")]
			Unknown,
			[Token(Token = "0x4001D76")]
			OpenVR,
			[Token(Token = "0x4001D77")]
			Oculus
		}

		[Token(Token = "0x2000574")]
		public enum VROpenXrRuntime
		{
			[Token(Token = "0x4001D79")]
			Any = -2,
			[Token(Token = "0x4001D7A")]
			Uninitialised,
			[Token(Token = "0x4001D7B")]
			Unknown,
			[Token(Token = "0x4001D7C")]
			SteamVR,
			[Token(Token = "0x4001D7D")]
			Oculus,
			[Token(Token = "0x4001D7E")]
			WindowsMR,
			[Token(Token = "0x4001D7F")]
			Other
		}

		[Token(Token = "0x2000575")]
		public enum VRDevice
		{
			[Token(Token = "0x4001D81")]
			Uninitialised = -1,
			[Token(Token = "0x4001D82")]
			Unknown,
			[Token(Token = "0x4001D83")]
			OpenVR_Any,
			[Token(Token = "0x4001D84")]
			OculusRift,
			[Token(Token = "0x4001D85")]
			OculusGo
		}

		[Token(Token = "0x2000576")]
		public enum VRControllerType
		{
			[Token(Token = "0x4001D87")]
			Uninitialised = -2,
			[Token(Token = "0x4001D88")]
			Unknown,
			[Token(Token = "0x4001D89")]
			Default,
			[Token(Token = "0x4001D8A")]
			Oculus,
			[Token(Token = "0x4001D8B")]
			Vive,
			[Token(Token = "0x4001D8C")]
			Index
		}

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform ms_tempObjects;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Transform> ms_tempObjectCategories;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VRSDK ms_currentVrSDK;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static VROpenXrRuntime ms_currentOpenXrRuntime;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static VRDevice ms_currentVrDevice;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static VRControllerType[] ms_currentVrControllerType;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string[] formatTags;

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x19D6C88", Offset = "0x19D6C88", VA = "0x19D6C88")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x908B48", Offset = "0x908B48")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x19D6D40", Offset = "0x19D6D40", VA = "0x19D6D40")]
		public static void SetupTempItemsParent()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x19D6ED8", Offset = "0x19D6ED8", VA = "0x19D6ED8")]
		public static Transform GetTempItemsParent([Optional] string type)
		{
			return null;
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x19D70C4", Offset = "0x19D70C4", VA = "0x19D70C4")]
		public static GameObject MakePrimitive(PrimitiveType pt)
		{
			return null;
		}

		[Token(Token = "0x6002431")]
		public static T NewGameObjectWithComponent<T>(string name) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002432")]
		public static T NewGameObjectWithComponent<T>(string name, Transform t) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x19D71C4", Offset = "0x19D71C4", VA = "0x19D71C4")]
		public static GameObject NewGameObject(string name, Transform t)
		{
			return null;
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x19D72A4", Offset = "0x19D72A4", VA = "0x19D72A4")]
		public static GameObject InstantiatePrefab(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x19D73D4", Offset = "0x19D73D4", VA = "0x19D73D4")]
		public static GameObject InstantiatePrefab(GameObject prefab, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x19D7564", Offset = "0x19D7564", VA = "0x19D7564")]
		public static GameObject InstantiatePrefab(GameObject prefab, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x19D773C", Offset = "0x19D773C", VA = "0x19D773C")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x19D795C", Offset = "0x19D795C", VA = "0x19D795C")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x19D7824", Offset = "0x19D7824", VA = "0x19D7824")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x19D7A40", Offset = "0x19D7A40", VA = "0x19D7A40")]
		public static bool ShouldIgnore(GameObject go, ICollection<GameObject> ignoreList)
		{
			return default(bool);
		}

		[Token(Token = "0x600243B")]
		public static bool ShouldIgnore<T>(T go, ICollection<T> ignoreList)
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x19D7D60", Offset = "0x19D7D60", VA = "0x19D7D60")]
		public static Vector3 AveragePosition(UnityEngine.Component[] comps)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600243D")]
		public static Vector3 AveragePosition<T>(List<T> comps) where T : UnityEngine.Component
		{
			return default(Vector3);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x19D7E18", Offset = "0x19D7E18", VA = "0x19D7E18")]
		public static GameObject GetClosest(Vector3 pos, ICollection<GameObject> objectList, [Optional] ICollection<GameObject> ignoreList)
		{
			return null;
		}

		[Token(Token = "0x600243F")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, [Optional] ICollection<T> ignoreList) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002440")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float closestDistSq, T ignore) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002441")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float distSq, [Optional] ICollection<T> ignoreList) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002442")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float distSq, ComponentDelegate<T> condition) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x19D8200", Offset = "0x19D8200", VA = "0x19D8200")]
		public static Transform GetClosest(Vector3 pos, ICollection<Transform> objectList)
		{
			return null;
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x19D857C", Offset = "0x19D857C", VA = "0x19D857C")]
		public static Transform GetClosest(Vector3 pos, IEnumerable<UnityEngine.Component> objectList)
		{
			return null;
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x19D8984", Offset = "0x19D8984", VA = "0x19D8984")]
		public static Transform GetWithSmallestAngle(Vector3 pos, Vector3 fwd, ICollection<UnityEngine.Component> objectList)
		{
			return null;
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x19D89D4", Offset = "0x19D89D4", VA = "0x19D89D4")]
		public static Transform GetWithSmallestAngle(Vector3 pos, Vector3 fwd, ICollection<UnityEngine.Component> objectList, out float angleOut)
		{
			return null;
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x19D8E24", Offset = "0x19D8E24", VA = "0x19D8E24")]
		public static bool WithinRadius(Vector3 A, Vector3 B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x19D8E74", Offset = "0x19D8E74", VA = "0x19D8E74")]
		public static bool WithinRadius(UnityEngine.Component A, UnityEngine.Component B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x19D8F24", Offset = "0x19D8F24", VA = "0x19D8F24")]
		public static bool WithinRadius(GameObject A, GameObject B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x19D8FD4", Offset = "0x19D8FD4", VA = "0x19D8FD4")]
		public static Vector3 ClosestishPointOnEllipse(Vector3 p, Transform t, float rx, float rz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x19D90F4", Offset = "0x19D90F4", VA = "0x19D90F4")]
		public static Vector3 PointOnEllipse(float angRad, Transform t, float rx, float rz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x19D91C0", Offset = "0x19D91C0", VA = "0x19D91C0")]
		public static void Shuffle(ref int[] array)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x19D9288", Offset = "0x19D9288", VA = "0x19D9288")]
		public static int[] RandomSequenceOfInts(int minInclusive, int maxExclusive)
		{
			return null;
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x19D936C", Offset = "0x19D936C", VA = "0x19D936C")]
		public static string FormatTime_HoursMinsSecs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x19D94A8", Offset = "0x19D94A8", VA = "0x19D94A8")]
		public static string FormatTime_MinsSecs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x19D9588", Offset = "0x19D9588", VA = "0x19D9588")]
		public static string FormatTime_MinsSecsNoLeadingZero(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x19D9668", Offset = "0x19D9668", VA = "0x19D9668")]
		public static string FormatTime_MinsSecsMs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x19D9768", Offset = "0x19D9768", VA = "0x19D9768")]
		public static string FormatTime_FriendlyTimeAgo(DateTime d)
		{
			return null;
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x19D9B7C", Offset = "0x19D9B7C", VA = "0x19D9B7C")]
		public static string FormatTime_SemiFriendly(DateTime d, CultureInfo ci)
		{
			return null;
		}

		[Token(Token = "0x6002454")]
		public static void GetComponentsInChildrenEvenIfInactive<T>(Transform t, ref List<T> list) where T : MonoBehaviour
		{
		}

		[Token(Token = "0x6002455")]
		public static List<T> FindObjectsOfTypeIncludingDisabled<T>()
		{
			return null;
		}

		[Token(Token = "0x6002456")]
		public static T FindObjectOfTypeIncludingDisabled<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x19D9C94", Offset = "0x19D9C94", VA = "0x19D9C94")]
		public static void LoadSceneAdditive(string path)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x19D9D28", Offset = "0x19D9D28", VA = "0x19D9D28")]
		public static string GetCallStack()
		{
			return null;
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x19D9FDC", Offset = "0x19D9FDC", VA = "0x19D9FDC")]
		public static VRSDK GetVrSDK()
		{
			return default(VRSDK);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x19DA150", Offset = "0x19DA150", VA = "0x19DA150")]
		public static VROpenXrRuntime GetOpenXrRuntime()
		{
			return default(VROpenXrRuntime);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x19DA33C", Offset = "0x19DA33C", VA = "0x19DA33C")]
		public static VRDevice GetVrDevice()
		{
			return default(VRDevice);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x19DA4CC", Offset = "0x19DA4CC", VA = "0x19DA4CC")]
		public static VRControllerType GetVrControllerTypeString(Chirality chirality, bool useDefaultOnError)
		{
			return default(VRControllerType);
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x19DA9D0", Offset = "0x19DA9D0", VA = "0x19DA9D0")]
		public static Vector3 ParseVector3(string s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x19DAB68", Offset = "0x19DAB68", VA = "0x19DAB68")]
		public static Quaternion ParseQuaternion(string s)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x19DAD2C", Offset = "0x19DAD2C", VA = "0x19DAD2C")]
		public static string SafeFormat(string format, object arg0)
		{
			return null;
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x19DAF04", Offset = "0x19DAF04", VA = "0x19DAF04")]
		public static string SafeFormat(string format, object arg0, object arg1)
		{
			return null;
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x19DAF88", Offset = "0x19DAF88", VA = "0x19DAF88")]
		public static string SafeFormat(string format, object arg0, object arg1, object arg2)
		{
			return null;
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x19DADA8", Offset = "0x19DADA8", VA = "0x19DADA8")]
		public static string SafeFormatForArgCount(string format, int argCount)
		{
			return null;
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x19DB01C", Offset = "0x19DB01C", VA = "0x19DB01C")]
		public Util()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class VersionNumber : MonoBehaviour
	{
		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowVersionInformation;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ShowVersionDuringTheFirst20Seconds;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string version;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect position;

		[Token(Token = "0x17000491")]
		public string Version
		{
			[Token(Token = "0x6002469")]
			[Address(RVA = "0x19E0D30", Offset = "0x19E0D30", VA = "0x19E0D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		public string Date
		{
			[Token(Token = "0x600246A")]
			[Address(RVA = "0x19E0DC8", Offset = "0x19E0DC8", VA = "0x19E0DC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x19E0EA4", Offset = "0x19E0EA4", VA = "0x19E0EA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x19E0FD4", Offset = "0x19E0FD4", VA = "0x19E0FD4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x19E10D8", Offset = "0x19E10D8", VA = "0x19E10D8")]
		public VersionNumber()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class EventCycleWwiseEvent : Triggerable
	{
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] m_events;

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1745578", Offset = "0x1745578", VA = "0x1745578", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x174557C", Offset = "0x174557C", VA = "0x174557C")]
		public EventCycleWwiseEvent()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class EventPostWwiseEvent : Triggerable
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useTempGameObject;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wwiseGameObject;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_namedWwiseGameObject;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_onTriggerEvent;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_onUntriggerEvent;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1748080", Offset = "0x1748080", VA = "0x1748080")]
		private void Start()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1748218", Offset = "0x1748218", VA = "0x1748218", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1748358", Offset = "0x1748358", VA = "0x1748358", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x17484C0", Offset = "0x17484C0", VA = "0x17484C0")]
		public EventPostWwiseEvent()
		{
		}
	}
}
namespace Vitei.Vitei
{
	[Token(Token = "0x200057A")]
	public class AndTrigger : Trigger
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Trigger> m_inputs;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_fired;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1A9B110", Offset = "0x1A9B110", VA = "0x1A9B110")]
		private void Update()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1A9B1E8", Offset = "0x1A9B1E8", VA = "0x1A9B1E8")]
		public AndTrigger()
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200057B")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001D9A")]
		Array = 1,
		[Token(Token = "0x4001D9B")]
		Object,
		[Token(Token = "0x4001D9C")]
		String,
		[Token(Token = "0x4001D9D")]
		Number,
		[Token(Token = "0x4001D9E")]
		NullValue,
		[Token(Token = "0x4001D9F")]
		Boolean,
		[Token(Token = "0x4001DA0")]
		None
	}
	[Token(Token = "0x200057C")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4001DA2")]
		Compact,
		[Token(Token = "0x4001DA3")]
		Indent
	}
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EE9B8", Offset = "0x8EE9B8")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE9F0", Offset = "0x8EE9F0")]
		private sealed class <get_Children>d__29 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170004A6")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60024BC")]
				[Address(RVA = "0x16AEF74", Offset = "0x16AEF74", VA = "0x16AEF74", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BE")]
				[Address(RVA = "0x16AEFBC", Offset = "0x16AEFBC", VA = "0x16AEFBC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x16AEF20", Offset = "0x16AEF20", VA = "0x16AEF20")]
			[DebuggerHidden]
			public <get_Children>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x16AEF58", Offset = "0x16AEF58", VA = "0x16AEF58", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x16AEF5C", Offset = "0x16AEF5C", VA = "0x16AEF5C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x16AEF7C", Offset = "0x16AEF7C", VA = "0x16AEF7C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x16AEFC4", Offset = "0x16AEFC4", VA = "0x16AEFC4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x16AF058", Offset = "0x16AF058", VA = "0x16AF058", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEA00", Offset = "0x8EEA00")]
		private sealed class <get_DeepChildren>d__31 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170004A8")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60024C6")]
				[Address(RVA = "0x16AF708", Offset = "0x16AF708", VA = "0x16AF708", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C8")]
				[Address(RVA = "0x16AF750", Offset = "0x16AF750", VA = "0x16AF750", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x16AF05C", Offset = "0x16AF05C", VA = "0x16AF05C")]
			[DebuggerHidden]
			public <get_DeepChildren>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x16AF094", Offset = "0x16AF094", VA = "0x16AF094", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x16AF29C", Offset = "0x16AF29C", VA = "0x16AF29C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x16AF1E0", Offset = "0x16AF1E0", VA = "0x16AF1E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x16AF124", Offset = "0x16AF124", VA = "0x16AF124")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x16AF710", Offset = "0x16AF710", VA = "0x16AF710", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x16AF758", Offset = "0x16AF758", VA = "0x16AF758", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x16AF808", Offset = "0x16AF808", VA = "0x16AF808", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x17000493")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x1801530", Offset = "0x1801530", VA = "0x1801530", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002477")]
			[Address(RVA = "0x1801538", Offset = "0x1801538", VA = "0x1801538", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0x180153C", Offset = "0x180153C", VA = "0x180153C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x1801544", Offset = "0x1801544", VA = "0x1801544", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000495")]
		public virtual string Value
		{
			[Token(Token = "0x600247A")]
			[Address(RVA = "0x1801548", Offset = "0x1801548", VA = "0x1801548", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x180158C", Offset = "0x180158C", VA = "0x180158C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000496")]
		public virtual int Count
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x1801590", Offset = "0x1801590", VA = "0x1801590", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000497")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x1801598", Offset = "0x1801598", VA = "0x1801598", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000498")]
		public virtual bool IsString
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x18015A0", Offset = "0x18015A0", VA = "0x18015A0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000499")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x18015A8", Offset = "0x18015A8", VA = "0x18015A8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049A")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6002480")]
			[Address(RVA = "0x18015B0", Offset = "0x18015B0", VA = "0x18015B0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049B")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x18015B8", Offset = "0x18015B8", VA = "0x18015B8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049C")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6002482")]
			[Address(RVA = "0x18015C0", Offset = "0x18015C0", VA = "0x18015C0", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049D")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6002488")]
			[Address(RVA = "0x180164C", Offset = "0x180164C", VA = "0x180164C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908B5C", Offset = "0x908B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0x18016A8", Offset = "0x18016A8", VA = "0x18016A8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908BBC", Offset = "0x908BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x600248D")]
			get;
		}

		[Token(Token = "0x170004A0")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0x180184C", Offset = "0x180184C", VA = "0x180184C", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600248F")]
			[Address(RVA = "0x18018EC", Offset = "0x18018EC", VA = "0x18018EC", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public virtual int AsInt
		{
			[Token(Token = "0x6002490")]
			[Address(RVA = "0x180192C", Offset = "0x180192C", VA = "0x180192C", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002491")]
			[Address(RVA = "0x1801964", Offset = "0x1801964", VA = "0x1801964", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6002492")]
			[Address(RVA = "0x180197C", Offset = "0x180197C", VA = "0x180197C", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x18019A0", Offset = "0x18019A0", VA = "0x18019A0", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170004A3")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x18019B4", Offset = "0x18019B4", VA = "0x18019B4", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x1801A78", Offset = "0x1801A78", VA = "0x1801A78", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170004A4")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x1801AFC", Offset = "0x1801AFC", VA = "0x1801AFC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x1801B78", Offset = "0x1801B78", VA = "0x1801B78", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x18015C8", Offset = "0x18015C8", VA = "0x18015C8", Slot = "17")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x18015CC", Offset = "0x18015CC", VA = "0x18015CC", Slot = "18")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1801634", Offset = "0x1801634", VA = "0x1801634", Slot = "19")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x180163C", Offset = "0x180163C", VA = "0x180163C", Slot = "20")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1801644", Offset = "0x1801644", VA = "0x1801644", Slot = "21")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1801720", Offset = "0x1801720", VA = "0x1801720", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x18017B0", Offset = "0x18017B0", VA = "0x18017B0", Slot = "23")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x600248C")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1801BF4", Offset = "0x1801BF4", VA = "0x1801BF4")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1801CD0", Offset = "0x1801CD0", VA = "0x1801CD0")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1801D60", Offset = "0x1801D60", VA = "0x1801D60")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1801DC4", Offset = "0x1801DC4", VA = "0x1801DC4")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1801E58", Offset = "0x1801E58", VA = "0x1801E58")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1801EBC", Offset = "0x1801EBC", VA = "0x1801EBC")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1801F50", Offset = "0x1801F50", VA = "0x1801F50")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1801FAC", Offset = "0x1801FAC", VA = "0x1801FAC")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1802040", Offset = "0x1802040", VA = "0x1802040")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x180209C", Offset = "0x180209C", VA = "0x180209C")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x17FFECC", Offset = "0x17FFECC", VA = "0x17FFECC")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1802130", Offset = "0x1802130", VA = "0x1802130")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x18021AC", Offset = "0x18021AC", VA = "0x18021AC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x18021B8", Offset = "0x18021B8", VA = "0x18021B8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x18021C0", Offset = "0x18021C0", VA = "0x18021C0")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x18025C8", Offset = "0x18025C8", VA = "0x18025C8")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x17FF610", Offset = "0x17FF610", VA = "0x17FF610")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x18027E4", Offset = "0x18027E4", VA = "0x18027E4", Slot = "36")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x18027E8", Offset = "0x18027E8", VA = "0x18027E8")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1802864", Offset = "0x1802864", VA = "0x1802864")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x18028B8", Offset = "0x18028B8", VA = "0x18028B8")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x180290C", Offset = "0x180290C", VA = "0x180290C")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1802960", Offset = "0x1802960", VA = "0x1802960")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1802AF0", Offset = "0x1802AF0", VA = "0x1802AF0")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1802CC4", Offset = "0x1802CC4", VA = "0x1802CC4")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1803048", Offset = "0x1803048", VA = "0x1803048")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x180309C", Offset = "0x180309C", VA = "0x180309C")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x18030F0", Offset = "0x18030F0", VA = "0x18030F0")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1803144", Offset = "0x1803144", VA = "0x1803144")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x18032D4", Offset = "0x18032D4", VA = "0x18032D4")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x180344C", Offset = "0x180344C", VA = "0x180344C")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1800820", Offset = "0x1800820", VA = "0x1800820")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EEA10", Offset = "0x8EEA10")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEA48", Offset = "0x8EEA48")]
		private sealed class <get_Children>d__18 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B0")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60024DE")]
				[Address(RVA = "0x16AEE1C", Offset = "0x16AEE1C", VA = "0x16AEE1C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E0")]
				[Address(RVA = "0x16AEE64", Offset = "0x16AEE64", VA = "0x16AEE64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x16AEBE8", Offset = "0x16AEBE8", VA = "0x16AEBE8")]
			[DebuggerHidden]
			public <get_Children>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x16AEC20", Offset = "0x16AEC20", VA = "0x16AEC20", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x16AEC90", Offset = "0x16AEC90", VA = "0x16AEC90", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x16AEC3C", Offset = "0x16AEC3C", VA = "0x16AEC3C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x16AEE24", Offset = "0x16AEE24", VA = "0x16AEE24", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x16AEE6C", Offset = "0x16AEE6C", VA = "0x16AEE6C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x16AEF1C", Offset = "0x16AEF1C", VA = "0x16AEF1C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEA58", Offset = "0x8EEA58")]
		private sealed class <GetEnumerator>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E7")]
				[Address(RVA = "0x16AEB98", Offset = "0x16AEB98", VA = "0x16AEB98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E9")]
				[Address(RVA = "0x16AEBE0", Offset = "0x16AEBE0", VA = "0x16AEBE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x16AE970", Offset = "0x16AE970", VA = "0x16AE970")]
			[DebuggerHidden]
			public <GetEnumerator>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x16AE99C", Offset = "0x16AE99C", VA = "0x16AE99C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x16AEA0C", Offset = "0x16AEA0C", VA = "0x16AEA0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x16AE9B8", Offset = "0x16AE9B8", VA = "0x16AE9B8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x16AEBA0", Offset = "0x16AEBA0", VA = "0x16AEBA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170004AA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x17FFC5C", Offset = "0x17FFC5C", VA = "0x17FFC5C", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004AB")]
		public override bool IsArray
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x17FFC64", Offset = "0x17FFC64", VA = "0x17FFC64", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AC")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x17FFC6C", Offset = "0x17FFC6C", VA = "0x17FFC6C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x17FFDB4", Offset = "0x17FFDB4", VA = "0x17FFDB4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x18000BC", Offset = "0x18000BC", VA = "0x18000BC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x1800118", Offset = "0x1800118", VA = "0x1800118", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public override int Count
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x18001DC", Offset = "0x18001DC", VA = "0x18001DC", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004AF")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x1800418", Offset = "0x1800418", VA = "0x1800418", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908CFC", Offset = "0x908CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1800228", Offset = "0x1800228", VA = "0x1800228", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x18002EC", Offset = "0x18002EC", VA = "0x18002EC", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x18003AC", Offset = "0x18003AC", VA = "0x18003AC", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x1800490", Offset = "0x1800490", VA = "0x1800490", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908D5C", Offset = "0x908D5C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1800508", Offset = "0x1800508", VA = "0x1800508", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x18005F0", Offset = "0x18005F0", VA = "0x18005F0", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1800770", Offset = "0x1800770", VA = "0x1800770")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EEA68", Offset = "0x8EEA68")]
	public class JSONObject : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEAA0", Offset = "0x8EEAA0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x16AF80C", Offset = "0x16AF80C", VA = "0x16AF80C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x16AF814", Offset = "0x16AF814", VA = "0x16AF814")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEAB0", Offset = "0x8EEAB0")]
		private sealed class <get_Children>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004BA")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002500")]
				[Address(RVA = "0x16AFD8C", Offset = "0x16AFD8C", VA = "0x16AFD8C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002502")]
				[Address(RVA = "0x16AFDD4", Offset = "0x16AFDD4", VA = "0x16AFDD4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x16AFB44", Offset = "0x16AFB44", VA = "0x16AFB44")]
			[DebuggerHidden]
			public <get_Children>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x16AFB7C", Offset = "0x16AFB7C", VA = "0x16AFB7C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x16AFBEC", Offset = "0x16AFBEC", VA = "0x16AFBEC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x16AFB98", Offset = "0x16AFB98", VA = "0x16AFB98")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0x16AFD94", Offset = "0x16AFD94", VA = "0x16AFD94", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0x16AFDDC", Offset = "0x16AFDDC", VA = "0x16AFDDC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0x16AFE8C", Offset = "0x16AFE8C", VA = "0x16AFE8C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEAC0", Offset = "0x8EEAC0")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002509")]
				[Address(RVA = "0x16AFAF4", Offset = "0x16AFAF4", VA = "0x16AFAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250B")]
				[Address(RVA = "0x16AFB3C", Offset = "0x16AFB3C", VA = "0x16AFB3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0x16AF898", Offset = "0x16AF898", VA = "0x16AF898")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0x16AF8C4", Offset = "0x16AF8C4", VA = "0x16AF8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x16AF934", Offset = "0x16AF934", VA = "0x16AF934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0x16AF8E0", Offset = "0x16AF8E0", VA = "0x16AF8E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x16AFAFC", Offset = "0x16AFAFC", VA = "0x16AFAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170004B4")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x1803C2C", Offset = "0x1803C2C", VA = "0x1803C2C", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004B5")]
		public override bool IsObject
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x1803C34", Offset = "0x1803C34", VA = "0x1803C34", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x1803C3C", Offset = "0x1803C3C", VA = "0x1803C3C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x1803D0C", Offset = "0x1803D0C", VA = "0x1803D0C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x1803E3C", Offset = "0x1803E3C", VA = "0x1803E3C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x1803EE8", Offset = "0x1803EE8", VA = "0x1803EE8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public override int Count
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x1804028", Offset = "0x1804028", VA = "0x1804028", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B9")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x18045C4", Offset = "0x18045C4", VA = "0x18045C4", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908E7C", Offset = "0x908E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x180407C", Offset = "0x180407C", VA = "0x180407C", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1804228", Offset = "0x1804228", VA = "0x1804228", Slot = "19")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x18042F8", Offset = "0x18042F8", VA = "0x18042F8", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x18043E0", Offset = "0x18043E0", VA = "0x18043E0", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x180463C", Offset = "0x180463C", VA = "0x180463C", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x908EDC", Offset = "0x908EDC")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x18046B4", Offset = "0x18046B4", VA = "0x18046B4", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x18048B0", Offset = "0x18048B0", VA = "0x18048B0", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1800E30", Offset = "0x1800E30", VA = "0x1800E30")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170004BE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0x1804BD0", Offset = "0x1804BD0", VA = "0x1804BD0", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004BF")]
		public override bool IsString
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0x1804BD8", Offset = "0x1804BD8", VA = "0x1804BD8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C0")]
		public override string Value
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0x1804BE0", Offset = "0x1804BE0", VA = "0x1804BE0", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600250F")]
			[Address(RVA = "0x1804BE8", Offset = "0x1804BE8", VA = "0x1804BE8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1801C50", Offset = "0x1801C50", VA = "0x1801C50")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1804BF0", Offset = "0x1804BF0", VA = "0x1804BF0", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1804C40", Offset = "0x1804C40", VA = "0x1804C40", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1804CF4", Offset = "0x1804CF4", VA = "0x1804CF4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1804E1C", Offset = "0x1804E1C", VA = "0x1804E1C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000588")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170004C1")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002515")]
			[Address(RVA = "0x180372C", Offset = "0x180372C", VA = "0x180372C", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004C2")]
		public override bool IsNumber
		{
			[Token(Token = "0x6002516")]
			[Address(RVA = "0x1803734", Offset = "0x1803734", VA = "0x1803734", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C3")]
		public override string Value
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0x180373C", Offset = "0x180373C", VA = "0x180373C", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002518")]
			[Address(RVA = "0x18037B0", Offset = "0x18037B0", VA = "0x18037B0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public override double AsDouble
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0x1803838", Offset = "0x1803838", VA = "0x1803838", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600251A")]
			[Address(RVA = "0x1803840", Offset = "0x1803840", VA = "0x1803840", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x18010B0", Offset = "0x18010B0", VA = "0x18010B0")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1803848", Offset = "0x1803848", VA = "0x1803848")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x18038CC", Offset = "0x18038CC", VA = "0x18038CC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x180391C", Offset = "0x180391C", VA = "0x180391C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x180393C", Offset = "0x180393C", VA = "0x180393C")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x1803AE0", Offset = "0x1803AE0", VA = "0x1803AE0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x1803C20", Offset = "0x1803C20", VA = "0x1803C20", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000589")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170004C5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x1800828", Offset = "0x1800828", VA = "0x1800828", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004C6")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x1800830", Offset = "0x1800830", VA = "0x1800830", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C7")]
		public override string Value
		{
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x1800838", Offset = "0x1800838", VA = "0x1800838", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x1800844", Offset = "0x1800844", VA = "0x1800844", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public override bool AsBool
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x18008CC", Offset = "0x18008CC", VA = "0x18008CC", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x18008D4", Offset = "0x18008D4", VA = "0x18008D4", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x18008E0", Offset = "0x18008E0", VA = "0x18008E0")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x180095C", Offset = "0x180095C", VA = "0x180095C")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x18009E0", Offset = "0x18009E0", VA = "0x18009E0", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x1800A2C", Offset = "0x1800A2C", VA = "0x1800A2C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x1800AB0", Offset = "0x1800AB0", VA = "0x1800AB0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x1800B34", Offset = "0x1800B34", VA = "0x1800B34", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200058A")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x170004C9")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600252E")]
			[Address(RVA = "0x18035AC", Offset = "0x18035AC", VA = "0x18035AC", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004CA")]
		public override bool IsNull
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0x18035B4", Offset = "0x18035B4", VA = "0x18035B4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004CB")]
		public override string Value
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0x18035BC", Offset = "0x18035BC", VA = "0x18035BC", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x1803600", Offset = "0x1803600", VA = "0x1803600", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public override bool AsBool
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0x1803604", Offset = "0x1803604", VA = "0x1803604", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x180360C", Offset = "0x180360C", VA = "0x180360C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x1803610", Offset = "0x1803610", VA = "0x1803610", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x18036A8", Offset = "0x18036A8", VA = "0x18036A8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x18036B0", Offset = "0x18036B0", VA = "0x18036B0", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x18036D4", Offset = "0x18036D4", VA = "0x18036D4", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x1800058", Offset = "0x1800058", VA = "0x1800058")]
		public JSONNull()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EEAD0", Offset = "0x8EEAD0")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170004CD")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0x1800B40", Offset = "0x1800B40", VA = "0x1800B40", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004CE")]
		public override JSONNode Item
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x1800C50", Offset = "0x1800C50", VA = "0x1800C50", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600253E")]
			[Address(RVA = "0x1800CAC", Offset = "0x1800CAC", VA = "0x1800CAC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		public override JSONNode Item
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x1800D34", Offset = "0x1800D34", VA = "0x1800D34", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x1800DA0", Offset = "0x1800DA0", VA = "0x1800DA0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public override int AsInt
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0x1801048", Offset = "0x1801048", VA = "0x1801048", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x1801128", Offset = "0x1801128", VA = "0x1801128", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public override float AsFloat
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x1801194", Offset = "0x1801194", VA = "0x1801194", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x18011FC", Offset = "0x18011FC", VA = "0x18011FC", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public override double AsDouble
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x1801268", Offset = "0x1801268", VA = "0x1801268", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600254C")]
			[Address(RVA = "0x18012D0", Offset = "0x18012D0", VA = "0x18012D0", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170004D3")]
		public override bool AsBool
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0x180133C", Offset = "0x180133C", VA = "0x180133C", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x18013A4", Offset = "0x18013A4", VA = "0x18013A4", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170004D4")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x1801410", Offset = "0x1801410", VA = "0x1801410", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D5")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0x1801474", Offset = "0x1801474", VA = "0x1801474", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x17FFD24", Offset = "0x17FFD24", VA = "0x17FFD24")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x1800B48", Offset = "0x1800B48", VA = "0x1800B48")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x1800BDC", Offset = "0x1800BDC", VA = "0x1800BDC")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x1800EE0", Offset = "0x1800EE0", VA = "0x1800EE0", Slot = "18")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x1800F68", Offset = "0x1800F68", VA = "0x1800F68", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x1800FF8", Offset = "0x1800FF8", VA = "0x1800FF8")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x1801010", Offset = "0x1801010", VA = "0x1801010")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x1801028", Offset = "0x1801028", VA = "0x1801028", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x1801040", Offset = "0x1801040", VA = "0x1801040", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x18014D8", Offset = "0x18014D8", VA = "0x18014D8", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200058C")]
	public static class JSON
	{
		[Token(Token = "0x6002552")]
		[Address(RVA = "0x17FF5B0", Offset = "0x17FF5B0", VA = "0x17FF5B0")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace MoonMode
{
	[Token(Token = "0x200058D")]
	public class DebugMenu : MonoBehaviour
	{
		[Token(Token = "0x200058E")]
		public class SubMenu
		{
			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_name;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<DebugMenuEntry> m_entries;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SubMenu> m_children;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SubMenu m_parent;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool m_expanded;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static string[] ms_labelStyles;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static GUIContent ms_foldoutExpanded;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static GUIContent ms_foldoutCollapsed;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static GUIContent ms_winMax;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private static GUIContent ms_winMin;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private static GUIContent ms_winClose;

			[Token(Token = "0x600256B")]
			[Address(RVA = "0x15EBAD4", Offset = "0x15EBAD4", VA = "0x15EBAD4")]
			public SubMenu(string menuName)
			{
			}

			[Token(Token = "0x600256C")]
			[Address(RVA = "0x15EBBC8", Offset = "0x15EBBC8", VA = "0x15EBBC8")]
			public SubMenu GetSubMenu(string name)
			{
				return null;
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0x15EBCB0", Offset = "0x15EBCB0", VA = "0x15EBCB0")]
			public void OnGUI(float lw, float vw, int depth)
			{
			}
		}

		[Token(Token = "0x200058F")]
		public class DebugMenuEntry
		{
			[Token(Token = "0x2000590")]
			private delegate T getvalue<T>(T oldVal);

			[Token(Token = "0x2000591")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB08", Offset = "0x8EEB08")]
			private sealed class <>c__DisplayClass12_0
			{
				[Token(Token = "0x4001DE4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float lw;

				[Token(Token = "0x4001DE5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public DebugMenuEntry <>4__this;

				[Token(Token = "0x6002579")]
				[Address(RVA = "0x1FCC308", Offset = "0x1FCC308", VA = "0x1FCC308")]
				public <>c__DisplayClass12_0()
				{
				}

				[Token(Token = "0x600257A")]
				[Address(RVA = "0x1FCC310", Offset = "0x1FCC310", VA = "0x1FCC310")]
				internal int <OnGUI>b__1(int x)
				{
					return default(int);
				}

				[Token(Token = "0x600257B")]
				[Address(RVA = "0x1FCC4F0", Offset = "0x1FCC4F0", VA = "0x1FCC4F0")]
				internal float <OnGUI>b__2(float x)
				{
					return default(float);
				}
			}

			[Serializable]
			[Token(Token = "0x2000592")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB18", Offset = "0x8EEB18")]
			private sealed class <>c
			{
				[Token(Token = "0x4001DE6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001DE7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static getvalue<bool> <>9__12_0;

				[Token(Token = "0x4001DE8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static getvalue<string> <>9__12_3;

				[Token(Token = "0x600257D")]
				[Address(RVA = "0x1FCC138", Offset = "0x1FCC138", VA = "0x1FCC138")]
				public <>c()
				{
				}

				[Token(Token = "0x600257E")]
				[Address(RVA = "0x1FCC140", Offset = "0x1FCC140", VA = "0x1FCC140")]
				internal bool <OnGUI>b__12_0(bool x)
				{
					return default(bool);
				}

				[Token(Token = "0x600257F")]
				[Address(RVA = "0x1FCC230", Offset = "0x1FCC230", VA = "0x1FCC230")]
				internal string <OnGUI>b__12_3(string x)
				{
					return null;
				}
			}

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string label;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugMenuItem fieldAttr;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MethodInfo methodInfo;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MonoBehaviour monoBehaviour;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MethodInfo onValidateMethod;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public voidDelegate voidDel;

			[Token(Token = "0x170004D6")]
			public string fullPathUGUILabel
			{
				[Token(Token = "0x6002572")]
				[Address(RVA = "0x15EABC8", Offset = "0x15EABC8", VA = "0x15EABC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0x15EA914", Offset = "0x15EA914", VA = "0x15EA914")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, MonoBehaviour mb, FieldInfo fi)
			{
			}

			[Token(Token = "0x6002570")]
			[Address(RVA = "0x15EAAD0", Offset = "0x15EAAD0", VA = "0x15EAAD0")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, MonoBehaviour mb, MethodInfo mi)
			{
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0x15EAB64", Offset = "0x15EAB64", VA = "0x15EAB64")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, voidDelegate voidD, string labelText)
			{
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x15EAFFC", Offset = "0x15EAFFC", VA = "0x15EAFFC")]
			public void OnGUI(float lw, float vw)
			{
			}

			[Token(Token = "0x6002574")]
			private void DoField<T>(getvalue<T> gvf, float lw)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000593")]
		public class ViewSettings
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DrawLocation m_location;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_selectedMenu;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_collapsed;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Rect m_windowRect;

			[Token(Token = "0x6002580")]
			[Address(RVA = "0x15EC66C", Offset = "0x15EC66C", VA = "0x15EC66C")]
			public ViewSettings()
			{
			}
		}

		[Token(Token = "0x2000594")]
		public enum DrawLocation
		{
			[Token(Token = "0x4001DEE")]
			None = 0,
			[Token(Token = "0x4001DEF")]
			GameView = 1,
			[Token(Token = "0x4001DF0")]
			Inspector = 2,
			[Token(Token = "0x4001DF1")]
			SceneView = 4
		}

		[Token(Token = "0x2000595")]
		public delegate void voidDelegate();

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB28", Offset = "0x8EEB28")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo[] staticFields;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int k;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<DebugMenuEntry> <>9__1;

			[Token(Token = "0x6002585")]
			[Address(RVA = "0x15EA8C0", Offset = "0x15EA8C0", VA = "0x15EA8C0")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0x15EA8C8", Offset = "0x15EA8C8", VA = "0x15EA8C8")]
			internal bool <GetAllDebugValues>b__1(DebugMenuEntry x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB38", Offset = "0x8EEB38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<SubMenu> <>9__28_0;

			[Token(Token = "0x6002588")]
			[Address(RVA = "0x15EA88C", Offset = "0x15EA88C", VA = "0x15EA88C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0x15EA894", Offset = "0x15EA894", VA = "0x15EA894")]
			internal int <GetAllDebugValues>b__28_0(SubMenu a, SubMenu b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugMenu Instance;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_initialised;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public SubMenu m_root;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DrawLocation m_location;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public ViewSettings[] m_viewSettings;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ViewSettings m_currentViewSettings;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_displayWidth;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode m_toggleGameView;

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x166C378", Offset = "0x166C378", VA = "0x166C378")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x166C384", Offset = "0x166C384", VA = "0x166C384")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x908FFC", Offset = "0x908FFC")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x166C3D4", Offset = "0x166C3D4", VA = "0x166C3D4")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x166C4D4", Offset = "0x166C4D4", VA = "0x166C4D4")]
		public static void RefreshValues()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x166C6A8", Offset = "0x166C6A8", VA = "0x166C6A8")]
		public static string MakeNiceLabel(string s)
		{
			return null;
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x166C7BC", Offset = "0x166C7BC", VA = "0x166C7BC")]
		public static string AddSpacesToCamelCase(string s)
		{
			return null;
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x166C85C", Offset = "0x166C85C", VA = "0x166C85C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x166C860", Offset = "0x166C860", VA = "0x166C860")]
		public void ToggleVisibility(DrawLocation loc = DrawLocation.GameView)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x166C8A4", Offset = "0x166C8A4", VA = "0x166C8A4")]
		public void SetCurrentDrawLoc(DrawLocation loc)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x166CAF4", Offset = "0x166CAF4", VA = "0x166CAF4")]
		public int WrapMenuId(int id)
		{
			return default(int);
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x166CB68", Offset = "0x166CB68", VA = "0x166CB68", Slot = "5")]
		public virtual void NextMenu()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x166CB9C", Offset = "0x166CB9C", VA = "0x166CB9C", Slot = "6")]
		public virtual void PrevMenu()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x166CBD0", Offset = "0x166CBD0", VA = "0x166CBD0", Slot = "7")]
		public virtual void SetMenu(int idx)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x166CBFC", Offset = "0x166CBFC", VA = "0x166CBFC")]
		private static DebugMenuItem GetDebugMenuItemAttribute(MemberInfo memberInfo, Dictionary<MemberInfo, DebugMenuItem> dict)
		{
			return null;
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x166CD4C", Offset = "0x166CD4C", VA = "0x166CD4C")]
		private static FieldInfo[] GetFieldInfosForType(Type type, Dictionary<Type, FieldInfo[]> dict, bool _static)
		{
			return null;
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x166CE24", Offset = "0x166CE24", VA = "0x166CE24")]
		private static MethodInfo[] GetMethodInfosForType(Type type, Dictionary<Type, MethodInfo[]> dict, bool _static)
		{
			return null;
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x166CEFC", Offset = "0x166CEFC", VA = "0x166CEFC", Slot = "8")]
		public virtual void GetAllDebugValues()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x166DCA8", Offset = "0x166DCA8", VA = "0x166DCA8")]
		private SubMenu GetMenuAtPath(string subMenuPath)
		{
			return null;
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x166DECC", Offset = "0x166DECC", VA = "0x166DECC")]
		public void AddButton(string subMenuName, string buttonText, MonoBehaviour mb, voidDelegate fn)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x166DF84", Offset = "0x166DF84", VA = "0x166DF84")]
		public void DrawGUI(float width)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x166C95C", Offset = "0x166C95C", VA = "0x166C95C")]
		private void ValidateViewSettings()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x166EA0C", Offset = "0x166EA0C", VA = "0x166EA0C", Slot = "9")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x166EB98", Offset = "0x166EB98", VA = "0x166EB98")]
		private void WindowedGUI(int windowID)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x166EFEC", Offset = "0x166EFEC", VA = "0x166EFEC")]
		public DebugMenu()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class DebugMenuUGUI : DebugMenu
	{
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB48", Offset = "0x8EEB48")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button tab;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugMenuUGUI <>4__this;

			[Token(Token = "0x6002595")]
			[Address(RVA = "0x15EC714", Offset = "0x15EC714", VA = "0x15EC714")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0x15EC71C", Offset = "0x15EC71C", VA = "0x15EC71C")]
			internal void <GetAllDebugValues>b__0()
			{
			}
		}

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9DB0", Offset = "0x8F9DB0")]
		public Transform m_uguiroot;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text m_prevMenuLabel;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text m_nextMenuLabel;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform m_tabGroup;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_tabPrefab;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9DE8", Offset = "0x8F9DE8")]
		public GameObject m_submenuPrefab;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject m_sliderPrefab;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject m_togglePrefab;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject m_buttonPrefab;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_stringPrefab;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject m_readOnlyPrefab;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9E20", Offset = "0x8F9E20")]
		public float m_bgHue;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_bgSat;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9E58", Offset = "0x8F9E58")]
		public NVRHand m_toggleVRHand;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NVRButtons m_toggleVRViewNVR;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject m_toggleRoot;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_visibleAtStart;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool m_onlyToggleOff;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public NVRCanvasInput m_canvasInput;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<GameObject> m_subMenuObjs;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Button> m_tabs;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public ViewSettings m_ugui_viewSettings;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool m_debugMenuAvailable;

		[Token(Token = "0x170004D7")]
		public bool Shown
		{
			[Token(Token = "0x600258A")]
			[Address(RVA = "0x166F1CC", Offset = "0x166F1CC", VA = "0x166F1CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x166F1E8", Offset = "0x166F1E8", VA = "0x166F1E8", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x166F3CC", Offset = "0x166F3CC", VA = "0x166F3CC")]
		public void Toggle()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x166F1F0", Offset = "0x166F1F0", VA = "0x166F1F0")]
		public void Toggle(bool on)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x166F408", Offset = "0x166F408", VA = "0x166F408", Slot = "8")]
		public override void GetAllDebugValues()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x166FAB8", Offset = "0x166FAB8", VA = "0x166FAB8")]
		private GameObject AddUGUIForSubMenu(SubMenu sm, Transform parent, float depth)
		{
			return null;
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x166FEAC", Offset = "0x166FEAC", VA = "0x166FEAC")]
		private void AddUGUIForDebugMenuEntry(DebugMenuEntry dme, Transform parent)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1670994", Offset = "0x1670994", VA = "0x1670994", Slot = "5")]
		public override void NextMenu()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x16709BC", Offset = "0x16709BC", VA = "0x16709BC", Slot = "6")]
		public override void PrevMenu()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x16709E4", Offset = "0x16709E4", VA = "0x16709E4", Slot = "7")]
		public override void SetMenu(int idx)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1670CAC", Offset = "0x1670CAC", VA = "0x1670CAC")]
		public DebugMenuUGUI()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class DebugMenuUGUI_Button : MonoBehaviour
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x16708A4", Offset = "0x16708A4", VA = "0x16708A4")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1670D20", Offset = "0x1670D20", VA = "0x1670D20")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x1670D9C", Offset = "0x1670D9C", VA = "0x1670D9C")]
		public DebugMenuUGUI_Button()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class DebugMenuUGUI_Slider : MonoBehaviour
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_headerLabel;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_valueLabel;

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x16705B4", Offset = "0x16705B4", VA = "0x16705B4")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1670DA4", Offset = "0x1670DA4", VA = "0x1670DA4")]
		private void OnValueChanged(float v)
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x1670F90", Offset = "0x1670F90", VA = "0x1670F90")]
		public DebugMenuUGUI_Slider()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class DebugMenuUGUI_String : MonoBehaviour
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_value;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x1670F98", Offset = "0x1670F98", VA = "0x1670F98")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x1670FA0", Offset = "0x1670FA0", VA = "0x1670FA0")]
		public DebugMenuUGUI_String()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class DebugMenuUGUI_Toggle : MonoBehaviour
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x1670420", Offset = "0x1670420", VA = "0x1670420")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x1670FA8", Offset = "0x1670FA8", VA = "0x1670FA8")]
		private void OnToggle(bool b)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x1671060", Offset = "0x1671060", VA = "0x1671060")]
		public DebugMenuUGUI_Toggle()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class HSVColour
	{
		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x194070C", Offset = "0x194070C", VA = "0x194070C")]
		public static Color Rand()
		{
			return default(Color);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x194073C", Offset = "0x194073C", VA = "0x194073C")]
		public static Color HSV(float h, float s, float v, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x1940898", Offset = "0x1940898", VA = "0x1940898")]
		public static void ColorToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x19409C8", Offset = "0x19409C8", VA = "0x19409C8")]
		public HSVColour()
		{
		}
	}
}
namespace MoonMode.SaveGame
{
	[Token(Token = "0x200059F")]
	public interface ISaveGameReferableObject
	{
		[Token(Token = "0x170004D8")]
		string SaveGameReferenceGUID
		{
			[Token(Token = "0x60025A6")]
			get;
			[Token(Token = "0x60025A7")]
			set;
		}
	}
	[Token(Token = "0x20005A0")]
	public interface ISaveableComponent
	{
		[Token(Token = "0x60025A8")]
		void OnWillSaveToSaveGame();

		[Token(Token = "0x60025A9")]
		void OnDidSaveToSaveGame();

		[Token(Token = "0x60025AA")]
		void OnLoadedFromSaveGame();
	}
	[Token(Token = "0x20005A1")]
	public class SaveGameObject : MonoBehaviour, ISaveGameReferableObject
	{
		[Token(Token = "0x20005A2")]
		public enum InstantiateMethod
		{
			[Token(Token = "0x4001E26")]
			PreExisting,
			[Token(Token = "0x4001E27")]
			AssetDatabase,
			[Token(Token = "0x4001E28")]
			PrefabMember,
			[Token(Token = "0x4001E29")]
			Delegate
		}

		[Token(Token = "0x20005A3")]
		public delegate GameObject InstantiationDelegate(string saveGameObjectGUID);

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB58", Offset = "0x8EEB58")]
		private sealed class <All>d__9 : IEnumerable<SaveGameObject>, IEnumerable, IEnumerator<SaveGameObject>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private SaveGameObject <>2__current;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, SaveGameObject>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170004DA")]
			private SaveGameObject System.Collections.Generic.IEnumerator<MoonMode.SaveGame.SaveGameObject>.Current
			{
				[Token(Token = "0x60025C3")]
				[Address(RVA = "0x15881C4", Offset = "0x15881C4", VA = "0x15881C4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C5")]
				[Address(RVA = "0x158820C", Offset = "0x158820C", VA = "0x158820C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x1587F44", Offset = "0x1587F44", VA = "0x1587F44")]
			[DebuggerHidden]
			public <All>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x1587F7C", Offset = "0x1587F7C", VA = "0x1587F7C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x1587FEC", Offset = "0x1587FEC", VA = "0x1587FEC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x1587F98", Offset = "0x1587F98", VA = "0x1587F98")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x15881CC", Offset = "0x15881CC", VA = "0x15881CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x1588214", Offset = "0x1588214", VA = "0x1588214", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<SaveGameObject> System.Collections.Generic.IEnumerable<MoonMode.SaveGame.SaveGameObject>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x15882A8", Offset = "0x15882A8", VA = "0x15882A8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E1A")]
		private const uint saveVersionNumber = 1u;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, SaveGameObject> ms_saveGameObjectsByGUID;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, InstantiationDelegate> ms_instantiationDelegateByGUID;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9EE0", Offset = "0x8F9EE0")]
		public string[] m_tags;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9F18", Offset = "0x8F9F18")]
		public bool m_suppressSave;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9F50", Offset = "0x8F9F50")]
		public bool m_suppressSaveScale;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8F9F88", Offset = "0x8F9F88")]
		public string m_objectGUID;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InstantiateMethod m_instantiationMethod;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_instantiationReferenceGUID;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SaveGameObject m_hostPrefabSaveGameObject;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_registeredObjectGUID;

		[Token(Token = "0x170004D9")]
		private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
		{
			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x189DD70", Offset = "0x189DD70", VA = "0x189DD70", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x189DD78", Offset = "0x189DD78", VA = "0x189DD78", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x1896BA8", Offset = "0x1896BA8", VA = "0x1896BA8")]
		public static void ClearStatics()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x189D8E0", Offset = "0x189D8E0", VA = "0x189D8E0")]
		public static void LoadAllFromPath(string savefilePath)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x189DAAC", Offset = "0x189DAAC", VA = "0x189DAAC")]
		public static void LoadAllFromResourcePath(string resourcePath)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1897EB8", Offset = "0x1897EB8", VA = "0x1897EB8")]
		public static void SaveAllToPath(string savefilePath, [Optional] string[] saveTags, [Optional] string[] ignoreTags)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x189DC78", Offset = "0x189DC78", VA = "0x189DC78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909010", Offset = "0x909010")]
		public static IEnumerable<SaveGameObject> All()
		{
			return null;
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x189B100", Offset = "0x189B100", VA = "0x189B100")]
		public static SaveGameObject Find(string objectGUID)
		{
			return null;
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x189DCD4", Offset = "0x189DCD4", VA = "0x189DCD4")]
		public static void RegisterInstantiationDelegate(string GUID, InstantiationDelegate instantiationDelegate)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x189B820", Offset = "0x189B820", VA = "0x189B820")]
		public static InstantiationDelegate FindInstantiationDelegate(string GUID)
		{
			return null;
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x189DD80", Offset = "0x189DD80", VA = "0x189DD80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x189DD84", Offset = "0x189DD84", VA = "0x189DD84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x189B904", Offset = "0x189B904", VA = "0x189B904")]
		public void Register()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x189DD88", Offset = "0x189DD88", VA = "0x189DD88")]
		public void Unregister()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x189DE14", Offset = "0x189DE14", VA = "0x189DE14")]
		public SaveGameObject()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EEB68", Offset = "0x8EEB68")]
	public class SaveableAttribute : Attribute
	{
		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x15B4A8C", Offset = "0x15B4A8C", VA = "0x15B4A8C")]
		public SaveableAttribute()
		{
		}
	}
}
namespace MoonMode.SaveGame.Internal
{
	[Serializable]
	[Token(Token = "0x20005A6")]
	public struct GameData
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_gameDataGUID;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_saveVersion;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_gameDataVersion;
	}
	[Token(Token = "0x20005A7")]
	public struct GameDataObjectState
	{
		[Token(Token = "0x20005A8")]
		public struct ChildObject
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_childReferenceGUID;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_childObjectGUID;
		}

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_objectGUID;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_objectName;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_depth;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_prefabGUID;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_delegateGUID;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_objectParentGUID;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ChildObject[] m_childObjects;

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x18B0DDC", Offset = "0x18B0DDC", VA = "0x18B0DDC")]
		public static GameDataObjectState FromJSON(JSONNode node)
		{
			return default(GameDataObjectState);
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x18B1314", Offset = "0x18B1314", VA = "0x18B1314")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}
	[Token(Token = "0x20005A9")]
	public class GenericComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x20005AA")]
		private struct MemberCaptureDetails
		{
			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_identifier;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public FieldInfo m_fieldInfo;
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEB7C", Offset = "0x8EEB7C")]
		private sealed class <GenerateMemberCaptureDetails>d__2 : IEnumerable<MemberCaptureDetails>, IEnumerable, IEnumerator<MemberCaptureDetails>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MemberCaptureDetails <>2__current;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Type componentType;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Type <>3__componentType;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FieldInfo[] <>7__wrap1;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap2;

			[Token(Token = "0x170004DC")]
			private MemberCaptureDetails System.Collections.Generic.IEnumerator<MoonMode.SaveGame.Internal.GenericComponentStateCaptor.MemberCaptureDetails>.Current
			{
				[Token(Token = "0x60025D5")]
				[Address(RVA = "0x15F503C", Offset = "0x15F503C", VA = "0x15F503C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(MemberCaptureDetails);
				}
			}

			[Token(Token = "0x170004DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D7")]
				[Address(RVA = "0x15F5088", Offset = "0x15F5088", VA = "0x15F5088", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x15F4E50", Offset = "0x15F4E50", VA = "0x15F4E50")]
			[DebuggerHidden]
			public <GenerateMemberCaptureDetails>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x15F4E88", Offset = "0x15F4E88", VA = "0x15F4E88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x15F4E8C", Offset = "0x15F4E8C", VA = "0x15F4E8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x15F5048", Offset = "0x15F5048", VA = "0x15F5048", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x15F50E8", Offset = "0x15F50E8", VA = "0x15F50E8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MemberCaptureDetails> System.Collections.Generic.IEnumerable<MoonMode.SaveGame.Internal.GenericComponentStateCaptor.MemberCaptureDetails>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x15F5198", Offset = "0x15F5198", VA = "0x15F5198", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemberCaptureDetails[] m_memberCaptureDetails;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1936224", Offset = "0x1936224", VA = "0x1936224")]
		public static GenericComponentStateCaptor CaptorForType(Type componentType)
		{
			return null;
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x19365D4", Offset = "0x19365D4", VA = "0x19365D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9090E0", Offset = "0x9090E0")]
		private static IEnumerable<MemberCaptureDetails> GenerateMemberCaptureDetails(Type componentType)
		{
			return null;
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x193664C", Offset = "0x193664C", VA = "0x193664C")]
		private GenericComponentStateCaptor(MemberCaptureDetails[] memberCaptureDetails)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1936680", Offset = "0x1936680", VA = "0x1936680", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component original, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1937318", Offset = "0x1937318", VA = "0x1937318", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1936A58", Offset = "0x1936A58", VA = "0x1936A58")]
		private JSONNode ChangeValueAsJSON(object currentValue)
		{
			return null;
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x19375B4", Offset = "0x19375B4", VA = "0x19375B4")]
		private bool ApplyChangeFromJSON(ref object target, JSONNode jsonNode, Type targetType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005AC")]
	public interface IComponentStateCaptor
	{
		[Token(Token = "0x60025DA")]
		void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component original, UnityEngine.Component current);

		[Token(Token = "0x60025DB")]
		void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject);
	}
	[Token(Token = "0x20005AD")]
	public class RigidbodyComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x188BE5C", Offset = "0x188BE5C", VA = "0x188BE5C", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component _, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x188BFEC", Offset = "0x188BFEC", VA = "0x188BFEC", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x188C378", Offset = "0x188C378", VA = "0x188C378")]
		public RigidbodyComponentStateCaptor()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class SaveGameContext : IDisposable
	{
		[Token(Token = "0x4001E44")]
		private const uint SaveVersion = 2u;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_saveGUID;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_resourcePath;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_filePath;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DateTime m_saveTime;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint m_saveVersion;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint m_gameDataVersion;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StateCaptorProvider m_stateCaptorProvider;

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x1898D60", Offset = "0x1898D60", VA = "0x1898D60")]
		public static SaveGameContext LoadGameFromFile(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1898F58", Offset = "0x1898F58", VA = "0x1898F58")]
		public static SaveGameContext LoadGameFromResource(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x1899044", Offset = "0x1899044", VA = "0x1899044")]
		public static SaveGameContext SaveGame(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1898E4C", Offset = "0x1898E4C", VA = "0x1898E4C")]
		private SaveGameContext(string saveGUID, string resourcePath, string filePath, uint saveVersion, uint gameDataVersion)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x1899130", Offset = "0x1899130", VA = "0x1899130")]
		public void LoadObjects()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x189B67C", Offset = "0x189B67C", VA = "0x189B67C")]
		private static bool InstantiateGameObjectFromPrefab(GameObject prefab, ref GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x189B1E4", Offset = "0x189B1E4", VA = "0x189B1E4")]
		private static bool GetPrefabForGameObjectState(GameDataObjectState gameObjectStateCapture, out GameObject prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x189BAF0", Offset = "0x189BAF0", VA = "0x189BAF0")]
		public void SaveObjects(IEnumerable<SaveGameObject> saveableObjects, string[] saveTags, string[] ignoreTags)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x189D660", Offset = "0x189D660", VA = "0x189D660", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	internal static class SaveGameObjectExt
	{
		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x189D51C", Offset = "0x189D51C", VA = "0x189D51C")]
		public static bool ShouldSaveForTags(this SaveGameObject saveGameObject, string[] saveTags, string[] ignoreTags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005B0")]
	public class SaveableObjectDatabase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005B1")]
		public struct SaveableObjectItem
		{
			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_guid;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Object m_object;
		}

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string databaseResourceName;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SaveableObjectDatabase ms_defaultDatabase;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveableObjectItem[] m_items;

		[NonSerialized]
		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, UnityEngine.Object> m_fastLookup;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, string> m_remaps;

		[Token(Token = "0x170004DE")]
		public static SaveableObjectDatabase Default
		{
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x15B45E8", Offset = "0x15B45E8", VA = "0x15B45E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x15B4C90", Offset = "0x15B4C90", VA = "0x15B4C90")]
		public static void ResetDefault()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x15B4A94", Offset = "0x15B4A94", VA = "0x15B4A94")]
		public void AddRemaps()
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x15B4724", Offset = "0x15B4724", VA = "0x15B4724")]
		public UnityEngine.Object FindObjectForGUID(string GUID)
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x15B4CF8", Offset = "0x15B4CF8", VA = "0x15B4CF8")]
		public UnityEngine.Object FindObjectForObjectName(string objectName, out string guid)
		{
			return null;
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x15B4E34", Offset = "0x15B4E34", VA = "0x15B4E34")]
		public SaveableObjectDatabase()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EEB9C", Offset = "0x8EEB9C")]
	public class SaveableObjectDatabaseRemapping : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005B3")]
		public struct SaveableObjectItemRemap
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_oldGuid;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_newGuid;
		}

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string databaseRemapResourceName;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SaveableObjectItemRemap> m_remaps;

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x15B4EA0", Offset = "0x15B4EA0", VA = "0x15B4EA0")]
		public SaveableObjectDatabaseRemapping()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class StateCaptorProvider
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<Type> m_ignoredTypes;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, IComponentStateCaptor> m_stateCaptorByType;

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1876AC8", Offset = "0x1876AC8", VA = "0x1876AC8")]
		public StateCaptorProvider()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x1876BA0", Offset = "0x1876BA0", VA = "0x1876BA0")]
		private void CreateUnityInternalCaptors()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x1876CFC", Offset = "0x1876CFC", VA = "0x1876CFC")]
		public IComponentStateCaptor GetComponentStateCaptor(Type componentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B5")]
	public class TransformComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x1790244", Offset = "0x1790244", VA = "0x1790244", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component _, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x1790454", Offset = "0x1790454", VA = "0x1790454", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x1790868", Offset = "0x1790868", VA = "0x1790868")]
		public TransformComponentStateCaptor()
		{
		}
	}
}
namespace ArabicSupport
{
	[Token(Token = "0x20005B6")]
	public class ArabicFixer
	{
		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x1AA391C", Offset = "0x1AA391C", VA = "0x1AA391C")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x1AA3BB8", Offset = "0x1AA3BB8", VA = "0x1AA3BB8")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1AA3928", Offset = "0x1AA3928", VA = "0x1AA3928")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1AA4B90", Offset = "0x1AA4B90", VA = "0x1AA4B90")]
		public ArabicFixer()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20005B7")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEBBC", Offset = "0x8EEBBC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600260B")]
			[Address(RVA = "0x15E8D6C", Offset = "0x15E8D6C", VA = "0x15E8D6C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0x15E8D74", Offset = "0x15E8D74", VA = "0x15E8D74")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0x15E8D90", Offset = "0x15E8D90", VA = "0x15E8D90")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEBCC", Offset = "0x8EEBCC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600260E")]
			[Address(RVA = "0x15E8DAC", Offset = "0x15E8DAC", VA = "0x15E8DAC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0x15E8DB4", Offset = "0x15E8DB4", VA = "0x15E8DB4")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002610")]
			[Address(RVA = "0x15E8DD0", Offset = "0x15E8DD0", VA = "0x15E8DD0")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEBDC", Offset = "0x8EEBDC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x6002611")]
			[Address(RVA = "0x15E8DEC", Offset = "0x15E8DEC", VA = "0x15E8DEC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0x15E8DF4", Offset = "0x15E8DF4", VA = "0x15E8DF4")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0x15E8E34", Offset = "0x15E8E34", VA = "0x15E8E34")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1662C6C", Offset = "0x1662C6C", VA = "0x1662C6C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1662E3C", Offset = "0x1662E3C", VA = "0x1662E3C")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1662FE4", Offset = "0x1662FE4", VA = "0x1662FE4")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x16631A0", Offset = "0x16631A0", VA = "0x16631A0")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1663214", Offset = "0x1663214", VA = "0x1663214")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1663288", Offset = "0x1663288", VA = "0x1663288")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x16632EC", Offset = "0x16632EC", VA = "0x16632EC")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x1663370", Offset = "0x1663370", VA = "0x1663370")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x16633D4", Offset = "0x16633D4", VA = "0x16633D4")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x1663438", Offset = "0x1663438", VA = "0x1663438")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x166349C", Offset = "0x166349C", VA = "0x166349C")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x1663500", Offset = "0x1663500", VA = "0x1663500")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x166356C", Offset = "0x166356C", VA = "0x166356C")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x16635D4", Offset = "0x16635D4", VA = "0x16635D4")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x1663638", Offset = "0x1663638", VA = "0x1663638")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005BB")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEBFC", Offset = "0x8EEBFC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600261F")]
			[Address(RVA = "0x15E8E58", Offset = "0x15E8E58", VA = "0x15E8E58")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002620")]
			[Address(RVA = "0x15E8E60", Offset = "0x15E8E60", VA = "0x15E8E60")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC0C", Offset = "0x8EEC0C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002621")]
			[Address(RVA = "0x15E8FA0", Offset = "0x15E8FA0", VA = "0x15E8FA0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002622")]
			[Address(RVA = "0x15E8FA8", Offset = "0x15E8FA8", VA = "0x15E8FA8")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC1C", Offset = "0x8EEC1C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002623")]
			[Address(RVA = "0x15E8FC4", Offset = "0x15E8FC4", VA = "0x15E8FC4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002624")]
			[Address(RVA = "0x15E8FCC", Offset = "0x15E8FCC", VA = "0x15E8FCC")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC2C", Offset = "0x8EEC2C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002625")]
			[Address(RVA = "0x15E8FE8", Offset = "0x15E8FE8", VA = "0x15E8FE8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002626")]
			[Address(RVA = "0x15E8FF0", Offset = "0x15E8FF0", VA = "0x15E8FF0")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC3C", Offset = "0x8EEC3C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002627")]
			[Address(RVA = "0x15E900C", Offset = "0x15E900C", VA = "0x15E900C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002628")]
			[Address(RVA = "0x15E9014", Offset = "0x15E9014", VA = "0x15E9014")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC4C", Offset = "0x8EEC4C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002629")]
			[Address(RVA = "0x15E9030", Offset = "0x15E9030", VA = "0x15E9030")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600262A")]
			[Address(RVA = "0x15E9038", Offset = "0x15E9038", VA = "0x15E9038")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC5C", Offset = "0x8EEC5C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x600262B")]
			[Address(RVA = "0x15E9054", Offset = "0x15E9054", VA = "0x15E9054")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600262C")]
			[Address(RVA = "0x15E905C", Offset = "0x15E905C", VA = "0x15E905C")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600262D")]
			[Address(RVA = "0x15E9078", Offset = "0x15E9078", VA = "0x15E9078")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x600262E")]
			[Address(RVA = "0x15E90AC", Offset = "0x15E90AC", VA = "0x15E90AC")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600262F")]
			[Address(RVA = "0x15E90C8", Offset = "0x15E90C8", VA = "0x15E90C8")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002630")]
			[Address(RVA = "0x15E90E4", Offset = "0x15E90E4", VA = "0x15E90E4")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC6C", Offset = "0x8EEC6C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002631")]
			[Address(RVA = "0x15E91A4", Offset = "0x15E91A4", VA = "0x15E91A4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002632")]
			[Address(RVA = "0x15E91AC", Offset = "0x15E91AC", VA = "0x15E91AC")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC7C", Offset = "0x8EEC7C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002633")]
			[Address(RVA = "0x15E91C8", Offset = "0x15E91C8", VA = "0x15E91C8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0x15E91D0", Offset = "0x15E91D0", VA = "0x15E91D0")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0x15E91EC", Offset = "0x15E91EC", VA = "0x15E91EC")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC8C", Offset = "0x8EEC8C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002636")]
			[Address(RVA = "0x15E92EC", Offset = "0x15E92EC", VA = "0x15E92EC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0x15E92F4", Offset = "0x15E92F4", VA = "0x15E92F4")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEC9C", Offset = "0x8EEC9C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002638")]
			[Address(RVA = "0x15E8E7C", Offset = "0x15E8E7C", VA = "0x15E8E7C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0x15E8E84", Offset = "0x15E8E84", VA = "0x15E8E84")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0x15E8EA0", Offset = "0x15E8EA0", VA = "0x15E8EA0")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x166369C", Offset = "0x166369C", VA = "0x166369C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1663878", Offset = "0x1663878", VA = "0x1663878")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x1663A48", Offset = "0x1663A48", VA = "0x1663A48")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x1663C18", Offset = "0x1663C18", VA = "0x1663C18")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1663DE8", Offset = "0x1663DE8", VA = "0x1663DE8")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1663FC0", Offset = "0x1663FC0", VA = "0x1663FC0")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x1664214", Offset = "0x1664214", VA = "0x1664214")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1664748", Offset = "0x1664748", VA = "0x1664748")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x16649C4", Offset = "0x16649C4", VA = "0x16649C4")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1664C60", Offset = "0x1664C60", VA = "0x1664C60")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x1664E50", Offset = "0x1664E50", VA = "0x1664E50")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20005C7")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20005C8")]
		public static class Utils
		{
			[Token(Token = "0x6002663")]
			[Address(RVA = "0x15EA24C", Offset = "0x15EA24C", VA = "0x15EA24C")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EECBC", Offset = "0x8EECBC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.CanvasGroup target;

			[Token(Token = "0x6002664")]
			[Address(RVA = "0x15E9310", Offset = "0x15E9310", VA = "0x15E9310")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0x15E9318", Offset = "0x15E9318", VA = "0x15E9318")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002666")]
			[Address(RVA = "0x15E9334", Offset = "0x15E9334", VA = "0x15E9334")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EECCC", Offset = "0x8EECCC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002667")]
			[Address(RVA = "0x15E95D8", Offset = "0x15E95D8", VA = "0x15E95D8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0x15E95E0", Offset = "0x15E95E0", VA = "0x15E95E0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0x15E9604", Offset = "0x15E9604", VA = "0x15E9604")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EECDC", Offset = "0x8EECDC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x15E99EC", Offset = "0x15E99EC", VA = "0x15E99EC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0x15E99F4", Offset = "0x15E99F4", VA = "0x15E99F4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0x15E9A18", Offset = "0x15E9A18", VA = "0x15E9A18")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EECEC", Offset = "0x8EECEC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x600266D")]
			[Address(RVA = "0x15E9F14", Offset = "0x15E9F14", VA = "0x15E9F14")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0x15E9F1C", Offset = "0x15E9F1C", VA = "0x15E9F1C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x15E9F40", Offset = "0x15E9F40", VA = "0x15E9F40")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EECFC", Offset = "0x8EECFC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x15E9F64", Offset = "0x15E9F64", VA = "0x15E9F64")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0x15E9F6C", Offset = "0x15E9F6C", VA = "0x15E9F6C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0x15E9F90", Offset = "0x15E9F90", VA = "0x15E9F90")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED0C", Offset = "0x8EED0C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002673")]
			[Address(RVA = "0x15E9FB4", Offset = "0x15E9FB4", VA = "0x15E9FB4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0x15E9FBC", Offset = "0x15E9FBC", VA = "0x15E9FBC")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x15E9FD8", Offset = "0x15E9FD8", VA = "0x15E9FD8")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED1C", Offset = "0x8EED1C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x15E9FF4", Offset = "0x15E9FF4", VA = "0x15E9FF4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0x15E9FFC", Offset = "0x15E9FFC", VA = "0x15E9FFC")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0x15EA060", Offset = "0x15EA060", VA = "0x15EA060")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED2C", Offset = "0x8EED2C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002679")]
			[Address(RVA = "0x15EA0BC", Offset = "0x15EA0BC", VA = "0x15EA0BC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0x15EA0C4", Offset = "0x15EA0C4", VA = "0x15EA0C4")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600267B")]
			[Address(RVA = "0x15EA128", Offset = "0x15EA128", VA = "0x15EA128")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED3C", Offset = "0x8EED3C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600267C")]
			[Address(RVA = "0x15EA184", Offset = "0x15EA184", VA = "0x15EA184")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0x15EA18C", Offset = "0x15EA18C", VA = "0x15EA18C")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0x15EA1F0", Offset = "0x15EA1F0", VA = "0x15EA1F0")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED4C", Offset = "0x8EED4C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600267F")]
			[Address(RVA = "0x15E9350", Offset = "0x15E9350", VA = "0x15E9350")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0x15E9358", Offset = "0x15E9358", VA = "0x15E9358")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002681")]
			[Address(RVA = "0x15E9378", Offset = "0x15E9378", VA = "0x15E9378")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED5C", Offset = "0x8EED5C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002682")]
			[Address(RVA = "0x15E9394", Offset = "0x15E9394", VA = "0x15E9394")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0x15E939C", Offset = "0x15E939C", VA = "0x15E939C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0x15E93BC", Offset = "0x15E93BC", VA = "0x15E93BC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED6C", Offset = "0x8EED6C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002685")]
			[Address(RVA = "0x15E93D8", Offset = "0x15E93D8", VA = "0x15E93D8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0x15E93E0", Offset = "0x15E93E0", VA = "0x15E93E0")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0x15E93FC", Offset = "0x15E93FC", VA = "0x15E93FC")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED7C", Offset = "0x8EED7C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002688")]
			[Address(RVA = "0x15E9418", Offset = "0x15E9418", VA = "0x15E9418")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002689")]
			[Address(RVA = "0x15E9420", Offset = "0x15E9420", VA = "0x15E9420")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600268A")]
			[Address(RVA = "0x15E943C", Offset = "0x15E943C", VA = "0x15E943C")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED8C", Offset = "0x8EED8C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600268B")]
			[Address(RVA = "0x15E9458", Offset = "0x15E9458", VA = "0x15E9458")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0x15E9460", Offset = "0x15E9460", VA = "0x15E9460")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600268D")]
			[Address(RVA = "0x15E947C", Offset = "0x15E947C", VA = "0x15E947C")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EED9C", Offset = "0x8EED9C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600268E")]
			[Address(RVA = "0x15E9498", Offset = "0x15E9498", VA = "0x15E9498")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0x15E94A0", Offset = "0x15E94A0", VA = "0x15E94A0")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0x15E94BC", Offset = "0x15E94BC", VA = "0x15E94BC")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDAC", Offset = "0x8EEDAC")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002691")]
			[Address(RVA = "0x15E94D8", Offset = "0x15E94D8", VA = "0x15E94D8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002692")]
			[Address(RVA = "0x15E94E0", Offset = "0x15E94E0", VA = "0x15E94E0")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0x15E94FC", Offset = "0x15E94FC", VA = "0x15E94FC")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDBC", Offset = "0x8EEDBC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002694")]
			[Address(RVA = "0x15E9518", Offset = "0x15E9518", VA = "0x15E9518")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002695")]
			[Address(RVA = "0x15E9520", Offset = "0x15E9520", VA = "0x15E9520")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0x15E953C", Offset = "0x15E953C", VA = "0x15E953C")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDCC", Offset = "0x8EEDCC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002697")]
			[Address(RVA = "0x15E9558", Offset = "0x15E9558", VA = "0x15E9558")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002698")]
			[Address(RVA = "0x15E9560", Offset = "0x15E9560", VA = "0x15E9560")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0x15E957C", Offset = "0x15E957C", VA = "0x15E957C")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDDC", Offset = "0x8EEDDC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600269A")]
			[Address(RVA = "0x15E9598", Offset = "0x15E9598", VA = "0x15E9598")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0x15E95A0", Offset = "0x15E95A0", VA = "0x15E95A0")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600269C")]
			[Address(RVA = "0x15E95BC", Offset = "0x15E95BC", VA = "0x15E95BC")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDEC", Offset = "0x8EEDEC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0x15E9628", Offset = "0x15E9628", VA = "0x15E9628")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0x15E9630", Offset = "0x15E9630", VA = "0x15E9630")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0x15E964C", Offset = "0x15E964C", VA = "0x15E964C")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEDFC", Offset = "0x8EEDFC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x15E9668", Offset = "0x15E9668", VA = "0x15E9668")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x15E9670", Offset = "0x15E9670", VA = "0x15E9670")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x15E968C", Offset = "0x15E968C", VA = "0x15E968C")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE0C", Offset = "0x8EEE0C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x15E96A8", Offset = "0x15E96A8", VA = "0x15E96A8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x15E96B0", Offset = "0x15E96B0", VA = "0x15E96B0")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x15E96CC", Offset = "0x15E96CC", VA = "0x15E96CC")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE1C", Offset = "0x8EEE1C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x15E96E8", Offset = "0x15E96E8", VA = "0x15E96E8")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x15E96F0", Offset = "0x15E96F0", VA = "0x15E96F0")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x15E970C", Offset = "0x15E970C", VA = "0x15E970C")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE2C", Offset = "0x8EEE2C")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A9")]
			[Address(RVA = "0x15E9728", Offset = "0x15E9728", VA = "0x15E9728")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x15E9730", Offset = "0x15E9730", VA = "0x15E9730")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x15E974C", Offset = "0x15E974C", VA = "0x15E974C")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE3C", Offset = "0x8EEE3C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x15E9768", Offset = "0x15E9768", VA = "0x15E9768")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x15E9770", Offset = "0x15E9770", VA = "0x15E9770")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x15E978C", Offset = "0x15E978C", VA = "0x15E978C")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE4C", Offset = "0x8EEE4C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x15E97A8", Offset = "0x15E97A8", VA = "0x15E97A8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x15E97B0", Offset = "0x15E97B0", VA = "0x15E97B0")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x15E97D8", Offset = "0x15E97D8", VA = "0x15E97D8")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE5C", Offset = "0x8EEE5C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x15E97F4", Offset = "0x15E97F4", VA = "0x15E97F4")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x15E97FC", Offset = "0x15E97FC", VA = "0x15E97FC")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x15E9824", Offset = "0x15E9824", VA = "0x15E9824")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE6C", Offset = "0x8EEE6C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x15E9840", Offset = "0x15E9840", VA = "0x15E9840")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x15E9848", Offset = "0x15E9848", VA = "0x15E9848")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x15E9870", Offset = "0x15E9870", VA = "0x15E9870")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE7C", Offset = "0x8EEE7C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x15E988C", Offset = "0x15E988C", VA = "0x15E988C")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x15E9894", Offset = "0x15E9894", VA = "0x15E9894")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x15E98B0", Offset = "0x15E98B0", VA = "0x15E98B0")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60026BB")]
			[Address(RVA = "0x15E98CC", Offset = "0x15E98CC", VA = "0x15E98CC")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x15E9900", Offset = "0x15E9900", VA = "0x15E9900")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x15E991C", Offset = "0x15E991C", VA = "0x15E991C")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x15E9938", Offset = "0x15E9938", VA = "0x15E9938")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE8C", Offset = "0x8EEE8C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x15E9A3C", Offset = "0x15E9A3C", VA = "0x15E9A3C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0x15E9A44", Offset = "0x15E9A44", VA = "0x15E9A44")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0x15E9A98", Offset = "0x15E9A98", VA = "0x15E9A98")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEE9C", Offset = "0x8EEE9C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x15E9AE4", Offset = "0x15E9AE4", VA = "0x15E9AE4")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x15E9AEC", Offset = "0x15E9AEC", VA = "0x15E9AEC")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x15E9B08", Offset = "0x15E9B08", VA = "0x15E9B08")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEAC", Offset = "0x8EEEAC")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x15E9B24", Offset = "0x15E9B24", VA = "0x15E9B24")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x15E9B2C", Offset = "0x15E9B2C", VA = "0x15E9B2C")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x15E9B48", Offset = "0x15E9B48", VA = "0x15E9B48")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEBC", Offset = "0x8EEEBC")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x15E9B64", Offset = "0x15E9B64", VA = "0x15E9B64")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60026C9")]
			[Address(RVA = "0x15E9B6C", Offset = "0x15E9B6C", VA = "0x15E9B6C")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x15E9B90", Offset = "0x15E9B90", VA = "0x15E9B90")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEECC", Offset = "0x8EEECC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0x15E9BB4", Offset = "0x15E9BB4", VA = "0x15E9BB4")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x15E9BBC", Offset = "0x15E9BBC", VA = "0x15E9BBC")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026CD")]
			[Address(RVA = "0x15E9BE0", Offset = "0x15E9BE0", VA = "0x15E9BE0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEDC", Offset = "0x8EEEDC")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x15E9C04", Offset = "0x15E9C04", VA = "0x15E9C04")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60026CF")]
			[Address(RVA = "0x15E9C0C", Offset = "0x15E9C0C", VA = "0x15E9C0C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x15E9C30", Offset = "0x15E9C30", VA = "0x15E9C30")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEEC", Offset = "0x8EEEEC")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026D1")]
			[Address(RVA = "0x15E9C54", Offset = "0x15E9C54", VA = "0x15E9C54")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x15E9C5C", Offset = "0x15E9C5C", VA = "0x15E9C5C")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0x15E9C80", Offset = "0x15E9C80", VA = "0x15E9C80")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEFC", Offset = "0x8EEEFC")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x15E9CA4", Offset = "0x15E9CA4", VA = "0x15E9CA4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x15E9CAC", Offset = "0x15E9CAC", VA = "0x15E9CAC")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0x15E9CB8", Offset = "0x15E9CB8", VA = "0x15E9CB8")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF0C", Offset = "0x8EEF0C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0x15E9D74", Offset = "0x15E9D74", VA = "0x15E9D74")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x15E9D7C", Offset = "0x15E9D7C", VA = "0x15E9D7C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x15E9D88", Offset = "0x15E9D88", VA = "0x15E9D88")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF1C", Offset = "0x8EEF1C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x15E9E44", Offset = "0x15E9E44", VA = "0x15E9E44")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x15E9E4C", Offset = "0x15E9E4C", VA = "0x15E9E4C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x15E9E58", Offset = "0x15E9E58", VA = "0x15E9E58")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x1665060", Offset = "0x1665060", VA = "0x1665060")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this UnityEngine.CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x1665208", Offset = "0x1665208", VA = "0x1665208")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x16653D8", Offset = "0x16653D8", VA = "0x16653D8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x1665580", Offset = "0x1665580", VA = "0x1665580")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x1665750", Offset = "0x1665750", VA = "0x1665750")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x16658F8", Offset = "0x16658F8", VA = "0x16658F8")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1665AC4", Offset = "0x1665AC4", VA = "0x1665AC4")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1665CB8", Offset = "0x1665CB8", VA = "0x1665CB8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1665E88", Offset = "0x1665E88", VA = "0x1665E88")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1666058", Offset = "0x1666058", VA = "0x1666058")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x1666228", Offset = "0x1666228", VA = "0x1666228")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x16663F8", Offset = "0x16663F8", VA = "0x16663F8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x16665A0", Offset = "0x16665A0", VA = "0x16665A0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1666758", Offset = "0x1666758", VA = "0x1666758")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x1666928", Offset = "0x1666928", VA = "0x1666928")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1666AF0", Offset = "0x1666AF0", VA = "0x1666AF0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x1666CB8", Offset = "0x1666CB8", VA = "0x1666CB8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1666E90", Offset = "0x1666E90", VA = "0x1666E90")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x166705C", Offset = "0x166705C", VA = "0x166705C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x1667228", Offset = "0x1667228", VA = "0x1667228")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x16673F4", Offset = "0x16673F4", VA = "0x16673F4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x16675C4", Offset = "0x16675C4", VA = "0x16675C4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1667794", Offset = "0x1667794", VA = "0x1667794")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x166794C", Offset = "0x166794C", VA = "0x166794C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x1667B08", Offset = "0x1667B08", VA = "0x1667B08")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1667CC4", Offset = "0x1667CC4", VA = "0x1667CC4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x1667E94", Offset = "0x1667E94", VA = "0x1667E94")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x166806C", Offset = "0x166806C", VA = "0x166806C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x166826C", Offset = "0x166826C", VA = "0x166826C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1668474", Offset = "0x1668474", VA = "0x1668474")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x16688C8", Offset = "0x16688C8", VA = "0x16688C8")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1668A8C", Offset = "0x1668A8C", VA = "0x1668A8C")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1668C40", Offset = "0x1668C40", VA = "0x1668C40")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x1668DF4", Offset = "0x1668DF4", VA = "0x1668DF4")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1668FB4", Offset = "0x1668FB4", VA = "0x1668FB4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1669184", Offset = "0x1669184", VA = "0x1669184")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x166932C", Offset = "0x166932C", VA = "0x166932C")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1669580", Offset = "0x1669580", VA = "0x1669580")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x16697E4", Offset = "0x16697E4", VA = "0x16697E4")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1669A48", Offset = "0x1669A48", VA = "0x1669A48")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F0")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF3C", Offset = "0x8EEF3C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x15EA490", Offset = "0x15EA490", VA = "0x15EA490")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x15EA498", Offset = "0x15EA498", VA = "0x15EA498")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x15EA4BC", Offset = "0x15EA4BC", VA = "0x15EA4BC")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF4C", Offset = "0x8EEF4C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x15EA4E0", Offset = "0x15EA4E0", VA = "0x15EA4E0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x15EA4E8", Offset = "0x15EA4E8", VA = "0x15EA4E8")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x15EA50C", Offset = "0x15EA50C", VA = "0x15EA50C")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x1669CAC", Offset = "0x1669CAC", VA = "0x1669CAC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x1669E9C", Offset = "0x1669E9C", VA = "0x1669E9C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x166A0A0", Offset = "0x166A0A0", VA = "0x166A0A0")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x166A160", Offset = "0x166A160", VA = "0x166A160")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x166A220", Offset = "0x166A220", VA = "0x166A220")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x166A2E0", Offset = "0x166A2E0", VA = "0x166A2E0")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x166A3B0", Offset = "0x166A3B0", VA = "0x166A3B0")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x166A480", Offset = "0x166A480", VA = "0x166A480")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x166A540", Offset = "0x166A540", VA = "0x166A540")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x166A768", Offset = "0x166A768", VA = "0x166A768")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F3")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20005F4")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004DF")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026ED")]
				[Address(RVA = "0x15E8A74", Offset = "0x15E8A74", VA = "0x15E8A74", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x15E8AA8", Offset = "0x15E8AA8", VA = "0x15E8AA8")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005F5")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E0")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0x15E8C6C", Offset = "0x15E8C6C", VA = "0x15E8C6C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x15E8CD0", Offset = "0x15E8CD0", VA = "0x15E8CD0")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005F6")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F1")]
				[Address(RVA = "0x15E8B70", Offset = "0x15E8B70", VA = "0x15E8B70", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x15E8B8C", Offset = "0x15E8B8C", VA = "0x15E8B8C")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005F7")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170004E2")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F3")]
				[Address(RVA = "0x15E8ADC", Offset = "0x15E8ADC", VA = "0x15E8ADC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x15E8B28", Offset = "0x15E8B28", VA = "0x15E8B28")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20005F8")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170004E3")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0x15E8BC0", Offset = "0x15E8BC0", VA = "0x15E8BC0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x15E8C24", Offset = "0x15E8C24", VA = "0x15E8C24")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20005F9")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004E4")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0x15E8D04", Offset = "0x15E8D04", VA = "0x15E8D04", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x15E8D38", Offset = "0x15E8D38", VA = "0x15E8D38")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20005FA")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20005FB")]
		public static class Physics
		{
			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x15EA530", Offset = "0x15EA530", VA = "0x15EA530")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x15EA634", Offset = "0x15EA634", VA = "0x15EA634")]
			public static bool HasRigidbody2D(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x15EA63C", Offset = "0x15EA63C", VA = "0x15EA63C")]
			[Preserve]
			public static bool HasRigidbody(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x15EA6D4", Offset = "0x15EA6D4", VA = "0x15EA6D4")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x166A990", Offset = "0x166A990", VA = "0x166A990")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x166AA54", Offset = "0x166AA54", VA = "0x166AA54")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Normal.UI
{
	[Token(Token = "0x20005FC")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x20005FD")]
		public delegate void KeyPressedDelegate(Keyboard keyboard, string keyPress);

		[Token(Token = "0x20005FE")]
		public enum Layout
		{
			[Token(Token = "0x4001EB5")]
			Letters,
			[Token(Token = "0x4001EB6")]
			Numbers
		}

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _letters;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _numbers;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private KeyboardKey _layoutSwapKey;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private KeyboardMallet[] _mallets;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeyboardKey[] _keys;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _shift;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Layout _layout;

		[Token(Token = "0x170004E5")]
		public bool shift
		{
			[Token(Token = "0x6002701")]
			[Address(RVA = "0x1814EEC", Offset = "0x1814EEC", VA = "0x1814EEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1814EF4", Offset = "0x1814EF4", VA = "0x1814EF4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public Layout layout
		{
			[Token(Token = "0x6002703")]
			[Address(RVA = "0x1814FB0", Offset = "0x1814FB0", VA = "0x1814FB0")]
			get
			{
				return default(Layout);
			}
			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1814FB8", Offset = "0x1814FB8", VA = "0x1814FB8")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event KeyPressedDelegate keyPressed
		{
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1814DAC", Offset = "0x1814DAC", VA = "0x1814DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9096C0", Offset = "0x9096C0")]
			add
			{
			}
			[Token(Token = "0x6002700")]
			[Address(RVA = "0x1814E4C", Offset = "0x1814E4C", VA = "0x1814E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9096D0", Offset = "0x9096D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x18150DC", Offset = "0x18150DC", VA = "0x18150DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1815220", Offset = "0x1815220", VA = "0x1815220")]
		public void _MalletStruckKeyboardKey(KeyboardMallet mallet, KeyboardKey key)
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1814EFC", Offset = "0x1814EFC", VA = "0x1814EFC")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1814FBC", Offset = "0x1814FBC", VA = "0x1814FBC")]
		private void SetLayout(Layout layout)
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x18156AC", Offset = "0x18156AC", VA = "0x18156AC")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class KeyboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text _text;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Keyboard _keyboard;

		[Token(Token = "0x170004E7")]
		public Keyboard keyboard
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x181619C", Offset = "0x181619C", VA = "0x181619C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x18161A4", Offset = "0x18161A4", VA = "0x18161A4")]
			set
			{
			}
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1816194", Offset = "0x1816194", VA = "0x1816194")]
		public void SetText(TMP_Text t)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x1816260", Offset = "0x1816260", VA = "0x1816260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1816348", Offset = "0x1816348", VA = "0x1816348")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x18161A8", Offset = "0x18161A8", VA = "0x18161A8")]
		private void SetKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1816268", Offset = "0x1816268", VA = "0x1816268")]
		private void StartObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1816350", Offset = "0x1816350", VA = "0x1816350")]
		private void StopObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1816430", Offset = "0x1816430", VA = "0x1816430")]
		private void KeyPressed(Keyboard keyboard, string keyPress)
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1816500", Offset = "0x1816500", VA = "0x1816500")]
		public KeyboardDisplay()
		{
		}
	}
	[Token(Token = "0x2000600")]
	[ExecuteInEditMode]
	public class KeyboardKey : MonoBehaviour
	{
		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string character;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayCharacter;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shiftCharacter;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shiftDisplayCharacter;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _shift;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _geometry;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _position;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _targetPosition;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent _events;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x170004E8")]
		public bool shift
		{
			[Token(Token = "0x6002718")]
			[Address(RVA = "0x1816508", Offset = "0x1816508", VA = "0x1816508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002719")]
			[Address(RVA = "0x18155E0", Offset = "0x18155E0", VA = "0x18155E0")]
			set
			{
			}
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x1816534", Offset = "0x1816534", VA = "0x1816534")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x18165E8", Offset = "0x18165E8", VA = "0x18165E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1816674", Offset = "0x1816674", VA = "0x1816674")]
		public bool IsMalletHeadInFrontOfKey(KeyboardMallet mallet)
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1815428", Offset = "0x1815428", VA = "0x1815428")]
		public void KeyPressed()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1816510", Offset = "0x1816510", VA = "0x1816510")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x18166BC", Offset = "0x18166BC", VA = "0x18166BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1815604", Offset = "0x1815604", VA = "0x1815604")]
		public void RefreshDisplayCharacter()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x181672C", Offset = "0x181672C", VA = "0x181672C")]
		private string GetDisplayCharacter()
		{
			return null;
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x1815554", Offset = "0x1815554", VA = "0x1815554")]
		public string GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x1816804", Offset = "0x1816804", VA = "0x1816804")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x2000601")]
	[ExecuteInEditMode]
	public class KeyboardKeyMesh : MonoBehaviour
	{
		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _sharedMesh;

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x1816860", Offset = "0x1816860", VA = "0x1816860")]
		private static Mesh CreateMesh()
		{
			return null;
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x1816D34", Offset = "0x1816D34", VA = "0x1816D34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x1816E2C", Offset = "0x1816E2C", VA = "0x1816E2C")]
		public KeyboardKeyMesh()
		{
		}
	}
	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EEF7C", Offset = "0x8EEF7C")]
	public class KeyboardMallet : MonoBehaviour
	{
		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MoveAndScale _moveAndScale;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _head;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 malletHeadPosition;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _newMalletHeadPosition;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x1816E34", Offset = "0x1816E34", VA = "0x1816E34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1816F0C", Offset = "0x1816F0C", VA = "0x1816F0C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x18170F4", Offset = "0x18170F4", VA = "0x18170F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x18170F0", Offset = "0x18170F0", VA = "0x18170F0")]
		private void TriggerHapticPulse()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x1817148", Offset = "0x1817148", VA = "0x1817148")]
		public KeyboardMallet()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class KeyboardMalletHandle : MonoBehaviour
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float worldZScale;

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x1817150", Offset = "0x1817150", VA = "0x1817150")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1817234", Offset = "0x1817234", VA = "0x1817234")]
		public KeyboardMalletHandle()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class MoveAndScale : MonoBehaviour
	{
		[Token(Token = "0x2000605")]
		public enum State
		{
			[Token(Token = "0x4001EDA")]
			Idle,
			[Token(Token = "0x4001EDB")]
			Move,
			[Token(Token = "0x4001EDC")]
			Scale
		}

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRHand leftController;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRHand rightController;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private State _state;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRHand _moveController;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand _idleController;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _positionOffsetFromController;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _rotationOffsetFromController;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _positionOffset;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _rotationOffset;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _scaleOffset;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion _targetRotation;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _targetScale;

		[Token(Token = "0x170004E9")]
		public State CurrentState
		{
			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1B4AF10", Offset = "0x1B4AF10", VA = "0x1B4AF10")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1B4AF18", Offset = "0x1B4AF18", VA = "0x1B4AF18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1B4AF94", Offset = "0x1B4AF94", VA = "0x1B4AF94")]
		private void Start()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1B4B028", Offset = "0x1B4B028", VA = "0x1B4B028")]
		private void Update()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1B4B20C", Offset = "0x1B4B20C", VA = "0x1B4B20C")]
		private void HandleGripState()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1B4B2D0", Offset = "0x1B4B2D0", VA = "0x1B4B2D0")]
		private void BeginMoveOrScaleIfNeeded()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1B4B688", Offset = "0x1B4B688", VA = "0x1B4B688")]
		private void BeginMove(NVRHand moveController, NVRHand idleController)
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1B4B3AC", Offset = "0x1B4B3AC", VA = "0x1B4B3AC")]
		private void Move()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1B4B438", Offset = "0x1B4B438", VA = "0x1B4B438")]
		private void EndMove()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1B4B538", Offset = "0x1B4B538", VA = "0x1B4B538")]
		private void BeginScale()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1B4B494", Offset = "0x1B4B494", VA = "0x1B4B494")]
		private void Scale()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1B4B534", Offset = "0x1B4B534", VA = "0x1B4B534")]
		private void EndScale()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x1B4BA10", Offset = "0x1B4BA10", VA = "0x1B4BA10")]
		private Vector3 GetControllerCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x1B4B868", Offset = "0x1B4B868", VA = "0x1B4B868")]
		private Quaternion GetControllerOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x1B4B980", Offset = "0x1B4B980", VA = "0x1B4B980")]
		private float GetControllerDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1B4B7B0", Offset = "0x1B4B7B0", VA = "0x1B4B7B0")]
		private Matrix4x4 GetControllerCentroidTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1B4BAA0", Offset = "0x1B4BAA0", VA = "0x1B4BAA0")]
		public MoveAndScale()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x2000606")]
	public class BezierPoint : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000607")]
		public struct ExtraData
		{
			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float c1;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float c2;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float c3;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float c4;

			[Token(Token = "0x600275D")]
			[Address(RVA = "0x17666A4", Offset = "0x17666A4", VA = "0x17666A4")]
			public ExtraData(float c1 = 0f, float c2 = 0f, float c3 = 0f, float c4 = 0f)
			{
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0x17666B0", Offset = "0x17666B0", VA = "0x17666B0")]
			public static ExtraData Lerp(ExtraData a, ExtraData b, float t)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0x1766740", Offset = "0x1766740", VA = "0x1766740")]
			public static ExtraData LerpUnclamped(ExtraData a, ExtraData b, float t)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x1766778", Offset = "0x1766778", VA = "0x1766778")]
			public static implicit operator ExtraData(Vector2 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002761")]
			[Address(RVA = "0x1766784", Offset = "0x1766784", VA = "0x1766784")]
			public static implicit operator ExtraData(Vector3 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x176678C", Offset = "0x176678C", VA = "0x176678C")]
			public static implicit operator ExtraData(Vector4 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0x1766790", Offset = "0x1766790", VA = "0x1766790")]
			public static implicit operator ExtraData(Quaternion q)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x1766794", Offset = "0x1766794", VA = "0x1766794")]
			public static implicit operator ExtraData(Rect r)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0x1766810", Offset = "0x1766810", VA = "0x1766810")]
			public static implicit operator ExtraData(Vector2Int v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0x1766828", Offset = "0x1766828", VA = "0x1766828")]
			public static implicit operator ExtraData(Vector3Int v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002767")]
			[Address(RVA = "0x176688C", Offset = "0x176688C", VA = "0x176688C")]
			public static implicit operator ExtraData(RectInt r)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0x1766904", Offset = "0x1766904", VA = "0x1766904")]
			public static implicit operator Vector2(ExtraData v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0x1766908", Offset = "0x1766908", VA = "0x1766908")]
			public static implicit operator Vector3(ExtraData v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600276A")]
			[Address(RVA = "0x176690C", Offset = "0x176690C", VA = "0x176690C")]
			public static implicit operator Vector4(ExtraData v)
			{
				return default(Vector4);
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0x176693C", Offset = "0x176693C", VA = "0x176693C")]
			public static implicit operator Quaternion(ExtraData v)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0x176696C", Offset = "0x176696C", VA = "0x176696C")]
			public static implicit operator Rect(ExtraData v)
			{
				return default(Rect);
			}

			[Token(Token = "0x600276D")]
			[Address(RVA = "0x176699C", Offset = "0x176699C", VA = "0x176699C")]
			public static implicit operator Vector2Int(ExtraData v)
			{
				return default(Vector2Int);
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x17669E4", Offset = "0x17669E4", VA = "0x17669E4")]
			public static implicit operator Vector3Int(ExtraData v)
			{
				return default(Vector3Int);
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1766A44", Offset = "0x1766A44", VA = "0x1766A44")]
			public static implicit operator RectInt(ExtraData v)
			{
				return default(RectInt);
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0x1766AE4", Offset = "0x1766AE4", VA = "0x1766AE4")]
			public static bool operator ==(ExtraData d1, ExtraData d2)
			{
				return default(bool);
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0x1766B14", Offset = "0x1766B14", VA = "0x1766B14")]
			public static bool operator !=(ExtraData d1, ExtraData d2)
			{
				return default(bool);
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0x1766B44", Offset = "0x1766B44", VA = "0x1766B44", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0x1766C08", Offset = "0x1766C08", VA = "0x1766C08", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x1766C58", Offset = "0x1766C58", VA = "0x1766C58", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000608")]
		public enum HandleMode
		{
			[Token(Token = "0x4001EE9")]
			Free,
			[Token(Token = "0x4001EEA")]
			Aligned,
			[Token(Token = "0x4001EEB")]
			Mirrored
		}

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_position;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		[SerializeField]
		private HandleMode m_handleMode;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ExtraData extraData;

		[Token(Token = "0x170004EA")]
		public Vector3 localPosition
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x1773C5C", Offset = "0x1773C5C", VA = "0x1773C5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1773C80", Offset = "0x1773C80", VA = "0x1773C80")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public Vector3 position
		{
			[Token(Token = "0x6002741")]
			[Address(RVA = "0x1773CCC", Offset = "0x1773CCC", VA = "0x1773CCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1773DB8", Offset = "0x1773DB8", VA = "0x1773DB8")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1773E04", Offset = "0x1773E04", VA = "0x1773E04")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x1773E28", Offset = "0x1773E28", VA = "0x1773E28")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public Quaternion rotation
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0x1773E7C", Offset = "0x1773E7C", VA = "0x1773E7C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1773EA0", Offset = "0x1773EA0", VA = "0x1773EA0")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x6002747")]
			[Address(RVA = "0x1773EF4", Offset = "0x1773EF4", VA = "0x1773EF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002748")]
			[Address(RVA = "0x1773F18", Offset = "0x1773F18", VA = "0x1773F18")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1773F64", Offset = "0x1773F64", VA = "0x1773F64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1773F88", Offset = "0x1773F88", VA = "0x1773F88")]
			set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public Vector3 localScale
		{
			[Token(Token = "0x600274B")]
			[Address(RVA = "0x1773FD4", Offset = "0x1773FD4", VA = "0x1773FD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1773FF8", Offset = "0x1773FF8", VA = "0x1773FF8")]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1774044", Offset = "0x1774044", VA = "0x1774044")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600274E")]
			[Address(RVA = "0x1774050", Offset = "0x1774050", VA = "0x1774050")]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1774154", Offset = "0x1774154", VA = "0x1774154")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002750")]
			[Address(RVA = "0x177419C", Offset = "0x177419C", VA = "0x177419C")]
			set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x1774354", Offset = "0x1774354", VA = "0x1774354")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002752")]
			[Address(RVA = "0x1774360", Offset = "0x1774360", VA = "0x1774360")]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0x1774464", Offset = "0x1774464", VA = "0x1774464")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x17744AC", Offset = "0x17744AC", VA = "0x17744AC")]
			set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public HandleMode handleMode
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1774664", Offset = "0x1774664", VA = "0x1774664")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x177466C", Offset = "0x177466C", VA = "0x177466C")]
			set
			{
			}
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x177468C", Offset = "0x177468C", VA = "0x177468C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x17746B4", Offset = "0x17746B4", VA = "0x17746B4")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x1773D14", Offset = "0x1773D14", VA = "0x1773D14")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x17747B4", Offset = "0x17747B4", VA = "0x17747B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9096E0", Offset = "0x9096E0")]
		private void SetSplineDirty()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x17747B8", Offset = "0x17747B8", VA = "0x17747B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1774840", Offset = "0x1774840", VA = "0x1774840")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EEFDC", Offset = "0x8EEFDC")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x200060A")]
		public struct PointIndexTuple
		{
			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int index1;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly int index2;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float t;

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x176710C", Offset = "0x176710C", VA = "0x176710C")]
			public PointIndexTuple(int index1, int index2, float t)
			{
			}
		}

		[Token(Token = "0x200060B")]
		public delegate BezierPoint.ExtraData ExtraDataLerpFunction(BezierPoint.ExtraData data1, BezierPoint.ExtraData data2, float normalizedT);

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ExtraDataLerpFunction defaultExtraDataLerpFunction;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<BezierPoint> endPoints;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool loop;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawGizmos;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color gizmoColor;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float gizmoStep;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_gizmoSmoothness;

		[Token(Token = "0x170004F6")]
		public int gizmoSmoothness
		{
			[Token(Token = "0x6002775")]
			[Address(RVA = "0x177488C", Offset = "0x177488C", VA = "0x177488C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002776")]
			[Address(RVA = "0x1774894", Offset = "0x1774894", VA = "0x1774894")]
			set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public int Count
		{
			[Token(Token = "0x6002777")]
			[Address(RVA = "0x1774918", Offset = "0x1774918", VA = "0x1774918")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004F8")]
		public float Length
		{
			[Token(Token = "0x6002778")]
			[Address(RVA = "0x1774964", Offset = "0x1774964", VA = "0x1774964")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004F9")]
		public BezierPoint Item
		{
			[Token(Token = "0x6002779")]
			[Address(RVA = "0x1774AC8", Offset = "0x1774AC8", VA = "0x1774AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1774C08", Offset = "0x1774C08", VA = "0x1774C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1774C90", Offset = "0x1774C90", VA = "0x1774C90")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1774C0C", Offset = "0x1774C0C", VA = "0x1774C0C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1774E78", Offset = "0x1774E78", VA = "0x1774E78")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x17752DC", Offset = "0x17752DC", VA = "0x17752DC")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x17755B8", Offset = "0x17755B8", VA = "0x17755B8")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1775930", Offset = "0x1775930", VA = "0x1775930")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1775C48", Offset = "0x1775C48", VA = "0x1775C48")]
		public void MovePoint(int previousIndex, int newIndex)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1775C4C", Offset = "0x1775C4C", VA = "0x1775C4C")]
		public void Internal_MovePoint(int previousIndex, int newIndex, string undo)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1776024", Offset = "0x1776024", VA = "0x1776024")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x1776088", Offset = "0x1776088", VA = "0x1776088")]
		public Vector3 GetPosAt(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x17762EC", Offset = "0x17762EC", VA = "0x17762EC")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1776624", Offset = "0x1776624", VA = "0x1776624")]
		public BezierPoint.ExtraData GetExtraData(float normalizedT)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x17766A0", Offset = "0x17766A0", VA = "0x17766A0")]
		public BezierPoint.ExtraData GetExtraData(float normalizedT, ExtraDataLerpFunction lerpFunction)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x1774978", Offset = "0x1774978", VA = "0x1774978")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x17768B8", Offset = "0x17768B8", VA = "0x17768B8")]
		public PointIndexTuple GetNearestPointIndicesTo(float normalizedT)
		{
			return default(PointIndexTuple);
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x17769F4", Offset = "0x17769F4", VA = "0x17769F4")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1776A18", Offset = "0x1776A18", VA = "0x1776A18")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1776B3C", Offset = "0x1776B3C", VA = "0x1776B3C")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1776C18", Offset = "0x1776C18", VA = "0x1776C18")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1776EBC", Offset = "0x1776EBC", VA = "0x1776EBC")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x17778FC", Offset = "0x17778FC", VA = "0x17778FC")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x1777B18", Offset = "0x1777B18", VA = "0x1777B18")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x1776884", Offset = "0x1776884", VA = "0x1776884")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x1777FF4", Offset = "0x1777FF4", VA = "0x1777FF4")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x177835C", Offset = "0x177835C", VA = "0x177835C")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public enum TravelMode
	{
		[Token(Token = "0x4001EF8")]
		Once,
		[Token(Token = "0x4001EF9")]
		Loop,
		[Token(Token = "0x4001EFA")]
		PingPong
	}
	[Token(Token = "0x200060D")]
	public enum LookAtMode
	{
		[Token(Token = "0x4001EFC")]
		None,
		[Token(Token = "0x4001EFD")]
		Forward,
		[Token(Token = "0x4001EFE")]
		SplineExtraData
	}
	[Token(Token = "0x200060E")]
	public abstract class BezierWalker : MonoBehaviour
	{
		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly BezierSpline.ExtraDataLerpFunction extraDataLerpAsQuaternionFunction;

		[Token(Token = "0x170004FA")]
		public abstract BezierSpline Spline
		{
			[Token(Token = "0x600279A")]
			get;
		}

		[Token(Token = "0x170004FB")]
		public abstract bool MovingForward
		{
			[Token(Token = "0x600279B")]
			get;
		}

		[Token(Token = "0x170004FC")]
		public abstract float NormalizedT
		{
			[Token(Token = "0x600279C")]
			get;
			[Token(Token = "0x600279D")]
			set;
		}

		[Token(Token = "0x600279E")]
		public abstract void Execute(float deltaTime);

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1778494", Offset = "0x1778494", VA = "0x1778494")]
		private static BezierPoint.ExtraData InterpolateExtraDataAsQuaternion(BezierPoint.ExtraData data1, BezierPoint.ExtraData data2, float normalizedT)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x1778548", Offset = "0x1778548", VA = "0x1778548")]
		protected BezierWalker()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class BezierWalkerLocomotion : BezierWalker
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierWalker walker;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> tailObjects;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<float> tailObjectDistances;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float movementLerpModifier;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8FA220", Offset = "0x8FA220")]
		public bool lookForward;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LookAtMode lookAt;

		[Token(Token = "0x170004FD")]
		public List<Transform> Tail
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x17785E4", Offset = "0x17785E4", VA = "0x17785E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		public List<float> TailDistances
		{
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x17785EC", Offset = "0x17785EC", VA = "0x17785EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FF")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x17785F4", Offset = "0x17785F4", VA = "0x17785F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		public override bool MovingForward
		{
			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x1778614", Offset = "0x1778614", VA = "0x1778614", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000501")]
		public override float NormalizedT
		{
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x1778634", Offset = "0x1778634", VA = "0x1778634", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x1778654", Offset = "0x1778654", VA = "0x1778654", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x1778674", Offset = "0x1778674", VA = "0x1778674")]
		private void Start()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x1778808", Offset = "0x1778808", VA = "0x1778808")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1778838", Offset = "0x1778838", VA = "0x1778838", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x1778B98", Offset = "0x1778B98", VA = "0x1778B98")]
		public void AddToTail(Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1778CCC", Offset = "0x1778CCC", VA = "0x1778CCC")]
		public void InsertIntoTail(int index, Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1778E0C", Offset = "0x1778E0C", VA = "0x1778E0C")]
		public void RemoveFromTail(Transform transform)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x1778FD8", Offset = "0x1778FD8", VA = "0x1778FD8")]
		public BezierWalkerLocomotion()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class BezierWalkerWithSpeed : BezierWalker
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelMode travelMode;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FA25C", Offset = "0x8FA25C")]
		[SerializeField]
		private float m_normalizedT;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8FA29C", Offset = "0x8FA29C")]
		public bool lookForward;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LookAtMode lookAt;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isGoingForward;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x17000502")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x1779050", Offset = "0x1779050", VA = "0x1779050", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000503")]
		public override float NormalizedT
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x1779058", Offset = "0x1779058", VA = "0x1779058", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x1779060", Offset = "0x1779060", VA = "0x1779060", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public override bool MovingForward
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x1779068", Offset = "0x1779068", VA = "0x1779068", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x1779088", Offset = "0x1779088", VA = "0x1779088")]
		private void Update()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x17790B8", Offset = "0x17790B8", VA = "0x17790B8", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1779444", Offset = "0x1779444", VA = "0x1779444")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class BezierWalkerWithTime : BezierWalker
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelMode travelMode;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float travelTime;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FA2D8", Offset = "0x8FA2D8")]
		[SerializeField]
		private float m_normalizedT;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float movementLerpModifier;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8FA318", Offset = "0x8FA318")]
		public bool lookForward;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LookAtMode lookAt;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isGoingForward;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x17000505")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x1779500", Offset = "0x1779500", VA = "0x1779500", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		public override float NormalizedT
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x1779508", Offset = "0x1779508", VA = "0x1779508", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x1779510", Offset = "0x1779510", VA = "0x1779510", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000507")]
		public override bool MovingForward
		{
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x1779518", Offset = "0x1779518", VA = "0x1779518", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x1779520", Offset = "0x1779520", VA = "0x1779520")]
		private void Update()
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1779550", Offset = "0x1779550", VA = "0x1779550", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x17798C8", Offset = "0x17798C8", VA = "0x17798C8")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x2000612")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x2000613")]
		public enum FollowMode
		{
			[Token(Token = "0x4001F27")]
			Relaxed,
			[Token(Token = "0x4001F28")]
			Strict
		}

		[Token(Token = "0x4001F1E")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowMode followMode;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cachedTransform;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector4> particleData;

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x15A5B2C", Offset = "0x15A5B2C", VA = "0x15A5B2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x15A5C88", Offset = "0x15A5C88", VA = "0x15A5C88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x15A61E4", Offset = "0x15A61E4", VA = "0x15A61E4")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000614")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x17000508")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x1A02538", Offset = "0x1A02538", VA = "0x1A02538", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x1A02540", Offset = "0x1A02540", VA = "0x1A02540", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x1A025D0", Offset = "0x1A025D0", VA = "0x1A025D0", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1A025D8", Offset = "0x1A025D8", VA = "0x1A025D8")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000615")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x1700050A")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x1AAAE60", Offset = "0x1AAAE60", VA = "0x1AAAE60", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x1AAAE68", Offset = "0x1AAAE68", VA = "0x1AAAE68", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x1AAAEF8", Offset = "0x1AAAEF8", VA = "0x1AAAEF8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1AAAF00", Offset = "0x1AAAF00", VA = "0x1AAAF00")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000616")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x1700050C")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x1771B90", Offset = "0x1771B90", VA = "0x1771B90", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1771B98", Offset = "0x1771B98", VA = "0x1771B98", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x1771C28", Offset = "0x1771C28", VA = "0x1771C28", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1771C30", Offset = "0x1771C30", VA = "0x1771C30")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1771CE8", Offset = "0x1771CE8", VA = "0x1771CE8")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1771D98", Offset = "0x1771D98", VA = "0x1771D98")]
		public void Unload()
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1771E34", Offset = "0x1771E34", VA = "0x1771E34")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000617")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA354", Offset = "0x8FA354")]
		private int groupIdInternal;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA3B0", Offset = "0x8FA3B0")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x1700050E")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x1772208", Offset = "0x1772208", VA = "0x1772208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050F")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60027D0")]
			get;
		}

		[Token(Token = "0x17000510")]
		public uint GroupId
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x17722F4", Offset = "0x17722F4", VA = "0x17722F4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000511")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D3FC", Offset = "0x90D3FC")]
		public int groupID
		{
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x17724A0", Offset = "0x17724A0", VA = "0x17724A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000512")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D434", Offset = "0x90D434")]
		public byte[] groupGuid
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x17724A4", Offset = "0x17724A4", VA = "0x17724A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x177238C", Offset = "0x177238C", VA = "0x177238C", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1772560", Offset = "0x1772560", VA = "0x1772560")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000618")]
	public abstract class BaseType
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA40C", Offset = "0x8FA40C")]
		[SerializeField]
		private int idInternal;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8FA468", Offset = "0x8FA468")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x17000513")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027D6")]
			get;
			[Token(Token = "0x60027D7")]
			set;
		}

		[Token(Token = "0x17000514")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027D8")]
			get;
		}

		[Token(Token = "0x17000515")]
		public virtual string Name
		{
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x1772568", Offset = "0x1772568", VA = "0x1772568", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000516")]
		public uint Id
		{
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x17725F8", Offset = "0x17725F8", VA = "0x17725F8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000517")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D46C", Offset = "0x90D46C")]
		public int ID
		{
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x17727E8", Offset = "0x17727E8", VA = "0x17727E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000518")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90D4A4", Offset = "0x90D4A4")]
		public byte[] valueGuid
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x17727EC", Offset = "0x17727EC", VA = "0x17727EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x1772420", Offset = "0x1772420", VA = "0x1772420", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x1772648", Offset = "0x1772648", VA = "0x1772648")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x1772738", Offset = "0x1772738", VA = "0x1772738")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x177273C", Offset = "0x177273C", VA = "0x177273C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x1771E3C", Offset = "0x1771E3C", VA = "0x1771E3C")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000619")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x1A260EC", Offset = "0x1A260EC", VA = "0x1A260EC")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061A")]
	public class Event : BaseType
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000519")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x17442FC", Offset = "0x17442FC", VA = "0x17442FC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x1744304", Offset = "0x1744304", VA = "0x1744304", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700051A")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x1744394", Offset = "0x1744394", VA = "0x1744394", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x174439C", Offset = "0x174439C", VA = "0x174439C")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x17443A0", Offset = "0x17443A0", VA = "0x17443A0")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x17444D8", Offset = "0x17444D8", VA = "0x17444D8")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x17445B4", Offset = "0x17445B4", VA = "0x17445B4")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1744688", Offset = "0x1744688", VA = "0x1744688")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1744698", Offset = "0x1744698", VA = "0x1744698")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1744778", Offset = "0x1744778", VA = "0x1744778")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x17447EC", Offset = "0x17447EC", VA = "0x17447EC")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1744868", Offset = "0x1744868", VA = "0x1744868")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x1744914", Offset = "0x1744914", VA = "0x1744914")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x17449AC", Offset = "0x17449AC", VA = "0x17449AC")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061B")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x1700051B")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x192F680", Offset = "0x192F680", VA = "0x192F680", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x192F688", Offset = "0x192F688", VA = "0x192F688", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x192F718", Offset = "0x192F718", VA = "0x192F718", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x192F720", Offset = "0x192F720", VA = "0x192F720")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x192F7F0", Offset = "0x192F7F0", VA = "0x192F7F0")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x192F900", Offset = "0x192F900", VA = "0x192F900")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x192F9BC", Offset = "0x192F9BC", VA = "0x192F9BC")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x192F9C4", Offset = "0x192F9C4", VA = "0x192F9C4")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061C")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x1700051D")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x1876950", Offset = "0x1876950", VA = "0x1876950", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x1876958", Offset = "0x1876958", VA = "0x1876958", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700051E")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x18769E8", Offset = "0x18769E8", VA = "0x18769E8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x1700051F")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x18769F0", Offset = "0x18769F0", VA = "0x18769F0", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x18769F8", Offset = "0x18769F8", VA = "0x18769F8")]
		public void SetValue()
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x1876AC0", Offset = "0x1876AC0", VA = "0x1876AC0")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061D")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000520")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x187EDE4", Offset = "0x187EDE4", VA = "0x187EDE4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002800")]
			[Address(RVA = "0x187EDEC", Offset = "0x187EDEC", VA = "0x187EDEC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x187EE7C", Offset = "0x187EE7C", VA = "0x187EE7C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000522")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x187EE84", Offset = "0x187EE84", VA = "0x187EE84", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x187EE8C", Offset = "0x187EE8C", VA = "0x187EE8C")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x187EF5C", Offset = "0x187EF5C", VA = "0x187EF5C")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061E")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x17000523")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0x1792270", Offset = "0x1792270", VA = "0x1792270", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x1792278", Offset = "0x1792278", VA = "0x1792278", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x1792308", Offset = "0x1792308", VA = "0x1792308", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x1792310", Offset = "0x1792310", VA = "0x1792310")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x17923CC", Offset = "0x17923CC", VA = "0x17923CC")]
		public Trigger()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x200061F")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x15A2834", Offset = "0x15A2834", VA = "0x15A2834")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x15A28B0", Offset = "0x15A28B0", VA = "0x15A28B0")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x15A2E48", Offset = "0x15A2E48", VA = "0x15A2E48")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x15A2F64", Offset = "0x15A2F64", VA = "0x15A2F64")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000620")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF038", Offset = "0x8EF038")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x16B4154", Offset = "0x16B4154", VA = "0x16B4154")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x16B415C", Offset = "0x16B415C", VA = "0x16B415C")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF048", Offset = "0x8EF048")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002825")]
				[Address(RVA = "0x16B4220", Offset = "0x16B4220", VA = "0x16B4220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002827")]
				[Address(RVA = "0x16B4268", Offset = "0x16B4268", VA = "0x16B4268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x16B4180", Offset = "0x16B4180", VA = "0x16B4180")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x16B41AC", Offset = "0x16B41AC", VA = "0x16B41AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x16B41B0", Offset = "0x16B41B0", VA = "0x16B41B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x16B4228", Offset = "0x16B4228", VA = "0x16B4228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF058", Offset = "0x8EF058")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000527")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002828")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002829")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF068", Offset = "0x8EF068")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002831")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002833")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282E")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600282F")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002830")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002832")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF078", Offset = "0x8EF078")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002837")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002839")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002834")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002835")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002836")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002838")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF088", Offset = "0x8EF088")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600283D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600283F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600283A")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600283B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600283C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600283E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1AAFF14", Offset = "0x1AAFF14", VA = "0x1AAFF14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1AB0038", Offset = "0x1AB0038", VA = "0x1AB0038")]
		public void Update()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1AB01F8", Offset = "0x1AB01F8", VA = "0x1AB01F8")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x1AB030C", Offset = "0x1AB030C", VA = "0x1AB030C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x1AB0374", Offset = "0x1AB0374", VA = "0x1AB0374")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1AB0568", Offset = "0x1AB0568", VA = "0x1AB0568")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6002815")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6002816")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6002817")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6002818")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1AB0590", Offset = "0x1AB0590", VA = "0x1AB0590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909718", Offset = "0x909718")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x600281A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909778", Offset = "0x909778")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x600281B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9097D8", Offset = "0x9097D8")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x600281C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909838", Offset = "0x909838")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x600281D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x909898", Offset = "0x909898")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x1AB0608", Offset = "0x1AB0608", VA = "0x1AB0608")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public enum Locale
	{
		[Token(Token = "0x4001F55")]
		US,
		[Token(Token = "0x4001F56")]
		DE,
		[Token(Token = "0x4001F57")]
		JP,
		[Token(Token = "0x4001F58")]
		KR,
		[Token(Token = "0x4001F59")]
		RU,
		[Token(Token = "0x4001F5A")]
		CN,
		[Token(Token = "0x4001F5B")]
		TW,
		[Token(Token = "0x4001F5C")]
		FR
	}
	[Token(Token = "0x2000628")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000629")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200062A")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200062B")]
	public class Leaderboard
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA4C4", Offset = "0x8FA4C4")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA4D4", Offset = "0x8FA4D4")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA4E4", Offset = "0x8FA4E4")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700052F")]
		public int Rank
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x1B1C53C", Offset = "0x1B1C53C", VA = "0x1B1C53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909A88", Offset = "0x909A88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x1B1C544", Offset = "0x1B1C544", VA = "0x1B1C544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909A98", Offset = "0x909A98")]
			set
			{
			}
		}

		[Token(Token = "0x17000530")]
		public int Score
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x1B1C54C", Offset = "0x1B1C54C", VA = "0x1B1C54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AA8", Offset = "0x909AA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x1B1C554", Offset = "0x1B1C554", VA = "0x1B1C554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AB8", Offset = "0x909AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public string UserName
		{
			[Token(Token = "0x6002850")]
			[Address(RVA = "0x1B1C55C", Offset = "0x1B1C55C", VA = "0x1B1C55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AC8", Offset = "0x909AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002851")]
			[Address(RVA = "0x1B1C564", Offset = "0x1B1C564", VA = "0x1B1C564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AD8", Offset = "0x909AD8")]
			set
			{
			}
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x1B1C56C", Offset = "0x1B1C56C", VA = "0x1B1C56C")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x200062D")]
		public enum Platform
		{
			[Token(Token = "0x4001F63")]
			Windows,
			[Token(Token = "0x4001F64")]
			Android
		}

		[Token(Token = "0x200062E")]
		public enum TransactionType
		{
			[Token(Token = "0x4001F66")]
			Unknown,
			[Token(Token = "0x4001F67")]
			Paid,
			[Token(Token = "0x4001F68")]
			Redeem,
			[Token(Token = "0x4001F69")]
			FreeTrial
		}

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA4F4", Offset = "0x8FA4F4")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA504", Offset = "0x8FA504")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000532")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x187EDC4", Offset = "0x187EDC4", VA = "0x187EDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AE8", Offset = "0x909AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x187EDCC", Offset = "0x187EDCC", VA = "0x187EDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909AF8", Offset = "0x909AF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public TransactionType Type
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x187EDD4", Offset = "0x187EDD4", VA = "0x187EDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909B08", Offset = "0x909B08")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x187EDDC", Offset = "0x187EDDC", VA = "0x187EDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x909B18", Offset = "0x909B18")]
			set
			{
			}
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x187E918", Offset = "0x187E918", VA = "0x187E918")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x200062F")]
	public class Api
	{
		[Token(Token = "0x2000630")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6002860")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6002861")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002862")]
			[Address(RVA = "0x17641B4", Offset = "0x17641B4", VA = "0x17641B4")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x1AA0C84", Offset = "0x1AA0C84", VA = "0x1AA0C84")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x1AA0B94", Offset = "0x1AA0B94", VA = "0x1AA0B94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909B28", Offset = "0x909B28")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x1AA0F54", Offset = "0x1AA0F54", VA = "0x1AA0F54")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x1AA0C0C", Offset = "0x1AA0C0C", VA = "0x1AA0C0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909B88", Offset = "0x909B88")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x1AA129C", Offset = "0x1AA129C", VA = "0x1AA129C")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x1AA154C", Offset = "0x1AA154C", VA = "0x1AA154C")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x1AA1710", Offset = "0x1AA1710", VA = "0x1AA1710")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class User
	{
		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x15E1DB4", Offset = "0x15E1DB4", VA = "0x15E1DB4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909BE8", Offset = "0x909BE8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x15E1E14", Offset = "0x15E1E14", VA = "0x15E1E14")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x15E211C", Offset = "0x15E211C", VA = "0x15E211C")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x15E2240", Offset = "0x15E2240", VA = "0x15E2240")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x15E2364", Offset = "0x15E2364", VA = "0x15E2364")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x15E2488", Offset = "0x15E2488", VA = "0x15E2488")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class UserStats
	{
		[Token(Token = "0x2000633")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001F7C")]
			GlobalData,
			[Token(Token = "0x4001F7D")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001F7E")]
			LocalData,
			[Token(Token = "0x4001F7F")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000634")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001F81")]
			AllTime,
			[Token(Token = "0x4001F82")]
			Daily,
			[Token(Token = "0x4001F83")]
			Weekly,
			[Token(Token = "0x4001F84")]
			Monthly
		}

		[Token(Token = "0x2000635")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001F86")]
			None,
			[Token(Token = "0x4001F87")]
			Ascending,
			[Token(Token = "0x4001F88")]
			Descending
		}

		[Token(Token = "0x2000636")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001F8A")]
			None,
			[Token(Token = "0x4001F8B")]
			Numeric,
			[Token(Token = "0x4001F8C")]
			TimeSeconds,
			[Token(Token = "0x4001F8D")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000637")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001F8F")]
			None,
			[Token(Token = "0x4001F90")]
			KeepBest,
			[Token(Token = "0x4001F91")]
			ForceUpdate
		}

		[Token(Token = "0x2000638")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001F93")]
			Name,
			[Token(Token = "0x4001F94")]
			Desc,
			[Token(Token = "0x4001F95")]
			Hidden
		}

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x15E3854", Offset = "0x15E3854", VA = "0x15E3854")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909C48", Offset = "0x909C48")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x15E3A34", Offset = "0x15E3A34", VA = "0x15E3A34")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x15E38B4", Offset = "0x15E38B4", VA = "0x15E38B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909CA8", Offset = "0x909CA8")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x15E3D3C", Offset = "0x15E3D3C", VA = "0x15E3D3C")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x15E4044", Offset = "0x15E4044", VA = "0x15E4044")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x15E41AC", Offset = "0x15E41AC", VA = "0x15E41AC")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x15E431C", Offset = "0x15E431C", VA = "0x15E431C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x15E4484", Offset = "0x15E4484", VA = "0x15E4484")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x15E3914", Offset = "0x15E3914", VA = "0x15E3914")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909D08", Offset = "0x909D08")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x15E45F4", Offset = "0x15E45F4", VA = "0x15E45F4")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x15E48FC", Offset = "0x15E48FC", VA = "0x15E48FC")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x15E49F8", Offset = "0x15E49F8", VA = "0x15E49F8")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x15E4AF4", Offset = "0x15E4AF4", VA = "0x15E4AF4")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x15E4BF0", Offset = "0x15E4BF0", VA = "0x15E4BF0")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x15E4D58", Offset = "0x15E4D58", VA = "0x15E4D58")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x15E4F0C", Offset = "0x15E4F0C", VA = "0x15E4F0C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x15E5008", Offset = "0x15E5008", VA = "0x15E5008")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x15E3974", Offset = "0x15E3974", VA = "0x15E3974")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909D68", Offset = "0x909D68")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x15E5104", Offset = "0x15E5104", VA = "0x15E5104")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x15E39D4", Offset = "0x15E39D4", VA = "0x15E39D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909DC8", Offset = "0x909DC8")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x15E55EC", Offset = "0x15E55EC", VA = "0x15E55EC")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x15E59B8", Offset = "0x15E59B8", VA = "0x15E59B8")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x15E5C7C", Offset = "0x15E5C7C", VA = "0x15E5C7C")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x15E5D94", Offset = "0x15E5D94", VA = "0x15E5D94")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x15E5EAC", Offset = "0x15E5EAC", VA = "0x15E5EAC")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x15E5FC4", Offset = "0x15E5FC4", VA = "0x15E5FC4")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1AA6814", Offset = "0x1AA6814", VA = "0x1AA6814")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x200063A")]
	public class IAPurchase
	{
		[Token(Token = "0x200063B")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x600289F")]
			[Address(RVA = "0x15F6BE8", Offset = "0x15F6BE8", VA = "0x15F6BE8")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x15F6C54", Offset = "0x15F6C54", VA = "0x15F6C54")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x15F6CC4", Offset = "0x15F6CC4", VA = "0x15F6CC4", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x15F71E0", Offset = "0x15F71E0", VA = "0x15F71E0")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x15F7250", Offset = "0x15F7250", VA = "0x15F7250", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0x15F776C", Offset = "0x15F776C", VA = "0x15F776C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0x15F77DC", Offset = "0x15F77DC", VA = "0x15F77DC", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0x15F7D88", Offset = "0x15F7D88", VA = "0x15F7D88")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x15F7DF8", Offset = "0x15F7DF8", VA = "0x15F7DF8", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x15F88D8", Offset = "0x15F88D8", VA = "0x15F88D8")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x15F8948", Offset = "0x15F8948", VA = "0x15F8948", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0x15F9958", Offset = "0x15F9958", VA = "0x15F9958")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x15F99C8", Offset = "0x15F99C8", VA = "0x15F99C8", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028AC")]
			[Address(RVA = "0x15F9F80", Offset = "0x15F9F80", VA = "0x15F9F80")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x15F9FF0", Offset = "0x15F9FF0", VA = "0x15F9FF0", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x15FA500", Offset = "0x15FA500", VA = "0x15FA500")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x15FA570", Offset = "0x15FA570", VA = "0x15FA570", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028B0")]
			[Address(RVA = "0x15FAA80", Offset = "0x15FAA80", VA = "0x15FAA80")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x15FAAF0", Offset = "0x15FAAF0", VA = "0x15FAAF0", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x15FB278", Offset = "0x15FB278", VA = "0x15FB278")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x15FB2E8", Offset = "0x15FB2E8", VA = "0x15FB2E8", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x15FB818", Offset = "0x15FB818", VA = "0x15FB818")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x15FB888", Offset = "0x15FB888", VA = "0x15FB888", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x15FBDB8", Offset = "0x15FBDB8", VA = "0x15FBDB8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x15FBE28", Offset = "0x15FBE28", VA = "0x15FBE28", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200063C")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60028B8")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60028B9")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60028BA")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60028BB")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60028BC")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60028BD")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60028BE")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60028BF")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60028C0")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60028C1")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60028C2")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x60028C3")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x15F6BE0", Offset = "0x15F6BE0", VA = "0x15F6BE0")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200063D")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x15FC218", Offset = "0x15FC218", VA = "0x15FC218", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x15FC21C", Offset = "0x15FC21C", VA = "0x15FC21C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x15FC220", Offset = "0x15FC220", VA = "0x15FC220", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x15FC224", Offset = "0x15FC224", VA = "0x15FC224", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60028C9")]
			[Address(RVA = "0x15FC228", Offset = "0x15FC228", VA = "0x15FC228", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x15FC22C", Offset = "0x15FC22C", VA = "0x15FC22C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x15FC230", Offset = "0x15FC230", VA = "0x15FC230", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x15FC234", Offset = "0x15FC234", VA = "0x15FC234", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x15FC238", Offset = "0x15FC238", VA = "0x15FC238", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x15FC23C", Offset = "0x15FC23C", VA = "0x15FC23C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x15FC240", Offset = "0x15FC240", VA = "0x15FC240", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x15FC244", Offset = "0x15FC244", VA = "0x15FC244", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x15FC248", Offset = "0x15FC248", VA = "0x15FC248", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x15FC24C", Offset = "0x15FC24C", VA = "0x15FC24C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200063E")]
		public class QueryResponse
		{
			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA514", Offset = "0x8FA514")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA524", Offset = "0x8FA524")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA534", Offset = "0x8FA534")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA544", Offset = "0x8FA544")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA554", Offset = "0x8FA554")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA564", Offset = "0x8FA564")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000534")]
			public string order_id
			{
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0x15FC284", Offset = "0x15FC284", VA = "0x15FC284")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A308", Offset = "0x90A308")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D4")]
				[Address(RVA = "0x15FC28C", Offset = "0x15FC28C", VA = "0x15FC28C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A318", Offset = "0x90A318")]
				set
				{
				}
			}

			[Token(Token = "0x17000535")]
			public string purchase_id
			{
				[Token(Token = "0x60028D5")]
				[Address(RVA = "0x15FC294", Offset = "0x15FC294", VA = "0x15FC294")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A328", Offset = "0x90A328")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D6")]
				[Address(RVA = "0x15FC29C", Offset = "0x15FC29C", VA = "0x15FC29C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A338", Offset = "0x90A338")]
				set
				{
				}
			}

			[Token(Token = "0x17000536")]
			public string status
			{
				[Token(Token = "0x60028D7")]
				[Address(RVA = "0x15FC2A4", Offset = "0x15FC2A4", VA = "0x15FC2A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A348", Offset = "0x90A348")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D8")]
				[Address(RVA = "0x15FC2AC", Offset = "0x15FC2AC", VA = "0x15FC2AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A358", Offset = "0x90A358")]
				set
				{
				}
			}

			[Token(Token = "0x17000537")]
			public string price
			{
				[Token(Token = "0x60028D9")]
				[Address(RVA = "0x15FC2B4", Offset = "0x15FC2B4", VA = "0x15FC2B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A368", Offset = "0x90A368")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0x15FC2BC", Offset = "0x15FC2BC", VA = "0x15FC2BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A378", Offset = "0x90A378")]
				set
				{
				}
			}

			[Token(Token = "0x17000538")]
			public string currency
			{
				[Token(Token = "0x60028DB")]
				[Address(RVA = "0x15FC2C4", Offset = "0x15FC2C4", VA = "0x15FC2C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A388", Offset = "0x90A388")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x15FC2CC", Offset = "0x15FC2CC", VA = "0x15FC2CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A398", Offset = "0x90A398")]
				set
				{
				}
			}

			[Token(Token = "0x17000539")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028DD")]
				[Address(RVA = "0x15FC2D4", Offset = "0x15FC2D4", VA = "0x15FC2D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3A8", Offset = "0x90A3A8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0x15FC2DC", Offset = "0x15FC2DC", VA = "0x15FC2DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3B8", Offset = "0x90A3B8")]
				set
				{
				}
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x15F88D0", Offset = "0x15F88D0", VA = "0x15F88D0")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200063F")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA574", Offset = "0x8FA574")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA584", Offset = "0x8FA584")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA594", Offset = "0x8FA594")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5A4", Offset = "0x8FA5A4")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5B4", Offset = "0x8FA5B4")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5C4", Offset = "0x8FA5C4")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5D4", Offset = "0x8FA5D4")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700053A")]
			public string order_id
			{
				[Token(Token = "0x60028E0")]
				[Address(RVA = "0x15FC2E4", Offset = "0x15FC2E4", VA = "0x15FC2E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3C8", Offset = "0x90A3C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E1")]
				[Address(RVA = "0x15FC2EC", Offset = "0x15FC2EC", VA = "0x15FC2EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3D8", Offset = "0x90A3D8")]
				set
				{
				}
			}

			[Token(Token = "0x1700053B")]
			public string app_id
			{
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0x15FC2F4", Offset = "0x15FC2F4", VA = "0x15FC2F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3E8", Offset = "0x90A3E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E3")]
				[Address(RVA = "0x15FC2FC", Offset = "0x15FC2FC", VA = "0x15FC2FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A3F8", Offset = "0x90A3F8")]
				set
				{
				}
			}

			[Token(Token = "0x1700053C")]
			public string purchase_id
			{
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0x15FC304", Offset = "0x15FC304", VA = "0x15FC304")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A408", Offset = "0x90A408")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E5")]
				[Address(RVA = "0x15FC30C", Offset = "0x15FC30C", VA = "0x15FC30C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A418", Offset = "0x90A418")]
				set
				{
				}
			}

			[Token(Token = "0x1700053D")]
			public string user_data
			{
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0x15FC314", Offset = "0x15FC314", VA = "0x15FC314")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A428", Offset = "0x90A428")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E7")]
				[Address(RVA = "0x15FC31C", Offset = "0x15FC31C", VA = "0x15FC31C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A438", Offset = "0x90A438")]
				set
				{
				}
			}

			[Token(Token = "0x1700053E")]
			public string price
			{
				[Token(Token = "0x60028E8")]
				[Address(RVA = "0x15FC324", Offset = "0x15FC324", VA = "0x15FC324")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A448", Offset = "0x90A448")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E9")]
				[Address(RVA = "0x15FC32C", Offset = "0x15FC32C", VA = "0x15FC32C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A458", Offset = "0x90A458")]
				set
				{
				}
			}

			[Token(Token = "0x1700053F")]
			public string currency
			{
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0x15FC334", Offset = "0x15FC334", VA = "0x15FC334")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A468", Offset = "0x90A468")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028EB")]
				[Address(RVA = "0x15FC33C", Offset = "0x15FC33C", VA = "0x15FC33C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A478", Offset = "0x90A478")]
				set
				{
				}
			}

			[Token(Token = "0x17000540")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0x15FC344", Offset = "0x15FC344", VA = "0x15FC344")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A488", Offset = "0x90A488")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028ED")]
				[Address(RVA = "0x15FC34C", Offset = "0x15FC34C", VA = "0x15FC34C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A498", Offset = "0x90A498")]
				set
				{
				}
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0x15F9948", Offset = "0x15F9948", VA = "0x15F9948")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000640")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5E4", Offset = "0x8FA5E4")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA5F4", Offset = "0x8FA5F4")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA604", Offset = "0x8FA604")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000541")]
			public int total
			{
				[Token(Token = "0x60028EF")]
				[Address(RVA = "0x15FC254", Offset = "0x15FC254", VA = "0x15FC254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4A8", Offset = "0x90A4A8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028F0")]
				[Address(RVA = "0x15FC25C", Offset = "0x15FC25C", VA = "0x15FC25C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4B8", Offset = "0x90A4B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000542")]
			public int from
			{
				[Token(Token = "0x60028F1")]
				[Address(RVA = "0x15FC264", Offset = "0x15FC264", VA = "0x15FC264")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4C8", Offset = "0x90A4C8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0x15FC26C", Offset = "0x15FC26C", VA = "0x15FC26C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4D8", Offset = "0x90A4D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000543")]
			public int to
			{
				[Token(Token = "0x60028F3")]
				[Address(RVA = "0x15FC274", Offset = "0x15FC274", VA = "0x15FC274")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4E8", Offset = "0x90A4E8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0x15FC27C", Offset = "0x15FC27C", VA = "0x15FC27C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A4F8", Offset = "0x90A4F8")]
				set
				{
				}
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x15F9950", Offset = "0x15F9950", VA = "0x15F9950")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000641")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA614", Offset = "0x8FA614")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA624", Offset = "0x8FA624")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA634", Offset = "0x8FA634")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000544")]
			public long create_time
			{
				[Token(Token = "0x60028F6")]
				[Address(RVA = "0x15FC3C4", Offset = "0x15FC3C4", VA = "0x15FC3C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A508", Offset = "0x90A508")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0x15FC3CC", Offset = "0x15FC3CC", VA = "0x15FC3CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A518", Offset = "0x90A518")]
				set
				{
				}
			}

			[Token(Token = "0x17000545")]
			public string payment_method
			{
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0x15FC3D4", Offset = "0x15FC3D4", VA = "0x15FC3D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A528", Offset = "0x90A528")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F9")]
				[Address(RVA = "0x15FC3DC", Offset = "0x15FC3DC", VA = "0x15FC3DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A538", Offset = "0x90A538")]
				set
				{
				}
			}

			[Token(Token = "0x17000546")]
			public string status
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0x15FC3E4", Offset = "0x15FC3E4", VA = "0x15FC3E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A548", Offset = "0x90A548")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028FB")]
				[Address(RVA = "0x15FC3EC", Offset = "0x15FC3EC", VA = "0x15FC3EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A558", Offset = "0x90A558")]
				set
				{
				}
			}

			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x15FC3F4", Offset = "0x15FC3F4", VA = "0x15FC3F4")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000642")]
		public class StatusDetail
		{
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA644", Offset = "0x8FA644")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA654", Offset = "0x8FA654")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA664", Offset = "0x8FA664")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000547")]
			public long date_next_charge
			{
				[Token(Token = "0x60028FD")]
				[Address(RVA = "0x15FC38C", Offset = "0x15FC38C", VA = "0x15FC38C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A568", Offset = "0x90A568")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028FE")]
				[Address(RVA = "0x15FC394", Offset = "0x15FC394", VA = "0x15FC394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A578", Offset = "0x90A578")]
				set
				{
				}
			}

			[Token(Token = "0x17000548")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60028FF")]
				[Address(RVA = "0x15FC39C", Offset = "0x15FC39C", VA = "0x15FC39C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A588", Offset = "0x90A588")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002900")]
				[Address(RVA = "0x15FC3A4", Offset = "0x15FC3A4", VA = "0x15FC3A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A598", Offset = "0x90A598")]
				set
				{
				}
			}

			[Token(Token = "0x17000549")]
			public string cancel_reason
			{
				[Token(Token = "0x6002901")]
				[Address(RVA = "0x15FC3AC", Offset = "0x15FC3AC", VA = "0x15FC3AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5A8", Offset = "0x90A5A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002902")]
				[Address(RVA = "0x15FC3B4", Offset = "0x15FC3B4", VA = "0x15FC3B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5B8", Offset = "0x90A5B8")]
				set
				{
				}
			}

			[Token(Token = "0x6002903")]
			[Address(RVA = "0x15FC3BC", Offset = "0x15FC3BC", VA = "0x15FC3BC")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000643")]
		public class TimePeriod
		{
			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA674", Offset = "0x8FA674")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA684", Offset = "0x8FA684")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700054A")]
			public string time_type
			{
				[Token(Token = "0x6002904")]
				[Address(RVA = "0x15FC4D4", Offset = "0x15FC4D4", VA = "0x15FC4D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5C8", Offset = "0x90A5C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002905")]
				[Address(RVA = "0x15FC4DC", Offset = "0x15FC4DC", VA = "0x15FC4DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5D8", Offset = "0x90A5D8")]
				set
				{
				}
			}

			[Token(Token = "0x1700054B")]
			public int value
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0x15FC4E4", Offset = "0x15FC4E4", VA = "0x15FC4E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5E8", Offset = "0x90A5E8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002907")]
				[Address(RVA = "0x15FC4EC", Offset = "0x15FC4EC", VA = "0x15FC4EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A5F8", Offset = "0x90A5F8")]
				set
				{
				}
			}

			[Token(Token = "0x6002908")]
			[Address(RVA = "0x15FC4F4", Offset = "0x15FC4F4", VA = "0x15FC4F4")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000644")]
		public class Subscription
		{
			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA694", Offset = "0x8FA694")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6A4", Offset = "0x8FA6A4")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6B4", Offset = "0x8FA6B4")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6C4", Offset = "0x8FA6C4")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6D4", Offset = "0x8FA6D4")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6E4", Offset = "0x8FA6E4")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA6F4", Offset = "0x8FA6F4")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA704", Offset = "0x8FA704")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA714", Offset = "0x8FA714")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA724", Offset = "0x8FA724")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA734", Offset = "0x8FA734")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA744", Offset = "0x8FA744")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA754", Offset = "0x8FA754")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700054C")]
			public string app_id
			{
				[Token(Token = "0x6002909")]
				[Address(RVA = "0x15FC3FC", Offset = "0x15FC3FC", VA = "0x15FC3FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A608", Offset = "0x90A608")]
				get
				{
					return null;
				}
				[Token(Token = "0x600290A")]
				[Address(RVA = "0x15FC404", Offset = "0x15FC404", VA = "0x15FC404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A618", Offset = "0x90A618")]
				set
				{
				}
			}

			[Token(Token = "0x1700054D")]
			public string order_id
			{
				[Token(Token = "0x600290B")]
				[Address(RVA = "0x15FC40C", Offset = "0x15FC40C", VA = "0x15FC40C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A628", Offset = "0x90A628")]
				get
				{
					return null;
				}
				[Token(Token = "0x600290C")]
				[Address(RVA = "0x15FC414", Offset = "0x15FC414", VA = "0x15FC414")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A638", Offset = "0x90A638")]
				set
				{
				}
			}

			[Token(Token = "0x1700054E")]
			public string subscription_id
			{
				[Token(Token = "0x600290D")]
				[Address(RVA = "0x15FC41C", Offset = "0x15FC41C", VA = "0x15FC41C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A648", Offset = "0x90A648")]
				get
				{
					return null;
				}
				[Token(Token = "0x600290E")]
				[Address(RVA = "0x15FC424", Offset = "0x15FC424", VA = "0x15FC424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A658", Offset = "0x90A658")]
				set
				{
				}
			}

			[Token(Token = "0x1700054F")]
			public string price
			{
				[Token(Token = "0x600290F")]
				[Address(RVA = "0x15FC42C", Offset = "0x15FC42C", VA = "0x15FC42C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A668", Offset = "0x90A668")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002910")]
				[Address(RVA = "0x15FC434", Offset = "0x15FC434", VA = "0x15FC434")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A678", Offset = "0x90A678")]
				set
				{
				}
			}

			[Token(Token = "0x17000550")]
			public string currency
			{
				[Token(Token = "0x6002911")]
				[Address(RVA = "0x15FC43C", Offset = "0x15FC43C", VA = "0x15FC43C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A688", Offset = "0x90A688")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002912")]
				[Address(RVA = "0x15FC444", Offset = "0x15FC444", VA = "0x15FC444")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A698", Offset = "0x90A698")]
				set
				{
				}
			}

			[Token(Token = "0x17000551")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6002913")]
				[Address(RVA = "0x15FC44C", Offset = "0x15FC44C", VA = "0x15FC44C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6A8", Offset = "0x90A6A8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002914")]
				[Address(RVA = "0x15FC454", Offset = "0x15FC454", VA = "0x15FC454")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6B8", Offset = "0x90A6B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000552")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002915")]
				[Address(RVA = "0x15FC45C", Offset = "0x15FC45C", VA = "0x15FC45C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6C8", Offset = "0x90A6C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002916")]
				[Address(RVA = "0x15FC464", Offset = "0x15FC464", VA = "0x15FC464")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6D8", Offset = "0x90A6D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000553")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002917")]
				[Address(RVA = "0x15FC46C", Offset = "0x15FC46C", VA = "0x15FC46C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6E8", Offset = "0x90A6E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002918")]
				[Address(RVA = "0x15FC474", Offset = "0x15FC474", VA = "0x15FC474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A6F8", Offset = "0x90A6F8")]
				set
				{
				}
			}

			[Token(Token = "0x17000554")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002919")]
				[Address(RVA = "0x15FC47C", Offset = "0x15FC47C", VA = "0x15FC47C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A708", Offset = "0x90A708")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600291A")]
				[Address(RVA = "0x15FC484", Offset = "0x15FC484", VA = "0x15FC484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A718", Offset = "0x90A718")]
				set
				{
				}
			}

			[Token(Token = "0x17000555")]
			public string plan_id
			{
				[Token(Token = "0x600291B")]
				[Address(RVA = "0x15FC48C", Offset = "0x15FC48C", VA = "0x15FC48C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A728", Offset = "0x90A728")]
				get
				{
					return null;
				}
				[Token(Token = "0x600291C")]
				[Address(RVA = "0x15FC494", Offset = "0x15FC494", VA = "0x15FC494")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A738", Offset = "0x90A738")]
				set
				{
				}
			}

			[Token(Token = "0x17000556")]
			public string plan_name
			{
				[Token(Token = "0x600291D")]
				[Address(RVA = "0x15FC49C", Offset = "0x15FC49C", VA = "0x15FC49C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A748", Offset = "0x90A748")]
				get
				{
					return null;
				}
				[Token(Token = "0x600291E")]
				[Address(RVA = "0x15FC4A4", Offset = "0x15FC4A4", VA = "0x15FC4A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A758", Offset = "0x90A758")]
				set
				{
				}
			}

			[Token(Token = "0x17000557")]
			public string status
			{
				[Token(Token = "0x600291F")]
				[Address(RVA = "0x15FC4AC", Offset = "0x15FC4AC", VA = "0x15FC4AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A768", Offset = "0x90A768")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002920")]
				[Address(RVA = "0x15FC4B4", Offset = "0x15FC4B4", VA = "0x15FC4B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A778", Offset = "0x90A778")]
				set
				{
				}
			}

			[Token(Token = "0x17000558")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002921")]
				[Address(RVA = "0x15FC4BC", Offset = "0x15FC4BC", VA = "0x15FC4BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A788", Offset = "0x90A788")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002922")]
				[Address(RVA = "0x15FC4C4", Offset = "0x15FC4C4", VA = "0x15FC4C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A798", Offset = "0x90A798")]
				set
				{
				}
			}

			[Token(Token = "0x6002923")]
			[Address(RVA = "0x15FC4CC", Offset = "0x15FC4CC", VA = "0x15FC4CC")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000645")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA764", Offset = "0x8FA764")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA774", Offset = "0x8FA774")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA784", Offset = "0x8FA784")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000559")]
			public int statusCode
			{
				[Token(Token = "0x6002924")]
				[Address(RVA = "0x15FC354", Offset = "0x15FC354", VA = "0x15FC354")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7A8", Offset = "0x90A7A8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002925")]
				[Address(RVA = "0x15FC35C", Offset = "0x15FC35C", VA = "0x15FC35C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7B8", Offset = "0x90A7B8")]
				set
				{
				}
			}

			[Token(Token = "0x1700055A")]
			public string message
			{
				[Token(Token = "0x6002926")]
				[Address(RVA = "0x15FC364", Offset = "0x15FC364", VA = "0x15FC364")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7C8", Offset = "0x90A7C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002927")]
				[Address(RVA = "0x15FC36C", Offset = "0x15FC36C", VA = "0x15FC36C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7D8", Offset = "0x90A7D8")]
				set
				{
				}
			}

			[Token(Token = "0x1700055B")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002928")]
				[Address(RVA = "0x15FC374", Offset = "0x15FC374", VA = "0x15FC374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7E8", Offset = "0x90A7E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002929")]
				[Address(RVA = "0x15FC37C", Offset = "0x15FC37C", VA = "0x15FC37C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A7F8", Offset = "0x90A7F8")]
				set
				{
				}
			}

			[Token(Token = "0x600292A")]
			[Address(RVA = "0x15FC384", Offset = "0x15FC384", VA = "0x15FC384")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x16C6490", Offset = "0x16C6490", VA = "0x16C6490")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909E28", Offset = "0x909E28")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x16C6C4C", Offset = "0x16C6C4C", VA = "0x16C6C4C")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x16C64FC", Offset = "0x16C64FC", VA = "0x16C64FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909E88", Offset = "0x909E88")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x16C6EF0", Offset = "0x16C6EF0", VA = "0x16C6EF0")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x16C6568", Offset = "0x16C6568", VA = "0x16C6568")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909EE8", Offset = "0x909EE8")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x16C7180", Offset = "0x16C7180", VA = "0x16C7180")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x16C65D4", Offset = "0x16C65D4", VA = "0x16C65D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909F48", Offset = "0x909F48")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x16C7450", Offset = "0x16C7450", VA = "0x16C7450")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x16C6640", Offset = "0x16C6640", VA = "0x16C6640")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x909FA8", Offset = "0x909FA8")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x16C76E0", Offset = "0x16C76E0", VA = "0x16C76E0")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x16C66AC", Offset = "0x16C66AC", VA = "0x16C66AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A008", Offset = "0x90A008")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x16C7970", Offset = "0x16C7970", VA = "0x16C7970")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x16C6718", Offset = "0x16C6718", VA = "0x16C6718")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A068", Offset = "0x90A068")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x16C7BB0", Offset = "0x16C7BB0", VA = "0x16C7BB0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x16C6784", Offset = "0x16C6784", VA = "0x16C6784")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A0C8", Offset = "0x90A0C8")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x16C7DF0", Offset = "0x16C7DF0", VA = "0x16C7DF0")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x16C67F0", Offset = "0x16C67F0", VA = "0x16C67F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A128", Offset = "0x90A128")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x16C8288", Offset = "0x16C8288", VA = "0x16C8288")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x16C685C", Offset = "0x16C685C", VA = "0x16C685C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A188", Offset = "0x90A188")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x16C8518", Offset = "0x16C8518", VA = "0x16C8518")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x16C68C8", Offset = "0x16C68C8", VA = "0x16C68C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A1E8", Offset = "0x90A1E8")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x16C87A8", Offset = "0x16C87A8", VA = "0x16C87A8")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x16C6934", Offset = "0x16C6934", VA = "0x16C6934")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A248", Offset = "0x90A248")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x16C8A38", Offset = "0x16C8A38", VA = "0x16C8A38")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x16C69A0", Offset = "0x16C69A0", VA = "0x16C69A0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A2A8", Offset = "0x90A2A8")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x16C8C78", Offset = "0x16C8C78", VA = "0x16C8C78")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x16C8F08", Offset = "0x16C8F08", VA = "0x16C8F08")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class DLC
	{
		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1662C64", Offset = "0x1662C64", VA = "0x1662C64")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public class Subscription
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x187E484", Offset = "0x187E484", VA = "0x187E484")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A808", Offset = "0x90A808")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x187E4F0", Offset = "0x187E4F0", VA = "0x187E4F0")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x187E810", Offset = "0x187E810", VA = "0x187E810")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x187EDB4", Offset = "0x187EDB4", VA = "0x187EDB4")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class Deeplink
	{
		[Token(Token = "0x2000649")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6002938")]
			public abstract void OnSuccess();

			[Token(Token = "0x6002939")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600293A")]
			[Address(RVA = "0x15EDAB0", Offset = "0x15EDAB0", VA = "0x15EDAB0")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001FCE")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x167770C", Offset = "0x167770C", VA = "0x167770C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A868", Offset = "0x90A868")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x167776C", Offset = "0x167776C", VA = "0x167776C")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x1677A24", Offset = "0x1677A24", VA = "0x1677A24")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x1677C80", Offset = "0x1677C80", VA = "0x1677C80")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x1677D14", Offset = "0x1677D14", VA = "0x1677D14")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x1677F00", Offset = "0x1677F00", VA = "0x1677F00")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x167815C", Offset = "0x167815C", VA = "0x167815C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x1678260", Offset = "0x1678260", VA = "0x1678260")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x200064A")]
	internal class Token
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x178B5C8", Offset = "0x178B5C8", VA = "0x178B5C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A8C8", Offset = "0x90A8C8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x178B698", Offset = "0x178B698", VA = "0x178B698")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x178B628", Offset = "0x178B628", VA = "0x178B628")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x90A928", Offset = "0x90A928")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x178B994", Offset = "0x178B994", VA = "0x178B994")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x178BC90", Offset = "0x178BC90", VA = "0x178BC90")]
		public Token()
		{
		}
	}
	[Token(Token = "0x200064B")]
	internal class Ads
	{
		[Token(Token = "0x6002940")]
		[Address(RVA = "0x1A02DD4", Offset = "0x1A02DD4", VA = "0x1A02DD4")]
		public Ads()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8EF098", Offset = "0x8EF098")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8EF0AC", Offset = "0x8EF0AC")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8EF0C0", Offset = "0x8EF0C0")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8EF0D4", Offset = "0x8EF0D4")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000650")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001FD7")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001FD8")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001FD9")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001FDA")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000651")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001FDC")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001FDD")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001FDE")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001FDF")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000652")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001FE1")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001FE2")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001FE3")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000653")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001FE5")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001FE6")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001FE7")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001FE8")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000654")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001FEA")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001FEB")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001FEC")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000655")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4001FEE")]
		UNKNOWN,
		[Token(Token = "0x4001FEF")]
		PAID,
		[Token(Token = "0x4001FF0")]
		REDEEM,
		[Token(Token = "0x4001FF1")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000656")]
	internal enum ELocale
	{
		[Token(Token = "0x4001FF3")]
		k_ELocaleUS,
		[Token(Token = "0x4001FF4")]
		k_ELocaleDE,
		[Token(Token = "0x4001FF5")]
		k_ELocaleJP,
		[Token(Token = "0x4001FF6")]
		k_ELocaleKR,
		[Token(Token = "0x4001FF7")]
		k_ELocaleRU,
		[Token(Token = "0x4001FF8")]
		k_ELocaleCN,
		[Token(Token = "0x4001FF9")]
		k_ELocaleTW,
		[Token(Token = "0x4001FFA")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000657")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001FFC")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001FFD")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001FFE")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000658")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000659")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8EF0E8", Offset = "0x8EF0E8")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x200065A")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x200065B")]
	internal class Api
	{
		[Token(Token = "0x200065C")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x600295A")]
			[Address(RVA = "0x17641BC", Offset = "0x17641BC", VA = "0x17641BC")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x600295B")]
			[Address(RVA = "0x1764254", Offset = "0x1764254", VA = "0x1764254")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x600295C")]
			[Address(RVA = "0x176436C", Offset = "0x176436C", VA = "0x176436C")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x1AA1104", Offset = "0x1AA1104", VA = "0x1AA1104")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x1AA142C", Offset = "0x1AA142C", VA = "0x1AA142C")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x1AA1600", Offset = "0x1AA1600", VA = "0x1AA1600")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x1AA0D94", Offset = "0x1AA0D94", VA = "0x1AA0D94")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1AA1948", Offset = "0x1AA1948", VA = "0x1AA1948")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200065D")]
	internal class User
	{
		[Token(Token = "0x600295D")]
		[Address(RVA = "0x15E1FB8", Offset = "0x15E1FB8", VA = "0x15E1FB8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x15E2140", Offset = "0x15E2140", VA = "0x15E2140")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x15E2264", Offset = "0x15E2264", VA = "0x15E2264")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x15E2388", Offset = "0x15E2388", VA = "0x15E2388")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x15E2490", Offset = "0x15E2490", VA = "0x15E2490")]
		public User()
		{
		}
	}
	[Token(Token = "0x200065E")]
	internal class UserStats
	{
		[Token(Token = "0x6002962")]
		[Address(RVA = "0x15E3BD8", Offset = "0x15E3BD8", VA = "0x15E3BD8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x15E3EE0", Offset = "0x15E3EE0", VA = "0x15E3EE0")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x15E4798", Offset = "0x15E4798", VA = "0x15E4798")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x15E4320", Offset = "0x15E4320", VA = "0x15E4320")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x15E4488", Offset = "0x15E4488", VA = "0x15E4488")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x15E4048", Offset = "0x15E4048", VA = "0x15E4048")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x15E41B0", Offset = "0x15E41B0", VA = "0x15E41B0")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x15E4900", Offset = "0x15E4900", VA = "0x15E4900")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x15E49FC", Offset = "0x15E49FC", VA = "0x15E49FC")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x15E4F10", Offset = "0x15E4F10", VA = "0x15E4F10")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x15E500C", Offset = "0x15E500C", VA = "0x15E500C")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x15E4BF4", Offset = "0x15E4BF4", VA = "0x15E4BF4")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x15E4D5C", Offset = "0x15E4D5C", VA = "0x15E4D5C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x15E4AF8", Offset = "0x15E4AF8", VA = "0x15E4AF8")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x15E52E8", Offset = "0x15E52E8", VA = "0x15E52E8")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x15E57A8", Offset = "0x15E57A8", VA = "0x15E57A8")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x15E59BC", Offset = "0x15E59BC", VA = "0x15E59BC")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x15E5C80", Offset = "0x15E5C80", VA = "0x15E5C80")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x15E5D98", Offset = "0x15E5D98", VA = "0x15E5D98")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x15E5EB0", Offset = "0x15E5EB0", VA = "0x15E5EB0")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x15E5FCC", Offset = "0x15E5FCC", VA = "0x15E5FCC")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200065F")]
	internal class Deeplink
	{
		[Token(Token = "0x2000660")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x600297D")]
			[Address(RVA = "0x15EDAB8", Offset = "0x15EDAB8", VA = "0x15EDAB8")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x600297E")]
			[Address(RVA = "0x15EDB50", Offset = "0x15EDB50", VA = "0x15EDB50")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x600297F")]
			[Address(RVA = "0x15EDBE8", Offset = "0x15EDBE8", VA = "0x15EDBE8")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x1677910", Offset = "0x1677910", VA = "0x1677910")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x1677AB8", Offset = "0x1677AB8", VA = "0x1677AB8")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1677D70", Offset = "0x1677D70", VA = "0x1677D70")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1677F94", Offset = "0x1677F94", VA = "0x1677F94")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1678160", Offset = "0x1678160", VA = "0x1678160")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1678268", Offset = "0x1678268", VA = "0x1678268")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000661")]
	internal class IAPurchase
	{
		[Token(Token = "0x6002980")]
		[Address(RVA = "0x16C6D60", Offset = "0x16C6D60", VA = "0x16C6D60")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x16C6FF0", Offset = "0x16C6FF0", VA = "0x16C6FF0")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x16C7288", Offset = "0x16C7288", VA = "0x16C7288")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x16C7550", Offset = "0x16C7550", VA = "0x16C7550")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x16C77E0", Offset = "0x16C77E0", VA = "0x16C77E0")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x16C7A60", Offset = "0x16C7A60", VA = "0x16C7A60")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x16C7CA0", Offset = "0x16C7CA0", VA = "0x16C7CA0")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x16C7F38", Offset = "0x16C7F38", VA = "0x16C7F38")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x16C8388", Offset = "0x16C8388", VA = "0x16C8388")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x16C8618", Offset = "0x16C8618", VA = "0x16C8618")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x16C88A8", Offset = "0x16C88A8", VA = "0x16C88A8")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x16C8B28", Offset = "0x16C8B28", VA = "0x16C8B28")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x16C8D78", Offset = "0x16C8D78", VA = "0x16C8D78")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x16C8F10", Offset = "0x16C8F10", VA = "0x16C8F10")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000662")]
	internal class Subscription
	{
		[Token(Token = "0x600298E")]
		[Address(RVA = "0x187E6B8", Offset = "0x187E6B8", VA = "0x187E6B8")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x187E9A4", Offset = "0x187E9A4", VA = "0x187E9A4")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x187EAB8", Offset = "0x187EAB8", VA = "0x187EAB8")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x187EBCC", Offset = "0x187EBCC", VA = "0x187EBCC")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x187EDBC", Offset = "0x187EDBC", VA = "0x187EDBC")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000663")]
	internal class Token
	{
		[Token(Token = "0x6002993")]
		[Address(RVA = "0x178B83C", Offset = "0x178B83C", VA = "0x178B83C")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x178BB38", Offset = "0x178BB38", VA = "0x178BB38")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x178BC98", Offset = "0x178BC98", VA = "0x178BC98")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000664")]
	internal class Android
	{
		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x1700055C")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1A9BB3C", Offset = "0x1A9BB3C", VA = "0x1A9BB3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055D")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x1A9BBEC", Offset = "0x1A9BBEC", VA = "0x1A9BBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x1A9BC54", Offset = "0x1A9BC54", VA = "0x1A9BC54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1A9B1F0", Offset = "0x1A9B1F0", VA = "0x1A9B1F0")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x1A9B344", Offset = "0x1A9B344", VA = "0x1A9B344")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x1A9B498", Offset = "0x1A9B498", VA = "0x1A9B498")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x1A9B5EC", Offset = "0x1A9B5EC", VA = "0x1A9B5EC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x1A9B740", Offset = "0x1A9B740", VA = "0x1A9B740")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x1A9B894", Offset = "0x1A9B894", VA = "0x1A9B894")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1A9B9E8", Offset = "0x1A9B9E8", VA = "0x1A9B9E8")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1A9BC58", Offset = "0x1A9BC58", VA = "0x1A9BC58")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000665")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1A9BC60", Offset = "0x1A9BC60", VA = "0x1A9BC60")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1A9BCF8", Offset = "0x1A9BCF8", VA = "0x1A9BCF8")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1A9BD90", Offset = "0x1A9BD90", VA = "0x1A9BD90")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x1A9BE28", Offset = "0x1A9BE28", VA = "0x1A9BE28")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000666")]
	internal class Session
	{
		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x15B9C20", Offset = "0x15B9C20", VA = "0x15B9C20")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000667")]
	public class Logger
	{
		[Token(Token = "0x4002011")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x1B248C4", Offset = "0x1B248C4", VA = "0x1B248C4")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x1B24D58", Offset = "0x1B24D58", VA = "0x1B24D58")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x1B24990", Offset = "0x1B24990", VA = "0x1B24990")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x1B24DFC", Offset = "0x1B24DFC", VA = "0x1B24DFC")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x1B24F64", Offset = "0x1B24F64", VA = "0x1B24F64")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000668")]
	public enum JsonType
	{
		[Token(Token = "0x4002016")]
		None,
		[Token(Token = "0x4002017")]
		Object,
		[Token(Token = "0x4002018")]
		Array,
		[Token(Token = "0x4002019")]
		String,
		[Token(Token = "0x400201A")]
		Int,
		[Token(Token = "0x400201B")]
		Long,
		[Token(Token = "0x400201C")]
		Double,
		[Token(Token = "0x400201D")]
		Boolean
	}
	[Token(Token = "0x2000669")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x1700055F")]
		bool IsArray
		{
			[Token(Token = "0x60029AC")]
			get;
		}

		[Token(Token = "0x17000560")]
		bool IsBoolean
		{
			[Token(Token = "0x60029AD")]
			get;
		}

		[Token(Token = "0x17000561")]
		bool IsDouble
		{
			[Token(Token = "0x60029AE")]
			get;
		}

		[Token(Token = "0x17000562")]
		bool IsInt
		{
			[Token(Token = "0x60029AF")]
			get;
		}

		[Token(Token = "0x17000563")]
		bool IsLong
		{
			[Token(Token = "0x60029B0")]
			get;
		}

		[Token(Token = "0x17000564")]
		bool IsObject
		{
			[Token(Token = "0x60029B1")]
			get;
		}

		[Token(Token = "0x17000565")]
		bool IsString
		{
			[Token(Token = "0x60029B2")]
			get;
		}

		[Token(Token = "0x60029B3")]
		bool GetBoolean();

		[Token(Token = "0x60029B4")]
		double GetDouble();

		[Token(Token = "0x60029B5")]
		int GetInt();

		[Token(Token = "0x60029B6")]
		JsonType GetJsonType();

		[Token(Token = "0x60029B7")]
		long GetLong();

		[Token(Token = "0x60029B8")]
		string GetString();

		[Token(Token = "0x60029B9")]
		void SetBoolean(bool val);

		[Token(Token = "0x60029BA")]
		void SetDouble(double val);

		[Token(Token = "0x60029BB")]
		void SetInt(int val);

		[Token(Token = "0x60029BC")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60029BD")]
		void SetLong(long val);

		[Token(Token = "0x60029BE")]
		void SetString(string val);

		[Token(Token = "0x60029BF")]
		string ToJson();

		[Token(Token = "0x60029C0")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x200066A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8EF0FC", Offset = "0x8EF0FC")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000566")]
		public int Count
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x1805AC4", Offset = "0x1805AC4", VA = "0x1805AC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000567")]
		public bool IsArray
		{
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x1805C50", Offset = "0x1805C50", VA = "0x1805C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000568")]
		public bool IsBoolean
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x1805C60", Offset = "0x1805C60", VA = "0x1805C60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000569")]
		public bool IsDouble
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1805C70", Offset = "0x1805C70", VA = "0x1805C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056A")]
		public bool IsInt
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1805C80", Offset = "0x1805C80", VA = "0x1805C80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056B")]
		public bool IsLong
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1805C90", Offset = "0x1805C90", VA = "0x1805C90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056C")]
		public bool IsObject
		{
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x1805CA0", Offset = "0x1805CA0", VA = "0x1805CA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056D")]
		public bool IsString
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1805CB0", Offset = "0x1805CB0", VA = "0x1805CB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056E")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x1805CC0", Offset = "0x1805CC0", VA = "0x1805CC0", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700056F")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x1805CC4", Offset = "0x1805CC4", VA = "0x1805CC4", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000570")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x1805D7C", Offset = "0x1805D7C", VA = "0x1805D7C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000571")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x1805E34", Offset = "0x1805E34", VA = "0x1805E34", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000572")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x1806054", Offset = "0x1806054", VA = "0x1806054", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000573")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x180610C", Offset = "0x180610C", VA = "0x180610C", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x18064D4", Offset = "0x18064D4", VA = "0x18064D4", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000575")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x180689C", Offset = "0x180689C", VA = "0x180689C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000576")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x18068AC", Offset = "0x18068AC", VA = "0x18068AC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000577")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x18068BC", Offset = "0x18068BC", VA = "0x18068BC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000578")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x18068CC", Offset = "0x18068CC", VA = "0x18068CC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000579")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x18068DC", Offset = "0x18068DC", VA = "0x18068DC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057A")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x18068EC", Offset = "0x18068EC", VA = "0x18068EC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057B")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x18068FC", Offset = "0x18068FC", VA = "0x18068FC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057C")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x180690C", Offset = "0x180690C", VA = "0x180690C", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057D")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x1806AE0", Offset = "0x1806AE0", VA = "0x1806AE0", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057E")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x1806B98", Offset = "0x1806B98", VA = "0x1806B98", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x1806C5C", Offset = "0x1806C5C", VA = "0x1806C5C", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x1700057F")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x18071A4", Offset = "0x18071A4", VA = "0x18071A4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x180727C", Offset = "0x180727C", VA = "0x180727C", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000580")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x18074A4", Offset = "0x18074A4", VA = "0x18074A4", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x1807568", Offset = "0x1807568", VA = "0x1807568", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public JsonData Item
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x1807878", Offset = "0x1807878", VA = "0x1807878")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x1806DD0", Offset = "0x1806DD0", VA = "0x1806DD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public JsonData Item
		{
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x180793C", Offset = "0x180793C", VA = "0x180793C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x18075AC", Offset = "0x18075AC", VA = "0x18075AC")]
			set
			{
			}
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x1807AAC", Offset = "0x1807AAC", VA = "0x1807AAC")]
		public JsonData()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1807AB4", Offset = "0x1807AB4", VA = "0x1807AB4")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x1807AEC", Offset = "0x1807AEC", VA = "0x1807AEC")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x1807B28", Offset = "0x1807B28", VA = "0x1807B28")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x1807B5C", Offset = "0x1807B5C", VA = "0x1807B5C")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x1807B90", Offset = "0x1807B90", VA = "0x1807B90")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x1807DC4", Offset = "0x1807DC4", VA = "0x1807DC4")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x1807E00", Offset = "0x1807E00", VA = "0x1807E00")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x1807E6C", Offset = "0x1807E6C", VA = "0x1807E6C")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x1807EDC", Offset = "0x1807EDC", VA = "0x1807EDC")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x1807F44", Offset = "0x1807F44", VA = "0x1807F44")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x1807FAC", Offset = "0x1807FAC", VA = "0x1807FAC")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x1808020", Offset = "0x1808020", VA = "0x1808020")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x1808098", Offset = "0x1808098", VA = "0x1808098")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x1808110", Offset = "0x1808110", VA = "0x1808110")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x1808188", Offset = "0x1808188", VA = "0x1808188")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x1808200", Offset = "0x1808200", VA = "0x1808200")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x1808278", Offset = "0x1808278", VA = "0x1808278", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1808344", Offset = "0x1808344", VA = "0x1808344", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x1808524", Offset = "0x1808524", VA = "0x1808524", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x180866C", Offset = "0x180866C", VA = "0x180866C", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x1808734", Offset = "0x1808734", VA = "0x1808734", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x18087D8", Offset = "0x18087D8", VA = "0x18087D8", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1808A90", Offset = "0x1808A90", VA = "0x1808A90", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x1808B44", Offset = "0x1808B44", VA = "0x1808B44", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x1808BAC", Offset = "0x1808BAC", VA = "0x1808BAC", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x1808C14", Offset = "0x1808C14", VA = "0x1808C14", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x1808C7C", Offset = "0x1808C7C", VA = "0x1808C7C", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1808CE4", Offset = "0x1808CE4", VA = "0x1808CE4", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1808D4C", Offset = "0x1808D4C", VA = "0x1808D4C", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x1808D68", Offset = "0x1808D68", VA = "0x1808D68", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x1808D80", Offset = "0x1808D80", VA = "0x1808D80", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x1808D98", Offset = "0x1808D98", VA = "0x1808D98", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x1808DB0", Offset = "0x1808DB0", VA = "0x1808DB0", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x1808DE8", Offset = "0x1808DE8", VA = "0x1808DE8", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x1808EC0", Offset = "0x1808EC0", VA = "0x1808EC0", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x1808EF8", Offset = "0x1808EF8", VA = "0x1808EF8", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x1808FE0", Offset = "0x1808FE0", VA = "0x1808FE0", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x18090A8", Offset = "0x18090A8", VA = "0x18090A8", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x1809170", Offset = "0x1809170", VA = "0x1809170", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x1809238", Offset = "0x1809238", VA = "0x1809238", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x1809318", Offset = "0x1809318", VA = "0x1809318", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x18093F0", Offset = "0x18093F0", VA = "0x18093F0", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x18094C8", Offset = "0x18094C8", VA = "0x18094C8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x18095B8", Offset = "0x18095B8", VA = "0x18095B8", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x1809718", Offset = "0x1809718", VA = "0x1809718", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x1805B7C", Offset = "0x1805B7C", VA = "0x1805B7C")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x1805EEC", Offset = "0x1805EEC", VA = "0x1805EEC")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x18069C4", Offset = "0x18069C4", VA = "0x18069C4")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x1806D38", Offset = "0x1806D38", VA = "0x1806D38")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x18098E8", Offset = "0x18098E8", VA = "0x18098E8")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x1808EFC", Offset = "0x1808EFC", VA = "0x1808EFC")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x180ADA0", Offset = "0x180ADA0", VA = "0x180ADA0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x180AEC4", Offset = "0x180AEC4", VA = "0x180AEC4", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x180AFB0", Offset = "0x180AFB0", VA = "0x180AFB0", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x180AFB8", Offset = "0x180AFB8", VA = "0x180AFB8", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x1808DEC", Offset = "0x1808DEC", VA = "0x1808DEC")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x1808EC4", Offset = "0x1808EC4", VA = "0x1808EC4")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x180B1C0", Offset = "0x180B1C0", VA = "0x180B1C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200066B")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000583")]
		public object Current
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x15A0238", Offset = "0x15A0238", VA = "0x15A0238", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x15A02A0", Offset = "0x15A02A0", VA = "0x15A02A0", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000585")]
		public object Key
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x15A0394", Offset = "0x15A0394", VA = "0x15A0394", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000586")]
		public object Value
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x15A044C", Offset = "0x15A044C", VA = "0x15A044C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x15A050C", Offset = "0x15A050C", VA = "0x15A050C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x15A0540", Offset = "0x15A0540", VA = "0x15A0540", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x15A05EC", Offset = "0x15A05EC", VA = "0x15A05EC", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x180B2B4", Offset = "0x180B2B4", VA = "0x180B2B4")]
		public JsonException()
		{
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x180B2BC", Offset = "0x180B2BC", VA = "0x180B2BC")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x180B354", Offset = "0x180B354", VA = "0x180B354")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x180B3FC", Offset = "0x180B3FC", VA = "0x180B3FC")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x180B494", Offset = "0x180B494", VA = "0x180B494")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x180B53C", Offset = "0x180B53C", VA = "0x180B53C")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x180B544", Offset = "0x180B544", VA = "0x180B544")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x200066D")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x200066E")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000587")]
		public Type ElementType
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x1AA6B58", Offset = "0x1AA6B58", VA = "0x1AA6B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x1AA6C20", Offset = "0x1AA6C20", VA = "0x1AA6C20")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public bool IsArray
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x1AA6C28", Offset = "0x1AA6C28", VA = "0x1AA6C28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x1AA6C30", Offset = "0x1AA6C30", VA = "0x1AA6C30")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public bool IsList
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x1AA6C3C", Offset = "0x1AA6C3C", VA = "0x1AA6C3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x1AA6C44", Offset = "0x1AA6C44", VA = "0x1AA6C44")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200066F")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700058A")]
		public Type ElementType
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x159BBD8", Offset = "0x159BBD8", VA = "0x159BBD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x159BCA0", Offset = "0x159BCA0", VA = "0x159BCA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700058B")]
		public bool IsDictionary
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x159BCA8", Offset = "0x159BCA8", VA = "0x159BCA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0x159BCB0", Offset = "0x159BCB0", VA = "0x159BCB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700058C")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x159BCBC", Offset = "0x159BCBC", VA = "0x159BCBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x159BCC4", Offset = "0x159BCC4", VA = "0x159BCC4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000670")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000671")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000672")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x2000673")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x2000674")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000675")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF134", Offset = "0x8EF134")]
		private sealed class <>c
		{
			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x16B06A8", Offset = "0x16B06A8", VA = "0x16B06A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x16B06B0", Offset = "0x16B06B0", VA = "0x16B06B0")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x16B0774", Offset = "0x16B0774", VA = "0x16B0774")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x16B0838", Offset = "0x16B0838", VA = "0x16B0838")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x16B093C", Offset = "0x16B093C", VA = "0x16B093C")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x16B09C8", Offset = "0x16B09C8", VA = "0x16B09C8")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x16B0A8C", Offset = "0x16B0A8C", VA = "0x16B0A8C")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x16B0B50", Offset = "0x16B0B50", VA = "0x16B0B50")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x16B0C14", Offset = "0x16B0C14", VA = "0x16B0C14")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x16B0CD8", Offset = "0x16B0CD8", VA = "0x16B0CD8")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x16B0D64", Offset = "0x16B0D64", VA = "0x16B0D64")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x16B0DF4", Offset = "0x16B0DF4", VA = "0x16B0DF4")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x16B0ECC", Offset = "0x16B0ECC", VA = "0x16B0ECC")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x16B0FA4", Offset = "0x16B0FA4", VA = "0x16B0FA4")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x16B107C", Offset = "0x16B107C", VA = "0x16B107C")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x16B1154", Offset = "0x16B1154", VA = "0x16B1154")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x16B122C", Offset = "0x16B122C", VA = "0x16B122C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x16B1304", Offset = "0x16B1304", VA = "0x16B1304")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x16B13D8", Offset = "0x16B13D8", VA = "0x16B13D8")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x16B14B0", Offset = "0x16B14B0", VA = "0x16B14B0")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x16B1584", Offset = "0x16B1584", VA = "0x16B1584")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x16B165C", Offset = "0x16B165C", VA = "0x16B165C")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x16B1734", Offset = "0x16B1734", VA = "0x16B1734")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x16B1804", Offset = "0x16B1804", VA = "0x16B1804")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x16B1914", Offset = "0x16B1914", VA = "0x16B1914")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x16B196C", Offset = "0x16B196C", VA = "0x16B196C")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x16B19C4", Offset = "0x16B19C4", VA = "0x16B19C4")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF144", Offset = "0x8EF144")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6002A82")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002A83")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF154", Offset = "0x8EF154")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002A84")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002A85")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x180B54C", Offset = "0x180B54C", VA = "0x180B54C")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x180D808", Offset = "0x180D808", VA = "0x180D808")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x180DCE8", Offset = "0x180DCE8", VA = "0x180DCE8")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x180E4C8", Offset = "0x180E4C8", VA = "0x180E4C8")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x180EA80", Offset = "0x180EA80", VA = "0x180EA80")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x180F410", Offset = "0x180F410", VA = "0x180F410")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x18108E0", Offset = "0x18108E0", VA = "0x18108E0")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x180B9F8", Offset = "0x180B9F8", VA = "0x180B9F8")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x180C8F8", Offset = "0x180C8F8", VA = "0x180C8F8")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x1810FD0", Offset = "0x1810FD0", VA = "0x1810FD0")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1811234", Offset = "0x1811234", VA = "0x1811234")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x18128B0", Offset = "0x18128B0", VA = "0x18128B0")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x1812B3C", Offset = "0x1812B3C", VA = "0x1812B3C")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x1812BB4", Offset = "0x1812BB4", VA = "0x1812BB4")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x1812D90", Offset = "0x1812D90", VA = "0x1812D90")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x1812F30", Offset = "0x1812F30", VA = "0x1812F30")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6002A5C")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A5D")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A5E")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x1812D20", Offset = "0x1812D20", VA = "0x1812D20")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x181309C", Offset = "0x181309C", VA = "0x181309C")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6002A61")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6002A62")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x18131A8", Offset = "0x18131A8", VA = "0x18131A8")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x1813288", Offset = "0x1813288", VA = "0x1813288")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x1813368", Offset = "0x1813368", VA = "0x1813368")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public enum JsonToken
	{
		[Token(Token = "0x4002060")]
		None,
		[Token(Token = "0x4002061")]
		ObjectStart,
		[Token(Token = "0x4002062")]
		PropertyName,
		[Token(Token = "0x4002063")]
		ObjectEnd,
		[Token(Token = "0x4002064")]
		ArrayStart,
		[Token(Token = "0x4002065")]
		ArrayEnd,
		[Token(Token = "0x4002066")]
		Int,
		[Token(Token = "0x4002067")]
		Long,
		[Token(Token = "0x4002068")]
		Double,
		[Token(Token = "0x4002069")]
		String,
		[Token(Token = "0x400206A")]
		Boolean,
		[Token(Token = "0x400206B")]
		Null
	}
	[Token(Token = "0x200067A")]
	public class JsonReader
	{
		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x1700058D")]
		public bool AllowComments
		{
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x1813370", Offset = "0x1813370", VA = "0x1813370")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x181338C", Offset = "0x181338C", VA = "0x181338C")]
			set
			{
			}
		}

		[Token(Token = "0x1700058E")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x18133AC", Offset = "0x18133AC", VA = "0x18133AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x18133C8", Offset = "0x18133C8", VA = "0x18133C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700058F")]
		public bool EndOfInput
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x18133E8", Offset = "0x18133E8", VA = "0x18133E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000590")]
		public bool EndOfJson
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x18133F0", Offset = "0x18133F0", VA = "0x18133F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000591")]
		public JsonToken Token
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x18133F8", Offset = "0x18133F8", VA = "0x18133F8")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000592")]
		public object Value
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1813400", Offset = "0x1813400", VA = "0x1813400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1813408", Offset = "0x1813408", VA = "0x1813408")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1813134", Offset = "0x1813134", VA = "0x1813134")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1812F28", Offset = "0x1812F28", VA = "0x1812F28")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1813AF0", Offset = "0x1813AF0", VA = "0x1813AF0")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x181340C", Offset = "0x181340C", VA = "0x181340C")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x1813DBC", Offset = "0x1813DBC", VA = "0x1813DBC")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x1813C8C", Offset = "0x1813C8C", VA = "0x1813C8C")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x1813F38", Offset = "0x1813F38", VA = "0x1813F38")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x18140D8", Offset = "0x18140D8", VA = "0x18140D8")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x181429C", Offset = "0x181429C", VA = "0x181429C")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x1814300", Offset = "0x1814300", VA = "0x1814300")]
		public void Close()
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x181044C", Offset = "0x181044C", VA = "0x181044C")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200067B")]
	internal enum Condition
	{
		[Token(Token = "0x400207B")]
		InArray,
		[Token(Token = "0x400207C")]
		InObject,
		[Token(Token = "0x400207D")]
		NotAProperty,
		[Token(Token = "0x400207E")]
		Property,
		[Token(Token = "0x400207F")]
		Value
	}
	[Token(Token = "0x200067C")]
	internal class WriterContext
	{
		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x19EC6BC", Offset = "0x19EC6BC", VA = "0x19EC6BC")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class JsonWriter
	{
		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000593")]
		public int IndentValue
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x1814364", Offset = "0x1814364", VA = "0x1814364")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x181436C", Offset = "0x181436C", VA = "0x181436C")]
			set
			{
			}
		}

		[Token(Token = "0x17000594")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x1814380", Offset = "0x1814380", VA = "0x1814380")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x1814388", Offset = "0x1814388", VA = "0x1814388")]
			set
			{
			}
		}

		[Token(Token = "0x17000595")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x1814394", Offset = "0x1814394", VA = "0x1814394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000596")]
		public bool Validate
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x181439C", Offset = "0x181439C", VA = "0x181439C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x18143A4", Offset = "0x18143A4", VA = "0x18143A4")]
			set
			{
			}
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x18143B0", Offset = "0x18143B0", VA = "0x18143B0")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x180B938", Offset = "0x180B938", VA = "0x180B938")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x181453C", Offset = "0x181453C", VA = "0x181453C")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x180B138", Offset = "0x180B138", VA = "0x180B138")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x18145AC", Offset = "0x18145AC", VA = "0x18145AC")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x181440C", Offset = "0x181440C", VA = "0x181440C")]
		private void Init()
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1814770", Offset = "0x1814770", VA = "0x1814770")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x18147F8", Offset = "0x18147F8", VA = "0x18147F8")]
		private void Indent()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1814810", Offset = "0x1814810", VA = "0x1814810")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x18148A4", Offset = "0x18148A4", VA = "0x18148A4")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x18148AC", Offset = "0x18148AC", VA = "0x18148AC")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x181493C", Offset = "0x181493C", VA = "0x181493C")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x1814C38", Offset = "0x1814C38", VA = "0x1814C38")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x1814C50", Offset = "0x1814C50", VA = "0x1814C50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x1812A40", Offset = "0x1812A40", VA = "0x1812A40")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x180A4BC", Offset = "0x180A4BC", VA = "0x180A4BC")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x1814CBC", Offset = "0x1814CBC", VA = "0x1814CBC")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x180A560", Offset = "0x180A560", VA = "0x180A560")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x180A6B0", Offset = "0x180A6B0", VA = "0x180A6B0")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x180A798", Offset = "0x180A798", VA = "0x180A798")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x180A424", Offset = "0x180A424", VA = "0x180A424")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x18127C8", Offset = "0x18127C8", VA = "0x18127C8")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x180A978", Offset = "0x180A978", VA = "0x180A978")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x180A880", Offset = "0x180A880", VA = "0x180A880")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x180AC9C", Offset = "0x180AC9C", VA = "0x180AC9C")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x180AA7C", Offset = "0x180AA7C", VA = "0x180AA7C")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x180AB74", Offset = "0x180AB74", VA = "0x180AB74")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x200067E")]
	internal class FsmContext
	{
		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x18AFD6C", Offset = "0x18AFD6C", VA = "0x18AFD6C")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x200067F")]
	internal class Lexer
	{
		[Token(Token = "0x2000680")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x17000597")]
		public bool AllowComments
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x1B1CB48", Offset = "0x1B1CB48", VA = "0x1B1CB48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x1B1CB50", Offset = "0x1B1CB50", VA = "0x1B1CB50")]
			set
			{
			}
		}

		[Token(Token = "0x17000598")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x1B1CB5C", Offset = "0x1B1CB5C", VA = "0x1B1CB5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x1B1CB64", Offset = "0x1B1CB64", VA = "0x1B1CB64")]
			set
			{
			}
		}

		[Token(Token = "0x17000599")]
		public bool EndOfInput
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x1B1CB70", Offset = "0x1B1CB70", VA = "0x1B1CB70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059A")]
		public int Token
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x1B1CB78", Offset = "0x1B1CB78", VA = "0x1B1CB78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700059B")]
		public string StringValue
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x1B1CB80", Offset = "0x1B1CB80", VA = "0x1B1CB80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0x1B1CB88", Offset = "0x1B1CB88", VA = "0x1B1CB88")]
		static Lexer()
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0x1B1D7A0", Offset = "0x1B1D7A0", VA = "0x1B1D7A0")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x1B1D89C", Offset = "0x1B1D89C", VA = "0x1B1D89C")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x1B1CB8C", Offset = "0x1B1CB8C", VA = "0x1B1CB8C")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x1B1D918", Offset = "0x1B1D918", VA = "0x1B1D918")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0x1B1DA14", Offset = "0x1B1DA14", VA = "0x1B1DA14")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0x1B1DC24", Offset = "0x1B1DC24", VA = "0x1B1DC24")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x1B1DCCC", Offset = "0x1B1DCCC", VA = "0x1B1DCCC")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x1B1DE0C", Offset = "0x1B1DE0C", VA = "0x1B1DE0C")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1B1DF0C", Offset = "0x1B1DF0C", VA = "0x1B1DF0C")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x1B1DF90", Offset = "0x1B1DF90", VA = "0x1B1DF90")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1B1E08C", Offset = "0x1B1E08C", VA = "0x1B1E08C")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x1B1E124", Offset = "0x1B1E124", VA = "0x1B1E124")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x1B1E1E4", Offset = "0x1B1E1E4", VA = "0x1B1E1E4")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x1B1E254", Offset = "0x1B1E254", VA = "0x1B1E254")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x1B1E2C4", Offset = "0x1B1E2C4", VA = "0x1B1E2C4")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x1B1E334", Offset = "0x1B1E334", VA = "0x1B1E334")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x1B1E3A4", Offset = "0x1B1E3A4", VA = "0x1B1E3A4")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x1B1E414", Offset = "0x1B1E414", VA = "0x1B1E414")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x1B1E484", Offset = "0x1B1E484", VA = "0x1B1E484")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x1B1E4F4", Offset = "0x1B1E4F4", VA = "0x1B1E4F4")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x1B1E564", Offset = "0x1B1E564", VA = "0x1B1E564")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x1B1E5D4", Offset = "0x1B1E5D4", VA = "0x1B1E5D4")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x1B1E644", Offset = "0x1B1E644", VA = "0x1B1E644")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x1B1E6F0", Offset = "0x1B1E6F0", VA = "0x1B1E6F0")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x1B1E760", Offset = "0x1B1E760", VA = "0x1B1E760")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x1B1E8A8", Offset = "0x1B1E8A8", VA = "0x1B1E8A8")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1B1EA34", Offset = "0x1B1EA34", VA = "0x1B1EA34")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x1B1EAE0", Offset = "0x1B1EAE0", VA = "0x1B1EAE0")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1B1EB58", Offset = "0x1B1EB58", VA = "0x1B1EB58")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x1B1EBD8", Offset = "0x1B1EBD8", VA = "0x1B1EBD8")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x1B1EC44", Offset = "0x1B1EC44", VA = "0x1B1EC44")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x1B1ECB0", Offset = "0x1B1ECB0", VA = "0x1B1ECB0")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x1B1DBEC", Offset = "0x1B1DBEC", VA = "0x1B1DBEC")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x1B1ED2C", Offset = "0x1B1ED2C", VA = "0x1B1ED2C")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x1B1ED60", Offset = "0x1B1ED60", VA = "0x1B1ED60")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x1B1DE00", Offset = "0x1B1DE00", VA = "0x1B1DE00")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000681")]
	internal enum ParserToken
	{
		[Token(Token = "0x40020A3")]
		None = 65536,
		[Token(Token = "0x40020A4")]
		Number,
		[Token(Token = "0x40020A5")]
		True,
		[Token(Token = "0x40020A6")]
		False,
		[Token(Token = "0x40020A7")]
		Null,
		[Token(Token = "0x40020A8")]
		CharSeq,
		[Token(Token = "0x40020A9")]
		Char,
		[Token(Token = "0x40020AA")]
		Text,
		[Token(Token = "0x40020AB")]
		Object,
		[Token(Token = "0x40020AC")]
		ObjectPrime,
		[Token(Token = "0x40020AD")]
		Pair,
		[Token(Token = "0x40020AE")]
		PairRest,
		[Token(Token = "0x40020AF")]
		Array,
		[Token(Token = "0x40020B0")]
		ArrayPrime,
		[Token(Token = "0x40020B1")]
		Value,
		[Token(Token = "0x40020B2")]
		ValueRest,
		[Token(Token = "0x40020B3")]
		String,
		[Token(Token = "0x40020B4")]
		End,
		[Token(Token = "0x40020B5")]
		Epsilon
	}
}
namespace B83.Win32
{
	[Token(Token = "0x2000682")]
	public enum HookType
	{
		[Token(Token = "0x40020B7")]
		WH_JOURNALRECORD,
		[Token(Token = "0x40020B8")]
		WH_JOURNALPLAYBACK,
		[Token(Token = "0x40020B9")]
		WH_KEYBOARD,
		[Token(Token = "0x40020BA")]
		WH_GETMESSAGE,
		[Token(Token = "0x40020BB")]
		WH_CALLWNDPROC,
		[Token(Token = "0x40020BC")]
		WH_CBT,
		[Token(Token = "0x40020BD")]
		WH_SYSMSGFILTER,
		[Token(Token = "0x40020BE")]
		WH_MOUSE,
		[Token(Token = "0x40020BF")]
		WH_HARDWARE,
		[Token(Token = "0x40020C0")]
		WH_DEBUG,
		[Token(Token = "0x40020C1")]
		WH_SHELL,
		[Token(Token = "0x40020C2")]
		WH_FOREGROUNDIDLE,
		[Token(Token = "0x40020C3")]
		WH_CALLWNDPROCRET,
		[Token(Token = "0x40020C4")]
		WH_KEYBOARD_LL,
		[Token(Token = "0x40020C5")]
		WH_MOUSE_LL
	}
	[Token(Token = "0x2000683")]
	public enum WM : uint
	{
		[Token(Token = "0x40020C7")]
		NULL = 0u,
		[Token(Token = "0x40020C8")]
		CREATE = 1u,
		[Token(Token = "0x40020C9")]
		DESTROY = 2u,
		[Token(Token = "0x40020CA")]
		MOVE = 3u,
		[Token(Token = "0x40020CB")]
		SIZE = 5u,
		[Token(Token = "0x40020CC")]
		ACTIVATE = 6u,
		[Token(Token = "0x40020CD")]
		SETFOCUS = 7u,
		[Token(Token = "0x40020CE")]
		KILLFOCUS = 8u,
		[Token(Token = "0x40020CF")]
		ENABLE = 10u,
		[Token(Token = "0x40020D0")]
		SETREDRAW = 11u,
		[Token(Token = "0x40020D1")]
		SETTEXT = 12u,
		[Token(Token = "0x40020D2")]
		GETTEXT = 13u,
		[Token(Token = "0x40020D3")]
		GETTEXTLENGTH = 14u,
		[Token(Token = "0x40020D4")]
		PAINT = 15u,
		[Token(Token = "0x40020D5")]
		CLOSE = 16u,
		[Token(Token = "0x40020D6")]
		QUERYENDSESSION = 17u,
		[Token(Token = "0x40020D7")]
		QUERYOPEN = 19u,
		[Token(Token = "0x40020D8")]
		ENDSESSION = 22u,
		[Token(Token = "0x40020D9")]
		QUIT = 18u,
		[Token(Token = "0x40020DA")]
		ERASEBKGND = 20u,
		[Token(Token = "0x40020DB")]
		SYSCOLORCHANGE = 21u,
		[Token(Token = "0x40020DC")]
		SHOWWINDOW = 24u,
		[Token(Token = "0x40020DD")]
		WININICHANGE = 26u,
		[Token(Token = "0x40020DE")]
		SETTINGCHANGE = 26u,
		[Token(Token = "0x40020DF")]
		DEVMODECHANGE = 27u,
		[Token(Token = "0x40020E0")]
		ACTIVATEAPP = 28u,
		[Token(Token = "0x40020E1")]
		FONTCHANGE = 29u,
		[Token(Token = "0x40020E2")]
		TIMECHANGE = 30u,
		[Token(Token = "0x40020E3")]
		CANCELMODE = 31u,
		[Token(Token = "0x40020E4")]
		SETCURSOR = 32u,
		[Token(Token = "0x40020E5")]
		MOUSEACTIVATE = 33u,
		[Token(Token = "0x40020E6")]
		CHILDACTIVATE = 34u,
		[Token(Token = "0x40020E7")]
		QUEUESYNC = 35u,
		[Token(Token = "0x40020E8")]
		GETMINMAXINFO = 36u,
		[Token(Token = "0x40020E9")]
		PAINTICON = 38u,
		[Token(Token = "0x40020EA")]
		ICONERASEBKGND = 39u,
		[Token(Token = "0x40020EB")]
		NEXTDLGCTL = 40u,
		[Token(Token = "0x40020EC")]
		SPOOLERSTATUS = 42u,
		[Token(Token = "0x40020ED")]
		DRAWITEM = 43u,
		[Token(Token = "0x40020EE")]
		MEASUREITEM = 44u,
		[Token(Token = "0x40020EF")]
		DELETEITEM = 45u,
		[Token(Token = "0x40020F0")]
		VKEYTOITEM = 46u,
		[Token(Token = "0x40020F1")]
		CHARTOITEM = 47u,
		[Token(Token = "0x40020F2")]
		SETFONT = 48u,
		[Token(Token = "0x40020F3")]
		GETFONT = 49u,
		[Token(Token = "0x40020F4")]
		SETHOTKEY = 50u,
		[Token(Token = "0x40020F5")]
		GETHOTKEY = 51u,
		[Token(Token = "0x40020F6")]
		QUERYDRAGICON = 55u,
		[Token(Token = "0x40020F7")]
		COMPAREITEM = 57u,
		[Token(Token = "0x40020F8")]
		GETOBJECT = 61u,
		[Token(Token = "0x40020F9")]
		COMPACTING = 65u,
		[Token(Token = "0x40020FA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8FA794", Offset = "0x8FA794")]
		COMMNOTIFY = 68u,
		[Token(Token = "0x40020FB")]
		WINDOWPOSCHANGING = 70u,
		[Token(Token = "0x40020FC")]
		WINDOWPOSCHANGED = 71u,
		[Token(Token = "0x40020FD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8FA7A4", Offset = "0x8FA7A4")]
		POWER = 72u,
		[Token(Token = "0x40020FE")]
		COPYDATA = 74u,
		[Token(Token = "0x40020FF")]
		CANCELJOURNAL = 75u,
		[Token(Token = "0x4002100")]
		NOTIFY = 78u,
		[Token(Token = "0x4002101")]
		INPUTLANGCHANGEREQUEST = 80u,
		[Token(Token = "0x4002102")]
		INPUTLANGCHANGE = 81u,
		[Token(Token = "0x4002103")]
		TCARD = 82u,
		[Token(Token = "0x4002104")]
		HELP = 83u,
		[Token(Token = "0x4002105")]
		USERCHANGED = 84u,
		[Token(Token = "0x4002106")]
		NOTIFYFORMAT = 85u,
		[Token(Token = "0x4002107")]
		CONTEXTMENU = 123u,
		[Token(Token = "0x4002108")]
		STYLECHANGING = 124u,
		[Token(Token = "0x4002109")]
		STYLECHANGED = 125u,
		[Token(Token = "0x400210A")]
		DISPLAYCHANGE = 126u,
		[Token(Token = "0x400210B")]
		GETICON = 127u,
		[Token(Token = "0x400210C")]
		SETICON = 128u,
		[Token(Token = "0x400210D")]
		NCCREATE = 129u,
		[Token(Token = "0x400210E")]
		NCDESTROY = 130u,
		[Token(Token = "0x400210F")]
		NCCALCSIZE = 131u,
		[Token(Token = "0x4002110")]
		NCHITTEST = 132u,
		[Token(Token = "0x4002111")]
		NCPAINT = 133u,
		[Token(Token = "0x4002112")]
		NCACTIVATE = 134u,
		[Token(Token = "0x4002113")]
		GETDLGCODE = 135u,
		[Token(Token = "0x4002114")]
		SYNCPAINT = 136u,
		[Token(Token = "0x4002115")]
		NCMOUSEMOVE = 160u,
		[Token(Token = "0x4002116")]
		NCLBUTTONDOWN = 161u,
		[Token(Token = "0x4002117")]
		NCLBUTTONUP = 162u,
		[Token(Token = "0x4002118")]
		NCLBUTTONDBLCLK = 163u,
		[Token(Token = "0x4002119")]
		NCRBUTTONDOWN = 164u,
		[Token(Token = "0x400211A")]
		NCRBUTTONUP = 165u,
		[Token(Token = "0x400211B")]
		NCRBUTTONDBLCLK = 166u,
		[Token(Token = "0x400211C")]
		NCMBUTTONDOWN = 167u,
		[Token(Token = "0x400211D")]
		NCMBUTTONUP = 168u,
		[Token(Token = "0x400211E")]
		NCMBUTTONDBLCLK = 169u,
		[Token(Token = "0x400211F")]
		NCXBUTTONDOWN = 171u,
		[Token(Token = "0x4002120")]
		NCXBUTTONUP = 172u,
		[Token(Token = "0x4002121")]
		NCXBUTTONDBLCLK = 173u,
		[Token(Token = "0x4002122")]
		INPUT_DEVICE_CHANGE = 254u,
		[Token(Token = "0x4002123")]
		INPUT = 255u,
		[Token(Token = "0x4002124")]
		KEYFIRST = 256u,
		[Token(Token = "0x4002125")]
		KEYDOWN = 256u,
		[Token(Token = "0x4002126")]
		KEYUP = 257u,
		[Token(Token = "0x4002127")]
		CHAR = 258u,
		[Token(Token = "0x4002128")]
		DEADCHAR = 259u,
		[Token(Token = "0x4002129")]
		SYSKEYDOWN = 260u,
		[Token(Token = "0x400212A")]
		SYSKEYUP = 261u,
		[Token(Token = "0x400212B")]
		SYSCHAR = 262u,
		[Token(Token = "0x400212C")]
		SYSDEADCHAR = 263u,
		[Token(Token = "0x400212D")]
		UNICHAR = 265u,
		[Token(Token = "0x400212E")]
		KEYLAST = 264u,
		[Token(Token = "0x400212F")]
		IME_STARTCOMPOSITION = 269u,
		[Token(Token = "0x4002130")]
		IME_ENDCOMPOSITION = 270u,
		[Token(Token = "0x4002131")]
		IME_COMPOSITION = 271u,
		[Token(Token = "0x4002132")]
		IME_KEYLAST = 271u,
		[Token(Token = "0x4002133")]
		INITDIALOG = 272u,
		[Token(Token = "0x4002134")]
		COMMAND = 273u,
		[Token(Token = "0x4002135")]
		SYSCOMMAND = 274u,
		[Token(Token = "0x4002136")]
		TIMER = 275u,
		[Token(Token = "0x4002137")]
		HSCROLL = 276u,
		[Token(Token = "0x4002138")]
		VSCROLL = 277u,
		[Token(Token = "0x4002139")]
		INITMENU = 278u,
		[Token(Token = "0x400213A")]
		INITMENUPOPUP = 279u,
		[Token(Token = "0x400213B")]
		MENUSELECT = 287u,
		[Token(Token = "0x400213C")]
		MENUCHAR = 288u,
		[Token(Token = "0x400213D")]
		ENTERIDLE = 289u,
		[Token(Token = "0x400213E")]
		MENURBUTTONUP = 290u,
		[Token(Token = "0x400213F")]
		MENUDRAG = 291u,
		[Token(Token = "0x4002140")]
		MENUGETOBJECT = 292u,
		[Token(Token = "0x4002141")]
		UNINITMENUPOPUP = 293u,
		[Token(Token = "0x4002142")]
		MENUCOMMAND = 294u,
		[Token(Token = "0x4002143")]
		CHANGEUISTATE = 295u,
		[Token(Token = "0x4002144")]
		UPDATEUISTATE = 296u,
		[Token(Token = "0x4002145")]
		QUERYUISTATE = 297u,
		[Token(Token = "0x4002146")]
		CTLCOLORMSGBOX = 306u,
		[Token(Token = "0x4002147")]
		CTLCOLOREDIT = 307u,
		[Token(Token = "0x4002148")]
		CTLCOLORLISTBOX = 308u,
		[Token(Token = "0x4002149")]
		CTLCOLORBTN = 309u,
		[Token(Token = "0x400214A")]
		CTLCOLORDLG = 310u,
		[Token(Token = "0x400214B")]
		CTLCOLORSCROLLBAR = 311u,
		[Token(Token = "0x400214C")]
		CTLCOLORSTATIC = 312u,
		[Token(Token = "0x400214D")]
		MOUSEFIRST = 512u,
		[Token(Token = "0x400214E")]
		MOUSEMOVE = 512u,
		[Token(Token = "0x400214F")]
		LBUTTONDOWN = 513u,
		[Token(Token = "0x4002150")]
		LBUTTONUP = 514u,
		[Token(Token = "0x4002151")]
		LBUTTONDBLCLK = 515u,
		[Token(Token = "0x4002152")]
		RBUTTONDOWN = 516u,
		[Token(Token = "0x4002153")]
		RBUTTONUP = 517u,
		[Token(Token = "0x4002154")]
		RBUTTONDBLCLK = 518u,
		[Token(Token = "0x4002155")]
		MBUTTONDOWN = 519u,
		[Token(Token = "0x4002156")]
		MBUTTONUP = 520u,
		[Token(Token = "0x4002157")]
		MBUTTONDBLCLK = 521u,
		[Token(Token = "0x4002158")]
		MOUSEWHEEL = 522u,
		[Token(Token = "0x4002159")]
		XBUTTONDOWN = 523u,
		[Token(Token = "0x400215A")]
		XBUTTONUP = 524u,
		[Token(Token = "0x400215B")]
		XBUTTONDBLCLK = 525u,
		[Token(Token = "0x400215C")]
		MOUSEHWHEEL = 526u,
		[Token(Token = "0x400215D")]
		MOUSELAST = 526u,
		[Token(Token = "0x400215E")]
		PARENTNOTIFY = 528u,
		[Token(Token = "0x400215F")]
		ENTERMENULOOP = 529u,
		[Token(Token = "0x4002160")]
		EXITMENULOOP = 530u,
		[Token(Token = "0x4002161")]
		NEXTMENU = 531u,
		[Token(Token = "0x4002162")]
		SIZING = 532u,
		[Token(Token = "0x4002163")]
		CAPTURECHANGED = 533u,
		[Token(Token = "0x4002164")]
		MOVING = 534u,
		[Token(Token = "0x4002165")]
		POWERBROADCAST = 536u,
		[Token(Token = "0x4002166")]
		DEVICECHANGE = 537u,
		[Token(Token = "0x4002167")]
		MDICREATE = 544u,
		[Token(Token = "0x4002168")]
		MDIDESTROY = 545u,
		[Token(Token = "0x4002169")]
		MDIACTIVATE = 546u,
		[Token(Token = "0x400216A")]
		MDIRESTORE = 547u,
		[Token(Token = "0x400216B")]
		MDINEXT = 548u,
		[Token(Token = "0x400216C")]
		MDIMAXIMIZE = 549u,
		[Token(Token = "0x400216D")]
		MDITILE = 550u,
		[Token(Token = "0x400216E")]
		MDICASCADE = 551u,
		[Token(Token = "0x400216F")]
		MDIICONARRANGE = 552u,
		[Token(Token = "0x4002170")]
		MDIGETACTIVE = 553u,
		[Token(Token = "0x4002171")]
		MDISETMENU = 560u,
		[Token(Token = "0x4002172")]
		ENTERSIZEMOVE = 561u,
		[Token(Token = "0x4002173")]
		EXITSIZEMOVE = 562u,
		[Token(Token = "0x4002174")]
		DROPFILES = 563u,
		[Token(Token = "0x4002175")]
		MDIREFRESHMENU = 564u,
		[Token(Token = "0x4002176")]
		IME_SETCONTEXT = 641u,
		[Token(Token = "0x4002177")]
		IME_NOTIFY = 642u,
		[Token(Token = "0x4002178")]
		IME_CONTROL = 643u,
		[Token(Token = "0x4002179")]
		IME_COMPOSITIONFULL = 644u,
		[Token(Token = "0x400217A")]
		IME_SELECT = 645u,
		[Token(Token = "0x400217B")]
		IME_CHAR = 646u,
		[Token(Token = "0x400217C")]
		IME_REQUEST = 648u,
		[Token(Token = "0x400217D")]
		IME_KEYDOWN = 656u,
		[Token(Token = "0x400217E")]
		IME_KEYUP = 657u,
		[Token(Token = "0x400217F")]
		MOUSEHOVER = 673u,
		[Token(Token = "0x4002180")]
		MOUSELEAVE = 675u,
		[Token(Token = "0x4002181")]
		NCMOUSEHOVER = 672u,
		[Token(Token = "0x4002182")]
		NCMOUSELEAVE = 674u,
		[Token(Token = "0x4002183")]
		WTSSESSION_CHANGE = 689u,
		[Token(Token = "0x4002184")]
		TABLET_FIRST = 704u,
		[Token(Token = "0x4002185")]
		TABLET_LAST = 735u,
		[Token(Token = "0x4002186")]
		CUT = 768u,
		[Token(Token = "0x4002187")]
		COPY = 769u,
		[Token(Token = "0x4002188")]
		PASTE = 770u,
		[Token(Token = "0x4002189")]
		CLEAR = 771u,
		[Token(Token = "0x400218A")]
		UNDO = 772u,
		[Token(Token = "0x400218B")]
		RENDERFORMAT = 773u,
		[Token(Token = "0x400218C")]
		RENDERALLFORMATS = 774u,
		[Token(Token = "0x400218D")]
		DESTROYCLIPBOARD = 775u,
		[Token(Token = "0x400218E")]
		DRAWCLIPBOARD = 776u,
		[Token(Token = "0x400218F")]
		PAINTCLIPBOARD = 777u,
		[Token(Token = "0x4002190")]
		VSCROLLCLIPBOARD = 778u,
		[Token(Token = "0x4002191")]
		SIZECLIPBOARD = 779u,
		[Token(Token = "0x4002192")]
		ASKCBFORMATNAME = 780u,
		[Token(Token = "0x4002193")]
		CHANGECBCHAIN = 781u,
		[Token(Token = "0x4002194")]
		HSCROLLCLIPBOARD = 782u,
		[Token(Token = "0x4002195")]
		QUERYNEWPALETTE = 783u,
		[Token(Token = "0x4002196")]
		PALETTEISCHANGING = 784u,
		[Token(Token = "0x4002197")]
		PALETTECHANGED = 785u,
		[Token(Token = "0x4002198")]
		HOTKEY = 786u,
		[Token(Token = "0x4002199")]
		PRINT = 791u,
		[Token(Token = "0x400219A")]
		PRINTCLIENT = 792u,
		[Token(Token = "0x400219B")]
		APPCOMMAND = 793u,
		[Token(Token = "0x400219C")]
		THEMECHANGED = 794u,
		[Token(Token = "0x400219D")]
		CLIPBOARDUPDATE = 797u,
		[Token(Token = "0x400219E")]
		DWMCOMPOSITIONCHANGED = 798u,
		[Token(Token = "0x400219F")]
		DWMNCRENDERINGCHANGED = 799u,
		[Token(Token = "0x40021A0")]
		DWMCOLORIZATIONCOLORCHANGED = 800u,
		[Token(Token = "0x40021A1")]
		DWMWINDOWMAXIMIZEDCHANGE = 801u,
		[Token(Token = "0x40021A2")]
		GETTITLEBARINFOEX = 831u,
		[Token(Token = "0x40021A3")]
		HANDHELDFIRST = 856u,
		[Token(Token = "0x40021A4")]
		HANDHELDLAST = 863u,
		[Token(Token = "0x40021A5")]
		AFXFIRST = 864u,
		[Token(Token = "0x40021A6")]
		AFXLAST = 895u,
		[Token(Token = "0x40021A7")]
		PENWINFIRST = 896u,
		[Token(Token = "0x40021A8")]
		PENWINLAST = 911u,
		[Token(Token = "0x40021A9")]
		APP = 32768u,
		[Token(Token = "0x40021AA")]
		USER = 1024u,
		[Token(Token = "0x40021AB")]
		CPL_LAUNCH = 5120u,
		[Token(Token = "0x40021AC")]
		CPL_LAUNCHED = 5121u,
		[Token(Token = "0x40021AD")]
		SYSTIMER = 280u
	}
	[Token(Token = "0x2000684")]
	public struct CWPSTRUCT
	{
		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr lParam;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr wParam;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WM message;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr hwnd;
	}
	[Token(Token = "0x2000685")]
	public struct POINT
	{
		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x15A3000", Offset = "0x15A3000", VA = "0x15A3000")]
		public POINT(int aX, int aY)
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x15A3008", Offset = "0x15A3008", VA = "0x15A3008", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000686")]
	public struct MSG
	{
		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr hwnd;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WM message;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr wParam;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr lParam;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ushort time;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public POINT pt;
	}
	[Token(Token = "0x2000687")]
	public struct RECT
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Left;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Top;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Right;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Bottom;

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x192F37C", Offset = "0x192F37C", VA = "0x192F37C")]
		public RECT(int left, int top, int right, int bottom)
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x192F388", Offset = "0x192F388", VA = "0x192F388", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000688")]
	public delegate IntPtr HookProc(int code, IntPtr wParam, ref MSG lParam);
	[Token(Token = "0x2000689")]
	public delegate bool EnumThreadDelegate(IntPtr Hwnd, IntPtr lParam);
	[Token(Token = "0x200068A")]
	public static class UnityDragAndDropHook
	{
		[Token(Token = "0x200068B")]
		public delegate void DroppedFilesEvent(List<string> aPathNames, POINT aDropPoint);

		[Token(Token = "0x1400001B")]
		public static event DroppedFilesEvent OnDroppedFiles
		{
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x15DBD00", Offset = "0x15DBD00", VA = "0x15DBD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A988", Offset = "0x90A988")]
			add
			{
			}
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x15DBDBC", Offset = "0x15DBDBC", VA = "0x15DBDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A998", Offset = "0x90A998")]
			remove
			{
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x15DBE78", Offset = "0x15DBE78", VA = "0x15DBE78")]
		public static void InstallHook()
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x15DBE7C", Offset = "0x15DBE7C", VA = "0x15DBE7C")]
		public static void UninstallHook()
		{
		}
	}
}
namespace Technie.PhysicsCreator
{
	[Token(Token = "0x200068C")]
	public class HullData : ScriptableObject
	{
		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x16C2E0C", Offset = "0x16C2E0C", VA = "0x16C2E0C")]
		public HullData()
		{
		}
	}
	[Token(Token = "0x200068D")]
	public class HullMapping
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hull sourceHull;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider generatedCollider;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullPainterChild targetChild;

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x16C2E14", Offset = "0x16C2E14", VA = "0x16C2E14")]
		public HullMapping()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public class HullPainter : MonoBehaviour
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintingData paintingData;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullData hullData;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HullMapping> hullMapping;

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x16C2E1C", Offset = "0x16C2E1C", VA = "0x16C2E1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x16C2E20", Offset = "0x16C2E20", VA = "0x16C2E20")]
		public void CreateColliderComponents()
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x16C4DF4", Offset = "0x16C4DF4", VA = "0x16C4DF4")]
		public void RemoveAllColliders()
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x16C509C", Offset = "0x16C509C", VA = "0x16C509C")]
		public void RemoveAllGenerated()
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x16C5240", Offset = "0x16C5240", VA = "0x16C5240")]
		private static bool IsDeletable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x16C5000", Offset = "0x16C5000", VA = "0x16C5000")]
		private static void DestroyImmediateWithUndo(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x16C2F3C", Offset = "0x16C2F3C", VA = "0x16C2F3C")]
		private void CreateHullMapping()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x16C5A50", Offset = "0x16C5A50", VA = "0x16C5A50")]
		private static bool Approximately(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x16C5AC4", Offset = "0x16C5AC4", VA = "0x16C5AC4")]
		private static bool Approximately(float lhs, float rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0D")]
		private void CreateCollider<T>(Hull sourceHull) where T : Collider
		{
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x16C5D20", Offset = "0x16C5D20", VA = "0x16C5D20")]
		private void RecreateChildCollider(HullMapping mapping)
		{
		}

		[Token(Token = "0x6002B0F")]
		private void RecreateChildCollider<T>(HullMapping mapping) where T : Collider
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x16C4A90", Offset = "0x16C4A90", VA = "0x16C4A90")]
		private void UpdateCollider(Hull hull)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x16C5DF0", Offset = "0x16C5DF0", VA = "0x16C5DF0")]
		public void SetAllTypes(HullType newType)
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x16C5F14", Offset = "0x16C5F14", VA = "0x16C5F14")]
		public void SetAllMaterials(PhysicMaterial newMaterial)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x16C6044", Offset = "0x16C6044", VA = "0x16C6044")]
		public void SetAllAsChild(bool isChild)
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x16C616C", Offset = "0x16C616C", VA = "0x16C616C")]
		public void SetAllAsTrigger(bool isTrigger)
		{
		}

		[Token(Token = "0x6002B15")]
		private List<T> FindLocal<T>() where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x16C53E4", Offset = "0x16C53E4", VA = "0x16C53E4")]
		private bool IsMapped(Hull hull)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x16C5750", Offset = "0x16C5750", VA = "0x16C5750")]
		private bool IsMapped(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x16C58D0", Offset = "0x16C58D0", VA = "0x16C58D0")]
		private bool IsMapped(HullPainterChild child)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x16C5ACC", Offset = "0x16C5ACC", VA = "0x16C5ACC")]
		private void AddMapping(Hull hull, Collider col, HullPainterChild painterChild)
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x16C5670", Offset = "0x16C5670", VA = "0x16C5670")]
		private void RemoveMapping(Hull hull)
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x16C5B9C", Offset = "0x16C5B9C", VA = "0x16C5B9C")]
		private HullMapping FindMapping(HullPainterChild child)
		{
			return null;
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x16C6294", Offset = "0x16C6294", VA = "0x16C6294")]
		public Hull FindSourceHull(HullPainterChild child)
		{
			return null;
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x16C5528", Offset = "0x16C5528", VA = "0x16C5528")]
		private static Collider FindExistingCollider(List<HullMapping> mappings, Hull hull)
		{
			return null;
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x16C6420", Offset = "0x16C6420", VA = "0x16C6420")]
		private static GameObject CreateGameObject(string goName)
		{
			return null;
		}

		[Token(Token = "0x6002B1F")]
		private static T AddComponent<T>(GameObject targetObj) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x16C6480", Offset = "0x16C6480", VA = "0x16C6480")]
		public HullPainter()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class HullPainterChild : MonoBehaviour
	{
		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HullPainter parent;

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x16C6488", Offset = "0x16C6488", VA = "0x16C6488")]
		public HullPainterChild()
		{
		}
	}
	[Token(Token = "0x2000690")]
	public enum HullType
	{
		[Token(Token = "0x40021C7")]
		Box,
		[Token(Token = "0x40021C8")]
		ConvexHull,
		[Token(Token = "0x40021C9")]
		Sphere,
		[Token(Token = "0x40021CA")]
		Face
	}
	[Serializable]
	[Token(Token = "0x2000691")]
	public class Hull
	{
		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isVisible;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HullType type;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color colour;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial material;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableInflation;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float inflationAmount;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isTrigger;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isChildCollider;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> selectedFaces;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh collisionMesh;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh faceCollisionMesh;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Bounds collisionBox;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sphere collisionSphere;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool hasColliderError;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int numColliderFaces;

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x16C2D38", Offset = "0x16C2D38", VA = "0x16C2D38")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x16C2D3C", Offset = "0x16C2D3C", VA = "0x16C2D3C")]
		public Hull()
		{
		}
	}
	[Token(Token = "0x2000692")]
	public class PaintingData : ScriptableObject
	{
		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Color[] hullColours;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullData hullData;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh sourceMesh;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int activeHull;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float faceThickness;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Hull> hulls;

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x15A3200", Offset = "0x15A3200", VA = "0x15A3200")]
		public void AddHull(HullType type, PhysicMaterial material, bool isChild, bool isTrigger)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x15A34A4", Offset = "0x15A34A4", VA = "0x15A34A4")]
		public void RemoveHull(int index)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x15A3548", Offset = "0x15A3548", VA = "0x15A3548")]
		public void RemoveAllHulls()
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x15A3604", Offset = "0x15A3604", VA = "0x15A3604")]
		public bool HasActiveHull()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x15A3668", Offset = "0x15A3668", VA = "0x15A3668")]
		public Hull GetActiveHull()
		{
			return null;
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x15A36F4", Offset = "0x15A36F4", VA = "0x15A36F4")]
		public void GenerateCollisionMesh(Hull hull, Vector3[] meshVertices, int[] meshIndices)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x15A3CDC", Offset = "0x15A3CDC", VA = "0x15A3CDC")]
		private bool CalculateBoundingSphere(Hull hull, Vector3[] meshVertices, int[] meshIndices, out Vector3 sphereCenter, out float sphereRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x15A3F38", Offset = "0x15A3F38", VA = "0x15A3F38")]
		private void GenerateConvexHull(Hull hull, Vector3[] meshVertices, int[] meshIndices, Mesh destMesh)
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x15A49F0", Offset = "0x15A49F0", VA = "0x15A49F0")]
		private void GenerateFace(Hull hull, Vector3[] meshVertices, int[] meshIndices, float thickness)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x15A4DD8", Offset = "0x15A4DD8", VA = "0x15A4DD8")]
		public bool ContainsMesh(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x15A3C14", Offset = "0x15A3C14", VA = "0x15A3C14")]
		private static void Inflate(Vector3 point, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x15A4FB0", Offset = "0x15A4FB0", VA = "0x15A4FB0")]
		public PaintingData()
		{
		}
	}
	[Token(Token = "0x2000693")]
	public class Sphere
	{
		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x187334C", Offset = "0x187334C", VA = "0x187334C")]
		public Sphere()
		{
		}
	}
	[Token(Token = "0x2000694")]
	public class SphereUtils
	{
		[Token(Token = "0x2000695")]
		public class Support
		{
			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_iQuantity;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] m_aiIndex;

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x158D74C", Offset = "0x158D74C", VA = "0x158D74C")]
			public bool Contains(int iIndex, List<Vector3> points)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x158D8A8", Offset = "0x158D8A8", VA = "0x158D8A8")]
			public Support()
			{
			}
		}

		[Token(Token = "0x40021E3")]
		private const float kEpsilon = 0.001f;

		[Token(Token = "0x40021E4")]
		private const float kOnePlusEpsilon = 1.001f;

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x187335C", Offset = "0x187335C", VA = "0x187335C")]
		private static bool PointInsideSphere(Vector3 rkP, Sphere rkS)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x18733D0", Offset = "0x18733D0", VA = "0x18733D0")]
		private static Sphere ExactSphere1(Vector3 rkP)
		{
			return null;
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x1873460", Offset = "0x1873460", VA = "0x1873460")]
		private static Sphere ExactSphere2(Vector3 rkP0, Vector3 rkP1)
		{
			return null;
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x1873558", Offset = "0x1873558", VA = "0x1873558")]
		private static Sphere ExactSphere3(Vector3 rkP0, Vector3 rkP1, Vector3 rkP2)
		{
			return null;
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x1873714", Offset = "0x1873714", VA = "0x1873714")]
		private static Sphere ExactSphere4(Vector3 rkP0, Vector3 rkP1, Vector3 rkP2, Vector3 rkP3)
		{
			return null;
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x1874150", Offset = "0x1874150", VA = "0x1874150")]
		private static Sphere UpdateSupport1(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x1874260", Offset = "0x1874260", VA = "0x1874260")]
		private static Sphere UpdateSupport2(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x18745A8", Offset = "0x18745A8", VA = "0x18745A8")]
		private static Sphere UpdateSupport3(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x1874D60", Offset = "0x1874D60", VA = "0x1874D60")]
		public static Sphere UpdateSupport4(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x1875C70", Offset = "0x1875C70", VA = "0x1875C70")]
		private static Sphere Update(int funcIndex, int numPoints, List<Vector3> points, Support support)
		{
			return null;
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x1875CD8", Offset = "0x1875CD8", VA = "0x1875CD8")]
		public static Sphere MinSphere(List<Vector3> inputPoints)
		{
			return null;
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x1875EFC", Offset = "0x1875EFC", VA = "0x1875EFC")]
		public static void Shuffle(List<Vector3> list)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x1876038", Offset = "0x1876038", VA = "0x1876038")]
		public SphereUtils()
		{
		}
	}
}
namespace Technie.PhysicsCreator.QHull
{
	[Token(Token = "0x2000696")]
	public class Face
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HalfEdge he0;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3d normal;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double area;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Point3d centroid;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double planeOffset;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int index;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int numVerts;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Face next;

		[Token(Token = "0x40021EF")]
		public const int VISIBLE = 1;

		[Token(Token = "0x40021F0")]
		public const int NON_CONVEX = 2;

		[Token(Token = "0x40021F1")]
		public const int DELETED = 3;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int mark;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vertex outside;

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x174C3B8", Offset = "0x174C3B8", VA = "0x174C3B8")]
		public void computeCentroid(Point3d centroid)
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x174C43C", Offset = "0x174C43C", VA = "0x174C43C")]
		public void computeNormal(Vector3d normal, double minArea)
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x174C5C4", Offset = "0x174C5C4", VA = "0x174C5C4")]
		public void computeNormal(Vector3d normal)
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x174C73C", Offset = "0x174C73C", VA = "0x174C73C")]
		private void computeNormalAndCentroid()
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x174CA48", Offset = "0x174CA48", VA = "0x174CA48")]
		private void computeNormalAndCentroid(double minArea)
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x174CA94", Offset = "0x174CA94", VA = "0x174CA94")]
		public static Face createTriangle(Vertex v0, Vertex v1, Vertex v2)
		{
			return null;
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x174CA9C", Offset = "0x174CA9C", VA = "0x174CA9C")]
		public static Face createTriangle(Vertex v0, Vertex v1, Vertex v2, double minArea)
		{
			return null;
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x174CCD0", Offset = "0x174CCD0", VA = "0x174CCD0")]
		public static Face create(Vertex[] vtxArray, int[] indices)
		{
			return null;
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x174CC10", Offset = "0x174CC10", VA = "0x174CC10")]
		public Face()
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x174CE5C", Offset = "0x174CE5C", VA = "0x174CE5C")]
		public HalfEdge getEdge(int i)
		{
			return null;
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x174CEA8", Offset = "0x174CEA8", VA = "0x174CEA8")]
		public HalfEdge getFirstEdge()
		{
			return null;
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x174CEB0", Offset = "0x174CEB0", VA = "0x174CEB0")]
		public HalfEdge findEdge(Vertex vt, Vertex vh)
		{
			return null;
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x174CF24", Offset = "0x174CF24", VA = "0x174CF24")]
		public double distanceToPlane(Point3d p)
		{
			return default(double);
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x174CF70", Offset = "0x174CF70", VA = "0x174CF70")]
		public Vector3d getNormal()
		{
			return null;
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x174CF78", Offset = "0x174CF78", VA = "0x174CF78")]
		public Point3d getCentroid()
		{
			return null;
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x174CF80", Offset = "0x174CF80", VA = "0x174CF80")]
		public int numVertices()
		{
			return default(int);
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x174C97C", Offset = "0x174C97C", VA = "0x174C97C")]
		public string getVertexString()
		{
			return null;
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x174CF88", Offset = "0x174CF88", VA = "0x174CF88")]
		public void getVertexIndices(int[] idxs)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x174CFEC", Offset = "0x174CFEC", VA = "0x174CFEC")]
		private Face connectHalfEdges(HalfEdge hedgePrev, HalfEdge hedge)
		{
			return null;
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x174D190", Offset = "0x174D190", VA = "0x174D190")]
		public void checkConsistency()
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x174D968", Offset = "0x174D968", VA = "0x174D968")]
		public int mergeAdjacentFace(HalfEdge hedgeAdj, Face[] discarded)
		{
			return default(int);
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x174DB80", Offset = "0x174DB80", VA = "0x174DB80")]
		private double areaSquared(HalfEdge hedge0, HalfEdge hedge1)
		{
			return default(double);
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x174DC4C", Offset = "0x174DC4C", VA = "0x174DC4C")]
		public void triangulate(FaceList newFaces, double minArea)
		{
		}
	}
	[Token(Token = "0x2000697")]
	public class FaceList
	{
		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Face head;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Face tail;

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x174DEA0", Offset = "0x174DEA0", VA = "0x174DEA0")]
		public void clear()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x174DE38", Offset = "0x174DE38", VA = "0x174DE38")]
		public void add(Face vtx)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x174DED4", Offset = "0x174DED4", VA = "0x174DED4")]
		public Face first()
		{
			return null;
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x174DEDC", Offset = "0x174DEDC", VA = "0x174DEDC")]
		public bool isEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x174DEEC", Offset = "0x174DEEC", VA = "0x174DEEC")]
		public FaceList()
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class HalfEdge
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertex vertex;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Face face;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HalfEdge next;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HalfEdge prev;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HalfEdge opposite;

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x1940C94", Offset = "0x1940C94", VA = "0x1940C94")]
		public HalfEdge(Vertex v, Face f)
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x1940CE4", Offset = "0x1940CE4", VA = "0x1940CE4")]
		public HalfEdge()
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x1940CEC", Offset = "0x1940CEC", VA = "0x1940CEC")]
		public void setNext(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x1940CF4", Offset = "0x1940CF4", VA = "0x1940CF4")]
		public HalfEdge getNext()
		{
			return null;
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x1940CFC", Offset = "0x1940CFC", VA = "0x1940CFC")]
		public void setPrev(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x1940D04", Offset = "0x1940D04", VA = "0x1940D04")]
		public HalfEdge getPrev()
		{
			return null;
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1940D0C", Offset = "0x1940D0C", VA = "0x1940D0C")]
		public Face getFace()
		{
			return null;
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1940D14", Offset = "0x1940D14", VA = "0x1940D14")]
		public HalfEdge getOpposite()
		{
			return null;
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x1940D1C", Offset = "0x1940D1C", VA = "0x1940D1C")]
		public void setOpposite(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1940D58", Offset = "0x1940D58", VA = "0x1940D58")]
		public Vertex head()
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x1940D60", Offset = "0x1940D60", VA = "0x1940D60")]
		public Vertex tail()
		{
			return null;
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x1940D78", Offset = "0x1940D78", VA = "0x1940D78")]
		public Face oppositeFace()
		{
			return null;
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x1940D90", Offset = "0x1940D90", VA = "0x1940D90")]
		public string getVertexString()
		{
			return null;
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x1940E60", Offset = "0x1940E60", VA = "0x1940E60")]
		public double length()
		{
			return default(double);
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x1940EA8", Offset = "0x1940EA8", VA = "0x1940EA8")]
		public double lengthSquared()
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000699")]
	public class InternalErrorException : SystemException
	{
		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x16D8EF0", Offset = "0x16D8EF0", VA = "0x16D8EF0")]
		public InternalErrorException(string msg)
		{
		}
	}
	[Token(Token = "0x200069A")]
	public class Point3d : Vector3d
	{
		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x19218D8", Offset = "0x19218D8", VA = "0x19218D8")]
		public Point3d()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x19218E0", Offset = "0x19218E0", VA = "0x19218E0")]
		public Point3d(Vector3d v)
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x1921914", Offset = "0x1921914", VA = "0x1921914")]
		public Point3d(double x, double y, double z)
		{
		}
	}
	[Token(Token = "0x200069B")]
	internal class QhullTest
	{
		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x192B3EC", Offset = "0x192B3EC", VA = "0x192B3EC")]
		public QhullTest()
		{
		}
	}
	[Token(Token = "0x200069C")]
	public class QuickHull3D
	{
		[Token(Token = "0x40021FB")]
		public const int CLOCKWISE = 1;

		[Token(Token = "0x40021FC")]
		public const int INDEXED_FROM_ONE = 2;

		[Token(Token = "0x40021FD")]
		public const int INDEXED_FROM_ZERO = 4;

		[Token(Token = "0x40021FE")]
		public const int POINT_RELATIVE = 8;

		[Token(Token = "0x40021FF")]
		public const double AUTOMATIC_TOLERANCE = -1.0;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int findIndex;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double charLength;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool debug;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vertex[] pointBuffer;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] vertexPointIndices;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Face[] discardedFaces;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vertex[] maxVtxs;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vertex[] minVtxs;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<Face> faces;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<HalfEdge> horizon;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FaceList newFaces;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VertexList unclaimed;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VertexList claimed;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected int numVertices;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int numFaces;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int numPoints;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected double explicitTolerance;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected double tolerance;

		[Token(Token = "0x4002212")]
		private const double DOUBLE_PREC = 2.220446049250313E-16;

		[Token(Token = "0x4002213")]
		private const int NONCONVEX_WRT_LARGER_FACE = 1;

		[Token(Token = "0x4002214")]
		private const int NONCONVEX = 2;

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x192B9EC", Offset = "0x192B9EC", VA = "0x192B9EC")]
		public bool getDebug()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x192B9F4", Offset = "0x192B9F4", VA = "0x192B9F4")]
		public void setDebug(bool enable)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x192BA00", Offset = "0x192BA00", VA = "0x192BA00")]
		public double getDistanceTolerance()
		{
			return default(double);
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x192BA08", Offset = "0x192BA08", VA = "0x192BA08")]
		public void setExplicitDistanceTolerance(double tol)
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x192BA10", Offset = "0x192BA10", VA = "0x192BA10")]
		public double getExplicitDistanceTolerance()
		{
			return default(double);
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x192BA18", Offset = "0x192BA18", VA = "0x192BA18")]
		private void addPointToFace(Vertex vtx, Face face)
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x192BA9C", Offset = "0x192BA9C", VA = "0x192BA9C")]
		private void removePointFromFace(Vertex vtx, Face face)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x192BB10", Offset = "0x192BB10", VA = "0x192BB10")]
		private Vertex removeAllPointsFromFace(Face face)
		{
			return null;
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x192BB94", Offset = "0x192BB94", VA = "0x192BB94")]
		public QuickHull3D()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x192BDE0", Offset = "0x192BDE0", VA = "0x192BDE0")]
		public QuickHull3D(double[] coords)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x192C144", Offset = "0x192C144", VA = "0x192C144")]
		public QuickHull3D(Point3d[] points)
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x192C478", Offset = "0x192C478", VA = "0x192C478")]
		private HalfEdge findHalfEdge(Vertex tail, Vertex head)
		{
			return null;
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x192C5D4", Offset = "0x192C5D4", VA = "0x192C5D4")]
		protected void setHull(double[] coords, int nump, int[][] faceIndices, int numf)
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x192CEF0", Offset = "0x192CEF0", VA = "0x192CEF0")]
		public void build(double[] coords)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x192C060", Offset = "0x192C060", VA = "0x192C060")]
		public void build(double[] coords, int nump)
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x192CF74", Offset = "0x192CF74", VA = "0x192CF74")]
		public void build(Point3d[] points)
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x192C3AC", Offset = "0x192C3AC", VA = "0x192C3AC")]
		public void build(Point3d[] points, int nump)
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x192D034", Offset = "0x192D034", VA = "0x192D034")]
		public void triangulate()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x192C71C", Offset = "0x192C71C", VA = "0x192C71C")]
		protected void initBuffers(int nump)
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x192C950", Offset = "0x192C950", VA = "0x192C950")]
		protected void setPoints(double[] coords, int nump)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x192CF8C", Offset = "0x192CF8C", VA = "0x192CF8C")]
		protected void setPoints(Point3d[] pnts, int nump)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x192CA28", Offset = "0x192CA28", VA = "0x192CA28")]
		protected void computeMaxAndMin()
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x192D1E0", Offset = "0x192D1E0", VA = "0x192D1E0")]
		protected void createInitialSimplex()
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x192DE6C", Offset = "0x192DE6C", VA = "0x192DE6C")]
		public int getNumVertices()
		{
			return default(int);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x192DE74", Offset = "0x192DE74", VA = "0x192DE74")]
		public Point3d[] getVertices()
		{
			return null;
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x192DF9C", Offset = "0x192DF9C", VA = "0x192DF9C")]
		public int getVertices(double[] coords)
		{
			return default(int);
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x192E080", Offset = "0x192E080", VA = "0x192E080")]
		public int[] getVertexPointIndices()
		{
			return null;
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x192E134", Offset = "0x192E134", VA = "0x192E134")]
		public int getNumFaces()
		{
			return default(int);
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x192E180", Offset = "0x192E180", VA = "0x192E180")]
		public int[][] getFaces()
		{
			return null;
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x192E188", Offset = "0x192E188", VA = "0x192E188")]
		public int[][] getFaces(int indexFlags)
		{
			return null;
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x192E3C8", Offset = "0x192E3C8", VA = "0x192E3C8")]
		private void getFaceIndices(int[] indices, Face face, int flags)
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x192E46C", Offset = "0x192E46C", VA = "0x192E46C")]
		protected void resolveUnclaimedPoints(FaceList newFaces)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x192E534", Offset = "0x192E534", VA = "0x192E534")]
		protected void deleteFacePoints(Face face, Face absorbingFace)
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x192E5E0", Offset = "0x192E5E0", VA = "0x192E5E0")]
		protected double oppFaceDistance(HalfEdge he)
		{
			return default(double);
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x192E618", Offset = "0x192E618", VA = "0x192E618")]
		private bool doAdjacentMerge(Face face, int mergeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x192E79C", Offset = "0x192E79C", VA = "0x192E79C")]
		protected void calculateHorizon(Point3d eyePnt, HalfEdge edge0, Face face, List<HalfEdge> horizon)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x192E8C8", Offset = "0x192E8C8", VA = "0x192E8C8")]
		private HalfEdge addAdjoiningFace(Vertex eyeVtx, HalfEdge he)
		{
			return null;
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x192E990", Offset = "0x192E990", VA = "0x192E990")]
		protected void addNewFaces(FaceList newFaces, Vertex eyeVtx, List<HalfEdge> horizon)
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x192EB68", Offset = "0x192EB68", VA = "0x192EB68")]
		protected Vertex nextPointToAdd()
		{
			return null;
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x192EC14", Offset = "0x192EC14", VA = "0x192EC14")]
		protected void addPointToHull(Vertex eyeVtx)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x192CF20", Offset = "0x192CF20", VA = "0x192CF20")]
		protected void buildHull()
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x192EF14", Offset = "0x192EF14", VA = "0x192EF14")]
		private void markFaceVertices(Face face, int mark)
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x192ED54", Offset = "0x192ED54", VA = "0x192ED54")]
		protected void reindexFacesAndVertices()
		{
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x192EF50", Offset = "0x192EF50", VA = "0x192EF50")]
		protected bool checkFaceConvexity(Face face, double tol)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x192F000", Offset = "0x192F000", VA = "0x192F000")]
		protected bool checkFaces(double tol)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x192F140", Offset = "0x192F140", VA = "0x192F140")]
		public bool check()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x192F148", Offset = "0x192F148", VA = "0x192F148")]
		public bool check(double tol)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200069D")]
	public class SimpleExample
	{
		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x15BDE94", Offset = "0x15BDE94", VA = "0x15BDE94")]
		public static void main(string[] args)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x15BE1B0", Offset = "0x15BE1B0", VA = "0x15BE1B0")]
		public SimpleExample()
		{
		}
	}
	[Token(Token = "0x200069E")]
	public class Vector3d
	{
		[Token(Token = "0x4002215")]
		private const double DOUBLE_PREC = 2.220446049250313E-16;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double x;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double y;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double z;

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x19DF660", Offset = "0x19DF660", VA = "0x19DF660")]
		public Vector3d()
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x19DF668", Offset = "0x19DF668", VA = "0x19DF668")]
		public Vector3d(Vector3d v)
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x19DF6DC", Offset = "0x19DF6DC", VA = "0x19DF6DC")]
		public Vector3d(double x, double y, double z)
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x19DF730", Offset = "0x19DF730", VA = "0x19DF730")]
		public double get(int i)
		{
			return default(double);
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x19DF7DC", Offset = "0x19DF7DC", VA = "0x19DF7DC")]
		public void set(int i, double value)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x19DF6B0", Offset = "0x19DF6B0", VA = "0x19DF6B0")]
		public void set(Vector3d v1)
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x19DF888", Offset = "0x19DF888", VA = "0x19DF888")]
		public void add(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x19DF8D4", Offset = "0x19DF8D4", VA = "0x19DF8D4")]
		public void add(Vector3d v1)
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x19DF914", Offset = "0x19DF914", VA = "0x19DF914")]
		public void sub(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x19DF960", Offset = "0x19DF960", VA = "0x19DF960")]
		public void sub(Vector3d v1)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x19DF9A0", Offset = "0x19DF9A0", VA = "0x19DF9A0")]
		public void scale(double s)
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x19DF9BC", Offset = "0x19DF9BC", VA = "0x19DF9BC")]
		public void scale(double s, Vector3d v1)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x19DF9F4", Offset = "0x19DF9F4", VA = "0x19DF9F4")]
		public double norm()
		{
			return default(double);
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x19DFAA0", Offset = "0x19DFAA0", VA = "0x19DFAA0")]
		public double normSquared()
		{
			return default(double);
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x19DFAC0", Offset = "0x19DFAC0", VA = "0x19DFAC0")]
		public double distance(Vector3d v)
		{
			return default(double);
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x19DFB9C", Offset = "0x19DFB9C", VA = "0x19DFB9C")]
		public double distanceSquared(Vector3d v)
		{
			return default(double);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x19DFBDC", Offset = "0x19DFBDC", VA = "0x19DFBDC")]
		public double dot(Vector3d v1)
		{
			return default(double);
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x19DFC14", Offset = "0x19DFC14", VA = "0x19DFC14")]
		public void normalize()
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x19DFCEC", Offset = "0x19DFCEC", VA = "0x19DFCEC")]
		public void setZero()
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x19DF724", Offset = "0x19DF724", VA = "0x19DF724")]
		public void set(double x, double y, double z)
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x19DFCF8", Offset = "0x19DFCF8", VA = "0x19DFCF8")]
		public void cross(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x19DFD50", Offset = "0x19DFD50", VA = "0x19DFD50")]
		protected void setRandom(double lower, double upper, System.Random generator)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x19DFDDC", Offset = "0x19DFDDC", VA = "0x19DFDDC")]
		public string toString()
		{
			return null;
		}
	}
	[Token(Token = "0x200069F")]
	public class Vertex
	{
		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Point3d pnt;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex prev;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vertex next;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Face face;

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x19E6050", Offset = "0x19E6050", VA = "0x19E6050")]
		public Vertex()
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x19E60C0", Offset = "0x19E60C0", VA = "0x19E60C0")]
		public Vertex(double x, double y, double z, int idx)
		{
		}
	}
	[Token(Token = "0x20006A0")]
	internal class VertexList
	{
		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex head;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex tail;

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x19E616C", Offset = "0x19E616C", VA = "0x19E616C")]
		public void clear()
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x19E61A0", Offset = "0x19E61A0", VA = "0x19E61A0")]
		public void add(Vertex vtx)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x19E6224", Offset = "0x19E6224", VA = "0x19E6224")]
		public void addAll(Vertex vtx)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x19E62A0", Offset = "0x19E62A0", VA = "0x19E62A0")]
		public void delete(Vertex vtx)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x19E62FC", Offset = "0x19E62FC", VA = "0x19E62FC")]
		public void delete(Vertex vtx1, Vertex vtx2)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x19E6378", Offset = "0x19E6378", VA = "0x19E6378")]
		public void insertBefore(Vertex vtx, Vertex next)
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x19E6400", Offset = "0x19E6400", VA = "0x19E6400")]
		public Vertex first()
		{
			return null;
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x19E6408", Offset = "0x19E6408", VA = "0x19E6408")]
		public bool isEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x19E6418", Offset = "0x19E6418", VA = "0x19E6418")]
		public VertexList()
		{
		}
	}
}
namespace System.Reflection
{
	[Token(Token = "0x20006A1")]
	public static class Ext_Type
	{
		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x174BDE8", Offset = "0x174BDE8", VA = "0x174BDE8")]
		public static FieldInfo GetFieldPrivate(this Type t, string fieldName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x174BF10", Offset = "0x174BF10", VA = "0x174BF10")]
		public static PropertyInfo GetPropertyPrivate(this Type t, string propName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x174C030", Offset = "0x174C030", VA = "0x174C030")]
		public static MethodInfo GetMethodPrivate(this Type t, string methodName, BindingFlags flags)
		{
			return null;
		}
	}
}
namespace SmartData
{
	[Token(Token = "0x20006A2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EF174", Offset = "0x8EF174")]
	public class ForceEventableAttribute : Attribute
	{
		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7C4", Offset = "0x8FA7C4")]
		private bool <forceExpand>k__BackingField;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7D4", Offset = "0x8FA7D4")]
		private bool <allowLocal>k__BackingField;

		[Token(Token = "0x1700059C")]
		public bool forceExpand
		{
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x18AED10", Offset = "0x18AED10", VA = "0x18AED10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A9D8", Offset = "0x90A9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x18AED18", Offset = "0x18AED18", VA = "0x18AED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A9E8", Offset = "0x90A9E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700059D")]
		public bool allowLocal
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x18AED24", Offset = "0x18AED24", VA = "0x18AED24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90A9F8", Offset = "0x90A9F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x18AED2C", Offset = "0x18AED2C", VA = "0x18AED2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA08", Offset = "0x90AA08")]
			set
			{
			}
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x18AED38", Offset = "0x18AED38", VA = "0x18AED38")]
		public ForceEventableAttribute(bool forceExpand = false, bool allowLocal = true)
		{
		}
	}
	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EF188", Offset = "0x8EF188")]
	public class ForceHideEventAttribute : Attribute
	{
		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x18AED7C", Offset = "0x18AED7C", VA = "0x18AED7C")]
		public ForceHideEventAttribute()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EF19C", Offset = "0x8EF19C")]
	public class ForceNoAutoListenAttribute : Attribute
	{
		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7E4", Offset = "0x8FA7E4")]
		private bool <hide>k__BackingField;

		[Token(Token = "0x1700059E")]
		public bool hide
		{
			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x18AED84", Offset = "0x18AED84", VA = "0x18AED84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA18", Offset = "0x90AA18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x18AED8C", Offset = "0x18AED8C", VA = "0x18AED8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA28", Offset = "0x90AA28")]
			set
			{
			}
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x18AED98", Offset = "0x18AED98", VA = "0x18AED98")]
		public ForceNoAutoListenAttribute(bool hide = false)
		{
		}
	}
	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EF1B0", Offset = "0x8EF1B0")]
	public class DecoratorDescriptionAttribute : Attribute
	{
		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA7F4", Offset = "0x8FA7F4")]
		private string <description>k__BackingField;

		[Token(Token = "0x1700059F")]
		public string description
		{
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x16776C8", Offset = "0x16776C8", VA = "0x16776C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA38", Offset = "0x90AA38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x16776D0", Offset = "0x16776D0", VA = "0x16776D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA48", Offset = "0x90AA48")]
			private set
			{
			}
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x16776D8", Offset = "0x16776D8", VA = "0x16776D8")]
		public DecoratorDescriptionAttribute(string description)
		{
		}
	}
	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8EF1C4", Offset = "0x8EF1C4")]
	public class ForceNoMultiIndexAttribute : Attribute
	{
		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x18AEDC8", Offset = "0x18AEDC8", VA = "0x18AEDC8")]
		public ForceNoMultiIndexAttribute()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public static class SmartDataInfo
	{
		[Token(Token = "0x4002224")]
		public const string VERSION = "0.2.1";

		[Token(Token = "0x4002225")]
		public const int VERSION_MAJOR = 0;

		[Token(Token = "0x4002226")]
		public const int VERSION_MINOR = 2;

		[Token(Token = "0x4002227")]
		public const int VERSION_PATCH = 1;
	}
	[Token(Token = "0x20006A8")]
	public enum MultiElementType
	{
		[Token(Token = "0x4002229")]
		NONE,
		[Token(Token = "0x400222A")]
		DYNAMIC,
		[Token(Token = "0x400222B")]
		PERSISTENT
	}
	[Token(Token = "0x20006A9")]
	public enum RestoreMode
	{
		[Token(Token = "0x400222D")]
		NONE,
		[Token(Token = "0x400222E")]
		INIT,
		[Token(Token = "0x400222F")]
		AUTO,
		[Token(Token = "0x4002230")]
		MANUAL
	}
	[Token(Token = "0x20006AA")]
	public enum SetOperation
	{
		[Token(Token = "0x4002232")]
		NONE,
		[Token(Token = "0x4002233")]
		ADDED,
		[Token(Token = "0x4002234")]
		REMOVED,
		[Token(Token = "0x4002235")]
		CHANGED,
		[Token(Token = "0x4002236")]
		INSERTED,
		[Token(Token = "0x4002237")]
		CLEARED
	}
	[Token(Token = "0x20006AB")]
	public struct SetEventData<T>
	{
		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA804", Offset = "0x8FA804")]
		private T <value>k__BackingField;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA814", Offset = "0x8FA814")]
		private T <previousValue>k__BackingField;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA824", Offset = "0x8FA824")]
		private SetOperation <operation>k__BackingField;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FA834", Offset = "0x8FA834")]
		private int <index>k__BackingField;

		[Token(Token = "0x170005A0")]
		public T value
		{
			[Token(Token = "0x6002BD3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA58", Offset = "0x90AA58")]
			readonly get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AA90", Offset = "0x90AA90")]
			private set
			{
			}
		}

		[Token(Token = "0x170005A1")]
		public T previousValue
		{
			[Token(Token = "0x6002BD5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AAA0", Offset = "0x90AAA0")]
			readonly get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BD6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AAD8", Offset = "0x90AAD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170005A2")]
		public SetOperation operation
		{
			[Token(Token = "0x6002BD7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AAE8", Offset = "0x90AAE8")]
			readonly get
			{
				return default(SetOperation);
			}
			[Token(Token = "0x6002BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB20", Offset = "0x90AB20")]
			private set
			{
			}
		}

		[Token(Token = "0x170005A3")]
		public int index
		{
			[Token(Token = "0x6002BD9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB30", Offset = "0x90AB30")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6002BDA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB68", Offset = "0x90AB68")]
			private set
			{
			}
		}

		[Token(Token = "0x6002BDB")]
		public SetEventData(T data, T previousData, SetOperation operation, int index)
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public interface ISmartRefOwnerRedirect
	{
		[Token(Token = "0x6002BDC")]
		UnityEngine.Object GetSmartRefOwner();

		[Token(Token = "0x6002BDD")]
		Type GetOwnerType();
	}
}
namespace SmartData.Components
{
	[Token(Token = "0x20006AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF1D8", Offset = "0x8EF1D8")]
	public class SmartRefUnbinder : MonoBehaviour
	{
		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameObject, SmartRefUnbinder> _all;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SmartRefBase> _refs;

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x15C35B0", Offset = "0x15C35B0", VA = "0x15C35B0")]
		public static void UnbindUnityEventOnDestroy(SmartRefBase r, GameObject go, bool enableUnityEventNow = true)
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x15C3724", Offset = "0x15C3724", VA = "0x15C3724")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x15C3830", Offset = "0x15C3830", VA = "0x15C3830")]
		public SmartRefUnbinder()
		{
		}
	}
}
namespace SmartData.Editors
{
	[Token(Token = "0x20006AE")]
	public class SmartDataRegistry : MonoBehaviour
	{
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<WeakReference, Type> _refs;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<SmartBase, Type> _smart;

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x15C12D8", Offset = "0x15C12D8", VA = "0x15C12D8")]
		public static Dictionary<WeakReference, Type> GetSmartReferences()
		{
			return null;
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x15C1380", Offset = "0x15C1380", VA = "0x15C1380")]
		public static Dictionary<SmartBase, Type> GetSmartDatas()
		{
			return null;
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0x15C1428", Offset = "0x15C1428", VA = "0x15C1428")]
		public static void RegisterReference(SmartRefBase r)
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x15C1500", Offset = "0x15C1500", VA = "0x15C1500")]
		public static void UnregisterReference(WeakReference r)
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x15C158C", Offset = "0x15C158C", VA = "0x15C158C")]
		public static void RegisterSmart(SmartBase s)
		{
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x15C1630", Offset = "0x15C1630", VA = "0x15C1630")]
		public static void UnregisterSmart(SmartBase s)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x15C16BC", Offset = "0x15C16BC", VA = "0x15C16BC")]
		public SmartDataRegistry()
		{
		}
	}
}
namespace SmartData.SmartVector3
{
	[Serializable]
	[Token(Token = "0x20006AF")]
	public class Vector3MultiReader : SmartDataMultiRef<Vector3Multi, Vector3, Vector3Var>
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x19DEB70", Offset = "0x19DEB70", VA = "0x19DEB70")]
		public static implicit operator Vector3(Vector3MultiReader r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x19DEBC4", Offset = "0x19DEBC4", VA = "0x19DEBC4", Slot = "21")]
		protected override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x19DEC54", Offset = "0x19DEC54", VA = "0x19DEC54")]
		public Vector3MultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B0")]
	public class Vector3MultiWriter : SmartDataMultiRefWriter<Vector3Multi, Vector3, Vector3Var>
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x19DECA0", Offset = "0x19DECA0", VA = "0x19DECA0")]
		public static implicit operator Vector3(Vector3MultiWriter r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x19DECF4", Offset = "0x19DECF4", VA = "0x19DECF4", Slot = "21")]
		protected override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x19DED84", Offset = "0x19DED84", VA = "0x19DED84", Slot = "26")]
		protected sealed override void InvokeUnityEvent(Vector3 value)
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x19DEE00", Offset = "0x19DEE00", VA = "0x19DEE00")]
		public Vector3MultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B1")]
	public class Vector3SetReader : SmartSetRefBase<Vector3, Vector3Set>, ISmartSetRefReader<Vector3>, ISmartRef, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3Var.Vector3Event _onAdd;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3Var.Vector3Event _onRemove;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3Var.Vector3Event _onChange;

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x19DF194", Offset = "0x19DF194", VA = "0x19DF194", Slot = "20")]
		protected override Action<SetEventData<Vector3>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x19DF220", Offset = "0x19DF220", VA = "0x19DF220")]
		public Vector3SetReader()
		{
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x19DF26C", Offset = "0x19DF26C", VA = "0x19DF26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB78", Offset = "0x90AB78")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<Vector3> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B2")]
	public class Vector3SetWriter : SmartSetRefWriterBase<Vector3, Vector3Set>, ISmartSetRefReader<Vector3>, ISmartRef, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable
	{
		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3Var.Vector3Event _onAdd;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3Var.Vector3Event _onRemove;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3Var.Vector3Event _onChange;

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x19DF32C", Offset = "0x19DF32C", VA = "0x19DF32C", Slot = "20")]
		protected override Action<SetEventData<Vector3>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x19DF3B0", Offset = "0x19DF3B0", VA = "0x19DF3B0", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<Vector3> d)
		{
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x19DF470", Offset = "0x19DF470", VA = "0x19DF470")]
		public Vector3SetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B3")]
	public class Vector3Reader : SmartDataRefBase<Vector3, Vector3Var, Vector3Const, Vector3Multi>
	{
		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x19DF06C", Offset = "0x19DF06C", VA = "0x19DF06C", Slot = "18")]
		protected sealed override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x19DF0FC", Offset = "0x19DF0FC", VA = "0x19DF0FC")]
		public Vector3Reader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B4")]
	public class Vector3Writer : SmartDataRefWriter<Vector3, Vector3Var, Vector3Const, Vector3Multi>
	{
		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x19DF508", Offset = "0x19DF508", VA = "0x19DF508", Slot = "18")]
		protected sealed override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x19DF598", Offset = "0x19DF598", VA = "0x19DF598", Slot = "24")]
		protected sealed override void InvokeUnityEvent(Vector3 value)
		{
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0x19DF614", Offset = "0x19DF614", VA = "0x19DF614")]
		public Vector3Writer()
		{
		}
	}
}
namespace SmartData.SmartVector3.Data
{
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF210", Offset = "0x8EF210")]
	public class Vector3Const : SmartConst<Vector3>, ISmartConst<Vector3>, ISmartData<Vector3>, ISmartObject
	{
		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0x19DEAD8", Offset = "0x19DEAD8", VA = "0x19DEAD8")]
		public Vector3Const()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF260", Offset = "0x8EF260")]
	public class Vector3Multi : SmartMulti<Vector3, Vector3Var>, ISmartMulti<Vector3, Vector3Var>, ISmartMulti<Vector3Var>, ISmartMultiBindable<Action<Vector3>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x19DEB24", Offset = "0x19DEB24", VA = "0x19DEB24")]
		public Vector3Multi()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF2B0", Offset = "0x8EF2B0")]
	public class Vector3Set : SmartSet<Vector3>, ISmartDataSet<Vector3>, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable, ISmartSetWriter<Vector3>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0x19DF148", Offset = "0x19DF148", VA = "0x19DF148")]
		public Vector3Set()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF300", Offset = "0x8EF300")]
	public class Vector3Var : SmartVar<Vector3>, ISmartVar<Vector3>, ISmartDataWriter<Vector3>, ISmartObject, ISmartEvent<Vector3>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006B9")]
		public class Vector3Event : UnityEvent<Vector3>
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x1FCA330", Offset = "0x1FCA330", VA = "0x1FCA330")]
			public Vector3Event()
			{
			}
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x19DF4BC", Offset = "0x19DF4BC", VA = "0x19DF4BC")]
		public Vector3Var()
		{
		}
	}
}
namespace SmartData.SmartVector3.Components
{
	[Token(Token = "0x20006BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF34C", Offset = "0x8EF34C")]
	public class ReadSmartVector3 : ReadSmartBase<Vector3Reader>
	{
		[Token(Token = "0x6002C01")]
		[Address(RVA = "0x1933E94", Offset = "0x1933E94", VA = "0x1933E94")]
		public ReadSmartVector3()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF388", Offset = "0x8EF388")]
	public class ReadSmartVector3Set : ReadSmartBase<Vector3SetReader>
	{
		[Token(Token = "0x6002C02")]
		[Address(RVA = "0x1933EE0", Offset = "0x1933EE0", VA = "0x1933EE0")]
		public ReadSmartVector3Set()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF3C4", Offset = "0x8EF3C4")]
	public class WriteSmartVector3 : WriteSmartBase<Vector3, Vector3Writer>
	{
		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x19EC624", Offset = "0x19EC624", VA = "0x19EC624")]
		public WriteSmartVector3()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF400", Offset = "0x8EF400")]
	public class WriteSmartVector3Set : WriteSetBase<Vector3, Vector3SetWriter>
	{
		[Token(Token = "0x6002C04")]
		[Address(RVA = "0x19EC670", Offset = "0x19EC670", VA = "0x19EC670")]
		public WriteSmartVector3Set()
		{
		}
	}
}
namespace SmartData.SmartString
{
	[Serializable]
	[Token(Token = "0x20006BE")]
	public class StringMultiReader : SmartDataMultiRef<StringMulti, string, StringVar>
	{
		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0x187D3C0", Offset = "0x187D3C0", VA = "0x187D3C0")]
		public static implicit operator string(StringMultiReader r)
		{
			return null;
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x187D414", Offset = "0x187D414", VA = "0x187D414", Slot = "21")]
		protected override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0x187D4A4", Offset = "0x187D4A4", VA = "0x187D4A4")]
		public StringMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BF")]
	public class StringMultiWriter : SmartDataMultiRefWriter<StringMulti, string, StringVar>
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0x187D4F0", Offset = "0x187D4F0", VA = "0x187D4F0")]
		public static implicit operator string(StringMultiWriter r)
		{
			return null;
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0x187D544", Offset = "0x187D544", VA = "0x187D544", Slot = "21")]
		protected override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0x187D5D4", Offset = "0x187D5D4", VA = "0x187D5D4", Slot = "26")]
		protected sealed override void InvokeUnityEvent(string value)
		{
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x187D638", Offset = "0x187D638", VA = "0x187D638")]
		public StringMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C0")]
	public class StringSetReader : SmartSetRefBase<string, StringSet>, ISmartSetRefReader<string>, ISmartRef, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringVar.StringEvent _onAdd;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringVar.StringEvent _onRemove;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StringVar.StringEvent _onChange;

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x187D7AC", Offset = "0x187D7AC", VA = "0x187D7AC", Slot = "20")]
		protected override Action<SetEventData<string>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x187D838", Offset = "0x187D838", VA = "0x187D838")]
		public StringSetReader()
		{
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0x187D884", Offset = "0x187D884", VA = "0x187D884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB88", Offset = "0x90AB88")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<string> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C1")]
	public class StringSetWriter : SmartSetRefWriterBase<string, StringSet>, ISmartSetRefReader<string>, ISmartRef, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringVar.StringEvent _onAdd;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringVar.StringEvent _onRemove;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StringVar.StringEvent _onChange;

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x187D940", Offset = "0x187D940", VA = "0x187D940", Slot = "20")]
		protected override Action<SetEventData<string>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0x187D9C4", Offset = "0x187D9C4", VA = "0x187D9C4", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<string> d)
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0x187DA80", Offset = "0x187DA80", VA = "0x187DA80")]
		public StringSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C2")]
	public class StringReader : SmartDataRefBase<string, StringVar, StringConst, StringMulti>
	{
		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0x187D684", Offset = "0x187D684", VA = "0x187D684", Slot = "18")]
		protected sealed override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x187D714", Offset = "0x187D714", VA = "0x187D714")]
		public StringReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C3")]
	public class StringWriter : SmartDataRefWriter<string, StringVar, StringConst, StringMulti>
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0x187DB18", Offset = "0x187DB18", VA = "0x187DB18", Slot = "18")]
		protected sealed override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0x187DBA8", Offset = "0x187DBA8", VA = "0x187DBA8", Slot = "24")]
		protected sealed override void InvokeUnityEvent(string value)
		{
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0x187DC0C", Offset = "0x187DC0C", VA = "0x187DC0C")]
		public StringWriter()
		{
		}
	}
}
namespace SmartData.SmartString.Data
{
	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF43C", Offset = "0x8EF43C")]
	public class StringConst : SmartConst<string>, ISmartConst<string>, ISmartData<string>, ISmartObject
	{
		[Token(Token = "0x6002C17")]
		[Address(RVA = "0x187CF58", Offset = "0x187CF58", VA = "0x187CF58")]
		public StringConst()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF48C", Offset = "0x8EF48C")]
	public class StringMulti : SmartMulti<string, StringVar>, ISmartMulti<string, StringVar>, ISmartMulti<StringVar>, ISmartMultiBindable<Action<string>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C18")]
		[Address(RVA = "0x187D374", Offset = "0x187D374", VA = "0x187D374")]
		public StringMulti()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF4DC", Offset = "0x8EF4DC")]
	public class StringSet : SmartSet<string>, ISmartDataSet<string>, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable, ISmartSetWriter<string>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C19")]
		[Address(RVA = "0x187D760", Offset = "0x187D760", VA = "0x187D760")]
		public StringSet()
		{
		}
	}
	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF52C", Offset = "0x8EF52C")]
	public class StringVar : SmartVar<string>, ISmartVar<string>, ISmartDataWriter<string>, ISmartObject, ISmartEvent<string>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006C8")]
		public class StringEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x158E124", Offset = "0x158E124", VA = "0x158E124")]
			public StringEvent()
			{
			}
		}

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0x187DACC", Offset = "0x187DACC", VA = "0x187DACC")]
		public StringVar()
		{
		}
	}
}
namespace SmartData.SmartString.Components
{
	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF578", Offset = "0x8EF578")]
	public class ReadSmartString : ReadSmartBase<StringReader>
	{
		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0x1933DFC", Offset = "0x1933DFC", VA = "0x1933DFC")]
		public ReadSmartString()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF5B4", Offset = "0x8EF5B4")]
	public class ReadSmartStringSet : ReadSmartBase<StringSetReader>
	{
		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x1933E48", Offset = "0x1933E48", VA = "0x1933E48")]
		public ReadSmartStringSet()
		{
		}
	}
	[Token(Token = "0x20006CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF5F0", Offset = "0x8EF5F0")]
	public class WriteSmartString : WriteSmartBase<string, StringWriter>
	{
		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x19EC58C", Offset = "0x19EC58C", VA = "0x19EC58C")]
		public WriteSmartString()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF62C", Offset = "0x8EF62C")]
	public class WriteSmartStringSet : WriteSetBase<string, StringSetWriter>
	{
		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0x19EC5D8", Offset = "0x19EC5D8", VA = "0x19EC5D8")]
		public WriteSmartStringSet()
		{
		}
	}
}
namespace SmartData.SmartInt
{
	[Serializable]
	[Token(Token = "0x20006CD")]
	public class IntMultiReader : SmartDataMultiRef<IntMulti, int, IntVar>
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0x16D4AAC", Offset = "0x16D4AAC", VA = "0x16D4AAC")]
		public static implicit operator int(IntMultiReader r)
		{
			return default(int);
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x16D4B00", Offset = "0x16D4B00", VA = "0x16D4B00", Slot = "21")]
		protected override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x16D4B90", Offset = "0x16D4B90", VA = "0x16D4B90")]
		public IntMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CE")]
	public class IntMultiWriter : SmartDataMultiRefWriter<IntMulti, int, IntVar>
	{
		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x16D4BDC", Offset = "0x16D4BDC", VA = "0x16D4BDC")]
		public static implicit operator int(IntMultiWriter r)
		{
			return default(int);
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x16D4C30", Offset = "0x16D4C30", VA = "0x16D4C30", Slot = "21")]
		protected override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0x16D4CC0", Offset = "0x16D4CC0", VA = "0x16D4CC0", Slot = "26")]
		protected sealed override void InvokeUnityEvent(int value)
		{
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0x16D4D24", Offset = "0x16D4D24", VA = "0x16D4D24")]
		public IntMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CF")]
	public class IntSetReader : SmartSetRefBase<int, IntSet>, ISmartSetRefReader<int>, ISmartRef, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable
	{
		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntVar.IntEvent _onAdd;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntVar.IntEvent _onRemove;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVar.IntEvent _onChange;

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x16D4F44", Offset = "0x16D4F44", VA = "0x16D4F44", Slot = "20")]
		protected override Action<SetEventData<int>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x16D4FD0", Offset = "0x16D4FD0", VA = "0x16D4FD0")]
		public IntSetReader()
		{
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x16D501C", Offset = "0x16D501C", VA = "0x16D501C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AB98", Offset = "0x90AB98")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<int> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D0")]
	public class IntSetWriter : SmartSetRefWriterBase<int, IntSet>, ISmartSetRefReader<int>, ISmartRef, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntVar.IntEvent _onAdd;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntVar.IntEvent _onRemove;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVar.IntEvent _onChange;

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x16D50D8", Offset = "0x16D50D8", VA = "0x16D50D8", Slot = "20")]
		protected override Action<SetEventData<int>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x16D515C", Offset = "0x16D515C", VA = "0x16D515C", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<int> d)
		{
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0x16D5218", Offset = "0x16D5218", VA = "0x16D5218")]
		public IntSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D1")]
	public class IntReader : SmartDataRefBase<int, IntVar, IntConst, IntMulti>
	{
		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x16D4E1C", Offset = "0x16D4E1C", VA = "0x16D4E1C", Slot = "18")]
		protected sealed override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0x16D4EAC", Offset = "0x16D4EAC", VA = "0x16D4EAC")]
		public IntReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D2")]
	public class IntWriter : SmartDataRefWriter<int, IntVar, IntConst, IntMulti>
	{
		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x16D52B0", Offset = "0x16D52B0", VA = "0x16D52B0", Slot = "18")]
		protected sealed override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x16D5340", Offset = "0x16D5340", VA = "0x16D5340", Slot = "24")]
		protected sealed override void InvokeUnityEvent(int value)
		{
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x16D53A4", Offset = "0x16D53A4", VA = "0x16D53A4")]
		public IntWriter()
		{
		}
	}
}
namespace SmartData.SmartInt.Components
{
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF668", Offset = "0x8EF668")]
	public class ReadSmartInt : ReadSmartBase<IntReader>
	{
		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x1933D64", Offset = "0x1933D64", VA = "0x1933D64")]
		public ReadSmartInt()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF6A4", Offset = "0x8EF6A4")]
	public class ReadSmartIntSet : ReadSmartBase<IntSetReader>
	{
		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x1933DB0", Offset = "0x1933DB0", VA = "0x1933DB0")]
		public ReadSmartIntSet()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF6E0", Offset = "0x8EF6E0")]
	public class WriteSmartInt : WriteSmartBase<int, IntWriter>
	{
		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x19EC4F4", Offset = "0x19EC4F4", VA = "0x19EC4F4")]
		public WriteSmartInt()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF71C", Offset = "0x8EF71C")]
	public class WriteSmartIntSet : WriteSetBase<int, IntSetWriter>
	{
		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x19EC540", Offset = "0x19EC540", VA = "0x19EC540")]
		public WriteSmartIntSet()
		{
		}
	}
}
namespace SmartData.SmartInt.Data
{
	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF758", Offset = "0x8EF758")]
	public class IntConst : SmartConst<int>, ISmartConst<int>, ISmartData<int>, ISmartObject
	{
		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x16D4A14", Offset = "0x16D4A14", VA = "0x16D4A14")]
		public IntConst()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF7A8", Offset = "0x8EF7A8")]
	public class IntMulti : SmartMulti<int, IntVar>, ISmartMulti<int, IntVar>, ISmartMulti<IntVar>, ISmartMultiBindable<Action<int>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x16D4A60", Offset = "0x16D4A60", VA = "0x16D4A60")]
		public IntMulti()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF7F8", Offset = "0x8EF7F8")]
	public class IntSet : SmartSet<int>, ISmartDataSet<int>, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable, ISmartSetWriter<int>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C38")]
		[Address(RVA = "0x16D4EF8", Offset = "0x16D4EF8", VA = "0x16D4EF8")]
		public IntSet()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF848", Offset = "0x8EF848")]
	public class IntVar : SmartVar<int>, ISmartVar<int>, ISmartDataWriter<int>, ISmartObject, ISmartEvent<int>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006DB")]
		public class IntEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x16AE280", Offset = "0x16AE280", VA = "0x16AE280")]
			public IntEvent()
			{
			}
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x16D5264", Offset = "0x16D5264", VA = "0x16D5264")]
		public IntVar()
		{
		}
	}
}
namespace SmartData.SmartBool
{
	[Serializable]
	[Token(Token = "0x20006DC")]
	public class BoolMultiReader : SmartDataMultiRef<BoolMulti, bool, BoolVar>
	{
		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x177BB58", Offset = "0x177BB58", VA = "0x177BB58")]
		public static implicit operator bool(BoolMultiReader r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0x177BBAC", Offset = "0x177BBAC", VA = "0x177BBAC", Slot = "21")]
		protected override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x177BC3C", Offset = "0x177BC3C", VA = "0x177BC3C")]
		public BoolMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DD")]
	public class BoolMultiWriter : SmartDataMultiRefWriter<BoolMulti, bool, BoolVar>
	{
		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0x177BC88", Offset = "0x177BC88", VA = "0x177BC88")]
		public static implicit operator bool(BoolMultiWriter r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x177BCDC", Offset = "0x177BCDC", VA = "0x177BCDC", Slot = "21")]
		protected override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0x177BD6C", Offset = "0x177BD6C", VA = "0x177BD6C", Slot = "26")]
		protected sealed override void InvokeUnityEvent(bool value)
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x177BDD0", Offset = "0x177BDD0", VA = "0x177BDD0")]
		public BoolMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DE")]
	public class BoolSetReader : SmartSetRefBase<bool, BoolSet>, ISmartSetRefReader<bool>, ISmartRef, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVar.BoolEvent _onAdd;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVar.BoolEvent _onRemove;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVar.BoolEvent _onChange;

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x177BF44", Offset = "0x177BF44", VA = "0x177BF44", Slot = "20")]
		protected override Action<SetEventData<bool>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x177BFD0", Offset = "0x177BFD0", VA = "0x177BFD0")]
		public BoolSetReader()
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x177C01C", Offset = "0x177C01C", VA = "0x177C01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABA8", Offset = "0x90ABA8")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<bool> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DF")]
	public class BoolSetWriter : SmartSetRefWriterBase<bool, BoolSet>, ISmartSetRefReader<bool>, ISmartRef, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVar.BoolEvent _onAdd;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVar.BoolEvent _onRemove;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVar.BoolEvent _onChange;

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x177C0DC", Offset = "0x177C0DC", VA = "0x177C0DC", Slot = "20")]
		protected override Action<SetEventData<bool>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x177C160", Offset = "0x177C160", VA = "0x177C160", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<bool> d)
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x177C220", Offset = "0x177C220", VA = "0x177C220")]
		public BoolSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E0")]
	public class BoolReader : SmartDataRefBase<bool, BoolVar, BoolConst, BoolMulti>
	{
		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x177BE1C", Offset = "0x177BE1C", VA = "0x177BE1C", Slot = "18")]
		protected sealed override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x177BEAC", Offset = "0x177BEAC", VA = "0x177BEAC")]
		public BoolReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E1")]
	public class BoolWriter : SmartDataRefWriter<bool, BoolVar, BoolConst, BoolMulti>
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x177C2B8", Offset = "0x177C2B8", VA = "0x177C2B8", Slot = "18")]
		protected sealed override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x177C348", Offset = "0x177C348", VA = "0x177C348", Slot = "24")]
		protected sealed override void InvokeUnityEvent(bool value)
		{
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x177C3AC", Offset = "0x177C3AC", VA = "0x177C3AC")]
		public BoolWriter()
		{
		}
	}
}
namespace SmartData.SmartBool.Components
{
	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF894", Offset = "0x8EF894")]
	public class ReadSmartBool : ReadSmartBase<BoolReader>
	{
		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x1933C34", Offset = "0x1933C34", VA = "0x1933C34")]
		public ReadSmartBool()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF8D0", Offset = "0x8EF8D0")]
	public class ReadSmartBoolSet : ReadSmartBase<BoolSetReader>
	{
		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x1933C80", Offset = "0x1933C80", VA = "0x1933C80")]
		public ReadSmartBoolSet()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF90C", Offset = "0x8EF90C")]
	public class WriteSmartBool : WriteSmartBase<bool, BoolWriter>
	{
		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x19EC3C4", Offset = "0x19EC3C4", VA = "0x19EC3C4")]
		public WriteSmartBool()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EF948", Offset = "0x8EF948")]
	public class WriteSmartBoolSet : WriteSetBase<bool, BoolSetWriter>
	{
		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x19EC410", Offset = "0x19EC410", VA = "0x19EC410")]
		public WriteSmartBoolSet()
		{
		}
	}
}
namespace SmartData.SmartBool.Data
{
	[Token(Token = "0x20006E6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF984", Offset = "0x8EF984")]
	public class BoolConst : SmartConst<bool>, ISmartConst<bool>, ISmartData<bool>, ISmartObject
	{
		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x177BAC0", Offset = "0x177BAC0", VA = "0x177BAC0")]
		public BoolConst()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EF9D4", Offset = "0x8EF9D4")]
	public class BoolMulti : SmartMulti<bool, BoolVar>, ISmartMulti<bool, BoolVar>, ISmartMulti<BoolVar>, ISmartMultiBindable<Action<bool>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x177BB0C", Offset = "0x177BB0C", VA = "0x177BB0C")]
		public BoolMulti()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFA24", Offset = "0x8EFA24")]
	public class BoolSet : SmartSet<bool>, ISmartDataSet<bool>, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable, ISmartSetWriter<bool>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C53")]
		[Address(RVA = "0x177BEF8", Offset = "0x177BEF8", VA = "0x177BEF8")]
		public BoolSet()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFA74", Offset = "0x8EFA74")]
	public class BoolVar : SmartVar<bool>, ISmartVar<bool>, ISmartDataWriter<bool>, ISmartObject, ISmartEvent<bool>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006EA")]
		public class BoolEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x1767B84", Offset = "0x1767B84", VA = "0x1767B84")]
			public BoolEvent()
			{
			}
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x177C26C", Offset = "0x177C26C", VA = "0x177C26C")]
		public BoolVar()
		{
		}
	}
}
namespace SmartData.Examples
{
	[Token(Token = "0x20006EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFAC0", Offset = "0x8EFAC0")]
	public class SmartDataExample_CharacterController : MonoBehaviour
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController _cc;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x15C08A4", Offset = "0x15C08A4", VA = "0x15C08A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0x15C0900", Offset = "0x15C0900", VA = "0x15C0900")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x15C09F4", Offset = "0x15C09F4", VA = "0x15C09F4")]
		public SmartDataExample_CharacterController()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class SmartDataExample_Damageable : MonoBehaviour
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatWriter hp;

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x15C0AD4", Offset = "0x15C0AD4", VA = "0x15C0AD4")]
		public void Damage(float damage)
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0x15C0BE4", Offset = "0x15C0BE4", VA = "0x15C0BE4")]
		public SmartDataExample_Damageable()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFB20", Offset = "0x8EFB20")]
	public class SmartDataExample_DamageOnCollision : MonoBehaviour
	{
		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x15C0A04", Offset = "0x15C0A04", VA = "0x15C0A04")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0x15C0BDC", Offset = "0x15C0BDC", VA = "0x15C0BDC")]
		public SmartDataExample_DamageOnCollision()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class SmartDataExample_Notes : MonoBehaviour
	{
		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0x15C0BEC", Offset = "0x15C0BEC", VA = "0x15C0BEC")]
		public SmartDataExample_Notes()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFB80", Offset = "0x8EFB80")]
	public class SmartDataExample_OnHit : MonoBehaviour
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nameMatch;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventDispatcher onHit;

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0x15C0BF4", Offset = "0x15C0BF4", VA = "0x15C0BF4")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x15C0C58", Offset = "0x15C0C58", VA = "0x15C0C58")]
		public SmartDataExample_OnHit()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFBE0", Offset = "0x8EFBE0")]
	public class SmartDataExample_SetText : MonoBehaviour
	{
		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x15C0C60", Offset = "0x15C0C60", VA = "0x15C0C60")]
		public void SetText(int value)
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x15C0D5C", Offset = "0x15C0D5C", VA = "0x15C0D5C")]
		public void SetText(float value)
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x15C0DC8", Offset = "0x15C0DC8", VA = "0x15C0DC8")]
		public void SetText(bool value)
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x15C0E34", Offset = "0x15C0E34", VA = "0x15C0E34")]
		public void SetText(UnityEngine.Object value)
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x15C0CCC", Offset = "0x15C0CCC", VA = "0x15C0CCC")]
		private void Set(object value)
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x15C0E38", Offset = "0x15C0E38", VA = "0x15C0E38")]
		public SmartDataExample_SetText()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFC40", Offset = "0x8EFC40")]
	public class SmartDataExample02_Damageable : MonoBehaviour
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damagePerHit;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatWriter hp;

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x15C05A4", Offset = "0x15C05A4", VA = "0x15C05A4")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x15C0680", Offset = "0x15C0680", VA = "0x15C0680")]
		public SmartDataExample02_Damageable()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8EFCA0", Offset = "0x8EFCA0")]
	public class SmartDataExample04_BindSmartEvent : MonoBehaviour
	{
		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventListener myEvent;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem _particles;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IRelayBinding _eventBinding;

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x15C0688", Offset = "0x15C0688", VA = "0x15C0688")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x15C075C", Offset = "0x15C075C", VA = "0x15C075C")]
		private void OnEvent()
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0x15C07E8", Offset = "0x15C07E8", VA = "0x15C07E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x15C089C", Offset = "0x15C089C", VA = "0x15C089C")]
		public SmartDataExample04_BindSmartEvent()
		{
		}
	}
}
namespace SmartData.SmartEvent
{
	[Serializable]
	[Token(Token = "0x20006F3")]
	public class EventMultiListener : SmartMultiRef<EventMulti, EventVar>
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _onEvent;

		[Token(Token = "0x170005A4")]
		protected EventVar _event
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x1747418", Offset = "0x1747418", VA = "0x1747418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0x17474F4", Offset = "0x17474F4", VA = "0x17474F4", Slot = "10")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x174761C", Offset = "0x174761C", VA = "0x174761C")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x1747488", Offset = "0x1747488", VA = "0x1747488")]
		protected void InvokeUnityEvent()
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x17474A8", Offset = "0x17474A8", VA = "0x17474A8")]
		public EventMultiListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F4")]
	public class EventMultiDispatcher : EventMultiListener
	{
		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x17473BC", Offset = "0x17473BC", VA = "0x17473BC")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x17474A4", Offset = "0x17474A4", VA = "0x17474A4")]
		public EventMultiDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F5")]
	public class EventListener : SmartRefMultiableBase, ISmartEventRefListener, ISmartRef, ISmartEvent, ISmartObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected EventVar _smartEvent;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected EventMulti _smartMulti;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected bool _useMulti;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent _onEvent;

		[Token(Token = "0x170005A5")]
		public override bool isValid
		{
			[Token(Token = "0x6002C73")]
			[Address(RVA = "0x1746B0C", Offset = "0x1746B0C", VA = "0x1746B0C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A6")]
		public override string name
		{
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x1746B84", Offset = "0x1746B84", VA = "0x1746B84", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A7")]
		public virtual IRelayLink relay
		{
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x17458AC", Offset = "0x17458AC", VA = "0x17458AC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		protected EventVar _event
		{
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x174593C", Offset = "0x174593C", VA = "0x174593C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x1746BD0", Offset = "0x1746BD0", VA = "0x1746BD0", Slot = "13")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x1746BD4", Offset = "0x1746BD4", VA = "0x1746BD4", Slot = "14")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x1746CE4", Offset = "0x1746CE4", VA = "0x1746CE4", Slot = "10")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x1746E58", Offset = "0x1746E58", VA = "0x1746E58", Slot = "12")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x17459B4", Offset = "0x17459B4", VA = "0x17459B4")]
		protected void InvokeUnityEvent()
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x1745A40", Offset = "0x1745A40", VA = "0x1745A40")]
		public EventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F6")]
	public class EventDispatcher : EventListener, ISmartEventRefDispatcher, ISmartRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Relay _localEvent;

		[Token(Token = "0x170005A9")]
		public override IRelayLink relay
		{
			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0x1745860", Offset = "0x1745860", VA = "0x1745860", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x173C5D8", Offset = "0x173C5D8", VA = "0x173C5D8", Slot = "16")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x17459D0", Offset = "0x17459D0", VA = "0x17459D0")]
		public EventDispatcher()
		{
		}
	}
}
namespace SmartData.SmartEvent.Data
{
	[Token(Token = "0x20006F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFD00", Offset = "0x8EFD00")]
	public class EventMulti : SmartMulti<EventVar>
	{
		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x1747300", Offset = "0x1747300", VA = "0x1747300")]
		public IRelayBinding BindListener(Action listener, int index)
		{
			return null;
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x1747370", Offset = "0x1747370", VA = "0x1747370")]
		public EventMulti()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFD50", Offset = "0x8EFD50")]
	public class EventVar : SmartDecorableBase, ISmartEvent, ISmartObject
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Relay _relay;

		[Token(Token = "0x170005AA")]
		public IRelayLink relay
		{
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0x1746BB4", Offset = "0x1746BB4", VA = "0x1746BB4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x1746D84", Offset = "0x1746D84", VA = "0x1746D84", Slot = "9")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x173C6C0", Offset = "0x173C6C0", VA = "0x173C6C0")]
		public BlockFlags Dispatch()
		{
			return default(BlockFlags);
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x174A33C", Offset = "0x174A33C", VA = "0x174A33C")]
		public EventVar()
		{
		}
	}
}
namespace SmartData.SmartEvent.Components
{
	[Token(Token = "0x20006F9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFDA0", Offset = "0x8EFDA0")]
	public class DispatchSmartEvent : MonoBehaviour
	{
		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAB24", Offset = "0x8FAB24")]
		[ForceHideEvent]
		private EventDispatcher _event;

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0x173C5C0", Offset = "0x173C5C0", VA = "0x173C5C0")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0x173C6A8", Offset = "0x173C6A8", VA = "0x173C6A8")]
		public void DispatchEvent(EventVar e)
		{
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0x173C7DC", Offset = "0x173C7DC", VA = "0x173C7DC")]
		public DispatchSmartEvent()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFDDC", Offset = "0x8EFDDC")]
	public class ListenSmartEvent : ReadSmartBase<EventListener>
	{
		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x1B1FFBC", Offset = "0x1B1FFBC", VA = "0x1B1FFBC")]
		public ListenSmartEvent()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFE18", Offset = "0x8EFE18")]
	public class SmartEventOnLifecycle : MonoBehaviour
	{
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAB7C", Offset = "0x8FAB7C")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAB7C", Offset = "0x8FAB7C")]
		[SerializeField]
		private EventDispatcher _onAwake;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FABDC", Offset = "0x8FABDC")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FABDC", Offset = "0x8FABDC")]
		[SerializeField]
		private EventDispatcher _onStart;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAC3C", Offset = "0x8FAC3C")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAC3C", Offset = "0x8FAC3C")]
		[SerializeField]
		private EventDispatcher _onEnable;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAC9C", Offset = "0x8FAC9C")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAC9C", Offset = "0x8FAC9C")]
		[SerializeField]
		private EventDispatcher _onDisable;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FACFC", Offset = "0x8FACFC")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FACFC", Offset = "0x8FACFC")]
		private EventDispatcher _onDestroy;

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x15C2978", Offset = "0x15C2978", VA = "0x15C2978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0x15C2BF4", Offset = "0x15C2BF4", VA = "0x15C2BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0x15C2BFC", Offset = "0x15C2BFC", VA = "0x15C2BFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x15C2C04", Offset = "0x15C2C04", VA = "0x15C2C04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0x15C2C0C", Offset = "0x15C2C0C", VA = "0x15C2C0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x15C2B18", Offset = "0x15C2B18", VA = "0x15C2B18")]
		private void SetReceive(bool enable, params EventDispatcher[] es)
		{
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x15C2BA8", Offset = "0x15C2BA8", VA = "0x15C2BA8")]
		private void Dispatch(EventDispatcher e)
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x15C2ECC", Offset = "0x15C2ECC", VA = "0x15C2ECC")]
		public SmartEventOnLifecycle()
		{
		}
	}
}
namespace SmartData.SmartFloat
{
	[Serializable]
	[Token(Token = "0x20006FC")]
	public class FloatMultiReader : SmartDataMultiRef<FloatMulti, float, FloatVar>
	{
		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0x18A0BE8", Offset = "0x18A0BE8", VA = "0x18A0BE8")]
		public static implicit operator float(FloatMultiReader r)
		{
			return default(float);
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x18A0C3C", Offset = "0x18A0C3C", VA = "0x18A0C3C", Slot = "21")]
		protected override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0x18A0CCC", Offset = "0x18A0CCC", VA = "0x18A0CCC")]
		public FloatMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FD")]
	public class FloatMultiWriter : SmartDataMultiRefWriter<FloatMulti, float, FloatVar>
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x18A0D18", Offset = "0x18A0D18", VA = "0x18A0D18")]
		public static implicit operator float(FloatMultiWriter r)
		{
			return default(float);
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x18A0D6C", Offset = "0x18A0D6C", VA = "0x18A0D6C", Slot = "21")]
		protected override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x18A0DFC", Offset = "0x18A0DFC", VA = "0x18A0DFC", Slot = "26")]
		protected sealed override void InvokeUnityEvent(float value)
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0x18A0E60", Offset = "0x18A0E60", VA = "0x18A0E60")]
		public FloatMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FE")]
	public class FloatSetReader : SmartSetRefBase<float, FloatSet>, ISmartSetRefReader<float>, ISmartRef, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable
	{
		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVar.FloatEvent _onAdd;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVar.FloatEvent _onRemove;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVar.FloatEvent _onChange;

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x18A10E0", Offset = "0x18A10E0", VA = "0x18A10E0", Slot = "20")]
		protected override Action<SetEventData<float>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0x18A116C", Offset = "0x18A116C", VA = "0x18A116C")]
		public FloatSetReader()
		{
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0x18A11B8", Offset = "0x18A11B8", VA = "0x18A11B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABB8", Offset = "0x90ABB8")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<float> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FF")]
	public class FloatSetWriter : SmartSetRefWriterBase<float, FloatSet>, ISmartSetRefReader<float>, ISmartRef, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVar.FloatEvent _onAdd;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVar.FloatEvent _onRemove;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVar.FloatEvent _onChange;

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x18A1280", Offset = "0x18A1280", VA = "0x18A1280", Slot = "20")]
		protected override Action<SetEventData<float>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x18A1304", Offset = "0x18A1304", VA = "0x18A1304", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<float> d)
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0x18A13CC", Offset = "0x18A13CC", VA = "0x18A13CC")]
		public FloatSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000700")]
	public class FloatReader : SmartDataRefBase<float, FloatVar, FloatConst, FloatMulti>
	{
		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x18A0FB8", Offset = "0x18A0FB8", VA = "0x18A0FB8", Slot = "18")]
		protected sealed override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0x18A1048", Offset = "0x18A1048", VA = "0x18A1048")]
		public FloatReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000701")]
	public class FloatWriter : SmartDataRefWriter<float, FloatVar, FloatConst, FloatMulti>
	{
		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x18A1464", Offset = "0x18A1464", VA = "0x18A1464", Slot = "18")]
		protected sealed override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x18A14F4", Offset = "0x18A14F4", VA = "0x18A14F4", Slot = "24")]
		protected sealed override void InvokeUnityEvent(float value)
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x18A1558", Offset = "0x18A1558", VA = "0x18A1558")]
		public FloatWriter()
		{
		}
	}
}
namespace SmartData.SmartFloat.Components
{
	[Token(Token = "0x2000702")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFE54", Offset = "0x8EFE54")]
	public class ReadSmartFloat : ReadSmartBase<FloatReader>
	{
		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0x1933CCC", Offset = "0x1933CCC", VA = "0x1933CCC")]
		public ReadSmartFloat()
		{
		}
	}
	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFE90", Offset = "0x8EFE90")]
	public class ReadSmartFloatSet : ReadSmartBase<FloatSetReader>
	{
		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0x1933D18", Offset = "0x1933D18", VA = "0x1933D18")]
		public ReadSmartFloatSet()
		{
		}
	}
	[Token(Token = "0x2000704")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFECC", Offset = "0x8EFECC")]
	public class WriteSmartFloat : WriteSmartBase<float, FloatWriter>
	{
		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0x19EC45C", Offset = "0x19EC45C", VA = "0x19EC45C")]
		public WriteSmartFloat()
		{
		}
	}
	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8EFF08", Offset = "0x8EFF08")]
	public class WriteSmartFloatSet : WriteSetBase<float, FloatSetWriter>
	{
		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0x19EC4A8", Offset = "0x19EC4A8", VA = "0x19EC4A8")]
		public WriteSmartFloatSet()
		{
		}
	}
}
namespace SmartData.SmartFloat.Data
{
	[Token(Token = "0x2000706")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFF44", Offset = "0x8EFF44")]
	public class FloatConst : SmartConst<float>, ISmartConst<float>, ISmartData<float>, ISmartObject
	{
		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0x18A0B50", Offset = "0x18A0B50", VA = "0x18A0B50")]
		public FloatConst()
		{
		}
	}
	[Token(Token = "0x2000707")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFF94", Offset = "0x8EFF94")]
	public class FloatMulti : SmartMulti<float, FloatVar>, ISmartMulti<float, FloatVar>, ISmartMulti<FloatVar>, ISmartMultiBindable<Action<float>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x18A0B9C", Offset = "0x18A0B9C", VA = "0x18A0B9C")]
		public FloatMulti()
		{
		}
	}
	[Token(Token = "0x2000708")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8EFFE4", Offset = "0x8EFFE4")]
	public class FloatSet : SmartSet<float>, ISmartDataSet<float>, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable, ISmartSetWriter<float>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0x18A1094", Offset = "0x18A1094", VA = "0x18A1094")]
		public FloatSet()
		{
		}
	}
	[Token(Token = "0x2000709")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8F0034", Offset = "0x8F0034")]
	public class FloatVar : SmartVar<float>, ISmartVar<float>, ISmartDataWriter<float>, ISmartObject, ISmartEvent<float>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x200070A")]
		public class FloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0x15F3460", Offset = "0x15F3460", VA = "0x15F3460")]
			public FloatEvent()
			{
			}
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x18A1418", Offset = "0x18A1418", VA = "0x18A1418")]
		public FloatVar()
		{
		}
	}
}
namespace SmartData.SmartFloat.Decorators
{
	[Token(Token = "0x200070B")]
	[AttributeAttribute(Name = "DecoratorDescriptionAttribute", RVA = "0x8F0080", Offset = "0x8F0080")]
	public class SmartFloatRangeDecorator : SmartDataDecoratorBase<float>
	{
		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _min;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _max;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Relay<SmartFloatRangeDecorator, float, float> _onRangeClamped;

		[Token(Token = "0x170005AB")]
		public float min
		{
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0x15C2ED4", Offset = "0x15C2ED4", VA = "0x15C2ED4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AC")]
		public float max
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x15C2EDC", Offset = "0x15C2EDC", VA = "0x15C2EDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AD")]
		public IRelayLink<SmartFloatRangeDecorator, float, float> onRangeClamped
		{
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0x15C2EE4", Offset = "0x15C2EE4", VA = "0x15C2EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0x15C2EEC", Offset = "0x15C2EEC", VA = "0x15C2EEC", Slot = "9")]
		public override float OnUpdated(float oldValue, float newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return default(float);
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x15C2F7C", Offset = "0x15C2F7C", VA = "0x15C2F7C")]
		public SmartFloatRangeDecorator()
		{
		}
	}
}
namespace SmartData.Interfaces
{
	[Token(Token = "0x200070C")]
	public interface ISmartObject
	{
	}
	[Token(Token = "0x200070D")]
	public interface ISmartEvent : ISmartObject
	{
		[Token(Token = "0x170005AE")]
		IRelayLink relay
		{
			[Token(Token = "0x6002CB2")]
			get;
		}

		[Token(Token = "0x6002CB3")]
		IRelayBinding BindListener(Action listener);
	}
	[Token(Token = "0x200070E")]
	public interface ISmartEvent<TData> : ISmartObject
	{
		[Token(Token = "0x170005AF")]
		IRelayLink<TData> relay
		{
			[Token(Token = "0x6002CB4")]
			get;
		}

		[Token(Token = "0x6002CB5")]
		IRelayBinding BindListener(Action<TData> listener, bool callNow = false);

		[Token(Token = "0x6002CB6")]
		IRelayBinding BindListener(Action listener);
	}
	[Token(Token = "0x200070F")]
	public interface ISmartEventDispatcher : ISmartObject
	{
		[Token(Token = "0x6002CB7")]
		void Dispatch();
	}
	[Token(Token = "0x2000710")]
	public interface ISmartData<TData> : ISmartObject
	{
		[Token(Token = "0x170005B0")]
		TData value
		{
			[Token(Token = "0x6002CB8")]
			get;
		}
	}
	[Token(Token = "0x2000711")]
	public interface ISmartDataWriter<TData> : ISmartObject
	{
		[Token(Token = "0x170005B1")]
		TData value
		{
			[Token(Token = "0x6002CB9")]
			get;
			[Token(Token = "0x6002CBA")]
			set;
		}

		[Token(Token = "0x170005B2")]
		TData defaultValue
		{
			[Token(Token = "0x6002CBB")]
			get;
		}

		[Token(Token = "0x6002CBC")]
		void SetToDefault();
	}
	[Token(Token = "0x2000712")]
	public interface ISmartAutoBinder : ISmartObject
	{
		[Token(Token = "0x6002CBD")]
		void RequestCtorAutoUnityEventBinding(ISmartRef r);
	}
	[Token(Token = "0x2000713")]
	public interface ISmartMultiAutoBinder : ISmartObject
	{
		[Token(Token = "0x6002CBE")]
		void RequestCtorAutoUnityEventBinding(ISmartRef r, int index);
	}
	[Token(Token = "0x2000714")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F00B8", Offset = "0x8F00B8")]
	public interface ISmartSet<TData> : ISmartObject, IEnumerable<TData>, IEnumerable
	{
		[Token(Token = "0x170005B3")]
		int count
		{
			[Token(Token = "0x6002CBF")]
			get;
		}

		[Token(Token = "0x170005B4")]
		TData Item
		{
			[Token(Token = "0x6002CC0")]
			get;
		}

		[Token(Token = "0x170005B5")]
		IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002CC1")]
			get;
		}

		[Token(Token = "0x6002CC2")]
		IRelayBinding BindListener(Action listener);

		[Token(Token = "0x6002CC3")]
		IRelayBinding BindListener(Action<SetEventData<TData>> listener);
	}
	[Token(Token = "0x2000715")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F00F0", Offset = "0x8F00F0")]
	public interface ISmartSetWriter<TData> : ISmartObject
	{
		[Token(Token = "0x170005B6")]
		TData Item
		{
			[Token(Token = "0x6002CC4")]
			get;
			[Token(Token = "0x6002CC5")]
			set;
		}

		[Token(Token = "0x6002CC6")]
		bool Add(TData element, bool allowDuplicates = true);

		[Token(Token = "0x6002CC7")]
		int Remove(TData element);
	}
	[Token(Token = "0x2000716")]
	public interface ISmartSetWriter : ISmartObject
	{
		[Token(Token = "0x6002CC8")]
		bool RemoveAt(int index);
	}
	[Token(Token = "0x2000717")]
	public interface ISmartRef
	{
		[Token(Token = "0x170005B7")]
		bool isValid
		{
			[Token(Token = "0x6002CC9")]
			get;
		}

		[Token(Token = "0x170005B8")]
		bool unityEventOnReceive
		{
			[Token(Token = "0x6002CCA")]
			get;
			[Token(Token = "0x6002CCB")]
			set;
		}

		[Token(Token = "0x6002CCC")]
		void UnbindUnityEventOnDestroy(bool enableUnityEventNow = true);
	}
	[Token(Token = "0x2000718")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F0128", Offset = "0x8F0128")]
	public interface ISmartMulti<TSmart> where TSmart : ISmartObject
	{
		[Token(Token = "0x170005B9")]
		TSmart Item
		{
			[Token(Token = "0x6002CCD")]
			get;
		}
	}
	[Token(Token = "0x2000719")]
	public interface ISmartMultiBindable<TDelegate>
	{
		[Token(Token = "0x6002CCE")]
		IRelayBinding BindListener(TDelegate listener, int index, bool callNow = false);
	}
	[Token(Token = "0x200071A")]
	public interface ISmartMultiRef
	{
		[Token(Token = "0x170005BA")]
		int index
		{
			[Token(Token = "0x6002CCF")]
			get;
			[Token(Token = "0x6002CD0")]
			set;
		}
	}
	[Token(Token = "0x200071B")]
	public interface ISmartConst<TData> : ISmartData<TData>, ISmartObject
	{
	}
	[Token(Token = "0x200071C")]
	public interface ISmartVar<TData> : ISmartDataWriter<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartAutoBinder
	{
	}
	[Token(Token = "0x200071D")]
	public interface ISmartMulti<TData, TSmart> : ISmartMulti<TSmart>, ISmartMultiBindable<Action<TData>>, ISmartMultiAutoBinder, ISmartObject where TSmart : ISmartVar<TData>, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x200071E")]
	public interface ISmartEventMulti : ISmartMulti<ISmartEvent>, ISmartMultiBindable<Action>, ISmartMultiAutoBinder, ISmartObject
	{
	}
	[Token(Token = "0x200071F")]
	public interface ISmartDataSet<TData> : ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter, ISmartAutoBinder
	{
	}
	[Token(Token = "0x2000720")]
	public interface ISmartEventRefListener : ISmartRef, ISmartEvent, ISmartObject
	{
	}
	[Token(Token = "0x2000721")]
	public interface ISmartEventRefDispatcher : ISmartRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x2000722")]
	public interface ISmartRefReader<TData> : ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>
	{
	}
	[Token(Token = "0x2000723")]
	public interface ISmartRefWriter<TData> : ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartDataWriter<TData>
	{
	}
	[Token(Token = "0x2000724")]
	public interface ISmartEventMultiRefReader : ISmartRef, ISmartMultiRef, ISmartEvent, ISmartObject
	{
	}
	[Token(Token = "0x2000725")]
	public interface ISmartEventMultiRefWriter : ISmartRef, ISmartMultiRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x2000726")]
	public interface ISmartDataMultiRefReader<TData, TSmart> : ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject where TSmart : ISmartVar<TData>
	{
	}
	[Token(Token = "0x2000727")]
	public interface ISmartDataMultiRefWriter<TData, TSmart> : ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, ISmartDataWriter<TData> where TSmart : ISmartVar<TData>
	{
	}
	[Token(Token = "0x2000728")]
	public interface ISmartSetRefReader<TData> : ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable
	{
	}
	[Token(Token = "0x2000729")]
	public interface ISmartSetRefWriter<TData> : ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter
	{
	}
}
namespace SmartData.Abstract
{
	[Token(Token = "0x200072A")]
	public abstract class SmartComponentBase : MonoBehaviour
	{
		[Token(Token = "0x170005BB")]
		protected virtual bool bindEvents
		{
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0x15C0418", Offset = "0x15C0418", VA = "0x15C0418", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BC")]
		public abstract bool isValid
		{
			[Token(Token = "0x6002CD6")]
			get;
		}

		[Token(Token = "0x6002CD2")]
		protected abstract void EnableUnityEvents(bool enable);

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0x15C0420", Offset = "0x15C0420", VA = "0x15C0420")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0x15C050C", Offset = "0x15C050C", VA = "0x15C050C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x15C0554", Offset = "0x15C0554", VA = "0x15C0554")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0x15C059C", Offset = "0x15C059C", VA = "0x15C059C")]
		protected SmartComponentBase()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public abstract class ReadSmartBase<TRef> : SmartComponentBase where TRef : ISmartRef
	{
		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAE20", Offset = "0x8FAE20")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAE20", Offset = "0x8FAE20")]
		[SerializeField]
		protected TRef[] _data;

		[Token(Token = "0x170005BD")]
		public override bool isValid
		{
			[Token(Token = "0x6002CD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CD9")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CDA")]
		protected ReadSmartBase()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public abstract class WriteSmartBase<TData, TRef> : SmartComponentBase where TRef : ISmartRefWriter<TData>
	{
		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAE74", Offset = "0x8FAE74")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAE74", Offset = "0x8FAE74")]
		[ForceHideEvent]
		protected TRef _data;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FAED8", Offset = "0x8FAED8")]
		private TData _valueToSet;

		[Token(Token = "0x170005BE")]
		protected override bool bindEvents
		{
			[Token(Token = "0x6002CDB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BF")]
		public override bool isValid
		{
			[Token(Token = "0x6002CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C0")]
		public TData value
		{
			[Token(Token = "0x6002CDD")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002CDE")]
			set
			{
			}
		}

		[Token(Token = "0x6002CDF")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002CE0")]
		public void Set()
		{
		}

		[Token(Token = "0x6002CE1")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CE2")]
		protected WriteSmartBase()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public abstract class WriteSetBase<TData, TRef> : SmartComponentBase where TRef : ISmartSetRefWriter<TData>
	{
		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8FAF24", Offset = "0x8FAF24")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8FAF24", Offset = "0x8FAF24")]
		[ForceHideEvent]
		protected TRef _data;

		[Token(Token = "0x170005C1")]
		public override bool isValid
		{
			[Token(Token = "0x6002CE3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005C2")]
		protected override bool bindEvents
		{
			[Token(Token = "0x6002CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CE5")]
		public void Add(TData val)
		{
		}

		[Token(Token = "0x6002CE6")]
		public void Remove(TData val)
		{
		}

		[Token(Token = "0x6002CE7")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6002CE8")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CE9")]
		protected WriteSetBase()
		{
		}
	}
	[Token(Token = "0x200072E")]
	public abstract class SmartBase : ScriptableObject
	{
		[Token(Token = "0x200072F")]
		protected class AutoBindingHelper
		{
			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<ISmartRef> _refsToBind;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAF98", Offset = "0x8FAF98")]
			private bool <hasRefsToBind>k__BackingField;

			[Token(Token = "0x170005C3")]
			public bool hasRefsToBind
			{
				[Token(Token = "0x6002CED")]
				[Address(RVA = "0x158B554", Offset = "0x158B554", VA = "0x158B554")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABC8", Offset = "0x90ABC8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002CEE")]
				[Address(RVA = "0x158B55C", Offset = "0x158B55C", VA = "0x158B55C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABD8", Offset = "0x90ABD8")]
				private set
				{
				}
			}

			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0x158B568", Offset = "0x158B568", VA = "0x158B568")]
			public void RequestAutoBinding(ISmartRef r)
			{
			}

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x158B65C", Offset = "0x158B65C", VA = "0x158B65C")]
			public void AutoBind()
			{
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x158B684", Offset = "0x158B684", VA = "0x158B684")]
			public static void AutoBind(List<ISmartRef> refs)
			{
			}

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x158B7B4", Offset = "0x158B7B4", VA = "0x158B7B4")]
			public AutoBindingHelper()
			{
			}
		}

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _description;

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x15C00C0", Offset = "0x15C00C0", VA = "0x15C00C0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x15C00C4", Offset = "0x15C00C4", VA = "0x15C00C4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x15C00C8", Offset = "0x15C00C8", VA = "0x15C00C8")]
		protected SmartBase()
		{
		}
	}
	[Token(Token = "0x2000730")]
	public abstract class SmartBindableBase : SmartBase
	{
		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected SmartDecoratorBase[] _decorators;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SmartDecoratorBase> _tempGetDecorators;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool _hasDecorators;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected AutoBindingHelper _binder;

		[Token(Token = "0x170005C4")]
		protected int _tempDecoratorCount
		{
			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x15C00D0", Offset = "0x15C00D0", VA = "0x15C00D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0x15C014C", Offset = "0x15C014C", VA = "0x15C014C", Slot = "6")]
		public void RequestCtorAutoUnityEventBinding(ISmartRef r)
		{
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x15C0168", Offset = "0x15C0168", VA = "0x15C0168")]
		protected int PopulateTempDecorators(Type t, SmartDecoratorBase[] input, bool clear)
		{
			return default(int);
		}

		[Token(Token = "0x6002CF6")]
		protected int FillResultDecorators<TDecorator>(TDecorator[] results) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x15C02F4", Offset = "0x15C02F4", VA = "0x15C02F4", Slot = "7")]
		protected virtual void EvalHasDecorators()
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0x15C0310", Offset = "0x15C0310", VA = "0x15C0310", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x15C031C", Offset = "0x15C031C", VA = "0x15C031C")]
		protected SmartBindableBase()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public abstract class SmartDecorableBase : SmartBindableBase
	{
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<SmartMultiBase, SmartDecoratorBase[]> _multiDecorators;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SmartMultiBase, int> _multiParentsPersistent;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAFB8", Offset = "0x8FAFB8")]
		private MultiElementType <multiElementType>k__BackingField;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FAFC8", Offset = "0x8FAFC8")]
		private SmartMultiBase <multiParentDynamic>k__BackingField;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _multiParentDynamicIndex;

		[Token(Token = "0x170005C5")]
		public MultiElementType multiElementType
		{
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0x15C1A4C", Offset = "0x15C1A4C", VA = "0x15C1A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABE8", Offset = "0x90ABE8")]
			get
			{
				return default(MultiElementType);
			}
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0x15C1A54", Offset = "0x15C1A54", VA = "0x15C1A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ABF8", Offset = "0x90ABF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C6")]
		public SmartMultiBase multiParentDynamic
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0x15C1A5C", Offset = "0x15C1A5C", VA = "0x15C1A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC08", Offset = "0x90AC08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0x15C1A64", Offset = "0x15C1A64", VA = "0x15C1A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC18", Offset = "0x90AC18")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C7")]
		public int multiParentDynamicIndex
		{
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0x15C1A6C", Offset = "0x15C1A6C", VA = "0x15C1A6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002CFB")]
		public TDecorator[] GetDecorators<TDecorator>(bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002CFC")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results, bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002CFD")]
		protected int PopulateTempDecorators<TDecorator>(bool includeMultis)
		{
			return default(int);
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0x15C1A74", Offset = "0x15C1A74", VA = "0x15C1A74")]
		public SmartMultiBase[] GetMultiParentsPersistent()
		{
			return null;
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x15C1C58", Offset = "0x15C1C58", VA = "0x15C1C58")]
		public int GetMultiIndex([Optional] SmartMultiBase parent)
		{
			return default(int);
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x15C1DEC", Offset = "0x15C1DEC", VA = "0x15C1DEC")]
		public void SetMulti(SmartMultiBase multi, int index, bool isDynamic)
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0x15C1FE0", Offset = "0x15C1FE0", VA = "0x15C1FE0")]
		public void SetMultiDecorators(SmartDecoratorBase[] decorators, SmartMultiBase multi)
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x15C2180", Offset = "0x15C2180", VA = "0x15C2180")]
		private void WarnMultiDecorators()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x15C2524", Offset = "0x15C2524", VA = "0x15C2524", Slot = "7")]
		protected override void EvalHasDecorators()
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x15C25A0", Offset = "0x15C25A0", VA = "0x15C25A0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x15C2628", Offset = "0x15C2628", VA = "0x15C2628")]
		protected SmartDecorableBase()
		{
		}
	}
	[Token(Token = "0x2000732")]
	public abstract class SmartConst<TData> : SmartBase
	{
		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TData _value;

		[Token(Token = "0x170005C8")]
		public TData value
		{
			[Token(Token = "0x6002D0B")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x6002D0C")]
		protected SmartConst()
		{
		}
	}
	[Token(Token = "0x2000733")]
	public abstract class SmartVarBase : SmartDecorableBase
	{
		[Token(Token = "0x2000734")]
		public enum DataType
		{
			[Token(Token = "0x40022A1")]
			NONE,
			[Token(Token = "0x40022A2")]
			STRUCT,
			[Token(Token = "0x40022A3")]
			ARRAY,
			[Token(Token = "0x40022A4")]
			DICTIONARY,
			[Token(Token = "0x40022A5")]
			COLLECTION,
			[Token(Token = "0x40022A6")]
			CLASS
		}

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected bool _resetOnSceneChange;

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0x15C3948", Offset = "0x15C3948", VA = "0x15C3948")]
		public static DataType GetDataType(Type tData)
		{
			return default(DataType);
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0x15C3B80", Offset = "0x15C3B80", VA = "0x15C3B80")]
		protected SmartVarBase()
		{
		}
	}
	[Token(Token = "0x2000735")]
	public abstract class SmartVar<TData> : SmartVarBase, ISmartVar<TData>, ISmartDataWriter<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0160", Offset = "0x8F0160")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002D20")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002D21")]
			internal void <BindListener>b__0(TData x)
			{
			}
		}

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected DataType _dataType;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB008", Offset = "0x8FB008")]
		protected TData _value;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TData _runtimeValue;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<TData> _relay;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ConstructorInfo _dictionaryConstructor;

		[Token(Token = "0x170005C9")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002D0F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CA")]
		public TData value
		{
			[Token(Token = "0x6002D10")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002D11")]
			set
			{
			}
		}

		[Token(Token = "0x170005CB")]
		public TData defaultValue
		{
			[Token(Token = "0x6002D12")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x6002D13")]
		private void SetValue(TData v, RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D14")]
		private TData ExecuteDecoratorsOnUpdate(SmartDecoratorBase[] decorators, TData oldValue, TData newValue, RestoreMode restore, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D15")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D16")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002D17")]
		private void OnSceneChanged(Scene s0, Scene s1)
		{
		}

		[Token(Token = "0x6002D18")]
		protected void Restore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D19")]
		protected virtual void OnRestore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D1A")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002D1B")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002D1C")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D1D")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002D1E")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002D1F")]
		protected SmartVar()
		{
		}
	}
	[Token(Token = "0x2000737")]
	public abstract class SmartMultiBase : SmartBindableBase
	{
		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB064", Offset = "0x8FB064")]
		protected int _maxSize;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Relay<int, int> _onElementCountChanged;

		[Token(Token = "0x170005CC")]
		public int maxSize
		{
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0x15C3014", Offset = "0x15C3014", VA = "0x15C3014")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005CD")]
		public abstract int count
		{
			[Token(Token = "0x6002D23")]
			get;
		}

		[Token(Token = "0x170005CE")]
		public IRelayLink<int, int> onElementCountChanged
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0x15C301C", Offset = "0x15C301C", VA = "0x15C301C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D25")]
		public TDecorator[] GetDecorators<TDecorator>() where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002D26")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x15C3070", Offset = "0x15C3070", VA = "0x15C3070")]
		protected SmartMultiBase()
		{
		}
	}
	[Token(Token = "0x2000738")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F0170", Offset = "0x8F0170")]
	public abstract class SmartMulti<TSmart> : SmartMultiBase where TSmart : SmartDecorableBase
	{
		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TSmart[] _persistent;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TSmart> _runtimeList;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, List<ISmartRef>> _refsToBindByIndex;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasRefsToBind;

		[Token(Token = "0x170005CF")]
		public override int count
		{
			[Token(Token = "0x6002D28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005D0")]
		public TSmart Item
		{
			[Token(Token = "0x6002D2B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D29")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D2A")]
		public void RequestCtorAutoUnityEventBinding(ISmartRef r, int index)
		{
		}

		[Token(Token = "0x6002D2C")]
		protected TSmart Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6002D2D")]
		private void UpdateDecorators()
		{
		}

		[Token(Token = "0x6002D2E")]
		protected void OnElementsAdded()
		{
		}

		[Token(Token = "0x6002D2F")]
		protected SmartMulti()
		{
		}
	}
	[Token(Token = "0x2000739")]
	public abstract class SmartMulti<TData, TSmart> : SmartMulti<TSmart>, IEnumerable<TData>, IEnumerable where TSmart : SmartVar<TData>
	{
		[Token(Token = "0x200073A")]
		public class MultiEnumerator<TEData, TEMulti, TESmart> : IEnumerator<TEData>, IEnumerator, IDisposable where TEMulti : SmartMulti<TEData, TESmart> where TESmart : SmartVar<TEData>
		{
			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TEMulti _multi;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _index;

			[Token(Token = "0x170005D1")]
			private TEData System.Collections.Generic.IEnumerator<TEData>.Current
			{
				[Token(Token = "0x6002D37")]
				get
				{
					return (TEData)null;
				}
			}

			[Token(Token = "0x170005D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D3A")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D36")]
			public MultiEnumerator(TEMulti m)
			{
			}

			[Token(Token = "0x6002D38")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D39")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D3B")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x6002D30")]
		public TData GetValue(int index)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D31")]
		public IRelayBinding BindListener(Action<TData> listener, int index, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D32")]
		public IRelayBinding BindListener(Action listener, int index)
		{
			return null;
		}

		[Token(Token = "0x6002D33")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D34")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D35")]
		protected SmartMulti()
		{
		}
	}
	[Token(Token = "0x200073B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F01A8", Offset = "0x8F01A8")]
	public abstract class SmartSet<TData> : SmartDecorableBase, IEnumerable<TData>, IEnumerable
	{
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F01E0", Offset = "0x8F01E0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002D51")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002D52")]
			internal void <BindListener>b__0(SetEventData<TData> x)
			{
			}
		}

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _resetOnSceneChange;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TData _toAdd;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TData> _set;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TData> _runtimeSet;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<SetEventData<TData>> _relay;

		[Token(Token = "0x170005D3")]
		public IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D4")]
		public TData Item
		{
			[Token(Token = "0x6002D3D")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002D3E")]
			set
			{
			}
		}

		[Token(Token = "0x170005D5")]
		public int count
		{
			[Token(Token = "0x6002D3F")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002D40")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D41")]
		private void OnSceneChanged(Scene s0, Scene s1)
		{
		}

		[Token(Token = "0x6002D42")]
		protected void Restore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D43")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002D44")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D45")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D46")]
		public bool Add(TData element, bool allowDuplicates = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D47")]
		public int Remove(TData element)
		{
			return default(int);
		}

		[Token(Token = "0x6002D48")]
		public bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D49")]
		private bool RemoveAt(int index, SetOperation operation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4A")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002D4B")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002D4C")]
		public void SetAll(List<TData> set)
		{
		}

		[Token(Token = "0x6002D4D")]
		public IRelayBinding BindListener(Action<SetEventData<TData>> listener)
		{
			return null;
		}

		[Token(Token = "0x6002D4E")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002D4F")]
		private SetEventData<TData> ExecuteDecoratorsOnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D50")]
		protected SmartSet()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[Flags]
	public enum BlockFlags
	{
		[Token(Token = "0x40022BC")]
		NONE = 0,
		[Token(Token = "0x40022BD")]
		DISPATCH = 1,
		[Token(Token = "0x40022BE")]
		DECORATORS = 2,
		[Token(Token = "0x40022BF")]
		DATA = 4
	}
	[Token(Token = "0x200073E")]
	public static class Ext_BlockMode
	{
		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x17459A8", Offset = "0x17459A8", VA = "0x17459A8")]
		public static bool Contains(this BlockFlags mask, BlockFlags value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200073F")]
	public abstract class SmartDecoratorBase : ScriptableObject
	{
		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _runtimeActive;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Relay<SmartDecoratorBase, bool> _onActivated;

		[Token(Token = "0x170005D6")]
		public bool active
		{
			[Token(Token = "0x6002D54")]
			[Address(RVA = "0x15C2734", Offset = "0x15C2734", VA = "0x15C2734")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D55")]
			[Address(RVA = "0x15C273C", Offset = "0x15C273C", VA = "0x15C273C")]
			set
			{
			}
		}

		[Token(Token = "0x170005D7")]
		public IRelayLink<SmartDecoratorBase, bool> onActivated
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0x15C27E0", Offset = "0x15C27E0", VA = "0x15C27E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x15C2764", Offset = "0x15C2764", VA = "0x15C2764")]
		private void OnSetActive(bool a)
		{
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x15C2834", Offset = "0x15C2834", VA = "0x15C2834", Slot = "4")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x15C2838", Offset = "0x15C2838", VA = "0x15C2838", Slot = "5")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0x15C2510", Offset = "0x15C2510", VA = "0x15C2510")]
		public void SetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D5B")]
		protected abstract void OnSetOwner(SmartBindableBase owner);

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0x15C283C", Offset = "0x15C283C", VA = "0x15C283C")]
		protected SmartDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000740")]
	public abstract class SmartEventDecoratorBase : SmartDecoratorBase, ISmartRefOwnerRedirect
	{
		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventVar _owner;

		[Token(Token = "0x170005D8")]
		public EventVar owner
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0x15C28C8", Offset = "0x15C28C8", VA = "0x15C28C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x15C28D0", Offset = "0x15C28D0", VA = "0x15C28D0", Slot = "6")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D5F")]
		public abstract void OnDispatched(ref BlockFlags blockFlags);

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x15C2964", Offset = "0x15C2964", VA = "0x15C2964", Slot = "7")]
		public UnityEngine.Object GetSmartRefOwner()
		{
			return null;
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x15C296C", Offset = "0x15C296C", VA = "0x15C296C", Slot = "8")]
		public Type GetOwnerType()
		{
			return null;
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x15C2974", Offset = "0x15C2974", VA = "0x15C2974")]
		protected SmartEventDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000741")]
	public abstract class SmartDataDecoratorBase<TData> : SmartDecoratorBase, ISmartRefOwnerRedirect
	{
		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SmartVar<TData> _owner;

		[Token(Token = "0x170005D9")]
		public SmartVar<TData> owner
		{
			[Token(Token = "0x6002D63")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D64")]
		public virtual TData OnUpdated(TData oldValue, TData newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D65")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D66")]
		public UnityEngine.Object GetSmartRefOwner()
		{
			return null;
		}

		[Token(Token = "0x6002D67")]
		public Type GetOwnerType()
		{
			return null;
		}

		[Token(Token = "0x6002D68")]
		protected SmartDataDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000742")]
	public abstract class SmartSetDecoratorBase<TData> : SmartDecoratorBase
	{
		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SmartSet<TData> _owner;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB100", Offset = "0x8FB100")]
		private RestoreMode <_currentRestoreMode>k__BackingField;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB110", Offset = "0x8FB110")]
		private bool <_isClearing>k__BackingField;

		[Token(Token = "0x170005DA")]
		public SmartSet<TData> owner
		{
			[Token(Token = "0x6002D69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DB")]
		protected RestoreMode _currentRestoreMode
		{
			[Token(Token = "0x6002D6A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC38", Offset = "0x90AC38")]
			get
			{
				return default(RestoreMode);
			}
			[Token(Token = "0x6002D6B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC48", Offset = "0x90AC48")]
			private set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		protected bool _isClearing
		{
			[Token(Token = "0x6002D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC58", Offset = "0x90AC58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D6D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC68", Offset = "0x90AC68")]
			private set
			{
			}
		}

		[Token(Token = "0x6002D6E")]
		public virtual SetEventData<TData> OnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D6F")]
		public void BeginRestore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D70")]
		public void EndRestore()
		{
		}

		[Token(Token = "0x6002D71")]
		protected virtual void OnBeginRestore()
		{
		}

		[Token(Token = "0x6002D72")]
		protected virtual void OnEndRestore()
		{
		}

		[Token(Token = "0x6002D73")]
		public void BeginClear()
		{
		}

		[Token(Token = "0x6002D74")]
		public void EndClear()
		{
		}

		[Token(Token = "0x6002D75")]
		protected virtual void OnBeginClear()
		{
		}

		[Token(Token = "0x6002D76")]
		protected virtual void OnEndClear()
		{
		}

		[Token(Token = "0x6002D77")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D78")]
		protected SmartSetDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000743")]
	public abstract class SmartNetworkDataDecoratorBase<TData> : SmartDataDecoratorBase<TData>
	{
		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB120", Offset = "0x8FB120")]
		[SerializeField]
		private bool _networkOnlyDispatch;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB16C", Offset = "0x8FB16C")]
		[SerializeField]
		private bool _networkOnlyValue;

		[Token(Token = "0x6002D79")]
		public override TData OnUpdated(TData oldValue, TData newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D7A")]
		protected abstract void Send(TData value);

		[Token(Token = "0x6002D7B")]
		public void Receive(TData value)
		{
		}

		[Token(Token = "0x6002D7C")]
		protected SmartNetworkDataDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000744")]
	public abstract class SmartNetworkEventDecoratorBase : SmartEventDecoratorBase
	{
		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB1B8", Offset = "0x8FB1B8")]
		[SerializeField]
		private bool _networkOnlyDispatch;

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0x15C3124", Offset = "0x15C3124", VA = "0x15C3124")]
		public void Receive()
		{
		}

		[Token(Token = "0x6002D7E")]
		protected abstract void Send();

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x15C3190", Offset = "0x15C3190", VA = "0x15C3190", Slot = "9")]
		public override void OnDispatched(ref BlockFlags blockFlags)
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0x15C31D4", Offset = "0x15C31D4", VA = "0x15C31D4")]
		protected SmartNetworkEventDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000745")]
	public abstract class SmartNetworkSetDecoratorBase<TData> : SmartSetDecoratorBase<TData>
	{
		[Token(Token = "0x6002D81")]
		public override SetEventData<TData> OnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D82")]
		protected abstract void Send(SetEventData<TData> data, RestoreMode restoreMode);

		[Token(Token = "0x6002D83")]
		public void Receive(SetEventData<TData> data)
		{
		}

		[Token(Token = "0x6002D84")]
		protected SmartNetworkSetDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000746")]
	public abstract class SmartRefBase : ISmartRef
	{
		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private UnityEngine.Object _owner;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private string _ownerName;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private string _propertyPath;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _autoListen;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IRelayBinding _unityEventBinding;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _unityEventEnabled;

		[Token(Token = "0x170005DD")]
		public abstract bool isValid
		{
			[Token(Token = "0x6002D86")]
			get;
		}

		[Token(Token = "0x170005DE")]
		public abstract string name
		{
			[Token(Token = "0x6002D87")]
			get;
		}

		[Token(Token = "0x170005DF")]
		public bool unityEventOnReceive
		{
			[Token(Token = "0x6002D88")]
			[Address(RVA = "0x15C337C", Offset = "0x15C337C", VA = "0x15C337C", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D89")]
			[Address(RVA = "0x15C2DAC", Offset = "0x15C2DAC", VA = "0x15C2DAC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0x15C31D8", Offset = "0x15C31D8", VA = "0x15C31D8")]
		protected void LogError(string format, params object[] args)
		{
		}

		[Token(Token = "0x6002D8A")]
		protected abstract IRelayBinding BindUnityEvent();

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x15C343C", Offset = "0x15C343C", VA = "0x15C343C")]
		public SmartRefBase()
		{
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0x15C3444", Offset = "0x15C3444", VA = "0x15C3444", Slot = "7")]
		public void UnbindUnityEventOnDestroy(bool enableUnityEventNow = true)
		{
		}
	}
	[Token(Token = "0x2000747")]
	public abstract class SmartRefMultiableBase : SmartRefBase
	{
		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected int _multiIndex;

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x15C0F38", Offset = "0x15C0F38", VA = "0x15C0F38")]
		protected SmartRefMultiableBase()
		{
		}
	}
	[Token(Token = "0x2000748")]
	public abstract class SmartDataRefBase : SmartRefMultiableBase
	{
		[Token(Token = "0x2000749")]
		public enum RefType
		{
			[Token(Token = "0x40022D8")]
			LOCAL,
			[Token(Token = "0x40022D9")]
			CONST,
			[Token(Token = "0x40022DA")]
			VAR,
			[Token(Token = "0x40022DB")]
			MULTI
		}

		[Serializable]
		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0210", Offset = "0x8F0210")]
		private sealed class <>c
		{
			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002D92")]
			[Address(RVA = "0x158B820", Offset = "0x158B820", VA = "0x158B820")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D93")]
			[Address(RVA = "0x158B828", Offset = "0x158B828", VA = "0x158B828")]
			internal bool <.cctor>b__9_0(RefType r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D94")]
			[Address(RVA = "0x158B834", Offset = "0x158B834", VA = "0x158B834")]
			internal bool <.cctor>b__9_1(RefType r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D95")]
			[Address(RVA = "0x158B840", Offset = "0x158B840", VA = "0x158B840")]
			internal bool <.cctor>b__9_2(RefType r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly RefType[] TYPES_ALL;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly RefType[] TYPES_SMART;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RefType[] TYPES_WRITABLE;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly RefType[] TYPES_COMPONENTABLE;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected RefType _refType;

		[Token(Token = "0x170005E0")]
		protected bool _isEventable
		{
			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0x15C0E40", Offset = "0x15C0E40", VA = "0x15C0E40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0x15C0F28", Offset = "0x15C0F28", VA = "0x15C0F28")]
		protected SmartDataRefBase()
		{
		}
	}
	[Token(Token = "0x200074B")]
	public abstract class SmartDataRefBase<TData, TVar, TConst, TMulti> : SmartDataRefBase, ISmartRefReader<TData>, ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISerializationCallbackReceiver where TVar : SmartVar<TData>, ISmartVar<TData> where TConst : SmartConst<TData> where TMulti : SmartMulti<TData, TVar>
	{
		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0220", Offset = "0x8F0220")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002DA7")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002DA8")]
			internal void <BindListener>b__0(TData t)
			{
			}
		}

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TData _value;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TData _defaultValue;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TConst _smartConst;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TVar _smartVar;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMulti _smartMulti;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<TData> _relay;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasDefault;

		[Token(Token = "0x170005E1")]
		public TData value
		{
			[Token(Token = "0x6002D96")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005E2")]
		public TData defaultValue
		{
			[Token(Token = "0x6002D97")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005E3")]
		public override bool isValid
		{
			[Token(Token = "0x6002D98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E4")]
		public override string name
		{
			[Token(Token = "0x6002D99")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E5")]
		protected TVar _writeable
		{
			[Token(Token = "0x6002D9A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E6")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002D9E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D9B")]
		protected bool CheckSmartObject(SmartBase o, string operation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9C")]
		public TDecorator[] GetDecorators<TDecorator>(bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002D9D")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results, bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002D9F")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002DA0")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002DA1")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002DA2")]
		protected abstract Action<TData> GetUnityEventInvoke();

		[Token(Token = "0x6002DA3")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002DA4")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002DA5")]
		public static implicit operator TData(SmartDataRefBase<TData, TVar, TConst, TMulti> r)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002DA6")]
		protected SmartDataRefBase()
		{
		}
	}
	[Token(Token = "0x200074D")]
	public abstract class SmartDataRefWriter<TData, TVar, TConst, TMulti> : SmartDataRefBase<TData, TVar, TConst, TMulti>, ISmartRefWriter<TData>, ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartDataWriter<TData> where TVar : SmartVar<TData>, ISmartVar<TData> where TConst : SmartConst<TData> where TMulti : SmartMulti<TData, TVar>
	{
		[Token(Token = "0x170005E7")]
		public new TData value
		{
			[Token(Token = "0x6002DA9")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DAA")]
			set
			{
			}
		}

		[Token(Token = "0x6002DAB")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002DAC")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002DAD")]
		private void DispatchLocal()
		{
		}

		[Token(Token = "0x6002DAE")]
		protected abstract void InvokeUnityEvent(TData value);

		[Token(Token = "0x6002DAF")]
		protected SmartDataRefWriter()
		{
		}
	}
	[Token(Token = "0x200074E")]
	public abstract class SmartMultiRef<TMulti, TVar> : SmartRefMultiableBase where TMulti : SmartMulti<TVar> where TVar : SmartDecorableBase
	{
		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMulti _smartMulti;

		[Token(Token = "0x170005E8")]
		public override bool isValid
		{
			[Token(Token = "0x6002DB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E9")]
		public override string name
		{
			[Token(Token = "0x6002DB1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EA")]
		public int index
		{
			[Token(Token = "0x6002DB2")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002DB3")]
			set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public int count
		{
			[Token(Token = "0x6002DB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005EC")]
		protected TMulti _multi
		{
			[Token(Token = "0x6002DB5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005ED")]
		public IRelayLink<int, int> onElementCountChanged
		{
			[Token(Token = "0x6002DB6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB7")]
		protected SmartMultiRef()
		{
		}
	}
	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F0230", Offset = "0x8F0230")]
	public abstract class SmartDataMultiRef<TList, TData, TVar> : SmartMultiRef<TList, TVar>, ISmartDataMultiRefReader<TData, TVar>, ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, IEnumerable<TData>, IEnumerable where TList : SmartMulti<TData, TVar>, IEnumerable<TData> where TVar : SmartVar<TData>
	{
		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0268", Offset = "0x8F0268")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002DC4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002DC5")]
			internal void <BindListener>b__0(TData x)
			{
			}
		}

		[Token(Token = "0x170005EE")]
		public TData value
		{
			[Token(Token = "0x6002DB8")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005EF")]
		public TData defaultValue
		{
			[Token(Token = "0x6002DB9")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005F0")]
		public TData Item
		{
			[Token(Token = "0x6002DBA")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005F1")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002DBB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DBC")]
		public IEnumerator<TData> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DBD")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DBE")]
		public IRelayBinding BindListener(Action<TData> listener, int multiIndex, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002DBF")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002DC0")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002DC1")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002DC2")]
		protected abstract Action<TData> GetUnityEventInvoke();

		[Token(Token = "0x6002DC3")]
		protected SmartDataMultiRef()
		{
		}
	}
	[Token(Token = "0x2000751")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F0278", Offset = "0x8F0278")]
	public abstract class SmartDataMultiRefWriter<TList, TData, TVar> : SmartDataMultiRef<TList, TData, TVar>, ISmartDataMultiRefWriter<TData, TVar>, ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, ISmartDataWriter<TData> where TList : SmartMulti<TData, TVar> where TVar : SmartVar<TData>
	{
		[Token(Token = "0x170005F2")]
		public new TData value
		{
			[Token(Token = "0x6002DC6")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DC7")]
			set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public new TData Item
		{
			[Token(Token = "0x6002DC8")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DC9")]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		protected TVar _smartVar
		{
			[Token(Token = "0x6002DCA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DCB")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002DCC")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002DCD")]
		protected abstract void InvokeUnityEvent(TData value);

		[Token(Token = "0x6002DCE")]
		protected SmartDataMultiRefWriter()
		{
		}
	}
	[Token(Token = "0x2000752")]
	public abstract class SmartSetRefBase : SmartRefBase
	{
		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0x15C3940", Offset = "0x15C3940", VA = "0x15C3940")]
		protected SmartSetRefBase()
		{
		}
	}
	[Token(Token = "0x2000753")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F02B0", Offset = "0x8F02B0")]
	public abstract class SmartSetRefBase<TData, TWrite> : SmartSetRefBase, ISerializationCallbackReceiver, IEnumerable<TData>, IEnumerable where TWrite : SmartSet<TData>, ISmartSet<TData>
	{
		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _useList;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TWrite _smartSet;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TData> _list;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TData> _runtimeList;

		[Token(Token = "0x170005F5")]
		protected bool _isEventable
		{
			[Token(Token = "0x6002DD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F6")]
		public override bool isValid
		{
			[Token(Token = "0x6002DD1")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005F7")]
		public override string name
		{
			[Token(Token = "0x6002DD2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		public TData Item
		{
			[Token(Token = "0x6002DD6")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005F9")]
		public int count
		{
			[Token(Token = "0x6002DD7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005FA")]
		public IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD3")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002DD4")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002DD5")]
		protected void Restore()
		{
		}

		[Token(Token = "0x6002DD9")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DDA")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DDB")]
		public IRelayBinding BindListener(Action<SetEventData<TData>> listener)
		{
			return null;
		}

		[Token(Token = "0x6002DDC")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002DDD")]
		protected abstract Action<SetEventData<TData>> GetUnityEventInvoke();

		[Token(Token = "0x6002DDE")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002DDF")]
		protected SmartSetRefBase()
		{
		}
	}
	[Token(Token = "0x2000754")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8F02E8", Offset = "0x8F02E8")]
	public abstract class SmartSetRefWriterBase<TData, TWrite> : SmartSetRefBase<TData, TWrite>, ISmartSetRefWriter<TData>, ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter where TWrite : SmartSet<TData>, ISmartSet<TData>
	{
		[Token(Token = "0x170005FB")]
		public new TData Item
		{
			[Token(Token = "0x6002DE0")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DE1")]
			set
			{
			}
		}

		[Token(Token = "0x6002DE2")]
		public bool Add(TData element, bool allowDuplicates = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE3")]
		public int Remove(TData element)
		{
			return default(int);
		}

		[Token(Token = "0x6002DE4")]
		public bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002DE6")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002DE7")]
		protected abstract void InvokeUnityEvent(SetEventData<TData> data);

		[Token(Token = "0x6002DE8")]
		protected SmartSetRefWriterBase()
		{
		}
	}
}
namespace Sigtrap.Relays
{
	[Token(Token = "0x2000755")]
	public abstract class RelayBase<TDelegate> : IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _hasLink;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TDelegate[] _listeners;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _count;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _cap;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TDelegate[] _listenersOnce;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _onceCount;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _onceCap;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static IndexOutOfRangeException _eIOOR;

		[Token(Token = "0x170005FC")]
		public uint listenerCount
		{
			[Token(Token = "0x6002DE9")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170005FD")]
		public uint oneTimeListenersCount
		{
			[Token(Token = "0x6002DEA")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002DEB")]
		public bool Contains(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEC")]
		public bool AddListener(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DED")]
		public IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false)
		{
			return null;
		}

		[Token(Token = "0x6002DEE")]
		public bool AddOnce(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEF")]
		public bool RemoveListener(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF0")]
		public bool RemoveOnce(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF1")]
		public void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true)
		{
		}

		[Token(Token = "0x6002DF2")]
		protected void RemoveAt(uint i)
		{
		}

		[Token(Token = "0x6002DF3")]
		protected void RemoveOnceAt(uint i)
		{
		}

		[Token(Token = "0x6002DF4")]
		protected uint RemoveAt(TDelegate[] arr, uint count, uint i)
		{
			return default(uint);
		}

		[Token(Token = "0x6002DF5")]
		private bool Contains(TDelegate[] arr, uint c, TDelegate d)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF6")]
		private TDelegate[] Expand(TDelegate[] arr, uint cap, uint count)
		{
			return null;
		}

		[Token(Token = "0x6002DF7")]
		protected RelayBase()
		{
		}
	}
	[Token(Token = "0x2000756")]
	public class Relay : RelayBase<Action>, IRelayLink, IRelayLinkBase<Action>
	{
		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IRelayLink _link;

		[Token(Token = "0x170005FE")]
		public IRelayLink link
		{
			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0x1889ABC", Offset = "0x1889ABC", VA = "0x1889ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x1889B9C", Offset = "0x1889B9C", VA = "0x1889B9C")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x1889D68", Offset = "0x1889D68", VA = "0x1889D68")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000757")]
	public class Relay<T> : RelayBase<Action<T>>, IRelayLink<T>, IRelayLinkBase<Action<T>>
	{
		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T> _link;

		[Token(Token = "0x170005FF")]
		public IRelayLink<T> link
		{
			[Token(Token = "0x6002DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFD")]
		public void Dispatch(T t)
		{
		}

		[Token(Token = "0x6002DFE")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public class Relay<T, U> : RelayBase<Action<T, U>>, IRelayLink<T, U>, IRelayLinkBase<Action<T, U>>
	{
		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U> _link;

		[Token(Token = "0x17000600")]
		public IRelayLink<T, U> link
		{
			[Token(Token = "0x6002DFF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E00")]
		public void Dispatch(T t, U u)
		{
		}

		[Token(Token = "0x6002E01")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000759")]
	public class Relay<T, U, V> : RelayBase<Action<T, U, V>>, IRelayLink<T, U, V>, IRelayLinkBase<Action<T, U, V>>
	{
		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U, V> _link;

		[Token(Token = "0x17000601")]
		public IRelayLink<T, U, V> link
		{
			[Token(Token = "0x6002E02")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E03")]
		public void Dispatch(T t, U u, V v)
		{
		}

		[Token(Token = "0x6002E04")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x200075A")]
	public class Relay<T, U, V, W> : RelayBase<Action<T, U, V, W>>, IRelayLink<T, U, V, W>, IRelayLinkBase<Action<T, U, V, W>>
	{
		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U, V, W> _link;

		[Token(Token = "0x17000602")]
		public IRelayLink<T, U, V, W> link
		{
			[Token(Token = "0x6002E05")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E06")]
		public void Dispatch(T t, U u, V v, W w)
		{
		}

		[Token(Token = "0x6002E07")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x200075B")]
	public interface IRelayBinding
	{
		[Token(Token = "0x17000603")]
		bool enabled
		{
			[Token(Token = "0x6002E08")]
			get;
		}

		[Token(Token = "0x17000604")]
		bool allowDuplicates
		{
			[Token(Token = "0x6002E09")]
			get;
			[Token(Token = "0x6002E0A")]
			set;
		}

		[Token(Token = "0x17000605")]
		uint listenerCount
		{
			[Token(Token = "0x6002E0B")]
			get;
		}

		[Token(Token = "0x6002E0C")]
		bool Enable(bool enable);
	}
	[Token(Token = "0x200075C")]
	public interface IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x17000606")]
		uint listenerCount
		{
			[Token(Token = "0x6002E0D")]
			get;
		}

		[Token(Token = "0x17000607")]
		uint oneTimeListenersCount
		{
			[Token(Token = "0x6002E0E")]
			get;
		}

		[Token(Token = "0x6002E0F")]
		bool Contains(TDelegate listener);

		[Token(Token = "0x6002E10")]
		bool AddListener(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002E11")]
		IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002E12")]
		bool AddOnce(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002E13")]
		bool RemoveListener(TDelegate listener);

		[Token(Token = "0x6002E14")]
		bool RemoveOnce(TDelegate listener);

		[Token(Token = "0x6002E15")]
		void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true);
	}
	[Token(Token = "0x200075D")]
	public interface IRelayLink : IRelayLinkBase<Action>
	{
	}
	[Token(Token = "0x200075E")]
	public interface IRelayLink<T> : IRelayLinkBase<Action<T>>
	{
	}
	[Token(Token = "0x200075F")]
	public interface IRelayLink<T, U> : IRelayLinkBase<Action<T, U>>
	{
	}
	[Token(Token = "0x2000760")]
	public interface IRelayLink<T, U, V> : IRelayLinkBase<Action<T, U, V>>
	{
	}
	[Token(Token = "0x2000761")]
	public interface IRelayLink<T, U, V, W> : IRelayLinkBase<Action<T, U, V, W>>
	{
	}
}
namespace Sigtrap.Relays.Link
{
	[Token(Token = "0x2000762")]
	public abstract class RelayLinkBase<TDelegate> : IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RelayBase<TDelegate> _relay;

		[Token(Token = "0x17000608")]
		public uint listenerCount
		{
			[Token(Token = "0x6002E18")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000609")]
		public uint oneTimeListenersCount
		{
			[Token(Token = "0x6002E19")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002E16")]
		private RelayLinkBase()
		{
		}

		[Token(Token = "0x6002E17")]
		public RelayLinkBase(RelayBase<TDelegate> relay)
		{
		}

		[Token(Token = "0x6002E1A")]
		public bool Contains(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1B")]
		public bool AddListener(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1C")]
		public IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false)
		{
			return null;
		}

		[Token(Token = "0x6002E1D")]
		public bool AddOnce(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1E")]
		public bool RemoveListener(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1F")]
		public bool RemoveOnce(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E20")]
		public void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true)
		{
		}
	}
	[Token(Token = "0x2000763")]
	public class RelayLink : RelayLinkBase<Action>, IRelayLink, IRelayLinkBase<Action>
	{
		[Token(Token = "0x6002E21")]
		[Address(RVA = "0x1889B40", Offset = "0x1889B40", VA = "0x1889B40")]
		public RelayLink(RelayBase<Action> relay)
		{
		}
	}
	[Token(Token = "0x2000764")]
	public class RelayLink<T> : RelayLinkBase<Action<T>>, IRelayLink<T>, IRelayLinkBase<Action<T>>
	{
		[Token(Token = "0x6002E22")]
		public RelayLink(RelayBase<Action<T>> relay)
		{
		}
	}
	[Token(Token = "0x2000765")]
	public class RelayLink<T, U> : RelayLinkBase<Action<T, U>>, IRelayLink<T, U>, IRelayLinkBase<Action<T, U>>
	{
		[Token(Token = "0x6002E23")]
		public RelayLink(RelayBase<Action<T, U>> relay)
		{
		}
	}
	[Token(Token = "0x2000766")]
	public class RelayLink<T, U, V> : RelayLinkBase<Action<T, U, V>>, IRelayLink<T, U, V>, IRelayLinkBase<Action<T, U, V>>
	{
		[Token(Token = "0x6002E24")]
		public RelayLink(RelayBase<Action<T, U, V>> relay)
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class RelayLink<T, U, V, W> : RelayLinkBase<Action<T, U, V, W>>, IRelayLink<T, U, V, W>, IRelayLinkBase<Action<T, U, V, W>>
	{
		[Token(Token = "0x6002E25")]
		public RelayLink(RelayBase<Action<T, U, V, W>> relay)
		{
		}
	}
}
namespace Sigtrap.Relays.Binding
{
	[Token(Token = "0x2000768")]
	public class RelayBinding<TDelegate> : IRelayBinding where TDelegate : class
	{
		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB36C", Offset = "0x8FB36C")]
		private IRelayLinkBase<TDelegate> <_relay>k__BackingField;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB37C", Offset = "0x8FB37C")]
		private TDelegate <_listener>k__BackingField;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB38C", Offset = "0x8FB38C")]
		private bool <enabled>k__BackingField;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB39C", Offset = "0x8FB39C")]
		private bool <allowDuplicates>k__BackingField;

		[Token(Token = "0x1700060A")]
		protected IRelayLinkBase<TDelegate> _relay
		{
			[Token(Token = "0x6002E26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC78", Offset = "0x90AC78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC88", Offset = "0x90AC88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700060B")]
		protected TDelegate _listener
		{
			[Token(Token = "0x6002E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AC98", Offset = "0x90AC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ACA8", Offset = "0x90ACA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700060C")]
		public bool enabled
		{
			[Token(Token = "0x6002E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ACB8", Offset = "0x90ACB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E2D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ACC8", Offset = "0x90ACC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700060D")]
		public bool allowDuplicates
		{
			[Token(Token = "0x6002E2E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ACD8", Offset = "0x90ACD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E2F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90ACE8", Offset = "0x90ACE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700060E")]
		public uint listenerCount
		{
			[Token(Token = "0x6002E30")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002E2A")]
		private RelayBinding()
		{
		}

		[Token(Token = "0x6002E2B")]
		public RelayBinding(IRelayLinkBase<TDelegate> relay, TDelegate listener, bool allowDuplicates, bool isListening)
		{
		}

		[Token(Token = "0x6002E31")]
		public bool Enable(bool enable)
		{
			return default(bool);
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x2000769")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB3AC", Offset = "0x8FB3AC")]
		public int SoundPoolSize;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB3E4", Offset = "0x8FB3E4")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FB41C", Offset = "0x8FB41C")]
		public float PitchModulationRange;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB434", Offset = "0x8FB434")]
		public float MinCollisionVolume;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0x1B524DC", Offset = "0x1B524DC", VA = "0x1B524DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x1B52578", Offset = "0x1B52578", VA = "0x1B52578")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x1B52678", Offset = "0x1B52678", VA = "0x1B52678")]
		public NVRCollisionSoundController()
		{
		}
	}
	[Token(Token = "0x200076A")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x4002306")]
		None,
		[Token(Token = "0x4002307")]
		Unity,
		[Token(Token = "0x4002308")]
		FMOD
	}
	[Token(Token = "0x200076B")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x400230A")]
		none = 0,
		[Token(Token = "0x400230B")]
		_default = 1,
		[Token(Token = "0x400230C")]
		carpet = 2,
		[Token(Token = "0x400230D")]
		wood = 3,
		[Token(Token = "0x400230E")]
		metal = 4,
		[Token(Token = "0x400230F")]
		glass = 5,
		[Token(Token = "0x4002310")]
		plastic = 6,
		[Token(Token = "0x4002311")]
		cardboard = 7,
		[Token(Token = "0x4002312")]
		EndNewtonVRMaterials = 50
	}
	[Token(Token = "0x200076C")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x1700060F")]
		public static Type TypeCache
		{
			[Token(Token = "0x6002E35")]
			[Address(RVA = "0x1B526A8", Offset = "0x1B526A8", VA = "0x1B526A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x6002E36")]
			[Address(RVA = "0x1B5279C", Offset = "0x1B5279C", VA = "0x1B5279C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x1B52B7C", Offset = "0x1B52B7C", VA = "0x1B52B7C")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0x1B52CBC", Offset = "0x1B52CBC", VA = "0x1B52CBC")]
		public NVRCollisionSoundMaterialsList()
		{
		}
	}
	[Token(Token = "0x200076D")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] Colliders;

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0x1B52CC4", Offset = "0x1B52CC4", VA = "0x1B52CC4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0x1B52DE8", Offset = "0x1B52DE8", VA = "0x1B52DE8", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x1B52F00", Offset = "0x1B52F00", VA = "0x1B52F00", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x1B530D0", Offset = "0x1B530D0", VA = "0x1B530D0")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x1B53180", Offset = "0x1B53180", VA = "0x1B53180")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0x1B53218", Offset = "0x1B53218", VA = "0x1B53218")]
		public NVRCollisionSoundObject()
		{
		}
	}
	[Token(Token = "0x200076E")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x6002E40")]
		public abstract void Awake();

		[Token(Token = "0x6002E41")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x1B532AC", Offset = "0x1B532AC", VA = "0x1B532AC")]
		protected NVRCollisionSoundProvider()
		{
		}
	}
	[Token(Token = "0x200076F")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x1B532B4", Offset = "0x1B532B4", VA = "0x1B532B4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x1B532B8", Offset = "0x1B532B8", VA = "0x1B532B8", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0x1B532BC", Offset = "0x1B532BC", VA = "0x1B532BC")]
		public NVRCollisionSoundProviderFMOD()
		{
		}
	}
	[Token(Token = "0x2000770")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int CurrentPoolIndex;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x1B532C4", Offset = "0x1B532C4", VA = "0x1B532C4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0x1B53844", Offset = "0x1B53844", VA = "0x1B53844", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x1B53A38", Offset = "0x1B53A38", VA = "0x1B53A38")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x1B53C50", Offset = "0x1B53C50", VA = "0x1B53C50")]
		public NVRCollisionSoundProviderUnity()
		{
		}
	}
	[Token(Token = "0x2000771")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x2000772")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x6002E4D")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x6002E4E")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x6002E4B")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4C")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000773")]
	public class NVRAlignment
	{
		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0x1B4E878", Offset = "0x1B4E878", VA = "0x1B4E878")]
		public NVRAlignment(Transform transform)
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x1B4E8E4", Offset = "0x1B4E8E4", VA = "0x1B4E8E4")]
		public NVRAlignment(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0x1B4E964", Offset = "0x1B4E964", VA = "0x1B4E964")]
		public float Distance(Transform transform)
		{
			return default(float);
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x1B4EA64", Offset = "0x1B4EA64", VA = "0x1B4EA64")]
		public float Distance(NVRAlignment alignment)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000774")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PullRange;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AttachRange;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DropDistance;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool MatchRotation;

		[Token(Token = "0x17000611")]
		public bool IsAttached
		{
			[Token(Token = "0x6002E53")]
			[Address(RVA = "0x1B4EB2C", Offset = "0x1B4EB2C", VA = "0x1B4EB2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x1B4EB98", Offset = "0x1B4EB98", VA = "0x1B4EB98", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x1B4ED24", Offset = "0x1B4ED24", VA = "0x1B4ED24", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x1B4ED60", Offset = "0x1B4ED60", VA = "0x1B4ED60", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x1B4EE30", Offset = "0x1B4EE30", VA = "0x1B4EE30", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0x1B4EE88", Offset = "0x1B4EE88", VA = "0x1B4EE88", Slot = "8")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0x1B4EEE0", Offset = "0x1B4EEE0", VA = "0x1B4EEE0")]
		public NVRAttachJoint()
		{
		}
	}
	[Token(Token = "0x2000775")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x4002328")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x4002329")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x400232A")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x400232B")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsAttached;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRAttachJoint AttachedJoint;

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0x1B4EF08", Offset = "0x1B4EF08", VA = "0x1B4EF08", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0x1B4F1E4", Offset = "0x1B4F1E4", VA = "0x1B4F1E4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0x1B4F0B8", Offset = "0x1B4F0B8", VA = "0x1B4F0B8")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0x1B4F204", Offset = "0x1B4F204", VA = "0x1B4F204", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0x1B4F36C", Offset = "0x1B4F36C", VA = "0x1B4F36C", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0x1B4F3D0", Offset = "0x1B4F3D0", VA = "0x1B4F3D0", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0x1B4F684", Offset = "0x1B4F684", VA = "0x1B4F684")]
		public NVRAttachPoint()
		{
		}
	}
	[Token(Token = "0x2000776")]
	public class AttachPointMapper
	{
		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x1AA8078", Offset = "0x1AA8078", VA = "0x1AA8078")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x1AA8114", Offset = "0x1AA8114", VA = "0x1AA8114")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x1AA81A0", Offset = "0x1AA81A0", VA = "0x1AA81A0")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x1AA8244", Offset = "0x1AA8244", VA = "0x1AA8244")]
		public AttachPointMapper()
		{
		}
	}
	[Token(Token = "0x2000777")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB49C", Offset = "0x8FB49C")]
		public float DistanceToEngage;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB4D4", Offset = "0x8FB4D4")]
		public bool ButtonDown;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB50C", Offset = "0x8FB50C")]
		public bool ButtonUp;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB544", Offset = "0x8FB544")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB57C", Offset = "0x8FB57C")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Transform InitialPosition;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float MinDistance;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float PositionMagic;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float CurrentDistance;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x1B4F68C", Offset = "0x1B4F68C", VA = "0x1B4F68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x1B4F908", Offset = "0x1B4F908", VA = "0x1B4F908")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0x1B4FA9C", Offset = "0x1B4FA9C", VA = "0x1B4FA9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0x1B4FA28", Offset = "0x1B4FA28", VA = "0x1B4FA28")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0x1B4FADC", Offset = "0x1B4FADC", VA = "0x1B4FADC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0x1B4FAE0", Offset = "0x1B4FAE0", VA = "0x1B4FAE0")]
		public NVRButton()
		{
		}
	}
	[Token(Token = "0x2000778")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool PressDownCached;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool PressDownExpired;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool PressUpCached;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool PressUpExpired;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsPressedCached;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool IsPressedExpired;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool TouchDownCached;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool TouchDownExpired;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool TouchUpCached;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool TouchUpExpired;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool IsTouchedCached;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool IsTouchedExpired;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool NearTouchDownCached;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool NearTouchUpCached;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 AxisCached;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool AxisExpired;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float SingleAxisCached;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRButtons NVRbutton;

		[Token(Token = "0x17000612")]
		public bool PressDown
		{
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x1B4FB08", Offset = "0x1B4FB08", VA = "0x1B4FB08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000613")]
		public bool PressUp
		{
			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0x1B4FBC8", Offset = "0x1B4FBC8", VA = "0x1B4FBC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000614")]
		public bool IsPressed
		{
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x1B4FC88", Offset = "0x1B4FC88", VA = "0x1B4FC88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000615")]
		public bool TouchDown
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x1B4FD48", Offset = "0x1B4FD48", VA = "0x1B4FD48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000616")]
		public bool TouchUp
		{
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x1B4FE08", Offset = "0x1B4FE08", VA = "0x1B4FE08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000617")]
		public bool IsTouched
		{
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x1B4FEC8", Offset = "0x1B4FEC8", VA = "0x1B4FEC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000618")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6002E72")]
			[Address(RVA = "0x1B4FF88", Offset = "0x1B4FF88", VA = "0x1B4FF88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000619")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0x1B50048", Offset = "0x1B50048", VA = "0x1B50048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061A")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x1B50108", Offset = "0x1B50108", VA = "0x1B50108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061B")]
		public Vector2 Axis
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0x1B501C8", Offset = "0x1B501C8", VA = "0x1B501C8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700061C")]
		public float SingleAxis
		{
			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x1B50280", Offset = "0x1B50280", VA = "0x1B50280")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0x1B5032C", Offset = "0x1B5032C", VA = "0x1B5032C")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x1B5038C", Offset = "0x1B5038C", VA = "0x1B5038C")]
		public NVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x2000779")]
	public enum NVRButtons
	{
		[Token(Token = "0x4002358")]
		System,
		[Token(Token = "0x4002359")]
		ApplicationMenu,
		[Token(Token = "0x400235A")]
		Grip,
		[Token(Token = "0x400235B")]
		DPad_Left,
		[Token(Token = "0x400235C")]
		DPad_Up,
		[Token(Token = "0x400235D")]
		DPad_Right,
		[Token(Token = "0x400235E")]
		DPad_Down,
		[Token(Token = "0x400235F")]
		A,
		[Token(Token = "0x4002360")]
		B,
		[Token(Token = "0x4002361")]
		X,
		[Token(Token = "0x4002362")]
		Y,
		[Token(Token = "0x4002363")]
		Axis0,
		[Token(Token = "0x4002364")]
		Axis1,
		[Token(Token = "0x4002365")]
		Axis2,
		[Token(Token = "0x4002366")]
		Axis3,
		[Token(Token = "0x4002367")]
		Axis4,
		[Token(Token = "0x4002368")]
		Touchpad,
		[Token(Token = "0x4002369")]
		Trigger,
		[Token(Token = "0x400236A")]
		Back,
		[Token(Token = "0x400236B")]
		Stick
	}
	[Token(Token = "0x200077A")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x1700061D")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x6002E79")]
			[Address(RVA = "0x1B503D8", Offset = "0x1B503D8", VA = "0x1B503D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0x1B50570", Offset = "0x1B50570", VA = "0x1B50570")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x200077B")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0x1B503C4", Offset = "0x1B503C4", VA = "0x1B503C4", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0x1B503D0", Offset = "0x1B503D0", VA = "0x1B503D0", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200077C")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0320", Offset = "0x8F0320")]
		private sealed class <InitCR>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRCanvasInput <>4__this;

			[Token(Token = "0x1700061E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E92")]
				[Address(RVA = "0x16B63F0", Offset = "0x16B63F0", VA = "0x16B63F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E94")]
				[Address(RVA = "0x16B6438", Offset = "0x16B6438", VA = "0x16B6438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0x16B5A00", Offset = "0x16B5A00", VA = "0x16B5A00")]
			[DebuggerHidden]
			public <InitCR>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0x16B5A2C", Offset = "0x16B5A2C", VA = "0x16B5A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0x16B5A30", Offset = "0x16B5A30", VA = "0x16B5A30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0x16B63F8", Offset = "0x16B63F8", VA = "0x16B63F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0330", Offset = "0x8F0330")]
		private sealed class <GetLocatorsFromSpacefolkHand>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRCanvasInput <>4__this;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x17000620")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E98")]
				[Address(RVA = "0x16B59B0", Offset = "0x16B59B0", VA = "0x16B59B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000621")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E9A")]
				[Address(RVA = "0x16B59F8", Offset = "0x16B59F8", VA = "0x16B59F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0x16B573C", Offset = "0x16B573C", VA = "0x16B573C")]
			[DebuggerHidden]
			public <GetLocatorsFromSpacefolkHand>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0x16B5768", Offset = "0x16B5768", VA = "0x16B5768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E97")]
			[Address(RVA = "0x16B576C", Offset = "0x16B576C", VA = "0x16B576C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0x16B59B8", Offset = "0x16B59B8", VA = "0x16B59B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite CursorSprite;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material CursorMaterial;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float NormalCursorScale;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool LaserEnabled;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color LaserColor;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color LaserColorEnd;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color LaserColorNotHit;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color LaserColorNotHitEnd;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float LaserColorNotHitLen;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool LaserAlwaysOn;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float LaserStartWidth;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float LaserEndWidth;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool OnCanvas;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool CanvasUsed;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform[] Cursors;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform[] LaserLoc;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool SpacefolkHandPointWhenLaserOn;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SpacefolkHandModel[] MySpacefolkHandModel;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[OVRLayer]
		public int LaserLayer;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject[] CurrentPoint;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool Initialized;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool DelayedInitialized;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Camera ControllerCamera;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NVRPlayer Player;

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0x1B5057C", Offset = "0x1B5057C", VA = "0x1B5057C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0x1B50584", Offset = "0x1B50584", VA = "0x1B50584")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90ACF8", Offset = "0x90ACF8")]
		private IEnumerator InitCR()
		{
			return null;
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0x1B505FC", Offset = "0x1B505FC", VA = "0x1B505FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90AD58", Offset = "0x90AD58")]
		private IEnumerator GetLocatorsFromSpacefolkHand(int index)
		{
			return null;
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0x1B50684", Offset = "0x1B50684", VA = "0x1B50684", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x1B50724", Offset = "0x1B50724", VA = "0x1B50724", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x1B5075C", Offset = "0x1B5075C", VA = "0x1B5075C")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x1B50878", Offset = "0x1B50878", VA = "0x1B50878")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x1B50B80", Offset = "0x1B50B80", VA = "0x1B50B80")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x1B51174", Offset = "0x1B51174", VA = "0x1B51174")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0x1B5120C", Offset = "0x1B5120C", VA = "0x1B5120C")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x1B51304", Offset = "0x1B51304", VA = "0x1B51304")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x1B51468", Offset = "0x1B51468", VA = "0x1B51468")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x1B51538", Offset = "0x1B51538", VA = "0x1B51538", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x1B5153C", Offset = "0x1B5153C", VA = "0x1B5153C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x1B522FC", Offset = "0x1B522FC", VA = "0x1B522FC")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0x1B5239C", Offset = "0x1B5239C", VA = "0x1B5239C")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0x1B5243C", Offset = "0x1B5243C", VA = "0x1B5243C")]
		public NVRCanvasInput()
		{
		}
	}
	[Token(Token = "0x200077F")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000780")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0x16B6A8C", Offset = "0x16B6A8C", VA = "0x16B6A8C")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0340", Offset = "0x8F0340")]
		private sealed class <DoLongHapticPulse>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NVRHand <>4__this;

			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float amplitude;

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public NVRButtons button;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__2;

			[Token(Token = "0x17000631")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ECB")]
				[Address(RVA = "0x16B6A3C", Offset = "0x16B6A3C", VA = "0x16B6A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000632")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ECD")]
				[Address(RVA = "0x16B6A84", Offset = "0x16B6A84", VA = "0x16B6A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0x16B6950", Offset = "0x16B6950", VA = "0x16B6950")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0x16B697C", Offset = "0x16B697C", VA = "0x16B697C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0x16B6980", Offset = "0x16B6980", VA = "0x16B6980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0x16B6A44", Offset = "0x16B6A44", VA = "0x16B6A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtons HoldButton;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons UseButton;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject CustomModel;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject CustomPhysicalColliders;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VisibilityLevel CurrentVisibility;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected bool VisibilityLocked;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public HandState CurrentHandState;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FB644", Offset = "0x8FB644")]
		public List<Collider> CurrentlyHoveringOverColliders;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public NVRInteractable ClosestInteractableObject;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[ReadOnly]
		public NVRInteractable ClosestAttachableInteractableObject;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool ClosestInteractableIsDirty;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FB6B0", Offset = "0x8FB6B0")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform grabPoint;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public NVRInteractableEvent OnBeginUseInteraction;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NVRInteractableEvent OnEndUseInteraction;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public NVRInteractableEvent OnBeginHovering;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NVRInteractableEvent OnEndHovering;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int EstimationSampleIndex;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3[] LastPositions;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Quaternion[] LastRotations;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float[] LastDeltas;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected int EstimationSamples;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider[] GhostColliders;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Renderer[] GhostRenderers;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public NVRInputDevice InputDevice;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected GameObject RenderModel;

		[Token(Token = "0x17000622")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0x1B55DBC", Offset = "0x1B55DBC", VA = "0x1B55DBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000623")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x6002E9C")]
			[Address(RVA = "0x1B55E1C", Offset = "0x1B55E1C", VA = "0x1B55E1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000624")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x6002E9D")]
			[Address(RVA = "0x1B4B34C", Offset = "0x1B4B34C", VA = "0x1B4B34C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000625")]
		public float HoldButtonAxis
		{
			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0x1B55E7C", Offset = "0x1B55E7C", VA = "0x1B55E7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000626")]
		public bool UseButtonDown
		{
			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0x1B55EDC", Offset = "0x1B55EDC", VA = "0x1B55EDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000627")]
		public bool UseButtonUp
		{
			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0x1B55F3C", Offset = "0x1B55F3C", VA = "0x1B55F3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000628")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0x1B55F9C", Offset = "0x1B55F9C", VA = "0x1B55F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000629")]
		public float UseButtonAxis
		{
			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0x1B55FFC", Offset = "0x1B55FFC", VA = "0x1B55FFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062A")]
		public Transform GrabPoint
		{
			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0x1B5605C", Offset = "0x1B5605C", VA = "0x1B5605C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062B")]
		public bool IsHovering
		{
			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x1B560E8", Offset = "0x1B560E8", VA = "0x1B560E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700062C")]
		public bool IsInteracting
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0x1B5613C", Offset = "0x1B5613C", VA = "0x1B5613C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700062D")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0x1B561A8", Offset = "0x1B561A8", VA = "0x1B561A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700062E")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0x1B52264", Offset = "0x1B52264", VA = "0x1B52264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700062F")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0x1B56214", Offset = "0x1B56214", VA = "0x1B56214")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000630")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0x1B562C4", Offset = "0x1B562C4", VA = "0x1B562C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0x1B56374", Offset = "0x1B56374", VA = "0x1B56374", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0x1B56C58", Offset = "0x1B56C58", VA = "0x1B56C58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0x1B56CAC", Offset = "0x1B56CAC", VA = "0x1B56CAC", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0x1B56ED4", Offset = "0x1B56ED4", VA = "0x1B56ED4")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0x1B56D84", Offset = "0x1B56D84", VA = "0x1B56D84")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0x1B56FA4", Offset = "0x1B56FA4", VA = "0x1B56FA4")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0x1B57160", Offset = "0x1B57160", VA = "0x1B57160")]
		protected void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0x1B548C8", Offset = "0x1B548C8", VA = "0x1B548C8")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0x1B576C8", Offset = "0x1B576C8", VA = "0x1B576C8")]
		public void LongHapticPulse(float seconds, float amplitude, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0x1B576F4", Offset = "0x1B576F4", VA = "0x1B576F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90AE58", Offset = "0x90AE58")]
		private IEnumerator DoLongHapticPulse(float seconds, float amplitude, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0x1B57794", Offset = "0x1B57794", VA = "0x1B57794")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0x1B57898", Offset = "0x1B57898", VA = "0x1B57898")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0x1B57A14", Offset = "0x1B57A14", VA = "0x1B57A14")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0x1B57AB0", Offset = "0x1B57AB0", VA = "0x1B57AB0")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0x1B57B78", Offset = "0x1B57B78", VA = "0x1B57B78", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0x1B57C78", Offset = "0x1B57C78", VA = "0x1B57C78", Slot = "7")]
		public virtual void BeginInteraction(NVRInteractable interactable, bool snapPosition = false)
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0x1B57D90", Offset = "0x1B57D90", VA = "0x1B57D90", Slot = "8")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0x1B580F4", Offset = "0x1B580F4", VA = "0x1B580F4")]
		public NVRInteractable GetClosest(bool mustBeAttachable = true)
		{
			return null;
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0x1B57324", Offset = "0x1B57324", VA = "0x1B57324")]
		protected bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0x1B58644", Offset = "0x1B58644", VA = "0x1B58644", Slot = "9")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0x1B5876C", Offset = "0x1B5876C", VA = "0x1B5876C", Slot = "10")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0x1B58840", Offset = "0x1B58840", VA = "0x1B58840")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0x1B588D8", Offset = "0x1B588D8", VA = "0x1B588D8")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0x1B588F8", Offset = "0x1B588F8", VA = "0x1B588F8")]
		public void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0x1B573CC", Offset = "0x1B573CC", VA = "0x1B573CC")]
		private void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x6002EC3")]
		[Address(RVA = "0x1B56A4C", Offset = "0x1B56A4C", VA = "0x1B56A4C")]
		protected void InitializeRenderModel()
		{
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0x1B58C04", Offset = "0x1B58C04", VA = "0x1B58C04", Slot = "11")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0x1B593A8", Offset = "0x1B593A8", VA = "0x1B593A8")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0x1B593DC", Offset = "0x1B593DC", VA = "0x1B593DC")]
		public NVRHand()
		{
		}
	}
	[Token(Token = "0x2000782")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x40023BD")]
		Invisible = 0,
		[Token(Token = "0x40023BE")]
		Ghost = 70,
		[Token(Token = "0x40023BF")]
		Visible = 100
	}
	[Token(Token = "0x2000783")]
	public enum HandState
	{
		[Token(Token = "0x40023C1")]
		Uninitialized,
		[Token(Token = "0x40023C2")]
		Idle,
		[Token(Token = "0x40023C3")]
		GripDownNotInteracting,
		[Token(Token = "0x40023C4")]
		GripDownInteracting,
		[Token(Token = "0x40023C5")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x40023C6")]
		GripToggleOnInteracting,
		[Token(Token = "0x40023C7")]
		GripToggleOff
	}
	[Token(Token = "0x2000784")]
	public enum InterationStyle
	{
		[Token(Token = "0x40023C9")]
		Hold,
		[Token(Token = "0x40023CA")]
		Toggle,
		[Token(Token = "0x40023CB")]
		ByScript
	}
	[Token(Token = "0x2000785")]
	public class NVRHandedInteractableItem : NVRInteractableItem
	{
		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Transform LeftHandInteractionPoint;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Transform RightHandInteractionPoint;

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0x1B59524", Offset = "0x1B59524", VA = "0x1B59524", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0x1B59590", Offset = "0x1B59590", VA = "0x1B59590")]
		public NVRHandedInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000786")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0x1B59594", Offset = "0x1B59594", VA = "0x1B59594", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0x1B59598", Offset = "0x1B59598", VA = "0x1B59598")]
		public NVRHead()
		{
		}
	}
	[Token(Token = "0x2000787")]
	public class NVRHelpers
	{
		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x17000633")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x1B595A0", Offset = "0x1B595A0", VA = "0x1B595A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0x1B590E0", Offset = "0x1B590E0", VA = "0x1B590E0")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0x1B59670", Offset = "0x1B59670", VA = "0x1B59670")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0x1B59884", Offset = "0x1B59884", VA = "0x1B59884")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0x1B59900", Offset = "0x1B59900", VA = "0x1B59900")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0x1B54C48", Offset = "0x1B54C48", VA = "0x1B54C48")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x1B54FB0", Offset = "0x1B54FB0", VA = "0x1B54FB0")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x1B59978", Offset = "0x1B59978", VA = "0x1B59978")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0x1B59A88", Offset = "0x1B59A88", VA = "0x1B59A88")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0x1B59A48", Offset = "0x1B59A48", VA = "0x1B59A48")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0x1B59A28", Offset = "0x1B59A28", VA = "0x1B59A28")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x1B59AEC", Offset = "0x1B59AEC", VA = "0x1B59AEC")]
		public NVRHelpers()
		{
		}
	}
	[Token(Token = "0x2000788")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand _hand;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<NVRButtons, string> ButtonNames;

		[Token(Token = "0x17000634")]
		protected NVRHand Hand
		{
			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0x1B5A130", Offset = "0x1B5A130", VA = "0x1B5A130")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0x1B5A138", Offset = "0x1B5A138", VA = "0x1B5A138")]
			set
			{
			}
		}

		[Token(Token = "0x17000635")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002EE1")]
			get;
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x1B5A140", Offset = "0x1B5A140", VA = "0x1B5A140", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EE2")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x6002EE3")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x6002EE4")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x6002EE5")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x6002EE6")]
		public abstract string GetDeviceName();

		[Token(Token = "0x6002EE7")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x6002EE8")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x6002EE9")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x6002EEA")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x6002EEB")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x6002EEC")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x6002EED")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x6002EEE")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x6002EEF")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x6002EF0")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x6002EF1")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x6002EF2")]
		public abstract bool GetNearTouch(NVRButtons button);

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x1B5A148", Offset = "0x1B5A148", VA = "0x1B5A148")]
		public string GetButtonName(NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x1B5A234", Offset = "0x1B5A234", VA = "0x1B5A234")]
		protected NVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected NVRPlayer Player;

		[Token(Token = "0x6002EF5")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x6002EF6")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x6002EF7")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x1B5A2B8", Offset = "0x1B5A2B8", VA = "0x1B5A2B8")]
		protected NVRIntegration()
		{
		}
	}
	[Token(Token = "0x200078A")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool CanAttach;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool AllowTwoHanded;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float DropDistance;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool HandleInterpolation;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RigidbodyInterpolation m_interpolation;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<NVRHand> AttachedHands;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB728", Offset = "0x8FB728")]
		private NVRHand <AttachedHand>k__BackingField;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FB738", Offset = "0x8FB738")]
		private bool <IsAttached>k__BackingField;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Collider[] Colliders;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x17000636")]
		public NVRHand AttachedHand
		{
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0x1B5A2C0", Offset = "0x1B5A2C0", VA = "0x1B5A2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AF08", Offset = "0x90AF08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0x1B5A2C8", Offset = "0x1B5A2C8", VA = "0x1B5A2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AF18", Offset = "0x90AF18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000637")]
		public bool IsAttached
		{
			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0x1B5A2D0", Offset = "0x1B5A2D0", VA = "0x1B5A2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AF28", Offset = "0x90AF28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0x1B5A2D8", Offset = "0x1B5A2D8", VA = "0x1B5A2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90AF38", Offset = "0x90AF38")]
			private set
			{
			}
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0x1B5A2E4", Offset = "0x1B5A2E4", VA = "0x1B5A2E4", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0x1B5A6E8", Offset = "0x1B5A6E8", VA = "0x1B5A6E8", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x1B5A820", Offset = "0x1B5A820", VA = "0x1B5A820", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0x1B5A82C", Offset = "0x1B5A82C", VA = "0x1B5A82C", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x1B5A8A8", Offset = "0x1B5A8A8", VA = "0x1B5A8A8", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x1B5AC3C", Offset = "0x1B5AC3C", VA = "0x1B5AC3C")]
		private void UpdateChildColliders()
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0x1B5A630", Offset = "0x1B5A630", VA = "0x1B5A630")]
		private void UpdateParentColliders()
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0x1B5AD4C", Offset = "0x1B5AD4C", VA = "0x1B5AD4C", Slot = "9")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0x1B5AF18", Offset = "0x1B5AF18", VA = "0x1B5AF18", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0x1B59580", Offset = "0x1B59580", VA = "0x1B59580", Slot = "11")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0x1B5AF1C", Offset = "0x1B5AF1C", VA = "0x1B5AF1C", Slot = "12")]
		public virtual void BeginInteraction(NVRHand hand, bool snapToHand = false)
		{
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x1B543AC", Offset = "0x1B543AC", VA = "0x1B543AC", Slot = "13")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x1B5A44C", Offset = "0x1B5A44C", VA = "0x1B5A44C")]
		public void ForceDetach([Optional] NVRHand hand)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x1B5AFE8", Offset = "0x1B5AFE8", VA = "0x1B5AFE8", Slot = "14")]
		public virtual void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x1B5B0D0", Offset = "0x1B5B0D0", VA = "0x1B5B0D0", Slot = "15")]
		protected virtual void DroppedBecauseOfDistance(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x1B5B0F8", Offset = "0x1B5B0F8", VA = "0x1B5B0F8", Slot = "16")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x1B5B0FC", Offset = "0x1B5B0FC", VA = "0x1B5B0FC", Slot = "17")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x1B5B100", Offset = "0x1B5B100", VA = "0x1B5B100", Slot = "18")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1B5B120", Offset = "0x1B5B120", VA = "0x1B5B120", Slot = "19")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x1B5B140", Offset = "0x1B5B140", VA = "0x1B5B140", Slot = "20")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1B5A59C", Offset = "0x1B5A59C", VA = "0x1B5A59C")]
		private void UpdateAttachedHands()
		{
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x1B5B3F8", Offset = "0x1B5B3F8", VA = "0x1B5B3F8")]
		protected NVRInteractable()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x40023E0")]
		protected const float MaxVelocityChange = 100f;

		[Token(Token = "0x40023E1")]
		protected const float MaxAngularVelocityChange = 200f;

		[Token(Token = "0x40023E2")]
		protected const float VelocityMagic = 6000f;

		[Token(Token = "0x40023E3")]
		protected const float AngularVelocityMagic = 50f;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB748", Offset = "0x8FB748")]
		public Transform InteractionPoint;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<NVRHand, Transform> PickupTransforms;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool HasExternalVelocity;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool HasExternalAngularVelocity;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float StartingDrag;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float StartingAngularDrag;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Quaternion twoHandedRotationOffset;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool ItemManipulatorEnabled;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Quaternion m_rotOffset;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 centreOffset;

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x1B5B4C4", Offset = "0x1B5B4C4", VA = "0x1B5B4C4")]
		public Transform GetPickupTransform(NVRHand h)
		{
			return null;
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x1B5B538", Offset = "0x1B5B538", VA = "0x1B5B538", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x1B5B618", Offset = "0x1B5B618", VA = "0x1B5B618", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0x1B5B798", Offset = "0x1B5B798", VA = "0x1B5B798", Slot = "4")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0x1B5B7F4", Offset = "0x1B5B7F4", VA = "0x1B5B7F4", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0x1B5B850", Offset = "0x1B5B850", VA = "0x1B5B850", Slot = "22")]
		protected virtual void GetTargetValues(out Vector3 handPosition, out Quaternion handRotation, out Vector3 targetItemPosition, out Quaternion targetItemRotation)
		{
		}

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0x1B5BE48", Offset = "0x1B5BE48", VA = "0x1B5BE48", Slot = "23")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x1B5C250", Offset = "0x1B5C250", VA = "0x1B5C250", Slot = "24")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x1B5C368", Offset = "0x1B5C368", VA = "0x1B5C368", Slot = "18")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x1B5C3FC", Offset = "0x1B5C3FC", VA = "0x1B5C3FC", Slot = "19")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0x1B5C490", Offset = "0x1B5C490", VA = "0x1B5C490", Slot = "12")]
		public override void BeginInteraction(NVRHand hand, bool snapToHand = false)
		{
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0x1B5CA08", Offset = "0x1B5CA08", VA = "0x1B5CA08", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0x1B5CE78", Offset = "0x1B5CE78", VA = "0x1B5CE78", Slot = "7")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0x1B548B4", Offset = "0x1B548B4", VA = "0x1B548B4", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x1B5CEAC", Offset = "0x1B5CEAC", VA = "0x1B5CEAC", Slot = "16")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0x1B5CEC0", Offset = "0x1B5CEC0", VA = "0x1B5CEC0", Slot = "25")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x1B5D11C", Offset = "0x1B5D11C", VA = "0x1B5D11C", Slot = "26")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0x1B5CF98", Offset = "0x1B5CF98", VA = "0x1B5CF98")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x1B5C8BC", Offset = "0x1B5C8BC", VA = "0x1B5C8BC")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x1B5CD18", Offset = "0x1B5CD18", VA = "0x1B5CD18")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x1B54480", Offset = "0x1B54480", VA = "0x1B54480", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x1B545C8", Offset = "0x1B545C8", VA = "0x1B545C8")]
		public NVRInteractableItem()
		{
		}
	}
	[Token(Token = "0x200078C")]
	public class NVRInteractableItemClippable : NVRInteractableItem
	{
		[Token(Token = "0x6002F29")]
		[Address(RVA = "0x1B5D1CC", Offset = "0x1B5D1CC", VA = "0x1B5D1CC", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0x1B5D25C", Offset = "0x1B5D25C", VA = "0x1B5D25C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0x1B5D29C", Offset = "0x1B5D29C", VA = "0x1B5D29C", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0x1B5D2D0", Offset = "0x1B5D2D0", VA = "0x1B5D2D0")]
		public NVRInteractableItemClippable()
		{
		}
	}
	[Token(Token = "0x200078D")]
	public class NVRInteractableItemSnappable : NVRInteractableItem
	{
		[Token(Token = "0x200078E")]
		private enum positionalSnapping
		{
			[Token(Token = "0x4002401")]
			grid,
			[Token(Token = "0x4002402")]
			objects
		}

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float snapToMeters;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float snapToAngle;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool snap;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool set;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastSnappedPosition;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastSnappedRotation;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private positionalSnapping snappingType;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private NVRSnappable snappable;

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0x1B5D2D4", Offset = "0x1B5D2D4", VA = "0x1B5D2D4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0x1B5D47C", Offset = "0x1B5D47C", VA = "0x1B5D47C")]
		private Vector3 SnapPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0x1B5D694", Offset = "0x1B5D694", VA = "0x1B5D694")]
		private Quaternion SnapRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0x1B5D8D8", Offset = "0x1B5D8D8", VA = "0x1B5D8D8", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x1B5DE38", Offset = "0x1B5DE38", VA = "0x1B5DE38", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x1B5DE4C", Offset = "0x1B5DE4C", VA = "0x1B5DE4C")]
		public NVRInteractableItemSnappable()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float CurrentAngle;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x17000638")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6002F33")]
			[Address(RVA = "0x1B5DE64", Offset = "0x1B5DE64", VA = "0x1B5DE64", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0x1B5DE6C", Offset = "0x1B5DE6C", VA = "0x1B5DE6C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x1B5DEA4", Offset = "0x1B5DEA4", VA = "0x1B5DEA4", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x1B5E028", Offset = "0x1B5E028", VA = "0x1B5E028", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1B5E1C0", Offset = "0x1B5E1C0", VA = "0x1B5E1C0", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1B5E298", Offset = "0x1B5E298", VA = "0x1B5E298")]
		public NVRInteractableRotator()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<NVRInteractable> NVRInteractableList;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool Initialized;

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x1B5E29C", Offset = "0x1B5E29C", VA = "0x1B5E29C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x1B5A948", Offset = "0x1B5A948", VA = "0x1B5A948")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x1B5B1AC", Offset = "0x1B5B1AC", VA = "0x1B5B1AC")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x1B58510", Offset = "0x1B58510", VA = "0x1B58510")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x1B58AD0", Offset = "0x1B58AD0", VA = "0x1B58AD0")]
		public static Collider[] GetColliders(NVRInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x1B5E434", Offset = "0x1B5E434", VA = "0x1B5E434")]
		public static List<NVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x1B5E498", Offset = "0x1B5E498", VA = "0x1B5E498")]
		public NVRInteractables()
		{
		}
	}
	[Token(Token = "0x2000791")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float SnapDistance;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float RungAngleInterval;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x1B5E4A4", Offset = "0x1B5E4A4", VA = "0x1B5E4A4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x1B5E534", Offset = "0x1B5E534", VA = "0x1B5E534", Slot = "22")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x1B5E6CC", Offset = "0x1B5E6CC", VA = "0x1B5E6CC", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x1B550AC", Offset = "0x1B550AC", VA = "0x1B550AC")]
		public string GetLetter()
		{
			return null;
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x1B5E70C", Offset = "0x1B5E70C", VA = "0x1B5E70C")]
		public NVRLetterSpinner()
		{
		}
	}
	[Token(Token = "0x2000792")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x2000793")]
		public enum LeverPosition
		{
			[Token(Token = "0x400241B")]
			Off,
			[Token(Token = "0x400241C")]
			Mid,
			[Token(Token = "0x400241D")]
			On
		}

		[Token(Token = "0x2000794")]
		public enum RotationAxis
		{
			[Token(Token = "0x400241F")]
			XAxis,
			[Token(Token = "0x4002420")]
			YAxis,
			[Token(Token = "0x4002421")]
			ZAxis
		}

		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0350", Offset = "0x8F0350")]
		private sealed class <HoldPosition>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRLever <>4__this;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x1700063A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F54")]
				[Address(RVA = "0x16B6BF8", Offset = "0x16B6BF8", VA = "0x16B6BF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F56")]
				[Address(RVA = "0x16B6C40", Offset = "0x16B6C40", VA = "0x16B6C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x16B6AD8", Offset = "0x16B6AD8", VA = "0x16B6AD8")]
			[DebuggerHidden]
			public <HoldPosition>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x16B6B04", Offset = "0x16B6B04", VA = "0x16B6B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F53")]
			[Address(RVA = "0x16B6B08", Offset = "0x16B6B08", VA = "0x16B6B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F55")]
			[Address(RVA = "0x16B6C00", Offset = "0x16B6C00", VA = "0x16B6C00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float LastValue;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float CurrentValue;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool LeverEngaged;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float EngageWaitTime;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected bool UseMotor;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected Quaternion Max;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected Quaternion Mid;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Quaternion Min;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected float AngleRange;

		[Token(Token = "0x17000639")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6002F47")]
			[Address(RVA = "0x1B5E7A8", Offset = "0x1B5E7A8", VA = "0x1B5E7A8", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0x1B5E7B0", Offset = "0x1B5E7B0", VA = "0x1B5E7B0", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x1B5EB70", Offset = "0x1B5EB70", VA = "0x1B5EB70", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0x1B5ECF0", Offset = "0x1B5ECF0", VA = "0x1B5ECF0", Slot = "28")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x1B5ED9C", Offset = "0x1B5ED9C", VA = "0x1B5ED9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90AF48", Offset = "0x90AF48")]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0x1B5EE24", Offset = "0x1B5EE24", VA = "0x1B5EE24", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0x1B5EFD0", Offset = "0x1B5EFD0", VA = "0x1B5EFD0", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0x1B5EC0C", Offset = "0x1B5EC0C", VA = "0x1B5EC0C")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x1B5ECB8", Offset = "0x1B5ECB8", VA = "0x1B5ECB8")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0x1B5F0BC", Offset = "0x1B5F0BC", VA = "0x1B5F0BC")]
		public NVRLever()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0360", Offset = "0x8F0360")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400242F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type componentType;

			[Token(Token = "0x6002F62")]
			[Address(RVA = "0x16B6C48", Offset = "0x16B6C48", VA = "0x16B6C48")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002F63")]
			[Address(RVA = "0x16B6C50", Offset = "0x16B6C50", VA = "0x16B6C50")]
			internal bool <Initialize>b__0(Type keepType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand Hand;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool State;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] Colliders;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Type[] KeepTypes;

		[Token(Token = "0x1700063C")]
		protected float DropDistance
		{
			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x19A53D4", Offset = "0x19A53D4", VA = "0x19A53D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0x19A53DC", Offset = "0x19A53DC", VA = "0x19A53DC")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x19A6078", Offset = "0x19A6078", VA = "0x19A6078")]
		public void Kill()
		{
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x19A60EC", Offset = "0x19A60EC", VA = "0x19A60EC")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x19A61A4", Offset = "0x19A61A4", VA = "0x19A61A4")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x19A63A0", Offset = "0x19A63A0", VA = "0x19A63A0", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x19A63DC", Offset = "0x19A63DC", VA = "0x19A63DC", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x19A5FB4", Offset = "0x19A5FB4", VA = "0x19A5FB4")]
		public void On()
		{
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x19A5F7C", Offset = "0x19A5F7C", VA = "0x19A5F7C")]
		public void Off()
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x19A5C70", Offset = "0x19A5C70", VA = "0x19A5C70")]
		protected void SetupCustomModel()
		{
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x19A63F8", Offset = "0x19A63F8", VA = "0x19A63F8")]
		public NVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public class NVRPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0370", Offset = "0x8F0370")]
		private sealed class <>c
		{
			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NVRPlayer, bool> <>9__4_0;

			[Token(Token = "0x6002F72")]
			[Address(RVA = "0x16B6D64", Offset = "0x16B6D64", VA = "0x16B6D64")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F73")]
			[Address(RVA = "0x16B6D6C", Offset = "0x16B6D6C", VA = "0x16B6D6C")]
			internal bool <get_Instance>b__4_0(NVRPlayer player)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0380", Offset = "0x8F0380")]
		private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRPlayer <>4__this;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NVRSDKIntegrations <CurrentIntegrationType>5__2;

			[Token(Token = "0x1700063F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F77")]
				[Address(RVA = "0x16B7070", Offset = "0x16B7070", VA = "0x16B7070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000640")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F79")]
				[Address(RVA = "0x16B70B8", Offset = "0x16B70B8", VA = "0x16B70B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F74")]
			[Address(RVA = "0x16B6E2C", Offset = "0x16B6E2C", VA = "0x16B6E2C")]
			[DebuggerHidden]
			public <Start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x16B6E58", Offset = "0x16B6E58", VA = "0x16B6E58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F76")]
			[Address(RVA = "0x16B6E5C", Offset = "0x16B6E5C", VA = "0x16B6E5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F78")]
			[Address(RVA = "0x16B7078", Offset = "0x16B7078", VA = "0x16B7078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DecimalConstantAttribute", RVA = "0x8FB7A0", Offset = "0x8FB7A0")]
		public static readonly decimal NewtonVRVersion;

		[Token(Token = "0x4002431")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool UnityXREnabled;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[HideInInspector]
		public bool WindowsMREnabled;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool PhysicalHands;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool VibrateOnHover;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int VelocityHistorySteps;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB804", Offset = "0x8FB804")]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB814", Offset = "0x8FB814")]
		[HideInInspector]
		public bool OverrideAll;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject OverrideAllLeftHand;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public GameObject OverrideAllLeftHandPhysicalColliders;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject OverrideAllRightHand;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject OverrideAllRightHandPhysicalColliders;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool OverrideSteamVR;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHand;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHandPhysicalColliders;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHand;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHandPhysicalColliders;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public bool OverrideOculus;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHand;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHandPhysicalColliders;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public GameObject OverrideOculusRightHand;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public GameObject OverrideOculusRightHandPhysicalColliders;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB92C", Offset = "0x8FB92C")]
		public NVRHead Head;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public NVRHand LeftHand;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NVRHand RightHand;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NVRIntegration Integration;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8FB95C", Offset = "0x8FB95C")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x1700063D")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x6002F64")]
			[Address(RVA = "0x19A6680", Offset = "0x19A6680", VA = "0x19A6680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063E")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x19A67D8", Offset = "0x19A67D8", VA = "0x19A67D8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0x19A6A7C", Offset = "0x19A6A7C", VA = "0x19A6A7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x19A6CE0", Offset = "0x19A6CE0", VA = "0x19A6CE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90AFF8", Offset = "0x90AFF8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0x19A6D58", Offset = "0x19A6D58", VA = "0x19A6D58")]
		private void SetupIntegration(NVRSDKIntegrations cit, bool logOutput = true)
		{
		}

		[Token(Token = "0x6002F69")]
		[Address(RVA = "0x19A6F24", Offset = "0x19A6F24", VA = "0x19A6F24")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0x19A7230", Offset = "0x19A7230", VA = "0x19A7230")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0x19A734C", Offset = "0x19A734C", VA = "0x19A734C")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0x19A73B0", Offset = "0x19A73B0", VA = "0x19A73B0")]
		public static void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x19A76C0", Offset = "0x19A76C0", VA = "0x19A76C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x19A774C", Offset = "0x19A774C", VA = "0x19A774C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0x19A7764", Offset = "0x19A7764", VA = "0x19A7764")]
		public NVRPlayer()
		{
		}
	}
	[Token(Token = "0x200079B")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4002465")]
		None,
		[Token(Token = "0x4002466")]
		FallbackNonVR,
		[Token(Token = "0x4002467")]
		SteamVR,
		[Token(Token = "0x4002468")]
		Oculus,
		[Token(Token = "0x4002469")]
		WindowsMR,
		[Token(Token = "0x400246A")]
		UnityXR
	}
	[Token(Token = "0x200079C")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB96C", Offset = "0x8FB96C")]
		public float CurrentValue;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB9A4", Offset = "0x8FB9A4")]
		public Transform StartPoint;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FB9DC", Offset = "0x8FB9DC")]
		public Transform EndPoint;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform PickupTransform;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 SliderPath;

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x19A786C", Offset = "0x19A786C", VA = "0x19A786C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x19A7A98", Offset = "0x19A7A98", VA = "0x19A7A98", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x19A7C6C", Offset = "0x19A7C6C", VA = "0x19A7C6C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x19A7DD0", Offset = "0x19A7DD0", VA = "0x19A7DD0", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x19A7C64", Offset = "0x19A7C64", VA = "0x19A7C64")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x19A7EAC", Offset = "0x19A7EAC", VA = "0x19A7EAC")]
		public void SetValue(float newValue)
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x19A7F6C", Offset = "0x19A7F6C", VA = "0x19A7F6C")]
		public NVRSlider()
		{
		}
	}
	[Token(Token = "0x200079D")]
	public class NVRSnappable : MonoBehaviour
	{
		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<NVRSnappable> snappables;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider[] colliders;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool snapping;

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x19A7F80", Offset = "0x19A7F80", VA = "0x19A7F80")]
		public static void ClearSnappables()
		{
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0x19A7FEC", Offset = "0x19A7FEC", VA = "0x19A7FEC")]
		public void StartSnapping()
		{
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x19A7FF8", Offset = "0x19A7FF8", VA = "0x19A7FF8")]
		public void StopSnapping()
		{
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x19A8000", Offset = "0x19A8000", VA = "0x19A8000")]
		public NVRAlignment SnapToNearest(Vector3 position, float maxSnapDistance)
		{
			return null;
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x19A8490", Offset = "0x19A8490", VA = "0x19A8490")]
		public NVRAlignment SnapToBounds(Vector3 position, Bounds snappingBounds)
		{
			return null;
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0x19A83A4", Offset = "0x19A83A4", VA = "0x19A83A4")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0x19A8620", Offset = "0x19A8620", VA = "0x19A8620")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0x19A867C", Offset = "0x19A867C", VA = "0x19A867C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0x19A875C", Offset = "0x19A875C", VA = "0x19A875C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0x19A87DC", Offset = "0x19A87DC", VA = "0x19A87DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0x19A8680", Offset = "0x19A8680", VA = "0x19A8680")]
		private void TrackSelf()
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x19A8760", Offset = "0x19A8760", VA = "0x19A8760")]
		private void ClearSelf()
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x19A87E0", Offset = "0x19A87E0", VA = "0x19A87E0")]
		public NVRSnappable()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public class NVRSnappingInteractableItem : NVRInteractableItem
	{
		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float snapToMeters;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float snapToDegrees;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool snap;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool set;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastSnappedPosition;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastSnappedRotation;

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x19A87E8", Offset = "0x19A87E8", VA = "0x19A87E8")]
		private Vector3 SnapPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x19A8A00", Offset = "0x19A8A00", VA = "0x19A8A00")]
		private Quaternion SnapRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x19A8C44", Offset = "0x19A8C44", VA = "0x19A8C44", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0x19A9110", Offset = "0x19A9110", VA = "0x19A9110", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x19A911C", Offset = "0x19A911C", VA = "0x19A911C")]
		public NVRSnappingInteractableItem()
		{
		}
	}
	[Token(Token = "0x200079F")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CurrentState;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LastState;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool FixedState;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform OnButton;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OffButton;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float ForceMagic;

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x19A994C", Offset = "0x19A994C", VA = "0x19A994C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x19A9B08", Offset = "0x19A9B08", VA = "0x19A9B08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x19A9CB8", Offset = "0x19A9CB8", VA = "0x19A9CB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x19A99B4", Offset = "0x19A99B4", VA = "0x19A99B4")]
		private void SetRotation(bool forState)
		{
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0x19A9CCC", Offset = "0x19A9CCC", VA = "0x19A9CCC")]
		public NVRSwitch()
		{
		}
	}
	[Token(Token = "0x20007A0")]
	public class NVRTeleportController : MonoBehaviour
	{
		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BeamStart;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRTeleporter teleporter;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int controllerIndex;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool held;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3? validTeleportPosition;

		[Token(Token = "0x17000641")]
		private NVRHand nvrHand
		{
			[Token(Token = "0x6002F98")]
			[Address(RVA = "0x19A9CEC", Offset = "0x19A9CEC", VA = "0x19A9CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x19A9DD4", Offset = "0x19A9DD4", VA = "0x19A9DD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x19A9FA8", Offset = "0x19A9FA8", VA = "0x19A9FA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x19AAAAC", Offset = "0x19AAAAC", VA = "0x19AAAAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x19AAB3C", Offset = "0x19AAB3C", VA = "0x19AAB3C")]
		public NVRTeleportController()
		{
		}
	}
	[Token(Token = "0x20007A1")]
	public class NVRTeleporter : MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		public class TeleportPreview
		{
			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LineRenderer ArcLine;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject PlaySpaceDisplay;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject InvalidPointDisplay;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject TeleportTargetDisplay;

			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x16B74A0", Offset = "0x16B74A0", VA = "0x16B74A0")]
			public TeleportPreview()
			{
			}
		}

		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0390", Offset = "0x8F0390")]
		private sealed class <DoTunnelTeleport>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRTeleporter <>4__this;

			[Token(Token = "0x40024A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 teleportPosition;

			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <easeInStartTime>5__2;

			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <easeInEndTime>5__3;

			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <moveTimeStart>5__4;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <moveTimeEnd>5__5;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <initialPosition>5__6;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <endPosition>5__7;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <easeOutStartTime>5__8;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <easeOutEndTime>5__9;

			[Token(Token = "0x17000643")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FB2")]
				[Address(RVA = "0x16B7450", Offset = "0x16B7450", VA = "0x16B7450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000644")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FB4")]
				[Address(RVA = "0x16B7498", Offset = "0x16B7498", VA = "0x16B7498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0x16B70C0", Offset = "0x16B70C0", VA = "0x16B70C0")]
			[DebuggerHidden]
			public <DoTunnelTeleport>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x16B70EC", Offset = "0x16B70EC", VA = "0x16B70EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x16B70F0", Offset = "0x16B70F0", VA = "0x16B70F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x16B7458", Offset = "0x16B7458", VA = "0x16B7458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool TunnelTeleport;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TunnelOverTime;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VignettePower;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float VignetteEaseInTime;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float VignetteEaseOutTime;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LineRenderer ArcRendererDisplay;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject PlaySpaceDisplay;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject InvalidPointDisplay;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject TargetDisplay;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LimitToHorizontal;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float LimitSensitivity;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NVRButtons TeleportButton;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public LayerMask TeleportSurfaceMask;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LayerMask TeleportBlockMask;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private LayerMask fullMask;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ArcStrength;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float ArcMaxLength;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float SampleFrequency;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float curveMod;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float acceleration;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float arcLineDisplayOffset;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float playspaceVerticalOffset;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<int, TeleportPreview> teleportPreviews;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NVRPlayer player;

		[Token(Token = "0x17000642")]
		private int samplePoints
		{
			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0x19AAB44", Offset = "0x19AAB44", VA = "0x19AAB44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x19AAB54", Offset = "0x19AAB54", VA = "0x19AAB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x19AABFC", Offset = "0x19AABFC", VA = "0x19AABFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x19AAD5C", Offset = "0x19AAD5C", VA = "0x19AAD5C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x19AA0F8", Offset = "0x19AA0F8", VA = "0x19AA0F8")]
		public Vector3? UpdateArcTeleport(Transform origin, int controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x19AA8FC", Offset = "0x19AA8FC", VA = "0x19AA8FC")]
		public void HideArcTeleport(int controllerIndex)
		{
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x19AADC4", Offset = "0x19AADC4", VA = "0x19AADC4")]
		private bool CheckTeleportCurve(Vector3 startingPoint, Vector3 initialVelocity, Vector3 initialAcceleration, out List<Vector3> points, out bool hit, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x19AAA64", Offset = "0x19AAA64", VA = "0x19AAA64")]
		public void TeleportPlayer(Vector3 teleportPosition)
		{
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x19AB21C", Offset = "0x19AB21C", VA = "0x19AB21C")]
		private void MovePosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x19AB4D4", Offset = "0x19AB4D4", VA = "0x19AB4D4")]
		private Vector3 GetPlayerPositionFromCameraPosition(Vector3 newCameraFloor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x19AB5DC", Offset = "0x19AB5DC", VA = "0x19AB5DC")]
		private void MovePlayer(Vector3 newPlayerPosition)
		{
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x19AB180", Offset = "0x19AB180", VA = "0x19AB180")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B0A8", Offset = "0x90B0A8")]
		private IEnumerator DoTunnelTeleport(Vector3 teleportPosition)
		{
			return null;
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x19AB108", Offset = "0x19AB108", VA = "0x19AB108")]
		private Vector3 CurveDerivitive(Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0x19AB804", Offset = "0x19AB804", VA = "0x19AB804")]
		private float CurveDerivitive(float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x19AB124", Offset = "0x19AB124", VA = "0x19AB124")]
		private Vector3 Curve(Vector3 point, Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x19AB810", Offset = "0x19AB810", VA = "0x19AB810")]
		private float Curve(float point, float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x19AB830", Offset = "0x19AB830", VA = "0x19AB830")]
		public NVRTeleporter()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x19AB880", Offset = "0x19AB880", VA = "0x19AB880", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x19AB888", Offset = "0x19AB888", VA = "0x19AB888")]
		public NVRUIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class NVRVignette : MonoBehaviour
	{
		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader vignetteShader;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int vignetteProperty;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRVignette instance;

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0x19AE494", Offset = "0x19AE494", VA = "0x19AE494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0x19AE5D0", Offset = "0x19AE5D0", VA = "0x19AE5D0")]
		public void SetAmount(float newFeather)
		{
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0x19AE5F4", Offset = "0x19AE5F4", VA = "0x19AE5F4")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0x19AE674", Offset = "0x19AE674", VA = "0x19AE674")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x19AE6DC", Offset = "0x19AE6DC", VA = "0x19AE6DC")]
		public NVRVignette()
		{
		}
	}
	[Token(Token = "0x20007A6")]
	public class NVRVirtualHand : NVRHand
	{
		[Token(Token = "0x20007A7")]
		public enum Handedness
		{
			[Token(Token = "0x40024B7")]
			Left,
			[Token(Token = "0x40024B8")]
			Right
		}

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Handedness Hand;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float radius;

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0x19AE6E4", Offset = "0x19AE6E4", VA = "0x19AE6E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x19AE6F4", Offset = "0x19AE6F4", VA = "0x19AE6F4", Slot = "4")]
		public override void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x19AEA84", Offset = "0x19AEA84", VA = "0x19AEA84", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x19AEB54", Offset = "0x19AEB54", VA = "0x19AEB54")]
		public void Hold()
		{
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0x19AEB90", Offset = "0x19AEB90", VA = "0x19AEB90")]
		public void Release()
		{
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x19AEC20", Offset = "0x19AEC20", VA = "0x19AEC20")]
		public void Use()
		{
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0x19AECB8", Offset = "0x19AECB8", VA = "0x19AECB8")]
		public void EndUse()
		{
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x19AED50", Offset = "0x19AED50", VA = "0x19AED50", Slot = "11")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0x19AEF58", Offset = "0x19AEF58", VA = "0x19AEF58")]
		public NVRVirtualHand()
		{
		}
	}
	[Token(Token = "0x20007A8")]
	public class NVRVirtualInputDevice : NVRInputDevice
	{
		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RenderModel;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x17000645")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x19AEFCC", Offset = "0x19AEFCC", VA = "0x19AEFCC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x19AEF68", Offset = "0x19AEF68", VA = "0x19AEF68", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0x19AEF70", Offset = "0x19AEF70", VA = "0x19AEF70", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0x19AEF78", Offset = "0x19AEF78", VA = "0x19AEF78", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0x19AEF80", Offset = "0x19AEF80", VA = "0x19AEF80", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x19AEF88", Offset = "0x19AEF88", VA = "0x19AEF88", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x19AEF90", Offset = "0x19AEF90", VA = "0x19AEF90", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x19AEF98", Offset = "0x19AEF98", VA = "0x19AEF98", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0x19AEFA0", Offset = "0x19AEFA0", VA = "0x19AEFA0", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x19AEFA8", Offset = "0x19AEFA8", VA = "0x19AEFA8", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x19AEFB0", Offset = "0x19AEFB0", VA = "0x19AEFB0", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x19AEFB8", Offset = "0x19AEFB8", VA = "0x19AEFB8", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x19AEFC0", Offset = "0x19AEFC0", VA = "0x19AEFC0", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x19AEFC8", Offset = "0x19AEFC8", VA = "0x19AEFC8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x19AEFD4", Offset = "0x19AEFD4", VA = "0x19AEFD4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x19AF018", Offset = "0x19AF018", VA = "0x19AF018", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x19AF020", Offset = "0x19AF020", VA = "0x19AF020", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x19AF0C0", Offset = "0x19AF0C0", VA = "0x19AF0C0", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x19AF190", Offset = "0x19AF190", VA = "0x19AF190", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x19AF27C", Offset = "0x19AF27C", VA = "0x19AF27C")]
		public NVRVirtualInputDevice()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000646")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FD9")]
			[Address(RVA = "0x19A4F30", Offset = "0x19A4F30", VA = "0x19A4F30", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x19A4F70", Offset = "0x19A4F70", VA = "0x19A4F70", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x19A4FB0", Offset = "0x19A4FB0", VA = "0x19A4FB0", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x19A4FF0", Offset = "0x19A4FF0", VA = "0x19A4FF0", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x19A5030", Offset = "0x19A5030", VA = "0x19A5030", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0x19A5070", Offset = "0x19A5070", VA = "0x19A5070", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x19A50B0", Offset = "0x19A50B0", VA = "0x19A50B0", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x19A50F0", Offset = "0x19A50F0", VA = "0x19A50F0", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x19A5130", Offset = "0x19A5130", VA = "0x19A5130", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x19A5170", Offset = "0x19A5170", VA = "0x19A5170", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x19A51B0", Offset = "0x19A51B0", VA = "0x19A51B0", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x19A51F0", Offset = "0x19A51F0", VA = "0x19A51F0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x19A5230", Offset = "0x19A5230", VA = "0x19A5230", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x19A5270", Offset = "0x19A5270", VA = "0x19A5270", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x19A52B0", Offset = "0x19A52B0", VA = "0x19A52B0", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x19A52F0", Offset = "0x19A52F0", VA = "0x19A52F0", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x19A5330", Offset = "0x19A5330", VA = "0x19A5330", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x19A5370", Offset = "0x19A5370", VA = "0x19A5370", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x19A53B0", Offset = "0x19A53B0", VA = "0x19A53B0")]
		public NVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x19A53B8", Offset = "0x19A53B8", VA = "0x19A53B8", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x19A53BC", Offset = "0x19A53BC", VA = "0x19A53BC", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x19A53C4", Offset = "0x19A53C4", VA = "0x19A53C4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x19A53CC", Offset = "0x19A53CC", VA = "0x19A53CC")]
		public NVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x20007AB")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000647")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x19A9130", Offset = "0x19A9130", VA = "0x19A9130", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x19A91BC", Offset = "0x19A91BC", VA = "0x19A91BC", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x19A91D4", Offset = "0x19A91D4", VA = "0x19A91D4", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x19A91EC", Offset = "0x19A91EC", VA = "0x19A91EC", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x19A9234", Offset = "0x19A9234", VA = "0x19A9234", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x19A924C", Offset = "0x19A924C", VA = "0x19A924C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x19A9264", Offset = "0x19A9264", VA = "0x19A9264", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x19A927C", Offset = "0x19A927C", VA = "0x19A927C", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x19A9294", Offset = "0x19A9294", VA = "0x19A9294", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x19A92AC", Offset = "0x19A92AC", VA = "0x19A92AC", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x19A92C4", Offset = "0x19A92C4", VA = "0x19A92C4", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x19A92DC", Offset = "0x19A92DC", VA = "0x19A92DC", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x19A92F4", Offset = "0x19A92F4", VA = "0x19A92F4", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x19A930C", Offset = "0x19A930C", VA = "0x19A930C", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x19A9324", Offset = "0x19A9324", VA = "0x19A9324", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x19A933C", Offset = "0x19A933C", VA = "0x19A933C", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x19A9354", Offset = "0x19A9354", VA = "0x19A9354", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x19A936C", Offset = "0x19A936C", VA = "0x19A936C", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x19A9148", Offset = "0x19A9148", VA = "0x19A9148")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x19A9370", Offset = "0x19A9370", VA = "0x19A9370")]
		public NVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6003004")]
		[Address(RVA = "0x19A9378", Offset = "0x19A9378", VA = "0x19A9378", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x19A937C", Offset = "0x19A937C", VA = "0x19A937C", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x19A9384", Offset = "0x19A9384", VA = "0x19A9384", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x19A6A00", Offset = "0x19A6A00", VA = "0x19A6A00")]
		public NVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8F03A0", Offset = "0x8F03A0")]
	public class NVRUnityXRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x20007AE")]
		private struct InputDetails
		{
			[Token(Token = "0x40024BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NVRButtons m_button;

			[Token(Token = "0x40024BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InputFeatureUsage<bool>? m_buttonMapping;

			[Token(Token = "0x40024C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputFeatureUsage<bool>? m_touchMapping;

			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputFeatureUsage<bool>? m_nearTouchMapping;

			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputFeatureUsage<float>? m_triggerMapping;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public InputFeatureUsage<Vector2>? m_stickMapping;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool m_buttonDown;

			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool m_buttonJustDown;

			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool m_buttonJustUp;

			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool m_touchDown;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool m_touchJustDown;

			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool m_touchJustUp;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool m_nearTouchDown;

			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
			public bool m_nearTouchJustDown;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool m_nearTouchJustUp;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float m_triggerValue;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector2 m_stickValue;
		}

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RenderModel;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.XR.InputDevice device;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputDetails[] m_inputDetails;

		[Token(Token = "0x17000648")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6003018")]
			[Address(RVA = "0x19AC800", Offset = "0x19AC800", VA = "0x19AC800", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003008")]
		[Address(RVA = "0x19AB890", Offset = "0x19AB890", VA = "0x19AB890", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x19AB9A0", Offset = "0x19AB9A0", VA = "0x19AB9A0")]
		private void GetDevice(NVRHand hand)
		{
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x19ABB34", Offset = "0x19ABB34", VA = "0x19ABB34", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x19AC22C", Offset = "0x19AC22C", VA = "0x19AC22C")]
		private void Update()
		{
		}

		[Token(Token = "0x600300C")]
		[Address(RVA = "0x19AC51C", Offset = "0x19AC51C", VA = "0x19AC51C", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x19AC55C", Offset = "0x19AC55C", VA = "0x19AC55C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x19AC59C", Offset = "0x19AC59C", VA = "0x19AC59C", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x19AC5DC", Offset = "0x19AC5DC", VA = "0x19AC5DC", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x19AC61C", Offset = "0x19AC61C", VA = "0x19AC61C", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x19AC65C", Offset = "0x19AC65C", VA = "0x19AC65C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0x19AC69C", Offset = "0x19AC69C", VA = "0x19AC69C", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x19AC6DC", Offset = "0x19AC6DC", VA = "0x19AC6DC", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0x19AC71C", Offset = "0x19AC71C", VA = "0x19AC71C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x19AC75C", Offset = "0x19AC75C", VA = "0x19AC75C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0x19AC79C", Offset = "0x19AC79C", VA = "0x19AC79C", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003017")]
		[Address(RVA = "0x19AC7DC", Offset = "0x19AC7DC", VA = "0x19AC7DC", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x19AC80C", Offset = "0x19AC80C", VA = "0x19AC80C", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0x19ACA2C", Offset = "0x19ACA2C", VA = "0x19ACA2C", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0x19ACA34", Offset = "0x19ACA34", VA = "0x19ACA34", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0x19ACA40", Offset = "0x19ACA40", VA = "0x19ACA40", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0x19ACC7C", Offset = "0x19ACC7C", VA = "0x19ACC7C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600301E")]
		[Address(RVA = "0x19ABD3C", Offset = "0x19ABD3C", VA = "0x19ABD3C")]
		private void AddButtonMapping(NVRButtons button, InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0x19ABE78", Offset = "0x19ABE78", VA = "0x19ABE78")]
		private void AddTouchMapping(NVRButtons button, InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x6003020")]
		[Address(RVA = "0x19ABFB4", Offset = "0x19ABFB4", VA = "0x19ABFB4")]
		private void AddTriggerMapping(NVRButtons button, InputFeatureUsage<float> usage)
		{
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0x19AC0F0", Offset = "0x19AC0F0", VA = "0x19AC0F0")]
		private void AddStickMapping(NVRButtons button, InputFeatureUsage<Vector2> usage)
		{
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0x19ACD6C", Offset = "0x19ACD6C", VA = "0x19ACD6C")]
		public NVRUnityXRInputDevice()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public class NVRUnityXRIntegration : NVRIntegration
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x6003023")]
		[Address(RVA = "0x19ACD74", Offset = "0x19ACD74", VA = "0x19ACD74", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0x19ACDDC", Offset = "0x19ACDDC", VA = "0x19ACDDC", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0x19ACDEC", Offset = "0x19ACDEC", VA = "0x19ACDEC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0x19A69CC", Offset = "0x19A69CC", VA = "0x19A69CC")]
		public NVRUnityXRIntegration()
		{
		}
	}
	[Token(Token = "0x20007B0")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8F03B4", Offset = "0x8F03B4")]
	public class NVRUnityXR_NewInput_InputDevice : NVRInputDevice
	{
		[Token(Token = "0x20007B1")]
		private struct InputDetails
		{
			[Token(Token = "0x20007B2")]
			public enum MapType
			{
				[Token(Token = "0x40024E8")]
				NotSet = -1,
				[Token(Token = "0x40024E9")]
				Button,
				[Token(Token = "0x40024EA")]
				Touch,
				[Token(Token = "0x40024EB")]
				NearTouch,
				[Token(Token = "0x40024EC")]
				Trigger,
				[Token(Token = "0x40024ED")]
				Stick
			}

			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NVRButtons m_button;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InputFeatureUsage<bool>? m_buttonMapping;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputFeatureUsage<bool>? m_touchMapping;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputFeatureUsage<bool>? m_nearTouchMapping;

			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputFeatureUsage<float>? m_triggerMapping;

			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public InputFeatureUsage<Vector2>? m_stickMapping;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public MapType m_inputActionType;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InputAction[] m_inputAction;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool m_buttonDown;

			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			public bool m_buttonJustDown;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
			public bool m_buttonJustUp;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
			public bool m_touchDown;

			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool m_touchJustDown;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
			public bool m_touchJustUp;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
			public bool m_nearTouchDown;

			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
			public bool m_nearTouchJustDown;

			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool m_nearTouchJustUp;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public float m_triggerValue;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector2 m_stickValue;
		}

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputActionAsset m_inputActions;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject RenderModel;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.XR.InputDevice device;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputDetails[] m_inputDetails;

		[Token(Token = "0x17000649")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6003037")]
			[Address(RVA = "0x19ADEE8", Offset = "0x19ADEE8", VA = "0x19ADEE8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x19ACFB0", Offset = "0x19ACFB0", VA = "0x19ACFB0", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x19AD174", Offset = "0x19AD174", VA = "0x19AD174")]
		private void GetDevice(NVRHand hand)
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x19AD21C", Offset = "0x19AD21C", VA = "0x19AD21C", Slot = "23")]
		protected virtual void SetupButtonMapping(NVRHand hand)
		{
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x19AD9A8", Offset = "0x19AD9A8", VA = "0x19AD9A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x19ADC04", Offset = "0x19ADC04", VA = "0x19ADC04", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600302C")]
		[Address(RVA = "0x19ADC44", Offset = "0x19ADC44", VA = "0x19ADC44", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x19ADC84", Offset = "0x19ADC84", VA = "0x19ADC84", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0x19ADCC4", Offset = "0x19ADCC4", VA = "0x19ADCC4", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0x19ADD04", Offset = "0x19ADD04", VA = "0x19ADD04", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003030")]
		[Address(RVA = "0x19ADD44", Offset = "0x19ADD44", VA = "0x19ADD44", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0x19ADD84", Offset = "0x19ADD84", VA = "0x19ADD84", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0x19ADDC4", Offset = "0x19ADDC4", VA = "0x19ADDC4", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0x19ADE04", Offset = "0x19ADE04", VA = "0x19ADE04", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x19ADE44", Offset = "0x19ADE44", VA = "0x19ADE44", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x19ADE84", Offset = "0x19ADE84", VA = "0x19ADE84", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x19ADEC4", Offset = "0x19ADEC4", VA = "0x19ADEC4", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003038")]
		[Address(RVA = "0x19ADEF4", Offset = "0x19ADEF4", VA = "0x19ADEF4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0x19AE114", Offset = "0x19AE114", VA = "0x19AE114", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600303A")]
		[Address(RVA = "0x19AE11C", Offset = "0x19AE11C", VA = "0x19AE11C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x19AE160", Offset = "0x19AE160", VA = "0x19AE160", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x19AE39C", Offset = "0x19AE39C", VA = "0x19AE39C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x19AD820", Offset = "0x19AD820", VA = "0x19AD820")]
		private void AddInputMapping(InputDetails.MapType mapType, NVRButtons button, InputAction inputAction)
		{
		}

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x19AE48C", Offset = "0x19AE48C", VA = "0x19AE48C")]
		public NVRUnityXR_NewInput_InputDevice()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public class NVRWindowsMRInput : NVRInputDevice
	{
		[Token(Token = "0x1700064A")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600303F")]
			[Address(RVA = "0x19AF28C", Offset = "0x19AF28C", VA = "0x19AF28C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x19AF318", Offset = "0x19AF318", VA = "0x19AF318", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x19AF330", Offset = "0x19AF330", VA = "0x19AF330", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x19AF348", Offset = "0x19AF348", VA = "0x19AF348", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x19AF390", Offset = "0x19AF390", VA = "0x19AF390", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x19AF3A8", Offset = "0x19AF3A8", VA = "0x19AF3A8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003045")]
		[Address(RVA = "0x19AF3C0", Offset = "0x19AF3C0", VA = "0x19AF3C0", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003046")]
		[Address(RVA = "0x19AF3D8", Offset = "0x19AF3D8", VA = "0x19AF3D8", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003047")]
		[Address(RVA = "0x19AF3F0", Offset = "0x19AF3F0", VA = "0x19AF3F0", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x19AF408", Offset = "0x19AF408", VA = "0x19AF408", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x19AF420", Offset = "0x19AF420", VA = "0x19AF420", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x19AF438", Offset = "0x19AF438", VA = "0x19AF438", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x19AF450", Offset = "0x19AF450", VA = "0x19AF450", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x19AF468", Offset = "0x19AF468", VA = "0x19AF468", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x19AF480", Offset = "0x19AF480", VA = "0x19AF480", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600304E")]
		[Address(RVA = "0x19AF498", Offset = "0x19AF498", VA = "0x19AF498", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x19AF4B0", Offset = "0x19AF4B0", VA = "0x19AF4B0", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6003050")]
		[Address(RVA = "0x19AF4C8", Offset = "0x19AF4C8", VA = "0x19AF4C8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x19AF2A4", Offset = "0x19AF2A4", VA = "0x19AF2A4")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x19AF4CC", Offset = "0x19AF4CC", VA = "0x19AF4CC")]
		public NVRWindowsMRInput()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	public class NVRWindowsMRIntegration : NVRIntegration
	{
		[Token(Token = "0x20007B5")]
		public enum DisplayType
		{
			[Token(Token = "0x40024FA")]
			Opaque,
			[Token(Token = "0x40024FB")]
			Transparent
		}

		[Token(Token = "0x20007B6")]
		public delegate void DisplayEventHandler(DisplayType displayType);

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBA14", Offset = "0x8FBA14")]
		public float NearClipPlane_OpaqueDisplay;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBA4C", Offset = "0x8FBA4C")]
		public CameraClearFlags CameraClearFlags_OpaqueDisplay;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBA84", Offset = "0x8FBA84")]
		public Color BackgroundColor_OpaqueDisplay;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBABC", Offset = "0x8FBABC")]
		public int OpaqueQualityLevel;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBAF4", Offset = "0x8FBAF4")]
		public float NearClipPlane_TransparentDisplay;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBB2C", Offset = "0x8FBB2C")]
		public CameraClearFlags CameraClearFlags_TransparentDisplay;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBB64", Offset = "0x8FBB64")]
		public Color BackgroundColor_TransparentDisplay;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FBB9C", Offset = "0x8FBB9C")]
		public int HoloLensQualityLevel;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBBD4", Offset = "0x8FBBD4")]
		private DisplayType <CurrentDisplayType>k__BackingField;

		[Token(Token = "0x1700064B")]
		public DisplayType CurrentDisplayType
		{
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x19AF6A0", Offset = "0x19AF6A0", VA = "0x19AF6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B158", Offset = "0x90B158")]
			get
			{
				return default(DisplayType);
			}
			[Token(Token = "0x6003057")]
			[Address(RVA = "0x19AF6A8", Offset = "0x19AF6A8", VA = "0x19AF6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B168", Offset = "0x90B168")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event DisplayEventHandler OnDisplayDetected
		{
			[Token(Token = "0x6003058")]
			[Address(RVA = "0x19AF6B0", Offset = "0x19AF6B0", VA = "0x19AF6B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B178", Offset = "0x90B178")]
			add
			{
			}
			[Token(Token = "0x6003059")]
			[Address(RVA = "0x19AF750", Offset = "0x19AF750", VA = "0x19AF750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B188", Offset = "0x90B188")]
			remove
			{
			}
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0x19AF4D4", Offset = "0x19AF4D4", VA = "0x19AF4D4", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x19AF68C", Offset = "0x19AF68C", VA = "0x19AF68C", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0x19AF698", Offset = "0x19AF698", VA = "0x19AF698", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x19AF5BC", Offset = "0x19AF5BC", VA = "0x19AF5BC")]
		public void ApplySettingsForOpaqueDisplay(Camera cam)
		{
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x19AF7FC", Offset = "0x19AF7FC", VA = "0x19AF7FC")]
		public void ApplySettingsForTransparentDisplay(Camera cam)
		{
		}

		[Token(Token = "0x600305C")]
		[Address(RVA = "0x19AF7F0", Offset = "0x19AF7F0", VA = "0x19AF7F0")]
		private static void SetQuality(int level)
		{
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0x19A6A08", Offset = "0x19A6A08", VA = "0x19A6A08")]
		public NVRWindowsMRIntegration()
		{
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x20007B7")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x6003062")]
		[Address(RVA = "0x1B53CE4", Offset = "0x1B53CE4", VA = "0x1B53CE4")]
		public void DropSphere()
		{
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x1B53DC0", Offset = "0x1B53DC0", VA = "0x1B53DC0")]
		public NVRExampleButtonDropSphere()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x6003064")]
		[Address(RVA = "0x1B53DC8", Offset = "0x1B53DC8", VA = "0x1B53DC8")]
		public void ResetScene()
		{
		}

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x1B53E44", Offset = "0x1B53E44", VA = "0x1B53E44")]
		public NVRExampleButtonResetScene()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRLever Lever;

		[Token(Token = "0x6003066")]
		[Address(RVA = "0x1B53E4C", Offset = "0x1B53E4C", VA = "0x1B53E4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003067")]
		[Address(RVA = "0x1B53EBC", Offset = "0x1B53EBC", VA = "0x1B53EBC")]
		public NVRExampleColorLever()
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRSlider Slider;

		[Token(Token = "0x6003068")]
		[Address(RVA = "0x1B53EC4", Offset = "0x1B53EC4", VA = "0x1B53EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x1B53F34", Offset = "0x1B53F34", VA = "0x1B53F34")]
		public NVRExampleColorSlider()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x1B53F3C", Offset = "0x1B53F3C", VA = "0x1B53F3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x1B53F98", Offset = "0x1B53F98", VA = "0x1B53F98")]
		private void Update()
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x1B5401C", Offset = "0x1B5401C", VA = "0x1B5401C")]
		public NVRExampleDegreeResult()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x600306D")]
		[Address(RVA = "0x1B54024", Offset = "0x1B54024", VA = "0x1B54024")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0x1B54120", Offset = "0x1B54120", VA = "0x1B54120")]
		public NVRExampleEvent()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x600306F")]
		[Address(RVA = "0x1B54128", Offset = "0x1B54128", VA = "0x1B54128", Slot = "13")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x1B545C4", Offset = "0x1B545C4", VA = "0x1B545C4")]
		public NVRExampleGrower()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform FirePoint;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Vector3 BulletForce;

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x1B54760", Offset = "0x1B54760", VA = "0x1B54760", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x1B549F4", Offset = "0x1B549F4", VA = "0x1B549F4")]
		public NVRExampleGun()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForceLineVisible;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x1B54A04", Offset = "0x1B54A04", VA = "0x1B54A04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x1B54CAC", Offset = "0x1B54CAC", VA = "0x1B54CAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x1B54FF4", Offset = "0x1B54FF4", VA = "0x1B54FF4")]
		public NVRExampleLaserPointer()
		{
		}
	}
	[Token(Token = "0x20007C0")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x1B55010", Offset = "0x1B55010", VA = "0x1B55010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x1B5506C", Offset = "0x1B5506C", VA = "0x1B5506C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x1B551C0", Offset = "0x1B551C0", VA = "0x1B551C0")]
		public NVRExampleLetterResult()
		{
		}
	}
	[Token(Token = "0x20007C1")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x20007C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F03C8", Offset = "0x8F03C8")]
		private sealed class <DoBlastOff>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x1700064C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003081")]
				[Address(RVA = "0x16B657C", Offset = "0x16B657C", VA = "0x16B657C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003083")]
				[Address(RVA = "0x16B65C4", Offset = "0x16B65C4", VA = "0x16B65C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600307E")]
			[Address(RVA = "0x16B6440", Offset = "0x16B6440", VA = "0x16B6440")]
			[DebuggerHidden]
			public <DoBlastOff>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0x16B646C", Offset = "0x16B646C", VA = "0x16B646C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003080")]
			[Address(RVA = "0x16B6470", Offset = "0x16B6470", VA = "0x16B6470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003082")]
			[Address(RVA = "0x16B6584", Offset = "0x16B6584", VA = "0x16B6584", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F03D8", Offset = "0x8F03D8")]
		private sealed class <DoSpawnShip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x400251A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <endScale>5__3;

			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__4;

			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <overTime>5__5;

			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <stopTime>5__6;

			[Token(Token = "0x1700064E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003087")]
				[Address(RVA = "0x16B6900", Offset = "0x16B6900", VA = "0x16B6900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003089")]
				[Address(RVA = "0x16B6948", Offset = "0x16B6948", VA = "0x16B6948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003084")]
			[Address(RVA = "0x16B65CC", Offset = "0x16B65CC", VA = "0x16B65CC")]
			[DebuggerHidden]
			public <DoSpawnShip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0x16B65F8", Offset = "0x16B65F8", VA = "0x16B65F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0x16B65FC", Offset = "0x16B65FC", VA = "0x16B65FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003088")]
			[Address(RVA = "0x16B6908", Offset = "0x16B6908", VA = "0x16B6908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject RocketPrefab;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRLever Control;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RocketInstance;

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x1B551C8", Offset = "0x1B551C8", VA = "0x1B551C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x1B5526C", Offset = "0x1B5526C", VA = "0x1B5526C")]
		private void Update()
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x1B552B8", Offset = "0x1B552B8", VA = "0x1B552B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B198", Offset = "0x90B198")]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x1B551F4", Offset = "0x1B551F4", VA = "0x1B551F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B1F8", Offset = "0x90B1F8")]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x1B55330", Offset = "0x1B55330", VA = "0x1B55330")]
		public NVRExampleLeverResultRocket()
		{
		}
	}
	[Token(Token = "0x20007C4")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSlider SliderRed;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Result;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color ResultColor;

		[Token(Token = "0x600308A")]
		[Address(RVA = "0x1B55338", Offset = "0x1B55338", VA = "0x1B55338")]
		private void Update()
		{
		}

		[Token(Token = "0x600308B")]
		[Address(RVA = "0x1B55478", Offset = "0x1B55478", VA = "0x1B55478")]
		public NVRExampleRGBResult()
		{
		}
	}
	[Token(Token = "0x20007C5")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButton Button;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToCopy;

		[Token(Token = "0x600308C")]
		[Address(RVA = "0x1B554AC", Offset = "0x1B554AC", VA = "0x1B554AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600308D")]
		[Address(RVA = "0x1B555E4", Offset = "0x1B555E4", VA = "0x1B555E4")]
		public NVRExampleSpawner()
		{
		}
	}
	[Token(Token = "0x20007C6")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSwitch Switch;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light SpotLight;

		[Token(Token = "0x600308E")]
		[Address(RVA = "0x1B555EC", Offset = "0x1B555EC", VA = "0x1B555EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600308F")]
		[Address(RVA = "0x1B55648", Offset = "0x1B55648", VA = "0x1B55648")]
		private void Update()
		{
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x1B55674", Offset = "0x1B55674", VA = "0x1B55674")]
		public NVRExampleSwitchResult()
		{
		}
	}
	[Token(Token = "0x20007C7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F03E8", Offset = "0x8F03E8")]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRPlayer Player;

		[Token(Token = "0x6003091")]
		[Address(RVA = "0x1B5567C", Offset = "0x1B5567C", VA = "0x1B5567C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x1B558C0", Offset = "0x1B558C0", VA = "0x1B558C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6003093")]
		[Address(RVA = "0x1B558E0", Offset = "0x1B558E0", VA = "0x1B558E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003094")]
		[Address(RVA = "0x1B55DA8", Offset = "0x1B55DA8", VA = "0x1B55DA8")]
		public NVRExampleTeleporter()
		{
		}
	}
}
namespace Moments
{
	[Token(Token = "0x20007C8")]
	public enum RecorderState
	{
		[Token(Token = "0x400252E")]
		Recording,
		[Token(Token = "0x400252F")]
		Paused,
		[Token(Token = "0x4002530")]
		PreProcessing
	}
	[Token(Token = "0x20007C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F0448", Offset = "0x8F0448")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0448", Offset = "0x8F0448")]
	[DisallowMultipleComponent]
	public sealed class Recorder : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F04DC", Offset = "0x8F04DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x1583B44", Offset = "0x1583B44", VA = "0x1583B44")]
			public <>c()
			{
			}
		}

		[Token(Token = "0x20007CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F04EC", Offset = "0x8F04EC")]
		private sealed class <PreProcess>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string filename;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder <>4__this;

			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <filepath>5__2;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GifFrame> <frames>5__3;

			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <temp>5__4;

			[Token(Token = "0x17000653")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030AF")]
				[Address(RVA = "0x1583F3C", Offset = "0x1583F3C", VA = "0x1583F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000654")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030B1")]
				[Address(RVA = "0x1583F84", Offset = "0x1583F84", VA = "0x1583F84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x1583B4C", Offset = "0x1583B4C", VA = "0x1583B4C")]
			[DebuggerHidden]
			public <PreProcess>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0x1583B78", Offset = "0x1583B78", VA = "0x1583B78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x1583B7C", Offset = "0x1583B7C", VA = "0x1583B7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x1583F44", Offset = "0x1583F44", VA = "0x1583F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8FBBF4", Offset = "0x8FBBF4")]
		private int m_Width;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8FBC30", Offset = "0x8FBC30")]
		[SerializeField]
		private int m_Height;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_AutoAspect;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBC7C", Offset = "0x8FBC7C")]
		private int m_FramePerSecond;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8FBCBC", Offset = "0x8FBCBC")]
		private int m_Repeat;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FBCF8", Offset = "0x8FBCF8")]
		private int m_Quality;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8FBD3C", Offset = "0x8FBD3C")]
		[SerializeField]
		private float m_BufferSize;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBD7C", Offset = "0x8FBD7C")]
		private RecorderState <State>k__BackingField;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBD8C", Offset = "0x8FBD8C")]
		private string <SaveFolder>k__BackingField;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ThreadPriority WorkerPriority;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnPreProcessingDone;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<int, float> OnFileSaveProgress;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<int, string> OnFileSaved;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_MaxFrameCount;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_Time;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_TimePerFrame;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<RenderTexture> m_Frames;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_RecycledRenderTexture;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReflectionUtils<Recorder> m_ReflectionUtils;

		[Token(Token = "0x17000650")]
		public RecorderState State
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0x1934F10", Offset = "0x1934F10", VA = "0x1934F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B2F8", Offset = "0x90B2F8")]
			get
			{
				return default(RecorderState);
			}
			[Token(Token = "0x6003096")]
			[Address(RVA = "0x1934F18", Offset = "0x1934F18", VA = "0x1934F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B308", Offset = "0x90B308")]
			private set
			{
			}
		}

		[Token(Token = "0x17000651")]
		public string SaveFolder
		{
			[Token(Token = "0x6003097")]
			[Address(RVA = "0x1934F20", Offset = "0x1934F20", VA = "0x1934F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B318", Offset = "0x90B318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003098")]
			[Address(RVA = "0x1934F28", Offset = "0x1934F28", VA = "0x1934F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B328", Offset = "0x90B328")]
			set
			{
			}
		}

		[Token(Token = "0x17000652")]
		public float EstimatedMemoryUse
		{
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x1934F30", Offset = "0x1934F30", VA = "0x1934F30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600309A")]
		[Address(RVA = "0x1934F64", Offset = "0x1934F64", VA = "0x1934F64")]
		public void Setup(bool autoAspect, int width, int height, int fps, float bufferSize, int repeat, int quality)
		{
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0x19359A8", Offset = "0x19359A8", VA = "0x19359A8")]
		public void Pause()
		{
		}

		[Token(Token = "0x600309C")]
		[Address(RVA = "0x1934834", Offset = "0x1934834", VA = "0x1934834")]
		public void Record()
		{
		}

		[Token(Token = "0x600309D")]
		[Address(RVA = "0x193571C", Offset = "0x193571C", VA = "0x193571C")]
		public void FlushMemory()
		{
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x1934974", Offset = "0x1934974", VA = "0x1934974")]
		public void Save()
		{
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x1935B58", Offset = "0x1935B58", VA = "0x1935B58")]
		public void Save(string filename)
		{
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x1935D1C", Offset = "0x1935D1C", VA = "0x1935D1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x1935DEC", Offset = "0x1935DEC", VA = "0x1935DEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x1935DF0", Offset = "0x1935DF0", VA = "0x1935DF0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x1935918", Offset = "0x1935918", VA = "0x1935918")]
		private void Init()
		{
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x1936028", Offset = "0x1936028", VA = "0x1936028")]
		public void ComputeHeight()
		{
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x1935A40", Offset = "0x1935A40", VA = "0x1935A40")]
		private void Flush(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x1935AA4", Offset = "0x1935AA4", VA = "0x1935AA4")]
		private string GenerateFileName()
		{
			return null;
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x1935C88", Offset = "0x1935C88", VA = "0x1935C88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B338", Offset = "0x90B338")]
		private IEnumerator PreProcess(string filename)
		{
			return null;
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x19360A8", Offset = "0x19360A8", VA = "0x19360A8")]
		private GifFrame ToGifFrame(RenderTexture source, Texture2D target)
		{
			return null;
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x19361F0", Offset = "0x19361F0", VA = "0x19361F0")]
		public Recorder()
		{
		}
	}
	[Token(Token = "0x20007CC")]
	public class ReflectionUtils<T> where T : class, new()
	{
		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _Instance;

		[Token(Token = "0x60030B2")]
		public ReflectionUtils(T instance)
		{
		}

		[Token(Token = "0x60030B3")]
		public string GetFieldName<U>(Expression<Func<T, U>> fieldAccess)
		{
			return null;
		}

		[Token(Token = "0x60030B4")]
		public FieldInfo GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x60030B5")]
		public A GetAttribute<A>(FieldInfo field) where A : Attribute
		{
			return null;
		}

		[Token(Token = "0x60030B6")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x60030B7")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}

		[Token(Token = "0x60030B8")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x60030B9")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}
	}
	[Token(Token = "0x20007CD")]
	internal sealed class Worker
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int workerId;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread m_Thread;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Id;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<GifFrame> m_Frames;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal GifEncoder m_Encoder;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string m_FilePath;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Action<int, string> m_OnFileSaved;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Action<int, float> m_OnFileSaveProgress;

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x19EBE90", Offset = "0x19EBE90", VA = "0x19EBE90")]
		internal Worker(ThreadPriority priority)
		{
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x19EBFB0", Offset = "0x19EBFB0", VA = "0x19EBFB0")]
		internal void Start()
		{
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x19EBFCC", Offset = "0x19EBFCC", VA = "0x19EBFCC")]
		private void Run()
		{
		}
	}
}
namespace Moments.Encoder
{
	[Token(Token = "0x20007CE")]
	public class GifEncoder
	{
		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_Width;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_Height;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int m_Repeat;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_FrameDelay;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_HasStarted;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected FileStream m_FileStream;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GifFrame m_CurrentFrame;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected byte[] m_Pixels;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] m_IndexedPixels;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_ColorDepth;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected byte[] m_ColorTab;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] m_UsedEntry;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_PaletteSize;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_DisposalCode;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_ShouldCloseStream;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_IsFirstFrame;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_IsSizeSet;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_SampleInterval;

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x19397A8", Offset = "0x19397A8", VA = "0x19397A8")]
		public GifEncoder()
		{
		}

		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x19397B4", Offset = "0x19397B4", VA = "0x19397B4")]
		public GifEncoder(int repeat, int quality)
		{
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x1939874", Offset = "0x1939874", VA = "0x1939874")]
		public void SetDelay(int ms)
		{
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0x19398A8", Offset = "0x19398A8", VA = "0x19398A8")]
		public void SetFrameRate(float fps)
		{
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x19398E4", Offset = "0x19398E4", VA = "0x19398E4")]
		public void AddFrame(GifFrame frame)
		{
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0x193A290", Offset = "0x193A290", VA = "0x193A290")]
		public void Start(FileStream os)
		{
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0x193A460", Offset = "0x193A460", VA = "0x193A460")]
		public void Start(string file)
		{
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0x193A584", Offset = "0x193A584", VA = "0x193A584")]
		public void Finish()
		{
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x1939A10", Offset = "0x1939A10", VA = "0x1939A10")]
		protected void SetSize(int w, int h)
		{
		}

		[Token(Token = "0x60030C7")]
		[Address(RVA = "0x1939A20", Offset = "0x1939A20", VA = "0x1939A20")]
		protected void GetImagePixels()
		{
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0x1939B6C", Offset = "0x1939B6C", VA = "0x1939B6C")]
		protected void AnalyzePixels()
		{
		}

		[Token(Token = "0x60030C9")]
		[Address(RVA = "0x1939FD4", Offset = "0x1939FD4", VA = "0x1939FD4")]
		protected void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0x193A104", Offset = "0x193A104", VA = "0x193A104")]
		protected void WriteImageDesc()
		{
		}

		[Token(Token = "0x60030CB")]
		[Address(RVA = "0x1939D54", Offset = "0x1939D54", VA = "0x1939D54")]
		protected void WriteLSD()
		{
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x1939ED0", Offset = "0x1939ED0", VA = "0x1939ED0")]
		protected void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x60030CD")]
		[Address(RVA = "0x1939E38", Offset = "0x1939E38", VA = "0x1939E38")]
		protected void WritePalette()
		{
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x193A1F8", Offset = "0x193A1F8", VA = "0x193A1F8")]
		protected void WritePixels()
		{
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x193A72C", Offset = "0x193A72C", VA = "0x193A72C")]
		protected void WriteShort(int value)
		{
		}

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x193A3C8", Offset = "0x193A3C8", VA = "0x193A3C8")]
		protected void WriteString(string s)
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public class GifFrame
	{
		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] Data;

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x193A7EC", Offset = "0x193A7EC", VA = "0x193A7EC")]
		public GifFrame()
		{
		}
	}
	[Token(Token = "0x20007D0")]
	public class LzwEncoder
	{
		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x1AAD22C", Offset = "0x1AAD22C", VA = "0x1AAD22C")]
		public LzwEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0x1AAD3F8", Offset = "0x1AAD3F8", VA = "0x1AAD3F8")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0x1AAD51C", Offset = "0x1AAD51C", VA = "0x1AAD51C")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x1AAD564", Offset = "0x1AAD564", VA = "0x1AAD564")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x1AAD720", Offset = "0x1AAD720", VA = "0x1AAD720")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x1AADA80", Offset = "0x1AADA80", VA = "0x1AADA80")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0x1AAD458", Offset = "0x1AAD458", VA = "0x1AAD458")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0x1AAD9C0", Offset = "0x1AAD9C0", VA = "0x1AAD9C0")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0x1AAD9D0", Offset = "0x1AAD9D0", VA = "0x1AAD9D0")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0x1AAD5C0", Offset = "0x1AAD5C0", VA = "0x1AAD5C0")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x20007D1")]
	public class NeuQuant
	{
		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lengthcount;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int samplefac;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int[][] network;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] netindex;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] bias;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] freq;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] radpower;

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0x19B7B4C", Offset = "0x19B7B4C", VA = "0x19B7B4C")]
		public NeuQuant(byte[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0x19B7E2C", Offset = "0x19B7E2C", VA = "0x19B7E2C")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0x19B80C0", Offset = "0x19B80C0", VA = "0x19B80C0")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x19B840C", Offset = "0x19B840C", VA = "0x19B840C")]
		public void Learn()
		{
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0x19B906C", Offset = "0x19B906C", VA = "0x19B906C")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0x19B92D4", Offset = "0x19B92D4", VA = "0x19B92D4")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x19B9308", Offset = "0x19B9308", VA = "0x19B9308")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0x19B8D7C", Offset = "0x19B8D7C", VA = "0x19B8D7C")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0x19B8C3C", Offset = "0x19B8C3C", VA = "0x19B8C3C")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x19B8984", Offset = "0x19B8984", VA = "0x19B8984")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace InControl
{
	[Token(Token = "0x20007D2")]
	public class InControlManager : MonoBehaviour
	{
		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool logDebugInfo;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool invertYAxis;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableXInput;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool useFixedUpdate;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> customProfiles;

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0x16C9F30", Offset = "0x16C9F30", VA = "0x16C9F30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x16CA994", Offset = "0x16CA994", VA = "0x16CA994")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60030EA")]
		[Address(RVA = "0x16CAB58", Offset = "0x16CAB58", VA = "0x16CAB58")]
		private void Update()
		{
		}

		[Token(Token = "0x60030EB")]
		[Address(RVA = "0x16CAD0C", Offset = "0x16CAD0C", VA = "0x16CAD0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0x16CAD7C", Offset = "0x16CAD7C", VA = "0x16CAD7C")]
		private void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x60030ED")]
		[Address(RVA = "0x16CAF3C", Offset = "0x16CAF3C", VA = "0x16CAF3C")]
		private void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0x16CAFA0", Offset = "0x16CAFA0", VA = "0x16CAFA0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x16CB004", Offset = "0x16CB004", VA = "0x16CB004")]
		private void HandleOnLogMessage(LogMessage logMessage)
		{
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x16CB108", Offset = "0x16CB108", VA = "0x16CB108")]
		public InControlManager()
		{
		}
	}
	[Token(Token = "0x20007D3")]
	public class InputControl
	{
		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputControl Null;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBD9C", Offset = "0x8FBD9C")]
		private string <Handle>k__BackingField;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDAC", Offset = "0x8FBDAC")]
		private InputControlType <Target>k__BackingField;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDBC", Offset = "0x8FBDBC")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Sensitivity;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LowerDeadZone;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float UpperDeadZone;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDCC", Offset = "0x8FBDCC")]
		private bool <IsButton>k__BackingField;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputControlState thisState;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputControlState lastState;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputControlState tempState;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong zeroTick;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float? RawValue;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float? PreValue;

		[Token(Token = "0x17000655")]
		public string Handle
		{
			[Token(Token = "0x60030F1")]
			[Address(RVA = "0x16CDB78", Offset = "0x16CDB78", VA = "0x16CDB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B3E8", Offset = "0x90B3E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030F2")]
			[Address(RVA = "0x16CDB80", Offset = "0x16CDB80", VA = "0x16CDB80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B3F8", Offset = "0x90B3F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public InputControlType Target
		{
			[Token(Token = "0x60030F3")]
			[Address(RVA = "0x16CDB88", Offset = "0x16CDB88", VA = "0x16CDB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B408", Offset = "0x90B408")]
			get
			{
				return default(InputControlType);
			}
			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x16CDB90", Offset = "0x16CDB90", VA = "0x16CDB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B418", Offset = "0x90B418")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public ulong UpdateTick
		{
			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x16CDB98", Offset = "0x16CDB98", VA = "0x16CDB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B428", Offset = "0x90B428")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60030F6")]
			[Address(RVA = "0x16CDBA0", Offset = "0x16CDBA0", VA = "0x16CDBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B438", Offset = "0x90B438")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public bool IsButton
		{
			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x16CDBA8", Offset = "0x16CDBA8", VA = "0x16CDBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B448", Offset = "0x90B448")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x16CDBB0", Offset = "0x16CDBB0", VA = "0x16CDBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B458", Offset = "0x90B458")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000659")]
		internal bool IsOnZeroTick
		{
			[Token(Token = "0x6003100")]
			[Address(RVA = "0x16CDF90", Offset = "0x16CDF90", VA = "0x16CDF90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065A")]
		public bool State
		{
			[Token(Token = "0x6003101")]
			[Address(RVA = "0x16CDFA4", Offset = "0x16CDFA4", VA = "0x16CDFA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065B")]
		public bool LastState
		{
			[Token(Token = "0x6003102")]
			[Address(RVA = "0x16CDFAC", Offset = "0x16CDFAC", VA = "0x16CDFAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065C")]
		public float Value
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0x16CDFB4", Offset = "0x16CDFB4", VA = "0x16CDFB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700065D")]
		public float LastValue
		{
			[Token(Token = "0x6003104")]
			[Address(RVA = "0x16CDFBC", Offset = "0x16CDFBC", VA = "0x16CDFBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700065E")]
		public bool HasChanged
		{
			[Token(Token = "0x6003105")]
			[Address(RVA = "0x16CDFC4", Offset = "0x16CDFC4", VA = "0x16CDFC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065F")]
		public bool IsPressed
		{
			[Token(Token = "0x6003106")]
			[Address(RVA = "0x16CDFEC", Offset = "0x16CDFEC", VA = "0x16CDFEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000660")]
		public bool WasPressed
		{
			[Token(Token = "0x6003107")]
			[Address(RVA = "0x16CDFF4", Offset = "0x16CDFF4", VA = "0x16CDFF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000661")]
		public bool WasReleased
		{
			[Token(Token = "0x6003108")]
			[Address(RVA = "0x16CE014", Offset = "0x16CE014", VA = "0x16CE014")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000662")]
		public bool IsNull
		{
			[Token(Token = "0x6003109")]
			[Address(RVA = "0x16CDD48", Offset = "0x16CDD48", VA = "0x16CDD48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000663")]
		public bool IsNotNull
		{
			[Token(Token = "0x600310A")]
			[Address(RVA = "0x16CE034", Offset = "0x16CE034", VA = "0x16CE034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000664")]
		public InputControlType? Obverse
		{
			[Token(Token = "0x600310E")]
			[Address(RVA = "0x16CE164", Offset = "0x16CE164", VA = "0x16CE164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030F9")]
		[Address(RVA = "0x16CDBBC", Offset = "0x16CDBBC", VA = "0x16CDBBC")]
		private InputControl(string handle)
		{
		}

		[Token(Token = "0x60030FA")]
		[Address(RVA = "0x16CDBFC", Offset = "0x16CDBFC", VA = "0x16CDBFC")]
		public InputControl(string handle, InputControlType target)
		{
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x16CDC78", Offset = "0x16CDC78", VA = "0x16CDC78")]
		public void UpdateWithState(bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0x16CDDD8", Offset = "0x16CDDD8", VA = "0x16CDDD8")]
		public void UpdateWithValue(float value, ulong updateTick)
		{
		}

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x16CDEEC", Offset = "0x16CDEEC", VA = "0x16CDEEC")]
		internal void PreUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x16CDF10", Offset = "0x16CDF10", VA = "0x16CDF10")]
		internal void PostUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x16CDF84", Offset = "0x16CDF84", VA = "0x16CDF84")]
		internal void SetZeroTick()
		{
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x16CE0A4", Offset = "0x16CE0A4", VA = "0x16CE0A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600310C")]
		[Address(RVA = "0x16CE134", Offset = "0x16CE134", VA = "0x16CE134")]
		public static implicit operator bool(InputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x16CE14C", Offset = "0x16CE14C", VA = "0x16CE14C")]
		public static implicit operator float(InputControl control)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20007D4")]
	public class InputControlMapping
	{
		[Token(Token = "0x20007D5")]
		public class Range
		{
			[Token(Token = "0x40025C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Range Complete;

			[Token(Token = "0x40025C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Range Positive;

			[Token(Token = "0x40025C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Range Negative;

			[Token(Token = "0x40025C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Minimum;

			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Maximum;

			[Token(Token = "0x6003115")]
			[Address(RVA = "0x15FCCE4", Offset = "0x15FCCE4", VA = "0x15FCCE4")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputControlSource Source;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputControlType Target;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Invert;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Raw;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool IgnoreInitialZeroValue;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Range SourceRange;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Range TargetRange;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string handle;

		[Token(Token = "0x17000665")]
		public string Handle
		{
			[Token(Token = "0x6003111")]
			[Address(RVA = "0x16CE408", Offset = "0x16CE408", VA = "0x16CE408")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003112")]
			[Address(RVA = "0x16CE4AC", Offset = "0x16CE4AC", VA = "0x16CE4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000666")]
		private bool IsYAxis
		{
			[Token(Token = "0x6003113")]
			[Address(RVA = "0x16CE3EC", Offset = "0x16CE3EC", VA = "0x16CE3EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x16CE2D0", Offset = "0x16CE2D0", VA = "0x16CE2D0")]
		public float MapValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6003114")]
		[Address(RVA = "0x16CE4B4", Offset = "0x16CE4B4", VA = "0x16CE4B4")]
		public InputControlMapping()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public interface InputControlSource
	{
		[Token(Token = "0x6003117")]
		float GetValue(InputDevice inputDevice);

		[Token(Token = "0x6003118")]
		bool GetState(InputDevice inputDevice);
	}
	[Token(Token = "0x20007D7")]
	public struct InputControlState
	{
		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool State;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Value;

		[Token(Token = "0x6003119")]
		[Address(RVA = "0x16CDF04", Offset = "0x16CDF04", VA = "0x16CDF04")]
		public void Reset()
		{
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0x16CDEB4", Offset = "0x16CDEB4", VA = "0x16CDEB4")]
		public void Set(float value)
		{
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x16CE550", Offset = "0x16CE550", VA = "0x16CE550")]
		public void Set(float value, float threshold)
		{
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0x16CDDB8", Offset = "0x16CDDB8", VA = "0x16CDDB8")]
		public void Set(bool state)
		{
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0x16CE568", Offset = "0x16CE568", VA = "0x16CE568")]
		public static implicit operator bool(InputControlState state)
		{
			return default(bool);
		}

		[Token(Token = "0x600311E")]
		[Address(RVA = "0x16CE574", Offset = "0x16CE574", VA = "0x16CE574")]
		public static implicit operator float(InputControlState state)
		{
			return default(float);
		}

		[Token(Token = "0x600311F")]
		[Address(RVA = "0x16CE580", Offset = "0x16CE580", VA = "0x16CE580")]
		public static bool operator ==(InputControlState a, InputControlState b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003120")]
		[Address(RVA = "0x16CDF54", Offset = "0x16CDF54", VA = "0x16CDF54")]
		public static bool operator !=(InputControlState a, InputControlState b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007D8")]
	public enum InputControlType
	{
		[Token(Token = "0x40025CA")]
		None,
		[Token(Token = "0x40025CB")]
		LeftStickX,
		[Token(Token = "0x40025CC")]
		LeftStickY,
		[Token(Token = "0x40025CD")]
		LeftStickButton,
		[Token(Token = "0x40025CE")]
		RightStickX,
		[Token(Token = "0x40025CF")]
		RightStickY,
		[Token(Token = "0x40025D0")]
		RightStickButton,
		[Token(Token = "0x40025D1")]
		DPadUp,
		[Token(Token = "0x40025D2")]
		DPadDown,
		[Token(Token = "0x40025D3")]
		DPadLeft,
		[Token(Token = "0x40025D4")]
		DPadRight,
		[Token(Token = "0x40025D5")]
		Action1,
		[Token(Token = "0x40025D6")]
		Action2,
		[Token(Token = "0x40025D7")]
		Action3,
		[Token(Token = "0x40025D8")]
		Action4,
		[Token(Token = "0x40025D9")]
		LeftTrigger,
		[Token(Token = "0x40025DA")]
		RightTrigger,
		[Token(Token = "0x40025DB")]
		LeftBumper,
		[Token(Token = "0x40025DC")]
		RightBumper,
		[Token(Token = "0x40025DD")]
		Back,
		[Token(Token = "0x40025DE")]
		Start,
		[Token(Token = "0x40025DF")]
		Select,
		[Token(Token = "0x40025E0")]
		System,
		[Token(Token = "0x40025E1")]
		Pause,
		[Token(Token = "0x40025E2")]
		Menu,
		[Token(Token = "0x40025E3")]
		Share,
		[Token(Token = "0x40025E4")]
		View,
		[Token(Token = "0x40025E5")]
		Options,
		[Token(Token = "0x40025E6")]
		TiltX,
		[Token(Token = "0x40025E7")]
		TiltY,
		[Token(Token = "0x40025E8")]
		TiltZ,
		[Token(Token = "0x40025E9")]
		ScrollWheel,
		[Token(Token = "0x40025EA")]
		TouchPadTap,
		[Token(Token = "0x40025EB")]
		TouchPadXAxis,
		[Token(Token = "0x40025EC")]
		TouchPadYAxis,
		[Token(Token = "0x40025ED")]
		Analog0,
		[Token(Token = "0x40025EE")]
		Analog1,
		[Token(Token = "0x40025EF")]
		Analog2,
		[Token(Token = "0x40025F0")]
		Analog3,
		[Token(Token = "0x40025F1")]
		Analog4,
		[Token(Token = "0x40025F2")]
		Analog5,
		[Token(Token = "0x40025F3")]
		Analog6,
		[Token(Token = "0x40025F4")]
		Analog7,
		[Token(Token = "0x40025F5")]
		Analog8,
		[Token(Token = "0x40025F6")]
		Analog9,
		[Token(Token = "0x40025F7")]
		Analog10,
		[Token(Token = "0x40025F8")]
		Analog11,
		[Token(Token = "0x40025F9")]
		Analog12,
		[Token(Token = "0x40025FA")]
		Analog13,
		[Token(Token = "0x40025FB")]
		Analog14,
		[Token(Token = "0x40025FC")]
		Analog15,
		[Token(Token = "0x40025FD")]
		Analog16,
		[Token(Token = "0x40025FE")]
		Analog17,
		[Token(Token = "0x40025FF")]
		Analog18,
		[Token(Token = "0x4002600")]
		Analog19,
		[Token(Token = "0x4002601")]
		Button0,
		[Token(Token = "0x4002602")]
		Button1,
		[Token(Token = "0x4002603")]
		Button2,
		[Token(Token = "0x4002604")]
		Button3,
		[Token(Token = "0x4002605")]
		Button4,
		[Token(Token = "0x4002606")]
		Button5,
		[Token(Token = "0x4002607")]
		Button6,
		[Token(Token = "0x4002608")]
		Button7,
		[Token(Token = "0x4002609")]
		Button8,
		[Token(Token = "0x400260A")]
		Button9,
		[Token(Token = "0x400260B")]
		Button10,
		[Token(Token = "0x400260C")]
		Button11,
		[Token(Token = "0x400260D")]
		Button12,
		[Token(Token = "0x400260E")]
		Button13,
		[Token(Token = "0x400260F")]
		Button14,
		[Token(Token = "0x4002610")]
		Button15,
		[Token(Token = "0x4002611")]
		Button16,
		[Token(Token = "0x4002612")]
		Button17,
		[Token(Token = "0x4002613")]
		Button18,
		[Token(Token = "0x4002614")]
		Button19,
		[Token(Token = "0x4002615")]
		Count
	}
	[Token(Token = "0x20007D9")]
	public class OneAxisInputControl
	{
		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDDC", Offset = "0x8FBDDC")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputControlState thisState;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputControlState lastState;

		[Token(Token = "0x17000667")]
		public ulong UpdateTick
		{
			[Token(Token = "0x6003121")]
			[Address(RVA = "0x15A00D0", Offset = "0x15A00D0", VA = "0x15A00D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B468", Offset = "0x90B468")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6003122")]
			[Address(RVA = "0x15A00D8", Offset = "0x15A00D8", VA = "0x15A00D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B478", Offset = "0x90B478")]
			private set
			{
			}
		}

		[Token(Token = "0x17000668")]
		public bool State
		{
			[Token(Token = "0x6003124")]
			[Address(RVA = "0x15A0188", Offset = "0x15A0188", VA = "0x15A0188")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000669")]
		public bool LastState
		{
			[Token(Token = "0x6003125")]
			[Address(RVA = "0x15A0190", Offset = "0x15A0190", VA = "0x15A0190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066A")]
		public float Value
		{
			[Token(Token = "0x6003126")]
			[Address(RVA = "0x15A0198", Offset = "0x15A0198", VA = "0x15A0198")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066B")]
		public float LastValue
		{
			[Token(Token = "0x6003127")]
			[Address(RVA = "0x15A01A0", Offset = "0x15A01A0", VA = "0x15A01A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066C")]
		public bool HasChanged
		{
			[Token(Token = "0x6003128")]
			[Address(RVA = "0x15A01A8", Offset = "0x15A01A8", VA = "0x15A01A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066D")]
		public bool IsPressed
		{
			[Token(Token = "0x6003129")]
			[Address(RVA = "0x15A01B8", Offset = "0x15A01B8", VA = "0x15A01B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066E")]
		public bool WasPressed
		{
			[Token(Token = "0x600312A")]
			[Address(RVA = "0x15A01C0", Offset = "0x15A01C0", VA = "0x15A01C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066F")]
		public bool WasReleased
		{
			[Token(Token = "0x600312B")]
			[Address(RVA = "0x15A01E0", Offset = "0x15A01E0", VA = "0x15A01E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0x15A00E0", Offset = "0x15A00E0", VA = "0x15A00E0")]
		public void UpdateWithValue(float value, ulong updateTick, float stateThreshold)
		{
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0x15A0200", Offset = "0x15A0200", VA = "0x15A0200")]
		public static implicit operator bool(OneAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x600312D")]
		[Address(RVA = "0x15A0218", Offset = "0x15A0218", VA = "0x15A0218")]
		public static implicit operator float(OneAxisInputControl control)
		{
			return default(float);
		}

		[Token(Token = "0x600312E")]
		[Address(RVA = "0x15A0230", Offset = "0x15A0230", VA = "0x15A0230")]
		public OneAxisInputControl()
		{
		}
	}
	[Token(Token = "0x20007DA")]
	public class TwoAxisInputControl
	{
		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDEC", Offset = "0x8FBDEC")]
		private float <X>k__BackingField;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBDFC", Offset = "0x8FBDFC")]
		private float <Y>k__BackingField;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE0C", Offset = "0x8FBE0C")]
		private OneAxisInputControl <Left>k__BackingField;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE1C", Offset = "0x8FBE1C")]
		private OneAxisInputControl <Right>k__BackingField;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE2C", Offset = "0x8FBE2C")]
		private OneAxisInputControl <Up>k__BackingField;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE3C", Offset = "0x8FBE3C")]
		private OneAxisInputControl <Down>k__BackingField;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE4C", Offset = "0x8FBE4C")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool thisState;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool lastState;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float StateThreshold;

		[Token(Token = "0x17000670")]
		public float X
		{
			[Token(Token = "0x600312F")]
			[Address(RVA = "0x15CDDC0", Offset = "0x15CDDC0", VA = "0x15CDDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B488", Offset = "0x90B488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003130")]
			[Address(RVA = "0x15CDDC8", Offset = "0x15CDDC8", VA = "0x15CDDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B498", Offset = "0x90B498")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000671")]
		public float Y
		{
			[Token(Token = "0x6003131")]
			[Address(RVA = "0x15CDDD0", Offset = "0x15CDDD0", VA = "0x15CDDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4A8", Offset = "0x90B4A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003132")]
			[Address(RVA = "0x15CDDD8", Offset = "0x15CDDD8", VA = "0x15CDDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4B8", Offset = "0x90B4B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000672")]
		public OneAxisInputControl Left
		{
			[Token(Token = "0x6003133")]
			[Address(RVA = "0x15CDDE0", Offset = "0x15CDDE0", VA = "0x15CDDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4C8", Offset = "0x90B4C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003134")]
			[Address(RVA = "0x15CDDE8", Offset = "0x15CDDE8", VA = "0x15CDDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4D8", Offset = "0x90B4D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000673")]
		public OneAxisInputControl Right
		{
			[Token(Token = "0x6003135")]
			[Address(RVA = "0x15CDDF0", Offset = "0x15CDDF0", VA = "0x15CDDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4E8", Offset = "0x90B4E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003136")]
			[Address(RVA = "0x15CDDF8", Offset = "0x15CDDF8", VA = "0x15CDDF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B4F8", Offset = "0x90B4F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000674")]
		public OneAxisInputControl Up
		{
			[Token(Token = "0x6003137")]
			[Address(RVA = "0x15CDE00", Offset = "0x15CDE00", VA = "0x15CDE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B508", Offset = "0x90B508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003138")]
			[Address(RVA = "0x15CDE08", Offset = "0x15CDE08", VA = "0x15CDE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B518", Offset = "0x90B518")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000675")]
		public OneAxisInputControl Down
		{
			[Token(Token = "0x6003139")]
			[Address(RVA = "0x15CDE10", Offset = "0x15CDE10", VA = "0x15CDE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B528", Offset = "0x90B528")]
			get
			{
				return null;
			}
			[Token(Token = "0x600313A")]
			[Address(RVA = "0x15CDE18", Offset = "0x15CDE18", VA = "0x15CDE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B538", Offset = "0x90B538")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000676")]
		public ulong UpdateTick
		{
			[Token(Token = "0x600313B")]
			[Address(RVA = "0x15CDE20", Offset = "0x15CDE20", VA = "0x15CDE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B548", Offset = "0x90B548")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600313C")]
			[Address(RVA = "0x15CDE28", Offset = "0x15CDE28", VA = "0x15CDE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B558", Offset = "0x90B558")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000677")]
		public bool State
		{
			[Token(Token = "0x600313F")]
			[Address(RVA = "0x15CE19C", Offset = "0x15CE19C", VA = "0x15CE19C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000678")]
		public bool HasChanged
		{
			[Token(Token = "0x6003140")]
			[Address(RVA = "0x15CE1A4", Offset = "0x15CE1A4", VA = "0x15CE1A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000679")]
		public Vector2 Vector
		{
			[Token(Token = "0x6003141")]
			[Address(RVA = "0x15CE1C4", Offset = "0x15CE1C4", VA = "0x15CE1C4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0x15CDE30", Offset = "0x15CDE30", VA = "0x15CDE30")]
		internal TwoAxisInputControl()
		{
		}

		[Token(Token = "0x600313E")]
		[Address(RVA = "0x15CDF14", Offset = "0x15CDF14", VA = "0x15CDF14")]
		internal void Update(float x, float y, ulong updateTick)
		{
		}

		[Token(Token = "0x6003142")]
		[Address(RVA = "0x15CE1CC", Offset = "0x15CE1CC", VA = "0x15CE1CC")]
		public static implicit operator bool(TwoAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0x15CE1E4", Offset = "0x15CE1E4", VA = "0x15CE1E4")]
		public static implicit operator Vector2(TwoAxisInputControl control)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003144")]
		[Address(RVA = "0x15CE1FC", Offset = "0x15CE1FC", VA = "0x15CE1FC")]
		public static implicit operator Vector3(TwoAxisInputControl control)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20007DB")]
	public enum LogMessageType
	{
		[Token(Token = "0x4002624")]
		Info,
		[Token(Token = "0x4002625")]
		Warning,
		[Token(Token = "0x4002626")]
		Error
	}
	[Token(Token = "0x20007DC")]
	public struct LogMessage
	{
		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string text;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LogMessageType type;
	}
	[Token(Token = "0x20007DD")]
	public class Logger
	{
		[Token(Token = "0x20007DE")]
		public delegate void LogMessageHandler(LogMessage message);

		[Token(Token = "0x1400001D")]
		public static event LogMessageHandler OnLogMessage
		{
			[Token(Token = "0x6003146")]
			[Address(RVA = "0x1B24580", Offset = "0x1B24580", VA = "0x1B24580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B568", Offset = "0x90B568")]
			add
			{
			}
			[Token(Token = "0x6003147")]
			[Address(RVA = "0x1B2463C", Offset = "0x1B2463C", VA = "0x1B2463C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B578", Offset = "0x90B578")]
			remove
			{
			}
		}

		[Token(Token = "0x6003148")]
		[Address(RVA = "0x1B246F8", Offset = "0x1B246F8", VA = "0x1B246F8")]
		public static void LogInfo(string text)
		{
		}

		[Token(Token = "0x6003149")]
		[Address(RVA = "0x1B2478C", Offset = "0x1B2478C", VA = "0x1B2478C")]
		public static void LogWarning(string text)
		{
		}

		[Token(Token = "0x600314A")]
		[Address(RVA = "0x1B24824", Offset = "0x1B24824", VA = "0x1B24824")]
		public static void LogError(string text)
		{
		}

		[Token(Token = "0x600314B")]
		[Address(RVA = "0x1B248BC", Offset = "0x1B248BC", VA = "0x1B248BC")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20007DF")]
	public class InputDevice
	{
		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputDevice Null;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int SortOrder;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE6C", Offset = "0x8FBE6C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE7C", Offset = "0x8FBE7C")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE8C", Offset = "0x8FBE8C")]
		private ulong <LastChangeTick>k__BackingField;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBE9C", Offset = "0x8FBE9C")]
		private InputControl[] <Controls>k__BackingField;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBEAC", Offset = "0x8FBEAC")]
		private TwoAxisInputControl <LeftStick>k__BackingField;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBEBC", Offset = "0x8FBEBC")]
		private TwoAxisInputControl <RightStick>k__BackingField;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBECC", Offset = "0x8FBECC")]
		private TwoAxisInputControl <DPad>k__BackingField;

		[Token(Token = "0x1700067A")]
		public string Name
		{
			[Token(Token = "0x6003150")]
			[Address(RVA = "0x16CE598", Offset = "0x16CE598", VA = "0x16CE598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B588", Offset = "0x90B588")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003151")]
			[Address(RVA = "0x16CE5A0", Offset = "0x16CE5A0", VA = "0x16CE5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B598", Offset = "0x90B598")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700067B")]
		public string Meta
		{
			[Token(Token = "0x6003152")]
			[Address(RVA = "0x16CE5A8", Offset = "0x16CE5A8", VA = "0x16CE5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5A8", Offset = "0x90B5A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003153")]
			[Address(RVA = "0x16CE5B0", Offset = "0x16CE5B0", VA = "0x16CE5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5B8", Offset = "0x90B5B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700067C")]
		public ulong LastChangeTick
		{
			[Token(Token = "0x6003154")]
			[Address(RVA = "0x16CE5B8", Offset = "0x16CE5B8", VA = "0x16CE5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5C8", Offset = "0x90B5C8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6003155")]
			[Address(RVA = "0x16CE5C0", Offset = "0x16CE5C0", VA = "0x16CE5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5D8", Offset = "0x90B5D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		public InputControl[] Controls
		{
			[Token(Token = "0x6003156")]
			[Address(RVA = "0x16CE5C8", Offset = "0x16CE5C8", VA = "0x16CE5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5E8", Offset = "0x90B5E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003157")]
			[Address(RVA = "0x16CE5D0", Offset = "0x16CE5D0", VA = "0x16CE5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B5F8", Offset = "0x90B5F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700067E")]
		public TwoAxisInputControl LeftStick
		{
			[Token(Token = "0x6003158")]
			[Address(RVA = "0x16CE5D8", Offset = "0x16CE5D8", VA = "0x16CE5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B608", Offset = "0x90B608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003159")]
			[Address(RVA = "0x16CE5E0", Offset = "0x16CE5E0", VA = "0x16CE5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B618", Offset = "0x90B618")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700067F")]
		public TwoAxisInputControl RightStick
		{
			[Token(Token = "0x600315A")]
			[Address(RVA = "0x16CE5E8", Offset = "0x16CE5E8", VA = "0x16CE5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B628", Offset = "0x90B628")]
			get
			{
				return null;
			}
			[Token(Token = "0x600315B")]
			[Address(RVA = "0x16CE5F0", Offset = "0x16CE5F0", VA = "0x16CE5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B638", Offset = "0x90B638")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000680")]
		public TwoAxisInputControl DPad
		{
			[Token(Token = "0x600315C")]
			[Address(RVA = "0x16CE5F8", Offset = "0x16CE5F8", VA = "0x16CE5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B648", Offset = "0x90B648")]
			get
			{
				return null;
			}
			[Token(Token = "0x600315D")]
			[Address(RVA = "0x16CE600", Offset = "0x16CE600", VA = "0x16CE600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B658", Offset = "0x90B658")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000681")]
		private Vector2 DPadVector
		{
			[Token(Token = "0x600316C")]
			[Address(RVA = "0x16CEEA4", Offset = "0x16CEEA4", VA = "0x16CEEA4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000682")]
		public virtual bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x6003170")]
			[Address(RVA = "0x16CF16C", Offset = "0x16CF16C", VA = "0x16CF16C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000683")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x6003171")]
			[Address(RVA = "0x16CF174", Offset = "0x16CF174", VA = "0x16CF174", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000684")]
		public bool MenuWasPressed
		{
			[Token(Token = "0x6003172")]
			[Address(RVA = "0x16CF17C", Offset = "0x16CF17C", VA = "0x16CF17C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000685")]
		public InputControl AnyButton
		{
			[Token(Token = "0x6003173")]
			[Address(RVA = "0x16CF26C", Offset = "0x16CF26C", VA = "0x16CF26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000686")]
		public InputControl LeftStickX
		{
			[Token(Token = "0x6003174")]
			[Address(RVA = "0x16CEE84", Offset = "0x16CEE84", VA = "0x16CEE84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000687")]
		public InputControl LeftStickY
		{
			[Token(Token = "0x6003175")]
			[Address(RVA = "0x16CEE8C", Offset = "0x16CEE8C", VA = "0x16CEE8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000688")]
		public InputControl RightStickX
		{
			[Token(Token = "0x6003176")]
			[Address(RVA = "0x16CEE94", Offset = "0x16CEE94", VA = "0x16CEE94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000689")]
		public InputControl RightStickY
		{
			[Token(Token = "0x6003177")]
			[Address(RVA = "0x16CEE9C", Offset = "0x16CEE9C", VA = "0x16CEE9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068A")]
		public InputControl DPadUp
		{
			[Token(Token = "0x6003178")]
			[Address(RVA = "0x16CF124", Offset = "0x16CF124", VA = "0x16CF124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068B")]
		public InputControl DPadDown
		{
			[Token(Token = "0x6003179")]
			[Address(RVA = "0x16CF12C", Offset = "0x16CF12C", VA = "0x16CF12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068C")]
		public InputControl DPadLeft
		{
			[Token(Token = "0x600317A")]
			[Address(RVA = "0x16CF114", Offset = "0x16CF114", VA = "0x16CF114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068D")]
		public InputControl DPadRight
		{
			[Token(Token = "0x600317B")]
			[Address(RVA = "0x16CF11C", Offset = "0x16CF11C", VA = "0x16CF11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068E")]
		public InputControl Action1
		{
			[Token(Token = "0x600317C")]
			[Address(RVA = "0x16CF344", Offset = "0x16CF344", VA = "0x16CF344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068F")]
		public InputControl Action2
		{
			[Token(Token = "0x600317D")]
			[Address(RVA = "0x16CF34C", Offset = "0x16CF34C", VA = "0x16CF34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000690")]
		public InputControl Action3
		{
			[Token(Token = "0x600317E")]
			[Address(RVA = "0x16CF354", Offset = "0x16CF354", VA = "0x16CF354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000691")]
		public InputControl Action4
		{
			[Token(Token = "0x600317F")]
			[Address(RVA = "0x16CF35C", Offset = "0x16CF35C", VA = "0x16CF35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000692")]
		public InputControl LeftTrigger
		{
			[Token(Token = "0x6003180")]
			[Address(RVA = "0x16CF364", Offset = "0x16CF364", VA = "0x16CF364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000693")]
		public InputControl RightTrigger
		{
			[Token(Token = "0x6003181")]
			[Address(RVA = "0x16CF36C", Offset = "0x16CF36C", VA = "0x16CF36C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000694")]
		public InputControl LeftBumper
		{
			[Token(Token = "0x6003182")]
			[Address(RVA = "0x16CF374", Offset = "0x16CF374", VA = "0x16CF374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000695")]
		public InputControl RightBumper
		{
			[Token(Token = "0x6003183")]
			[Address(RVA = "0x16CF37C", Offset = "0x16CF37C", VA = "0x16CF37C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000696")]
		public InputControl LeftStickButton
		{
			[Token(Token = "0x6003184")]
			[Address(RVA = "0x16CF384", Offset = "0x16CF384", VA = "0x16CF384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000697")]
		public InputControl RightStickButton
		{
			[Token(Token = "0x6003185")]
			[Address(RVA = "0x16CF38C", Offset = "0x16CF38C", VA = "0x16CF38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000698")]
		public float DPadX
		{
			[Token(Token = "0x6003186")]
			[Address(RVA = "0x16CF394", Offset = "0x16CF394", VA = "0x16CF394")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000699")]
		public float DPadY
		{
			[Token(Token = "0x6003187")]
			[Address(RVA = "0x16CF3B0", Offset = "0x16CF3B0", VA = "0x16CF3B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069A")]
		public TwoAxisInputControl Direction
		{
			[Token(Token = "0x6003188")]
			[Address(RVA = "0x16CF3CC", Offset = "0x16CF3CC", VA = "0x16CF3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600315E")]
		[Address(RVA = "0x16CE608", Offset = "0x16CE608", VA = "0x16CE608")]
		public InputDevice(string name)
		{
		}

		[Token(Token = "0x600315F")]
		[Address(RVA = "0x16CE73C", Offset = "0x16CE73C", VA = "0x16CE73C")]
		public InputControl GetControl(InputControlType inputControlType)
		{
			return null;
		}

		[Token(Token = "0x6003160")]
		[Address(RVA = "0x16CE7E0", Offset = "0x16CE7E0", VA = "0x16CE7E0")]
		public static InputControlType GetInputControlTypeByName(string inputControlName)
		{
			return default(InputControlType);
		}

		[Token(Token = "0x6003161")]
		[Address(RVA = "0x16CE8E4", Offset = "0x16CE8E4", VA = "0x16CE8E4")]
		public InputControl GetControlByName(string inputControlName)
		{
			return null;
		}

		[Token(Token = "0x6003162")]
		[Address(RVA = "0x16CE95C", Offset = "0x16CE95C", VA = "0x16CE95C")]
		public InputControl AddControl(InputControlType inputControlType, string handle)
		{
			return null;
		}

		[Token(Token = "0x6003163")]
		[Address(RVA = "0x16CEA24", Offset = "0x16CEA24", VA = "0x16CEA24")]
		public void UpdateWithState(InputControlType inputControlType, bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x6003164")]
		[Address(RVA = "0x16CEA58", Offset = "0x16CEA58", VA = "0x16CEA58")]
		public void UpdateWithValue(InputControlType inputControlType, float value, ulong updateTick)
		{
		}

		[Token(Token = "0x6003165")]
		[Address(RVA = "0x16CEA94", Offset = "0x16CEA94", VA = "0x16CEA94")]
		public void PreUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003166")]
		[Address(RVA = "0x16CEB24", Offset = "0x16CEB24", VA = "0x16CEB24", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003167")]
		[Address(RVA = "0x16CEB28", Offset = "0x16CEB28", VA = "0x16CEB28")]
		public void PostUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003168")]
		[Address(RVA = "0x16CED44", Offset = "0x16CED44", VA = "0x16CED44")]
		private float ProcessAnalogControlValue(InputControl control, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6003169")]
		[Address(RVA = "0x16CF030", Offset = "0x16CF030", VA = "0x16CF030")]
		private float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x600316A")]
		[Address(RVA = "0x16CEFD0", Offset = "0x16CEFD0", VA = "0x16CEFD0")]
		private float ApplyCircularDeadZone(float axisValue1, float axisValue2, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x600316B")]
		[Address(RVA = "0x16CF078", Offset = "0x16CF078", VA = "0x16CF078")]
		private float ApplySmoothing(float thisValue, float lastValue, float deltaTime, float sensitivity)
		{
			return default(float);
		}

		[Token(Token = "0x600316D")]
		[Address(RVA = "0x16CF134", Offset = "0x16CF134", VA = "0x16CF134")]
		public bool LastChangedAfter(InputDevice otherDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x600316E")]
		[Address(RVA = "0x16CF158", Offset = "0x16CF158", VA = "0x16CF158", Slot = "5")]
		public virtual void Vibrate(float leftMotor, float rightMotor)
		{
		}

		[Token(Token = "0x600316F")]
		[Address(RVA = "0x16CF15C", Offset = "0x16CF15C", VA = "0x16CF15C")]
		public void Vibrate(float intensity)
		{
		}
	}
	[Token(Token = "0x20007E0")]
	public class InputDeviceManager
	{
		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<InputDevice> devices;

		[Token(Token = "0x600318A")]
		[Address(RVA = "0x16CF478", Offset = "0x16CF478", VA = "0x16CF478", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x600318B")]
		[Address(RVA = "0x16CF47C", Offset = "0x16CF47C", VA = "0x16CF47C")]
		public InputDeviceManager()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class InputManager
	{
		[Serializable]
		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F04FC", Offset = "0x8F04FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<InputDevice> <>9__55_0;

			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<InputDevice> <>9__56_0;

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x15FCE38", Offset = "0x15FCE38", VA = "0x15FCE38")]
			public <>c()
			{
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x15FCE40", Offset = "0x15FCE40", VA = "0x15FCE40")]
			internal int <AttachDevice>b__55_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}

			[Token(Token = "0x60031BB")]
			[Address(RVA = "0x15FCE6C", Offset = "0x15FCE6C", VA = "0x15FCE6C")]
			internal int <DetachDevice>b__56_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly VersionInfo Version;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<InputDeviceManager> inputDeviceManagers;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static InputDevice activeDevice;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<InputDevice> devices;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static ReadOnlyCollection<InputDevice> Devices;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF2C", Offset = "0x8FBF2C")]
		private static string <Platform>k__BackingField;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF3C", Offset = "0x8FBF3C")]
		private static bool <MenuWasPressed>k__BackingField;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public static bool InvertYAxis;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private static bool enableXInput;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private static bool isSetup;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static float initialTime;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static float currentTime;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static float lastUpdateTime;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static ulong currentTick;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static VersionInfo? unityVersion;

		[Token(Token = "0x1700069B")]
		public static string Platform
		{
			[Token(Token = "0x6003196")]
			[Address(RVA = "0x16CFEB0", Offset = "0x16CFEB0", VA = "0x16CFEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B708", Offset = "0x90B708")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003197")]
			[Address(RVA = "0x16CFF14", Offset = "0x16CFF14", VA = "0x16CFF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B718", Offset = "0x90B718")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069C")]
		public static bool MenuWasPressed
		{
			[Token(Token = "0x6003198")]
			[Address(RVA = "0x16CFF80", Offset = "0x16CFF80", VA = "0x16CFF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B728", Offset = "0x90B728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003199")]
			[Address(RVA = "0x16CFFE4", Offset = "0x16CFFE4", VA = "0x16CFFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B738", Offset = "0x90B738")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069D")]
		private static InputDevice DefaultActiveDevice
		{
			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x16D10A8", Offset = "0x16D10A8", VA = "0x16D10A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069E")]
		public static InputDevice ActiveDevice
		{
			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x16D0B00", Offset = "0x16D0B00", VA = "0x16D0B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x16D0BC4", Offset = "0x16D0BC4", VA = "0x16D0BC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069F")]
		public static bool EnableXInput
		{
			[Token(Token = "0x60031B3")]
			[Address(RVA = "0x16D11B0", Offset = "0x16D11B0", VA = "0x16D11B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x16D1214", Offset = "0x16D1214", VA = "0x16D1214")]
			set
			{
			}
		}

		[Token(Token = "0x170006A0")]
		public static VersionInfo UnityVersion
		{
			[Token(Token = "0x60031B5")]
			[Address(RVA = "0x16D1280", Offset = "0x16D1280", VA = "0x16D1280")]
			get
			{
				return default(VersionInfo);
			}
		}

		[Token(Token = "0x1400001E")]
		public static event Action OnSetup
		{
			[Token(Token = "0x600318C")]
			[Address(RVA = "0x16CF500", Offset = "0x16CF500", VA = "0x16CF500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B668", Offset = "0x90B668")]
			add
			{
			}
			[Token(Token = "0x600318D")]
			[Address(RVA = "0x16CF5F8", Offset = "0x16CF5F8", VA = "0x16CF5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B678", Offset = "0x90B678")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event Action<ulong, float> OnUpdate
		{
			[Token(Token = "0x600318E")]
			[Address(RVA = "0x16CF6F0", Offset = "0x16CF6F0", VA = "0x16CF6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B688", Offset = "0x90B688")]
			add
			{
			}
			[Token(Token = "0x600318F")]
			[Address(RVA = "0x16CF7E8", Offset = "0x16CF7E8", VA = "0x16CF7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B698", Offset = "0x90B698")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event Action<InputDevice> OnDeviceAttached
		{
			[Token(Token = "0x6003190")]
			[Address(RVA = "0x16CF8E0", Offset = "0x16CF8E0", VA = "0x16CF8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6A8", Offset = "0x90B6A8")]
			add
			{
			}
			[Token(Token = "0x6003191")]
			[Address(RVA = "0x16CF9D8", Offset = "0x16CF9D8", VA = "0x16CF9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6B8", Offset = "0x90B6B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event Action<InputDevice> OnDeviceDetached
		{
			[Token(Token = "0x6003192")]
			[Address(RVA = "0x16CFAD0", Offset = "0x16CFAD0", VA = "0x16CFAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6C8", Offset = "0x90B6C8")]
			add
			{
			}
			[Token(Token = "0x6003193")]
			[Address(RVA = "0x16CFBC8", Offset = "0x16CFBC8", VA = "0x16CFBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6D8", Offset = "0x90B6D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event Action<InputDevice> OnActiveDeviceChanged
		{
			[Token(Token = "0x6003194")]
			[Address(RVA = "0x16CFCC0", Offset = "0x16CFCC0", VA = "0x16CFCC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6E8", Offset = "0x90B6E8")]
			add
			{
			}
			[Token(Token = "0x6003195")]
			[Address(RVA = "0x16CFDB8", Offset = "0x16CFDB8", VA = "0x16CFDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B6F8", Offset = "0x90B6F8")]
			remove
			{
			}
		}

		[Token(Token = "0x600319A")]
		[Address(RVA = "0x16D0050", Offset = "0x16D0050", VA = "0x16D0050")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90B748", Offset = "0x90B748")]
		public static void Setup()
		{
		}

		[Token(Token = "0x600319B")]
		[Address(RVA = "0x16CA3D8", Offset = "0x16CA3D8", VA = "0x16CA3D8")]
		internal static void SetupInternal()
		{
		}

		[Token(Token = "0x600319C")]
		[Address(RVA = "0x16D00A8", Offset = "0x16D00A8", VA = "0x16D00A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90B780", Offset = "0x90B780")]
		public static void Reset()
		{
		}

		[Token(Token = "0x600319D")]
		[Address(RVA = "0x16CA9EC", Offset = "0x16CA9EC", VA = "0x16CA9EC")]
		internal static void ResetInternal()
		{
		}

		[Token(Token = "0x600319E")]
		[Address(RVA = "0x16D0100", Offset = "0x16D0100", VA = "0x16D0100")]
		private static void AssertIsSetup()
		{
		}

		[Token(Token = "0x600319F")]
		[Address(RVA = "0x16D01B0", Offset = "0x16D01B0", VA = "0x16D01B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x90B7B8", Offset = "0x90B7B8")]
		public static void Update()
		{
		}

		[Token(Token = "0x60031A0")]
		[Address(RVA = "0x16CABE0", Offset = "0x16CABE0", VA = "0x16CABE0")]
		internal static void UpdateInternal()
		{
		}

		[Token(Token = "0x60031A1")]
		[Address(RVA = "0x16CADDC", Offset = "0x16CADDC", VA = "0x16CADDC")]
		internal static void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x60031A2")]
		[Address(RVA = "0x16CAF9C", Offset = "0x16CAF9C", VA = "0x16CAF9C")]
		internal static void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x60031A3")]
		[Address(RVA = "0x16CB000", Offset = "0x16CB000", VA = "0x16CB000")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60031A4")]
		[Address(RVA = "0x16D0894", Offset = "0x16D0894", VA = "0x16D0894")]
		private static void UpdateActiveDevice()
		{
		}

		[Token(Token = "0x60031A5")]
		[Address(RVA = "0x16D0C6C", Offset = "0x16D0C6C", VA = "0x16D0C6C")]
		public static void AddDeviceManager(InputDeviceManager inputDeviceManager)
		{
		}

		[Token(Token = "0x60031A6")]
		public static void AddDeviceManager<T>() where T : InputDeviceManager, new()
		{
		}

		[Token(Token = "0x60031A7")]
		public static bool HasDeviceManager<T>() where T : InputDeviceManager
		{
			return default(bool);
		}

		[Token(Token = "0x60031A8")]
		[Address(RVA = "0x16D0208", Offset = "0x16D0208", VA = "0x16D0208")]
		private static void UpdateCurrentTime()
		{
		}

		[Token(Token = "0x60031A9")]
		[Address(RVA = "0x16D0300", Offset = "0x16D0300", VA = "0x16D0300")]
		private static void UpdateDeviceManagers(float deltaTime)
		{
		}

		[Token(Token = "0x60031AA")]
		[Address(RVA = "0x16D0424", Offset = "0x16D0424", VA = "0x16D0424")]
		private static void PreUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60031AB")]
		[Address(RVA = "0x16D0564", Offset = "0x16D0564", VA = "0x16D0564")]
		private static void UpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60031AC")]
		[Address(RVA = "0x16D0708", Offset = "0x16D0708", VA = "0x16D0708")]
		private static void PostUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60031AD")]
		[Address(RVA = "0x16CA6C0", Offset = "0x16CA6C0", VA = "0x16CA6C0")]
		public static void AttachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60031AE")]
		[Address(RVA = "0x16D0D24", Offset = "0x16D0D24", VA = "0x16D0D24")]
		public static void DetachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60031AF")]
		[Address(RVA = "0x16D0FC4", Offset = "0x16D0FC4", VA = "0x16D0FC4")]
		public static void HideDevicesWithProfile(Type type)
		{
		}

		[Token(Token = "0x60031B6")]
		[Address(RVA = "0x16D13A8", Offset = "0x16D13A8", VA = "0x16D13A8")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20007E3")]
	public class UnityAnalogSource : InputControlSource
	{
		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int analogId;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] analogQueries;

		[Token(Token = "0x60031BC")]
		[Address(RVA = "0x15DB694", Offset = "0x15DB694", VA = "0x15DB694")]
		public UnityAnalogSource(int analogId)
		{
		}

		[Token(Token = "0x60031BD")]
		[Address(RVA = "0x15DB86C", Offset = "0x15DB86C", VA = "0x15DB86C", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031BE")]
		[Address(RVA = "0x15DB9A4", Offset = "0x15DB9A4", VA = "0x15DB9A4", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60031BF")]
		[Address(RVA = "0x15DB6C0", Offset = "0x15DB6C0", VA = "0x15DB6C0")]
		private static void SetupAnalogQueries()
		{
		}

		[Token(Token = "0x60031C0")]
		[Address(RVA = "0x15DB900", Offset = "0x15DB900", VA = "0x15DB900")]
		private static string GetAnalogKey(int joystickId, int analogId)
		{
			return null;
		}
	}
	[Token(Token = "0x20007E4")]
	public class UnityButtonSource : InputControlSource
	{
		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] buttonQueries;

		[Token(Token = "0x60031C1")]
		[Address(RVA = "0x15DB9CC", Offset = "0x15DB9CC", VA = "0x15DB9CC")]
		public UnityButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x60031C2")]
		[Address(RVA = "0x15DBBA4", Offset = "0x15DBBA4", VA = "0x15DBBA4", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031C3")]
		[Address(RVA = "0x15DBBC8", Offset = "0x15DBBC8", VA = "0x15DBBC8", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60031C4")]
		[Address(RVA = "0x15DB9F8", Offset = "0x15DB9F8", VA = "0x15DB9F8")]
		private static void SetupButtonQueries()
		{
		}

		[Token(Token = "0x60031C5")]
		[Address(RVA = "0x15DBC5C", Offset = "0x15DBC5C", VA = "0x15DBC5C")]
		private static string GetButtonKey(int joystickId, int buttonId)
		{
			return null;
		}
	}
	[Token(Token = "0x20007E5")]
	public class UnityGyroAxisSource : InputControlSource
	{
		[Token(Token = "0x20007E6")]
		public enum GyroAxis
		{
			[Token(Token = "0x4002652")]
			X,
			[Token(Token = "0x4002653")]
			Y
		}

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int axis;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Quaternion zeroAttitude;

		[Token(Token = "0x60031C6")]
		[Address(RVA = "0x15DBFEC", Offset = "0x15DBFEC", VA = "0x15DBFEC")]
		public UnityGyroAxisSource(GyroAxis axis)
		{
		}

		[Token(Token = "0x60031C7")]
		[Address(RVA = "0x15DC080", Offset = "0x15DC080", VA = "0x15DC080", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031C8")]
		[Address(RVA = "0x15DC1C0", Offset = "0x15DC1C0", VA = "0x15DC1C0", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60031C9")]
		[Address(RVA = "0x15DC1E8", Offset = "0x15DC1E8", VA = "0x15DC1E8")]
		private static Quaternion GetAttitude()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60031CA")]
		[Address(RVA = "0x15DC0C0", Offset = "0x15DC0C0", VA = "0x15DC0C0")]
		private static Vector3 GetAxis()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60031CB")]
		[Address(RVA = "0x15DC29C", Offset = "0x15DC29C", VA = "0x15DC29C")]
		private static float ApplyDeadZone(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60031CC")]
		[Address(RVA = "0x15DC018", Offset = "0x15DC018", VA = "0x15DC018")]
		public static void Calibrate()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public class UnityKeyCodeAxisSource : InputControlSource
	{
		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode negativeKeyCode;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private KeyCode positiveKeyCode;

		[Token(Token = "0x60031CD")]
		[Address(RVA = "0x15DED90", Offset = "0x15DED90", VA = "0x15DED90")]
		public UnityKeyCodeAxisSource(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
		}

		[Token(Token = "0x60031CE")]
		[Address(RVA = "0x15E0A7C", Offset = "0x15E0A7C", VA = "0x15E0A7C", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031CF")]
		[Address(RVA = "0x15E0AC8", Offset = "0x15E0AC8", VA = "0x15E0AC8", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E8")]
	public class UnityKeyCodeComboSource : InputControlSource
	{
		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60031D0")]
		[Address(RVA = "0x15DECF0", Offset = "0x15DECF0", VA = "0x15DECF0")]
		public UnityKeyCodeComboSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60031D1")]
		[Address(RVA = "0x15E0B28", Offset = "0x15E0B28", VA = "0x15E0B28", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031D2")]
		[Address(RVA = "0x15E0B4C", Offset = "0x15E0B4C", VA = "0x15E0B4C", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E9")]
	public class UnityKeyCodeSource : InputControlSource
	{
		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x15DEC50", Offset = "0x15DEC50", VA = "0x15DEC50")]
		public UnityKeyCodeSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x15E0BC4", Offset = "0x15E0BC4", VA = "0x15E0BC4", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031D5")]
		[Address(RVA = "0x15E0BE8", Offset = "0x15E0BE8", VA = "0x15E0BE8", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007EA")]
	public class UnityMouseAxisSource : InputControlSource
	{
		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mouseAxisQuery;

		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x15DF510", Offset = "0x15DF510", VA = "0x15DF510")]
		public UnityMouseAxisSource(string axis)
		{
		}

		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x15E14D8", Offset = "0x15E14D8", VA = "0x15E14D8", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x15E14E4", Offset = "0x15E14E4", VA = "0x15E14E4", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007EB")]
	public class UnityMouseButtonSource : InputControlSource
	{
		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x15DF4E4", Offset = "0x15DF4E4", VA = "0x15DF4E4")]
		public UnityMouseButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x15E1514", Offset = "0x15E1514", VA = "0x15E1514", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x15E1540", Offset = "0x15E1540", VA = "0x15E1540", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007EC")]
	[AutoDiscover]
	public class AmazonFireTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x1A97A64", Offset = "0x1A97A64", VA = "0x1A97A64")]
		public AmazonFireTVProfile()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	[AutoDiscover]
	public class AmazonFireTVRemote : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x1A988B8", Offset = "0x1A988B8", VA = "0x1A988B8")]
		public AmazonFireTVRemote()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	[AutoDiscover]
	public class AndroidTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DE")]
		[Address(RVA = "0x1A9BF3C", Offset = "0x1A9BF3C", VA = "0x1A9BF3C")]
		public AndroidTVProfile()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	[AutoDiscover]
	public class AndroidTVRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DF")]
		[Address(RVA = "0x1A9CC7C", Offset = "0x1A9CC7C", VA = "0x1A9CC7C")]
		public AndroidTVRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	[AutoDiscover]
	public class AppleMFiProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E0")]
		[Address(RVA = "0x1AA2D98", Offset = "0x1AA2D98", VA = "0x1AA2D98")]
		public AppleMFiProfile()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	[AutoDiscover]
	public class ExecutionerXProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E1")]
		[Address(RVA = "0x174A3AC", Offset = "0x174A3AC", VA = "0x174A3AC")]
		public ExecutionerXProfile()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	[AutoDiscover]
	public class GameStickLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E2")]
		[Address(RVA = "0x18B18EC", Offset = "0x18B18EC", VA = "0x18B18EC")]
		public GameStickLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	[AutoDiscover]
	public class GameStickProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E3")]
		[Address(RVA = "0x18B25C4", Offset = "0x18B25C4", VA = "0x18B25C4")]
		public GameStickProfile()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	[AutoDiscover]
	public class GenericAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E4")]
		[Address(RVA = "0x18B3368", Offset = "0x18B3368", VA = "0x18B3368")]
		public GenericAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	[AutoDiscover]
	public class GenericBlackBerryProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E5")]
		[Address(RVA = "0x18B41C0", Offset = "0x18B41C0", VA = "0x18B41C0")]
		public GenericBlackBerryProfile()
		{
		}
	}
	[Token(Token = "0x20007F6")]
	[AutoDiscover]
	public class GenericLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E6")]
		[Address(RVA = "0x19384AC", Offset = "0x19384AC", VA = "0x19384AC")]
		public GenericLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	[AutoDiscover]
	public class GoogleNexusPlayerProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E7")]
		[Address(RVA = "0x193A800", Offset = "0x193A800", VA = "0x193A800")]
		public GoogleNexusPlayerProfile()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	[AutoDiscover]
	public class GoogleNexusPlayerRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E8")]
		[Address(RVA = "0x193B690", Offset = "0x193B690", VA = "0x193B690")]
		public GoogleNexusPlayerRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	[AutoDiscover]
	public class GreenThrottleAtlasAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E9")]
		[Address(RVA = "0x193C388", Offset = "0x193C388", VA = "0x193C388")]
		public GreenThrottleAtlasAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	[AutoDiscover]
	public class HamaBlackForceWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EA")]
		[Address(RVA = "0x1940EF0", Offset = "0x1940EF0", VA = "0x1940EF0")]
		public HamaBlackForceWinProfile()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	[AutoDiscover]
	public class LogitechF310LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EB")]
		[Address(RVA = "0x1B24FBC", Offset = "0x1B24FBC", VA = "0x1B24FBC")]
		public LogitechF310LinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	[AutoDiscover]
	public class LogitechF310ModeDMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EC")]
		[Address(RVA = "0x1B25E4C", Offset = "0x1B25E4C", VA = "0x1B25E4C")]
		public LogitechF310ModeDMacProfile()
		{
		}
	}
	[Token(Token = "0x20007FD")]
	[AutoDiscover]
	public class LogitechF310ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031ED")]
		[Address(RVA = "0x1B26CA4", Offset = "0x1B26CA4", VA = "0x1B26CA4")]
		public LogitechF310ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	[AutoDiscover]
	public class LogitechF310ModeXMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EE")]
		[Address(RVA = "0x1B27B4C", Offset = "0x1B27B4C", VA = "0x1B27B4C")]
		public LogitechF310ModeXMacProfile()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	[AutoDiscover]
	public class LogitechF310ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EF")]
		[Address(RVA = "0x1B28998", Offset = "0x1B28998", VA = "0x1B28998")]
		public LogitechF310ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x2000800")]
	[AutoDiscover]
	public class LogitechF510LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F0")]
		[Address(RVA = "0x1B29860", Offset = "0x1B29860", VA = "0x1B29860")]
		public LogitechF510LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000801")]
	[AutoDiscover]
	public class LogitechF510WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F1")]
		[Address(RVA = "0x1B2A6F0", Offset = "0x1B2A6F0", VA = "0x1B2A6F0")]
		public LogitechF510WinProfile()
		{
		}
	}
	[Token(Token = "0x2000802")]
	[AutoDiscover]
	public class LogitechF710LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F2")]
		[Address(RVA = "0x1B2B5B8", Offset = "0x1B2B5B8", VA = "0x1B2B5B8")]
		public LogitechF710LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000803")]
	[AutoDiscover]
	public class LogitechF710MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F3")]
		[Address(RVA = "0x1B2C410", Offset = "0x1B2C410", VA = "0x1B2C410")]
		public LogitechF710MacProfile()
		{
		}
	}
	[Token(Token = "0x2000804")]
	[AutoDiscover]
	public class LogitechF710ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F4")]
		[Address(RVA = "0x1B2D268", Offset = "0x1B2D268", VA = "0x1B2D268")]
		public LogitechF710ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x2000805")]
	[AutoDiscover]
	public class LogitechF710ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F5")]
		[Address(RVA = "0x1B2E0C0", Offset = "0x1B2E0C0", VA = "0x1B2E0C0")]
		public LogitechF710ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x2000806")]
	[AutoDiscover]
	public class LogitechRumblePad2MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F6")]
		[Address(RVA = "0x1B2EF18", Offset = "0x1B2EF18", VA = "0x1B2EF18")]
		public LogitechRumblePad2MacProfile()
		{
		}
	}
	[Token(Token = "0x2000807")]
	[AutoDiscover]
	public class LogitechRumblePad2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F7")]
		[Address(RVA = "0x1B2FBE8", Offset = "0x1B2FBE8", VA = "0x1B2FBE8")]
		public LogitechRumblePad2WinProfile()
		{
		}
	}
	[Token(Token = "0x2000808")]
	[AutoDiscover]
	public class LogitechWingManWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F8")]
		[Address(RVA = "0x1B30944", Offset = "0x1B30944", VA = "0x1B30944")]
		public LogitechWingManWinProfile()
		{
		}
	}
	[Token(Token = "0x2000809")]
	[AutoDiscover]
	public class MaxFireBlaze5Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F9")]
		[Address(RVA = "0x1AB21A8", Offset = "0x1AB21A8", VA = "0x1AB21A8")]
		public MaxFireBlaze5Profile()
		{
		}
	}
	[Token(Token = "0x200080A")]
	[AutoDiscover]
	public class MogaProLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FA")]
		[Address(RVA = "0x1ABB338", Offset = "0x1ABB338", VA = "0x1ABB338")]
		public MogaProLinuxProfile()
		{
		}
	}
	[Token(Token = "0x200080B")]
	[AutoDiscover]
	public class MogaProMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FB")]
		[Address(RVA = "0x1ABC13C", Offset = "0x1ABC13C", VA = "0x1ABC13C")]
		public MogaProMacProfile()
		{
		}
	}
	[Token(Token = "0x200080C")]
	[AutoDiscover]
	public class MogaProWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FC")]
		[Address(RVA = "0x1ABD004", Offset = "0x1ABD004", VA = "0x1ABD004")]
		public MogaProWinProfile()
		{
		}
	}
	[Token(Token = "0x200080D")]
	[AutoDiscover]
	public class NVidiaShieldAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FD")]
		[Address(RVA = "0x19AFDF0", Offset = "0x19AFDF0", VA = "0x19AFDF0")]
		public NVidiaShieldAndroidProfile()
		{
		}
	}
	[Token(Token = "0x200080E")]
	[AutoDiscover]
	public class NVidiaShieldTabletProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FE")]
		[Address(RVA = "0x19B0C2C", Offset = "0x19B0C2C", VA = "0x19B0C2C")]
		public NVidiaShieldTabletProfile()
		{
		}
	}
	[Token(Token = "0x200080F")]
	[AutoDiscover]
	public class NatecGenesisP44Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031FF")]
		[Address(RVA = "0x19B22FC", Offset = "0x19B22FC", VA = "0x19B22FC")]
		public NatecGenesisP44Profile()
		{
		}
	}
	[Token(Token = "0x2000810")]
	[AutoDiscover]
	public class OuyaLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003200")]
		[Address(RVA = "0x15A07BC", Offset = "0x15A07BC", VA = "0x15A07BC")]
		public OuyaLinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000811")]
	[AutoDiscover]
	public class OuyaWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003201")]
		[Address(RVA = "0x15A16B0", Offset = "0x15A16B0", VA = "0x15A16B0")]
		public OuyaWinProfile()
		{
		}
	}
	[Token(Token = "0x2000812")]
	[AutoDiscover]
	public class PlayStation2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003202")]
		[Address(RVA = "0x1911128", Offset = "0x1911128", VA = "0x1911128")]
		public PlayStation2WinProfile()
		{
		}
	}
	[Token(Token = "0x2000813")]
	[AutoDiscover]
	public class PlayStation3AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003203")]
		[Address(RVA = "0x1911F80", Offset = "0x1911F80", VA = "0x1911F80")]
		public PlayStation3AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000814")]
	[AutoDiscover]
	public class PlayStation3LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003204")]
		[Address(RVA = "0x1912F28", Offset = "0x1912F28", VA = "0x1912F28")]
		public PlayStation3LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000815")]
	[AutoDiscover]
	public class PlayStation3MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003205")]
		[Address(RVA = "0x1913D88", Offset = "0x1913D88", VA = "0x1913D88")]
		public PlayStation3MacProfile()
		{
		}
	}
	[Token(Token = "0x2000816")]
	[AutoDiscover]
	public class PlayStation3ShenghicWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003206")]
		[Address(RVA = "0x1914BB0", Offset = "0x1914BB0", VA = "0x1914BB0")]
		public PlayStation3ShenghicWinProfile()
		{
		}
	}
	[Token(Token = "0x2000817")]
	[AutoDiscover]
	public class PlayStation3WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003207")]
		[Address(RVA = "0x1915988", Offset = "0x1915988", VA = "0x1915988")]
		public PlayStation3WinProfile()
		{
		}
	}
	[Token(Token = "0x2000818")]
	[AutoDiscover]
	public class PlayStation4AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003208")]
		[Address(RVA = "0x1916984", Offset = "0x1916984", VA = "0x1916984")]
		public PlayStation4AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000819")]
	[AutoDiscover]
	public class PlayStation4LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003209")]
		[Address(RVA = "0x1917844", Offset = "0x1917844", VA = "0x1917844")]
		public PlayStation4LinuxProfile()
		{
		}
	}
	[Token(Token = "0x200081A")]
	[AutoDiscover]
	public class PlayStation4MacBTProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320A")]
		[Address(RVA = "0x191869C", Offset = "0x191869C", VA = "0x191869C")]
		public PlayStation4MacBTProfile()
		{
		}
	}
	[Token(Token = "0x200081B")]
	[AutoDiscover]
	public class PlayStation4MacUSBProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320B")]
		[Address(RVA = "0x1919924", Offset = "0x1919924", VA = "0x1919924")]
		public PlayStation4MacUSBProfile()
		{
		}
	}
	[Token(Token = "0x200081C")]
	[AutoDiscover]
	public class PlayStation4Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320C")]
		[Address(RVA = "0x191A8DC", Offset = "0x191A8DC", VA = "0x191A8DC")]
		public PlayStation4Profile()
		{
		}
	}
	[Token(Token = "0x200081D")]
	[AutoDiscover]
	public class PlayStation4WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320D")]
		[Address(RVA = "0x191B6B0", Offset = "0x191B6B0", VA = "0x191B6B0")]
		public PlayStation4WinProfile()
		{
		}
	}
	[Token(Token = "0x200081E")]
	[AutoDiscover]
	public class PlayStationVitaPSMProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320E")]
		[Address(RVA = "0x191C698", Offset = "0x191C698", VA = "0x191C698")]
		public PlayStationVitaPSMProfile()
		{
		}
	}
	[Token(Token = "0x200081F")]
	[AutoDiscover]
	public class SamsungGP20AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600320F")]
		[Address(RVA = "0x1895AE8", Offset = "0x1895AE8", VA = "0x1895AE8")]
		public SamsungGP20AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000820")]
	[AutoDiscover]
	public class SpeedlinkStrikeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003210")]
		[Address(RVA = "0x187169C", Offset = "0x187169C", VA = "0x187169C")]
		public SpeedlinkStrikeMacProfile()
		{
		}
	}
	[Token(Token = "0x2000821")]
	[AutoDiscover]
	public class SpeedlinkStrikeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003211")]
		[Address(RVA = "0x18724F4", Offset = "0x18724F4", VA = "0x18724F4")]
		public SpeedlinkStrikeWinProfile()
		{
		}
	}
	[Token(Token = "0x2000822")]
	[AutoDiscover]
	public class SteelSeriesFreeLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003212")]
		[Address(RVA = "0x1877B58", Offset = "0x1877B58", VA = "0x1877B58")]
		public SteelSeriesFreeLinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000823")]
	[AutoDiscover]
	public class SteelSeriesFreeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003213")]
		[Address(RVA = "0x1878784", Offset = "0x1878784", VA = "0x1878784")]
		public SteelSeriesFreeMacProfile()
		{
		}
	}
	[Token(Token = "0x2000824")]
	[AutoDiscover]
	public class SteelSeriesFreeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003214")]
		[Address(RVA = "0x1879650", Offset = "0x1879650", VA = "0x1879650")]
		public SteelSeriesFreeWinProfile()
		{
		}
	}
	[Token(Token = "0x2000825")]
	[AutoDiscover]
	public class ValveStreamingWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003215")]
		[Address(RVA = "0x19DDC10", Offset = "0x19DDC10", VA = "0x19DDC10")]
		public ValveStreamingWinProfile()
		{
		}
	}
	[Token(Token = "0x2000826")]
	[AutoDiscover]
	public class Xbox360AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003216")]
		[Address(RVA = "0x19EE248", Offset = "0x19EE248", VA = "0x19EE248")]
		public Xbox360AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000827")]
	[AutoDiscover]
	public class Xbox360LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003217")]
		[Address(RVA = "0x19EF0C8", Offset = "0x19EF0C8", VA = "0x19EF0C8")]
		public Xbox360LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000828")]
	[AutoDiscover]
	public class Xbox360MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003218")]
		[Address(RVA = "0x19F022C", Offset = "0x19F022C", VA = "0x19F022C")]
		public Xbox360MacProfile()
		{
		}
	}
	[Token(Token = "0x2000829")]
	[AutoDiscover]
	public class Xbox360WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003219")]
		[Address(RVA = "0x17535E8", Offset = "0x17535E8", VA = "0x17535E8")]
		public Xbox360WinProfile()
		{
		}
	}
	[Token(Token = "0x200082A")]
	[AutoDiscover]
	public class XboxOneMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600321A")]
		[Address(RVA = "0x17549E0", Offset = "0x17549E0", VA = "0x17549E0")]
		public XboxOneMacProfile()
		{
		}
	}
	[Token(Token = "0x200082B")]
	[AutoDiscover]
	public class XboxOneProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600321B")]
		[Address(RVA = "0x175585C", Offset = "0x175585C", VA = "0x175585C")]
		public XboxOneProfile()
		{
		}
	}
	[Token(Token = "0x200082C")]
	[AutoDiscover]
	public class XboxOneWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600321C")]
		[Address(RVA = "0x1756774", Offset = "0x1756774", VA = "0x1756774")]
		public XboxOneWinProfile()
		{
		}
	}
	[Token(Token = "0x200082D")]
	public class UnityInputDevice : InputDevice
	{
		[Token(Token = "0x400265A")]
		public const int MaxDevices = 10;

		[Token(Token = "0x400265B")]
		public const int MaxButtons = 20;

		[Token(Token = "0x400265C")]
		public const int MaxAnalogs = 20;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF4C", Offset = "0x8FBF4C")]
		private int <JoystickId>k__BackingField;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF5C", Offset = "0x8FBF5C")]
		private UnityInputDeviceProfile <Profile>k__BackingField;

		[Token(Token = "0x170006A1")]
		internal int JoystickId
		{
			[Token(Token = "0x600321D")]
			[Address(RVA = "0x15DC2E4", Offset = "0x15DC2E4", VA = "0x15DC2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B7F0", Offset = "0x90B7F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600321E")]
			[Address(RVA = "0x15DC2EC", Offset = "0x15DC2EC", VA = "0x15DC2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B800", Offset = "0x90B800")]
			private set
			{
			}
		}

		[Token(Token = "0x170006A2")]
		public UnityInputDeviceProfile Profile
		{
			[Token(Token = "0x600321F")]
			[Address(RVA = "0x15DC2F4", Offset = "0x15DC2F4", VA = "0x15DC2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B810", Offset = "0x90B810")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003220")]
			[Address(RVA = "0x15DC2FC", Offset = "0x15DC2FC", VA = "0x15DC2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B820", Offset = "0x90B820")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		public override bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x6003227")]
			[Address(RVA = "0x15DCA38", Offset = "0x15DCA38", VA = "0x15DCA38", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A4")]
		public override bool IsKnown
		{
			[Token(Token = "0x6003228")]
			[Address(RVA = "0x15DCB90", Offset = "0x15DCB90", VA = "0x15DCB90", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003221")]
		[Address(RVA = "0x15DC304", Offset = "0x15DC304", VA = "0x15DC304")]
		public UnityInputDevice(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x6003222")]
		[Address(RVA = "0x15DC5B0", Offset = "0x15DC5B0", VA = "0x15DC5B0")]
		public UnityInputDevice(UnityInputDeviceProfile profile)
		{
		}

		[Token(Token = "0x6003223")]
		[Address(RVA = "0x15DC398", Offset = "0x15DC398", VA = "0x15DC398")]
		private void Initialize(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x6003224")]
		[Address(RVA = "0x15DC678", Offset = "0x15DC678", VA = "0x15DC678", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003225")]
		[Address(RVA = "0x15DC97C", Offset = "0x15DC97C", VA = "0x15DC97C")]
		private float Combine(float? value1, float value2)
		{
			return default(float);
		}

		[Token(Token = "0x6003226")]
		[Address(RVA = "0x15DCA14", Offset = "0x15DCA14", VA = "0x15DCA14")]
		public bool IsConfiguredWith(UnityInputDeviceProfile deviceProfile, int joystickId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200082E")]
	public class UnityInputDeviceManager : InputDeviceManager
	{
		[Token(Token = "0x200082F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F091C", Offset = "0x8F091C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string unityJoystickName;

			[Token(Token = "0x6003234")]
			[Address(RVA = "0x1596B78", Offset = "0x1596B78", VA = "0x1596B78")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003235")]
			[Address(RVA = "0x1596B80", Offset = "0x1596B80", VA = "0x1596B80")]
			internal bool <DetectAttachedJoystickDevice>b__0(UnityInputDeviceProfile config)
			{
				return default(bool);
			}

			[Token(Token = "0x6003236")]
			[Address(RVA = "0x1596BA4", Offset = "0x1596BA4", VA = "0x1596BA4")]
			internal bool <DetectAttachedJoystickDevice>b__1(UnityInputDeviceProfile config)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deviceRefreshTimer;

		[Token(Token = "0x4002660")]
		private const float deviceRefreshInterval = 1f;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UnityInputDeviceProfile> deviceProfiles;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool keyboardDevicesAttached;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string joystickHash;

		[Token(Token = "0x170006A5")]
		private static string JoystickHash
		{
			[Token(Token = "0x6003233")]
			[Address(RVA = "0x15DCF24", Offset = "0x15DCF24", VA = "0x15DCF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003229")]
		[Address(RVA = "0x15DCBB0", Offset = "0x15DCBB0", VA = "0x15DCBB0")]
		public UnityInputDeviceManager()
		{
		}

		[Token(Token = "0x600322A")]
		[Address(RVA = "0x15DCE68", Offset = "0x15DCE68", VA = "0x15DCE68", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x600322B")]
		[Address(RVA = "0x15DCE28", Offset = "0x15DCE28", VA = "0x15DCE28")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x600322C")]
		[Address(RVA = "0x15DD400", Offset = "0x15DD400", VA = "0x15DD400")]
		private void AttachDevice(UnityInputDevice device)
		{
		}

		[Token(Token = "0x600322D")]
		[Address(RVA = "0x15DCFD8", Offset = "0x15DCFD8", VA = "0x15DCFD8")]
		private void AttachKeyboardDevices()
		{
		}

		[Token(Token = "0x600322E")]
		[Address(RVA = "0x15DD4DC", Offset = "0x15DD4DC", VA = "0x15DD4DC")]
		private void AttachKeyboardDeviceWithConfig(UnityInputDeviceProfile config)
		{
		}

		[Token(Token = "0x600322F")]
		[Address(RVA = "0x15DD0C4", Offset = "0x15DD0C4", VA = "0x15DD0C4")]
		private void DetectAttachedJoystickDevices()
		{
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x15DD55C", Offset = "0x15DD55C", VA = "0x15DD55C")]
		private void DetectAttachedJoystickDevice(int unityJoystickId, string unityJoystickName)
		{
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x15DD1FC", Offset = "0x15DD1FC", VA = "0x15DD1FC")]
		private void DetectDetachedJoystickDevices()
		{
		}

		[Token(Token = "0x6003232")]
		[Address(RVA = "0x15DCC68", Offset = "0x15DCC68", VA = "0x15DCC68")]
		private void AutoDiscoverDeviceProfiles()
		{
		}
	}
	[Token(Token = "0x2000830")]
	public sealed class AutoDiscover : Attribute
	{
		[Token(Token = "0x6003237")]
		[Address(RVA = "0x1AA8830", Offset = "0x1AA8830", VA = "0x1AA8830")]
		public AutoDiscover()
		{
		}
	}
	[Token(Token = "0x2000831")]
	public class UnityInputDeviceProfile
	{
		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF6C", Offset = "0x8FBF6C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF7C", Offset = "0x8FBF7C")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF8C", Offset = "0x8FBF8C")]
		private InputControlMapping[] <AnalogMappings>k__BackingField;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBF9C", Offset = "0x8FBF9C")]
		private InputControlMapping[] <ButtonMappings>k__BackingField;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string[] SupportedPlatforms;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string[] JoystickNames;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string[] JoystickRegex;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string LastResortRegex;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBFAC", Offset = "0x8FBFAC")]
		private VersionInfo <MinUnityVersion>k__BackingField;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBFBC", Offset = "0x8FBFBC")]
		private VersionInfo <MaxUnityVersion>k__BackingField;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<Type> hideList;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float sensitivity;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lowerDeadZone;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float upperDeadZone;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static InputControlSource Button0;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static InputControlSource Button1;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static InputControlSource Button2;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static InputControlSource Button3;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static InputControlSource Button4;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static InputControlSource Button5;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static InputControlSource Button6;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static InputControlSource Button7;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static InputControlSource Button8;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static InputControlSource Button9;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static InputControlSource Button10;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static InputControlSource Button11;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static InputControlSource Button12;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected static InputControlSource Button13;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected static InputControlSource Button14;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected static InputControlSource Button15;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected static InputControlSource Button16;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected static InputControlSource Button17;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected static InputControlSource Button18;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected static InputControlSource Button19;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected static InputControlSource Analog0;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected static InputControlSource Analog1;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected static InputControlSource Analog2;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected static InputControlSource Analog3;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected static InputControlSource Analog4;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected static InputControlSource Analog5;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected static InputControlSource Analog6;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected static InputControlSource Analog7;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected static InputControlSource Analog8;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected static InputControlSource Analog9;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected static InputControlSource Analog10;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected static InputControlSource Analog11;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected static InputControlSource Analog12;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected static InputControlSource Analog13;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected static InputControlSource Analog14;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected static InputControlSource Analog15;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected static InputControlSource Analog16;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected static InputControlSource Analog17;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected static InputControlSource Analog18;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected static InputControlSource Analog19;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected static InputControlSource MouseButton0;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected static InputControlSource MouseButton1;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected static InputControlSource MouseButton2;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected static InputControlSource MouseXAxis;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected static InputControlSource MouseYAxis;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected static InputControlSource MouseScrollWheel;

		[Token(Token = "0x170006A6")]
		public string Name
		{
			[Token(Token = "0x6003238")]
			[Address(RVA = "0x15DE580", Offset = "0x15DE580", VA = "0x15DE580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B830", Offset = "0x90B830")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003239")]
			[Address(RVA = "0x15DE588", Offset = "0x15DE588", VA = "0x15DE588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B840", Offset = "0x90B840")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A7")]
		public string Meta
		{
			[Token(Token = "0x600323A")]
			[Address(RVA = "0x15DE590", Offset = "0x15DE590", VA = "0x15DE590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B850", Offset = "0x90B850")]
			get
			{
				return null;
			}
			[Token(Token = "0x600323B")]
			[Address(RVA = "0x15DE598", Offset = "0x15DE598", VA = "0x15DE598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B860", Offset = "0x90B860")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A8")]
		public InputControlMapping[] AnalogMappings
		{
			[Token(Token = "0x600323C")]
			[Address(RVA = "0x15DE5A0", Offset = "0x15DE5A0", VA = "0x15DE5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B870", Offset = "0x90B870")]
			get
			{
				return null;
			}
			[Token(Token = "0x600323D")]
			[Address(RVA = "0x15DE5A8", Offset = "0x15DE5A8", VA = "0x15DE5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B880", Offset = "0x90B880")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A9")]
		public InputControlMapping[] ButtonMappings
		{
			[Token(Token = "0x600323E")]
			[Address(RVA = "0x15DE5B0", Offset = "0x15DE5B0", VA = "0x15DE5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B890", Offset = "0x90B890")]
			get
			{
				return null;
			}
			[Token(Token = "0x600323F")]
			[Address(RVA = "0x15DE5B8", Offset = "0x15DE5B8", VA = "0x15DE5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8A0", Offset = "0x90B8A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AA")]
		public VersionInfo MinUnityVersion
		{
			[Token(Token = "0x6003240")]
			[Address(RVA = "0x15DE5C0", Offset = "0x15DE5C0", VA = "0x15DE5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8B0", Offset = "0x90B8B0")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x6003241")]
			[Address(RVA = "0x15DE5CC", Offset = "0x15DE5CC", VA = "0x15DE5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8C0", Offset = "0x90B8C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AB")]
		public VersionInfo MaxUnityVersion
		{
			[Token(Token = "0x6003242")]
			[Address(RVA = "0x15DE5D4", Offset = "0x15DE5D4", VA = "0x15DE5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8D0", Offset = "0x90B8D0")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x6003243")]
			[Address(RVA = "0x15DE5E0", Offset = "0x15DE5E0", VA = "0x15DE5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8E0", Offset = "0x90B8E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AC")]
		public float Sensitivity
		{
			[Token(Token = "0x6003245")]
			[Address(RVA = "0x15DE714", Offset = "0x15DE714", VA = "0x15DE714")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003246")]
			[Address(RVA = "0x15DE71C", Offset = "0x15DE71C", VA = "0x15DE71C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AD")]
		public float LowerDeadZone
		{
			[Token(Token = "0x6003247")]
			[Address(RVA = "0x15DE744", Offset = "0x15DE744", VA = "0x15DE744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003248")]
			[Address(RVA = "0x15DE74C", Offset = "0x15DE74C", VA = "0x15DE74C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AE")]
		public float UpperDeadZone
		{
			[Token(Token = "0x6003249")]
			[Address(RVA = "0x15DE774", Offset = "0x15DE774", VA = "0x15DE774")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600324A")]
			[Address(RVA = "0x15DE77C", Offset = "0x15DE77C", VA = "0x15DE77C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006AF")]
		public bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x600324B")]
			[Address(RVA = "0x15DCA50", Offset = "0x15DCA50", VA = "0x15DCA50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B0")]
		public bool IsSupportedOnThisVersionOfUnity
		{
			[Token(Token = "0x600324C")]
			[Address(RVA = "0x15DE7A4", Offset = "0x15DE7A4", VA = "0x15DE7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B1")]
		public bool IsJoystick
		{
			[Token(Token = "0x600324D")]
			[Address(RVA = "0x15DE80C", Offset = "0x15DE80C", VA = "0x15DE80C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B2")]
		public bool IsNotJoystick
		{
			[Token(Token = "0x600324E")]
			[Address(RVA = "0x15DD49C", Offset = "0x15DD49C", VA = "0x15DD49C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B3")]
		public bool IsHidden
		{
			[Token(Token = "0x6003253")]
			[Address(RVA = "0x15DE4A4", Offset = "0x15DE4A4", VA = "0x15DE4A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B4")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x6003254")]
			[Address(RVA = "0x15DEB14", Offset = "0x15DEB14", VA = "0x15DEB14", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006B5")]
		public int AnalogCount
		{
			[Token(Token = "0x6003255")]
			[Address(RVA = "0x15DC640", Offset = "0x15DC640", VA = "0x15DC640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B6")]
		public int ButtonCount
		{
			[Token(Token = "0x6003256")]
			[Address(RVA = "0x15DC65C", Offset = "0x15DC65C", VA = "0x15DC65C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003244")]
		[Address(RVA = "0x15DE5E8", Offset = "0x15DE5E8", VA = "0x15DE5E8")]
		public UnityInputDeviceProfile()
		{
		}

		[Token(Token = "0x600324F")]
		[Address(RVA = "0x15DE84C", Offset = "0x15DE84C", VA = "0x15DE84C")]
		public bool HasJoystickName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003250")]
		[Address(RVA = "0x15DE9F4", Offset = "0x15DE9F4", VA = "0x15DE9F4")]
		public bool HasLastResortRegex(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003251")]
		[Address(RVA = "0x15DE540", Offset = "0x15DE540", VA = "0x15DE540")]
		public bool HasJoystickOrRegexName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003252")]
		[Address(RVA = "0x15DEA88", Offset = "0x15DEA88", VA = "0x15DEA88")]
		public static void Hide(Type type)
		{
		}

		[Token(Token = "0x6003257")]
		[Address(RVA = "0x15DEB1C", Offset = "0x15DEB1C", VA = "0x15DEB1C")]
		protected static InputControlSource Button(int index)
		{
			return null;
		}

		[Token(Token = "0x6003258")]
		[Address(RVA = "0x15DEB80", Offset = "0x15DEB80", VA = "0x15DEB80")]
		protected static InputControlSource Analog(int index)
		{
			return null;
		}

		[Token(Token = "0x6003259")]
		[Address(RVA = "0x15DEBE4", Offset = "0x15DEBE4", VA = "0x15DEBE4")]
		protected static InputControlSource KeyCodeButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x600325A")]
		[Address(RVA = "0x15DEC84", Offset = "0x15DEC84", VA = "0x15DEC84")]
		protected static InputControlSource KeyCodeComboButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x600325B")]
		[Address(RVA = "0x15DED24", Offset = "0x15DED24", VA = "0x15DED24")]
		protected static InputControlSource KeyCodeAxis(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
			return null;
		}
	}
	[Token(Token = "0x2000832")]
	public class UnityInputDeviceProfileList : ScriptableObject
	{
		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] Profiles;

		[Token(Token = "0x600325D")]
		[Address(RVA = "0x15DF588", Offset = "0x15DF588", VA = "0x15DF588")]
		public UnityInputDeviceProfileList()
		{
		}
	}
	[Token(Token = "0x2000833")]
	public class UnityUnknownDeviceProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x170006B7")]
		public override bool IsKnown
		{
			[Token(Token = "0x6003260")]
			[Address(RVA = "0x15E1DAC", Offset = "0x15E1DAC", VA = "0x15E1DAC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600325F")]
		[Address(RVA = "0x15DE008", Offset = "0x15DE008", VA = "0x15DE008")]
		public UnityUnknownDeviceProfile(string joystickName)
		{
		}
	}
	[Token(Token = "0x2000834")]
	public class SingletonMonoBehavior<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FBFCC", Offset = "0x8FBFCC")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x170006B8")]
		public static T Instance
		{
			[Token(Token = "0x6003261")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B8F0", Offset = "0x90B8F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003262")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B900", Offset = "0x90B900")]
			private set
			{
			}
		}

		[Token(Token = "0x6003263")]
		protected void SetSingletonInstance()
		{
		}

		[Token(Token = "0x6003264")]
		public SingletonMonoBehavior()
		{
		}
	}
	[Token(Token = "0x2000835")]
	public static class Utility
	{
		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] circleVertexList;

		[Token(Token = "0x6003266")]
		[Address(RVA = "0x19DB2C0", Offset = "0x19DB2C0", VA = "0x19DB2C0")]
		public static void DrawCircleGizmo(Vector2 center, float radius)
		{
		}

		[Token(Token = "0x6003267")]
		[Address(RVA = "0x19DB424", Offset = "0x19DB424", VA = "0x19DB424")]
		public static void DrawCircleGizmo(Vector2 center, float radius, Color color)
		{
		}

		[Token(Token = "0x6003268")]
		[Address(RVA = "0x19DB4DC", Offset = "0x19DB4DC", VA = "0x19DB4DC")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x6003269")]
		[Address(RVA = "0x19DB650", Offset = "0x19DB650", VA = "0x19DB650")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x600326A")]
		[Address(RVA = "0x19DB710", Offset = "0x19DB710", VA = "0x19DB710")]
		public static void DrawRectGizmo(Rect rect)
		{
		}

		[Token(Token = "0x600326B")]
		[Address(RVA = "0x19DB850", Offset = "0x19DB850", VA = "0x19DB850")]
		public static void DrawRectGizmo(Rect rect, Color color)
		{
		}

		[Token(Token = "0x600326C")]
		[Address(RVA = "0x19DB910", Offset = "0x19DB910", VA = "0x19DB910")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x600326D")]
		[Address(RVA = "0x19DB9C8", Offset = "0x19DB9C8", VA = "0x19DB9C8")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x19DBA88", Offset = "0x19DBA88", VA = "0x19DBA88")]
		public static bool GameObjectIsCulledOnCurrentCamera(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x19DBAE0", Offset = "0x19DBAE0", VA = "0x19DBAE0")]
		public static Color MoveColorTowards(Color color0, Color color1, float maxDelta)
		{
			return default(Color);
		}

		[Token(Token = "0x6003270")]
		[Address(RVA = "0x19DBBB4", Offset = "0x19DBBB4", VA = "0x19DBBB4")]
		public static float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6003271")]
		[Address(RVA = "0x19DBBFC", Offset = "0x19DBBFC", VA = "0x19DBBFC")]
		public static Vector2 ApplyCircularDeadZone(Vector2 axisVector, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003272")]
		[Address(RVA = "0x19DBC60", Offset = "0x19DBC60", VA = "0x19DBC60")]
		public static Vector2 ApplyCircularDeadZone(float axisX, float axisY, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000836")]
	public struct VersionInfo : IComparable<VersionInfo>
	{
		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Patch;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Build;

		[Token(Token = "0x6003274")]
		[Address(RVA = "0x19E041C", Offset = "0x19E041C", VA = "0x19E041C")]
		public VersionInfo(int major, int minor = 0, int patch = 0, int build = 0)
		{
		}

		[Token(Token = "0x6003275")]
		[Address(RVA = "0x19E0428", Offset = "0x19E0428", VA = "0x19E0428")]
		public static VersionInfo InControlVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x6003276")]
		[Address(RVA = "0x19E043C", Offset = "0x19E043C", VA = "0x19E043C")]
		public static VersionInfo UnityVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x6003277")]
		[Address(RVA = "0x19E05C0", Offset = "0x19E05C0", VA = "0x19E05C0", Slot = "4")]
		public int CompareTo(VersionInfo other)
		{
			return default(int);
		}

		[Token(Token = "0x6003278")]
		[Address(RVA = "0x19E061C", Offset = "0x19E061C", VA = "0x19E061C")]
		public static bool operator ==(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003279")]
		[Address(RVA = "0x19E0650", Offset = "0x19E0650", VA = "0x19E0650")]
		public static bool operator !=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600327A")]
		[Address(RVA = "0x19E0684", Offset = "0x19E0684", VA = "0x19E0684")]
		public static bool operator <=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600327B")]
		[Address(RVA = "0x19E06B8", Offset = "0x19E06B8", VA = "0x19E06B8")]
		public static bool operator >=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600327C")]
		[Address(RVA = "0x19E06EC", Offset = "0x19E06EC", VA = "0x19E06EC")]
		public static bool operator <(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600327D")]
		[Address(RVA = "0x19E071C", Offset = "0x19E071C", VA = "0x19E071C")]
		public static bool operator >(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600327E")]
		[Address(RVA = "0x19E0750", Offset = "0x19E0750", VA = "0x19E0750", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600327F")]
		[Address(RVA = "0x19E09C0", Offset = "0x19E09C0", VA = "0x19E09C0")]
		public string ToShortString()
		{
			return null;
		}

		[Token(Token = "0x6003280")]
		[Address(RVA = "0x19E0C30", Offset = "0x19E0C30", VA = "0x19E0C30", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003281")]
		[Address(RVA = "0x19E0CC8", Offset = "0x19E0CC8", VA = "0x19E0CC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000837")]
	public class TestInputManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F092C", Offset = "0x8F092C")]
		private sealed class <>c
		{
			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InputDevice> <>9__4_1;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<InputDevice> <>9__4_2;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<InputDevice> <>9__4_3;

			[Token(Token = "0x600328E")]
			[Address(RVA = "0x158EEE4", Offset = "0x158EEE4", VA = "0x158EEE4")]
			public <>c()
			{
			}

			[Token(Token = "0x600328F")]
			[Address(RVA = "0x158EEEC", Offset = "0x158EEEC", VA = "0x158EEEC")]
			internal void <OnEnable>b__4_1(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x6003290")]
			[Address(RVA = "0x158EF84", Offset = "0x158EF84", VA = "0x158EF84")]
			internal void <OnEnable>b__4_2(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x6003291")]
			[Address(RVA = "0x158F01C", Offset = "0x158F01C", VA = "0x158F01C")]
			internal void <OnEnable>b__4_3(InputDevice inputDevice)
			{
			}
		}

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font font;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LogMessage> logMessages;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPaused;

		[Token(Token = "0x6003282")]
		[Address(RVA = "0x1883B38", Offset = "0x1883B38", VA = "0x1883B38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003283")]
		[Address(RVA = "0x18840E0", Offset = "0x18840E0", VA = "0x18840E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003284")]
		[Address(RVA = "0x18841C8", Offset = "0x18841C8", VA = "0x18841C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003285")]
		[Address(RVA = "0x18840E4", Offset = "0x18840E4", VA = "0x18840E4")]
		private void CheckForPauseButton()
		{
		}

		[Token(Token = "0x6003286")]
		[Address(RVA = "0x188426C", Offset = "0x188426C", VA = "0x188426C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6003287")]
		[Address(RVA = "0x18842C8", Offset = "0x18842C8", VA = "0x18842C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6003288")]
		[Address(RVA = "0x1884F58", Offset = "0x1884F58", VA = "0x1884F58")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6003289")]
		[Address(RVA = "0x1883E5C", Offset = "0x1883E5C", VA = "0x1883E5C")]
		private void TestInputMappings()
		{
		}

		[Token(Token = "0x600328A")]
		[Address(RVA = "0x188500C", Offset = "0x188500C", VA = "0x188500C")]
		private void TestInputMapping(InputControlMapping.Range sourceRange, InputControlMapping.Range targetRange, bool invert, float expectA, float expectB, float expectC)
		{
		}

		[Token(Token = "0x600328B")]
		[Address(RVA = "0x1885C5C", Offset = "0x1885C5C", VA = "0x1885C5C")]
		public TestInputManager()
		{
		}

		[Token(Token = "0x600328C")]
		[Address(RVA = "0x1885D18", Offset = "0x1885D18", VA = "0x1885D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90B910", Offset = "0x90B910")]
		private void <OnEnable>b__4_0(LogMessage logMessage)
		{
		}
	}
}
namespace MultiplayerExample
{
	[Token(Token = "0x2000839")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerNum;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer cubeRenderer;

		[Token(Token = "0x6003292")]
		[Address(RVA = "0x1662014", Offset = "0x1662014", VA = "0x1662014")]
		private void Start()
		{
		}

		[Token(Token = "0x6003293")]
		[Address(RVA = "0x1662070", Offset = "0x1662070", VA = "0x1662070")]
		private void Update()
		{
		}

		[Token(Token = "0x6003294")]
		[Address(RVA = "0x16621C4", Offset = "0x16621C4", VA = "0x16621C4")]
		private void UpdateCubeWithInputDevice(InControl.InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6003295")]
		[Address(RVA = "0x16625B0", Offset = "0x16625B0", VA = "0x16625B0")]
		public CubeController()
		{
		}
	}
}
namespace InterfaceMovement
{
	[Token(Token = "0x200083A")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button up;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button down;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button left;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button right;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer cubeRenderer;

		[Token(Token = "0x6003296")]
		[Address(RVA = "0x1A24C78", Offset = "0x1A24C78", VA = "0x1A24C78")]
		private void Start()
		{
		}

		[Token(Token = "0x6003297")]
		[Address(RVA = "0x1A24CD4", Offset = "0x1A24CD4", VA = "0x1A24CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6003298")]
		[Address(RVA = "0x1A24E30", Offset = "0x1A24E30", VA = "0x1A24E30")]
		public Button()
		{
		}
	}
	[Token(Token = "0x200083B")]
	public class ButtonFocus : MonoBehaviour
	{
		[Token(Token = "0x6003299")]
		[Address(RVA = "0x1A25C4C", Offset = "0x1A25C4C", VA = "0x1A25C4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600329A")]
		[Address(RVA = "0x1A25D78", Offset = "0x1A25D78", VA = "0x1A25D78")]
		public ButtonFocus()
		{
		}
	}
	[Token(Token = "0x200083C")]
	public class ButtonManager : MonoBehaviour
	{
		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button focusedButton;

		[Token(Token = "0x600329B")]
		[Address(RVA = "0x1A25D80", Offset = "0x1A25D80", VA = "0x1A25D80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600329C")]
		[Address(RVA = "0x1A25DEC", Offset = "0x1A25DEC", VA = "0x1A25DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600329D")]
		[Address(RVA = "0x1A25F40", Offset = "0x1A25F40", VA = "0x1A25F40")]
		private void MoveFocusTo(Button newFocusedButton)
		{
		}

		[Token(Token = "0x600329E")]
		[Address(RVA = "0x1A25FD8", Offset = "0x1A25FD8", VA = "0x1A25FD8")]
		public ButtonManager()
		{
		}
	}
}
namespace GyroExample
{
	[Token(Token = "0x200083D")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x200083E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F093C", Offset = "0x8F093C")]
		private sealed class <CalibrateGyro>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170006B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A6")]
				[Address(RVA = "0x15E8824", Offset = "0x15E8824", VA = "0x15E8824", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A8")]
				[Address(RVA = "0x15E886C", Offset = "0x15E886C", VA = "0x15E886C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A3")]
			[Address(RVA = "0x15E874C", Offset = "0x15E874C", VA = "0x15E874C")]
			[DebuggerHidden]
			public <CalibrateGyro>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60032A4")]
			[Address(RVA = "0x15E8778", Offset = "0x15E8778", VA = "0x15E8778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0x15E877C", Offset = "0x15E877C", VA = "0x15E877C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0x15E882C", Offset = "0x15E882C", VA = "0x15E882C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600329F")]
		[Address(RVA = "0x1661D64", Offset = "0x1661D64", VA = "0x1661D64")]
		private void Start()
		{
		}

		[Token(Token = "0x60032A0")]
		[Address(RVA = "0x1661D90", Offset = "0x1661D90", VA = "0x1661D90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90B920", Offset = "0x90B920")]
		private IEnumerator CalibrateGyro()
		{
			return null;
		}

		[Token(Token = "0x60032A1")]
		[Address(RVA = "0x1661DEC", Offset = "0x1661DEC", VA = "0x1661DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60032A2")]
		[Address(RVA = "0x166200C", Offset = "0x166200C", VA = "0x166200C")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x200083F")]
	public class GyroProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60032A9")]
		[Address(RVA = "0x193D854", Offset = "0x193D854", VA = "0x193D854")]
		public GyroProfile()
		{
		}
	}
}
namespace CustomProfileExample
{
	[Token(Token = "0x2000840")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 targetPosition;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer cubeRenderer;

		[Token(Token = "0x60032AA")]
		[Address(RVA = "0x1661738", Offset = "0x1661738", VA = "0x1661738")]
		private void Start()
		{
		}

		[Token(Token = "0x60032AB")]
		[Address(RVA = "0x16617BC", Offset = "0x16617BC", VA = "0x16617BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60032AC")]
		[Address(RVA = "0x1661B74", Offset = "0x1661B74", VA = "0x1661B74")]
		private Color GetColorFromActionButtons(InControl.InputDevice inputDevice)
		{
			return default(Color);
		}

		[Token(Token = "0x60032AD")]
		[Address(RVA = "0x1661D5C", Offset = "0x1661D5C", VA = "0x1661D5C")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x2000841")]
	public class KeyboardAndMouseProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60032AE")]
		[Address(RVA = "0x18156B4", Offset = "0x18156B4", VA = "0x18156B4")]
		public KeyboardAndMouseProfile()
		{
		}
	}
}
namespace BasicExample
{
	[Token(Token = "0x2000842")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x60032AF")]
		[Address(RVA = "0x166158C", Offset = "0x166158C", VA = "0x166158C")]
		private void Update()
		{
		}

		[Token(Token = "0x60032B0")]
		[Address(RVA = "0x1661730", Offset = "0x1661730", VA = "0x1661730")]
		public CubeController()
		{
		}
	}
}
namespace FluffyUnderware.DevTools
{
	[Token(Token = "0x2000843")]
	public class InspectorNote : MonoBehaviour
	{
		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8FBFDC", Offset = "0x8FBFDC")]
		[SerializeField]
		private string m_Note;

		[Token(Token = "0x60032B1")]
		[Address(RVA = "0x16D1578", Offset = "0x16D1578", VA = "0x16D1578")]
		public InspectorNote()
		{
		}
	}
}
namespace FindPrefabsWithScriptInternal
{
	[Token(Token = "0x2000844")]
	public class NotUsedInPrefabs : MonoBehaviour
	{
		[Token(Token = "0x60032B2")]
		[Address(RVA = "0x19B97A0", Offset = "0x19B97A0", VA = "0x19B97A0")]
		public NotUsedInPrefabs()
		{
		}
	}
	[Token(Token = "0x2000845")]
	public class ScriptA : MonoBehaviour
	{
		[Token(Token = "0x60032B3")]
		[Address(RVA = "0x15B9290", Offset = "0x15B9290", VA = "0x15B9290")]
		public ScriptA()
		{
		}
	}
	[Token(Token = "0x2000846")]
	public class ScriptB : MonoBehaviour
	{
		[Token(Token = "0x60032B4")]
		[Address(RVA = "0x15B9298", Offset = "0x15B9298", VA = "0x15B9298")]
		public ScriptB()
		{
		}
	}
}
namespace SignedDistanceFields
{
	[Token(Token = "0x2000847")]
	public struct SDFCatList
	{
		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int channel;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<SDFShape> shapes;

		[Token(Token = "0x60032B5")]
		[Address(RVA = "0x188E8C0", Offset = "0x188E8C0", VA = "0x188E8C0")]
		public SDFCatList(int channel)
		{
		}

		[Token(Token = "0x60032B6")]
		[Address(RVA = "0x188E948", Offset = "0x188E948", VA = "0x188E948")]
		public void Clear()
		{
		}

		[Token(Token = "0x60032B7")]
		[Address(RVA = "0x188E99C", Offset = "0x188E99C", VA = "0x188E99C")]
		public void ResetShapeGPUStatus()
		{
		}
	}
}
namespace SFCUtils
{
	[Token(Token = "0x2000848")]
	public static class NumberUtils
	{
		[Token(Token = "0x60032B8")]
		[Address(RVA = "0x19B97A8", Offset = "0x19B97A8", VA = "0x19B97A8")]
		public static bool Is(this float input, float test, float tolerance = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B9")]
		[Address(RVA = "0x19B97CC", Offset = "0x19B97CC", VA = "0x19B97CC")]
		public static bool IsNot(this float input, float test, float tolerance = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BA")]
		[Address(RVA = "0x19B97F0", Offset = "0x19B97F0", VA = "0x19B97F0")]
		public static bool Between(this float input, float min, float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BB")]
		[Address(RVA = "0x19B9808", Offset = "0x19B9808", VA = "0x19B9808")]
		public static bool NotBetween(this float input, float min, float max)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BC")]
		[Address(RVA = "0x19B9820", Offset = "0x19B9820", VA = "0x19B9820")]
		public static bool Between(this int input, int min, int max)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BD")]
		[Address(RVA = "0x19B9838", Offset = "0x19B9838", VA = "0x19B9838")]
		public static bool NotBetween(this int input, int min, int max)
		{
			return default(bool);
		}
	}
}
namespace Utils
{
	[Token(Token = "0x2000849")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F095C", Offset = "0x8F095C")]
	public class BuildingVisualiser : MonoBehaviour
	{
		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8FC01C", Offset = "0x8FC01C")]
		public Color[] visualiserColours;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VisualiserType visualiseWindows;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VisualiserType visualiseConnections;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VisualiserType visualiseSignDirection;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VisualiserType visualiseSignCorners;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VisualiserType visualiseSignWindows;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VisualiserType visualiseSignReachability;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VisualiserType visualiseBlockers;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LabelVisualiserType visualiseLabels;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC054", Offset = "0x8FC054")]
		public float visualNormalLength;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Building _building;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CityPiece _cityPiece;

		[Token(Token = "0x60032BE")]
		[Address(RVA = "0x1A22B50", Offset = "0x1A22B50", VA = "0x1A22B50")]
		private void InitReferences()
		{
		}

		[Token(Token = "0x60032BF")]
		[Address(RVA = "0x1A22C70", Offset = "0x1A22C70", VA = "0x1A22C70")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60032C0")]
		[Address(RVA = "0x1A22D7C", Offset = "0x1A22D7C", VA = "0x1A22D7C")]
		private void VisualiseWindows(CityStructure cityStructure)
		{
		}

		[Token(Token = "0x60032C1")]
		[Address(RVA = "0x1A23BBC", Offset = "0x1A23BBC", VA = "0x1A23BBC")]
		private List<BlockMetadata> GetAllWindowBlockLocations(CityStructure cityStructure)
		{
			return null;
		}

		[Token(Token = "0x60032C2")]
		[Address(RVA = "0x1A22E54", Offset = "0x1A22E54", VA = "0x1A22E54")]
		private void VisualiseConnections(CityPiece cp)
		{
		}

		[Token(Token = "0x60032C3")]
		[Address(RVA = "0x1A23014", Offset = "0x1A23014", VA = "0x1A23014")]
		private void VisualiseSignPlacement(Spaceport spaceport, CityStructure cityStructure, CityPiece cp)
		{
		}

		[Token(Token = "0x60032C4")]
		[Address(RVA = "0x1A23FD0", Offset = "0x1A23FD0", VA = "0x1A23FD0")]
		private static void VisualiseNearestWindow(BlockMetadata m, Vector3 worldPos)
		{
		}

		[Token(Token = "0x60032C5")]
		[Address(RVA = "0x1A240E8", Offset = "0x1A240E8", VA = "0x1A240E8")]
		private void VisualiseLabel(int val, BlockMetadata m)
		{
		}

		[Token(Token = "0x60032C6")]
		[Address(RVA = "0x1A23E90", Offset = "0x1A23E90", VA = "0x1A23E90")]
		private void DrawVisualiserVoxel(BlockMetadata metadata, int highestPriority, int value, VisualiserType type, Color maxColour)
		{
		}

		[Token(Token = "0x60032C7")]
		[Address(RVA = "0x1A23898", Offset = "0x1A23898", VA = "0x1A23898")]
		private void VisualiseBlockers(CityStructure cityStructure, CityPiece cp)
		{
		}

		[Token(Token = "0x60032C8")]
		[Address(RVA = "0x1A242DC", Offset = "0x1A242DC", VA = "0x1A242DC")]
		private Color GetIndexColour(FastVector3Int normal)
		{
			return default(Color);
		}

		[Token(Token = "0x60032C9")]
		[Address(RVA = "0x1A243EC", Offset = "0x1A243EC", VA = "0x1A243EC")]
		public BuildingVisualiser()
		{
		}
	}
	[Token(Token = "0x200084A")]
	public struct FastBoundsInt
	{
		[Token(Token = "0x200084B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F09E4", Offset = "0x8F09E4")]
		private sealed class <Enumerate>d__8 : IEnumerable<FastVector3Int>, IEnumerable, IEnumerator<FastVector3Int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastVector3Int <>2__current;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public FastBoundsInt <>4__this;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public FastBoundsInt <>3__<>4__this;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <z>5__2;

			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <y>5__3;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <x>5__4;

			[Token(Token = "0x170006BB")]
			private FastVector3Int System.Collections.Generic.IEnumerator<Utils.FastVector3Int>.Current
			{
				[Token(Token = "0x60032D1")]
				[Address(RVA = "0x15F2B18", Offset = "0x15F2B18", VA = "0x15F2B18", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastVector3Int);
				}
			}

			[Token(Token = "0x170006BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D3")]
				[Address(RVA = "0x15F2B68", Offset = "0x15F2B68", VA = "0x15F2B68", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CE")]
			[Address(RVA = "0x15F29F0", Offset = "0x15F29F0", VA = "0x15F29F0")]
			[DebuggerHidden]
			public <Enumerate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60032CF")]
			[Address(RVA = "0x15F2A28", Offset = "0x15F2A28", VA = "0x15F2A28", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D0")]
			[Address(RVA = "0x15F2A2C", Offset = "0x15F2A2C", VA = "0x15F2A2C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D2")]
			[Address(RVA = "0x15F2B28", Offset = "0x15F2B28", VA = "0x15F2B28", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0x15F2BD0", Offset = "0x15F2BD0", VA = "0x15F2BD0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastVector3Int> System.Collections.Generic.IEnumerable<Utils.FastVector3Int>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60032D5")]
			[Address(RVA = "0x15F2CB0", Offset = "0x15F2CB0", VA = "0x15F2CB0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int minX;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minY;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int minZ;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxX;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxY;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxZ;

		[Token(Token = "0x60032CA")]
		[Address(RVA = "0x1750EFC", Offset = "0x1750EFC", VA = "0x1750EFC")]
		public FastBoundsInt(int minX, int minY, int minZ, int maxX, int maxY, int maxZ)
		{
		}

		[Token(Token = "0x60032CB")]
		[Address(RVA = "0x1750F0C", Offset = "0x1750F0C", VA = "0x1750F0C")]
		public bool Contains(int x, int y, int z, FastVector3Int border)
		{
			return default(bool);
		}

		[Token(Token = "0x60032CC")]
		[Address(RVA = "0x1750F7C", Offset = "0x1750F7C", VA = "0x1750F7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BA30", Offset = "0x90BA30")]
		public IEnumerable<FastVector3Int> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x60032CD")]
		[Address(RVA = "0x175100C", Offset = "0x175100C", VA = "0x175100C")]
		public FastVector3Int[] GetCorners()
		{
			return null;
		}
	}
	[Token(Token = "0x200084C")]
	public struct FastVector3Int
	{
		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FastVector3Int left;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static FastVector3Int right;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static FastVector3Int up;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static FastVector3Int down;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static FastVector3Int forward;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static FastVector3Int back;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static FastVector3Int zero;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static FastVector3Int one;

		[Token(Token = "0x60032D6")]
		[Address(RVA = "0x1751154", Offset = "0x1751154", VA = "0x1751154")]
		public FastVector3Int(int x, int y, int z)
		{
		}

		[Token(Token = "0x60032D7")]
		[Address(RVA = "0x1751160", Offset = "0x1751160", VA = "0x1751160")]
		public static FastVector3Int Min(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032D8")]
		[Address(RVA = "0x175118C", Offset = "0x175118C", VA = "0x175118C")]
		public static FastVector3Int Max(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032D9")]
		[Address(RVA = "0x17511B8", Offset = "0x17511B8", VA = "0x17511B8")]
		public FastVector3Int Abs()
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032DA")]
		[Address(RVA = "0x17511E0", Offset = "0x17511E0", VA = "0x17511E0")]
		public static FastVector3Int operator +(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032DB")]
		[Address(RVA = "0x17511FC", Offset = "0x17511FC", VA = "0x17511FC")]
		public static FastVector3Int operator -(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032DC")]
		[Address(RVA = "0x1751218", Offset = "0x1751218", VA = "0x1751218")]
		public static bool operator ==(FastVector3Int a, FastVector3Int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DD")]
		[Address(RVA = "0x1751248", Offset = "0x1751248", VA = "0x1751248")]
		public static bool operator !=(FastVector3Int a, FastVector3Int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DE")]
		[Address(RVA = "0x1751278", Offset = "0x1751278", VA = "0x1751278", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DF")]
		[Address(RVA = "0x175133C", Offset = "0x175133C", VA = "0x175133C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60032E0")]
		[Address(RVA = "0x17513A0", Offset = "0x17513A0", VA = "0x17513A0")]
		public bool Matches(int ix, int iy, int iz)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E1")]
		[Address(RVA = "0x173E86C", Offset = "0x173E86C", VA = "0x173E86C")]
		public static FastVector3Int FromVector3(Vector3 vec)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032E2")]
		[Address(RVA = "0x17513D0", Offset = "0x17513D0", VA = "0x17513D0")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200084D")]
	public static class TransformUtils
	{
		[Token(Token = "0x60032E4")]
		[Address(RVA = "0x17920E4", Offset = "0x17920E4", VA = "0x17920E4")]
		public static bool IsInSameDirection(this Transform transform, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E5")]
		[Address(RVA = "0x1792148", Offset = "0x1792148", VA = "0x1792148")]
		public static bool IsInSameDirection(this Transform transform, FastVector3Int direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E6")]
		[Address(RVA = "0x17921D8", Offset = "0x17921D8", VA = "0x17921D8")]
		public static bool IsInSameDirection(this Vector3 check, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E7")]
		[Address(RVA = "0x1792200", Offset = "0x1792200", VA = "0x1792200")]
		public static bool IsInSameDirection(this FastVector3Int check, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200084E")]
	public enum VisualiserType
	{
		[Token(Token = "0x40026E6")]
		Off,
		[Token(Token = "0x40026E7")]
		Wire,
		[Token(Token = "0x40026E8")]
		Solid
	}
	[Token(Token = "0x200084F")]
	public enum LabelVisualiserType
	{
		[Token(Token = "0x40026EA")]
		Off,
		[Token(Token = "0x40026EB")]
		Priority,
		[Token(Token = "0x40026EC")]
		Coords
	}
	[Token(Token = "0x2000850")]
	public static class VoxelUtils
	{
		[Token(Token = "0x2000851")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A14", Offset = "0x8F0A14")]
		private sealed class <BlockLocations>d__10 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x40026F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private BoundsInt structuredBounds;

			[Token(Token = "0x40026F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BoundsInt <>3__structuredBounds;

			[Token(Token = "0x40026F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private BlockerMaterial blockerMaterial;

			[Token(Token = "0x40026F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public BlockerMaterial <>3__blockerMaterial;

			[Token(Token = "0x40026F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private BoundsInt.PositionEnumerator <>7__wrap1;

			[Token(Token = "0x170006BD")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x6003305")]
				[Address(RVA = "0x1FCAB94", Offset = "0x1FCAB94", VA = "0x1FCAB94", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003307")]
				[Address(RVA = "0x1FCABE8", Offset = "0x1FCABE8", VA = "0x1FCABE8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0x1FCA920", Offset = "0x1FCA920", VA = "0x1FCA920")]
			[DebuggerHidden]
			public <BlockLocations>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0x1FCA958", Offset = "0x1FCA958", VA = "0x1FCA958", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003303")]
			[Address(RVA = "0x1FCA9A0", Offset = "0x1FCA9A0", VA = "0x1FCA9A0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003304")]
			[Address(RVA = "0x1FCA988", Offset = "0x1FCA988", VA = "0x1FCA988")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003306")]
			[Address(RVA = "0x1FCABA8", Offset = "0x1FCABA8", VA = "0x1FCABA8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003308")]
			[Address(RVA = "0x1FCAC50", Offset = "0x1FCAC50", VA = "0x1FCAC50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003309")]
			[Address(RVA = "0x1FCAD38", Offset = "0x1FCAD38", VA = "0x1FCAD38", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUIStyle _labelStyle;

		[Token(Token = "0x60032E8")]
		[Address(RVA = "0x19E84B4", Offset = "0x19E84B4", VA = "0x19E84B4")]
		public static Vector3 GetWorldSpaceLocation(int x, int y, int z, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032E9")]
		[Address(RVA = "0x19E8520", Offset = "0x19E8520", VA = "0x19E8520")]
		public static Vector3 GetWorldSpaceLocation(this BlockMetadata metadata, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032EA")]
		[Address(RVA = "0x19E8530", Offset = "0x19E8530", VA = "0x19E8530")]
		public static Vector3 GetWorldSpaceLocation(this FastBlockMetadata metadata, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032EB")]
		[Address(RVA = "0x19E8540", Offset = "0x19E8540", VA = "0x19E8540")]
		public static void DrawLabel(string text, Vector3 pos)
		{
		}

		[Token(Token = "0x60032EC")]
		[Address(RVA = "0x19E86C4", Offset = "0x19E86C4", VA = "0x19E86C4")]
		private static Texture2D MakeTex(Color col)
		{
			return null;
		}

		[Token(Token = "0x60032ED")]
		[Address(RVA = "0x19E8784", Offset = "0x19E8784", VA = "0x19E8784")]
		public static void DrawVoxels(IEnumerable<FastBlockMetadata> voxelMetadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032EE")]
		[Address(RVA = "0x19E8C74", Offset = "0x19E8C74", VA = "0x19E8C74")]
		public static void DrawVoxels(IEnumerable<BlockMetadata> voxelMetadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032EF")]
		[Address(RVA = "0x19E8F9C", Offset = "0x19E8F9C", VA = "0x19E8F9C")]
		public static void DrawVoxel(BlockMetadata metadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032F0")]
		[Address(RVA = "0x19E8AAC", Offset = "0x19E8AAC", VA = "0x19E8AAC")]
		public static void DrawVoxel(FastBlockMetadata metadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032F1")]
		[Address(RVA = "0x19E9164", Offset = "0x19E9164", VA = "0x19E9164")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BB60", Offset = "0x90BB60")]
		public static IEnumerable<FastBlockMetadata> BlockLocations(BoundsInt structuredBounds, BlockerMaterial blockerMaterial = BlockerMaterial.Solid)
		{
			return null;
		}

		[Token(Token = "0x60032F2")]
		[Address(RVA = "0x19E9204", Offset = "0x19E9204", VA = "0x19E9204")]
		public static BoundsInt MakeStructuredBounds(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032F3")]
		[Address(RVA = "0x19E9478", Offset = "0x19E9478", VA = "0x19E9478")]
		public static FastBoundsInt MakeFastStructuredBounds(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032F4")]
		[Address(RVA = "0x19E96EC", Offset = "0x19E96EC", VA = "0x19E96EC")]
		public static BoundsInt MakeStructuredBounds(Bounds worldBounds, BlockMetadata metadata, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032F5")]
		[Address(RVA = "0x19E9380", Offset = "0x19E9380", VA = "0x19E9380")]
		private static BoundsInt MakeStructuredBoundsCentre(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032F6")]
		[Address(RVA = "0x19E9278", Offset = "0x19E9278", VA = "0x19E9278")]
		private static BoundsInt MakeStructuredBoundsCorner(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032F7")]
		[Address(RVA = "0x19E95F4", Offset = "0x19E95F4", VA = "0x19E95F4")]
		private static FastBoundsInt MakeFastStructuredBoundsCentre(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032F8")]
		[Address(RVA = "0x19E94EC", Offset = "0x19E94EC", VA = "0x19E94EC")]
		private static FastBoundsInt MakeFastStructuredBoundsCorner(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032F9")]
		[Address(RVA = "0x19E9900", Offset = "0x19E9900", VA = "0x19E9900")]
		private static BoundsInt ConvertMinMaxToGridBounds(Vector3 worldPosition, Vector3 min, Vector3 max, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032FA")]
		[Address(RVA = "0x19E9B48", Offset = "0x19E9B48", VA = "0x19E9B48")]
		private static FastBoundsInt ConvertMinMaxToFastGridBounds(Vector3 worldPosition, Vector3 min, Vector3 max, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032FB")]
		[Address(RVA = "0x19E9D50", Offset = "0x19E9D50", VA = "0x19E9D50")]
		public static Bounds CalculateRotatedBoundsCorner(Bounds mBounds, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60032FC")]
		[Address(RVA = "0x19E9788", Offset = "0x19E9788", VA = "0x19E9788")]
		public static Bounds CalculateRotatedBoundsCentre(Bounds mBounds, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60032FD")]
		[Address(RVA = "0x19E9F48", Offset = "0x19E9F48", VA = "0x19E9F48")]
		public static void GetAvailableLocations(Building building, IEnumerable<FastBlockMetadata> blockConnectionLocations, ref List<BlockMetadata> availableLocations)
		{
		}

		[Token(Token = "0x60032FE")]
		[Address(RVA = "0x19EA3D8", Offset = "0x19EA3D8", VA = "0x19EA3D8")]
		public static FastBoundsInt GetBoundsForWindow(SpacefolkWindow window)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032FF")]
		[Address(RVA = "0x19E9F18", Offset = "0x19E9F18", VA = "0x19E9F18")]
		private static void TestVector(Quaternion rotation, float x, float y, float z, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6003300")]
		[Address(RVA = "0x19EA538", Offset = "0x19EA538", VA = "0x19EA538")]
		private static void TestVector(Vector3 tp, ref Vector3 min, ref Vector3 max)
		{
		}
	}
}
namespace Folk
{
	[Token(Token = "0x2000852")]
	public enum Handedness
	{
		[Token(Token = "0x40026F7")]
		Right,
		[Token(Token = "0x40026F8")]
		Left,
		[Token(Token = "0x40026F9")]
		Either
	}
	[Token(Token = "0x2000853")]
	public class HeldItems
	{
		[Token(Token = "0x2000854")]
		public enum Holds
		{
			[Token(Token = "0x40026FC")]
			None,
			[Token(Token = "0x40026FD")]
			Right,
			[Token(Token = "0x40026FE")]
			Left,
			[Token(Token = "0x40026FF")]
			Backpack
		}

		[Token(Token = "0x2000855")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A24", Offset = "0x8F0A24")]
		private sealed class <get_All>d__3 : IEnumerable<HoldableItem>, IEnumerable, IEnumerator<HoldableItem>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HoldableItem <>2__current;

			[Token(Token = "0x4002702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HeldItems <>4__this;

			[Token(Token = "0x4002704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<Holds, HoldSlot>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170006C0")]
			private HoldableItem System.Collections.Generic.IEnumerator<HoldableItem>.Current
			{
				[Token(Token = "0x6003326")]
				[Address(RVA = "0x15F6234", Offset = "0x15F6234", VA = "0x15F6234", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003328")]
				[Address(RVA = "0x15F627C", Offset = "0x15F627C", VA = "0x15F627C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003322")]
			[Address(RVA = "0x15F5FAC", Offset = "0x15F5FAC", VA = "0x15F5FAC")]
			[DebuggerHidden]
			public <get_All>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6003323")]
			[Address(RVA = "0x15F5FE4", Offset = "0x15F5FE4", VA = "0x15F5FE4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003324")]
			[Address(RVA = "0x15F6054", Offset = "0x15F6054", VA = "0x15F6054", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003325")]
			[Address(RVA = "0x15F6000", Offset = "0x15F6000", VA = "0x15F6000")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003327")]
			[Address(RVA = "0x15F623C", Offset = "0x15F623C", VA = "0x15F623C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003329")]
			[Address(RVA = "0x15F6284", Offset = "0x15F6284", VA = "0x15F6284", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HoldableItem> System.Collections.Generic.IEnumerable<HoldableItem>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600332A")]
			[Address(RVA = "0x15F6334", Offset = "0x15F6334", VA = "0x15F6334", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Holds, HoldSlot> m_slots;

		[Token(Token = "0x170006BF")]
		public IEnumerable<HoldableItem> All
		{
			[Token(Token = "0x600330A")]
			[Address(RVA = "0x1948E84", Offset = "0x1948E84", VA = "0x1948E84")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BC30", Offset = "0x90BC30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600330B")]
		[Address(RVA = "0x1948EFC", Offset = "0x1948EFC", VA = "0x1948EFC")]
		public bool IsHolding(HoldableItem holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x600330C")]
		[Address(RVA = "0x194923C", Offset = "0x194923C", VA = "0x194923C")]
		public bool IsHoldingAnything()
		{
			return default(bool);
		}

		[Token(Token = "0x600330D")]
		[Address(RVA = "0x1949404", Offset = "0x1949404", VA = "0x1949404")]
		public bool IsHoldingSomethingInEitherHand()
		{
			return default(bool);
		}

		[Token(Token = "0x600330E")]
		[Address(RVA = "0x1949494", Offset = "0x1949494", VA = "0x1949494")]
		public bool CanHoldAnyMore()
		{
			return default(bool);
		}

		[Token(Token = "0x600330F")]
		[Address(RVA = "0x19495F0", Offset = "0x19495F0", VA = "0x19495F0")]
		public void AddBackpack()
		{
		}

		[Token(Token = "0x6003310")]
		[Address(RVA = "0x19496F4", Offset = "0x19496F4", VA = "0x19496F4")]
		public void RemoveBackpack()
		{
		}

		[Token(Token = "0x6003311")]
		public void DropItemsOfType<T>()
		{
		}

		[Token(Token = "0x6003312")]
		public void DropItemsNotOfType<T>()
		{
		}

		[Token(Token = "0x6003313")]
		[Address(RVA = "0x1949784", Offset = "0x1949784", VA = "0x1949784")]
		public void DropRandomItem()
		{
		}

		[Token(Token = "0x6003314")]
		public bool IsHolding<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x6003315")]
		[Address(RVA = "0x19499CC", Offset = "0x19499CC", VA = "0x19499CC")]
		public bool IsHoldingThisScrap(ScrapCoin scrapCoin)
		{
			return default(bool);
		}

		[Token(Token = "0x6003316")]
		[Address(RVA = "0x1949BEC", Offset = "0x1949BEC", VA = "0x1949BEC")]
		public bool TryGetHeldScrap(out ScrapCoin scrapCoin)
		{
			return default(bool);
		}

		[Token(Token = "0x6003317")]
		[Address(RVA = "0x1949D80", Offset = "0x1949D80", VA = "0x1949D80")]
		public void ReleaseHeldItem(Holds hold, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
		}

		[Token(Token = "0x6003318")]
		[Address(RVA = "0x194986C", Offset = "0x194986C", VA = "0x194986C")]
		public void ReleaseHeldItem(HoldableItem item, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
		}

		[Token(Token = "0x6003319")]
		[Address(RVA = "0x1949FA4", Offset = "0x1949FA4", VA = "0x1949FA4")]
		public void ReleaseAllItems()
		{
		}

		[Token(Token = "0x600331A")]
		[Address(RVA = "0x194A0E0", Offset = "0x194A0E0", VA = "0x194A0E0")]
		public void ReleaseInactiveItems(string name)
		{
		}

		[Token(Token = "0x600331B")]
		[Address(RVA = "0x194A334", Offset = "0x194A334", VA = "0x194A334")]
		public Holds GetFreeHold(Handedness handedness, HoldSlotType holdType)
		{
			return default(Holds);
		}

		[Token(Token = "0x600331C")]
		[Address(RVA = "0x194A520", Offset = "0x194A520", VA = "0x194A520")]
		private bool CanUseSlot(HoldSlot slot, HoldSlotType possibleItemType)
		{
			return default(bool);
		}

		[Token(Token = "0x600331D")]
		[Address(RVA = "0x194A504", Offset = "0x194A504", VA = "0x194A504")]
		private Holds GetHoldForHandedness(Handedness handedness)
		{
			return default(Holds);
		}

		[Token(Token = "0x600331E")]
		[Address(RVA = "0x194A54C", Offset = "0x194A54C", VA = "0x194A54C")]
		public bool TryHoldItem(Handedness handedness, HoldableItem itemToHold, out Holds hold)
		{
			return default(bool);
		}

		[Token(Token = "0x600331F")]
		[Address(RVA = "0x194A618", Offset = "0x194A618", VA = "0x194A618")]
		public Holds GetHold(Handedness handedness, HoldableItem itemToHold)
		{
			return default(Holds);
		}

		[Token(Token = "0x6003320")]
		[Address(RVA = "0x194A944", Offset = "0x194A944", VA = "0x194A944")]
		private bool TryHold(Holds hold, HoldableItem itemToHold)
		{
			return default(bool);
		}

		[Token(Token = "0x6003321")]
		[Address(RVA = "0x194AA7C", Offset = "0x194AA7C", VA = "0x194AA7C")]
		public HeldItems()
		{
		}
	}
	[Token(Token = "0x2000856")]
	public class HoldSlot
	{
		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Handedness m_handedness;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC06C", Offset = "0x8FC06C")]
		private HoldSlotType <holdSlotType>k__BackingField;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC07C", Offset = "0x8FC07C")]
		private HoldableItem <item>k__BackingField;

		[Token(Token = "0x170006C2")]
		public HoldSlotType holdSlotType
		{
			[Token(Token = "0x600332B")]
			[Address(RVA = "0x194C82C", Offset = "0x194C82C", VA = "0x194C82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD00", Offset = "0x90BD00")]
			get
			{
				return default(HoldSlotType);
			}
			[Token(Token = "0x600332C")]
			[Address(RVA = "0x194C834", Offset = "0x194C834", VA = "0x194C834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD10", Offset = "0x90BD10")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C3")]
		public HoldableItem item
		{
			[Token(Token = "0x600332D")]
			[Address(RVA = "0x194C83C", Offset = "0x194C83C", VA = "0x194C83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD20", Offset = "0x90BD20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600332E")]
			[Address(RVA = "0x194C844", Offset = "0x194C844", VA = "0x194C844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD30", Offset = "0x90BD30")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C4")]
		public bool hasItem
		{
			[Token(Token = "0x600332F")]
			[Address(RVA = "0x1949398", Offset = "0x1949398", VA = "0x1949398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003330")]
		[Address(RVA = "0x19496BC", Offset = "0x19496BC", VA = "0x19496BC")]
		public HoldSlot(Handedness handedness, HoldSlotType holdSlotType)
		{
		}

		[Token(Token = "0x6003331")]
		public bool GetIfHoldingType<T>(out T output)
		{
			return default(bool);
		}

		[Token(Token = "0x6003332")]
		[Address(RVA = "0x194A9E0", Offset = "0x194A9E0", VA = "0x194A9E0")]
		public void UpdateItem(HoldableItem itemToHold)
		{
		}

		[Token(Token = "0x6003333")]
		public void DropItemOfType<T>()
		{
		}

		[Token(Token = "0x6003334")]
		public void DropItemNotOfType<T>()
		{
		}

		[Token(Token = "0x6003335")]
		[Address(RVA = "0x1949EF0", Offset = "0x1949EF0", VA = "0x1949EF0")]
		public bool ReleaseItem(HoldableItem itemToRelease, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
			return default(bool);
		}

		[Token(Token = "0x6003336")]
		[Address(RVA = "0x1949E18", Offset = "0x1949E18", VA = "0x1949E18")]
		public bool ReleaseHeldItem(bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
			return default(bool);
		}

		[Token(Token = "0x6003337")]
		[Address(RVA = "0x194A224", Offset = "0x194A224", VA = "0x194A224")]
		public void ReleaseInactive(string name)
		{
		}
	}
	[Token(Token = "0x2000857")]
	public enum HoldSlotType
	{
		[Token(Token = "0x4002709")]
		Anything,
		[Token(Token = "0x400270A")]
		Scrap
	}
	[Token(Token = "0x2000858")]
	public class PersonExpressions
	{
		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Person person;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timeBetweenThoughts;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_lastThoughtTime;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Texticle> m_lastThoughts;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Queue<string> m_popUpThoughts;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<string> m_recentThoughts;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_reactionHappySFX;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_reactionSadSFX;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_thoughtHappySFX;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_thoughtNeutralSFX;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_thoughtSadSFX;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_givenStaminaSFX;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_givenSpeedSFX;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_givenSkillSFX;

		[Token(Token = "0x6003338")]
		[Address(RVA = "0x1907CAC", Offset = "0x1907CAC", VA = "0x1907CAC")]
		public PersonExpressions(Person person)
		{
		}

		[Token(Token = "0x6003339")]
		[Address(RVA = "0x1907F0C", Offset = "0x1907F0C", VA = "0x1907F0C")]
		public void CheckForQueuedThoughts()
		{
		}

		[Token(Token = "0x600333A")]
		[Address(RVA = "0x1908284", Offset = "0x1908284", VA = "0x1908284")]
		public void AnnounceLeavingFacility(FacilityCategory fc, FolkAbility ability)
		{
		}

		[Token(Token = "0x600333B")]
		[Address(RVA = "0x19087BC", Offset = "0x19087BC", VA = "0x19087BC")]
		public void Say(string s, CharacterModel.Emotion emotion = CharacterModel.Emotion.Happy)
		{
		}

		[Token(Token = "0x600333C")]
		[Address(RVA = "0x19084DC", Offset = "0x19084DC", VA = "0x19084DC")]
		public void ShowThought(string shortThought, string detailedThought = "", CharacterModel.Emotion emotion = CharacterModel.Emotion.Neutral, [Optional] string sfxId, bool log = false)
		{
		}

		[Token(Token = "0x600333D")]
		[Address(RVA = "0x1908894", Offset = "0x1908894", VA = "0x1908894")]
		private bool IsNewThoughtTheSameAsTheLastThought(string thought)
		{
			return default(bool);
		}

		[Token(Token = "0x600333E")]
		[Address(RVA = "0x190898C", Offset = "0x190898C", VA = "0x190898C")]
		public void PlaySfxForFacility(FacilityCategory category)
		{
		}

		[Token(Token = "0x600333F")]
		[Address(RVA = "0x190887C", Offset = "0x190887C", VA = "0x190887C")]
		private string GetReactionSfxForEmotion(CharacterModel.Emotion emotion)
		{
			return null;
		}

		[Token(Token = "0x6003340")]
		[Address(RVA = "0x1908960", Offset = "0x1908960", VA = "0x1908960")]
		private string GetThoughtSfxForEmotion(CharacterModel.Emotion emotion)
		{
			return null;
		}

		[Token(Token = "0x6003341")]
		[Address(RVA = "0x190838C", Offset = "0x190838C", VA = "0x190838C")]
		private string GetFacilityLeavingThought(FacilityCategory fc, FolkAbility ability)
		{
			return null;
		}

		[Token(Token = "0x6003342")]
		[Address(RVA = "0x190845C", Offset = "0x190845C", VA = "0x190845C")]
		private string GetFacilitySfxForCategory(FacilityCategory category)
		{
			return null;
		}

		[Token(Token = "0x6003343")]
		[Address(RVA = "0x1907FC4", Offset = "0x1907FC4", VA = "0x1907FC4")]
		private void DisplayTexticle(string s, Color col, Texticles.Style style)
		{
		}
	}
	[Token(Token = "0x2000859")]
	public class PersonSleepCycle
	{
		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string personName;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_asleep;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC08C", Offset = "0x8FC08C")]
		private double <m_wakeUpTime>k__BackingField;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double m_bedTime;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_hasStaminaBoost;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double m_standardMaxHoursAwake;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double m_staminaBonusHoursAwake;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double m_sleepInterruptionBoost;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_timeBetweenZzzs;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_lastSleepyZzzs;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool debug;

		[Token(Token = "0x170006C5")]
		public double m_wakeUpTime
		{
			[Token(Token = "0x6003344")]
			[Address(RVA = "0x190E984", Offset = "0x190E984", VA = "0x190E984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD40", Offset = "0x90BD40")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6003345")]
			[Address(RVA = "0x190E98C", Offset = "0x190E98C", VA = "0x190E98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BD50", Offset = "0x90BD50")]
			private set
			{
			}
		}

		[Token(Token = "0x6003346")]
		[Address(RVA = "0x190E994", Offset = "0x190E994", VA = "0x190E994")]
		public void Init(Person person)
		{
		}

		[Token(Token = "0x6003347")]
		[Address(RVA = "0x190EE20", Offset = "0x190EE20", VA = "0x190EE20")]
		public void UpdateSaveData(Person person)
		{
		}

		[Token(Token = "0x6003348")]
		[Address(RVA = "0x190EA84", Offset = "0x190EA84", VA = "0x190EA84")]
		public void WakeUp(WakeUpType wakeUpType = WakeUpType.Natural)
		{
		}

		[Token(Token = "0x6003349")]
		[Address(RVA = "0x190EFF0", Offset = "0x190EFF0", VA = "0x190EFF0")]
		public double GoToSleep()
		{
			return default(double);
		}

		[Token(Token = "0x600334A")]
		[Address(RVA = "0x190F0D8", Offset = "0x190F0D8", VA = "0x190F0D8")]
		public double GetCurrentMaxHoursAwake()
		{
			return default(double);
		}

		[Token(Token = "0x600334B")]
		[Address(RVA = "0x190F0F0", Offset = "0x190F0F0", VA = "0x190F0F0")]
		public bool ShouldDisplayZzz()
		{
			return default(bool);
		}

		[Token(Token = "0x600334C")]
		[Address(RVA = "0x190EE54", Offset = "0x190EE54", VA = "0x190EE54")]
		public void UpdateBedTime(WakeUpType wakeUpType)
		{
		}

		[Token(Token = "0x600334D")]
		[Address(RVA = "0x190F124", Offset = "0x190F124", VA = "0x190F124")]
		public void SetStaminaBoost(bool hasBoost)
		{
		}

		[Token(Token = "0x600334E")]
		[Address(RVA = "0x190F13C", Offset = "0x190F13C", VA = "0x190F13C")]
		public void AdjustWakeTimeForFacilityVisit(double lastActivityStartTime)
		{
		}

		[Token(Token = "0x600334F")]
		[Address(RVA = "0x1907118", Offset = "0x1907118", VA = "0x1907118")]
		public bool WantToSleep()
		{
			return default(bool);
		}

		[Token(Token = "0x6003350")]
		[Address(RVA = "0x190F204", Offset = "0x190F204", VA = "0x190F204")]
		public float NormalisedTimeTillSleep()
		{
			return default(float);
		}

		[Token(Token = "0x6003351")]
		[Address(RVA = "0x190F248", Offset = "0x190F248", VA = "0x190F248")]
		public float HoursTillSleep()
		{
			return default(float);
		}

		[Token(Token = "0x6003352")]
		[Address(RVA = "0x190EAFC", Offset = "0x190EAFC", VA = "0x190EAFC")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x6003353")]
		[Address(RVA = "0x190F2B0", Offset = "0x190F2B0", VA = "0x190F2B0")]
		public PersonSleepCycle()
		{
		}
	}
	[Token(Token = "0x200085A")]
	public enum WakeUpType
	{
		[Token(Token = "0x4002725")]
		Natural,
		[Token(Token = "0x4002726")]
		Boost,
		[Token(Token = "0x4002727")]
		PickedUp,
		[Token(Token = "0x4002728")]
		RocketBoosting
	}
}
namespace Folk.AI
{
	[Token(Token = "0x200085B")]
	public class PersonCanCarryMoreScrap : ConditionTask<Person>
	{
		[Token(Token = "0x6003354")]
		[Address(RVA = "0x1905C88", Offset = "0x1905C88", VA = "0x1905C88", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003355")]
		[Address(RVA = "0x1905CE4", Offset = "0x1905CE4", VA = "0x1905CE4")]
		public PersonCanCarryMoreScrap()
		{
		}
	}
	[Token(Token = "0x200085C")]
	public class PersonHasScrap : ConditionTask<Person>
	{
		[Token(Token = "0x6003356")]
		[Address(RVA = "0x190D064", Offset = "0x190D064", VA = "0x190D064", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003357")]
		[Address(RVA = "0x190D0DC", Offset = "0x190D0DC", VA = "0x190D0DC")]
		public PersonHasScrap()
		{
		}
	}
	[Token(Token = "0x200085D")]
	public class PersonIsCarryingAsteroid : ConditionTask<Person>
	{
		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FolkAbilityGrabAsteroid m_grabber;

		[Token(Token = "0x6003358")]
		[Address(RVA = "0x190D93C", Offset = "0x190D93C", VA = "0x190D93C", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003359")]
		[Address(RVA = "0x190DA78", Offset = "0x190DA78", VA = "0x190DA78")]
		public PersonIsCarryingAsteroid()
		{
		}
	}
	[Token(Token = "0x200085E")]
	public class PersonPrioritisingJob : ConditionTask<Person>
	{
		[Token(Token = "0x600335A")]
		[Address(RVA = "0x190E59C", Offset = "0x190E59C", VA = "0x190E59C", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600335B")]
		[Address(RVA = "0x190E5F8", Offset = "0x190E5F8", VA = "0x190E5F8")]
		public PersonPrioritisingJob()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x200085F")]
	public class JobConstruction : ActionTask<Person>
	{
		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double nextScrapDepositTime;

		[Token(Token = "0x600335C")]
		[Address(RVA = "0x1804E3C", Offset = "0x1804E3C", VA = "0x1804E3C", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600335D")]
		[Address(RVA = "0x1804ED0", Offset = "0x1804ED0", VA = "0x1804ED0", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600335E")]
		[Address(RVA = "0x1805220", Offset = "0x1805220", VA = "0x1805220", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600335F")]
		[Address(RVA = "0x1805288", Offset = "0x1805288", VA = "0x1805288")]
		public JobConstruction()
		{
		}
	}
	[Token(Token = "0x2000860")]
	public class JobScrapDeposit : ActionTask<Person>
	{
		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003360")]
		[Address(RVA = "0x18052D4", Offset = "0x18052D4", VA = "0x18052D4", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003361")]
		[Address(RVA = "0x1805560", Offset = "0x1805560", VA = "0x1805560")]
		public JobScrapDeposit()
		{
		}
	}
	[Token(Token = "0x2000861")]
	public class PersonDoAbility : ActionTask<Person>
	{
		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FolkAbility ability;

		[Token(Token = "0x6003362")]
		[Address(RVA = "0x1905D30", Offset = "0x1905D30", VA = "0x1905D30", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003363")]
		[Address(RVA = "0x1905EBC", Offset = "0x1905EBC", VA = "0x1905EBC", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003364")]
		[Address(RVA = "0x1905F20", Offset = "0x1905F20", VA = "0x1905F20", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003365")]
		[Address(RVA = "0x190605C", Offset = "0x190605C", VA = "0x190605C")]
		public PersonDoAbility()
		{
		}
	}
	[Token(Token = "0x2000862")]
	public class PersonWaitInsideBuilding : ActionTask<Person>
	{
		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_personCanWorkInThisBuilding;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PersonDoDropInJob.IJobProviding m_jobProvider;

		[Token(Token = "0x6003366")]
		[Address(RVA = "0x190F930", Offset = "0x190F930", VA = "0x190F930", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003367")]
		[Address(RVA = "0x190FAA8", Offset = "0x190FAA8", VA = "0x190FAA8", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003368")]
		[Address(RVA = "0x190FDF4", Offset = "0x190FDF4", VA = "0x190FDF4", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003369")]
		[Address(RVA = "0x190FE88", Offset = "0x190FE88", VA = "0x190FE88")]
		public PersonWaitInsideBuilding()
		{
		}
	}
	[Token(Token = "0x2000863")]
	public class PersonEnterBuilding : ActionTask<Person>
	{
		[Token(Token = "0x2000864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A34", Offset = "0x8F0A34")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersonEnterBuilding <>4__this;

			[Token(Token = "0x170006C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003371")]
				[Address(RVA = "0x16BE94C", Offset = "0x16BE94C", VA = "0x16BE94C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003373")]
				[Address(RVA = "0x16BE994", Offset = "0x16BE994", VA = "0x16BE994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600336E")]
			[Address(RVA = "0x16BE49C", Offset = "0x16BE49C", VA = "0x16BE49C")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600336F")]
			[Address(RVA = "0x16BE4C8", Offset = "0x16BE4C8", VA = "0x16BE4C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x16BE4CC", Offset = "0x16BE4CC", VA = "0x16BE4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0x16BE954", Offset = "0x16BE954", VA = "0x16BE954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Door door;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_enterBuildingCoroutine;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float waitTime;

		[Token(Token = "0x600336A")]
		[Address(RVA = "0x19076E0", Offset = "0x19076E0", VA = "0x19076E0", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600336B")]
		[Address(RVA = "0x1907B40", Offset = "0x1907B40", VA = "0x1907B40", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600336C")]
		[Address(RVA = "0x1907AC8", Offset = "0x1907AC8", VA = "0x1907AC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BD60", Offset = "0x90BD60")]
		private IEnumerator DoExecute()
		{
			return null;
		}

		[Token(Token = "0x600336D")]
		[Address(RVA = "0x1907C60", Offset = "0x1907C60", VA = "0x1907C60")]
		public PersonEnterBuilding()
		{
		}
	}
	[Token(Token = "0x2000865")]
	public class PersonFindBuildingOfType : ConditionTask<Person>
	{
		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Building.BuildingType buildingType;

		[Token(Token = "0x6003374")]
		[Address(RVA = "0x1908E94", Offset = "0x1908E94", VA = "0x1908E94", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003375")]
		[Address(RVA = "0x1909158", Offset = "0x1909158", VA = "0x1909158")]
		public PersonFindBuildingOfType()
		{
		}
	}
	[Token(Token = "0x2000866")]
	public class PersonFindRefinery : ConditionTask<Person>
	{
		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Refinery> refinery;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003376")]
		[Address(RVA = "0x190999C", Offset = "0x190999C", VA = "0x190999C", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003377")]
		[Address(RVA = "0x1909C74", Offset = "0x1909C74", VA = "0x1909C74")]
		public PersonFindRefinery()
		{
		}
	}
	[Token(Token = "0x2000867")]
	public class PersonFindWarehouse : ConditionTask<Person>
	{
		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool WithRoom;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003378")]
		[Address(RVA = "0x1909CC0", Offset = "0x1909CC0", VA = "0x1909CC0", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003379")]
		[Address(RVA = "0x190A0F0", Offset = "0x190A0F0", VA = "0x190A0F0")]
		public PersonFindWarehouse()
		{
		}
	}
	[Token(Token = "0x2000868")]
	public class PersonGoToRandomSpot : ActionTask<Person>
	{
		[Token(Token = "0x600337A")]
		[Address(RVA = "0x190C0AC", Offset = "0x190C0AC", VA = "0x190C0AC", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600337B")]
		[Address(RVA = "0x190C118", Offset = "0x190C118", VA = "0x190C118", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600337C")]
		[Address(RVA = "0x190C1CC", Offset = "0x190C1CC", VA = "0x190C1CC")]
		public PersonGoToRandomSpot()
		{
		}
	}
	[Token(Token = "0x2000869")]
	public class PersonLeaveBuilding : ActionTask<Person>
	{
		[Token(Token = "0x200086A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A44", Offset = "0x8F0A44")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersonLeaveBuilding <>4__this;

			[Token(Token = "0x170006C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003385")]
				[Address(RVA = "0x16BF828", Offset = "0x16BF828", VA = "0x16BF828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003387")]
				[Address(RVA = "0x16BF870", Offset = "0x16BF870", VA = "0x16BF870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0x16BF5E8", Offset = "0x16BF5E8", VA = "0x16BF5E8")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003383")]
			[Address(RVA = "0x16BF614", Offset = "0x16BF614", VA = "0x16BF614", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003384")]
			[Address(RVA = "0x16BF618", Offset = "0x16BF618", VA = "0x16BF618", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0x16BF830", Offset = "0x16BF830", VA = "0x16BF830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Building building;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Door door;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_leaveCoroutine;

		[Token(Token = "0x600337D")]
		[Address(RVA = "0x190DF0C", Offset = "0x190DF0C", VA = "0x190DF0C", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600337E")]
		[Address(RVA = "0x190DFD4", Offset = "0x190DFD4", VA = "0x190DFD4", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600337F")]
		[Address(RVA = "0x190E3D4", Offset = "0x190E3D4", VA = "0x190E3D4", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003380")]
		[Address(RVA = "0x190E35C", Offset = "0x190E35C", VA = "0x190E35C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BE10", Offset = "0x90BE10")]
		private IEnumerator DoExecute()
		{
			return null;
		}

		[Token(Token = "0x6003381")]
		[Address(RVA = "0x190E4E4", Offset = "0x190E4E4", VA = "0x190E4E4")]
		public PersonLeaveBuilding()
		{
		}
	}
	[Token(Token = "0x200086B")]
	public class PersonPickedUp : ActionTask<Person>
	{
		[Token(Token = "0x6003388")]
		[Address(RVA = "0x190E530", Offset = "0x190E530", VA = "0x190E530", Slot = "10")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6003389")]
		[Address(RVA = "0x190E538", Offset = "0x190E538", VA = "0x190E538", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600338A")]
		[Address(RVA = "0x190E544", Offset = "0x190E544", VA = "0x190E544", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600338B")]
		[Address(RVA = "0x190E548", Offset = "0x190E548", VA = "0x190E548", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600338C")]
		[Address(RVA = "0x190E54C", Offset = "0x190E54C", VA = "0x190E54C", Slot = "19")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x600338D")]
		[Address(RVA = "0x190E550", Offset = "0x190E550", VA = "0x190E550")]
		public PersonPickedUp()
		{
		}
	}
	[Token(Token = "0x200086C")]
	public class PersonSleepTillMorning : ActionTask<Person>
	{
		[Token(Token = "0x600338E")]
		[Address(RVA = "0x190F2D4", Offset = "0x190F2D4", VA = "0x190F2D4", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600338F")]
		[Address(RVA = "0x190F340", Offset = "0x190F340", VA = "0x190F340")]
		public PersonSleepTillMorning()
		{
		}
	}
	[Token(Token = "0x200086D")]
	public class PersonThrowScrap : ActionTask<Person>
	{
		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Refinery> refinery;

		[Token(Token = "0x6003390")]
		[Address(RVA = "0x190F38C", Offset = "0x190F38C", VA = "0x190F38C", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003391")]
		[Address(RVA = "0x190F88C", Offset = "0x190F88C", VA = "0x190F88C")]
		public PersonThrowScrap()
		{
		}
	}
	[Token(Token = "0x200086E")]
	public class PersonUseFacility : ActionTask<Person>
	{
		[Token(Token = "0x6003392")]
		[Address(RVA = "0x190F8D8", Offset = "0x190F8D8", VA = "0x190F8D8", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003393")]
		[Address(RVA = "0x190F8E4", Offset = "0x190F8E4", VA = "0x190F8E4")]
		public PersonUseFacility()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Conditions
{
	[Token(Token = "0x200086F")]
	public class BuildingNeedsConstruction : ConditionTask
	{
		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003394")]
		[Address(RVA = "0x1A22A54", Offset = "0x1A22A54", VA = "0x1A22A54", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003395")]
		[Address(RVA = "0x1A22B48", Offset = "0x1A22B48", VA = "0x1A22B48")]
		public BuildingNeedsConstruction()
		{
		}
	}
	[Token(Token = "0x2000870")]
	public class PersonFindAppealingFacility : ConditionTask<Person>
	{
		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003396")]
		[Address(RVA = "0x1908A94", Offset = "0x1908A94", VA = "0x1908A94", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003397")]
		[Address(RVA = "0x1908C00", Offset = "0x1908C00", VA = "0x1908C00")]
		public PersonFindAppealingFacility()
		{
		}
	}
	[Token(Token = "0x2000871")]
	public class PersonFindNearbyActivity : ConditionTask<Person>
	{
		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<ActivityItem> activity;

		[Token(Token = "0x6003398")]
		[Address(RVA = "0x19094C0", Offset = "0x19094C0", VA = "0x19094C0", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003399")]
		[Address(RVA = "0x1909950", Offset = "0x1909950", VA = "0x1909950")]
		public PersonFindNearbyActivity()
		{
		}
	}
	[Token(Token = "0x2000872")]
	public class PersonHasJob : ConditionTask<Person>
	{
		[Token(Token = "0x600339A")]
		[Address(RVA = "0x190CF68", Offset = "0x190CF68", VA = "0x190CF68", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600339B")]
		[Address(RVA = "0x190CFC4", Offset = "0x190CFC4", VA = "0x190CFC4")]
		public PersonHasJob()
		{
		}
	}
	[Token(Token = "0x2000873")]
	public class PersonIsHeld : ConditionTask<Person>
	{
		[Token(Token = "0x600339C")]
		[Address(RVA = "0x190DBE8", Offset = "0x190DBE8", VA = "0x190DBE8", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600339D")]
		[Address(RVA = "0x190DC44", Offset = "0x190DC44", VA = "0x190DC44")]
		public PersonIsHeld()
		{
		}
	}
	[Token(Token = "0x2000874")]
	public class PersonIsInsideBuilding : ConditionTask<Person>
	{
		[Token(Token = "0x600339E")]
		[Address(RVA = "0x190DC90", Offset = "0x190DC90", VA = "0x190DC90", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600339F")]
		[Address(RVA = "0x190DD28", Offset = "0x190DD28", VA = "0x190DD28")]
		public PersonIsInsideBuilding()
		{
		}
	}
	[Token(Token = "0x2000875")]
	public class PersonIsSleepy : ConditionTask<Person>
	{
		[Token(Token = "0x60033A0")]
		[Address(RVA = "0x190DD74", Offset = "0x190DD74", VA = "0x190DD74", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60033A1")]
		[Address(RVA = "0x190DE08", Offset = "0x190DE08", VA = "0x190DE08")]
		public PersonIsSleepy()
		{
		}
	}
	[Token(Token = "0x2000876")]
	public class PersonIsWellRested : ConditionTask<Person>
	{
		[Token(Token = "0x60033A2")]
		[Address(RVA = "0x190DE54", Offset = "0x190DE54", VA = "0x190DE54", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60033A3")]
		[Address(RVA = "0x190DEC0", Offset = "0x190DEC0", VA = "0x190DEC0")]
		public PersonIsWellRested()
		{
		}
	}
	[Token(Token = "0x2000877")]
	public class PersonWantsToDoAbility : ConditionTask<Person>
	{
		[Token(Token = "0x60033A4")]
		[Address(RVA = "0x190FED4", Offset = "0x190FED4", VA = "0x190FED4", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60033A5")]
		[Address(RVA = "0x190FFC8", Offset = "0x190FFC8", VA = "0x190FFC8")]
		public PersonWantsToDoAbility()
		{
		}
	}
}
namespace Shapes
{
	[Token(Token = "0x2000878")]
	public class DrawIM : MonoBehaviour
	{
		[Token(Token = "0x2000879")]
		private struct LineData
		{
			[Token(Token = "0x400274D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 start;

			[Token(Token = "0x400274E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 end;

			[Token(Token = "0x400274F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;

			[Token(Token = "0x4002750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float thickness;

			[Token(Token = "0x4002751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deathTime;
		}

		[Token(Token = "0x200087A")]
		private struct PolyLineData
		{
			[Token(Token = "0x4002752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PolylinePath path;

			[Token(Token = "0x4002753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool closed;

			[Token(Token = "0x4002754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;

			[Token(Token = "0x4002755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float thickness;

			[Token(Token = "0x4002756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float deathTime;
		}

		[Token(Token = "0x200087B")]
		private struct DiscData
		{
			[Token(Token = "0x4002757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4002758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rot;

			[Token(Token = "0x4002759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;

			[Token(Token = "0x400275A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float radius;

			[Token(Token = "0x400275B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float thickness;

			[Token(Token = "0x400275C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float deathTime;
		}

		[Token(Token = "0x200087C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A54", Offset = "0x8F0A54")]
		private sealed class <ClearAtEndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400275D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400275E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400275F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DrawIM <>4__this;

			[Token(Token = "0x170006CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033CB")]
				[Address(RVA = "0x15EEB3C", Offset = "0x15EEB3C", VA = "0x15EEB3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CD")]
				[Address(RVA = "0x15EEB84", Offset = "0x15EEB84", VA = "0x15EEB84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0x15EE7E4", Offset = "0x15EE7E4", VA = "0x15EE7E4")]
			[DebuggerHidden]
			public <ClearAtEndOfFrame>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0x15EE810", Offset = "0x15EE810", VA = "0x15EE810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033CA")]
			[Address(RVA = "0x15EE814", Offset = "0x15EE814", VA = "0x15EE814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CC")]
			[Address(RVA = "0x15EEB44", Offset = "0x15EEB44", VA = "0x15EEB44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DrawIM _instance;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LineData> m_lines;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PolyLineData> m_polylines;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DiscData> m_discs;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<DiscData> m_rings;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForEndOfFrame m_waitForEndOfFrame;

		[Token(Token = "0x170006CA")]
		private static DrawIM Instance
		{
			[Token(Token = "0x60033A6")]
			[Address(RVA = "0x173EDC8", Offset = "0x173EDC8", VA = "0x173EDC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60033A7")]
		[Address(RVA = "0x173F1C4", Offset = "0x173F1C4", VA = "0x173F1C4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x90BEC0", Offset = "0x90BEC0")]
		public static void ResetStatics()
		{
		}

		[Token(Token = "0x60033A8")]
		[Address(RVA = "0x173F374", Offset = "0x173F374", VA = "0x173F374")]
		private static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x60033A9")]
		[Address(RVA = "0x173F474", Offset = "0x173F474", VA = "0x173F474")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x60033AA")]
		[Address(RVA = "0x173F5C0", Offset = "0x173F5C0", VA = "0x173F5C0")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color, float _thickness)
		{
		}

		[Token(Token = "0x60033AB")]
		[Address(RVA = "0x173F64C", Offset = "0x173F64C", VA = "0x173F64C")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color)
		{
		}

		[Token(Token = "0x60033AC")]
		[Address(RVA = "0x173F730", Offset = "0x173F730", VA = "0x173F730")]
		public static void Line(Vector3 _start, Vector3 _end)
		{
		}

		[Token(Token = "0x60033AD")]
		[Address(RVA = "0x173F4F8", Offset = "0x173F4F8", VA = "0x173F4F8")]
		private void AddLine(Vector3 _start, Vector3 _end, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x60033AE")]
		[Address(RVA = "0x173F824", Offset = "0x173F824", VA = "0x173F824")]
		public static void Axis(Vector3 _pos, float _scale)
		{
		}

		[Token(Token = "0x60033AF")]
		[Address(RVA = "0x173FA08", Offset = "0x173FA08", VA = "0x173FA08")]
		public static void Axis(Vector3 _pos, float _scale, float _thickness)
		{
		}

		[Token(Token = "0x60033B0")]
		[Address(RVA = "0x173F8BC", Offset = "0x173F8BC", VA = "0x173F8BC")]
		public static void Axis(Vector3 _pos, float _scale, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x60033B1")]
		[Address(RVA = "0x173FA10", Offset = "0x173FA10", VA = "0x173FA10")]
		public static void Axis(Vector3 _pos, float _scale, Color col)
		{
		}

		[Token(Token = "0x60033B2")]
		[Address(RVA = "0x173FC2C", Offset = "0x173FC2C", VA = "0x173FC2C")]
		public static void Axis(Vector3 _pos, float _scale, Color col, float _thickness)
		{
		}

		[Token(Token = "0x60033B3")]
		[Address(RVA = "0x173FAE4", Offset = "0x173FAE4", VA = "0x173FAE4")]
		public static void Axis(Vector3 _pos, float _scale, Color col, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x60033B4")]
		[Address(RVA = "0x173FC54", Offset = "0x173FC54", VA = "0x173FC54")]
		public static void PolyLine(Color _color, float _thickness, float _lifeTime, params Vector3[] _points)
		{
		}

		[Token(Token = "0x60033B5")]
		[Address(RVA = "0x173FE14", Offset = "0x173FE14", VA = "0x173FE14")]
		public static void PolyLine(Color _color, float _thickness, params Vector3[] _points)
		{
		}

		[Token(Token = "0x60033B6")]
		[Address(RVA = "0x173FE84", Offset = "0x173FE84", VA = "0x173FE84")]
		public static void PolyLine(Color _color, params Vector3[] _points)
		{
		}

		[Token(Token = "0x60033B7")]
		[Address(RVA = "0x173FF3C", Offset = "0x173FF3C", VA = "0x173FF3C")]
		public static void PolyLine(params Vector3[] _points)
		{
		}

		[Token(Token = "0x60033B8")]
		[Address(RVA = "0x173FCC8", Offset = "0x173FCC8", VA = "0x173FCC8")]
		private void AddPolyLine(Vector3[] _points, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x60033B9")]
		[Address(RVA = "0x173FFFC", Offset = "0x173FFFC", VA = "0x173FFFC")]
		public static void Disc(Vector3 _pos, float _radius, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x60033BA")]
		[Address(RVA = "0x1740168", Offset = "0x1740168", VA = "0x1740168")]
		public static void Disc(Vector3 _pos, float _radius, Color _color, Quaternion _rot)
		{
		}

		[Token(Token = "0x60033BB")]
		[Address(RVA = "0x1740204", Offset = "0x1740204", VA = "0x1740204")]
		public static void Disc(Vector3 _pos, float _radius, Color _color)
		{
		}

		[Token(Token = "0x60033BC")]
		[Address(RVA = "0x17402B0", Offset = "0x17402B0", VA = "0x17402B0")]
		public static void Disc(Vector3 _pos, float _radius)
		{
		}

		[Token(Token = "0x60033BD")]
		[Address(RVA = "0x1740088", Offset = "0x1740088", VA = "0x1740088")]
		private void AddDisc(Vector3 _pos, float _radius, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x60033BE")]
		[Address(RVA = "0x17403A8", Offset = "0x17403A8", VA = "0x17403A8")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x60033BF")]
		[Address(RVA = "0x1740518", Offset = "0x1740518", VA = "0x1740518")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot)
		{
		}

		[Token(Token = "0x60033C0")]
		[Address(RVA = "0x17405A4", Offset = "0x17405A4", VA = "0x17405A4")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color)
		{
		}

		[Token(Token = "0x60033C1")]
		[Address(RVA = "0x1740640", Offset = "0x1740640", VA = "0x1740640")]
		public static void Ring(Vector3 _pos, float _radius)
		{
		}

		[Token(Token = "0x60033C2")]
		[Address(RVA = "0x1740448", Offset = "0x1740448", VA = "0x1740448")]
		private void AddRing(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x60033C3")]
		[Address(RVA = "0x173EEF4", Offset = "0x173EEF4", VA = "0x173EEF4")]
		private void Init()
		{
		}

		[Token(Token = "0x60033C4")]
		[Address(RVA = "0x173F280", Offset = "0x173F280", VA = "0x173F280")]
		private void DeInit()
		{
		}

		[Token(Token = "0x60033C5")]
		[Address(RVA = "0x1740740", Offset = "0x1740740", VA = "0x1740740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BED4", Offset = "0x90BED4")]
		private IEnumerator ClearAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x60033C6")]
		[Address(RVA = "0x17407B8", Offset = "0x17407B8", VA = "0x17407B8")]
		private void Render(Camera cam)
		{
		}

		[Token(Token = "0x60033C7")]
		[Address(RVA = "0x1740D40", Offset = "0x1740D40", VA = "0x1740D40")]
		public DrawIM()
		{
		}
	}
	[Token(Token = "0x200087D")]
	public class AmmoBar : MonoBehaviour
	{
		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalBullets;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bullets;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC09C", Offset = "0x8FC09C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC09C", Offset = "0x8FC09C")]
		public float bulletThicknessScale;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC0F0", Offset = "0x8FC0F0")]
		public float bulletEjectScale;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC108", Offset = "0x8FC108")]
		public float bulletDisappearTime;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC140", Offset = "0x8FC140")]
		public float bulletEjectAngSpeed;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC15C", Offset = "0x8FC15C")]
		public float ejectRotSpeedVariance;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve bulletEjectX;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve bulletEjectY;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] bulletFireTimes;

		[Token(Token = "0x170006CD")]
		public bool HasBulletsLeft
		{
			[Token(Token = "0x60033CF")]
			[Address(RVA = "0x1A99234", Offset = "0x1A99234", VA = "0x1A99234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60033CE")]
		[Address(RVA = "0x1A991B8", Offset = "0x1A991B8", VA = "0x1A991B8")]
		private Vector2 GetBulletEjectPos(Vector2 origin, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033D0")]
		[Address(RVA = "0x1A99244", Offset = "0x1A99244", VA = "0x1A99244")]
		public void Fire()
		{
		}

		[Token(Token = "0x60033D1")]
		[Address(RVA = "0x1A9929C", Offset = "0x1A9929C", VA = "0x1A9929C")]
		public void Reload()
		{
		}

		[Token(Token = "0x60033D2")]
		[Address(RVA = "0x1A992A8", Offset = "0x1A992A8", VA = "0x1A992A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60033D3")]
		[Address(RVA = "0x1A99304", Offset = "0x1A99304", VA = "0x1A99304")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x60033D4")]
		[Address(RVA = "0x1A995D8", Offset = "0x1A995D8", VA = "0x1A995D8")]
		public AmmoBar()
		{
		}
	}
	[Token(Token = "0x200087E")]
	public class ChargeBar : MonoBehaviour
	{
		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC178", Offset = "0x8FC178")]
		[SerializeField]
		private float chargeSpeed;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float chargeDecaySpeed;

		[NonSerialized]
		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCharging;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float charge;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC1D4", Offset = "0x8FC1D4")]
		public Color tickColor;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient chargeFillGradient;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC20C", Offset = "0x8FC20C")]
		public float tickSizeSmol;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC228", Offset = "0x8FC228")]
		public float tickSizeLorge;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC244", Offset = "0x8FC244")]
		public float tickTickness;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC260", Offset = "0x8FC260")]
		public float fontSize;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC278", Offset = "0x8FC278")]
		public float fontSizeLorge;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC290", Offset = "0x8FC290")]
		public float percentLabelOffset;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC2AC", Offset = "0x8FC2AC")]
		public float fontGrowRangePrev;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC2C8", Offset = "0x8FC2C8")]
		public float fontGrowRangeNext;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC2E4", Offset = "0x8FC2E4")]
		public AnimationCurve chargeFillCurve;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve animChargeShakeMagnitude;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC31C", Offset = "0x8FC31C")]
		public float chargeShakeMagnitude;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float chargeShakeSpeed;

		[Token(Token = "0x60033D5")]
		[Address(RVA = "0x1A2AB38", Offset = "0x1A2AB38", VA = "0x1A2AB38")]
		public void UpdateCharge()
		{
		}

		[Token(Token = "0x60033D6")]
		[Address(RVA = "0x1A2ABA4", Offset = "0x1A2ABA4", VA = "0x1A2ABA4")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x60033D7")]
		[Address(RVA = "0x1A2B0E8", Offset = "0x1A2B0E8", VA = "0x1A2B0E8")]
		public ChargeBar()
		{
		}
	}
	[Token(Token = "0x200087F")]
	public class Compass : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A64", Offset = "0x8F0A64")]
		private struct <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angWorldMax;

			[Token(Token = "0x400278A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angWorldMin;

			[Token(Token = "0x400278B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float angUiMin;

			[Token(Token = "0x400278C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float angUiMax;

			[Token(Token = "0x400278D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 compArcOrigin;

			[Token(Token = "0x400278E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Compass <>4__this;
		}

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 position;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float width;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC338", Offset = "0x8FC338")]
		public float lineThickness;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC354", Offset = "0x8FC354")]
		public float bendRadius;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC370", Offset = "0x8FC370")]
		public float fieldOfView;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC390", Offset = "0x8FC390")]
		public int ticksPerQuarterTurn;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC3C8", Offset = "0x8FC3C8")]
		public float tickSize;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC3E4", Offset = "0x8FC3E4")]
		public float tickEdgeFadeFraction;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC3FC", Offset = "0x8FC3FC")]
		public float fontSizeTickLabel;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC41C", Offset = "0x8FC41C")]
		public float tickLabelOffset;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC438", Offset = "0x8FC438")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC438", Offset = "0x8FC438")]
		public float fontSizeLookLabel;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 lookAngLabelOffset;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC494", Offset = "0x8FC494")]
		public float triangleNootSize;

		[Token(Token = "0x60033D8")]
		[Address(RVA = "0x1A320B0", Offset = "0x1A320B0", VA = "0x1A320B0")]
		public void DrawCompass(Vector3 worldDir)
		{
		}

		[Token(Token = "0x60033D9")]
		[Address(RVA = "0x1A32714", Offset = "0x1A32714", VA = "0x1A32714")]
		public Compass()
		{
		}

		[Token(Token = "0x60033DA")]
		[Address(RVA = "0x1A324F0", Offset = "0x1A324F0", VA = "0x1A324F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BF84", Offset = "0x90BF84")]
		private void <DrawCompass>g__CompassArcNoot|13_0(float worldAng, float size, string label, ref <>c__DisplayClass13_0 P_3)
		{
		}
	}
	[Token(Token = "0x2000881")]
	public class Crosshair : MonoBehaviour
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC4B0", Offset = "0x8FC4B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC4B0", Offset = "0x8FC4B0")]
		public float crosshairCrossInnerRad;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC508", Offset = "0x8FC508")]
		public float crosshairCrossOuterRad;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC524", Offset = "0x8FC524")]
		public float crosshairCrossThickness;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC540", Offset = "0x8FC540")]
		public float crosshairHitCrossInnerRad;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC55C", Offset = "0x8FC55C")]
		public float crosshairHitCrossOuterRad;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC578", Offset = "0x8FC578")]
		public float crosshairHitCrossThickness;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC594", Offset = "0x8FC594")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC594", Offset = "0x8FC594")]
		public float scaleFire;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Decayer fireDecayer;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Decayer hitDecayer;

		[Token(Token = "0x60033DB")]
		[Address(RVA = "0x1A340A8", Offset = "0x1A340A8", VA = "0x1A340A8")]
		public void Fire()
		{
		}

		[Token(Token = "0x60033DC")]
		[Address(RVA = "0x1A340C8", Offset = "0x1A340C8", VA = "0x1A340C8")]
		public void FireHit()
		{
		}

		[Token(Token = "0x60033DD")]
		[Address(RVA = "0x1A340E8", Offset = "0x1A340E8", VA = "0x1A340E8")]
		public void UpdateCrosshairDecay()
		{
		}

		[Token(Token = "0x60033DE")]
		[Address(RVA = "0x1A34124", Offset = "0x1A34124", VA = "0x1A34124")]
		public void DrawCrosshair()
		{
		}

		[Token(Token = "0x60033DF")]
		[Address(RVA = "0x1A3451C", Offset = "0x1A3451C", VA = "0x1A3451C")]
		public Crosshair()
		{
		}

		[Token(Token = "0x60033E0")]
		[Address(RVA = "0x1A343D0", Offset = "0x1A343D0", VA = "0x1A343D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90BF94", Offset = "0x90BF94")]
		internal static void <DrawCrosshair>g__DrawCross|12_0(Vector2[] dirs, float radInner, float radOuter, float thickness, float radialOffset, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000882")]
	public class Decayer
	{
		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float decaySpeed;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float magnitude;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[NonSerialized]
		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float value;

		[NonSerialized]
		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float valueInv;

		[NonSerialized]
		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float t;

		[Token(Token = "0x60033E1")]
		[Address(RVA = "0x16747A4", Offset = "0x16747A4", VA = "0x16747A4")]
		public void SetT(float v)
		{
		}

		[Token(Token = "0x60033E2")]
		[Address(RVA = "0x16747AC", Offset = "0x16747AC", VA = "0x16747AC")]
		public void Update()
		{
		}

		[Token(Token = "0x60033E3")]
		[Address(RVA = "0x1674854", Offset = "0x1674854", VA = "0x1674854")]
		public Decayer()
		{
		}
	}
	[Token(Token = "0x2000883")]
	[ExecuteAlways]
	public class FpsController : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x2000884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0A84", Offset = "0x8F0A84")]
		private sealed class <FixedSteps>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FpsController <>4__this;

			[Token(Token = "0x170006CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F2")]
				[Address(RVA = "0x15F4E00", Offset = "0x15F4E00", VA = "0x15F4E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F4")]
				[Address(RVA = "0x15F4E48", Offset = "0x15F4E48", VA = "0x15F4E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0x15F4D28", Offset = "0x15F4D28", VA = "0x15F4D28")]
			[DebuggerHidden]
			public <FixedSteps>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60033F0")]
			[Address(RVA = "0x15F4D54", Offset = "0x15F4D54", VA = "0x15F4D54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0x15F4D58", Offset = "0x15F4D58", VA = "0x15F4D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F3")]
			[Address(RVA = "0x15F4E08", Offset = "0x15F4E08", VA = "0x15F4E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Crosshair crosshair;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ChargeBar chargeBar;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AmmoBar ammoBar;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Compass compass;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform crosshairTransform;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC5E8", Offset = "0x8FC5E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC5E8", Offset = "0x8FC5E8")]
		public float smoof;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float moveSpeed;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lookSensitivity;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float yaw;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float pitch;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 moveInput;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 moveVel;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC640", Offset = "0x8FC640")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC640", Offset = "0x8FC640")]
		public float ammoBarAngularSpanRad;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC698", Offset = "0x8FC698")]
		public float ammoBarOutlineThickness;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC6B4", Offset = "0x8FC6B4")]
		public float ammoBarThickness;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC6D0", Offset = "0x8FC6D0")]
		public float ammoBarRadius;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC6EC", Offset = "0x8FC6EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC6EC", Offset = "0x8FC6EC")]
		public float fireSidebarRadiusPunchAmount;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve shakeAnimX;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve shakeAnimY;

		[Token(Token = "0x170006CE")]
		private bool InputFocus
		{
			[Token(Token = "0x60033E9")]
			[Address(RVA = "0x18AF464", Offset = "0x18AF464", VA = "0x18AF464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60033EA")]
			[Address(RVA = "0x18AEE30", Offset = "0x18AEE30", VA = "0x18AEE30")]
			set
			{
			}
		}

		[Token(Token = "0x60033E4")]
		[Address(RVA = "0x18AEDD0", Offset = "0x18AEDD0", VA = "0x18AEDD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60033E5")]
		[Address(RVA = "0x18AEEDC", Offset = "0x18AEEDC", VA = "0x18AEEDC", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033E6")]
		[Address(RVA = "0x18AEE64", Offset = "0x18AEE64", VA = "0x18AEE64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90BFA4", Offset = "0x90BFA4")]
		private IEnumerator FixedSteps()
		{
			return null;
		}

		[Token(Token = "0x60033E7")]
		[Address(RVA = "0x18AF234", Offset = "0x18AF234", VA = "0x18AF234")]
		public static void DrawRoundedArcOutline(Vector2 origin, float radius, float thickness, float outlineThickness, float angStart, float angEnd)
		{
		}

		[Token(Token = "0x60033E8")]
		[Address(RVA = "0x18AF3E0", Offset = "0x18AF3E0", VA = "0x18AF3E0")]
		public Vector2 GetShake(float speed, float amp)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033EB")]
		[Address(RVA = "0x18AF484", Offset = "0x18AF484", VA = "0x18AF484")]
		private void FixedUpdateManual()
		{
		}

		[Token(Token = "0x60033EC")]
		[Address(RVA = "0x18AF5DC", Offset = "0x18AF5DC", VA = "0x18AF5DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60033ED")]
		[Address(RVA = "0x18AF9E4", Offset = "0x18AF9E4", VA = "0x18AF9E4")]
		public FpsController()
		{
		}

		[Token(Token = "0x60033EE")]
		[Address(RVA = "0x18AF994", Offset = "0x18AF994", VA = "0x18AF994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C004", Offset = "0x90C004")]
		private void <Update>g__DoInput|30_0(KeyCode key, Vector2 dir)
		{
		}
	}
	[Token(Token = "0x2000885")]
	[ExecuteAlways]
	public class ProceduralTree : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC744", Offset = "0x8FC744")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC744", Offset = "0x8FC744")]
		public float lineThickness;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color lineColor;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FC79C", Offset = "0x8FC79C")]
		public int seed;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC7D4", Offset = "0x8FC7D4")]
		public int lineCount;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC7F0", Offset = "0x8FC7F0")]
		public int branchesMin;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC808", Offset = "0x8FC808")]
		public int branchesMax;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC820", Offset = "0x8FC820")]
		public float branchLengthMin;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC838", Offset = "0x8FC838")]
		public float branchLengthMax;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC850", Offset = "0x8FC850")]
		public float maxAngDeviation;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool use3D;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentLineCount;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Queue<Matrix4x4> mtxQueue;

		[Token(Token = "0x60033F5")]
		[Address(RVA = "0x192A1C0", Offset = "0x192A1C0", VA = "0x192A1C0", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033F6")]
		[Address(RVA = "0x192A430", Offset = "0x192A430", VA = "0x192A430")]
		private void BranchFrom(Matrix4x4 mtx)
		{
		}

		[Token(Token = "0x60033F7")]
		[Address(RVA = "0x192A888", Offset = "0x192A888", VA = "0x192A888")]
		public ProceduralTree()
		{
		}
	}
	[Token(Token = "0x2000886")]
	[ExecuteAlways]
	public class SpinningColorDiscs : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC86C", Offset = "0x8FC86C")]
		public int discCount;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FC888", Offset = "0x8FC888")]
		public float discRadius;

		[Token(Token = "0x60033F8")]
		[Address(RVA = "0x1876040", Offset = "0x1876040", VA = "0x1876040", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033F9")]
		[Address(RVA = "0x1876340", Offset = "0x1876340", VA = "0x1876340")]
		private Vector2 GetDiscPosition(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033FA")]
		[Address(RVA = "0x18763B4", Offset = "0x18763B4", VA = "0x18763B4")]
		public SpinningColorDiscs()
		{
		}
	}
}
namespace Decorations.Placements
{
	[Token(Token = "0x2000887")]
	public static class DecoPlacers
	{
		[Token(Token = "0x2000888")]
		public delegate bool DecoPlacement(Spaceport spaceport, Decoration deco, Building b);

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DecoPlacement[] _around;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DecoPlacement[] _ground;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly DecoPlacement[] _groundSnapped;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly DecoPlacement[] _anywhere;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<BlockMetadata> availableLocations;

		[Token(Token = "0x60033FB")]
		[Address(RVA = "0x167485C", Offset = "0x167485C", VA = "0x167485C")]
		public static DecoPlacement[] GetPlacers(Decoration.Placement mRules)
		{
			return null;
		}

		[Token(Token = "0x60033FC")]
		[Address(RVA = "0x1674970", Offset = "0x1674970", VA = "0x1674970")]
		public static bool Anywhere(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033FD")]
		[Address(RVA = "0x1674AB0", Offset = "0x1674AB0", VA = "0x1674AB0")]
		public static bool AnywhereForward(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033FE")]
		[Address(RVA = "0x1674BF0", Offset = "0x1674BF0", VA = "0x1674BF0")]
		public static bool OnWall(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033FF")]
		[Address(RVA = "0x16752A0", Offset = "0x16752A0", VA = "0x16752A0")]
		public static bool OnGround(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003400")]
		[Address(RVA = "0x167542C", Offset = "0x167542C", VA = "0x167542C")]
		public static bool OnGroundSnapped(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003401")]
		[Address(RVA = "0x1674F90", Offset = "0x1674F90", VA = "0x1674F90")]
		private static bool TryGetBestWallPlacement(CityStructure cityStructure, Spaceport spaceport, Building building, FastBoundsInt cpBounds, List<BlockMetadata> locations, out BlockMetadata bestPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x6003402")]
		[Address(RVA = "0x167553C", Offset = "0x167553C", VA = "0x167553C")]
		public static BlockPriorities GetPrioritiesForMetadata(CityStructure cityStructure, Spaceport spaceport, Building building, FastBoundsInt cpBounds, BlockMetadata metadata)
		{
			return null;
		}

		[Token(Token = "0x6003403")]
		[Address(RVA = "0x1675E48", Offset = "0x1675E48", VA = "0x1675E48")]
		public static FastVector3Int GetSignOffsetForNormal(NormalIndex normalIndex)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x6003404")]
		[Address(RVA = "0x1675EE4", Offset = "0x1675EE4", VA = "0x1675EE4")]
		public static FastBoundsInt GetSignBounds(BlockMetadata metadata)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x6003405")]
		[Address(RVA = "0x1675780", Offset = "0x1675780", VA = "0x1675780")]
		public static BlockPriorities GetSignBlockPriority(CityStructure cityStructure, FastBoundsInt buildingBounds, BlockMetadata startingBlock)
		{
			return null;
		}

		[Token(Token = "0x6003406")]
		[Address(RVA = "0x1675C40", Offset = "0x1675C40", VA = "0x1675C40")]
		public static int GetSpaceportPriorityAdjustment(Spaceport spaceport, Vector3 position, FastVector3Int normal)
		{
			return default(int);
		}

		[Token(Token = "0x6003407")]
		[Address(RVA = "0x1675D50", Offset = "0x1675D50", VA = "0x1675D50")]
		public static int GetReachabilityAdjustment(Building building, BlockMetadata location)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000889")]
	public class BlockPriorities
	{
		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int direction;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int corner;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int window;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int reachability;

		[Token(Token = "0x170006D1")]
		public int total
		{
			[Token(Token = "0x600340F")]
			[Address(RVA = "0x177B164", Offset = "0x177B164", VA = "0x177B164")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600340D")]
		[Address(RVA = "0x177B0A8", Offset = "0x177B0A8", VA = "0x177B0A8")]
		public void ReplaceIfHigher(BlockPriorities other)
		{
		}

		[Token(Token = "0x600340E")]
		[Address(RVA = "0x177B10C", Offset = "0x177B10C", VA = "0x177B10C")]
		public void ReplaceIfHigherTotal(BlockPriorities other)
		{
		}

		[Token(Token = "0x6003410")]
		[Address(RVA = "0x177B174", Offset = "0x177B174", VA = "0x177B174")]
		public BlockPriorities()
		{
		}
	}
}
namespace City
{
	[Token(Token = "0x200088A")]
	public struct FastBlockMetadata
	{
		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BlockerMaterial material;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public FastVector3Int normal;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int z;

		[Token(Token = "0x6003411")]
		[Address(RVA = "0x1750E3C", Offset = "0x1750E3C", VA = "0x1750E3C")]
		public BlockMetadata Clone()
		{
			return default(BlockMetadata);
		}
	}
	[Token(Token = "0x200088B")]
	public struct BlockMetadata
	{
		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ICityPiece m_occupyingCityPiece;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ICityPiece[] m_connectableCityPieces;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlockerMaterial material;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FastVector3Int normal;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockContent content;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int windowPriority;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int windowX;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int windowY;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int windowZ;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int cornerPriority;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int x;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int y;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int z;

		[Token(Token = "0x6003412")]
		[Address(RVA = "0x177A9B4", Offset = "0x177A9B4", VA = "0x177A9B4")]
		public static BlockMetadata Default()
		{
			return default(BlockMetadata);
		}

		[Token(Token = "0x6003413")]
		[Address(RVA = "0x177AA60", Offset = "0x177AA60", VA = "0x177AA60")]
		public bool Matches(BlockMetadata testLocation)
		{
			return default(bool);
		}

		[Token(Token = "0x6003414")]
		[Address(RVA = "0x177AA9C", Offset = "0x177AA9C", VA = "0x177AA9C")]
		public BlockMetadata Clone()
		{
			return default(BlockMetadata);
		}

		[Token(Token = "0x6003415")]
		[Address(RVA = "0x177AB74", Offset = "0x177AB74", VA = "0x177AB74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003416")]
		[Address(RVA = "0x177AC3C", Offset = "0x177AC3C", VA = "0x177AC3C")]
		public int Delta(FastVector3Int other)
		{
			return default(int);
		}

		[Token(Token = "0x6003417")]
		[Address(RVA = "0x177AC6C", Offset = "0x177AC6C", VA = "0x177AC6C")]
		public int GetDistanceToCorner(FastVector3Int[] corners)
		{
			return default(int);
		}

		[Token(Token = "0x6003418")]
		[Address(RVA = "0x177AD08", Offset = "0x177AD08", VA = "0x177AD08")]
		public int GetPriorityFromWindow(BlockMetadata[] windowLocations, out int winX, out int winY, out int winZ)
		{
			return default(int);
		}

		[Token(Token = "0x6003419")]
		[Address(RVA = "0x177AE38", Offset = "0x177AE38", VA = "0x177AE38")]
		private bool TryGetWindowDeltas(BlockMetadata[] windowLocations, out int deltaH, out int deltaV, out int winX, out int winY, out int winZ, out bool isDoor)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200088C")]
	public enum BlockerMaterial
	{
		[Token(Token = "0x40027E0")]
		Solid,
		[Token(Token = "0x40027E1")]
		Anomaly,
		[Token(Token = "0x40027E2")]
		TowerOfPower
	}
	[Token(Token = "0x200088D")]
	public enum BlockContent
	{
		[Token(Token = "0x40027E4")]
		Normal,
		[Token(Token = "0x40027E5")]
		Window,
		[Token(Token = "0x40027E6")]
		Door,
		[Token(Token = "0x40027E7")]
		Corner
	}
	[Token(Token = "0x200088E")]
	public class BuildingBaker
	{
		[Token(Token = "0x200088F")]
		public struct Weights
		{
			[Token(Token = "0x40027E8")]
			public const int Reachable = 6;

			[Token(Token = "0x40027E9")]
			public const int Unreachable = -4;

			[Token(Token = "0x40027EA")]
			public const int Covered = -20;

			[Token(Token = "0x40027EB")]
			public const int SpaceportOriented = 2;

			[Token(Token = "0x40027EC")]
			public const int SpaceportFacingTowards = 1;

			[Token(Token = "0x40027ED")]
			public const int AboveDoor = 20;

			[Token(Token = "0x40027EE")]
			public const int BesideDoor = 10;

			[Token(Token = "0x40027EF")]
			public const int AboveWindow = 6;

			[Token(Token = "0x40027F0")]
			public const int BesideWindow = 3;
		}

		[Token(Token = "0x600341A")]
		[Address(RVA = "0x1A2075C", Offset = "0x1A2075C", VA = "0x1A2075C")]
		public void Bake(CityStructure cityStructure, Dictionary<long, BlockMetadata> blockToMetadata, Dictionary<long, long[]> cityPieceIDToBlocks, ICityPiece cityPiece, Vector3 position, Quaternion rotation, bool fullBake)
		{
		}

		[Token(Token = "0x600341B")]
		[Address(RVA = "0x1A20A30", Offset = "0x1A20A30", VA = "0x1A20A30")]
		private List<BlockMetadata> BakeWindowLocations(CityStructure cityStructure, SpacefolkWindow[] windows, Dictionary<long, BlockMetadata> blockToMetadata, HashSet<long> blockLocations)
		{
			return null;
		}

		[Token(Token = "0x600341C")]
		[Address(RVA = "0x1A20FFC", Offset = "0x1A20FFC", VA = "0x1A20FFC")]
		private void BakeBlockingLocations(CityStructure cityStructure, ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Vector3 position, Quaternion rotation, HashSet<long> blockLocations)
		{
		}

		[Token(Token = "0x600341D")]
		[Address(RVA = "0x1A22128", Offset = "0x1A22128", VA = "0x1A22128")]
		private static bool IsCorner(FastVector3Int[] corners, int x, int y, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x600341E")]
		[Address(RVA = "0x1A216B8", Offset = "0x1A216B8", VA = "0x1A216B8")]
		private void BakeConnectionLocations(CityStructure cityStructure, ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Vector3 position, Quaternion rotation, List<BlockMetadata> windowLocations, HashSet<long> blockLocations, bool fullBake)
		{
		}

		[Token(Token = "0x600341F")]
		[Address(RVA = "0x1A2227C", Offset = "0x1A2227C", VA = "0x1A2227C")]
		public void Unbake(ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Dictionary<long, long[]> cityPieceIDToBlocks)
		{
		}

		[Token(Token = "0x6003420")]
		[Address(RVA = "0x1A2253C", Offset = "0x1A2253C", VA = "0x1A2253C")]
		public BuildingBaker()
		{
		}
	}
	[Token(Token = "0x2000890")]
	public class CityBlockerPlacement : MonoBehaviour
	{
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0AB4", Offset = "0x8F0AB4")]
		private sealed class <Corners>d__5 : IEnumerable<FastVector3Int>, IEnumerable, IEnumerator<FastVector3Int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastVector3Int <>2__current;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x40027F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x40027FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CityBlockerPlacement <cityBlockerPlacement>5__4;

			[Token(Token = "0x40027FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FastVector3Int[] <corners>5__5;

			[Token(Token = "0x40027FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CityBlockerPlacement[] <>7__wrap5;

			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>7__wrap6;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private CityBlockerPlacement <otherBlocker>5__8;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private FastVector3Int[] <>7__wrap8;

			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <>7__wrap9;

			[Token(Token = "0x170006D2")]
			private FastVector3Int System.Collections.Generic.IEnumerator<Utils.FastVector3Int>.Current
			{
				[Token(Token = "0x600342A")]
				[Address(RVA = "0x176BD34", Offset = "0x176BD34", VA = "0x176BD34", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastVector3Int);
				}
			}

			[Token(Token = "0x170006D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600342C")]
				[Address(RVA = "0x176BD84", Offset = "0x176BD84", VA = "0x176BD84", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003427")]
			[Address(RVA = "0x176B950", Offset = "0x176B950", VA = "0x176B950")]
			[DebuggerHidden]
			public <Corners>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003428")]
			[Address(RVA = "0x176B988", Offset = "0x176B988", VA = "0x176B988", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0x176B98C", Offset = "0x176B98C", VA = "0x176B98C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600342B")]
			[Address(RVA = "0x176BD44", Offset = "0x176BD44", VA = "0x176BD44", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600342D")]
			[Address(RVA = "0x176BDEC", Offset = "0x176BDEC", VA = "0x176BDEC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastVector3Int> System.Collections.Generic.IEnumerable<Utils.FastVector3Int>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600342E")]
			[Address(RVA = "0x176BE9C", Offset = "0x176BE9C", VA = "0x176BE9C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0AC4", Offset = "0x8F0AC4")]
		private sealed class <FastBlockLocations>d__6 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap2;

			[Token(Token = "0x400280A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CityBlockerPlacement <cityBlockerPlacement>5__4;

			[Token(Token = "0x400280B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<FastVector3Int> <>7__wrap4;

			[Token(Token = "0x170006D4")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x6003433")]
				[Address(RVA = "0x176C338", Offset = "0x176C338", VA = "0x176C338", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003435")]
				[Address(RVA = "0x176C38C", Offset = "0x176C38C", VA = "0x176C38C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600342F")]
			[Address(RVA = "0x176BEA0", Offset = "0x176BEA0", VA = "0x176BEA0")]
			[DebuggerHidden]
			public <FastBlockLocations>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003430")]
			[Address(RVA = "0x176BED8", Offset = "0x176BED8", VA = "0x176BED8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003431")]
			[Address(RVA = "0x176BFB0", Offset = "0x176BFB0", VA = "0x176BFB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003432")]
			[Address(RVA = "0x176BEF4", Offset = "0x176BEF4", VA = "0x176BEF4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003434")]
			[Address(RVA = "0x176C34C", Offset = "0x176C34C", VA = "0x176C34C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003436")]
			[Address(RVA = "0x176C3F4", Offset = "0x176C3F4", VA = "0x176C3F4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003437")]
			[Address(RVA = "0x176C4A4", Offset = "0x176C4A4", VA = "0x176C4A4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000893")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0AD4", Offset = "0x8F0AD4")]
		private sealed class <BakedBlockLocations>d__7 : IEnumerable<BlockMetadata>, IEnumerable, IEnumerator<BlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400280C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400280D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BlockMetadata <>2__current;

			[Token(Token = "0x400280E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400280F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x4002810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x4002811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private CityStructure cityStructure;

			[Token(Token = "0x4002812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public CityStructure <>3__cityStructure;

			[Token(Token = "0x4002813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x4002814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <>7__wrap2;

			[Token(Token = "0x4002815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IEnumerator<FastVector3Int> <>7__wrap3;

			[Token(Token = "0x170006D6")]
			private BlockMetadata System.Collections.Generic.IEnumerator<City.BlockMetadata>.Current
			{
				[Token(Token = "0x600343C")]
				[Address(RVA = "0x176B7D4", Offset = "0x176B7D4", VA = "0x176B7D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(BlockMetadata);
				}
			}

			[Token(Token = "0x170006D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600343E")]
				[Address(RVA = "0x176B824", Offset = "0x176B824", VA = "0x176B824", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003438")]
			[Address(RVA = "0x176B334", Offset = "0x176B334", VA = "0x176B334")]
			[DebuggerHidden]
			public <BakedBlockLocations>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003439")]
			[Address(RVA = "0x176B36C", Offset = "0x176B36C", VA = "0x176B36C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600343A")]
			[Address(RVA = "0x176B444", Offset = "0x176B444", VA = "0x176B444", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600343B")]
			[Address(RVA = "0x176B388", Offset = "0x176B388", VA = "0x176B388")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600343D")]
			[Address(RVA = "0x176B7E4", Offset = "0x176B7E4", VA = "0x176B7E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600343F")]
			[Address(RVA = "0x176B88C", Offset = "0x176B88C", VA = "0x176B88C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<BlockMetadata> System.Collections.Generic.IEnumerable<City.BlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003440")]
			[Address(RVA = "0x176B94C", Offset = "0x176B94C", VA = "0x176B94C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0AE4", Offset = "0x8F0AE4")]
		private sealed class <FastBlockLocations>d__8 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x4002818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CityBlockerPlacement <>4__this;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<FastVector3Int> <>7__wrap1;

			[Token(Token = "0x170006D8")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x6003445")]
				[Address(RVA = "0x176C89C", Offset = "0x176C89C", VA = "0x176C89C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003447")]
				[Address(RVA = "0x176C8F0", Offset = "0x176C8F0", VA = "0x176C8F0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003441")]
			[Address(RVA = "0x176C4A8", Offset = "0x176C4A8", VA = "0x176C4A8")]
			[DebuggerHidden]
			public <FastBlockLocations>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003442")]
			[Address(RVA = "0x176C4E0", Offset = "0x176C4E0", VA = "0x176C4E0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003443")]
			[Address(RVA = "0x176C5B8", Offset = "0x176C5B8", VA = "0x176C5B8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003444")]
			[Address(RVA = "0x176C4FC", Offset = "0x176C4FC", VA = "0x176C4FC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003446")]
			[Address(RVA = "0x176C8B0", Offset = "0x176C8B0", VA = "0x176C8B0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003448")]
			[Address(RVA = "0x176C958", Offset = "0x176C958", VA = "0x176C958", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003449")]
			[Address(RVA = "0x176CA08", Offset = "0x176CA08", VA = "0x176CA08", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useCentrePivot;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds m_bounds;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlockerMaterial blockerMaterial;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FastBoundsInt structuredBounds;

		[Token(Token = "0x6003421")]
		[Address(RVA = "0x1A21F04", Offset = "0x1A21F04", VA = "0x1A21F04")]
		public void UpdateStructuredBounds(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6003422")]
		[Address(RVA = "0x1A2201C", Offset = "0x1A2201C", VA = "0x1A2201C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C064", Offset = "0x90C064")]
		public static IEnumerable<FastVector3Int> Corners(CityBlockerPlacement[] cityBlockerPlacements)
		{
			return null;
		}

		[Token(Token = "0x6003423")]
		[Address(RVA = "0x1A2BF34", Offset = "0x1A2BF34", VA = "0x1A2BF34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C0C4", Offset = "0x90C0C4")]
		public static IEnumerable<FastBlockMetadata> FastBlockLocations(CityBlockerPlacement[] cityBlockerPlacements)
		{
			return null;
		}

		[Token(Token = "0x6003424")]
		[Address(RVA = "0x1A24358", Offset = "0x1A24358", VA = "0x1A24358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C124", Offset = "0x90C124")]
		public static IEnumerable<BlockMetadata> BakedBlockLocations(CityStructure cityStructure, CityBlockerPlacement[] cityBlockerPlacements, Vector3 position, Quaternion rotation, bool sidesOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6003425")]
		[Address(RVA = "0x1A22094", Offset = "0x1A22094", VA = "0x1A22094")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C184", Offset = "0x90C184")]
		public IEnumerable<FastBlockMetadata> FastBlockLocations()
		{
			return null;
		}

		[Token(Token = "0x6003426")]
		[Address(RVA = "0x1A2BFAC", Offset = "0x1A2BFAC", VA = "0x1A2BFAC")]
		public CityBlockerPlacement()
		{
		}
	}
	[Token(Token = "0x2000895")]
	public enum NormalIndex
	{
		[Token(Token = "0x400281C")]
		Up,
		[Token(Token = "0x400281D")]
		Down,
		[Token(Token = "0x400281E")]
		Right,
		[Token(Token = "0x400281F")]
		Left,
		[Token(Token = "0x4002820")]
		Back,
		[Token(Token = "0x4002821")]
		Front,
		[Token(Token = "0x4002822")]
		None
	}
	[Token(Token = "0x2000896")]
	public static class NormalIndexExt
	{
		[Token(Token = "0x600344A")]
		[Address(RVA = "0x19B9688", Offset = "0x19B9688", VA = "0x19B9688")]
		public static NormalIndex ToIndex(this Vector3 normal)
		{
			return default(NormalIndex);
		}

		[Token(Token = "0x600344B")]
		[Address(RVA = "0x19B96F4", Offset = "0x19B96F4", VA = "0x19B96F4")]
		public static NormalIndex ToIndex(this FastVector3Int normal)
		{
			return default(NormalIndex);
		}

		[Token(Token = "0x600344C")]
		[Address(RVA = "0x19B974C", Offset = "0x19B974C", VA = "0x19B974C")]
		public static bool IsReversed(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x600344D")]
		[Address(RVA = "0x19B9774", Offset = "0x19B9774", VA = "0x19B9774")]
		public static bool OnYAxis(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x600344E")]
		[Address(RVA = "0x19B9780", Offset = "0x19B9780", VA = "0x19B9780")]
		public static bool OnXAxis(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x600344F")]
		[Address(RVA = "0x19B9790", Offset = "0x19B9790", VA = "0x19B9790")]
		public static bool OnZAxis(this NormalIndex index)
		{
			return default(bool);
		}
	}
}
namespace Prototypes.TinyPeople
{
	[Token(Token = "0x2000897")]
	public class BinMan : MonoBehaviour
	{
		[Token(Token = "0x2000898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0B04", Offset = "0x8F0B04")]
		private sealed class <DoBin>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRInteractableItem binned;

			[Token(Token = "0x4002826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform holder;

			[Token(Token = "0x4002827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endPos;

			[Token(Token = "0x4002828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 heightPos;

			[Token(Token = "0x4002829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x400282A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 startPos;

			[Token(Token = "0x400282B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<NVRInteractableItem> callback;

			[Token(Token = "0x400282C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform <binTrans>5__2;

			[Token(Token = "0x400282D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Snappable <snappable>5__3;

			[Token(Token = "0x400282E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool <snappableWasEnabled>5__4;

			[Token(Token = "0x400282F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private PointAndSnap <pointAndSnap>5__5;

			[Token(Token = "0x4002830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <pointAndSnapWasEnabled>5__6;

			[Token(Token = "0x4002831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Transform <parentWas>5__7;

			[Token(Token = "0x4002832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float <t>5__8;

			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <endPosMag>5__9;

			[Token(Token = "0x170006DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003456")]
				[Address(RVA = "0x1767960", Offset = "0x1767960", VA = "0x1767960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003458")]
				[Address(RVA = "0x17679A8", Offset = "0x17679A8", VA = "0x17679A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003453")]
			[Address(RVA = "0x1767118", Offset = "0x1767118", VA = "0x1767118")]
			[DebuggerHidden]
			public <DoBin>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003454")]
			[Address(RVA = "0x1767144", Offset = "0x1767144", VA = "0x1767144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003455")]
			[Address(RVA = "0x1767148", Offset = "0x1767148", VA = "0x1767148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003457")]
			[Address(RVA = "0x1767968", Offset = "0x1767968", VA = "0x1767968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6003450")]
		[Address(RVA = "0x177A14C", Offset = "0x177A14C", VA = "0x177A14C")]
		public void BinIt(NVRInteractableItem binned, Transform holder, float duration, Vector3 startPos, Vector3 endPos, Vector3 heightPos, Action<NVRInteractableItem> callback)
		{
		}

		[Token(Token = "0x6003451")]
		[Address(RVA = "0x177A748", Offset = "0x177A748", VA = "0x177A748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C404", Offset = "0x90C404")]
		private IEnumerator DoBin(NVRInteractableItem binned, Transform holder, float duration, Vector3 startPos, Vector3 endPos, Vector3 heightPos, Action<NVRInteractableItem> callback)
		{
			return null;
		}

		[Token(Token = "0x6003452")]
		[Address(RVA = "0x177A854", Offset = "0x177A854", VA = "0x177A854")]
		public BinMan()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000899")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170006DC")]
		public bool Highlight
		{
			[Token(Token = "0x6003459")]
			[Address(RVA = "0x1A2F0F8", Offset = "0x1A2F0F8", VA = "0x1A2F0F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600345A")]
			[Address(RVA = "0x1A2F100", Offset = "0x1A2F100", VA = "0x1A2F100")]
			set
			{
			}
		}

		[Token(Token = "0x600345B")]
		[Address(RVA = "0x1A2F10C", Offset = "0x1A2F10C", VA = "0x1A2F10C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600345C")]
		[Address(RVA = "0x1A2F2D4", Offset = "0x1A2F2D4", VA = "0x1A2F2D4", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600345D")]
		[Address(RVA = "0x1A2F2FC", Offset = "0x1A2F2FC", VA = "0x1A2F2FC", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600345E")]
		[Address(RVA = "0x1A2F324", Offset = "0x1A2F324", VA = "0x1A2F324")]
		private void Awake()
		{
		}

		[Token(Token = "0x600345F")]
		[Address(RVA = "0x1A2F1D4", Offset = "0x1A2F1D4", VA = "0x1A2F1D4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6003460")]
		[Address(RVA = "0x1A2F5F8", Offset = "0x1A2F5F8", VA = "0x1A2F5F8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200089A")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170006DD")]
		public bool InRange
		{
			[Token(Token = "0x6003462")]
			[Address(RVA = "0x173C7E4", Offset = "0x173C7E4", VA = "0x173C7E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003463")]
			[Address(RVA = "0x173C7EC", Offset = "0x173C7EC", VA = "0x173C7EC")]
			set
			{
			}
		}

		[Token(Token = "0x170006DE")]
		public bool Targeted
		{
			[Token(Token = "0x6003464")]
			[Address(RVA = "0x173C968", Offset = "0x173C968", VA = "0x173C968")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003465")]
			[Address(RVA = "0x173C970", Offset = "0x173C970", VA = "0x173C970")]
			set
			{
			}
		}

		[Token(Token = "0x6003466")]
		[Address(RVA = "0x173C97C", Offset = "0x173C97C", VA = "0x173C97C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6003467")]
		[Address(RVA = "0x173C7F8", Offset = "0x173C7F8", VA = "0x173C7F8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6003468")]
		[Address(RVA = "0x173CAE8", Offset = "0x173CAE8", VA = "0x173CAE8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200089B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0B14", Offset = "0x8F0B14")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170006DF")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6003469")]
			[Address(RVA = "0x173CAF0", Offset = "0x173CAF0", VA = "0x173CAF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600346A")]
			[Address(RVA = "0x173CAF8", Offset = "0x173CAF8", VA = "0x173CAF8")]
			set
			{
			}
		}

		[Token(Token = "0x600346B")]
		[Address(RVA = "0x173CB14", Offset = "0x173CB14", VA = "0x173CB14", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600346C")]
		[Address(RVA = "0x173CD54", Offset = "0x173CD54", VA = "0x173CD54", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600346D")]
		[Address(RVA = "0x173D66C", Offset = "0x173D66C", VA = "0x173D66C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600346E")]
		[Address(RVA = "0x173DB00", Offset = "0x173DB00", VA = "0x173DB00", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600346F")]
		[Address(RVA = "0x173DDC0", Offset = "0x173DDC0", VA = "0x173DDC0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6003470")]
		[Address(RVA = "0x173CFC8", Offset = "0x173CFC8", VA = "0x173CFC8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6003471")]
		[Address(RVA = "0x173DEB0", Offset = "0x173DEB0", VA = "0x173DEB0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6003472")]
		[Address(RVA = "0x173E30C", Offset = "0x173E30C", VA = "0x173E30C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6003473")]
		[Address(RVA = "0x173E324", Offset = "0x173E324", VA = "0x173E324", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6003474")]
		[Address(RVA = "0x173E32C", Offset = "0x173E32C", VA = "0x173E32C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200089C")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6003475")]
		[Address(RVA = "0x193BD54", Offset = "0x193BD54", VA = "0x193BD54")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6003476")]
		[Address(RVA = "0x193BE0C", Offset = "0x193BE0C", VA = "0x193BE0C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6003477")]
		[Address(RVA = "0x193BEC4", Offset = "0x193BEC4", VA = "0x193BEC4")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200089D")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200089E")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002856")]
			Disabled,
			[Token(Token = "0x4002857")]
			Enabled,
			[Token(Token = "0x4002858")]
			Targeted
		}

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6003478")]
		[Address(RVA = "0x193BF84", Offset = "0x193BF84", VA = "0x193BF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6003479")]
		[Address(RVA = "0x193BFF0", Offset = "0x193BFF0", VA = "0x193BFF0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600347A")]
		[Address(RVA = "0x193C08C", Offset = "0x193C08C", VA = "0x193C08C")]
		private void Update()
		{
		}

		[Token(Token = "0x600347B")]
		[Address(RVA = "0x193C0D4", Offset = "0x193C0D4", VA = "0x193C0D4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200089F")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600347C")]
		[Address(RVA = "0x15A9848", Offset = "0x15A9848", VA = "0x15A9848")]
		private void Start()
		{
		}

		[Token(Token = "0x600347D")]
		[Address(RVA = "0x15A9934", Offset = "0x15A9934", VA = "0x15A9934")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600347E")]
		[Address(RVA = "0x15A9940", Offset = "0x15A9940", VA = "0x15A9940")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600347F")]
		[Address(RVA = "0x15A994C", Offset = "0x15A994C", VA = "0x15A994C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20008A0")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6003480")]
		[Address(RVA = "0x177B428", Offset = "0x177B428", VA = "0x177B428")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003481")]
		[Address(RVA = "0x177B47C", Offset = "0x177B47C", VA = "0x177B47C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003482")]
		[Address(RVA = "0x177B7E8", Offset = "0x177B7E8", VA = "0x177B7E8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6003483")]
		[Address(RVA = "0x177B8EC", Offset = "0x177B8EC", VA = "0x177B8EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6003484")]
		[Address(RVA = "0x177B480", Offset = "0x177B480", VA = "0x177B480")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6003485")]
		[Address(RVA = "0x177B9F0", Offset = "0x177B9F0", VA = "0x177B9F0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20008A1")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20008A2")]
		public enum ContactTest
		{
			[Token(Token = "0x400286B")]
			PerpenTest,
			[Token(Token = "0x400286C")]
			BackwardsPress
		}

		[Token(Token = "0x400285C")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400285D")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC9D0", Offset = "0x8FC9D0")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170006E0")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6003486")]
			[Address(RVA = "0x1A24E38", Offset = "0x1A24E38", VA = "0x1A24E38", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006E1")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6003487")]
			[Address(RVA = "0x1A24E40", Offset = "0x1A24E40", VA = "0x1A24E40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170006E2")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6003488")]
			[Address(RVA = "0x1A24E4C", Offset = "0x1A24E4C", VA = "0x1A24E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C4B4", Offset = "0x90C4B4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6003489")]
			[Address(RVA = "0x1A24E54", Offset = "0x1A24E54", VA = "0x1A24E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C4C4", Offset = "0x90C4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x600348A")]
		[Address(RVA = "0x1A24E5C", Offset = "0x1A24E5C", VA = "0x1A24E5C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600348B")]
		[Address(RVA = "0x1A24F70", Offset = "0x1A24F70", VA = "0x1A24F70")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600348C")]
		[Address(RVA = "0x1A25188", Offset = "0x1A25188", VA = "0x1A25188", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600348D")]
		[Address(RVA = "0x1A2573C", Offset = "0x1A2573C", VA = "0x1A2573C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600348E")]
		[Address(RVA = "0x1A257E8", Offset = "0x1A257E8", VA = "0x1A257E8")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x600348F")]
		[Address(RVA = "0x1A25654", Offset = "0x1A25654", VA = "0x1A25654")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6003490")]
		[Address(RVA = "0x1A258F0", Offset = "0x1A258F0", VA = "0x1A258F0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6003491")]
		[Address(RVA = "0x1A25974", Offset = "0x1A25974", VA = "0x1A25974")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6003492")]
		[Address(RVA = "0x1A25A00", Offset = "0x1A25A00", VA = "0x1A25A00")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20008A3")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FC9F0", Offset = "0x8FC9F0")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCA00", Offset = "0x8FCA00")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170006E3")]
		public Collider Collider
		{
			[Token(Token = "0x6003493")]
			[Address(RVA = "0x1A25FE0", Offset = "0x1A25FE0", VA = "0x1A25FE0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C4D4", Offset = "0x90C4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003494")]
			[Address(RVA = "0x1A25FE8", Offset = "0x1A25FE8", VA = "0x1A25FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C4E4", Offset = "0x90C4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E4")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6003495")]
			[Address(RVA = "0x1A25FF0", Offset = "0x1A25FF0", VA = "0x1A25FF0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C4F4", Offset = "0x90C4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003496")]
			[Address(RVA = "0x1A25FF8", Offset = "0x1A25FF8", VA = "0x1A25FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C504", Offset = "0x90C504")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6003497")]
			[Address(RVA = "0x1A26000", Offset = "0x1A26000", VA = "0x1A26000", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6003498")]
		[Address(RVA = "0x1A26050", Offset = "0x1A26050", VA = "0x1A26050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003499")]
		[Address(RVA = "0x1A260E4", Offset = "0x1A260E4", VA = "0x1A260E4")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20008A4")]
	public interface ColliderZone
	{
		[Token(Token = "0x170006E6")]
		Collider Collider
		{
			[Token(Token = "0x600349A")]
			get;
		}

		[Token(Token = "0x170006E7")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600349B")]
			get;
		}

		[Token(Token = "0x170006E8")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600349C")]
			get;
		}
	}
	[Token(Token = "0x20008A5")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600349D")]
		[Address(RVA = "0x1A250D0", Offset = "0x1A250D0", VA = "0x1A250D0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20008A6")]
	public enum InteractionType
	{
		[Token(Token = "0x4002875")]
		Enter,
		[Token(Token = "0x4002876")]
		Stay,
		[Token(Token = "0x4002877")]
		Exit
	}
	[Token(Token = "0x20008A7")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20008A8")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002889")]
			Mesh,
			[Token(Token = "0x400288A")]
			Skeleton,
			[Token(Token = "0x400288B")]
			Both
		}

		[Token(Token = "0x20008A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0B74", Offset = "0x8F0B74")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170006F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034BF")]
				[Address(RVA = "0x15F5F10", Offset = "0x15F5F10", VA = "0x15F5F10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C1")]
				[Address(RVA = "0x15F5F58", Offset = "0x15F5F58", VA = "0x15F5F58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034BC")]
			[Address(RVA = "0x15F5C7C", Offset = "0x15F5C7C", VA = "0x15F5C7C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60034BD")]
			[Address(RVA = "0x15F5CA8", Offset = "0x15F5CA8", VA = "0x15F5CA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034BE")]
			[Address(RVA = "0x15F5CAC", Offset = "0x15F5CAC", VA = "0x15F5CAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034C0")]
			[Address(RVA = "0x15F5F18", Offset = "0x15F5F18", VA = "0x15F5F18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002878")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCA30", Offset = "0x8FCA30")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170006E9")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600349E")]
			[Address(RVA = "0x194758C", Offset = "0x194758C", VA = "0x194758C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600349F")]
			[Address(RVA = "0x19475C4", Offset = "0x19475C4", VA = "0x19475C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EA")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60034A0")]
			[Address(RVA = "0x1947634", Offset = "0x1947634", VA = "0x1947634")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034A1")]
			[Address(RVA = "0x194766C", Offset = "0x194766C", VA = "0x194766C")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EB")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60034A2")]
			[Address(RVA = "0x19476DC", Offset = "0x19476DC", VA = "0x19476DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034A3")]
			[Address(RVA = "0x1947714", Offset = "0x1947714", VA = "0x1947714")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EC")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60034A4")]
			[Address(RVA = "0x1947784", Offset = "0x1947784", VA = "0x1947784")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034A5")]
			[Address(RVA = "0x19477BC", Offset = "0x19477BC", VA = "0x19477BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170006ED")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60034A6")]
			[Address(RVA = "0x194782C", Offset = "0x194782C", VA = "0x194782C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034A7")]
			[Address(RVA = "0x1947864", Offset = "0x1947864", VA = "0x1947864")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EE")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60034A8")]
			[Address(RVA = "0x19478D4", Offset = "0x19478D4", VA = "0x19478D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034A9")]
			[Address(RVA = "0x1947908", Offset = "0x1947908", VA = "0x1947908")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EF")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60034AA")]
			[Address(RVA = "0x1947974", Offset = "0x1947974", VA = "0x1947974")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034AB")]
			[Address(RVA = "0x19479A8", Offset = "0x19479A8", VA = "0x19479A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F0")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60034AC")]
			[Address(RVA = "0x1947A14", Offset = "0x1947A14", VA = "0x1947A14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034AD")]
			[Address(RVA = "0x1947A48", Offset = "0x1947A48", VA = "0x1947A48")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F1")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60034AE")]
			[Address(RVA = "0x1947AB4", Offset = "0x1947AB4", VA = "0x1947AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034AF")]
			[Address(RVA = "0x1947AE8", Offset = "0x1947AE8", VA = "0x1947AE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F2")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60034B0")]
			[Address(RVA = "0x1947B54", Offset = "0x1947B54", VA = "0x1947B54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034B1")]
			[Address(RVA = "0x1947B88", Offset = "0x1947B88", VA = "0x1947B88")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F3")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60034B2")]
			[Address(RVA = "0x1947BF4", Offset = "0x1947BF4", VA = "0x1947BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C514", Offset = "0x90C514")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034B3")]
			[Address(RVA = "0x1947C40", Offset = "0x1947C40", VA = "0x1947C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C524", Offset = "0x90C524")]
			private set
			{
			}
		}

		[Token(Token = "0x60034B4")]
		[Address(RVA = "0x1947C94", Offset = "0x1947C94", VA = "0x1947C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034B5")]
		[Address(RVA = "0x1948068", Offset = "0x1948068", VA = "0x1948068")]
		private void Update()
		{
		}

		[Token(Token = "0x60034B6")]
		[Address(RVA = "0x1947FF0", Offset = "0x1947FF0", VA = "0x1947FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C534", Offset = "0x90C534")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60034B7")]
		[Address(RVA = "0x19480F0", Offset = "0x19480F0", VA = "0x19480F0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60034B8")]
		[Address(RVA = "0x19481D4", Offset = "0x19481D4", VA = "0x19481D4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60034B9")]
		[Address(RVA = "0x19483B4", Offset = "0x19483B4", VA = "0x19483B4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60034BA")]
		[Address(RVA = "0x19485F0", Offset = "0x19485F0", VA = "0x19485F0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60034BB")]
		[Address(RVA = "0x194877C", Offset = "0x194877C", VA = "0x194877C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20008AA")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008AB")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60034D3")]
			[Address(RVA = "0x16AE2CC", Offset = "0x16AE2CC", VA = "0x16AE2CC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170006F6")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60034C2")]
			[Address(RVA = "0x16D53F0", Offset = "0x16D53F0", VA = "0x16D53F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F7")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60034C3")]
			[Address(RVA = "0x16D53F8", Offset = "0x16D53F8", VA = "0x16D53F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F8")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60034C4")]
			[Address(RVA = "0x16D5400", Offset = "0x16D5400", VA = "0x16D5400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F9")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60034C5")]
			[Address(RVA = "0x16D5408", Offset = "0x16D5408", VA = "0x16D5408", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60034C6")]
			[Address(RVA = "0x16D5410", Offset = "0x16D5410", VA = "0x16D5410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C5E4", Offset = "0x90C5E4")]
			add
			{
			}
			[Token(Token = "0x60034C7")]
			[Address(RVA = "0x16D54B0", Offset = "0x16D54B0", VA = "0x16D54B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C5F4", Offset = "0x90C5F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60034C9")]
			[Address(RVA = "0x16D55C0", Offset = "0x16D55C0", VA = "0x16D55C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C604", Offset = "0x90C604")]
			add
			{
			}
			[Token(Token = "0x60034CA")]
			[Address(RVA = "0x16D5660", Offset = "0x16D5660", VA = "0x16D5660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C614", Offset = "0x90C614")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60034CC")]
			[Address(RVA = "0x16D5770", Offset = "0x16D5770", VA = "0x16D5770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C624", Offset = "0x90C624")]
			add
			{
			}
			[Token(Token = "0x60034CD")]
			[Address(RVA = "0x16D5810", Offset = "0x16D5810", VA = "0x16D5810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C634", Offset = "0x90C634")]
			remove
			{
			}
		}

		[Token(Token = "0x60034C8")]
		[Address(RVA = "0x16D5550", Offset = "0x16D5550", VA = "0x16D5550", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034CB")]
		[Address(RVA = "0x16D5700", Offset = "0x16D5700", VA = "0x16D5700", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034CE")]
		[Address(RVA = "0x16D58B0", Offset = "0x16D58B0", VA = "0x16D58B0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034CF")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60034D0")]
		[Address(RVA = "0x16D5920", Offset = "0x16D5920", VA = "0x16D5920", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60034D1")]
		[Address(RVA = "0x16D5A4C", Offset = "0x16D5A4C", VA = "0x16D5A4C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60034D2")]
		[Address(RVA = "0x16D5B78", Offset = "0x16D5B78", VA = "0x16D5B78")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20008AC")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002897")]
		None,
		[Token(Token = "0x4002898")]
		Proximity,
		[Token(Token = "0x4002899")]
		Contact,
		[Token(Token = "0x400289A")]
		Action
	}
	[Token(Token = "0x20008AD")]
	public enum InteractableState
	{
		[Token(Token = "0x400289C")]
		Default,
		[Token(Token = "0x400289D")]
		ProximityState,
		[Token(Token = "0x400289E")]
		ContactState,
		[Token(Token = "0x400289F")]
		ActionState
	}
	[Token(Token = "0x20008AE")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60034D4")]
		[Address(RVA = "0x16D5CD0", Offset = "0x16D5CD0", VA = "0x16D5CD0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20008AF")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170006FA")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60034D5")]
			[Address(RVA = "0x16D5BD8", Offset = "0x16D5BD8", VA = "0x16D5BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60034D6")]
		[Address(RVA = "0x16D5980", Offset = "0x16D5980", VA = "0x16D5980")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60034D7")]
		[Address(RVA = "0x16D5AAC", Offset = "0x16D5AAC", VA = "0x16D5AAC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60034D8")]
		[Address(RVA = "0x16D5C3C", Offset = "0x16D5C3C", VA = "0x16D5C3C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20008B0")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20008B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0B84", Offset = "0x8F0B84")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40028AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40028AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40028AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170006FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034E2")]
				[Address(RVA = "0x16AE830", Offset = "0x16AE830", VA = "0x16AE830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034E4")]
				[Address(RVA = "0x16AE878", Offset = "0x16AE878", VA = "0x16AE878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034DE")]
			[Address(RVA = "0x16AE318", Offset = "0x16AE318", VA = "0x16AE318")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60034DF")]
			[Address(RVA = "0x16AE344", Offset = "0x16AE344", VA = "0x16AE344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034E0")]
			[Address(RVA = "0x16AE3B4", Offset = "0x16AE3B4", VA = "0x16AE3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E1")]
			[Address(RVA = "0x16AE360", Offset = "0x16AE360", VA = "0x16AE360")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60034E3")]
			[Address(RVA = "0x16AE838", Offset = "0x16AE838", VA = "0x16AE838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60034DA")]
		[Address(RVA = "0x16D6A54", Offset = "0x16D6A54", VA = "0x16D6A54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034DB")]
		[Address(RVA = "0x16D6AD0", Offset = "0x16D6AD0", VA = "0x16D6AD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C644", Offset = "0x90C644")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60034DC")]
		[Address(RVA = "0x16D6B70", Offset = "0x16D6B70", VA = "0x16D6B70")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60034DD")]
		[Address(RVA = "0x16D6C58", Offset = "0x16D6C58", VA = "0x16D6C58")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20008B2")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170006FD")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60034E5")]
			[Address(RVA = "0x16D6C60", Offset = "0x16D6C60", VA = "0x16D6C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60034E6")]
		[Address(RVA = "0x16D6DE0", Offset = "0x16D6DE0", VA = "0x16D6DE0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60034E7")]
		[Address(RVA = "0x16D6E88", Offset = "0x16D6E88", VA = "0x16D6E88")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60034E8")]
		[Address(RVA = "0x16D6F30", Offset = "0x16D6F30", VA = "0x16D6F30")]
		private void Update()
		{
		}

		[Token(Token = "0x60034E9")]
		[Address(RVA = "0x16D71F8", Offset = "0x16D71F8", VA = "0x16D71F8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60034EA")]
		[Address(RVA = "0x16D7240", Offset = "0x16D7240", VA = "0x16D7240")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60034EB")]
		[Address(RVA = "0x16D74F0", Offset = "0x16D74F0", VA = "0x16D74F0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60034EC")]
		[Address(RVA = "0x16D763C", Offset = "0x16D763C", VA = "0x16D763C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20008B3")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20008B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0B94", Offset = "0x8F0B94")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000702")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034FE")]
				[Address(RVA = "0x15F31B4", Offset = "0x15F31B4", VA = "0x15F31B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000703")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003500")]
				[Address(RVA = "0x15F31FC", Offset = "0x15F31FC", VA = "0x15F31FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034FB")]
			[Address(RVA = "0x15F2D80", Offset = "0x15F2D80", VA = "0x15F2D80")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60034FC")]
			[Address(RVA = "0x15F2DAC", Offset = "0x15F2DAC", VA = "0x15F2DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034FD")]
			[Address(RVA = "0x15F2DB0", Offset = "0x15F2DB0", VA = "0x15F2DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034FF")]
			[Address(RVA = "0x15F31BC", Offset = "0x15F31BC", VA = "0x15F31BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028B8")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170006FE")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60034ED")]
			[Address(RVA = "0x1751BFC", Offset = "0x1751BFC", VA = "0x1751BFC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170006FF")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60034EE")]
			[Address(RVA = "0x1751C04", Offset = "0x1751C04", VA = "0x1751C04", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000700")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60034EF")]
			[Address(RVA = "0x1751C0C", Offset = "0x1751C0C", VA = "0x1751C0C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000701")]
		public override bool EnableState
		{
			[Token(Token = "0x60034F0")]
			[Address(RVA = "0x1751C14", Offset = "0x1751C14", VA = "0x1751C14", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034F1")]
			[Address(RVA = "0x1751C40", Offset = "0x1751C40", VA = "0x1751C40", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60034F2")]
		[Address(RVA = "0x1751C7C", Offset = "0x1751C7C", VA = "0x1751C7C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60034F3")]
		[Address(RVA = "0x1751D34", Offset = "0x1751D34", VA = "0x1751D34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C6F4", Offset = "0x90C6F4")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60034F4")]
		[Address(RVA = "0x1751DAC", Offset = "0x1751DAC", VA = "0x1751DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60034F5")]
		[Address(RVA = "0x175204C", Offset = "0x175204C", VA = "0x175204C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60034F6")]
		[Address(RVA = "0x17521D8", Offset = "0x17521D8", VA = "0x17521D8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60034F7")]
		[Address(RVA = "0x17522D0", Offset = "0x17522D0", VA = "0x17522D0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60034F8")]
		[Address(RVA = "0x17525C8", Offset = "0x17525C8", VA = "0x17525C8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60034F9")]
		[Address(RVA = "0x17525CC", Offset = "0x17525CC", VA = "0x17525CC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60034FA")]
		[Address(RVA = "0x17525D0", Offset = "0x17525D0", VA = "0x17525D0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20008B5")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCAC0", Offset = "0x8FCAC0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCAD0", Offset = "0x8FCAD0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCAE0", Offset = "0x8FCAE0")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000704")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6003501")]
			[Address(RVA = "0x189EEF8", Offset = "0x189EEF8", VA = "0x189EEF8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7A4", Offset = "0x90C7A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003502")]
			[Address(RVA = "0x189EF00", Offset = "0x189EF00", VA = "0x189EF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7B4", Offset = "0x90C7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000705")]
		public bool EnableState
		{
			[Token(Token = "0x6003503")]
			[Address(RVA = "0x189EF08", Offset = "0x189EF08", VA = "0x189EF08", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003504")]
			[Address(RVA = "0x189EF24", Offset = "0x189EF24", VA = "0x189EF24", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000706")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6003505")]
			[Address(RVA = "0x189EF44", Offset = "0x189EF44", VA = "0x189EF44", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7C4", Offset = "0x90C7C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003506")]
			[Address(RVA = "0x189EF4C", Offset = "0x189EF4C", VA = "0x189EF4C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7D4", Offset = "0x90C7D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000707")]
		public float SphereRadius
		{
			[Token(Token = "0x6003507")]
			[Address(RVA = "0x189EF58", Offset = "0x189EF58", VA = "0x189EF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7E4", Offset = "0x90C7E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003508")]
			[Address(RVA = "0x189EF60", Offset = "0x189EF60", VA = "0x189EF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C7F4", Offset = "0x90C7F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6003509")]
		[Address(RVA = "0x189EF68", Offset = "0x189EF68", VA = "0x189EF68")]
		private void Awake()
		{
		}

		[Token(Token = "0x600350A")]
		[Address(RVA = "0x189EFB0", Offset = "0x189EFB0", VA = "0x189EFB0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600350B")]
		[Address(RVA = "0x189EFB4", Offset = "0x189EFB4", VA = "0x189EFB4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20008B6")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40028CB")]
		None = 0,
		[Token(Token = "0x40028CC")]
		Ray = 1,
		[Token(Token = "0x40028CD")]
		Poke = 4,
		[Token(Token = "0x40028CE")]
		All = -1
	}
	[Token(Token = "0x20008B7")]
	public enum ToolInputState
	{
		[Token(Token = "0x40028D0")]
		Inactive,
		[Token(Token = "0x40028D1")]
		PrimaryInputDown,
		[Token(Token = "0x40028D2")]
		PrimaryInputDownStay,
		[Token(Token = "0x40028D3")]
		PrimaryInputUp
	}
	[Token(Token = "0x20008B8")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600350C")]
		[Address(RVA = "0x16D5B80", Offset = "0x16D5B80", VA = "0x16D5B80")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20008B9")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCAF0", Offset = "0x8FCAF0")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCB00", Offset = "0x8FCB00")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCB10", Offset = "0x8FCB10")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000708")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600350D")]
			[Address(RVA = "0x16D5D94", Offset = "0x16D5D94", VA = "0x16D5D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000709")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600350E")]
			[Address(RVA = "0x16D5D9C", Offset = "0x16D5D9C", VA = "0x16D5D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C804", Offset = "0x90C804")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600350F")]
			[Address(RVA = "0x16D5DA4", Offset = "0x16D5DA4", VA = "0x16D5DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C814", Offset = "0x90C814")]
			set
			{
			}
		}

		[Token(Token = "0x1700070A")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6003510")]
			get;
		}

		[Token(Token = "0x1700070B")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6003511")]
			get;
		}

		[Token(Token = "0x1700070C")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6003512")]
			get;
		}

		[Token(Token = "0x1700070D")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6003513")]
			[Address(RVA = "0x16D5DB0", Offset = "0x16D5DB0", VA = "0x16D5DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C824", Offset = "0x90C824")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003514")]
			[Address(RVA = "0x16D5DBC", Offset = "0x16D5DBC", VA = "0x16D5DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C834", Offset = "0x90C834")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070E")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6003515")]
			[Address(RVA = "0x16D5DC8", Offset = "0x16D5DC8", VA = "0x16D5DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C844", Offset = "0x90C844")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003516")]
			[Address(RVA = "0x16D5DD4", Offset = "0x16D5DD4", VA = "0x16D5DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C854", Offset = "0x90C854")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070F")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600351B")]
			get;
			[Token(Token = "0x600351C")]
			set;
		}

		[Token(Token = "0x6003517")]
		[Address(RVA = "0x16D5DE0", Offset = "0x16D5DE0", VA = "0x16D5DE0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6003518")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6003519")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600351A")]
		public abstract void DeFocus();

		[Token(Token = "0x600351D")]
		public abstract void Initialize();

		[Token(Token = "0x600351E")]
		[Address(RVA = "0x16D5DE8", Offset = "0x16D5DE8", VA = "0x16D5DE8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600351F")]
		[Address(RVA = "0x16D5E34", Offset = "0x16D5E34", VA = "0x16D5E34")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6003520")]
		[Address(RVA = "0x16D5E88", Offset = "0x16D5E88", VA = "0x16D5E88", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6003521")]
		[Address(RVA = "0x16D6138", Offset = "0x16D6138", VA = "0x16D6138", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6003522")]
		[Address(RVA = "0x16D68C4", Offset = "0x16D68C4", VA = "0x16D68C4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20008BA")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000710")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6003523")]
			get;
		}

		[Token(Token = "0x17000711")]
		bool EnableState
		{
			[Token(Token = "0x6003525")]
			get;
			[Token(Token = "0x6003526")]
			set;
		}

		[Token(Token = "0x17000712")]
		bool ToolActivateState
		{
			[Token(Token = "0x6003527")]
			get;
			[Token(Token = "0x6003528")]
			set;
		}

		[Token(Token = "0x6003524")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20008BB")]
	public class PinchStateModule
	{
		[Token(Token = "0x20008BC")]
		private enum PinchState
		{
			[Token(Token = "0x40028E4")]
			None,
			[Token(Token = "0x40028E5")]
			PinchDown,
			[Token(Token = "0x40028E6")]
			PinchStay,
			[Token(Token = "0x40028E7")]
			PinchUp
		}

		[Token(Token = "0x40028E0")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000713")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6003529")]
			[Address(RVA = "0x1910388", Offset = "0x1910388", VA = "0x1910388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000714")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600352A")]
			[Address(RVA = "0x1910410", Offset = "0x1910410", VA = "0x1910410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000715")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600352B")]
			[Address(RVA = "0x1910498", Offset = "0x1910498", VA = "0x1910498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600352C")]
		[Address(RVA = "0x1910520", Offset = "0x1910520", VA = "0x1910520")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600352D")]
		[Address(RVA = "0x1910554", Offset = "0x1910554", VA = "0x1910554")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20008BD")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40028E8")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40028E9")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40028EA")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40028EB")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40028EC")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FCB30", Offset = "0x8FCB30")]
		private float _coneAngleDegrees;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000716")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600352E")]
			[Address(RVA = "0x1931EA0", Offset = "0x1931EA0", VA = "0x1931EA0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000717")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600352F")]
			[Address(RVA = "0x1931EA8", Offset = "0x1931EA8", VA = "0x1931EA8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000718")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6003530")]
			[Address(RVA = "0x1931F1C", Offset = "0x1931F1C", VA = "0x1931F1C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000719")]
		public override bool EnableState
		{
			[Token(Token = "0x6003531")]
			[Address(RVA = "0x1931F24", Offset = "0x1931F24", VA = "0x1931F24", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003532")]
			[Address(RVA = "0x1931F68", Offset = "0x1931F68", VA = "0x1931F68", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6003533")]
		[Address(RVA = "0x1931FDC", Offset = "0x1931FDC", VA = "0x1931FDC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6003534")]
		[Address(RVA = "0x1932044", Offset = "0x1932044", VA = "0x1932044")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003535")]
		[Address(RVA = "0x19320E8", Offset = "0x19320E8", VA = "0x19320E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003536")]
		[Address(RVA = "0x19323AC", Offset = "0x19323AC", VA = "0x19323AC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003537")]
		[Address(RVA = "0x1932434", Offset = "0x1932434", VA = "0x1932434", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6003538")]
		[Address(RVA = "0x1932804", Offset = "0x1932804", VA = "0x1932804")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6003539")]
		[Address(RVA = "0x1932914", Offset = "0x1932914", VA = "0x1932914")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600353A")]
		[Address(RVA = "0x1932A38", Offset = "0x1932A38", VA = "0x1932A38")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600353B")]
		[Address(RVA = "0x1932D3C", Offset = "0x1932D3C", VA = "0x1932D3C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600353C")]
		[Address(RVA = "0x19330D0", Offset = "0x19330D0", VA = "0x19330D0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600353D")]
		[Address(RVA = "0x19331B8", Offset = "0x19331B8", VA = "0x19331B8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600353E")]
		[Address(RVA = "0x19331F4", Offset = "0x19331F4", VA = "0x19331F4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20008BE")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40028F8")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40028F9")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCBA4", Offset = "0x8FCBA4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700071A")]
		public bool EnableState
		{
			[Token(Token = "0x600353F")]
			[Address(RVA = "0x1931F4C", Offset = "0x1931F4C", VA = "0x1931F4C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003540")]
			[Address(RVA = "0x1931F84", Offset = "0x1931F84", VA = "0x1931F84", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700071B")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6003541")]
			[Address(RVA = "0x19332EC", Offset = "0x19332EC", VA = "0x19332EC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003542")]
			[Address(RVA = "0x1932370", Offset = "0x1932370", VA = "0x1932370", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700071C")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6003544")]
			[Address(RVA = "0x193354C", Offset = "0x193354C", VA = "0x193354C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C864", Offset = "0x90C864")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003545")]
			[Address(RVA = "0x1933554", Offset = "0x1933554", VA = "0x1933554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C874", Offset = "0x90C874")]
			set
			{
			}
		}

		[Token(Token = "0x6003543")]
		[Address(RVA = "0x19332F4", Offset = "0x19332F4", VA = "0x19332F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003546")]
		[Address(RVA = "0x193310C", Offset = "0x193310C", VA = "0x193310C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6003547")]
		[Address(RVA = "0x193355C", Offset = "0x193355C", VA = "0x193355C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003548")]
		[Address(RVA = "0x19337D0", Offset = "0x19337D0", VA = "0x19337D0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003549")]
		[Address(RVA = "0x19338C0", Offset = "0x19338C0", VA = "0x19338C0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20008BF")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700071D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600354A")]
			[Address(RVA = "0x173E34C", Offset = "0x173E34C", VA = "0x173E34C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600354B")]
			[Address(RVA = "0x173E354", Offset = "0x173E354", VA = "0x173E354")]
			set
			{
			}
		}

		[Token(Token = "0x1700071E")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600354C")]
			[Address(RVA = "0x173E3DC", Offset = "0x173E3DC", VA = "0x173E3DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600354D")]
			[Address(RVA = "0x173E3E4", Offset = "0x173E3E4", VA = "0x173E3E4")]
			set
			{
			}
		}

		[Token(Token = "0x600354E")]
		[Address(RVA = "0x173E450", Offset = "0x173E450", VA = "0x173E450")]
		private void Start()
		{
		}

		[Token(Token = "0x600354F")]
		[Address(RVA = "0x173E714", Offset = "0x173E714", VA = "0x173E714")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6003550")]
		[Address(RVA = "0x173E724", Offset = "0x173E724", VA = "0x173E724")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6003551")]
		[Address(RVA = "0x173E734", Offset = "0x173E734", VA = "0x173E734")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20008C0")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6003552")]
		[Address(RVA = "0x1A32DE0", Offset = "0x1A32DE0", VA = "0x1A32DE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003553")]
		[Address(RVA = "0x1A32DE4", Offset = "0x1A32DE4", VA = "0x1A32DE4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003554")]
		[Address(RVA = "0x1A32E1C", Offset = "0x1A32E1C", VA = "0x1A32E1C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003555")]
		[Address(RVA = "0x1A32E54", Offset = "0x1A32E54", VA = "0x1A32E54")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003556")]
		[Address(RVA = "0x1A32E8C", Offset = "0x1A32E8C", VA = "0x1A32E8C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003557")]
		[Address(RVA = "0x1A32EC4", Offset = "0x1A32EC4", VA = "0x1A32EC4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003558")]
		[Address(RVA = "0x1A32EFC", Offset = "0x1A32EFC", VA = "0x1A32EFC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003559")]
		[Address(RVA = "0x1A32F34", Offset = "0x1A32F34", VA = "0x1A32F34")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600355A")]
		[Address(RVA = "0x1A32FA8", Offset = "0x1A32FA8", VA = "0x1A32FA8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600355B")]
		[Address(RVA = "0x1A33018", Offset = "0x1A33018", VA = "0x1A33018")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20008C1")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600355C")]
		[Address(RVA = "0x1A33DC8", Offset = "0x1A33DC8", VA = "0x1A33DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600355D")]
		[Address(RVA = "0x1A33DCC", Offset = "0x1A33DCC", VA = "0x1A33DCC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600355E")]
		[Address(RVA = "0x1A32FDC", Offset = "0x1A32FDC", VA = "0x1A32FDC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600355F")]
		[Address(RVA = "0x1A33E0C", Offset = "0x1A33E0C", VA = "0x1A33E0C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20008C2")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20008C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0BB4", Offset = "0x8F0BB4")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700071F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003568")]
				[Address(RVA = "0x16BA9A4", Offset = "0x16BA9A4", VA = "0x16BA9A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000720")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600356A")]
				[Address(RVA = "0x16BA9EC", Offset = "0x16BA9EC", VA = "0x16BA9EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003565")]
			[Address(RVA = "0x16BA7B8", Offset = "0x16BA7B8", VA = "0x16BA7B8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003566")]
			[Address(RVA = "0x16BA7E4", Offset = "0x16BA7E4", VA = "0x16BA7E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003567")]
			[Address(RVA = "0x16BA7E8", Offset = "0x16BA7E8", VA = "0x16BA7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003569")]
			[Address(RVA = "0x16BA9AC", Offset = "0x16BA9AC", VA = "0x16BA9AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002909")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400290A")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6003560")]
		[Address(RVA = "0x15A53A0", Offset = "0x15A53A0", VA = "0x15A53A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003561")]
		[Address(RVA = "0x15A544C", Offset = "0x15A544C", VA = "0x15A544C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003562")]
		[Address(RVA = "0x15A569C", Offset = "0x15A569C", VA = "0x15A569C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003563")]
		[Address(RVA = "0x15A5624", Offset = "0x15A5624", VA = "0x15A5624")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C884", Offset = "0x90C884")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6003564")]
		[Address(RVA = "0x15A56E8", Offset = "0x15A56E8", VA = "0x15A56E8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20008C4")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20008C5")]
		public enum SelectionState
		{
			[Token(Token = "0x4002920")]
			Off,
			[Token(Token = "0x4002921")]
			Selected,
			[Token(Token = "0x4002922")]
			Highlighted
		}

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000721")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600356B")]
			[Address(RVA = "0x15B92A0", Offset = "0x15B92A0", VA = "0x15B92A0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600356C")]
			[Address(RVA = "0x15B92A8", Offset = "0x15B92A8", VA = "0x15B92A8")]
			set
			{
			}
		}

		[Token(Token = "0x600356D")]
		[Address(RVA = "0x15B942C", Offset = "0x15B942C", VA = "0x15B942C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600356E")]
		[Address(RVA = "0x15B9630", Offset = "0x15B9630", VA = "0x15B9630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600356F")]
		[Address(RVA = "0x15B9330", Offset = "0x15B9330", VA = "0x15B9330")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6003570")]
		[Address(RVA = "0x15B971C", Offset = "0x15B971C", VA = "0x15B971C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20008C6")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20008C7")]
		public enum SegmentType
		{
			[Token(Token = "0x4002931")]
			Straight,
			[Token(Token = "0x4002932")]
			LeftTurn,
			[Token(Token = "0x4002933")]
			RightTurn,
			[Token(Token = "0x4002934")]
			Switch
		}

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4002929")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400292A")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCC84", Offset = "0x8FCC84")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000722")]
		public float StartDistance
		{
			[Token(Token = "0x6003572")]
			[Address(RVA = "0x178D0D4", Offset = "0x178D0D4", VA = "0x178D0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C934", Offset = "0x90C934")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003573")]
			[Address(RVA = "0x178D0DC", Offset = "0x178D0DC", VA = "0x178D0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90C944", Offset = "0x90C944")]
			set
			{
			}
		}

		[Token(Token = "0x17000723")]
		public float GridSize
		{
			[Token(Token = "0x6003574")]
			[Address(RVA = "0x178D0E4", Offset = "0x178D0E4", VA = "0x178D0E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003575")]
			[Address(RVA = "0x178D0EC", Offset = "0x178D0EC", VA = "0x178D0EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000724")]
		public int SubDivCount
		{
			[Token(Token = "0x6003576")]
			[Address(RVA = "0x178D0F4", Offset = "0x178D0F4", VA = "0x178D0F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003577")]
			[Address(RVA = "0x178D0FC", Offset = "0x178D0FC", VA = "0x178D0FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000725")]
		public SegmentType Type
		{
			[Token(Token = "0x6003578")]
			[Address(RVA = "0x178D104", Offset = "0x178D104", VA = "0x178D104")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000726")]
		public Pose EndPose
		{
			[Token(Token = "0x6003579")]
			[Address(RVA = "0x178D10C", Offset = "0x178D10C", VA = "0x178D10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000727")]
		public float Radius
		{
			[Token(Token = "0x600357A")]
			[Address(RVA = "0x178D468", Offset = "0x178D468", VA = "0x178D468")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000728")]
		public float SegmentLength
		{
			[Token(Token = "0x600357C")]
			[Address(RVA = "0x178D174", Offset = "0x178D174", VA = "0x178D174")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600357B")]
		[Address(RVA = "0x178D478", Offset = "0x178D478", VA = "0x178D478")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600357D")]
		[Address(RVA = "0x178D490", Offset = "0x178D490", VA = "0x178D490")]
		private void Awake()
		{
		}

		[Token(Token = "0x600357E")]
		[Address(RVA = "0x178D1B4", Offset = "0x178D1B4", VA = "0x178D1B4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600357F")]
		[Address(RVA = "0x178D494", Offset = "0x178D494", VA = "0x178D494")]
		private void Update()
		{
		}

		[Token(Token = "0x6003580")]
		[Address(RVA = "0x178D498", Offset = "0x178D498", VA = "0x178D498")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003581")]
		[Address(RVA = "0x178D500", Offset = "0x178D500", VA = "0x178D500")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6003582")]
		[Address(RVA = "0x178DDC8", Offset = "0x178DDC8", VA = "0x178DDC8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6003583")]
		[Address(RVA = "0x178E074", Offset = "0x178E074", VA = "0x178E074")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20008C8")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20008C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0BC4", Offset = "0x8F0BC4")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000729")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003592")]
				[Address(RVA = "0x158FEE8", Offset = "0x158FEE8", VA = "0x158FEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003594")]
				[Address(RVA = "0x158FF30", Offset = "0x158FF30", VA = "0x158FF30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600358F")]
			[Address(RVA = "0x158FD44", Offset = "0x158FD44", VA = "0x158FD44")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003590")]
			[Address(RVA = "0x158FD70", Offset = "0x158FD70", VA = "0x158FD70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003591")]
			[Address(RVA = "0x158FD74", Offset = "0x158FD74", VA = "0x158FD74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003593")]
			[Address(RVA = "0x158FEF0", Offset = "0x158FEF0", VA = "0x158FEF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002935")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4002936")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6003584")]
		[Address(RVA = "0x178E144", Offset = "0x178E144", VA = "0x178E144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003585")]
		[Address(RVA = "0x178E200", Offset = "0x178E200", VA = "0x178E200")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003586")]
		[Address(RVA = "0x178E2B0", Offset = "0x178E2B0", VA = "0x178E2B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003587")]
		[Address(RVA = "0x178E428", Offset = "0x178E428", VA = "0x178E428")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003588")]
		[Address(RVA = "0x178E5F0", Offset = "0x178E5F0", VA = "0x178E5F0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6003589")]
		[Address(RVA = "0x178E6D8", Offset = "0x178E6D8", VA = "0x178E6D8")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600358A")]
		[Address(RVA = "0x178E8EC", Offset = "0x178E8EC", VA = "0x178E8EC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600358B")]
		[Address(RVA = "0x178E7EC", Offset = "0x178E7EC", VA = "0x178E7EC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600358C")]
		[Address(RVA = "0x178E800", Offset = "0x178E800", VA = "0x178E800")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600358D")]
		[Address(RVA = "0x178E944", Offset = "0x178E944", VA = "0x178E944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90C954", Offset = "0x90C954")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600358E")]
		[Address(RVA = "0x178E9BC", Offset = "0x178E9BC", VA = "0x178E9BC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20008CA")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700072B")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6003595")]
			[Address(RVA = "0x178EA6C", Offset = "0x178EA6C", VA = "0x178EA6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003596")]
		[Address(RVA = "0x178EA7C", Offset = "0x178EA7C", VA = "0x178EA7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6003597")]
		[Address(RVA = "0x178EA84", Offset = "0x178EA84", VA = "0x178EA84", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6003598")]
		[Address(RVA = "0x178EDC8", Offset = "0x178EDC8", VA = "0x178EDC8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20008CB")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400294E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400294F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCD84", Offset = "0x8FCD84")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700072C")]
		public float Distance
		{
			[Token(Token = "0x6003599")]
			[Address(RVA = "0x178EED8", Offset = "0x178EED8", VA = "0x178EED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA04", Offset = "0x90CA04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600359A")]
			[Address(RVA = "0x178EEE0", Offset = "0x178EEE0", VA = "0x178EEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CA14", Offset = "0x90CA14")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700072D")]
		public float Scale
		{
			[Token(Token = "0x600359B")]
			[Address(RVA = "0x178EEE8", Offset = "0x178EEE8", VA = "0x178EEE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600359C")]
			[Address(RVA = "0x178EEF0", Offset = "0x178EEF0", VA = "0x178EEF0")]
			set
			{
			}
		}

		[Token(Token = "0x600359D")]
		[Address(RVA = "0x178EA80", Offset = "0x178EA80", VA = "0x178EA80", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600359E")]
		[Address(RVA = "0x178EEF8", Offset = "0x178EEF8", VA = "0x178EEF8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600359F")]
		[Address(RVA = "0x178EACC", Offset = "0x178EACC", VA = "0x178EACC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60035A0")]
		[Address(RVA = "0x178ECF0", Offset = "0x178ECF0", VA = "0x178ECF0")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60035A1")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60035A2")]
		[Address(RVA = "0x178EE34", Offset = "0x178EE34", VA = "0x178EE34")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20008CC")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20008CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0BD4", Offset = "0x8F0BD4")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700072E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035B0")]
				[Address(RVA = "0x15901D0", Offset = "0x15901D0", VA = "0x15901D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035B2")]
				[Address(RVA = "0x1590218", Offset = "0x1590218", VA = "0x1590218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035AD")]
			[Address(RVA = "0x158FF38", Offset = "0x158FF38", VA = "0x158FF38")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60035AE")]
			[Address(RVA = "0x158FF64", Offset = "0x158FF64", VA = "0x158FF64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035AF")]
			[Address(RVA = "0x158FF68", Offset = "0x158FF68", VA = "0x158FF68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035B1")]
			[Address(RVA = "0x15901D8", Offset = "0x15901D8", VA = "0x15901D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60035A4")]
		[Address(RVA = "0x178F098", Offset = "0x178F098", VA = "0x178F098")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035A5")]
		[Address(RVA = "0x178F0F8", Offset = "0x178F0F8", VA = "0x178F0F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60035A6")]
		[Address(RVA = "0x178F200", Offset = "0x178F200", VA = "0x178F200")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60035A7")]
		[Address(RVA = "0x178F370", Offset = "0x178F370", VA = "0x178F370")]
		private void Update()
		{
		}

		[Token(Token = "0x60035A8")]
		[Address(RVA = "0x178F260", Offset = "0x178F260", VA = "0x178F260")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60035A9")]
		[Address(RVA = "0x178F44C", Offset = "0x178F44C", VA = "0x178F44C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CA24", Offset = "0x90CA24")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60035AA")]
		[Address(RVA = "0x178F4D4", Offset = "0x178F4D4", VA = "0x178F4D4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60035AB")]
		[Address(RVA = "0x178F580", Offset = "0x178F580", VA = "0x178F580")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60035AC")]
		[Address(RVA = "0x178F5E0", Offset = "0x178F5E0", VA = "0x178F5E0")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20008CE")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20008CF")]
		private enum EngineSoundState
		{
			[Token(Token = "0x400298C")]
			Start,
			[Token(Token = "0x400298D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400298E")]
			Stop
		}

		[Token(Token = "0x20008D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0BE4", Offset = "0x8F0BE4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000730")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035C5")]
				[Address(RVA = "0x1590494", Offset = "0x1590494", VA = "0x1590494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000731")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035C7")]
				[Address(RVA = "0x15904DC", Offset = "0x15904DC", VA = "0x15904DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035C2")]
			[Address(RVA = "0x1590220", Offset = "0x1590220", VA = "0x1590220")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60035C3")]
			[Address(RVA = "0x159024C", Offset = "0x159024C", VA = "0x159024C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035C4")]
			[Address(RVA = "0x1590250", Offset = "0x1590250", VA = "0x1590250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035C6")]
			[Address(RVA = "0x159049C", Offset = "0x159049C", VA = "0x159049C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400296E")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400296F")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4002970")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4002971")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8FCDE4", Offset = "0x8FCDE4")]
		protected float _initialSpeed;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60035B3")]
		[Address(RVA = "0x178F63C", Offset = "0x178F63C", VA = "0x178F63C")]
		private void Start()
		{
		}

		[Token(Token = "0x60035B4")]
		[Address(RVA = "0x178F7A8", Offset = "0x178F7A8", VA = "0x178F7A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60035B5")]
		[Address(RVA = "0x178F7B4", Offset = "0x178F7B4", VA = "0x178F7B4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60035B6")]
		[Address(RVA = "0x178F904", Offset = "0x178F904", VA = "0x178F904")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60035B7")]
		[Address(RVA = "0x178F71C", Offset = "0x178F71C", VA = "0x178F71C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CAD4", Offset = "0x90CAD4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60035B8")]
		[Address(RVA = "0x178F964", Offset = "0x178F964", VA = "0x178F964")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60035B9")]
		[Address(RVA = "0x178F8A0", Offset = "0x178F8A0", VA = "0x178F8A0")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60035BA")]
		[Address(RVA = "0x178FB80", Offset = "0x178FB80", VA = "0x178FB80")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60035BB")]
		[Address(RVA = "0x178FCBC", Offset = "0x178FCBC", VA = "0x178FCBC")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60035BC")]
		[Address(RVA = "0x178FBEC", Offset = "0x178FBEC", VA = "0x178FBEC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60035BD")]
		[Address(RVA = "0x178FD28", Offset = "0x178FD28", VA = "0x178FD28")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60035BE")]
		[Address(RVA = "0x178FD48", Offset = "0x178FD48", VA = "0x178FD48")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60035BF")]
		[Address(RVA = "0x178FDD4", Offset = "0x178FDD4", VA = "0x178FDD4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60035C0")]
		[Address(RVA = "0x178FE8C", Offset = "0x178FE8C", VA = "0x178FE8C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60035C1")]
		[Address(RVA = "0x178FE9C", Offset = "0x178FE9C", VA = "0x178FE9C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20008D1")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000732")]
		public float TrackLength
		{
			[Token(Token = "0x60035C8")]
			[Address(RVA = "0x178FF04", Offset = "0x178FF04", VA = "0x178FF04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60035C9")]
			[Address(RVA = "0x178FF0C", Offset = "0x178FF0C", VA = "0x178FF0C")]
			private set
			{
			}
		}

		[Token(Token = "0x60035CA")]
		[Address(RVA = "0x178FF14", Offset = "0x178FF14", VA = "0x178FF14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035CB")]
		[Address(RVA = "0x178EF78", Offset = "0x178EF78", VA = "0x178EF78")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60035CC")]
		[Address(RVA = "0x178FF18", Offset = "0x178FF18", VA = "0x178FF18")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60035CD")]
		[Address(RVA = "0x179012C", Offset = "0x179012C", VA = "0x179012C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60035CE")]
		[Address(RVA = "0x1790228", Offset = "0x1790228", VA = "0x1790228")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20008D2")]
	public class Pose
	{
		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60035CF")]
		[Address(RVA = "0x19283F4", Offset = "0x19283F4", VA = "0x19283F4")]
		public Pose()
		{
		}

		[Token(Token = "0x60035D0")]
		[Address(RVA = "0x1928438", Offset = "0x1928438", VA = "0x1928438")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20008D3")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20008D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0BF4", Offset = "0x8F0BF4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000734")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035DD")]
				[Address(RVA = "0x1FCB5DC", Offset = "0x1FCB5DC", VA = "0x1FCB5DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000735")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035DF")]
				[Address(RVA = "0x1FCB624", Offset = "0x1FCB624", VA = "0x1FCB624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035DA")]
			[Address(RVA = "0x1FCB40C", Offset = "0x1FCB40C", VA = "0x1FCB40C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60035DB")]
			[Address(RVA = "0x1FCB438", Offset = "0x1FCB438", VA = "0x1FCB438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035DC")]
			[Address(RVA = "0x1FCB43C", Offset = "0x1FCB43C", VA = "0x1FCB43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035DE")]
			[Address(RVA = "0x1FCB5E4", Offset = "0x1FCB5E4", VA = "0x1FCB5E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0C04", Offset = "0x8F0C04")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000736")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035E3")]
				[Address(RVA = "0x1FCB734", Offset = "0x1FCB734", VA = "0x1FCB734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000737")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035E5")]
				[Address(RVA = "0x1FCB77C", Offset = "0x1FCB77C", VA = "0x1FCB77C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035E0")]
			[Address(RVA = "0x1FCB62C", Offset = "0x1FCB62C", VA = "0x1FCB62C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60035E1")]
			[Address(RVA = "0x1FCB658", Offset = "0x1FCB658", VA = "0x1FCB658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035E2")]
			[Address(RVA = "0x1FCB65C", Offset = "0x1FCB65C", VA = "0x1FCB65C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035E4")]
			[Address(RVA = "0x1FCB73C", Offset = "0x1FCB73C", VA = "0x1FCB73C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029A1")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FCFCC", Offset = "0x8FCFCC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000733")]
		public bool IsMoving
		{
			[Token(Token = "0x60035D1")]
			[Address(RVA = "0x19EB738", Offset = "0x19EB738", VA = "0x19EB738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB84", Offset = "0x90CB84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60035D2")]
			[Address(RVA = "0x19EB740", Offset = "0x19EB740", VA = "0x19EB740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CB94", Offset = "0x90CB94")]
			private set
			{
			}
		}

		[Token(Token = "0x60035D3")]
		[Address(RVA = "0x19EB74C", Offset = "0x19EB74C", VA = "0x19EB74C")]
		private void Start()
		{
		}

		[Token(Token = "0x60035D4")]
		[Address(RVA = "0x19EB788", Offset = "0x19EB788", VA = "0x19EB788")]
		private void Update()
		{
		}

		[Token(Token = "0x60035D5")]
		[Address(RVA = "0x19EB86C", Offset = "0x19EB86C", VA = "0x19EB86C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60035D6")]
		[Address(RVA = "0x19EB8E0", Offset = "0x19EB8E0", VA = "0x19EB8E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CBA4", Offset = "0x90CBA4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60035D7")]
		[Address(RVA = "0x19EB968", Offset = "0x19EB968", VA = "0x19EB968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CC04", Offset = "0x90CC04")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60035D8")]
		[Address(RVA = "0x19EBA20", Offset = "0x19EBA20", VA = "0x19EBA20")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60035D9")]
		[Address(RVA = "0x19EBA8C", Offset = "0x19EBA8C", VA = "0x19EBA8C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20008D6")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60035E6")]
		[Address(RVA = "0x19EBA94", Offset = "0x19EBA94", VA = "0x19EBA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035E7")]
		[Address(RVA = "0x19EBB08", Offset = "0x19EBB08", VA = "0x19EBB08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60035E8")]
		[Address(RVA = "0x19EBBEC", Offset = "0x19EBBEC", VA = "0x19EBBEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60035E9")]
		[Address(RVA = "0x19EBD24", Offset = "0x19EBD24", VA = "0x19EBD24")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60035EA")]
		[Address(RVA = "0x19EBDA4", Offset = "0x19EBDA4", VA = "0x19EBDA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60035EB")]
		[Address(RVA = "0x19EBE80", Offset = "0x19EBE80", VA = "0x19EBE80")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20008D7")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40029BE")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40029BF")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40029C0")]
		EUDT_None,
		[Token(Token = "0x40029C1")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20008D8")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20008D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0C14", Offset = "0x8F0C14")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000738")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035FF")]
				[Address(RVA = "0x16B9B28", Offset = "0x16B9B28", VA = "0x16B9B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000739")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003601")]
				[Address(RVA = "0x16B9B70", Offset = "0x16B9B70", VA = "0x16B9B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035FC")]
			[Address(RVA = "0x16B98F8", Offset = "0x16B98F8", VA = "0x16B98F8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60035FD")]
			[Address(RVA = "0x16B9924", Offset = "0x16B9924", VA = "0x16B9924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035FE")]
			[Address(RVA = "0x16B9928", Offset = "0x16B9928", VA = "0x16B9928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003600")]
			[Address(RVA = "0x16B9B30", Offset = "0x16B9B30", VA = "0x16B9B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40029C3")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40029C4")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40029C5")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD00C", Offset = "0x8FD00C")]
		public GameObject mainCamera;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD044", Offset = "0x8FD044")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40029D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60035EC")]
		[Address(RVA = "0x1597EE4", Offset = "0x1597EE4", VA = "0x1597EE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60035ED")]
		[Address(RVA = "0x1598740", Offset = "0x1598740", VA = "0x1598740")]
		private void Update()
		{
		}

		[Token(Token = "0x60035EE")]
		[Address(RVA = "0x1598888", Offset = "0x1598888", VA = "0x1598888")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60035EF")]
		[Address(RVA = "0x15989C4", Offset = "0x15989C4", VA = "0x15989C4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60035F0")]
		[Address(RVA = "0x1598B00", Offset = "0x1598B00", VA = "0x1598B00")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60035F1")]
		[Address(RVA = "0x159885C", Offset = "0x159885C", VA = "0x159885C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60035F2")]
		[Address(RVA = "0x1598BE0", Offset = "0x1598BE0", VA = "0x1598BE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CD04", Offset = "0x90CD04")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60035F3")]
		[Address(RVA = "0x1598C58", Offset = "0x1598C58", VA = "0x1598C58")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60035F4")]
		[Address(RVA = "0x159834C", Offset = "0x159834C", VA = "0x159834C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60035F5")]
		[Address(RVA = "0x1598DAC", Offset = "0x1598DAC", VA = "0x1598DAC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60035F6")]
		[Address(RVA = "0x1598C8C", Offset = "0x1598C8C", VA = "0x1598C8C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60035F7")]
		[Address(RVA = "0x15990C4", Offset = "0x15990C4", VA = "0x15990C4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60035F8")]
		[Address(RVA = "0x15991B4", Offset = "0x15991B4", VA = "0x15991B4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60035F9")]
		[Address(RVA = "0x1599244", Offset = "0x1599244", VA = "0x1599244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD64", Offset = "0x90CD64")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60035FA")]
		[Address(RVA = "0x159929C", Offset = "0x159929C", VA = "0x159929C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD74", Offset = "0x90CD74")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60035FB")]
		[Address(RVA = "0x15992F4", Offset = "0x15992F4", VA = "0x15992F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CD84", Offset = "0x90CD84")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20008DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0C24", Offset = "0x8F0C24")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0C84", Offset = "0x8F0C84")]
		private sealed class <>c
		{
			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600360F")]
			[Address(RVA = "0x15F5A7C", Offset = "0x15F5A7C", VA = "0x15F5A7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003610")]
			[Address(RVA = "0x15F5A84", Offset = "0x15F5A84", VA = "0x15F5A84")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40029DD")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40029DE")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40029DF")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40029E0")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40029E1")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40029E2")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40029E3")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40029E4")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40029E5")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40029E6")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40029E7")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6003602")]
		[Address(RVA = "0x1941D48", Offset = "0x1941D48", VA = "0x1941D48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003603")]
		[Address(RVA = "0x1941DA4", Offset = "0x1941DA4", VA = "0x1941DA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6003604")]
		[Address(RVA = "0x1942238", Offset = "0x1942238", VA = "0x1942238")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003605")]
		[Address(RVA = "0x1942324", Offset = "0x1942324", VA = "0x1942324")]
		private void Update()
		{
		}

		[Token(Token = "0x6003606")]
		[Address(RVA = "0x1942488", Offset = "0x1942488", VA = "0x1942488")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6003607")]
		[Address(RVA = "0x1942790", Offset = "0x1942790", VA = "0x1942790")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003608")]
		[Address(RVA = "0x1942888", Offset = "0x1942888", VA = "0x1942888")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6003609")]
		[Address(RVA = "0x19429E8", Offset = "0x19429E8", VA = "0x19429E8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600360A")]
		[Address(RVA = "0x1942520", Offset = "0x1942520", VA = "0x1942520")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600360B")]
		[Address(RVA = "0x1942574", Offset = "0x1942574", VA = "0x1942574")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600360C")]
		[Address(RVA = "0x19420DC", Offset = "0x19420DC", VA = "0x19420DC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600360D")]
		[Address(RVA = "0x1942B24", Offset = "0x1942B24", VA = "0x1942B24")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20008DC")]
	public enum HandPoseId
	{
		[Token(Token = "0x40029FC")]
		Default,
		[Token(Token = "0x40029FD")]
		Generic,
		[Token(Token = "0x40029FE")]
		PingPongBall,
		[Token(Token = "0x40029FF")]
		Controller
	}
	[Token(Token = "0x20008DD")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700073A")]
		public bool AllowPointing
		{
			[Token(Token = "0x6003611")]
			[Address(RVA = "0x19470E8", Offset = "0x19470E8", VA = "0x19470E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700073B")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6003612")]
			[Address(RVA = "0x19470F0", Offset = "0x19470F0", VA = "0x19470F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700073C")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6003613")]
			[Address(RVA = "0x19470F8", Offset = "0x19470F8", VA = "0x19470F8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6003614")]
		[Address(RVA = "0x1947100", Offset = "0x1947100", VA = "0x1947100")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20008DE")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6003615")]
		[Address(RVA = "0x178C8BC", Offset = "0x178C8BC", VA = "0x178C8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6003616")]
		[Address(RVA = "0x178CBA4", Offset = "0x178CBA4", VA = "0x178CBA4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6003617")]
		[Address(RVA = "0x178CC00", Offset = "0x178CC00", VA = "0x178CC00")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6003618")]
		[Address(RVA = "0x178CC44", Offset = "0x178CC44", VA = "0x178CC44")]
		public TouchController()
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20008DF")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CrowdSpawner> spawners;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] meshAnimationNames;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] otherInfo;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sizeOfCrowd;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int selectedOption;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxSize;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float radius;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float slopeStart;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slopeAmount;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 radiusScaler;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 baseScale;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool randomizeTime;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool showGUI;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string fps;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int previousFrame;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int previousSelection;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int guiOffset;

		[Token(Token = "0x6003619")]
		[Address(RVA = "0x16600D0", Offset = "0x16600D0", VA = "0x16600D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600361A")]
		[Address(RVA = "0x1660A98", Offset = "0x1660A98", VA = "0x1660A98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600361B")]
		[Address(RVA = "0x1660B24", Offset = "0x1660B24", VA = "0x1660B24")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600361C")]
		[Address(RVA = "0x16601B4", Offset = "0x16601B4", VA = "0x16601B4")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x600361D")]
		[Address(RVA = "0x1660BB4", Offset = "0x1660BB4", VA = "0x1660BB4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600361E")]
		[Address(RVA = "0x166140C", Offset = "0x166140C", VA = "0x166140C")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20008E0")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossfade;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float crossfadeDuration;

		[Token(Token = "0x6003620")]
		[Address(RVA = "0x1A9E324", Offset = "0x1A9E324", VA = "0x1A9E324")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003621")]
		[Address(RVA = "0x1A9E470", Offset = "0x1A9E470", VA = "0x1A9E470")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x6003622")]
		[Address(RVA = "0x1A9E5DC", Offset = "0x1A9E5DC", VA = "0x1A9E5DC")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20008E1")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x6003623")]
		[Address(RVA = "0x15A9D80", Offset = "0x15A9D80", VA = "0x15A9D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6003624")]
		[Address(RVA = "0x15A9DDC", Offset = "0x15A9DDC", VA = "0x15A9DDC")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x6003625")]
		[Address(RVA = "0x15A9E6C", Offset = "0x15A9E6C", VA = "0x15A9E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003626")]
		[Address(RVA = "0x15AA0C0", Offset = "0x15AA0C0", VA = "0x15AA0C0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6003627")]
		[Address(RVA = "0x15AA828", Offset = "0x15AA828", VA = "0x15AA828")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20008E2")]
	public interface IMeshAnimation
	{
		[Token(Token = "0x1700073D")]
		string AnimationName
		{
			[Token(Token = "0x6003628")]
			get;
		}

		[Token(Token = "0x1700073E")]
		string[] ExposedTransforms
		{
			[Token(Token = "0x6003629")]
			get;
		}

		[Token(Token = "0x1700073F")]
		MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x600362A")]
			get;
		}

		[Token(Token = "0x17000740")]
		MeshAnimationEvent[] Events
		{
			[Token(Token = "0x600362B")]
			get;
		}

		[Token(Token = "0x17000741")]
		int TotalFrames
		{
			[Token(Token = "0x600362C")]
			get;
		}

		[Token(Token = "0x17000742")]
		float PlaybackSpeed
		{
			[Token(Token = "0x600362D")]
			get;
		}

		[Token(Token = "0x17000743")]
		float Length
		{
			[Token(Token = "0x600362E")]
			get;
		}

		[Token(Token = "0x17000744")]
		WrapMode WrapMode
		{
			[Token(Token = "0x600362F")]
			get;
		}

		[Token(Token = "0x17000745")]
		RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6003630")]
			get;
		}

		[Token(Token = "0x17000746")]
		int FrameSkip
		{
			[Token(Token = "0x6003631")]
			get;
		}

		[Token(Token = "0x17000747")]
		int VertexCount
		{
			[Token(Token = "0x6003632")]
			get;
		}

		[Token(Token = "0x6003633")]
		void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x6003634")]
		void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x6003635")]
		void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x6003636")]
		void Reset();

		[Token(Token = "0x6003637")]
		void FireEvents(GameObject eventReciever, int frame);

		[Token(Token = "0x6003638")]
		MeshFrameDataBase GetNearestFrame(int frame);

		[Token(Token = "0x6003639")]
		float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame);

		[Token(Token = "0x600363A")]
		bool IsName(string name);
	}
	[Token(Token = "0x20008E3")]
	public interface IMeshAnimator
	{
		[Token(Token = "0x17000748")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x600363B")]
			get;
		}

		[Token(Token = "0x17000749")]
		MeshFilter MeshFilter
		{
			[Token(Token = "0x600363C")]
			get;
		}

		[Token(Token = "0x1700074A")]
		IMeshAnimation[] Animations
		{
			[Token(Token = "0x600363D")]
			get;
		}

		[Token(Token = "0x1700074B")]
		float NextTick
		{
			[Token(Token = "0x600363E")]
			get;
		}

		[Token(Token = "0x1700074C")]
		Action<string> OnAnimationFinished
		{
			[Token(Token = "0x600363F")]
			get;
			[Token(Token = "0x6003640")]
			set;
		}

		[Token(Token = "0x1700074D")]
		Action OnFrameUpdated
		{
			[Token(Token = "0x6003641")]
			get;
			[Token(Token = "0x6003642")]
			set;
		}

		[Token(Token = "0x1700074E")]
		Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x6003643")]
			get;
			[Token(Token = "0x6003644")]
			set;
		}

		[Token(Token = "0x6003645")]
		void UpdateTick(float time);

		[Token(Token = "0x6003646")]
		void Play();

		[Token(Token = "0x6003647")]
		void Play(string animationName, float normalizedTime = -1f);

		[Token(Token = "0x6003648")]
		void Play(int animationIndex);

		[Token(Token = "0x6003649")]
		IMeshAnimation GetClip(string animationName);

		[Token(Token = "0x600364A")]
		void SetTime(float time, bool instantUpdate = false);

		[Token(Token = "0x600364B")]
		void SetTimeNormalized(float time, bool instantUpdate = false);

		[Token(Token = "0x600364C")]
		bool IsPlaying();
	}
	[Token(Token = "0x20008E4")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, string> _animationHashes;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _currentAnimationName;

		[Token(Token = "0x600364D")]
		[Address(RVA = "0x1AB3068", Offset = "0x1AB3068", VA = "0x1AB3068", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600364E")]
		[Address(RVA = "0x1AB32BC", Offset = "0x1AB32BC", VA = "0x1AB32BC", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600364F")]
		[Address(RVA = "0x1AB35B8", Offset = "0x1AB35B8", VA = "0x1AB35B8")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Token(Token = "0x20008E5")]
	public struct ExposedTransformCrossfade
	{
		[Token(Token = "0x20008E6")]
		public struct LerpMatrix4x4Job : IJobParallelFor
		{
			[Token(Token = "0x4002A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Matrix4x4> from;

			[Token(Token = "0x4002A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Matrix4x4> to;

			[Token(Token = "0x4002A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Matrix4x4> output;

			[Token(Token = "0x6003653")]
			[Address(RVA = "0x15F1AC8", Offset = "0x15F1AC8", VA = "0x15F1AC8", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int framesNeeded;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int currentFrame;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isFading;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float endTime;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFrameDataBase fromFrame;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFrameDataBase toFrame;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMatrix4x4Job[] exposedTransformJobs;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JobHandle[] exposedTransformJobHandles;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<Matrix4x4> fromMatrix;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<Matrix4x4> toMatrix;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<Matrix4x4>[] outputMatrix;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isReset;

		[Token(Token = "0x6003650")]
		[Address(RVA = "0x174B670", Offset = "0x174B670", VA = "0x174B670")]
		public void Reset(bool destroying)
		{
		}

		[Token(Token = "0x6003651")]
		[Address(RVA = "0x174BA24", Offset = "0x174BA24", VA = "0x174BA24")]
		public void StartCrossfade(MeshFrameDataBase fromFrame, MeshFrameDataBase toFrame)
		{
		}

		[Token(Token = "0x6003652")]
		[Address(RVA = "0x174B6D4", Offset = "0x174B6D4", VA = "0x174B6D4")]
		public void ReturnFrame(bool destroying)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008E7")]
	public abstract class MeshAnimationBase : ScriptableObject, IMeshAnimation
	{
		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD12C", Offset = "0x8FD12C")]
		private int <Mode>k__BackingField;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationName;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float playbackSpeed;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WrapMode wrapMode;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int frameSkip;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int vertexCount;

		[Token(Token = "0x1700074F")]
		[HideInInspector]
		public int Mode
		{
			[Token(Token = "0x6003654")]
			[Address(RVA = "0x1AB4D34", Offset = "0x1AB4D34", VA = "0x1AB4D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDE4", Offset = "0x90CDE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003655")]
			[Address(RVA = "0x1AB4D3C", Offset = "0x1AB4D3C", VA = "0x1AB4D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CDF4", Offset = "0x90CDF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000750")]
		public string AnimationName
		{
			[Token(Token = "0x6003656")]
			[Address(RVA = "0x1AB4D44", Offset = "0x1AB4D44", VA = "0x1AB4D44", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000751")]
		public string[] ExposedTransforms
		{
			[Token(Token = "0x6003657")]
			[Address(RVA = "0x1AB4D4C", Offset = "0x1AB4D4C", VA = "0x1AB4D4C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000752")]
		public abstract MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x6003658")]
			get;
		}

		[Token(Token = "0x17000753")]
		public MeshAnimationEvent[] Events
		{
			[Token(Token = "0x6003659")]
			[Address(RVA = "0x1AB4D54", Offset = "0x1AB4D54", VA = "0x1AB4D54", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000754")]
		public abstract int TotalFrames
		{
			[Token(Token = "0x600365A")]
			get;
		}

		[Token(Token = "0x17000755")]
		public float PlaybackSpeed
		{
			[Token(Token = "0x600365B")]
			[Address(RVA = "0x1AB4D5C", Offset = "0x1AB4D5C", VA = "0x1AB4D5C", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000756")]
		public float Length
		{
			[Token(Token = "0x600365C")]
			[Address(RVA = "0x1AB4D64", Offset = "0x1AB4D64", VA = "0x1AB4D64", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000757")]
		public WrapMode WrapMode
		{
			[Token(Token = "0x600365D")]
			[Address(RVA = "0x1AB4D6C", Offset = "0x1AB4D6C", VA = "0x1AB4D6C", Slot = "11")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x17000758")]
		public RootMotionMode RootMotionMode
		{
			[Token(Token = "0x600365E")]
			[Address(RVA = "0x1AB4D74", Offset = "0x1AB4D74", VA = "0x1AB4D74", Slot = "12")]
			get
			{
				return default(RootMotionMode);
			}
		}

		[Token(Token = "0x17000759")]
		public int FrameSkip
		{
			[Token(Token = "0x600365F")]
			[Address(RVA = "0x1AB4D7C", Offset = "0x1AB4D7C", VA = "0x1AB4D7C", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700075A")]
		public int VertexCount
		{
			[Token(Token = "0x6003660")]
			[Address(RVA = "0x1AB4D84", Offset = "0x1AB4D84", VA = "0x1AB4D84", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003661")]
		[Address(RVA = "0x1AB4D8C", Offset = "0x1AB4D8C", VA = "0x1AB4D8C", Slot = "25")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6003662")]
		[Address(RVA = "0x1AB4DE0", Offset = "0x1AB4DE0", VA = "0x1AB4DE0", Slot = "19")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6003663")]
		[Address(RVA = "0x1AB4F78", Offset = "0x1AB4F78", VA = "0x1AB4F78", Slot = "22")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003664")]
		[Address(RVA = "0x1AB4FC8", Offset = "0x1AB4FC8", VA = "0x1AB4FC8", Slot = "26")]
		public virtual MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6003665")]
		[Address(RVA = "0x1AB5070", Offset = "0x1AB5070", VA = "0x1AB5070", Slot = "21")]
		public float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x6003666")]
		public abstract void SetFrameData(int frame, MeshFrameDataBase frameData);

		[Token(Token = "0x6003667")]
		public abstract void SetFrameData(MeshFrameDataBase[] frameData);

		[Token(Token = "0x6003668")]
		public abstract void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x6003669")]
		public abstract void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x600366A")]
		public abstract void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x600366B")]
		public abstract void Reset();

		[Token(Token = "0x600366C")]
		[Address(RVA = "0x1AB5234", Offset = "0x1AB5234", VA = "0x1AB5234")]
		protected MeshAnimationBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008E8")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x20008E9")]
		public enum Mode : byte
		{
			[Token(Token = "0x4002A4B")]
			Data,
			[Token(Token = "0x4002A4C")]
			String,
			[Token(Token = "0x4002A4D")]
			Float
		}

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x600366D")]
		[Address(RVA = "0x1AB4E68", Offset = "0x1AB4E68", VA = "0x1AB4E68")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x600366E")]
		[Address(RVA = "0x1AB524C", Offset = "0x1AB524C", VA = "0x1AB524C")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20008EA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0C94", Offset = "0x8F0C94")]
	public abstract class MeshAnimatorBase : MonoBehaviour, IMeshAnimator
	{
		[Serializable]
		[Token(Token = "0x20008EB")]
		public struct MeshAnimatorLODLevel
		{
			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int fps;

			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float distance;

			[NonSerialized]
			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distanceSquared;
		}

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool playAutomatically;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool resetOnEnable;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject eventReciever;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FPS;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD17C", Offset = "0x8FD17C")]
		private Action<string> <OnAnimationFinished>k__BackingField;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD18C", Offset = "0x8FD18C")]
		private Action <OnFrameUpdated>k__BackingField;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD19C", Offset = "0x8FD19C")]
		private Action<bool> <OnVisibilityChanged>k__BackingField;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentFrame;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LODCamera;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshAnimationBase currentAnimation;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int currentAnimIndex;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isVisible;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float lastFrameTime;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool pingPong;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool isPaused;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentAnimTime;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Queue<string> queuedAnims;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int currentLodLevel;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform mTransform;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Dictionary<string, Transform> childMap;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool initialized;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int previousEventFrame;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool hasExposedTransforms;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		protected bool hasLODCamera;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float nextLODCheck;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int animationCount;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ExposedTransformCrossfade exposedTransformCrossfade;

		[Token(Token = "0x1700075B")]
		public abstract IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x600366F")]
			get;
			[Token(Token = "0x6003670")]
			set;
		}

		[Token(Token = "0x1700075C")]
		public abstract IMeshAnimation[] animations
		{
			[Token(Token = "0x6003671")]
			get;
		}

		[Token(Token = "0x1700075D")]
		public Action<string> OnAnimationFinished
		{
			[Token(Token = "0x6003672")]
			[Address(RVA = "0x1AB5254", Offset = "0x1AB5254", VA = "0x1AB5254", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE04", Offset = "0x90CE04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003673")]
			[Address(RVA = "0x1AB525C", Offset = "0x1AB525C", VA = "0x1AB525C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE14", Offset = "0x90CE14")]
			set
			{
			}
		}

		[Token(Token = "0x1700075E")]
		public Action OnFrameUpdated
		{
			[Token(Token = "0x6003674")]
			[Address(RVA = "0x1AB5264", Offset = "0x1AB5264", VA = "0x1AB5264", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE24", Offset = "0x90CE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003675")]
			[Address(RVA = "0x1AB526C", Offset = "0x1AB526C", VA = "0x1AB526C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE34", Offset = "0x90CE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700075F")]
		public Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x6003676")]
			[Address(RVA = "0x1AB5274", Offset = "0x1AB5274", VA = "0x1AB5274", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE44", Offset = "0x90CE44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003677")]
			[Address(RVA = "0x1AB527C", Offset = "0x1AB527C", VA = "0x1AB527C", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CE54", Offset = "0x90CE54")]
			set
			{
			}
		}

		[Token(Token = "0x17000760")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6003678")]
			[Address(RVA = "0x1AB5284", Offset = "0x1AB5284", VA = "0x1AB5284", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000761")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6003679")]
			[Address(RVA = "0x1AB528C", Offset = "0x1AB528C", VA = "0x1AB528C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000762")]
		public IMeshAnimation[] Animations
		{
			[Token(Token = "0x600367A")]
			[Address(RVA = "0x1AB32AC", Offset = "0x1AB32AC", VA = "0x1AB32AC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000763")]
		public float NextTick
		{
			[Token(Token = "0x600367B")]
			[Address(RVA = "0x1AB5294", Offset = "0x1AB5294", VA = "0x1AB5294", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600367C")]
		[Address(RVA = "0x1AB529C", Offset = "0x1AB529C", VA = "0x1AB529C", Slot = "25")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600367D")]
		[Address(RVA = "0x1AB5840", Offset = "0x1AB5840", VA = "0x1AB5840")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x600367E")]
		[Address(RVA = "0x1AB58A8", Offset = "0x1AB58A8", VA = "0x1AB58A8")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x600367F")]
		[Address(RVA = "0x1AB590C", Offset = "0x1AB590C", VA = "0x1AB590C", Slot = "26")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6003680")]
		[Address(RVA = "0x1AB5C24", Offset = "0x1AB5C24", VA = "0x1AB5C24", Slot = "27")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6003681")]
		[Address(RVA = "0x1AB5D58", Offset = "0x1AB5D58", VA = "0x1AB5D58", Slot = "28")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6003682")]
		[Address(RVA = "0x1AB5D6C", Offset = "0x1AB5D6C", VA = "0x1AB5D6C", Slot = "29")]
		protected virtual void AddMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x6003683")]
		[Address(RVA = "0x1AB5EAC", Offset = "0x1AB5EAC", VA = "0x1AB5EAC", Slot = "30")]
		protected virtual void RemoveMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x6003684")]
		[Address(RVA = "0x1AB609C", Offset = "0x1AB609C", VA = "0x1AB609C")]
		private void FireAnimationEvents(IMeshAnimation meshAnimation, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x6003685")]
		[Address(RVA = "0x1AB6494", Offset = "0x1AB6494", VA = "0x1AB6494")]
		private Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6003686")]
		[Address(RVA = "0x1AB6548", Offset = "0x1AB6548", VA = "0x1AB6548", Slot = "31")]
		protected virtual bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6003687")]
		[Address(RVA = "0x1AB68E4", Offset = "0x1AB68E4", VA = "0x1AB68E4", Slot = "32")]
		protected virtual void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x6003688")]
		[Address(RVA = "0x1AB68E8", Offset = "0x1AB68E8", VA = "0x1AB68E8", Slot = "33")]
		protected virtual bool StartCrossfade(int index, float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6003689")]
		[Address(RVA = "0x1AB6CA4", Offset = "0x1AB6CA4", VA = "0x1AB6CA4", Slot = "34")]
		protected virtual void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x600368A")]
		protected abstract void OnCurrentAnimationChanged(IMeshAnimation meshAnimation);

		[Token(Token = "0x600368B")]
		public abstract void SetAnimations(IMeshAnimation[] meshAnimations);

		[Token(Token = "0x600368C")]
		public abstract void StoreAdditionalMeshData(Mesh mesh);

		[Token(Token = "0x600368D")]
		[Address(RVA = "0x1AB6CB4", Offset = "0x1AB6CB4", VA = "0x1AB6CB4", Slot = "14")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x600368E")]
		[Address(RVA = "0x1AB779C", Offset = "0x1AB779C", VA = "0x1AB779C", Slot = "38")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x600368F")]
		[Address(RVA = "0x1AB3414", Offset = "0x1AB3414", VA = "0x1AB3414", Slot = "16")]
		public void Play(string animationName, float normalizedTime = -1f)
		{
		}

		[Token(Token = "0x6003690")]
		[Address(RVA = "0x1AB6B2C", Offset = "0x1AB6B2C", VA = "0x1AB6B2C", Slot = "17")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x6003691")]
		[Address(RVA = "0x1AB77CC", Offset = "0x1AB77CC", VA = "0x1AB77CC")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x6003692")]
		[Address(RVA = "0x1AB7958", Offset = "0x1AB7958", VA = "0x1AB7958")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x6003693")]
		[Address(RVA = "0x1AB7A10", Offset = "0x1AB7A10", VA = "0x1AB7A10", Slot = "39")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6003694")]
		[Address(RVA = "0x1AB7A1C", Offset = "0x1AB7A1C", VA = "0x1AB7A1C", Slot = "40")]
		public virtual void RestartAnim()
		{
		}

		[Token(Token = "0x6003695")]
		[Address(RVA = "0x1AB7A54", Offset = "0x1AB7A54", VA = "0x1AB7A54")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x6003696")]
		[Address(RVA = "0x1AB7A6C", Offset = "0x1AB7A6C", VA = "0x1AB7A6C")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x6003697")]
		public abstract void Crossfade(int index, float speed);

		[Token(Token = "0x6003698")]
		[Address(RVA = "0x1AB7A78", Offset = "0x1AB7A78", VA = "0x1AB7A78")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x6003699")]
		public abstract void PrepopulateCrossfadePool(int count);

		[Token(Token = "0x600369A")]
		[Address(RVA = "0x1AB7BFC", Offset = "0x1AB7BFC", VA = "0x1AB7BFC", Slot = "43")]
		public virtual void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x600369B")]
		[Address(RVA = "0x1AB7CE8", Offset = "0x1AB7CE8", VA = "0x1AB7CE8", Slot = "44")]
		public virtual void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x600369C")]
		[Address(RVA = "0x1AB7DD4", Offset = "0x1AB7DD4", VA = "0x1AB7DD4", Slot = "18")]
		public IMeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x600369D")]
		[Address(RVA = "0x1AB7F54", Offset = "0x1AB7F54", VA = "0x1AB7F54")]
		public void DisplayFrame(int frame, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x600369E")]
		[Address(RVA = "0x1AB7F94", Offset = "0x1AB7F94", VA = "0x1AB7F94", Slot = "21")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600369F")]
		[Address(RVA = "0x1AB7FA4", Offset = "0x1AB7FA4", VA = "0x1AB7FA4")]
		protected MeshAnimatorBase()
		{
		}
	}
	[Token(Token = "0x20008EC")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x20008ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0CF4", Offset = "0x8F0CF4")]
		private sealed class <UnscaledUpdate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x17000766")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036AF")]
				[Address(RVA = "0x16B4690", Offset = "0x16B4690", VA = "0x16B4690", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000767")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036B1")]
				[Address(RVA = "0x16B46D8", Offset = "0x16B46D8", VA = "0x16B46D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036AC")]
			[Address(RVA = "0x16B4584", Offset = "0x16B4584", VA = "0x16B4584")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60036AD")]
			[Address(RVA = "0x16B45B0", Offset = "0x16B45B0", VA = "0x16B45B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036AE")]
			[Address(RVA = "0x16B45B4", Offset = "0x16B45B4", VA = "0x16B45B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036B0")]
			[Address(RVA = "0x16B4698", Offset = "0x16B4698", VA = "0x16B4698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode _mode;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager _instance;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<IMeshAnimator> _animators;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<IMeshAnimator> _addAnimators;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<IMeshAnimator> _removeAnimators;

		[Token(Token = "0x17000764")]
		public static int AnimatorCount
		{
			[Token(Token = "0x60036A0")]
			[Address(RVA = "0x1AB8038", Offset = "0x1AB8038", VA = "0x1AB8038")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000765")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x60036A1")]
			[Address(RVA = "0x1AB811C", Offset = "0x1AB811C", VA = "0x1AB811C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60036A2")]
		[Address(RVA = "0x1AB5B20", Offset = "0x1AB5B20", VA = "0x1AB5B20")]
		public static void AddAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x60036A3")]
		[Address(RVA = "0x1AB5CCC", Offset = "0x1AB5CCC", VA = "0x1AB5CCC")]
		public static void RemoveAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x60036A4")]
		[Address(RVA = "0x1AB8310", Offset = "0x1AB8310", VA = "0x1AB8310")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x60036A5")]
		[Address(RVA = "0x1AB84B0", Offset = "0x1AB84B0", VA = "0x1AB84B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60036A6")]
		[Address(RVA = "0x1AB8438", Offset = "0x1AB8438", VA = "0x1AB8438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x90CE64", Offset = "0x90CE64")]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x60036A7")]
		[Address(RVA = "0x1AB8540", Offset = "0x1AB8540", VA = "0x1AB8540")]
		private void Update()
		{
		}

		[Token(Token = "0x60036A8")]
		[Address(RVA = "0x1AB8A64", Offset = "0x1AB8A64", VA = "0x1AB8A64")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60036A9")]
		[Address(RVA = "0x1AB85BC", Offset = "0x1AB85BC", VA = "0x1AB85BC")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x60036AA")]
		[Address(RVA = "0x1AB8AE4", Offset = "0x1AB8AE4", VA = "0x1AB8AE4")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008EE")]
	public class MeshFrameDataBase
	{
		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x60036B2")]
		[Address(RVA = "0x1AB939C", Offset = "0x1AB939C", VA = "0x1AB939C")]
		public MeshFrameDataBase()
		{
		}
	}
	[Token(Token = "0x20008EF")]
	public enum MeshNormalMode
	{
		[Token(Token = "0x4002A80")]
		Baked,
		[Token(Token = "0x4002A81")]
		UseOriginal,
		[Token(Token = "0x4002A82")]
		Recalculated
	}
	[Token(Token = "0x20008F0")]
	public enum RootMotionMode
	{
		[Token(Token = "0x4002A84")]
		None,
		[Token(Token = "0x4002A85")]
		Baked,
		[Token(Token = "0x4002A86")]
		AppliedToTransform
	}
	[Token(Token = "0x20008F1")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x60036B3")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x60036B4")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x60036B5")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20008F2")]
	public static class AllocatedArray
	{
		[Token(Token = "0x60036B7")]
		public static T[] Get<T>(int size)
		{
			return null;
		}

		[Token(Token = "0x60036B8")]
		public static void Return<T>(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20008F3")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x20008F4")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x60036BB")]
			[Address(RVA = "0x15E84F4", Offset = "0x15E84F4", VA = "0x15E84F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036BC")]
			[Address(RVA = "0x15E8504", Offset = "0x15E8504", VA = "0x15E8504", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036BD")]
			[Address(RVA = "0x15E8524", Offset = "0x15E8524", VA = "0x15E8524")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F5")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x60036BE")]
			[Address(RVA = "0x15E847C", Offset = "0x15E847C", VA = "0x15E847C", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036BF")]
			[Address(RVA = "0x15E8488", Offset = "0x15E8488", VA = "0x15E8488", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036C0")]
			[Address(RVA = "0x15E84B0", Offset = "0x15E84B0", VA = "0x15E84B0")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F6")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x60036C1")]
			[Address(RVA = "0x15E84B8", Offset = "0x15E84B8", VA = "0x15E84B8", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036C2")]
			[Address(RVA = "0x15E84C4", Offset = "0x15E84C4", VA = "0x15E84C4", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036C3")]
			[Address(RVA = "0x15E84EC", Offset = "0x15E84EC", VA = "0x15E84EC")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F7")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x60036C4")]
			[Address(RVA = "0x15E843C", Offset = "0x15E843C", VA = "0x15E843C", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036C5")]
			[Address(RVA = "0x15E844C", Offset = "0x15E844C", VA = "0x15E844C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036C6")]
			[Address(RVA = "0x15E8474", Offset = "0x15E8474", VA = "0x15E8474")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F8")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x60036C7")]
			[Address(RVA = "0x15E83FC", Offset = "0x15E83FC", VA = "0x15E83FC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036C8")]
			[Address(RVA = "0x15E8408", Offset = "0x15E8408", VA = "0x15E8408", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036C9")]
			[Address(RVA = "0x15E8434", Offset = "0x15E8434", VA = "0x15E8434")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F9")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60036CA")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60036CB")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60036CC")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20008FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0D04", Offset = "0x8F0D04")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4002A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4002A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x60036CE")]
			public <>c__10()
			{
			}

			[Token(Token = "0x60036CF")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x60036B9")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x20008FB")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x17000768")]
		public static int Count
		{
			[Token(Token = "0x60036D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60036D1")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x60036D2")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60036D3")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x20008FC")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60036D5")]
		[Address(RVA = "0x1AB2144", Offset = "0x1AB2144", VA = "0x1AB2144")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}
	}
	[Token(Token = "0x20008FD")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8FD1EC", Offset = "0x8FD1EC")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x17000769")]
		public bool recycleable
		{
			[Token(Token = "0x60036D6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF14", Offset = "0x90CF14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60036D7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x90CF24", Offset = "0x90CF24")]
			set
			{
			}
		}

		[Token(Token = "0x60036D8")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x60036D9")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60036DA")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x60036DB")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60036DC")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x60036DD")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60036DE")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60036DF")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace FSG.MeshAnimator.Snapshot
{
	[Serializable]
	[Token(Token = "0x20008FE")]
	public class SnapshotMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x20008FF")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x1700076D")]
			public int Count
			{
				[Token(Token = "0x60036F4")]
				[Address(RVA = "0x158C6AC", Offset = "0x158C6AC", VA = "0x158C6AC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60036F5")]
			[Address(RVA = "0x158C6B4", Offset = "0x158C6B4", VA = "0x158C6B4")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x60036F6")]
			[Address(RVA = "0x158C6C4", Offset = "0x158C6C4", VA = "0x158C6C4")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x60036F7")]
			[Address(RVA = "0x158C7BC", Offset = "0x158C7BC", VA = "0x158C7BC")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x60036F8")]
			[Address(RVA = "0x158C86C", Offset = "0x158C86C", VA = "0x158C86C")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0D14", Offset = "0x8F0D14")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x60036F9")]
			[Address(RVA = "0x158C5C4", Offset = "0x158C5C4", VA = "0x158C5C4")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60036FA")]
			[Address(RVA = "0x158C5CC", Offset = "0x158C5CC", VA = "0x158C5CC")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000901")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F0D24", Offset = "0x8F0D24")]
		private sealed class <>c
		{
			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60036FC")]
			[Address(RVA = "0x158C568", Offset = "0x158C568", VA = "0x158C568")]
			public <>c()
			{
			}

			[Token(Token = "0x60036FD")]
			[Address(RVA = "0x158C570", Offset = "0x158C570", VA = "0x158C570")]
			internal bool <.cctor>b__36_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036FE")]
			[Address(RVA = "0x158C598", Offset = "0x158C598", VA = "0x158C598")]
			internal int <.cctor>b__36_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<Mesh, Dictionary<SnapshotMeshAnimation, Mesh[]>> GeneratedFrames;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD1FC", Offset = "0x8FD1FC")]
		public bool preGenerateFrames;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshNormalMode meshNormalMode;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8FD234", Offset = "0x8FD234")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] frames;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int totalFrames;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] generatedMeshes;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool completelyGenerated;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SnapshotMeshFrameData[] decompressedFrameData;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion lastRotation;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x1700076A")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60036E1")]
			[Address(RVA = "0x15C4E48", Offset = "0x15C4E48", VA = "0x15C4E48", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700076B")]
		public override int TotalFrames
		{
			[Token(Token = "0x60036E2")]
			[Address(RVA = "0x15C4F28", Offset = "0x15C4F28", VA = "0x15C4F28", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700076C")]
		private SnapshotMeshFrameData[] frameData
		{
			[Token(Token = "0x60036E3")]
			[Address(RVA = "0x15C4E4C", Offset = "0x15C4E4C", VA = "0x15C4E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60036E4")]
		[Address(RVA = "0x15C4F30", Offset = "0x15C4F30", VA = "0x15C4F30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60036E5")]
		[Address(RVA = "0x15C4F3C", Offset = "0x15C4F3C", VA = "0x15C4F3C", Slot = "25")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60036E6")]
		[Address(RVA = "0x15C5010", Offset = "0x15C5010", VA = "0x15C5010", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x60036E7")]
		[Address(RVA = "0x15C518C", Offset = "0x15C518C", VA = "0x15C518C", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x60036E8")]
		[Address(RVA = "0x15C51FC", Offset = "0x15C51FC", VA = "0x15C51FC", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60036E9")]
		[Address(RVA = "0x15C53FC", Offset = "0x15C53FC", VA = "0x15C53FC", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x60036EA")]
		[Address(RVA = "0x15C5618", Offset = "0x15C5618", VA = "0x15C5618", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x60036EB")]
		[Address(RVA = "0x15C5FE0", Offset = "0x15C5FE0", VA = "0x15C5FE0")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60036EC")]
		[Address(RVA = "0x15C62E4", Offset = "0x15C62E4", VA = "0x15C62E4", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60036ED")]
		[Address(RVA = "0x15C52D8", Offset = "0x15C52D8", VA = "0x15C52D8")]
		private void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60036EE")]
		[Address(RVA = "0x15C5904", Offset = "0x15C5904", VA = "0x15C5904")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x60036EF")]
		[Address(RVA = "0x15C5994", Offset = "0x15C5994", VA = "0x15C5994")]
		private Mesh GenerateFrameInternal(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x60036F0")]
		[Address(RVA = "0x15C642C", Offset = "0x15C642C", VA = "0x15C642C")]
		private void RecalculateNormals(Mesh mesh)
		{
		}

		[Token(Token = "0x60036F1")]
		[Address(RVA = "0x15C6464", Offset = "0x15C6464", VA = "0x15C6464")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x60036F2")]
		[Address(RVA = "0x15C7188", Offset = "0x15C7188", VA = "0x15C7188")]
		public SnapshotMeshAnimation()
		{
		}
	}
	[Token(Token = "0x2000902")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0D34", Offset = "0x8F0D34")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F0D34", Offset = "0x8F0D34")]
	public class SnapshotMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x2000903")]
		private struct LerpVector3Job : IJobParallelFor
		{
			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Vector3> output;

			[Token(Token = "0x600370E")]
			[Address(RVA = "0x158D480", Offset = "0x158D480", VA = "0x158D480", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x2000904")]
		private struct CalculateBoundsJob : IJob
		{
			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> positions;

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x600370F")]
			[Address(RVA = "0x158C92C", Offset = "0x158C92C", VA = "0x158C92C", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x2000905")]
		private struct CrossfadeJobData
		{
			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int framesNeeded;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int currentFrame;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isFading;

			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float endTime;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SnapshotMeshFrameData fromFrame;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnapshotMeshFrameData toFrame;

			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpVector3Job[] positionJobs;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CalculateBoundsJob[] boundsJobs;

			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JobHandle[] positionJobHandles;

			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public JobHandle[] boundsJobHandles;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<Vector3>[] output;

			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool isReset;

			[Token(Token = "0x6003710")]
			[Address(RVA = "0x158CA40", Offset = "0x158CA40", VA = "0x158CA40")]
			public void Reset(bool destroying)
			{
			}

			[Token(Token = "0x6003711")]
			[Address(RVA = "0x158CED0", Offset = "0x158CED0", VA = "0x158CED0")]
			public void StartCrossfade(SnapshotMeshFrameData fromFrame, SnapshotMeshFrameData toFrame)
			{
			}

			[Token(Token = "0x6003712")]
			[Address(RVA = "0x158CAA4", Offset = "0x158CAA4", VA = "0x158CAA4")]
			public void ReturnFrame(bool destroying)
			{
			}
		}

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Stack<Mesh>> _crossFadePool;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Mesh, int> _crossFadeIndex;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SnapshotMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SnapshotMeshAnimation[] meshAnimations;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool syncCrossfadeMeshCount;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		[SerializeField]
		private MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv1Data;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv2Data;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv3Data;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv4Data;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mesh crossfadeMesh;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CrossfadeJobData currentCrossFade;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int crossFadePoolIndex;

		[Token(Token = "0x1700076E")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x60036FF")]
			[Address(RVA = "0x15C73E0", Offset = "0x15C73E0", VA = "0x15C73E0", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003700")]
			[Address(RVA = "0x15C73E8", Offset = "0x15C73E8", VA = "0x15C73E8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700076F")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x6003701")]
			[Address(RVA = "0x15C7478", Offset = "0x15C7478", VA = "0x15C7478", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003702")]
		[Address(RVA = "0x15C7480", Offset = "0x15C7480", VA = "0x15C7480", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6003703")]
		[Address(RVA = "0x15C7504", Offset = "0x15C7504", VA = "0x15C7504", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6003704")]
		[Address(RVA = "0x15C7BF4", Offset = "0x15C7BF4", VA = "0x15C7BF4")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x6003705")]
		[Address(RVA = "0x15C7E38", Offset = "0x15C7E38", VA = "0x15C7E38", Slot = "34")]
		protected override void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x6003706")]
		[Address(RVA = "0x15C8210", Offset = "0x15C8210", VA = "0x15C8210", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6003707")]
		[Address(RVA = "0x15C84E8", Offset = "0x15C84E8", VA = "0x15C84E8", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6003708")]
		[Address(RVA = "0x15C8638", Offset = "0x15C8638", VA = "0x15C8638", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6003709")]
		[Address(RVA = "0x15C899C", Offset = "0x15C899C", VA = "0x15C899C", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x600370A")]
		[Address(RVA = "0x15C89A0", Offset = "0x15C89A0", VA = "0x15C89A0", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x600370B")]
		[Address(RVA = "0x15C8B9C", Offset = "0x15C8B9C", VA = "0x15C8B9C", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x600370C")]
		[Address(RVA = "0x15C8CA8", Offset = "0x15C8CA8", VA = "0x15C8CA8")]
		public SnapshotMeshAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000906")]
	public class SnapshotMeshFrameData : MeshFrameDataBase
	{
		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] normals;

		[NonSerialized]
		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] decompressed;

		[Token(Token = "0x17000770")]
		public Vector3[] verts
		{
			[Token(Token = "0x6003713")]
			[Address(RVA = "0x15C8DC8", Offset = "0x15C8DC8", VA = "0x15C8DC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003714")]
		[Address(RVA = "0x15C8DD0", Offset = "0x15C8DD0", VA = "0x15C8DD0")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x6003715")]
		[Address(RVA = "0x15C8DD8", Offset = "0x15C8DD8", VA = "0x15C8DD8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003716")]
		[Address(RVA = "0x15C8F20", Offset = "0x15C8F20", VA = "0x15C8F20", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003717")]
		[Address(RVA = "0x15C5184", Offset = "0x15C5184", VA = "0x15C5184")]
		public SnapshotMeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000907")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x6003718")]
		[Address(RVA = "0x1AB9BB4", Offset = "0x1AB9BB4", VA = "0x1AB9BB4")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000908")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] rawPositions;

		[Token(Token = "0x6003719")]
		[Address(RVA = "0x1678B64", Offset = "0x1678B64", VA = "0x1678B64")]
		public static implicit operator SnapshotMeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x600371A")]
		[Address(RVA = "0x1679080", Offset = "0x1679080", VA = "0x1679080")]
		public static implicit operator DeltaCompressedFrameData(SnapshotMeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x600371B")]
		[Address(RVA = "0x1679B38", Offset = "0x1679B38", VA = "0x1679B38")]
		public DeltaCompressedFrameData()
		{
		}
	}
}
namespace FSG.MeshAnimator.ShaderAnimated
{
	[Serializable]
	[Token(Token = "0x2000909")]
	public class ShaderMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public MeshFrameDataBase[] frameData;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Texture2D[] textures;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 animScalar;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector2Int textureSize;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int textureCount;

		[Token(Token = "0x17000771")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x600371D")]
			[Address(RVA = "0x15BA1D4", Offset = "0x15BA1D4", VA = "0x15BA1D4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000772")]
		public override int TotalFrames
		{
			[Token(Token = "0x600371E")]
			[Address(RVA = "0x15BA1DC", Offset = "0x15BA1DC", VA = "0x15BA1DC", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600371F")]
		[Address(RVA = "0x15BA1F8", Offset = "0x15BA1F8", VA = "0x15BA1F8", Slot = "26")]
		public override MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6003720")]
		[Address(RVA = "0x15BA244", Offset = "0x15BA244", VA = "0x15BA244", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6003721")]
		[Address(RVA = "0x15BA248", Offset = "0x15BA248", VA = "0x15BA248", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x6003722")]
		[Address(RVA = "0x15BA24C", Offset = "0x15BA24C", VA = "0x15BA24C", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6003723")]
		[Address(RVA = "0x15BA250", Offset = "0x15BA250", VA = "0x15BA250", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6003724")]
		[Address(RVA = "0x15BA254", Offset = "0x15BA254", VA = "0x15BA254", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x6003725")]
		[Address(RVA = "0x15BA2D0", Offset = "0x15BA2D0", VA = "0x15BA2D0", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x6003726")]
		[Address(RVA = "0x15BA2D8", Offset = "0x15BA2D8", VA = "0x15BA2D8")]
		public ShaderMeshAnimation()
		{
		}
	}
	[Token(Token = "0x200090A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8F0DB8", Offset = "0x8F0DB8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8F0DB8", Offset = "0x8F0DB8")]
	public class ShaderMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _animTimeProp;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int _animInfoProp;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int _animScalarProp;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int _animTexturesProp;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _animTextureIndexProp;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int _crossfadeAnimInfoProp;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int _crossfadeAnimScalarProp;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _crossfadeAnimTextureIndexProp;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _crossfadeStartTimeProp;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int _crossfadeEndTimeProp;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Material> _materialCacheLookup;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static HashSet<Material> _setMaterials;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Mesh, Texture2DArray> _animTextures;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int pixelsPerTexture;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int textureStartIndex;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int textureSizeX;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int textureSizeY;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector4 propertyBlockData;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector4 timeBlockData;

		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ShaderMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ShaderMeshAnimation[] meshAnimations;

		[Token(Token = "0x17000773")]
		private static Vector4 _shaderTime
		{
			[Token(Token = "0x6003727")]
			[Address(RVA = "0x15BA30C", Offset = "0x15BA30C", VA = "0x15BA30C")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000774")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6003728")]
			[Address(RVA = "0x15BA354", Offset = "0x15BA354", VA = "0x15BA354", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003729")]
			[Address(RVA = "0x15BA35C", Offset = "0x15BA35C", VA = "0x15BA35C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000775")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x600372A")]
			[Address(RVA = "0x15BA3EC", Offset = "0x15BA3EC", VA = "0x15BA3EC", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600372B")]
		[Address(RVA = "0x15BA3F4", Offset = "0x15BA3F4", VA = "0x15BA3F4", Slot = "26")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600372C")]
		[Address(RVA = "0x15BAB28", Offset = "0x15BAB28", VA = "0x15BAB28", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600372D")]
		[Address(RVA = "0x15BAB50", Offset = "0x15BAB50", VA = "0x15BAB50", Slot = "27")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600372E")]
		[Address(RVA = "0x15BAB58", Offset = "0x15BAB58", VA = "0x15BAB58", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600372F")]
		[Address(RVA = "0x15BAD5C", Offset = "0x15BAD5C", VA = "0x15BAD5C")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6003730")]
		[Address(RVA = "0x15BAEB0", Offset = "0x15BAEB0", VA = "0x15BAEB0", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6003731")]
		[Address(RVA = "0x15BAFC8", Offset = "0x15BAFC8", VA = "0x15BAFC8", Slot = "32")]
		protected override void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x6003732")]
		[Address(RVA = "0x15BB014", Offset = "0x15BB014", VA = "0x15BB014", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x6003733")]
		[Address(RVA = "0x15BB3F8", Offset = "0x15BB3F8", VA = "0x15BB3F8", Slot = "38")]
		public override void Play()
		{
		}

		[Token(Token = "0x6003734")]
		[Address(RVA = "0x15BB420", Offset = "0x15BB420", VA = "0x15BB420", Slot = "39")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6003735")]
		[Address(RVA = "0x15BB558", Offset = "0x15BB558", VA = "0x15BB558", Slot = "40")]
		public override void RestartAnim()
		{
		}

		[Token(Token = "0x6003736")]
		[Address(RVA = "0x15BB590", Offset = "0x15BB590", VA = "0x15BB590", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6003737")]
		[Address(RVA = "0x15BB82C", Offset = "0x15BB82C", VA = "0x15BB82C", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6003738")]
		[Address(RVA = "0x15BB830", Offset = "0x15BB830", VA = "0x15BB830", Slot = "43")]
		public override void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6003739")]
		[Address(RVA = "0x15BB85C", Offset = "0x15BB85C", VA = "0x15BB85C", Slot = "44")]
		public override void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x600373A")]
		[Address(RVA = "0x15BB888", Offset = "0x15BB888", VA = "0x15BB888", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x600373B")]
		[Address(RVA = "0x15BBA84", Offset = "0x15BBA84", VA = "0x15BBA84", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x600373C")]
		[Address(RVA = "0x15BAD78", Offset = "0x15BAD78", VA = "0x15BAD78")]
		private void RefreshTimeData()
		{
		}

		[Token(Token = "0x600373D")]
		[Address(RVA = "0x15BA480", Offset = "0x15BA480", VA = "0x15BA480")]
		private void SetupTextureData()
		{
		}

		[Token(Token = "0x600373E")]
		[Address(RVA = "0x15BB2E0", Offset = "0x15BB2E0", VA = "0x15BB2E0")]
		private void CreatePropertyBlock()
		{
		}

		[Token(Token = "0x600373F")]
		[Address(RVA = "0x15BBA88", Offset = "0x15BBA88", VA = "0x15BBA88")]
		private int CacheKey()
		{
			return default(int);
		}

		[Token(Token = "0x6003740")]
		[Address(RVA = "0x15BBBEC", Offset = "0x15BBBEC", VA = "0x15BBBEC")]
		public ShaderMeshAnimator()
		{
		}
	}
}
