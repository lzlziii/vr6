using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using I2.Loc;
using Il2CppDummyDll;
using JetBrains.Annotations;
using LIV.SDK.Unity;
using Lobbyist;
using Lobbyist.Messages;
using MEC;
using MP3Sharp;
using Microsoft.CodeAnalysis;
using Multiplayer;
using Multiplayer.Data;
using Multiplayer.ICE;
using Multiplayer.ICE.Agents;
using Multiplayer.Tests;
using NaughtyAttributes;
using Nx;
using Oculus.Platform;
using Oculus.Platform.Models;
using OneHumus;
using OneHumus.Crates;
using OneHumus.Data;
using OneHumus.Math;
using OneHumus.Math.Geometry;
using OneHumus.Math.Spline;
using OneHumus.Test;
using OneHumus.Utils;
using POpusCodec;
using POpusCodec.Enums;
using RNX;
using RacketNx.AnalyticsNetwork;
using RnxPlatform;
using TMPro;
using UIgak;
using Unity.Networking.Transport;
using Unity.Networking.Transport.Error;
using Unity.Networking.Transport.Relay;
using Unity.Services.Core;
using Unity.Services.Relay.Models;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using YUR.Core;

[assembly: AssemblyVersion("1.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000006")]
	[Microsoft.CodeAnalysis.Embedded]
	[CompilerGenerated]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xC1037C", Offset = "0xC1037C", VA = "0xC1037C")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000007")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Parameter | AttributeTargets.ReturnValue | AttributeTargets.GenericParameter, AllowMultiple = false, Inherited = false)]
	[Microsoft.CodeAnalysis.Embedded]
	[CompilerGenerated]
	internal sealed class NullableAttribute : Attribute
	{
		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] NullableFlags;

		[Token(Token = "0x600001F")]
		[Address(RVA = "0xC10384", Offset = "0xC10384", VA = "0xC10384")]
		public NullableAttribute(byte P_0)
		{
		}

		[Token(Token = "0x6000020")]
		[Address(RVA = "0xC1040C", Offset = "0xC1040C", VA = "0xC1040C")]
		public NullableAttribute(byte[] P_0)
		{
		}
	}
	[Token(Token = "0x2000008")]
	[CompilerGenerated]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Method | AttributeTargets.Interface | AttributeTargets.Delegate, AllowMultiple = false, Inherited = false)]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class NullableContextAttribute : Attribute
	{
		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte Flag;

		[Token(Token = "0x6000021")]
		[Address(RVA = "0xC1043C", Offset = "0xC1043C", VA = "0xC1043C")]
		public NullableContextAttribute(byte P_0)
		{
		}
	}
}
[Token(Token = "0x2000009")]
public class NxGroupInjector : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	public enum NxGroupType
	{
		[Token(Token = "0x4000013")]
		None,
		[Token(Token = "0x4000014")]
		Music,
		[Token(Token = "0x4000015")]
		SFX,
		[Token(Token = "0x4000016")]
		Voice
	}

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NxGroupType groupType;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NxSource _nxSource;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xC10464", Offset = "0xC10464", VA = "0xC10464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC106D8", Offset = "0xC106D8", VA = "0xC106D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xC10468", Offset = "0xC10468", VA = "0xC10468")]
	private void SetGroup()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xC10750", Offset = "0xC10750", VA = "0xC10750")]
	public NxGroupInjector()
	{
	}
}
[Token(Token = "0x200000B")]
public class NxGroupsContainer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NxGroup music;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NxGroup sfx;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NxGroup voice;

	[Token(Token = "0x1700000E")]
	public static NxGroupsContainer inst
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xC10758", Offset = "0xC10758", VA = "0xC10758")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xC107A0", Offset = "0xC107A0", VA = "0xC107A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC107F8", Offset = "0xC107F8", VA = "0xC107F8", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC10850", Offset = "0xC10850", VA = "0xC10850")]
	public NxGroupsContainer()
	{
	}
}
[Token(Token = "0x200000C")]
public class LIVController : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LIVController <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000034")]
			[Address(RVA = "0xC11454", Offset = "0xC11454", VA = "0xC11454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000036")]
			[Address(RVA = "0xC1149C", Offset = "0xC1149C", VA = "0xC1149C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xC10ACC", Offset = "0xC10ACC", VA = "0xC10ACC")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xC11194", Offset = "0xC11194", VA = "0xC11194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xC11198", Offset = "0xC11198", VA = "0xC11198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0xC1145C", Offset = "0xC1145C", VA = "0xC1145C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LIV.SDK.Unity.LIV LivManager;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LIV.SDK.Unity.LIV Manager;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isActivated;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _extraHiddenLayersCache;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _extraVisibleLayersCache;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC10858", Offset = "0xC10858", VA = "0xC10858")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC10A58", Offset = "0xC10A58", VA = "0xC10A58")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC10AF4", Offset = "0xC10AF4", VA = "0xC10AF4")]
	public void ToggleThirdPersonLayers(bool on)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC10E90", Offset = "0xC10E90", VA = "0xC10E90")]
	public static void Print(object message)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC10F1C", Offset = "0xC10F1C", VA = "0xC10F1C")]
	private void LIVOnActivate()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC110B8", Offset = "0xC110B8", VA = "0xC110B8")]
	private void LIVOnDeactivate()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC11184", Offset = "0xC11184", VA = "0xC11184")]
	public LIVController()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public abstract class Achievement
{
	[Serializable]
	[Token(Token = "0x200000F")]
	public class Card
	{
		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString title;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString description;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString progress;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite icon;

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xC12C74", Offset = "0xC12C74", VA = "0xC12C74")]
		public Card()
		{
		}
	}

	[Token(Token = "0x2000010")]
	public enum PS5TrophyType
	{
		[Token(Token = "0x4000033")]
		None,
		[Token(Token = "0x4000034")]
		Simple,
		[Token(Token = "0x4000035")]
		Progress
	}

	[Token(Token = "0x2000011")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000016")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600005B")]
			[Address(RVA = "0xC12C98", Offset = "0xC12C98", VA = "0xC12C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005D")]
			[Address(RVA = "0xC12CE0", Offset = "0xC12CE0", VA = "0xC12CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xC11678", Offset = "0xC11678", VA = "0xC11678")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xC12C7C", Offset = "0xC12C7C", VA = "0xC12C7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0xC12C80", Offset = "0xC12C80", VA = "0xC12C80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0xC12CA0", Offset = "0xC12CA0", VA = "0xC12CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000013")]
	[CompilerGenerated]
	private sealed class <Reload>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x17000018")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0xC13080", Offset = "0xC13080", VA = "0xC13080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0xC130C8", Offset = "0xC130C8", VA = "0xC130C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0xC11908", Offset = "0xC11908", VA = "0xC11908")]
		[DebuggerHidden]
		public <Reload>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0xC12E00", Offset = "0xC12E00", VA = "0xC12E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xC12E04", Offset = "0xC12E04", VA = "0xC12E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0xC13088", Offset = "0xC13088", VA = "0xC13088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[CompilerGenerated]
	private sealed class <InitCo>d__36 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x1700001A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600006D")]
			[Address(RVA = "0xC13520", Offset = "0xC13520", VA = "0xC13520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006F")]
			[Address(RVA = "0xC13568", Offset = "0xC13568", VA = "0xC13568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0xC11D2C", Offset = "0xC11D2C", VA = "0xC11D2C")]
		[DebuggerHidden]
		public <InitCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC13124", Offset = "0xC13124", VA = "0xC13124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0xC13128", Offset = "0xC13128", VA = "0xC13128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0xC13528", Offset = "0xC13528", VA = "0xC13528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000015")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waitingForAnnouncer;

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xC135C4", Offset = "0xC135C4", VA = "0xC135C4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xC135CC", Offset = "0xC135CC", VA = "0xC135CC")]
		internal void <PlaySoundAndAnimationsForUnlock>b__0()
		{
		}
	}

	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <PlaySoundAndAnimationsForUnlock>d__40 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass40_0 <>8__1;

		[Token(Token = "0x1700001C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0xC13970", Offset = "0xC13970", VA = "0xC13970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000077")]
			[Address(RVA = "0xC139B8", Offset = "0xC139B8", VA = "0xC139B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xC12A84", Offset = "0xC12A84", VA = "0xC12A84")]
		[DebuggerHidden]
		public <PlaySoundAndAnimationsForUnlock>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xC135D4", Offset = "0xC135D4", VA = "0xC135D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xC135D8", Offset = "0xC135D8", VA = "0xC135D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0xC13978", Offset = "0xC13978", VA = "0xC13978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <ReportProgressToNativePlatformCo>d__43 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x1700001E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600007B")]
			[Address(RVA = "0xC13E2C", Offset = "0xC13E2C", VA = "0xC13E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0xC13E74", Offset = "0xC13E74", VA = "0xC13E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xC12B20", Offset = "0xC12B20", VA = "0xC12B20")]
		[DebuggerHidden]
		public <ReportProgressToNativePlatformCo>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xC13A14", Offset = "0xC13A14", VA = "0xC13A14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xC13A18", Offset = "0xC13A18", VA = "0xC13A18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0xC13E34", Offset = "0xC13E34", VA = "0xC13E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool reportDone;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string reportError;

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xC13ED0", Offset = "0xC13ED0", VA = "0xC13ED0")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xC13ED8", Offset = "0xC13ED8", VA = "0xC13ED8")]
		internal void <ReportToNativePlatformCo>b__1(string err)
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xC13EE8", Offset = "0xC13EE8", VA = "0xC13EE8")]
		internal bool <ReportToNativePlatformCo>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000019")]
	[CompilerGenerated]
	private sealed class <ReportToNativePlatformCo>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass45_0 <>8__1;

		[Token(Token = "0x17000020")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0xC145E8", Offset = "0xC145E8", VA = "0xC145E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0xC14630", Offset = "0xC14630", VA = "0xC14630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xC12BBC", Offset = "0xC12BBC", VA = "0xC12BBC")]
		[DebuggerHidden]
		public <ReportToNativePlatformCo>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0xC13EF0", Offset = "0xC13EF0", VA = "0xC13EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xC13EF4", Offset = "0xC13EF4", VA = "0xC13EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xC145F0", Offset = "0xC145F0", VA = "0xC145F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("The display of the achievement")]
	public Card card;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The id in the profile and in the native platforms")]
	public string id;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("is this achievement new for this version of the game")]
	public bool isNew;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int trophyId;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PS5TrophyType trophyType;

	[NonSerialized]
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerProfileData.Summary.AchievementStatus status;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ItemsDefs.ItemDefinition[] _dependentItemsCache;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _initialized;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private CoroutineHandle? _retroactiveProgressCoHandle;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CoroutineHandle _initCo;

	[Token(Token = "0x17000011")]
	public abstract string CurrentProgressDisplay
	{
		[Token(Token = "0x600003B")]
		get;
	}

	[Token(Token = "0x17000012")]
	public abstract string MaxProgressDisplay
	{
		[Token(Token = "0x600003C")]
		get;
	}

	[Token(Token = "0x17000013")]
	public bool IsUnlocked
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xC116A4", Offset = "0xC116A4", VA = "0xC116A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000014")]
	public ItemsDefs.ItemDefinition[] DependentItems
	{
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xC116C4", Offset = "0xC116C4", VA = "0xC116C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public bool Initialized
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xC11930", Offset = "0xC11930", VA = "0xC11930")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC114A4", Offset = "0xC114A4", VA = "0xC114A4")]
	protected void SaveProgress()
	{
	}

	[Token(Token = "0x6000038")]
	public abstract float GetProgress();

	[Token(Token = "0x6000039")]
	public abstract long GetPS5TrophyProgressInteger();

	[Token(Token = "0x600003A")]
	public abstract string MergeProgress(string offlineProgress, string onlineProgress);

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xC11614", Offset = "0xC11614", VA = "0xC11614", Slot = "9")]
	protected virtual void RetroactiveProgress()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xC11618", Offset = "0xC11618", VA = "0xC11618", Slot = "10")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__16))]
	protected virtual IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	protected abstract void OnInit();

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xC116A0", Offset = "0xC116A0", VA = "0xC116A0", Slot = "12")]
	protected virtual void OnUnlocked()
	{
	}

	[Token(Token = "0x6000041")]
	protected abstract string SerializeProgress();

	[Token(Token = "0x6000042")]
	protected abstract void DeserializeProgress(string progress);

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC11894", Offset = "0xC11894", VA = "0xC11894")]
	[IteratorStateMachine(typeof(<Reload>d__27))]
	public IEnumerator<float> Reload()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC11938", Offset = "0xC11938", VA = "0xC11938")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC11B38", Offset = "0xC11B38", VA = "0xC11B38")]
	private float SingletonRetroactiveProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC11AC4", Offset = "0xC11AC4", VA = "0xC11AC4")]
	private void Init()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xC11CB8", Offset = "0xC11CB8", VA = "0xC11CB8")]
	[IteratorStateMachine(typeof(<InitCo>d__36))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xC11D54", Offset = "0xC11D54", VA = "0xC11D54")]
	private PlayerProfileData.Summary.AchievementStatus GetOrAddAchievement()
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xC11FF4", Offset = "0xC11FF4", VA = "0xC11FF4")]
	private void LoadProgress()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xC122B0", Offset = "0xC122B0", VA = "0xC122B0")]
	protected void Unlock()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC12A10", Offset = "0xC12A10", VA = "0xC12A10")]
	[IteratorStateMachine(typeof(<PlaySoundAndAnimationsForUnlock>d__40))]
	private IEnumerator<float> PlaySoundAndAnimationsForUnlock()
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC12540", Offset = "0xC12540", VA = "0xC12540")]
	private void ValidateDependentItemsLockState()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC1155C", Offset = "0xC1155C", VA = "0xC1155C")]
	private void ReportProgressToNativePlatform()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC12AAC", Offset = "0xC12AAC", VA = "0xC12AAC")]
	[IteratorStateMachine(typeof(<ReportProgressToNativePlatformCo>d__43))]
	private IEnumerator<float> ReportProgressToNativePlatformCo()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xC12958", Offset = "0xC12958", VA = "0xC12958")]
	private void ReportToNativePlatform()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xC12B48", Offset = "0xC12B48", VA = "0xC12B48")]
	[IteratorStateMachine(typeof(<ReportToNativePlatformCo>d__45))]
	private IEnumerator<float> ReportToNativePlatformCo()
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xC12BE4", Offset = "0xC12BE4", VA = "0xC12BE4")]
	protected Achievement()
	{
	}
}
[Token(Token = "0x200001B")]
public class Achievements : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200001D")]
	[CompilerGenerated]
	private sealed class <Initialize>d__47 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<(Achievement achievement, CoroutineHandle reloadHandle)>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000026")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000A4")]
			[Address(RVA = "0xC168B4", Offset = "0xC168B4", VA = "0xC168B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A6")]
			[Address(RVA = "0xC168FC", Offset = "0xC168FC", VA = "0xC168FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xC1579C", Offset = "0xC1579C", VA = "0xC1579C")]
		[DebuggerHidden]
		public <Initialize>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xC15D7C", Offset = "0xC15D7C", VA = "0xC15D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xC15D98", Offset = "0xC15D98", VA = "0xC15D98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xC16864", Offset = "0xC16864", VA = "0xC16864")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xC168BC", Offset = "0xC168BC", VA = "0xC168BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	public const int ACHIEVEMENTS_COUNT = 28;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Achievements inst;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoloStarsAchievement soloStars;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OldTimerAchievement oldTimer;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MegahitAchievement megahit;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnFireAchievement onFire;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UntetheredAchievement untethered;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BackhandGamerAchievement backhandGamer;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BackhandCompetitorAchievement backhandCompetitor;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BackhandAthleteAchievement backhandAthlete;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SelfMadeAchievement selfMade;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RecklessAchievement reckless;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DestroyerAchievement destroyer;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BallSlingerAchievement ballSlinger;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GalacticCitizenAchievement galacticCitizen;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PromisingStartAchievement promisingStart;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FriendlyChapetteAchievement friendlyChapette;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnRouteAchievement enRoute;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GalacticChildAchievement galacticChild;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MrPlowAchievement mrPlow;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SurvivorAchievement survivor;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EnlightenmentAchievement enlightenment;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GrinderAchievement grinder;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MarathonAchievement marathon;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SnakeWhispererAchievement snakeWhisperer;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PerformanceEnhancerAchievement performanceEnhancer;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TripletsAchievement triplets;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TripleTripletsAchievement tripleTriplets;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SnakeCharmerAchievement snakeCharmer;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PowerThirstyAchievement powerThirsty;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Dictionary<string, Achievement> achievementsById;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly List<Achievement> achievementIdProgressedOnLastGame;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly Dictionary<string, float> achievement2ProgresseBeforeGameStart;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public readonly List<Achievement> achievementIdUnlockedOnLastGame;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public readonly HashSet<string> achievementIdLockedBeforeLastGame;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _inGame;

	[Token(Token = "0x17000024")]
	public static bool Ready
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0xC14804", Offset = "0xC14804", VA = "0xC14804")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600008E")]
		[Address(RVA = "0xC1485C", Offset = "0xC1485C", VA = "0xC1485C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public static Achievement[] achievements
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xC148B8", Offset = "0xC148B8", VA = "0xC148B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC1494C", Offset = "0xC1494C", VA = "0xC1494C")]
	public static Achievement AchievementById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC14A08", Offset = "0xC14A08", VA = "0xC14A08")]
	public void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC14D00", Offset = "0xC14D00", VA = "0xC14D00")]
	private void OnWaveStart(string _, int index)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC14EEC", Offset = "0xC14EEC", VA = "0xC14EEC")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC154B0", Offset = "0xC154B0", VA = "0xC154B0")]
	public Dictionary<string, Achievement> AchievementsToDict()
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC14CA0", Offset = "0xC14CA0", VA = "0xC14CA0")]
	[IteratorStateMachine(typeof(<Initialize>d__47))]
	private static IEnumerator<float> Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xC157C4", Offset = "0xC157C4", VA = "0xC157C4", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xC15834", Offset = "0xC15834", VA = "0xC15834")]
	public Achievements()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class BackhandAthleteAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x4000081")]
	private const int SOLO_SETS_THRESH = 3;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _usedForehand;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _hitRacketOnce;

	[Token(Token = "0x17000028")]
	public override int CountThreshold
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xC16958", Offset = "0xC16958", VA = "0xC16958", Slot = "17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xC16960", Offset = "0xC16960", VA = "0xC16960", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xC16A60", Offset = "0xC16A60", VA = "0xC16A60", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xC16B60", Offset = "0xC16B60", VA = "0xC16B60")]
	private void OnBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xC16C2C", Offset = "0xC16C2C", VA = "0xC16C2C")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xC16D10", Offset = "0xC16D10", VA = "0xC16D10", Slot = "15")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xC16D18", Offset = "0xC16D18", VA = "0xC16D18", Slot = "16")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xC16D20", Offset = "0xC16D20", VA = "0xC16D20")]
	public BackhandAthleteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class BackhandCompetitorAchievement : CountAchievement
{
	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC16D68", Offset = "0xC16D68", VA = "0xC16D68", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xC16E0C", Offset = "0xC16E0C", VA = "0xC16E0C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xC16EB0", Offset = "0xC16EB0", VA = "0xC16EB0")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xC17534", Offset = "0xC17534", VA = "0xC17534")]
	public BackhandCompetitorAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class BackhandGamerAchievement : CountAchievement
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _streakCount;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xC17554", Offset = "0xC17554", VA = "0xC17554", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xC1767C", Offset = "0xC1767C", VA = "0xC1767C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xC177A4", Offset = "0xC177A4", VA = "0xC177A4")]
	private void OnResetStreakCounter()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xC177AC", Offset = "0xC177AC", VA = "0xC177AC")]
	private void OnStreakIncreased(int _, ShotInfo shotInfo)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC17900", Offset = "0xC17900", VA = "0xC17900")]
	public BackhandGamerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class BallSlingerAchievement : Achievement
{
	[Token(Token = "0x2000022")]
	[CompilerGenerated]
	private sealed class <TimerCo>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BallSlingerAchievement <>4__this;

		[Token(Token = "0x1700002B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0xC183E4", Offset = "0xC183E4", VA = "0xC183E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0xC1842C", Offset = "0xC1842C", VA = "0xC1842C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xC182BC", Offset = "0xC182BC", VA = "0xC182BC")]
		[DebuggerHidden]
		public <TimerCo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xC18314", Offset = "0xC18314", VA = "0xC18314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xC18318", Offset = "0xC18318", VA = "0xC18318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xC183EC", Offset = "0xC183EC", VA = "0xC183EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeThreshold;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _lastProgressTime;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _timer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CoroutineHandle _timerCo;

	[Token(Token = "0x17000029")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xC17910", Offset = "0xC17910", VA = "0xC17910", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xC1795C", Offset = "0xC1795C", VA = "0xC1795C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC179A8", Offset = "0xC179A8", VA = "0xC179A8", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xC179B4", Offset = "0xC179B4", VA = "0xC179B4", Slot = "5")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xC179E0", Offset = "0xC179E0", VA = "0xC179E0", Slot = "13")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xC17A2C", Offset = "0xC17A2C", VA = "0xC17A2C", Slot = "14")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xC17A70", Offset = "0xC17A70", VA = "0xC17A70")]
	private float Deserialize(string inp)
	{
		return default(float);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xC17AA0", Offset = "0xC17AA0", VA = "0xC17AA0", Slot = "6")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC17B10", Offset = "0xC17B10", VA = "0xC17B10", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC17D4C", Offset = "0xC17D4C", VA = "0xC17D4C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC17FBC", Offset = "0xC17FBC", VA = "0xC17FBC")]
	private void ResetTimerAndSave()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC17FD8", Offset = "0xC17FD8", VA = "0xC17FD8")]
	private bool ShouldTimerStop()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xC1812C", Offset = "0xC1812C", VA = "0xC1812C")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xC181C4", Offset = "0xC181C4", VA = "0xC181C4")]
	private void StopTimer()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xC18248", Offset = "0xC18248", VA = "0xC18248")]
	[IteratorStateMachine(typeof(<TimerCo>d__20))]
	private IEnumerator<float> TimerCo()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xC182E4", Offset = "0xC182E4", VA = "0xC182E4")]
	private void OnBallTakeOwnership(Ball _)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xC182E8", Offset = "0xC182E8", VA = "0xC182E8")]
	private void OnBallGiveOwnership(Ball _)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xC182EC", Offset = "0xC182EC", VA = "0xC182EC")]
	private void OnBallContact()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xC182F0", Offset = "0xC182F0", VA = "0xC182F0")]
	private void OnBallHitRacket(ShotInfo s, Vector3 _)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xC182F4", Offset = "0xC182F4", VA = "0xC182F4")]
	private void OnWaveEnded(string s, int _)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xC182F8", Offset = "0xC182F8", VA = "0xC182F8")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xC182FC", Offset = "0xC182FC", VA = "0xC182FC")]
	public BallSlingerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class DestroyerAchievement : CountAchievement
{
	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xC18488", Offset = "0xC18488", VA = "0xC18488", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xC1852C", Offset = "0xC1852C", VA = "0xC1852C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xC185D0", Offset = "0xC185D0", VA = "0xC185D0")]
	private void OnShotFinilized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xC186B8", Offset = "0xC186B8", VA = "0xC186B8")]
	public DestroyerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class DomeTrotterAchievement : SimpleAchievement
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <CheckForBehindBackState>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DomeTrotterAchievement <>4__this;

		[Token(Token = "0x1700002D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0xC1933C", Offset = "0xC1933C", VA = "0xC1933C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0xC19384", Offset = "0xC19384", VA = "0xC19384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xC18E30", Offset = "0xC18E30", VA = "0xC18E30")]
		[DebuggerHidden]
		public <CheckForBehindBackState>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xC192E0", Offset = "0xC192E0", VA = "0xC192E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xC192E4", Offset = "0xC192E4", VA = "0xC192E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xC19344", Offset = "0xC19344", VA = "0xC19344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool debugWithDIG;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _lastWasShotBehindBack;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CoroutineHandle _checkForBehindBackStateCo;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _timeInOppositeQuadrant;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _isBehindBack;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _wasInVQuadrant;

	[Token(Token = "0x4000092")]
	public const float RESET_TIME = 1000f;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xC186C8", Offset = "0xC186C8", VA = "0xC186C8", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xC1881C", Offset = "0xC1881C", VA = "0xC1881C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xC189D4", Offset = "0xC189D4", VA = "0xC189D4")]
	private void OnBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xC18C58", Offset = "0xC18C58", VA = "0xC18C58")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC18C84", Offset = "0xC18C84", VA = "0xC18C84")]
	private bool IsWinReason(GameEndReason reason)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC18A98", Offset = "0xC18A98", VA = "0xC18A98")]
	private bool IsShotBehindBack(ShotInfo shot)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xC18D44", Offset = "0xC18D44", VA = "0xC18D44")]
	private void RegisterUpdateCo()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xC18978", Offset = "0xC18978", VA = "0xC18978")]
	private void UnRegisterUpdateCo()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xC18DBC", Offset = "0xC18DBC", VA = "0xC18DBC")]
	[IteratorStateMachine(typeof(<CheckForBehindBackState>d__11))]
	private IEnumerator<float> CheckForBehindBackState()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xC18E58", Offset = "0xC18E58", VA = "0xC18E58")]
	private void UpdateBehindBackShot()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xC192C0", Offset = "0xC192C0", VA = "0xC192C0")]
	public DomeTrotterAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class EnlightenmentAchievement : SurvivorAchievement
{
	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xC193E0", Offset = "0xC193E0", VA = "0xC193E0")]
	public EnlightenmentAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000027")]
public class EnRouteAchievement : CountAchievement
{
	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xC19410", Offset = "0xC19410", VA = "0xC19410", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xC194B4", Offset = "0xC194B4", VA = "0xC194B4", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC19558", Offset = "0xC19558", VA = "0xC19558")]
	private void OnShotFinilized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC19640", Offset = "0xC19640", VA = "0xC19640")]
	public EnRouteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000028")]
public class FriendlyChapetteAchievement : CountAchievement
{
	[Token(Token = "0x2000029")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriendlyChapetteAchievement <>4__this;

		[Token(Token = "0x17000030")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000F9")]
			[Address(RVA = "0xC19C9C", Offset = "0xC19C9C", VA = "0xC19C9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0xC19CE4", Offset = "0xC19CE4", VA = "0xC19CE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xC19B00", Offset = "0xC19B00", VA = "0xC19B00")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xC19BB8", Offset = "0xC19BB8", VA = "0xC19BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xC19BBC", Offset = "0xC19BBC", VA = "0xC19BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xC19CA4", Offset = "0xC19CA4", VA = "0xC19CA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x1700002F")]
	private bool _InValidArena
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xC19650", Offset = "0xC19650", VA = "0xC19650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC19728", Offset = "0xC19728", VA = "0xC19728", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC197CC", Offset = "0xC197CC", VA = "0xC197CC", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC198AC", Offset = "0xC198AC", VA = "0xC198AC")]
	private void OnRoundStarted()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC19A20", Offset = "0xC19A20", VA = "0xC19A20")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC199AC", Offset = "0xC199AC", VA = "0xC199AC")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__7))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC19B28", Offset = "0xC19B28", VA = "0xC19B28")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC19BA8", Offset = "0xC19BA8", VA = "0xC19BA8")]
	public FriendlyChapetteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class GalacticChildAchievement : HashSetAchievement<GalacticChildAchievement.GameMode>
{
	[Serializable]
	[Token(Token = "0x200002B")]
	public enum GameMode
	{
		[Token(Token = "0x400009B")]
		None,
		[Token(Token = "0x400009C")]
		A,
		[Token(Token = "0x400009D")]
		S,
		[Token(Token = "0x400009E")]
		M
	}

	[Token(Token = "0x17000032")]
	public override int CountThreshold
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xC19D40", Offset = "0xC19D40", VA = "0xC19D40", Slot = "17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC19D48", Offset = "0xC19D48", VA = "0xC19D48", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC19DEC", Offset = "0xC19DEC", VA = "0xC19DEC", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC19E90", Offset = "0xC19E90", VA = "0xC19E90")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC19F38", Offset = "0xC19F38", VA = "0xC19F38")]
	private static GameMode Mode2Mode(Analytiks.GameMode gameMode)
	{
		return default(GameMode);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC19F5C", Offset = "0xC19F5C", VA = "0xC19F5C", Slot = "15")]
	protected override GameMode DeserializeItem(string item)
	{
		return default(GameMode);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xC19FE8", Offset = "0xC19FE8", VA = "0xC19FE8", Slot = "16")]
	protected override string SerializeItem(GameMode item)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xC1A04C", Offset = "0xC1A04C", VA = "0xC1A04C")]
	public GalacticChildAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class GalacticCitizenAchievement : Achievement
{
	[Serializable]
	[Token(Token = "0x200002D")]
	public enum GameMode
	{
		[Token(Token = "0x40000A4")]
		None,
		[Token(Token = "0x40000A5")]
		AZ,
		[Token(Token = "0x40000A6")]
		AC,
		[Token(Token = "0x40000A7")]
		AN,
		[Token(Token = "0x40000A8")]
		SC,
		[Token(Token = "0x40000A9")]
		SMC,
		[Token(Token = "0x40000AA")]
		MPV,
		[Token(Token = "0x40000AB")]
		MPC
	}

	[Token(Token = "0x40000A0")]
	private const int NUM_OF_GAME_MODES = 7;

	[Token(Token = "0x40000A1")]
	private const int MAX_PLAYES_PER_MODE = 2;

	[Token(Token = "0x40000A2")]
	private const int TOTAL_PLAYS = 14;

	[Token(Token = "0x17000033")]
	public Dictionary<string, int> Dict
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xC1A094", Offset = "0xC1A094", VA = "0xC1A094")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xC1A09C", Offset = "0xC1A09C", VA = "0xC1A09C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xC1A0A4", Offset = "0xC1A0A4", VA = "0xC1A0A4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xC1A11C", Offset = "0xC1A11C", VA = "0xC1A11C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC1A13C", Offset = "0xC1A13C", VA = "0xC1A13C", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC1A158", Offset = "0xC1A158", VA = "0xC1A158", Slot = "5")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC1A16C", Offset = "0xC1A16C", VA = "0xC1A16C")]
	protected int MergeValue(int offlineValue, int onlineValue)
	{
		return default(int);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC1A178", Offset = "0xC1A178", VA = "0xC1A178", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC1A21C", Offset = "0xC1A21C", VA = "0xC1A21C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC1A2C0", Offset = "0xC1A2C0", VA = "0xC1A2C0")]
	private GameMode Mode2Mode(Analytiks.GameMode gameMode)
	{
		return default(GameMode);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC1A2E4", Offset = "0xC1A2E4", VA = "0xC1A2E4")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xC1A0C4", Offset = "0xC1A0C4", VA = "0xC1A0C4")]
	private int PlayedModesCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC1A490", Offset = "0xC1A490", VA = "0xC1A490", Slot = "6")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xC1A720", Offset = "0xC1A720", VA = "0xC1A720", Slot = "13")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xC1A77C", Offset = "0xC1A77C", VA = "0xC1A77C", Slot = "14")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xC1A67C", Offset = "0xC1A67C", VA = "0xC1A67C")]
	private Dictionary<string, int> Deserialize(string json)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xC1A79C", Offset = "0xC1A79C", VA = "0xC1A79C")]
	public GalacticCitizenAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class GrinderAchievement : CountAchievement
{
	[Token(Token = "0x200002F")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrinderAchievement <>4__this;

		[Token(Token = "0x17000037")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000122")]
			[Address(RVA = "0xC1B174", Offset = "0xC1B174", VA = "0xC1B174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000124")]
			[Address(RVA = "0xC1B1BC", Offset = "0xC1B1BC", VA = "0xC1B1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xC1AF3C", Offset = "0xC1AF3C", VA = "0xC1AF3C")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xC1B090", Offset = "0xC1B090", VA = "0xC1B090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0xC1B094", Offset = "0xC1B094", VA = "0xC1B094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0xC1B17C", Offset = "0xC1B17C", VA = "0xC1B17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _powerShotUsed;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _shotFinalized;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000036")]
	private bool _InValidArena
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xC1A82C", Offset = "0xC1A82C", VA = "0xC1A82C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xC1A90C", Offset = "0xC1A90C", VA = "0xC1A90C", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xC1A9B0", Offset = "0xC1A9B0", VA = "0xC1A9B0", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xC1AA5C", Offset = "0xC1AA5C", VA = "0xC1AA5C")]
	private void UnregisterEvents()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xC1ABB4", Offset = "0xC1ABB4", VA = "0xC1ABB4")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC1ADAC", Offset = "0xC1ADAC", VA = "0xC1ADAC")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC1ADE4", Offset = "0xC1ADE4", VA = "0xC1ADE4")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC1AD38", Offset = "0xC1AD38", VA = "0xC1AD38")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__11))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC1AF64", Offset = "0xC1AF64", VA = "0xC1AF64")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC1B080", Offset = "0xC1B080", VA = "0xC1B080")]
	public GrinderAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class MarathonAchievement : CountAchievement
{
	[Token(Token = "0x2000031")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MarathonAchievement <>4__this;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700003B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000131")]
			[Address(RVA = "0xC1B7E4", Offset = "0xC1B7E4", VA = "0xC1B7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000133")]
			[Address(RVA = "0xC1B82C", Offset = "0xC1B82C", VA = "0xC1B82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xC1B620", Offset = "0xC1B620", VA = "0xC1B620")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xC1B678", Offset = "0xC1B678", VA = "0xC1B678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xC1B67C", Offset = "0xC1B67C", VA = "0xC1B67C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xC1B7EC", Offset = "0xC1B7EC", VA = "0xC1B7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B2")]
	private const float SAVE_RATE = 5f;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _inGame;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _timePlayedInSession;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000039")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xC1B218", Offset = "0xC1B218", VA = "0xC1B218", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xC1B254", Offset = "0xC1B254", VA = "0xC1B254", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC1B290", Offset = "0xC1B290", VA = "0xC1B290", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC1B394", Offset = "0xC1B394", VA = "0xC1B394", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xC1B4C8", Offset = "0xC1B4C8", VA = "0xC1B4C8")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC1B5C0", Offset = "0xC1B5C0", VA = "0xC1B5C0")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC1B54C", Offset = "0xC1B54C", VA = "0xC1B54C")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__12))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC1B648", Offset = "0xC1B648", VA = "0xC1B648")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC1B668", Offset = "0xC1B668", VA = "0xC1B668")]
	public MarathonAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class MegahitAchievement : CountAchievement
{
	[Token(Token = "0x6000134")]
	[Address(RVA = "0xC1B888", Offset = "0xC1B888", VA = "0xC1B888", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xC1B92C", Offset = "0xC1B92C", VA = "0xC1B92C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xC1B9D0", Offset = "0xC1B9D0", VA = "0xC1B9D0")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xC1BAB0", Offset = "0xC1BAB0", VA = "0xC1BAB0")]
	public MegahitAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class MrPlowAchievement : CountAchievement
{
	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC1BAC0", Offset = "0xC1BAC0", VA = "0xC1BAC0", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC1BB64", Offset = "0xC1BB64", VA = "0xC1BB64", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC1BC08", Offset = "0xC1BC08", VA = "0xC1BC08")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC1BCEC", Offset = "0xC1BCEC", VA = "0xC1BCEC")]
	public MrPlowAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class NightmareAchievement : SurvivorAchievement
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC1BCFC", Offset = "0xC1BCFC", VA = "0xC1BCFC")]
	public NightmareAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class OldTimerAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x2000037")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OldTimerAchievement <>4__this;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<string> <medalsMcs>5__2;

		[Token(Token = "0x1700003E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0xC1CA54", Offset = "0xC1CA54", VA = "0xC1CA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000153")]
			[Address(RVA = "0xC1CA9C", Offset = "0xC1CA9C", VA = "0xC1CA9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xC1C4A4", Offset = "0xC1C4A4", VA = "0xC1C4A4")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xC1C6E8", Offset = "0xC1C6E8", VA = "0xC1C6E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0xC1C6EC", Offset = "0xC1C6EC", VA = "0xC1C6EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xC1CA5C", Offset = "0xC1CA5C", VA = "0xC1CA5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public override int CountThreshold
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xC1BD14", Offset = "0xC1BD14", VA = "0xC1BD14", Slot = "17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC1BD1C", Offset = "0xC1BD1C", VA = "0xC1BD1C", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC1BDC0", Offset = "0xC1BDC0", VA = "0xC1BDC0", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC1BE64", Offset = "0xC1BE64", VA = "0xC1BE64")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC1C09C", Offset = "0xC1C09C", VA = "0xC1C09C")]
	private HashSet<string> GetFinishedMcFromMedals()
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC1C430", Offset = "0xC1C430", VA = "0xC1C430", Slot = "10")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__6))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xC1BFCC", Offset = "0xC1BFCC", VA = "0xC1BFCC")]
	private void CountSetAndUnlockIfPossible(string setId)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xC1C4CC", Offset = "0xC1C4CC", VA = "0xC1C4CC", Slot = "15")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xC1C4D4", Offset = "0xC1C4D4", VA = "0xC1C4D4", Slot = "16")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xC1C4DC", Offset = "0xC1C4DC", VA = "0xC1C4DC")]
	public OldTimerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class OnFireAchievement : CountAchievement
{
	[Token(Token = "0x6000154")]
	[Address(RVA = "0xC1CAF8", Offset = "0xC1CAF8", VA = "0xC1CAF8", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xC1CC00", Offset = "0xC1CC00", VA = "0xC1CC00", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xC1CD08", Offset = "0xC1CD08", VA = "0xC1CD08")]
	private void OnStreakIncreased(int _)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xC1CDEC", Offset = "0xC1CDEC", VA = "0xC1CDEC")]
	public OnFireAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class PerformanceEnhancerAchievement : CountAchievement
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0xC1CDFC", Offset = "0xC1CDFC", VA = "0xC1CDFC", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC1CEA0", Offset = "0xC1CEA0", VA = "0xC1CEA0", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC1CF44", Offset = "0xC1CF44", VA = "0xC1CF44")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xC1D044", Offset = "0xC1D044", VA = "0xC1D044")]
	public PerformanceEnhancerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class PowerThirstyAchievement : HashSetAchievement<PowerThirstyAchievement.PuType>
{
	[Serializable]
	[Token(Token = "0x200003B")]
	public enum PuType
	{
		[Token(Token = "0x40000C5")]
		None,
		[Token(Token = "0x40000C6")]
		SD,
		[Token(Token = "0x40000C7")]
		N,
		[Token(Token = "0x40000C8")]
		GM,
		[Token(Token = "0x40000C9")]
		SF,
		[Token(Token = "0x40000CA")]
		B,
		[Token(Token = "0x40000CB")]
		J,
		[Token(Token = "0x40000CC")]
		H,
		[Token(Token = "0x40000CD")]
		I,
		[Token(Token = "0x40000CE")]
		W,
		[Token(Token = "0x40000CF")]
		SS
	}

	[Token(Token = "0x17000040")]
	public override int CountThreshold
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0xC1D054", Offset = "0xC1D054", VA = "0xC1D054", Slot = "17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xC1D05C", Offset = "0xC1D05C", VA = "0xC1D05C")]
	private PuType type2type(PowerupType type)
	{
		return default(PuType);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xC1D06C", Offset = "0xC1D06C", VA = "0xC1D06C", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC1D110", Offset = "0xC1D110", VA = "0xC1D110", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC1D1B4", Offset = "0xC1D1B4", VA = "0xC1D1B4")]
	private void OnPowerupTaken(Player player, BasePowerup pu)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC1D2B8", Offset = "0xC1D2B8", VA = "0xC1D2B8", Slot = "15")]
	protected override PuType DeserializeItem(string item)
	{
		return default(PuType);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xC1D344", Offset = "0xC1D344", VA = "0xC1D344", Slot = "16")]
	protected override string SerializeItem(PuType item)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xC1D3A8", Offset = "0xC1D3A8", VA = "0xC1D3A8")]
	public PowerThirstyAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class PromisingStartAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x17000041")]
	public override int CountThreshold
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xC1D3F0", Offset = "0xC1D3F0", VA = "0xC1D3F0", Slot = "17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xC1D3F8", Offset = "0xC1D3F8", VA = "0xC1D3F8", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xC1D49C", Offset = "0xC1D49C", VA = "0xC1D49C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xC1D540", Offset = "0xC1D540", VA = "0xC1D540")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xC1D774", Offset = "0xC1D774", VA = "0xC1D774", Slot = "9")]
	protected override void RetroactiveProgress()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xC1DA38", Offset = "0xC1DA38", VA = "0xC1DA38", Slot = "15")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xC1DA40", Offset = "0xC1DA40", VA = "0xC1DA40", Slot = "16")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xC1DA48", Offset = "0xC1DA48", VA = "0xC1DA48")]
	public PromisingStartAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class RecklessAchievement : CountAchievement
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _curGameDownersCount;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<uint> _hitTarget;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xC1DA90", Offset = "0xC1DA90", VA = "0xC1DA90", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC1DBB8", Offset = "0xC1DBB8", VA = "0xC1DBB8", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC1DCDC", Offset = "0xC1DCDC", VA = "0xC1DCDC")]
	private void OnBallHitHex(ShotInfo shot, HexTile hex)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xC1DD8C", Offset = "0xC1DD8C", VA = "0xC1DD8C")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC1DE58", Offset = "0xC1DE58", VA = "0xC1DE58")]
	public RecklessAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003E")]
public class SelfMadeAchievement : CountAchievement
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _usedPU;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xC1DEE8", Offset = "0xC1DEE8", VA = "0xC1DEE8", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC1E00C", Offset = "0xC1E00C", VA = "0xC1E00C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xC1E130", Offset = "0xC1E130", VA = "0xC1E130")]
	private void OnFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xC1E1DC", Offset = "0xC1E1DC", VA = "0xC1E1DC")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xC1E2F0", Offset = "0xC1E2F0", VA = "0xC1E2F0")]
	public SelfMadeAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003F")]
public class SnakeCharmerAchievement : CountAchievement
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private uint? _lastOneShotSnakeId;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xC1E300", Offset = "0xC1E300", VA = "0xC1E300", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xC1E424", Offset = "0xC1E424", VA = "0xC1E424", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xC1E548", Offset = "0xC1E548", VA = "0xC1E548")]
	private void OnGameStarted()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xC1E550", Offset = "0xC1E550", VA = "0xC1E550")]
	private void OnActualDealDamage(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xC1E6EC", Offset = "0xC1E6EC", VA = "0xC1E6EC")]
	public SnakeCharmerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class SnakeWhispererAchievement : CountAchievement
{
	[Token(Token = "0x600017B")]
	[Address(RVA = "0xC1E6FC", Offset = "0xC1E6FC", VA = "0xC1E6FC", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xC1E7A0", Offset = "0xC1E7A0", VA = "0xC1E7A0", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xC1E844", Offset = "0xC1E844", VA = "0xC1E844")]
	private void OnActualDealDamage(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xC1E968", Offset = "0xC1E968", VA = "0xC1E968")]
	public SnakeWhispererAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class SoloStarsAchievement : CountAchievement
{
	[Token(Token = "0x2000043")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoloStarsAchievement <>4__this;

		[Token(Token = "0x17000042")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0xC1EED8", Offset = "0xC1EED8", VA = "0xC1EED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018E")]
			[Address(RVA = "0xC1EF20", Offset = "0xC1EF20", VA = "0xC1EF20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xC1E9EC", Offset = "0xC1E9EC", VA = "0xC1E9EC")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xC1ED98", Offset = "0xC1ED98", VA = "0xC1ED98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xC1ED9C", Offset = "0xC1ED9C", VA = "0xC1ED9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xC1EEE0", Offset = "0xC1EEE0", VA = "0xC1EEE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xC1E978", Offset = "0xC1E978", VA = "0xC1E978", Slot = "10")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__0))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xC1EA14", Offset = "0xC1EA14", VA = "0xC1EA14", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xC1EAB8", Offset = "0xC1EAB8", VA = "0xC1EAB8", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xC1EB5C", Offset = "0xC1EB5C", VA = "0xC1EB5C")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xC1EBEC", Offset = "0xC1EBEC", VA = "0xC1EBEC")]
	private void SetStarsCount()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xC1EC08", Offset = "0xC1EC08", VA = "0xC1EC08")]
	private static int CountStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xC1EC88", Offset = "0xC1EC88", VA = "0xC1EC88")]
	public SoloStarsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000044")]
public class SurvivorAchievement : Achievement
{
	[Token(Token = "0x2000045")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__22 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SurvivorAchievement <>4__this;

		[Token(Token = "0x17000047")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0xC1F8C4", Offset = "0xC1F8C4", VA = "0xC1F8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A5")]
			[Address(RVA = "0xC1F90C", Offset = "0xC1F90C", VA = "0xC1F90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xC1F6EC", Offset = "0xC1F6EC", VA = "0xC1F6EC")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xC1F7B0", Offset = "0xC1F7B0", VA = "0xC1F7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xC1F7B4", Offset = "0xC1F7B4", VA = "0xC1F7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC1F8CC", Offset = "0xC1F8CC", VA = "0xC1F8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D9")]
	private const float SAVE_RATE = 5f;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ArcadeType arcadeType;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxTime;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _currentTime;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000044")]
	private bool _InValidArena
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xC1EF7C", Offset = "0xC1EF7C", VA = "0xC1EF7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000045")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xC1F06C", Offset = "0xC1F06C", VA = "0xC1F06C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xC1F100", Offset = "0xC1F100", VA = "0xC1F100", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC1F1A8", Offset = "0xC1F1A8", VA = "0xC1F1A8", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC1F1B4", Offset = "0xC1F1B4", VA = "0xC1F1B4", Slot = "5")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC1F1D4", Offset = "0xC1F1D4", VA = "0xC1F1D4", Slot = "13")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC1F1DC", Offset = "0xC1F1DC", VA = "0xC1F1DC")]
	private string Serialize(float time)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC1F22C", Offset = "0xC1F22C", VA = "0xC1F22C", Slot = "14")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xC1F270", Offset = "0xC1F270", VA = "0xC1F270")]
	private float Deserialize(string progress)
	{
		return default(float);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xC1F2A0", Offset = "0xC1F2A0", VA = "0xC1F2A0", Slot = "6")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xC1F310", Offset = "0xC1F310", VA = "0xC1F310", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xC1F3B4", Offset = "0xC1F3B4", VA = "0xC1F3B4", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xC1F494", Offset = "0xC1F494", VA = "0xC1F494")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xC1F60C", Offset = "0xC1F60C", VA = "0xC1F60C")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xC1F598", Offset = "0xC1F598", VA = "0xC1F598")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__22))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xC1F714", Offset = "0xC1F714", VA = "0xC1F714")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xC193F8", Offset = "0xC193F8", VA = "0xC193F8")]
	public SurvivorAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class TripleTripletsAchievement : CountAchievement
{
	[Token(Token = "0x2000048")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TripleTripletsAchievement <>4__this;

		[Token(Token = "0x17000049")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0xC20054", Offset = "0xC20054", VA = "0xC20054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0xC2009C", Offset = "0xC2009C", VA = "0xC2009C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xC1FDDC", Offset = "0xC1FDDC", VA = "0xC1FDDC")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xC1FF14", Offset = "0xC1FF14", VA = "0xC1FF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xC1FF18", Offset = "0xC1FF18", VA = "0xC1FF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xC2005C", Offset = "0xC2005C", VA = "0xC2005C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC1F968", Offset = "0xC1F968", VA = "0xC1F968", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC1FA0C", Offset = "0xC1FA0C", VA = "0xC1FA0C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC1FAB0", Offset = "0xC1FAB0", VA = "0xC1FAB0")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC1FB40", Offset = "0xC1FB40", VA = "0xC1FB40")]
	private void SetStagesCount()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC1FD68", Offset = "0xC1FD68", VA = "0xC1FD68", Slot = "10")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__4))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC1FB5C", Offset = "0xC1FB5C", VA = "0xC1FB5C")]
	private static int CountNumOfStagesWith3SetsWith3Stars()
	{
		return default(int);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC1FE04", Offset = "0xC1FE04", VA = "0xC1FE04")]
	public TripleTripletsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000049")]
public class TripletsAchievement : CountAchievement
{
	[Token(Token = "0x200004B")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TripletsAchievement <>4__this;

		[Token(Token = "0x1700004B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001C3")]
			[Address(RVA = "0xC207E0", Offset = "0xC207E0", VA = "0xC207E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0xC20828", Offset = "0xC20828", VA = "0xC20828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xC20568", Offset = "0xC20568", VA = "0xC20568")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xC206A0", Offset = "0xC206A0", VA = "0xC206A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xC206A4", Offset = "0xC206A4", VA = "0xC206A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xC207E8", Offset = "0xC207E8", VA = "0xC207E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC200F8", Offset = "0xC200F8", VA = "0xC200F8", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC2019C", Offset = "0xC2019C", VA = "0xC2019C", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC20240", Offset = "0xC20240", VA = "0xC20240")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC202D0", Offset = "0xC202D0", VA = "0xC202D0")]
	private void SetStarsCount()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xC204F4", Offset = "0xC204F4", VA = "0xC204F4", Slot = "10")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__4))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC202EC", Offset = "0xC202EC", VA = "0xC202EC")]
	private static int CountNumOfSetsWith3Stars()
	{
		return default(int);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC20590", Offset = "0xC20590", VA = "0xC20590")]
	public TripletsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200004C")]
public class UntetheredAchievement : CountAchievement
{
	[Token(Token = "0x200004D")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UntetheredAchievement <>4__this;

		[Token(Token = "0x1700004E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xC21008", Offset = "0xC21008", VA = "0xC21008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D5")]
			[Address(RVA = "0xC21050", Offset = "0xC21050", VA = "0xC21050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xC20DC8", Offset = "0xC20DC8", VA = "0xC20DC8")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xC20F24", Offset = "0xC20F24", VA = "0xC20F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xC20F28", Offset = "0xC20F28", VA = "0xC20F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xC21010", Offset = "0xC21010", VA = "0xC21010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _tractorUsed;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x1700004D")]
	private bool _InValidArena
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xC20884", Offset = "0xC20884", VA = "0xC20884")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC20964", Offset = "0xC20964", VA = "0xC20964", Slot = "11")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC20A08", Offset = "0xC20A08", VA = "0xC20A08", Slot = "12")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC20BEC", Offset = "0xC20BEC", VA = "0xC20BEC")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC20AB4", Offset = "0xC20AB4", VA = "0xC20AB4")]
	private void UnregisterEvents()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC20BF0", Offset = "0xC20BF0", VA = "0xC20BF0")]
	private void OnSlingBegin(bool opponentBall)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC20C00", Offset = "0xC20C00", VA = "0xC20C00")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC20D54", Offset = "0xC20D54", VA = "0xC20D54")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__10))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC20DF0", Offset = "0xC20DF0", VA = "0xC20DF0")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC20F14", Offset = "0xC20F14", VA = "0xC20F14")]
	public UntetheredAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200004E")]
public abstract class CountAchievement : Achievement
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int Max;

	[Token(Token = "0x17000050")]
	public int Count
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xC210AC", Offset = "0xC210AC", VA = "0xC210AC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xC210B4", Offset = "0xC210B4", VA = "0xC210B4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xC21170", Offset = "0xC21170", VA = "0xC21170", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xC21190", Offset = "0xC21190", VA = "0xC21190", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC210BC", Offset = "0xC210BC", VA = "0xC210BC", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC210D0", Offset = "0xC210D0", VA = "0xC210D0", Slot = "5")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xC210D8", Offset = "0xC210D8", VA = "0xC210D8", Slot = "6")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xC16FC8", Offset = "0xC16FC8", VA = "0xC16FC8")]
	protected void SetCount(int count)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xC2119C", Offset = "0xC2119C", VA = "0xC2119C", Slot = "13")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xC211D8", Offset = "0xC211D8", VA = "0xC211D8", Slot = "14")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xC21144", Offset = "0xC21144", VA = "0xC21144")]
	private int Deserialize(string str)
	{
		return default(int);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xC211BC", Offset = "0xC211BC", VA = "0xC211BC")]
	private string Serialize(int count)
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xC17544", Offset = "0xC17544", VA = "0xC17544")]
	protected CountAchievement()
	{
	}
}
[Token(Token = "0x200004F")]
public abstract class HashSetAchievement<T> : Achievement
{
	[Token(Token = "0x17000053")]
	protected HashSet<T> Items
	{
		[Token(Token = "0x60001E3")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public abstract int CountThreshold
	{
		[Token(Token = "0x60001EB")]
		get;
	}

	[Token(Token = "0x17000055")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001ED")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E5")]
	protected void AddItem(T item)
	{
	}

	[Token(Token = "0x60001E6")]
	protected void UnlockIfPossible()
	{
	}

	[Token(Token = "0x60001E7")]
	protected abstract T DeserializeItem(string item);

	[Token(Token = "0x60001E8")]
	protected abstract string SerializeItem(T item);

	[Token(Token = "0x60001E9")]
	private string Serialize(HashSet<T> inp)
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	private HashSet<T> Deserialize(string progress)
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001EF")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x60001F0")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001F2")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	protected HashSetAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000050")]
public abstract class SimpleAchievement : Achievement
{
	[Token(Token = "0x17000057")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xC21218", Offset = "0xC21218", VA = "0xC21218", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xC21260", Offset = "0xC21260", VA = "0xC21260", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xC212A8", Offset = "0xC212A8", VA = "0xC212A8", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC212C8", Offset = "0xC212C8", VA = "0xC212C8", Slot = "5")]
	public override long GetPS5TrophyProgressInteger()
	{
		return default(long);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xC212E8", Offset = "0xC212E8", VA = "0xC212E8", Slot = "6")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xC21330", Offset = "0xC21330", VA = "0xC21330", Slot = "14")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xC215B0", Offset = "0xC215B0", VA = "0xC215B0", Slot = "13")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC192D0", Offset = "0xC192D0", VA = "0xC192D0")]
	protected SimpleAchievement()
	{
	}
}
[Token(Token = "0x2000051")]
public class ArcadeDisplay : SingleplayerDisplay
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro points;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro totalTime;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer speedLevelBar;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _speedLevelBarMat;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _speedLevelBarProgressShaderID;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC215D8", Offset = "0xC215D8", VA = "0xC215D8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC21658", Offset = "0xC21658", VA = "0xC21658", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC21BE4", Offset = "0xC21BE4", VA = "0xC21BE4")]
	public ArcadeDisplay()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class Arena : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000053")]
	public class MaterialOverrides
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialsManager.MaterialPool[] brickTargetGroup;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialsManager.MaterialPool brickHealing;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialsManager.MaterialPool brickRefractionBroken;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialsManager.MaterialPool brickReflectionBroken;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material brickSnakeMaterial;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material brickBonus;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material brickDowner;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material brickDownerBlue;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material stopperMaterial;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material bumperMaterial;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material blasterMaterial;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material slidereMaterial;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject bonusPrefab;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject downerPrefab;

		[Token(Token = "0x600023E")]
		[Address(RVA = "0xC22380", Offset = "0xC22380", VA = "0xC22380")]
		public void Init()
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xC24B60", Offset = "0xC24B60", VA = "0xC24B60")]
		public MaterialOverrides()
		{
		}
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Arena> all;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Arena Definitions")]
	public ArenaType arenaType;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ArcadeType arcadeType;

	[NonSerialized]
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VersusMatchType versusMatchType;

	[NonSerialized]
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public VersusMatchStyle versusMatchStyle;

	[NonSerialized]
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArenaLightAndReflection lightsAndReflection;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Room room;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RoomAssembler roomAssembler;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ArenaDisplay arenaDisplay;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] roomParts;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierCurve[] _ballSpawnRails;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] _playerPositions;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _playerZoneRadius;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PullRail[] _availableGutters;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _arenaApproxRadius;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MaterialOverrides materialOverrides;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected GameEndReason _gameEndReason;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _handlingMenuButtonClick;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _defaultReflectionsProbeAmount;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int _ExposureID;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal bool _gameInProgress;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	internal bool _gameOver;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	internal bool _abortingGame;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	internal bool _forceGameOver;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	internal bool _gameStatsPosted;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal GameEndReason _forceGameOverReason;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	internal float _timeInSession;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _forceGameOverP1Score;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Header("Brick materials")]
	protected Material _brickReflection;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected Material _brickRefraction;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Material _brickHighlight;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material _brickRefractionBlackRef;

	[NonSerialized]
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material _brickRefraction_DefaultRef;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Material _brickRefractionInstance;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Material _brickReflectionInstance;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected Material _brickHighlightInstance;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected int _brickDarkenColorID;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Color _brickRefractionDefaultDarkenColor;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected int _gameScore;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _unpausedTimeScale;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool _paused;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	private bool _firstFrameAfterPause;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _timeAfterPause;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	protected bool _goneTooLong;

	[Token(Token = "0x17000059")]
	public PullRail[] availableGutters
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xC21BEC", Offset = "0xC21BEC", VA = "0xC21BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public GameEndReason gameEndReason
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xC21F64", Offset = "0xC21F64", VA = "0xC21F64")]
		get
		{
			return default(GameEndReason);
		}
	}

	[Token(Token = "0x1700005B")]
	public bool hasEnergyBar
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xC21F6C", Offset = "0xC21F6C", VA = "0xC21F6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public virtual bool isGameInProgress
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xC21FE4", Offset = "0xC21FE4", VA = "0xC21FE4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public virtual bool isGameOver
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xC21FEC", Offset = "0xC21FEC", VA = "0xC21FEC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public virtual bool forceGameOver
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xC21FF4", Offset = "0xC21FF4", VA = "0xC21FF4", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public virtual GameEndReason forceGameOverReason
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xC22000", Offset = "0xC22000", VA = "0xC22000", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public virtual float gameDuration
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xC22008", Offset = "0xC22008", VA = "0xC22008", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000061")]
	public abstract int GameXp
	{
		[Token(Token = "0x600020B")]
		get;
	}

	[Token(Token = "0x17000062")]
	public virtual bool canShowTargets
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xC22010", Offset = "0xC22010", VA = "0xC22010", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xC22018", Offset = "0xC22018", VA = "0xC22018", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public Color brickRefractionDefaultDarkenColor
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xC22080", Offset = "0xC22080", VA = "0xC22080")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000064")]
	public int brickRefractionDarkenColorID
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xC2208C", Offset = "0xC2208C", VA = "0xC2208C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public Material brickRefraction
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xC22094", Offset = "0xC22094", VA = "0xC22094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public Material brickReflection
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xC2209C", Offset = "0xC2209C", VA = "0xC2209C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public Material brickHighlight
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xC220A4", Offset = "0xC220A4", VA = "0xC220A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public virtual int gameScore
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xC220AC", Offset = "0xC220AC", VA = "0xC220AC", Slot = "16")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xC220B4", Offset = "0xC220B4", VA = "0xC220B4", Slot = "17")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public bool IsPaused
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xC24418", Offset = "0xC24418", VA = "0xC24418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public virtual bool CanPauseNow
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xC24420", Offset = "0xC24420", VA = "0xC24420", Slot = "33")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action onArenaSelected
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xC21BF4", Offset = "0xC21BF4", VA = "0xC21BF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xC21CD0", Offset = "0xC21CD0", VA = "0xC21CD0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action onArenaShutdown
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xC21DAC", Offset = "0xC21DAC", VA = "0xC21DAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xC21E88", Offset = "0xC21E88", VA = "0xC21E88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xC22024", Offset = "0xC22024", VA = "0xC22024", Slot = "12")]
	public virtual void AddScore(int score)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xC22068", Offset = "0xC22068", VA = "0xC22068", Slot = "13")]
	public virtual int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC22078", Offset = "0xC22078", VA = "0xC22078", Slot = "14")]
	public virtual void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC2207C", Offset = "0xC2207C", VA = "0xC2207C", Slot = "15")]
	public virtual void overrideFloorTurnOn(float onStatus, bool resetPulse = false)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC220BC", Offset = "0xC220BC", VA = "0xC220BC", Slot = "18")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC22574", Offset = "0xC22574", VA = "0xC22574", Slot = "19")]
	protected virtual void GameIsOver()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC22724", Offset = "0xC22724", VA = "0xC22724")]
	public Vector3 GetPlayerPosition(PlayerID playerID = PlayerID.Player1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC22798", Offset = "0xC22798", VA = "0xC22798")]
	public BezierCurve GetClosestSpawnRail(PlayerID playerID = PlayerID.Player1)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xC228CC", Offset = "0xC228CC", VA = "0xC228CC", Slot = "20")]
	public virtual void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xC22B28", Offset = "0xC22B28", VA = "0xC22B28", Slot = "21")]
	public virtual void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xC22F5C", Offset = "0xC22F5C", VA = "0xC22F5C", Slot = "22")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xC23254", Offset = "0xC23254", VA = "0xC23254", Slot = "23")]
	public virtual void Shutdown()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC234F0", Offset = "0xC234F0", VA = "0xC234F0")]
	public void ActivateArenaObjects()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC22AC4", Offset = "0xC22AC4", VA = "0xC22AC4")]
	public void DeactivateArenaObjects()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC23554", Offset = "0xC23554", VA = "0xC23554", Slot = "24")]
	public virtual void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x6000224")]
	public abstract LeaderboardManager.LeaderboardContainer GetLeaderboard();

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC235F4", Offset = "0xC235F4", VA = "0xC235F4")]
	public LeaderboardManager.LeaderboardContainer GetMonthlyLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC22DD4", Offset = "0xC22DD4", VA = "0xC22DD4")]
	protected void PostGameStats()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC2378C", Offset = "0xC2378C", VA = "0xC2378C")]
	private bool CanPostGameResult(out string error)
	{
		return default(bool);
	}

	[Token(Token = "0x6000228")]
	protected abstract void postGameResults();

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC23880", Offset = "0xC23880", VA = "0xC23880", Slot = "27")]
	public virtual void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC23AFC", Offset = "0xC23AFC", VA = "0xC23AFC", Slot = "28")]
	public virtual void finishGame()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC23B00", Offset = "0xC23B00", VA = "0xC23B00", Slot = "29")]
	public virtual void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC23EDC", Offset = "0xC23EDC", VA = "0xC23EDC", Slot = "30")]
	public virtual void OnPlayerRestart()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC24118", Offset = "0xC24118", VA = "0xC24118", Slot = "31")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC24208", Offset = "0xC24208", VA = "0xC24208", Slot = "32")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC24144", Offset = "0xC24144", VA = "0xC24144")]
	protected void handleMenuButtonClick()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC2420C", Offset = "0xC2420C", VA = "0xC2420C")]
	protected void unhandleMenuButtonClick()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC242CC", Offset = "0xC242CC", VA = "0xC242CC")]
	public void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC242DC", Offset = "0xC242DC", VA = "0xC242DC")]
	private void showOptions()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC23FB4", Offset = "0xC23FB4", VA = "0xC23FB4")]
	private bool canRestartGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xC24414", Offset = "0xC24414", VA = "0xC24414")]
	private void onOptionsHidden()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC24428", Offset = "0xC24428", VA = "0xC24428")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC244B8", Offset = "0xC244B8", VA = "0xC244B8")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xC24538", Offset = "0xC24538", VA = "0xC24538")]
	public void OnDashShown()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC24544", Offset = "0xC24544", VA = "0xC24544")]
	public void OnDashHidden(float pauseTime)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC24684", Offset = "0xC24684", VA = "0xC24684")]
	private Transform findMatchingTransform(Transform t1, Transform root1, Transform root2)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC24A98", Offset = "0xC24A98", VA = "0xC24A98")]
	protected Arena()
	{
	}
}
[Token(Token = "0x2000054")]
public abstract class ArenaDisplay : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject displayedItemsRoot;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer arenaDisplay;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RTTItemName;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro timerTime;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro totalWaves;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer Bar;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Texture RTTItemTexture;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int _timeLeftShaderID;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected int _timeHealShaderID;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int _timePenaltyShaderID;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int _breathID;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int _displayItemCode;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int _totalWavesID;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected int _waveCompleteID;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected int _frozenID;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected int _rttID;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected bool _turnedOn;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected StringBuilder _builder;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected string _totalWavesFormat;

	[Token(Token = "0x1700006B")]
	public bool turnedOn
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xC24B68", Offset = "0xC24B68", VA = "0xC24B68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xC24B70", Offset = "0xC24B70", VA = "0xC24B70", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xC24D18", Offset = "0xC24D18", VA = "0xC24D18", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xC24EE8", Offset = "0xC24EE8", VA = "0xC24EE8", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xC24F48", Offset = "0xC24F48", VA = "0xC24F48", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC24FB8", Offset = "0xC24FB8", VA = "0xC24FB8")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC24FB0", Offset = "0xC24FB0", VA = "0xC24FB0")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC24FC4", Offset = "0xC24FC4", VA = "0xC24FC4", Slot = "8")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC24FC8", Offset = "0xC24FC8", VA = "0xC24FC8", Slot = "9")]
	public virtual void RoundReset()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC24FCC", Offset = "0xC24FCC", VA = "0xC24FCC", Slot = "10")]
	public virtual void AnimateTurningOn(float param)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xC24FD0", Offset = "0xC24FD0", VA = "0xC24FD0")]
	protected ArenaDisplay()
	{
	}
}
[Token(Token = "0x2000055")]
public class ArenaLightAndReflection : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] reflectionMaterials;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light[] lights;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform allLightsRoot;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Light> allLights;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] allLights_DefaultColor;

	[NonSerialized]
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color targetReflectionColor;

	[NonSerialized]
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color targetLightColor;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Renderer> _renderersWithReflectionMaterial;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color[] _lightsDefaultColor;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color _lastReflectionColor;

	[Token(Token = "0x4000153")]
	private const float THRESH = 0.001f;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC25070", Offset = "0xC25070", VA = "0xC25070")]
	public void updateColors(Color currentReflectionColor, Color currentLightColor)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC25520", Offset = "0xC25520", VA = "0xC25520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC2593C", Offset = "0xC2593C", VA = "0xC2593C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC25CB4", Offset = "0xC25CB4", VA = "0xC25CB4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC25CB8", Offset = "0xC25CB8", VA = "0xC25CB8")]
	public ArenaLightAndReflection()
	{
	}
}
[Token(Token = "0x2000056")]
public class ArenaLightAndReflectionMP : ArenaLightAndReflection
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Reflections")]
	public Gradient reflectionColorByPlayer;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ColorUsage(true, true)]
	public Color reflectionColorGutter;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[ColorUsage(true, true)]
	public Color reflectionColorEndgame;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Lights")]
	public Gradient lightColorByPlayer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color lightColorGutter;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lightColorEndgame;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MultiPlayerArena_Versus _arena;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC25D44", Offset = "0xC25D44", VA = "0xC25D44", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC25DA4", Offset = "0xC25DA4", VA = "0xC25DA4", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xC25EEC", Offset = "0xC25EEC", VA = "0xC25EEC")]
	public ArenaLightAndReflectionMP()
	{
	}
}
[Token(Token = "0x2000057")]
public class ArenaLightAndReflectionSP : ArenaLightAndReflection
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Reflections")]
	public Gradient reflectionColorByEnergy;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ColorUsage(true, true)]
	public Color reflectionColorGutter;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[ColorUsage(true, true)]
	public Color reflectionColorEndgame;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[ColorUsage(true, true)]
	public Color reflectionColorSuperBoost;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Lights")]
	public Gradient lightColorByEnergy;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lightColorGutter;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color lightColorEndgame;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color lightColorSuperBoost;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private EnergyArena _arena;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xC25EF0", Offset = "0xC25EF0", VA = "0xC25EF0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC25F50", Offset = "0xC25F50", VA = "0xC25F50", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xC26054", Offset = "0xC26054", VA = "0xC26054")]
	public ArenaLightAndReflectionSP()
	{
	}
}
[Token(Token = "0x2000058")]
public class Arenas : MonoBehaviour
{
	[Token(Token = "0x2000059")]
	[CompilerGenerated]
	private sealed class <Start>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arenas <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0xC26B18", Offset = "0xC26B18", VA = "0xC26B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0xC26B60", Offset = "0xC26B60", VA = "0xC26B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xC26794", Offset = "0xC26794", VA = "0xC26794")]
		[DebuggerHidden]
		public <Start>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xC267C4", Offset = "0xC267C4", VA = "0xC267C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xC267C8", Offset = "0xC267C8", VA = "0xC267C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xC26B20", Offset = "0xC26B20", VA = "0xC26B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Arenas inst;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SinglePlayerArena arcade;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SinglePlayerArena nightmare;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SinglePlayerArena solo;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiPlayerArena_Versus multiplayerVersus;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiPlayerArena_CoOp multiplayerCoOp;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SinglePlayerArena musicChallenge;

	[Token(Token = "0x1700006C")]
	public static Arena current
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xC26058", Offset = "0xC26058", VA = "0xC26058")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xC260A0", Offset = "0xC260A0", VA = "0xC260A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public static bool isArcade
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xC262AC", Offset = "0xC262AC", VA = "0xC262AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public static bool isSolo
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xC17828", Offset = "0xC17828", VA = "0xC17828")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006F")]
	public static bool isVersus
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xC2317C", Offset = "0xC2317C", VA = "0xC2317C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public static bool isCoOp
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xC26384", Offset = "0xC26384", VA = "0xC26384")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public static bool isMusicChallenge
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xC21A70", Offset = "0xC21A70", VA = "0xC21A70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000072")]
	public static bool isSingleplayer
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xC22704", Offset = "0xC22704", VA = "0xC22704")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000073")]
	public static bool isMultiplayer
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xC16FA8", Offset = "0xC16FA8", VA = "0xC16FA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000074")]
	public static bool isZen
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xC21B80", Offset = "0xC21B80", VA = "0xC21B80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000075")]
	public static bool isArcadeNightmare
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xC2645C", Offset = "0xC2645C", VA = "0xC2645C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000076")]
	public static bool isCoOpNightmare
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xC264C0", Offset = "0xC264C0", VA = "0xC264C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000077")]
	public static bool isAnyNightmare
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xC26524", Offset = "0xC26524", VA = "0xC26524")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public static bool PreloadedAllArenas
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xC2668C", Offset = "0xC2668C", VA = "0xC2668C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xC266D4", Offset = "0xC266D4", VA = "0xC266D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xC260F0", Offset = "0xC260F0", VA = "0xC260F0")]
	public static void Select(Arena arena, bool matchStarting = true)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC26590", Offset = "0xC26590", VA = "0xC26590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC26720", Offset = "0xC26720", VA = "0xC26720")]
	[IteratorStateMachine(typeof(<Start>d__39))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC267BC", Offset = "0xC267BC", VA = "0xC267BC")]
	public Arenas()
	{
	}
}
[Token(Token = "0x200005A")]
public abstract class ArenaTimer : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArenaTimer inst;

	[Token(Token = "0x1700007B")]
	public abstract float remainingTimeDefacto
	{
		[Token(Token = "0x600026F")]
		get;
	}

	[Token(Token = "0x1700007C")]
	public abstract bool canPropagateTimer
	{
		[Token(Token = "0x6000270")]
		get;
	}

	[Token(Token = "0x1700007D")]
	public abstract bool canEndGame
	{
		[Token(Token = "0x6000271")]
		get;
	}

	[Token(Token = "0x1700007E")]
	public Player lastPlayerToAddBonusTime
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xC26B68", Offset = "0xC26B68", VA = "0xC26B68")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xC26B70", Offset = "0xC26B70", VA = "0xC26B70")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x6000272")]
	public abstract void AddBonusTime(float fTimeAdded, bool isRemoteHit = false);

	[Token(Token = "0x6000273")]
	public abstract void FillUp();

	[Token(Token = "0x6000274")]
	public abstract void InstantFillUp();

	[Token(Token = "0x6000275")]
	public abstract void SyncCoopTimer(SyncGameEvents.CoopTimerEvent coopTimerEvent);

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC26B78", Offset = "0xC26B78", VA = "0xC26B78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xC26BD0", Offset = "0xC26BD0", VA = "0xC26BD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xC26C24", Offset = "0xC26C24", VA = "0xC26C24")]
	protected ArenaTimer()
	{
	}
}
[Token(Token = "0x200005B")]
public enum ArenaType
{
	[Token(Token = "0x4000173")]
	Arcade,
	[Token(Token = "0x4000174")]
	Solo,
	[Token(Token = "0x4000175")]
	MP_Versus,
	[Token(Token = "0x4000176")]
	MP_CoOp
}
[Token(Token = "0x200005C")]
public enum ArcadeType
{
	[Token(Token = "0x4000178")]
	Zen,
	[Token(Token = "0x4000179")]
	Regular,
	[Token(Token = "0x400017A")]
	Nightmare
}
[Token(Token = "0x200005D")]
public enum VersusMatchType
{
	[Token(Token = "0x400017C")]
	NA,
	[Token(Token = "0x400017D")]
	Friendly,
	[Token(Token = "0x400017E")]
	Ranked
}
[Token(Token = "0x200005E")]
public enum VersusMatchStyle
{
	[Token(Token = "0x4000180")]
	NA,
	[Token(Token = "0x4000181")]
	OneRound,
	[Token(Token = "0x4000182")]
	BestOfX
}
[Token(Token = "0x200005F")]
public static class ArcadeTypeNames
{
	[Token(Token = "0x4000183")]
	private const string zenId = "zen";

	[Token(Token = "0x4000184")]
	private const string regularId = "arcade";

	[Token(Token = "0x4000185")]
	private const string nightmareId = "nightmare";

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC26C2C", Offset = "0xC26C2C", VA = "0xC26C2C")]
	public static string arcadeTypeToString(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xC26D1C", Offset = "0xC26D1C", VA = "0xC26D1C")]
	public static ArcadeType stringToArcadeType(string arcadeTypeStr)
	{
		return default(ArcadeType);
	}
}
[Token(Token = "0x2000060")]
public abstract class EnergyArena : Arena
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	[Header("Single player specific")]
	public WaveSet _selectedSet;

	[NonSerialized]
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string selectedSetId;

	[NonSerialized]
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SinglePlayerTimer _timer;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _floorHealAmount;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _floorFreezeAmount;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float _floorTimerRemain;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _overrideFloorTimer;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _visibleRemainingTime;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _visibleRemainingTimeTarget;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _visibleRemainingTimeVel;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _Pulse;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PlayerID playerID;

	[Token(Token = "0x1700007F")]
	public float pulse
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xC26E38", Offset = "0xC26E38", VA = "0xC26E38")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000080")]
	public float visibleRemainingTime
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xC26E40", Offset = "0xC26E40", VA = "0xC26E40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000081")]
	public float visibleRemainingTimeTarget
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xC26E48", Offset = "0xC26E48", VA = "0xC26E48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC26E50", Offset = "0xC26E50", VA = "0xC26E50", Slot = "18")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC26ED8", Offset = "0xC26ED8", VA = "0xC26ED8", Slot = "23")]
	public override void Shutdown()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC26F58", Offset = "0xC26F58", VA = "0xC26F58", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC26FFC", Offset = "0xC26FFC", VA = "0xC26FFC", Slot = "14")]
	public override void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC27018", Offset = "0xC27018", VA = "0xC27018", Slot = "15")]
	public override void overrideFloorTurnOn(float floorTime, bool resetPulse = false)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC27028", Offset = "0xC27028", VA = "0xC27028", Slot = "28")]
	public override void finishGame()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC27190", Offset = "0xC27190", VA = "0xC27190", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC27A38", Offset = "0xC27A38", VA = "0xC27A38")]
	protected EnergyArena()
	{
	}
}
[Token(Token = "0x2000061")]
public enum GameEndReason
{
	[Token(Token = "0x4000193")]
	Undefined,
	[Token(Token = "0x4000194")]
	EndOfContent,
	[Token(Token = "0x4000195")]
	TimesUp,
	[Token(Token = "0x4000196")]
	KnockOut,
	[Token(Token = "0x4000197")]
	LocalAbort,
	[Token(Token = "0x4000198")]
	OpponentLeft,
	[Token(Token = "0x4000199")]
	LocalDisconnection,
	[Token(Token = "0x400019A")]
	Restart,
	[Token(Token = "0x400019B")]
	InvitedToMultiplayer,
	[Token(Token = "0x400019C")]
	ExternalTimesUp
}
[Token(Token = "0x2000062")]
public class MRScoreboard : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000063")]
	public class Scoreboard
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("In Game")]
		public GameObject ingameRoot;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro ingameP1Name;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro ingameP1Wins;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro ingameP1Score;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro ingameP2Name;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshPro ingameP2Wins;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshPro ingameP2Score;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro ingameWaves;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LocalizeDuration ingameTimer;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Bar")]
		public Renderer ingameBar;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Renderer ingameBarGlow;

		[NonSerialized]
		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isActive;

		[NonSerialized]
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material barMaterial;

		[NonSerialized]
		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material glowMaterial;

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xC28888", Offset = "0xC28888", VA = "0xC28888")]
		public Scoreboard()
		{
		}
	}

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MRScoreboard inst;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scoreboard compact;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _ScoreRatioID;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _p1Score;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _p2Score;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothFloat _p1ScoreSmooth;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothFloat _p2ScoreSmooth;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _p1Name;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _p2Name;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _p1Wins;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _p2Wins;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _totalWaves;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _currentWave;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StringBuilder _builder;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _timeLeft;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothFloat _smoothRatio;

	[Token(Token = "0x17000082")]
	private bool IsInMR
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xC28450", Offset = "0xC28450", VA = "0xC28450")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC27AF4", Offset = "0xC27AF4", VA = "0xC27AF4")]
	private void UpdateScore(MultiPlayerArena_Versus arena, float dt, bool immediate)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC27E10", Offset = "0xC27E10", VA = "0xC27E10")]
	private void UpdatePlayerNames()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC27F28", Offset = "0xC27F28", VA = "0xC27F28")]
	private void UpdateWins(MultiPlayerArena_Versus arena)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC27FE4", Offset = "0xC27FE4", VA = "0xC27FE4")]
	private void UpdateWaves()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC2817C", Offset = "0xC2817C", VA = "0xC2817C")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC282A0", Offset = "0xC282A0", VA = "0xC282A0")]
	private void UpdateBar(MultiPlayerArena_Versus arena, float dt, bool immediate)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC28360", Offset = "0xC28360", VA = "0xC28360")]
	public void DrawInMixedReality(RenderTexture rt)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC28458", Offset = "0xC28458", VA = "0xC28458")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC284FC", Offset = "0xC284FC", VA = "0xC284FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xC28760", Offset = "0xC28760", VA = "0xC28760")]
	public MRScoreboard()
	{
	}
}
[Token(Token = "0x2000064")]
public static class MultiPlayerArena
{
	[Token(Token = "0x2000065")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeout;

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xC28924", Offset = "0xC28924", VA = "0xC28924")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0xC2892C", Offset = "0xC2892C", VA = "0xC2892C")]
		internal bool <QuitMatchCo>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000066")]
	[CompilerGenerated]
	private sealed class <QuitMatchCo>d__1 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool goBackToMainMenu;

		[Token(Token = "0x17000083")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0xC28CB8", Offset = "0xC28CB8", VA = "0xC28CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xC28D00", Offset = "0xC28D00", VA = "0xC28D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xC288FC", Offset = "0xC288FC", VA = "0xC288FC")]
		[DebuggerHidden]
		public <QuitMatchCo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xC289C0", Offset = "0xC289C0", VA = "0xC289C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xC289C4", Offset = "0xC289C4", VA = "0xC289C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xC28CC0", Offset = "0xC28CC0", VA = "0xC28CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BD")]
	private const float QUIT_GAME_SYNC_EVENTS_TIMEOUT = 1f;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xC28890", Offset = "0xC28890", VA = "0xC28890")]
	[IteratorStateMachine(typeof(<QuitMatchCo>d__1))]
	public static IEnumerator<float> QuitMatchCo(bool goBackToMainMenu)
	{
		return null;
	}
}
[Token(Token = "0x2000067")]
public class MultiPlayerArena_CoOp : EnergyArena
{
	[Token(Token = "0x2000068")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboardAndCurrentScore>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPlayerArena_CoOp <>4__this;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0xC2B558", Offset = "0xC2B558", VA = "0xC2B558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B5")]
			[Address(RVA = "0xC2B5A0", Offset = "0xC2B5A0", VA = "0xC2B5A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xC2B33C", Offset = "0xC2B33C", VA = "0xC2B33C")]
		[DebuggerHidden]
		public <LoadLeaderboardAndCurrentScore>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xC2B364", Offset = "0xC2B364", VA = "0xC2B364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xC2B368", Offset = "0xC2B368", VA = "0xC2B368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xC2B560", Offset = "0xC2B560", VA = "0xC2B560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PlayerNamesFlakh playerNamesFlakhPrefab;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _prevScore;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool? _isTeamBest;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool _waitingForConnection;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float timeToPing;

	[Token(Token = "0x17000085")]
	public bool? isTeamBest
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xC28E9C", Offset = "0xC28E9C", VA = "0xC28E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000086")]
	public override int GameXp
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xC29C0C", Offset = "0xC29C0C", VA = "0xC29C0C", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action scoreReported
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xC28D5C", Offset = "0xC28D5C", VA = "0xC28D5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xC28DFC", Offset = "0xC28DFC", VA = "0xC28DFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xC28EA4", Offset = "0xC28EA4", VA = "0xC28EA4", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xC28EF8", Offset = "0xC28EF8", VA = "0xC28EF8", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xC28F18", Offset = "0xC28F18", VA = "0xC28F18")]
	public void onLobbyConnection()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xC28FD8", Offset = "0xC28FD8", VA = "0xC28FD8", Slot = "24")]
	public override void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xC290B0", Offset = "0xC290B0", VA = "0xC290B0", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xC2910C", Offset = "0xC2910C", VA = "0xC2910C")]
	private void showPlayerNames()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xC29248", Offset = "0xC29248", VA = "0xC29248")]
	[IteratorStateMachine(typeof(<LoadLeaderboardAndCurrentScore>d__15))]
	private IEnumerator LoadLeaderboardAndCurrentScore()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xC292BC", Offset = "0xC292BC", VA = "0xC292BC", Slot = "19")]
	protected override void GameIsOver()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xC29314", Offset = "0xC29314", VA = "0xC29314", Slot = "29")]
	public override void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xC29558", Offset = "0xC29558", VA = "0xC29558", Slot = "27")]
	public override void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xC29638", Offset = "0xC29638", VA = "0xC29638", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xC29918", Offset = "0xC29918", VA = "0xC29918")]
	private void DownloadLeaderboardData()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC29B4C", Offset = "0xC29B4C", VA = "0xC29B4C")]
	private bool didRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC29CF0", Offset = "0xC29CF0", VA = "0xC29CF0", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xC2A330", Offset = "0xC2A330", VA = "0xC2A330")]
	public MultiPlayerArena_CoOp()
	{
	}
}
[Token(Token = "0x2000069")]
public class MultiPlayerArena_Versus : Arena
{
	[Token(Token = "0x200006A")]
	public struct RoundResolution
	{
		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameEndReason endReason;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public PlayerID winningPlayer;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int scoreP1;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int scoreP2;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int waveNum;
	}

	[Token(Token = "0x200006B")]
	[CompilerGenerated]
	private sealed class <iterPlayerRoundWinReasons>d__54 : IEnumerable<GameEndReason>, IEnumerable, IEnumerator<GameEndReason>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameEndReason <>2__current;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPlayerArena_Versus <>4__this;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerID player;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public PlayerID <>3__player;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RoundResolution>.Enumerator <>7__wrap1;

		[Token(Token = "0x170000A3")]
		private GameEndReason System.Collections.Generic.IEnumerator<GameEndReason>.Current
		{
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0xC30230", Offset = "0xC30230", VA = "0xC30230", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(GameEndReason);
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F6")]
			[Address(RVA = "0xC30278", Offset = "0xC30278", VA = "0xC30278", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xC2BB54", Offset = "0xC2BB54", VA = "0xC2BB54")]
		[DebuggerHidden]
		public <iterPlayerRoundWinReasons>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xC30014", Offset = "0xC30014", VA = "0xC30014", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xC30030", Offset = "0xC30030", VA = "0xC30030", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xC301E0", Offset = "0xC301E0", VA = "0xC301E0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xC30238", Offset = "0xC30238", VA = "0xC30238", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xC302D4", Offset = "0xC302D4", VA = "0xC302D4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GameEndReason> System.Collections.Generic.IEnumerable<GameEndReason>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xC30388", Offset = "0xC30388", VA = "0xC30388", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PlayerNamesFlakh playerNamesFlakhPrefab;

	[NonSerialized]
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float waveTime;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool _waveTimeOutSoundPlayed;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public WaveSet _selectedSet;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _waitingForConnection;

	[Token(Token = "0x40001D3")]
	private const int _MATCH_BEST_OF_COUNT = 3;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool _matchIsOver;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _matchOverallScoreP1;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _matchOverallScoreP2;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _roundNumber;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _roundTotalPointsP1;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int _roundTotalPointsP2;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameResolution _gameResolution;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _currentShuffleSetIndex;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<WaveSet> _shuffledSets;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<WaveSet> _helperSetArray;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<float> _helperSetWeights;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float timeToPing;

	[Token(Token = "0x17000089")]
	public int scoreP1
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xC2B5A8", Offset = "0xC2B5A8", VA = "0xC2B5A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public int scoreP2
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xC2B5B8", Offset = "0xC2B5B8", VA = "0xC2B5B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008B")]
	public int myScore
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xC2B63C", Offset = "0xC2B63C", VA = "0xC2B63C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public int opponentScore
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xC2B6BC", Offset = "0xC2B6BC", VA = "0xC2B6BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008D")]
	public float scoreRatio
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xC2B744", Offset = "0xC2B744", VA = "0xC2B744")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008E")]
	public bool isBestOfX
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xC2B7CC", Offset = "0xC2B7CC", VA = "0xC2B7CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public int matchBestOfWinsNeeded
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xC2B7DC", Offset = "0xC2B7DC", VA = "0xC2B7DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public bool matchIsOver
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xC2B7E4", Offset = "0xC2B7E4", VA = "0xC2B7E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000091")]
	public int matchScoreP1
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xC2B7EC", Offset = "0xC2B7EC", VA = "0xC2B7EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000092")]
	public int matchScoreP2
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xC2B7F4", Offset = "0xC2B7F4", VA = "0xC2B7F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000093")]
	public int myMatchScore
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xC2B7FC", Offset = "0xC2B7FC", VA = "0xC2B7FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	public int opponentMatchScore
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xC2B868", Offset = "0xC2B868", VA = "0xC2B868")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000095")]
	public static float MaxWaveTime
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xC2B8DC", Offset = "0xC2B8DC", VA = "0xC2B8DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000096")]
	public bool WaveTimeIsUp
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xC2B980", Offset = "0xC2B980", VA = "0xC2B980")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000097")]
	public bool matchStarted
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xC2B9A4", Offset = "0xC2B9A4", VA = "0xC2B9A4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xC2B9AC", Offset = "0xC2B9AC", VA = "0xC2B9AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public int roundNumber
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xC2B9B8", Offset = "0xC2B9B8", VA = "0xC2B9B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000099")]
	public List<RoundResolution> roundResolutions
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xC2B9C0", Offset = "0xC2B9C0", VA = "0xC2B9C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public RoundResolution lastRoundResolution
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xC2B9C8", Offset = "0xC2B9C8", VA = "0xC2B9C8")]
		get
		{
			return default(RoundResolution);
		}
	}

	[Token(Token = "0x1700009B")]
	public PlayerID lastRoundWinner
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xC2BA50", Offset = "0xC2BA50", VA = "0xC2BA50")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x1700009C")]
	public PlayerID matchWinningPlayer
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xC2C4C4", Offset = "0xC2C4C4", VA = "0xC2C4C4")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x1700009D")]
	public bool isKnockOut
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xC2C4DC", Offset = "0xC2C4DC", VA = "0xC2C4DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public bool isTechnical
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xC2C4EC", Offset = "0xC2C4EC", VA = "0xC2C4EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009F")]
	public bool isTechnicalWin
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xC2C510", Offset = "0xC2C510", VA = "0xC2C510")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public bool isTechnicalDefeat
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xC2C538", Offset = "0xC2C538", VA = "0xC2C538")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public override bool CanPauseNow
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xC2E0B8", Offset = "0xC2E0B8", VA = "0xC2E0B8", Slot = "33")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public override int GameXp
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xC2E0C0", Offset = "0xC2E0C0", VA = "0xC2E0C0", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC2BAC0", Offset = "0xC2BAC0", VA = "0xC2BAC0")]
	[IteratorStateMachine(typeof(<iterPlayerRoundWinReasons>d__54))]
	public IEnumerable<GameEndReason> iterPlayerRoundWinReasons(PlayerID player)
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC2BB88", Offset = "0xC2BB88", VA = "0xC2BB88")]
	public GameEndReason getPlayerRoundWinReason(PlayerID player, int numWin)
	{
		return default(GameEndReason);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC2C13C", Offset = "0xC2C13C", VA = "0xC2C13C")]
	public int totalScoreP1()
	{
		return default(int);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC2C294", Offset = "0xC2C294", VA = "0xC2C294")]
	public int totalScoreP2()
	{
		return default(int);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC2C3EC", Offset = "0xC2C3EC", VA = "0xC2C3EC", Slot = "18")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC2C560", Offset = "0xC2C560", VA = "0xC2C560")]
	public void RematchSelectedByPlayers()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC2C5F4", Offset = "0xC2C5F4", VA = "0xC2C5F4")]
	public void ReshuffleSetOrder([Optional] WaveSet lastPlayedSet)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC2CAD4", Offset = "0xC2CAD4", VA = "0xC2CAD4")]
	private float GetSetWeight(string setId)
	{
		return default(float);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC2CBAC", Offset = "0xC2CBAC", VA = "0xC2CBAC")]
	public void ChooseMPSet(int setOverride = -1)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC2C588", Offset = "0xC2C588", VA = "0xC2C588")]
	private void ResetOverallMatch()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC2D118", Offset = "0xC2D118", VA = "0xC2D118", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC2D180", Offset = "0xC2D180", VA = "0xC2D180")]
	private void showPlayerNames()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC2D2BC", Offset = "0xC2D2BC", VA = "0xC2D2BC")]
	public void SetupMatch(VersusMatchType matchType, VersusMatchStyle matchStyle)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC2D2C4", Offset = "0xC2D2C4", VA = "0xC2D2C4", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC2D318", Offset = "0xC2D318", VA = "0xC2D318", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC2D4EC", Offset = "0xC2D4EC", VA = "0xC2D4EC")]
	public void onLobbyConnection()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xC2D5B0", Offset = "0xC2D5B0", VA = "0xC2D5B0", Slot = "24")]
	public override void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xC2D68C", Offset = "0xC2D68C", VA = "0xC2D68C")]
	protected void ForceGameResult(PlayerID winningPlayerID)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xC2DA04", Offset = "0xC2DA04", VA = "0xC2DA04", Slot = "29")]
	public override void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC2DC5C", Offset = "0xC2DC5C", VA = "0xC2DC5C")]
	public void AddScoreMultiplayer(int score, bool isRemoteHit = false)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC2DD64", Offset = "0xC2DD64", VA = "0xC2DD64", Slot = "12")]
	public override void AddScore(int player1Score)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC2DE1C", Offset = "0xC2DE1C", VA = "0xC2DE1C", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC2DF7C", Offset = "0xC2DF7C", VA = "0xC2DF7C")]
	private bool didRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xC2E1A4", Offset = "0xC2E1A4", VA = "0xC2E1A4", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC2F630", Offset = "0xC2F630", VA = "0xC2F630")]
	private void BestOfRoundOver()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC2FE54", Offset = "0xC2FE54", VA = "0xC2FE54", Slot = "27")]
	public override void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC2FF38", Offset = "0xC2FF38", VA = "0xC2FF38")]
	private void OnWaveEnd()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC2FF44", Offset = "0xC2FF44", VA = "0xC2FF44", Slot = "14")]
	public override void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC2FF50", Offset = "0xC2FF50", VA = "0xC2FF50", Slot = "15")]
	public override void overrideFloorTurnOn(float floorTime, bool resetPulse = false)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC2FF54", Offset = "0xC2FF54", VA = "0xC2FF54")]
	public MultiPlayerArena_Versus()
	{
	}
}
[Token(Token = "0x200006C")]
public class MultiplayerCoOpDisplay : ArcadeDisplay
{
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xC3038C", Offset = "0xC3038C", VA = "0xC3038C")]
	public MultiplayerCoOpDisplay()
	{
	}
}
[Token(Token = "0x200006D")]
public class MultiplayerCoOpScoring : SinglePlayerScoring
{
	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xC30394", Offset = "0xC30394", VA = "0xC30394")]
	public MultiplayerCoOpScoring()
	{
	}
}
[Token(Token = "0x200006E")]
public class MultiplayerCoOpTimer : SinglePlayerTimer
{
	[Token(Token = "0x170000A5")]
	public override bool canEndGame
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xC303A4", Offset = "0xC303A4", VA = "0xC303A4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public override bool canPropagateTimer
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xC303AC", Offset = "0xC303AC", VA = "0xC303AC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC30448", Offset = "0xC30448", VA = "0xC30448")]
	public MultiplayerCoOpTimer()
	{
	}
}
[Token(Token = "0x200006F")]
public class MultiplayerDisplay : ArenaDisplay
{
	[Token(Token = "0x2000070")]
	public enum PointType
	{
		[Token(Token = "0x4000205")]
		None,
		[Token(Token = "0x4000206")]
		Time,
		[Token(Token = "0x4000207")]
		Set,
		[Token(Token = "0x4000208")]
		KO
	}

	[Serializable]
	[Token(Token = "0x2000071")]
	public struct Point
	{
		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIItemTransitions transitions;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _time;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _set;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _ko;

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xC314BC", Offset = "0xC314BC", VA = "0xC314BC")]
		public void init()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xC315D8", Offset = "0xC315D8", VA = "0xC315D8")]
		public void set(PointType type)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xC31660", Offset = "0xC31660", VA = "0xC31660")]
		public void disable()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xC316C0", Offset = "0xC316C0", VA = "0xC316C0")]
		public void stopCelebration()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000072")]
	public struct Player
	{
		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshPro name;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro score;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions wing;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point point1;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Point point2;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isCelebrating;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _points;

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xC30BA4", Offset = "0xC30BA4", VA = "0xC30BA4")]
		public void init()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xC31474", Offset = "0xC31474", VA = "0xC31474")]
		public void reset()
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xC3098C", Offset = "0xC3098C", VA = "0xC3098C")]
		public void increment(PointType type)
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xC309F4", Offset = "0xC309F4", VA = "0xC309F4")]
		public void stopCelebration()
		{
		}
	}

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Players")]
	public Player player1;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Player player2;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Score")]
	public TextMeshPro setName;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public MeshRenderer WaveBars;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform scoreSoundPos;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float smoothTimeSpeed;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("Black mask")]
	public MeshRenderer blackMask;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float blackMaskSmoothTimeSpeed;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private MultiPlayerArena_Versus _arena;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int _ScoreRatioID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _visibleScoreRatio;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _visibleScoreRatioTarget;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float _visibleScoreRatioVelocity;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int _scoreP1;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int _scoreP2;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private MaterialPropertyBlock _blackMaskPB;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float _blackMaskTarget;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _blackMashCurrent;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float _blackMashVelocity;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int _multiplierID;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool _updateTotalWaves;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool showVictoryBanner;

	[Token(Token = "0x170000A7")]
	public bool isBlack
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xC30498", Offset = "0xC30498", VA = "0xC30498")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xC304A0", Offset = "0xC304A0", VA = "0xC304A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC304AC", Offset = "0xC304AC", VA = "0xC304AC")]
	private void checkScoreTextUpdate(bool forced = false)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC3091C", Offset = "0xC3091C", VA = "0xC3091C")]
	public void fadeDisplay(bool shouldBeVisible)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC30944", Offset = "0xC30944", VA = "0xC30944")]
	public void startCelebration(int round, PlayerID playerID, GameEndReason reason)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC309D8", Offset = "0xC309D8", VA = "0xC309D8")]
	public void stopCelebration()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xC30A28", Offset = "0xC30A28", VA = "0xC30A28", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xC30BE8", Offset = "0xC30BE8", VA = "0xC30BE8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xC31324", Offset = "0xC31324", VA = "0xC31324", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xC31348", Offset = "0xC31348", VA = "0xC31348", Slot = "9")]
	public override void RoundReset()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xC313E0", Offset = "0xC313E0", VA = "0xC313E0", Slot = "8")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC31498", Offset = "0xC31498", VA = "0xC31498")]
	public MultiplayerDisplay()
	{
	}
}
[Token(Token = "0x2000073")]
public class MultiPlayerScoring : ScoreManager
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugMPScoring;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve scoreCapCurve;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StreamWriter logFile;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC316E0", Offset = "0xC316E0", VA = "0xC316E0")]
	private void DebugLog(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, int score, int bossScore)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC31CB8", Offset = "0xC31CB8", VA = "0xC31CB8", Slot = "5")]
	public override void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int score, out int bossScore, out int scoreRaw, out int bossScoreRaw)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC326C0", Offset = "0xC326C0", VA = "0xC326C0", Slot = "4")]
	public override int GetCappedScore(int rawScore)
	{
		return default(int);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC327D0", Offset = "0xC327D0", VA = "0xC327D0")]
	public MultiPlayerScoring()
	{
	}
}
[Token(Token = "0x2000074")]
public class PodiumCustomizer : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	private const float MAX_DISTANCE = 3.6f;

	[Token(Token = "0x4000219")]
	private const float MIN_DISTANCE = 1.6f;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(1.6f, 3.6f)]
	public float distance;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player1Pos;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform player2Pos;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] ballStartRailInLocal;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC32820", Offset = "0xC32820", VA = "0xC32820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC32824", Offset = "0xC32824", VA = "0xC32824")]
	private void updateDistance()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC32D28", Offset = "0xC32D28", VA = "0xC32D28")]
	public PodiumCustomizer()
	{
	}
}
[Token(Token = "0x2000075")]
public abstract class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreManager current;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC32D30", Offset = "0xC32D30", VA = "0xC32D30", Slot = "4")]
	public virtual int GetCappedScore(int rawScore)
	{
		return default(int);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC32D38", Offset = "0xC32D38", VA = "0xC32D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC32D90", Offset = "0xC32D90", VA = "0xC32D90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031C")]
	public abstract void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int score, out int bossScore, out int scoreRaw, out int bossScoreRaw);

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC32818", Offset = "0xC32818", VA = "0xC32818")]
	protected ScoreManager()
	{
	}
}
[Token(Token = "0x2000076")]
public class SinglePlayerArena : EnergyArena
{
	[Token(Token = "0x170000A8")]
	public override int GameXp
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xC33E10", Offset = "0xC33E10", VA = "0xC33E10", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC32DE4", Offset = "0xC32DE4", VA = "0xC32DE4", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC33064", Offset = "0xC33064", VA = "0xC33064", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC335A4", Offset = "0xC335A4", VA = "0xC335A4")]
	private void InitArcade()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC335AC", Offset = "0xC335AC", VA = "0xC335AC")]
	public void selectSoloSet(string setId)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC335D0", Offset = "0xC335D0", VA = "0xC335D0")]
	public void SelectSoloSet(WaveSet set)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC331A8", Offset = "0xC331A8", VA = "0xC331A8")]
	private void _selectSoloSet([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC3347C", Offset = "0xC3347C", VA = "0xC3347C")]
	private void SelectMusicChallengeSet()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC335D4", Offset = "0xC335D4", VA = "0xC335D4", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC3373C", Offset = "0xC3373C", VA = "0xC3373C")]
	private void postArcadeGameResults()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC33A5C", Offset = "0xC33A5C", VA = "0xC33A5C")]
	private void postSoloGameResults()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC33D40", Offset = "0xC33D40", VA = "0xC33D40")]
	private void DownloadLeaderboardData()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC33FD0", Offset = "0xC33FD0", VA = "0xC33FD0")]
	public SinglePlayerArena()
	{
	}
}
[Token(Token = "0x2000077")]
public abstract class SingleplayerDisplay : ArenaDisplay
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected EnergyArena _arena;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool turnOnAnimation;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float turnOnAnimationParam;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC33FD8", Offset = "0xC33FD8", VA = "0xC33FD8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC3403C", Offset = "0xC3403C", VA = "0xC3403C", Slot = "10")]
	public override void AnimateTurningOn(float param)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC3406C", Offset = "0xC3406C", VA = "0xC3406C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC34364", Offset = "0xC34364", VA = "0xC34364")]
	protected SingleplayerDisplay()
	{
	}
}
[Token(Token = "0x2000078")]
public class SinglePlayerScoring : ScoreManager
{
	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC3436C", Offset = "0xC3436C", VA = "0xC3436C", Slot = "5")]
	public override void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int scoreRaw, out int bossScoreRaw, out int score, out int bossScore)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC3039C", Offset = "0xC3039C", VA = "0xC3039C")]
	public SinglePlayerScoring()
	{
	}
}
[Token(Token = "0x2000079")]
public class SinglePlayerTimer : ArenaTimer
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _outOfTime;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _globalTimerMaxValue;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _curTimerRate;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _remainingTime;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _bonusTime;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _bonusTimeVel;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeSinceLastBonusEarn;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _penaltyTime;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _penaltyTimeVel;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _timeSinceLastPenaltyEarn;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float healRedeemTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float penaltyRedeemTime;

	[Token(Token = "0x170000A9")]
	public override bool canEndGame
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xC34AB8", Offset = "0xC34AB8", VA = "0xC34AB8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AA")]
	public override bool canPropagateTimer
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xC34AC0", Offset = "0xC34AC0", VA = "0xC34AC0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AB")]
	public bool isOutOfTime
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xC34AC8", Offset = "0xC34AC8", VA = "0xC34AC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AC")]
	public float pendingBonusTime
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xC34AD0", Offset = "0xC34AD0", VA = "0xC34AD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AD")]
	public float pendingBonusTimeVel
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xC34AD8", Offset = "0xC34AD8", VA = "0xC34AD8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AE")]
	public float timeSinceLastBonusEarn
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xC34AE0", Offset = "0xC34AE0", VA = "0xC34AE0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AF")]
	public float pendingPenaltyTime
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xC34AE8", Offset = "0xC34AE8", VA = "0xC34AE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B0")]
	public float pendingPenaltyTimeVel
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xC34AF0", Offset = "0xC34AF0", VA = "0xC34AF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B1")]
	public float timeSinceLastPenaltyEarn
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xC34AF8", Offset = "0xC34AF8", VA = "0xC34AF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B2")]
	public float currentTimerMax
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xC34B00", Offset = "0xC34B00", VA = "0xC34B00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B3")]
	public float remainingTime
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xC34B08", Offset = "0xC34B08", VA = "0xC34B08")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B4")]
	public override float remainingTimeDefacto
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xC34B10", Offset = "0xC34B10", VA = "0xC34B10", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC34B1C", Offset = "0xC34B1C", VA = "0xC34B1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC34B3C", Offset = "0xC34B3C", VA = "0xC34B3C")]
	public void Restart()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC34B5C", Offset = "0xC34B5C", VA = "0xC34B5C")]
	private void SetGlobalTimerMaxValue()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC34C88", Offset = "0xC34C88", VA = "0xC34C88")]
	public void DifficultyChanged(int difficulty)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC34E60", Offset = "0xC34E60", VA = "0xC34E60", Slot = "8")]
	public override void FillUp()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC34E6C", Offset = "0xC34E6C", VA = "0xC34E6C", Slot = "9")]
	public override void InstantFillUp()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC34E88", Offset = "0xC34E88", VA = "0xC34E88", Slot = "10")]
	public override void SyncCoopTimer(SyncGameEvents.CoopTimerEvent coopTimerEvent)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC34EB4", Offset = "0xC34EB4", VA = "0xC34EB4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC35530", Offset = "0xC35530", VA = "0xC35530", Slot = "7")]
	public override void AddBonusTime(float fTimeAdded, bool isRemoteHit = false)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC30470", Offset = "0xC30470", VA = "0xC30470")]
	public SinglePlayerTimer()
	{
	}
}
[Token(Token = "0x200007A")]
public class SoloDisplay : SingleplayerDisplay
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer WaveBars;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro totalTimeMinutes;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro totalTimeSeconds;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro totalTimeMili;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC355E8", Offset = "0xC355E8", VA = "0xC355E8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC35A84", Offset = "0xC35A84", VA = "0xC35A84")]
	public SoloDisplay()
	{
	}
}
[Token(Token = "0x200007B")]
public class Announcer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007C")]
	public struct SpeakerLocations
	{
		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform left;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform right;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform mid;
	}

	[Serializable]
	[Token(Token = "0x200007D")]
	public struct StereoPair
	{
		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioManager.SoundEffect l;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioManager.SoundEffect r;
	}

	[Token(Token = "0x200007E")]
	private enum OverlapBehaviour
	{
		[Token(Token = "0x40002B3")]
		PlayAnyway,
		[Token(Token = "0x40002B4")]
		WaitAndThenPlay,
		[Token(Token = "0x40002B5")]
		AbortIfOverlapping
	}

	[Token(Token = "0x2000080")]
	[CompilerGenerated]
	private sealed class <PlayAfterCurrentStereoCo>d__153 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Announcer <>4__this;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StereoPair sfxPair;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public (Transform l, Transform r) locs;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<(SpatializedAudio l, SpatializedAudio r)> onDone;

		[Token(Token = "0x170000B6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0xC393AC", Offset = "0xC393AC", VA = "0xC393AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0xC393F4", Offset = "0xC393F4", VA = "0xC393F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xC37938", Offset = "0xC37938", VA = "0xC37938")]
		[DebuggerHidden]
		public <PlayAfterCurrentStereoCo>d__153(int <>1__state)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xC39300", Offset = "0xC39300", VA = "0xC39300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xC39304", Offset = "0xC39304", VA = "0xC39304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xC393B4", Offset = "0xC393B4", VA = "0xC393B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000081")]
	[CompilerGenerated]
	private sealed class <PlayAfterCurrentCo>d__154 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Announcer <>4__this;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioManager.SoundEffect sfx;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform location;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SpatializedAudio> onDone;

		[Token(Token = "0x170000B8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0xC394EC", Offset = "0xC394EC", VA = "0xC394EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0xC39534", Offset = "0xC39534", VA = "0xC39534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xC37960", Offset = "0xC37960", VA = "0xC37960")]
		[DebuggerHidden]
		public <PlayAfterCurrentCo>d__154(int <>1__state)
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xC39450", Offset = "0xC39450", VA = "0xC39450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xC39454", Offset = "0xC39454", VA = "0xC39454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xC394F4", Offset = "0xC394F4", VA = "0xC394F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <WelcomeToRacketNxCo>d__158 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Announcer <>4__this;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float extraDelay;

		[Token(Token = "0x170000BA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0xC39668", Offset = "0xC39668", VA = "0xC39668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0xC396B0", Offset = "0xC396B0", VA = "0xC396B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xC37AC4", Offset = "0xC37AC4", VA = "0xC37AC4")]
		[DebuggerHidden]
		public <WelcomeToRacketNxCo>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xC39590", Offset = "0xC39590", VA = "0xC39590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xC39594", Offset = "0xC39594", VA = "0xC39594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xC39670", Offset = "0xC39670", VA = "0xC39670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[CompilerGenerated]
	private sealed class <LetsGoCo>d__160 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Announcer <>4__this;

		[Token(Token = "0x170000BC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0xC39858", Offset = "0xC39858", VA = "0xC39858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0xC398A0", Offset = "0xC398A0", VA = "0xC398A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xC37BE4", Offset = "0xC37BE4", VA = "0xC37BE4")]
		[DebuggerHidden]
		public <LetsGoCo>d__160(int <>1__state)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xC3970C", Offset = "0xC3970C", VA = "0xC3970C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xC39710", Offset = "0xC39710", VA = "0xC39710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xC39860", Offset = "0xC39860", VA = "0xC39860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Announcer inst;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] _announcerSpeakerLocations;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeakerLocations _speakerLocations;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Shot Encouragement 1")]
	public int _encourage1MinPoints;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _encourage1Chance;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioManager.SoundEffect _encouragementLevel1;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Shot Encouragement 2")]
	public int _encourage2MinPoints;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _encourage2Chance;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioManager.SoundEffect _encouragementLevel2;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Shot Encouragement 3")]
	public int _encourage3MinPoints;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _encourage3Chance;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioManager.SoundEffect _encouragementLevel3;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shot Encouragement 4")]
	public int _encourage4MinPoints;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _encourage4Chance;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioManager.SoundEffect _encouragementLevel4;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Shot Encouragement 5")]
	public int _encourage5MinPoints;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _encourage5Chance;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioManager.SoundEffect _encouragementLevel5;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Precision Encouragement")]
	public int _preciseMaxTargetSize;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _preciseChance;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioManager.SoundEffect _preciseEncouragement;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Speed up!")]
	public AudioManager.SoundEffect _faster;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioManager.SoundEffect _speedIncrease;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioManager.SoundEffect _speedUp;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioManager.SoundEffect _speedingUp;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioManager.SoundEffect _gettingFaster_110;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioManager.SoundEffect _itsGettingFaster_110;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioManager.SoundEffect _moreSpeed_120;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioManager.SoundEffect _moreSpeed_130_ON;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioManager.SoundEffect _superFast_150;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioManager.SoundEffect _speeeeeed_180_ON;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioManager.SoundEffect _ludicrousSpeed_190_ON;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioManager.SoundEffect _tooFast_200_ON;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<AudioManager.SoundEffect> speedUpEffects;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioManager.SoundEffect _lastPlayerSpeedupEffect;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Tutorial")]
	public AudioManager.SoundEffect _tutorialWelcome;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioManager.SoundEffect _tutorialHitBall;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioManager.SoundEffect _tutorialGravitySling;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioManager.SoundEffect _tutorialPowerShot;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioManager.SoundEffect _tutorialTargets;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioManager.SoundEffect _tutorialEnergyBar;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioManager.SoundEffect _tutorialLetsFinishThis;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioManager.SoundEffect _tutorialTryAgain;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Stage Complete")]
	public AudioManager.SoundEffect _stageCompleteBasics;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioManager.SoundEffect _stageCompleteAdvanced;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioManager.SoundEffect _stageCompleteHardcore;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioManager.SoundEffect _stageCompleteALL;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Powerups")]
	public AudioManager.SoundEffect _powerupSplashDamage;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioManager.SoundEffect _powerupBlasterMaze;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioManager.SoundEffect _powerupPoints;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioManager.SoundEffect _powerupGodMode;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioManager.SoundEffect _powerupSuperFlow;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioManager.SoundEffect _powerupHyperspace;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioManager.SoundEffect _powerupNuke;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioManager.SoundEffect _powerupWreckingBall;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioManager.SoundEffect _powerupIceBreaker;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioManager.SoundEffect _powerupSupersize;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Header("General")]
	public AudioManager.SoundEffect _powerupAcquire;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioManager.SoundEffect _soloSetComplete;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioManager.SoundEffect _outOfTime;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioManager.SoundEffect _gameOver;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioManager.SoundEffect _personalBest;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioManager.SoundEffect _teamBest;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public AudioManager.SoundEffect _niceBalls;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Header("Clutch Save")]
	public AudioManager.SoundEffect _clutchSave;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[Header("Lets go")]
	public float letsGoDelay;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AudioManager.SoundEffect _letsGo;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float welcomeToRacketNxDelay;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AudioManager.SoundEffect _welcomeToRacketNx;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AudioManager.SoundEffect _newLevel;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[Header("Multiplayer")]
	public AudioManager.SoundEffect _multiplayerVictory;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public AudioManager.SoundEffect _multiplayerDefeat;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public AudioManager.SoundEffect _multiplayerOpponentFound;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public AudioManager.SoundEffect _multiplayerOpponentLeft;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public AudioManager.SoundEffect _multiplayerTeammateFound;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public AudioManager.SoundEffect _multiplayerTeammateLeft;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AudioManager.SoundEffect _multiplayerTeammatePaused;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public AudioManager.SoundEffect _multiplayerFriendJoined;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AudioManager.SoundEffect _multiplayerFriendLeft;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public AudioManager.SoundEffect _multiplayerRound1Complete;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public AudioManager.SoundEffect _multiplayerRound2Complete;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AudioManager.SoundEffect _multiplayerRound3Complete;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AudioManager.SoundEffect _multiplayerRound4Complete;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public AudioManager.SoundEffect _multiplayerScore;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public AudioManager.SoundEffect _multiplayerFinalScore;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public AudioManager.SoundEffect _multiplayer1to0;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public AudioManager.SoundEffect _multiplayer0to1;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public AudioManager.SoundEffect _multiplayer1to1;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public AudioManager.SoundEffect _multiplayer2to1;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public AudioManager.SoundEffect _multiplayer1to2;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public AudioManager.SoundEffect _multiplayer2to0;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public AudioManager.SoundEffect _multiplayer0to2;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public AudioManager.SoundEffect _multiplayerKO;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public AudioManager.SoundEffect _multiplayerTimeIsUp;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public AudioManager.SoundEffect _multiplayerSetFinished;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[Header("Coop")]
	public AudioManager.SoundEffect _goodTeamplayCoop;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public AudioManager.SoundEffect _onFireCoop;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[Header("Waves Left")]
	public AudioManager.SoundEffect _wavesLeft_1;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public AudioManager.SoundEffect _wavesLeft_3;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public AudioManager.SoundEffect _wavesLeft_5;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public AudioManager.SoundEffect _wavesLeft_7;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[Header("Streaks")]
	public AudioManager.SoundEffect _streak_3;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AudioManager.SoundEffect _streak_5;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public AudioManager.SoundEffect _streak_7;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public AudioManager.SoundEffect _streak_10;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public AudioManager.SoundEffect _streak_15;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public AudioManager.SoundEffect _streak_20;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public AudioManager.SoundEffect _streak_25;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioManager.SoundEffect _streak_30;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioManager.SoundEffect _streak_40;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private int lastStreakEffect;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private AudioManager.SoundEffect[] _streaks;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[Header("Achievements & items")]
	public AudioManager.SoundEffect _item_unlocked;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public StereoPair _achievement_unlocked;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private List<AudioManager.SoundEffect> _soundEffects;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private UnityEngine.Random.State _announcerRandomState;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private UnityEngine.Random.State _generalRandomState;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private bool _inAnnouncerRNG;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B1")]
	private bool _speaking;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private Action _onLetsGoDone;

	[NonSerialized]
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public int rngBaseSeed;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private ShotInfo lastShotUsedInOnFire;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float lastCoopEffectPlayedTime;

	[Token(Token = "0x170000B5")]
	private AnnouncerSettings config
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xC35A8C", Offset = "0xC35A8C", VA = "0xC35A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC35ADC", Offset = "0xC35ADC", VA = "0xC35ADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC35F20", Offset = "0xC35F20", VA = "0xC35F20")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC35F60", Offset = "0xC35F60", VA = "0xC35F60")]
	public void RNGInit(int seed)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC35FBC", Offset = "0xC35FBC", VA = "0xC35FBC")]
	private void RNGStart()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC3606C", Offset = "0xC3606C", VA = "0xC3606C")]
	private void RNGStop()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC36118", Offset = "0xC36118", VA = "0xC36118")]
	private void FindSoundEffects()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC36668", Offset = "0xC36668", VA = "0xC36668")]
	public void FirstShotContact(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC36934", Offset = "0xC36934", VA = "0xC36934")]
	public void PlayTutorial(AudioManager.SoundEffect sfx, Transform location)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC36950", Offset = "0xC36950", VA = "0xC36950")]
	public void Encourage(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC36FB8", Offset = "0xC36FB8", VA = "0xC36FB8")]
	public void TestTeamworkOnShieldedTarget(Target t)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC37220", Offset = "0xC37220", VA = "0xC37220")]
	public void TestTeamworkOnIceBreaker(ShotInfo shot, float iceBreakerHittingPlayerPercent)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC37168", Offset = "0xC37168", VA = "0xC37168")]
	private void EncourageTeamwork(float chance)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC36A70", Offset = "0xC36A70", VA = "0xC36A70")]
	private void TestCoopOnFire(ShotInfo finalizedShot)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC37324", Offset = "0xC37324", VA = "0xC37324")]
	[NaughtyAttributes.Button("Play AchievementUnlocked", EButtonEnableMode.Playmode)]
	public void AchievementUnlocked([Optional] Action onDone)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC37724", Offset = "0xC37724", VA = "0xC37724")]
	public void ItemUnlocked()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC37744", Offset = "0xC37744", VA = "0xC37744")]
	public void NewLevel()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC37764", Offset = "0xC37764", VA = "0xC37764")]
	public void FriendLeftTheMatch()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC37784", Offset = "0xC37784", VA = "0xC37784")]
	public void FriendJoinedTheMatch()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC377A4", Offset = "0xC377A4", VA = "0xC377A4")]
	public void OpponentLeftTheMatch()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC377C4", Offset = "0xC377C4", VA = "0xC377C4")]
	public void OpponentFound()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC377E4", Offset = "0xC377E4", VA = "0xC377E4")]
	public void TeammateLeftTheMatch()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC37804", Offset = "0xC37804", VA = "0xC37804")]
	public void TeammateFound()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC37824", Offset = "0xC37824", VA = "0xC37824")]
	public void TeammatePaused()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC37844", Offset = "0xC37844", VA = "0xC37844")]
	public void StageComplete(int stageIndex, float delay = -1f)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC378A4", Offset = "0xC378A4", VA = "0xC378A4")]
	public void PowerupAcquired(PowerupType pu)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC3756C", Offset = "0xC3756C", VA = "0xC3756C")]
	[IteratorStateMachine(typeof(<PlayAfterCurrentStereoCo>d__153))]
	private IEnumerator<float> PlayAfterCurrentStereoCo(StereoPair sfxPair, (Transform l, Transform r) locs, float delay = 0f, [Optional] Action<(SpatializedAudio l, SpatializedAudio r)> onDone)
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC37654", Offset = "0xC37654", VA = "0xC37654")]
	[IteratorStateMachine(typeof(<PlayAfterCurrentCo>d__154))]
	private IEnumerator<float> PlayAfterCurrentCo(AudioManager.SoundEffect sfx, float delay, [Optional] Transform location, [Optional] Action<SpatializedAudio> onDone)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC37988", Offset = "0xC37988", VA = "0xC37988")]
	public void MultiplayerVictory()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC379A8", Offset = "0xC379A8", VA = "0xC379A8")]
	public void MultiplayerDefeat()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC379C8", Offset = "0xC379C8", VA = "0xC379C8")]
	public void WelcomeToRacketNx(float extraDelay = 0f)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC37A40", Offset = "0xC37A40", VA = "0xC37A40")]
	[IteratorStateMachine(typeof(<WelcomeToRacketNxCo>d__158))]
	private IEnumerator<float> WelcomeToRacketNxCo(float extraDelay)
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC37AEC", Offset = "0xC37AEC", VA = "0xC37AEC")]
	public void LetsGo([Optional] Action onDone)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC37B70", Offset = "0xC37B70", VA = "0xC37B70")]
	[IteratorStateMachine(typeof(<LetsGoCo>d__160))]
	private IEnumerator<float> LetsGoCo()
	{
		return null;
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC37C0C", Offset = "0xC37C0C", VA = "0xC37C0C")]
	public void Streaks(int count)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC37CFC", Offset = "0xC37CFC", VA = "0xC37CFC")]
	public void WavesLeft(int wavesLeft)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC367BC", Offset = "0xC367BC", VA = "0xC367BC")]
	private SpatializedAudio PlayEffect(AudioManager.SoundEffect sfx, OverlapBehaviour overlapBehaviour = OverlapBehaviour.AbortIfOverlapping, float delay = 0f, [Optional] Transform location, bool tutorial = false, bool ignoreZen = true, [Optional] Action<SpatializedAudio> onDone)
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC37FB4", Offset = "0xC37FB4", VA = "0xC37FB4")]
	public void PlaySfxThroughAnnouncerSpeakersMono(AudioManager.SoundEffect sfx, float volume = -1f)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC38130", Offset = "0xC38130", VA = "0xC38130")]
	public void PlaySfxThroughAnnouncerSpeakersStereo(AudioManager.SoundEffect leftSfx, AudioManager.SoundEffect rightSfx, float volume = -1f)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xC381DC", Offset = "0xC381DC", VA = "0xC381DC")]
	public void PlaySfxThroughAnnouncerSpeakers(AudioManager.SoundEffect leftSfx, AudioManager.SoundEffect rightSfx, float volume = -1f)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC382F4", Offset = "0xC382F4", VA = "0xC382F4")]
	private (SpatializedAudio, SpatializedAudio) internalPlayEffectNowOneOfStereo(StereoPair sfxPair, (Transform l, Transform r) locs, float delay)
	{
		return default((SpatializedAudio, SpatializedAudio));
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC37D60", Offset = "0xC37D60", VA = "0xC37D60")]
	private SpatializedAudio internalPlayEffectNow(AudioManager.SoundEffect sfx, float delay, Transform location)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC38668", Offset = "0xC38668", VA = "0xC38668")]
	private void onDonePlayback()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC38670", Offset = "0xC38670", VA = "0xC38670")]
	public void AcquirePowerup(float delay = 0f)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC3868C", Offset = "0xC3868C", VA = "0xC3868C")]
	public void OutOfTime()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC386AC", Offset = "0xC386AC", VA = "0xC386AC")]
	public void SoloSetComplete()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC386CC", Offset = "0xC386CC", VA = "0xC386CC")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC386EC", Offset = "0xC386EC", VA = "0xC386EC")]
	public void PersonalBest()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC3870C", Offset = "0xC3870C", VA = "0xC3870C")]
	public void TeamBest()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC3872C", Offset = "0xC3872C", VA = "0xC3872C")]
	public void OnClutchSave(float timeInRisk)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC387FC", Offset = "0xC387FC", VA = "0xC387FC")]
	public void Faster(float speed)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC38F60", Offset = "0xC38F60", VA = "0xC38F60")]
	public void gameEndReason(GameEndReason reason)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xC38FB8", Offset = "0xC38FB8", VA = "0xC38FB8")]
	public void roundXCompleted(int round)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC3900C", Offset = "0xC3900C", VA = "0xC3900C")]
	public void BO3Score(int p1Score, int p2Score, bool final = false)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC391F8", Offset = "0xC391F8", VA = "0xC391F8")]
	public List<AudioManager.SoundEffect> GetSoundEffects()
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC39210", Offset = "0xC39210", VA = "0xC39210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC39214", Offset = "0xC39214", VA = "0xC39214")]
	public Announcer()
	{
	}
}
[Token(Token = "0x2000084")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public enum EffectGroup
	{
		[Token(Token = "0x4000370")]
		Ball = 0,
		[Token(Token = "0x4000371")]
		Racket = 1,
		[Token(Token = "0x4000372")]
		Impact = 2,
		[Token(Token = "0x4000373")]
		Targets = 3,
		[Token(Token = "0x4000374")]
		RoomBuild = 4,
		[Token(Token = "0x4000375")]
		UI = 5,
		[Token(Token = "0x4000376")]
		Stereo2D = 98,
		[Token(Token = "0x4000377")]
		General = 99,
		[Token(Token = "0x4000378")]
		Announcer = 100,
		[Token(Token = "0x4000379")]
		Voice = 200,
		[Token(Token = "0x400037A")]
		Music = 300
	}

	[Serializable]
	[Token(Token = "0x2000086")]
	public class SoundEffectGroup : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectGroup group;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("This controls the volume of the AudioSource component")]
		[Range(0f, 1f)]
		public float volume;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("This controls the gain of the NxSource component")]
		[Range(-80f, 20f)]
		public float gainDb;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-80f, 20f)]
		public float additionalOculusGainDb;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NxGroup NxGroup;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("If there is an advanced haptic feature available. any sound effect of this group will be send to the haptic source")]
		public bool sendToHaptics;

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xC3B534", Offset = "0xC3B534", VA = "0xC3B534", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xC3B5AC", Offset = "0xC3B5AC", VA = "0xC3B5AC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xC3B624", Offset = "0xC3B624", VA = "0xC3B624")]
		public SoundEffectGroup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000087")]
	public class SoundEffect
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("If there is an advanced haptic feature available. send this sound effect to the haptic source.")]
		public bool sendToHaptics;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float hapticAmp;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectGroup group;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float baseVolume;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-3f, 3f)]
		public float basePitch;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-80f, 20f)]
		public float NxGainDb;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(-80f, 20f)]
		public float OculusAdditionalGainDb;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource rolloffCurvesReference;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool timeEffectsPitch;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minTimeBetweenPlays;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(-1f, 1f)]
		public float panStereo;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] clips;

		[NonSerialized]
		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundEffectGroup effectGroup;

		[NonSerialized]
		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _lastPlayTime;

		[NonSerialized]
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _curVolume;

		[NonSerialized]
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float _curPitch;

		[NonSerialized]
		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _curDelay;

		[NonSerialized]
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int _curVariation;

		[NonSerialized]
		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 _curPosition;

		[NonSerialized]
		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform _curAttachedTo;

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xC3B634", Offset = "0xC3B634", VA = "0xC3B634")]
		public SoundEffect()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xC3B65C", Offset = "0xC3B65C", VA = "0xC3B65C")]
		public SoundEffect(bool affectedByTime)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xC3B6A4", Offset = "0xC3B6A4", VA = "0xC3B6A4")]
		private bool HapticInGroup()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xC3852C", Offset = "0xC3852C", VA = "0xC3852C")]
		public void ChooseRandomVariant()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xC364DC", Offset = "0xC364DC", VA = "0xC364DC")]
		public void Init()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000088")]
	public class RoomBuild
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundEffect buildFloor;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect hexLoop;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffect ceilingClose;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEffect roomLightsTurnOn;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundEffect floorTimerRecede;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundEffect floorTimerRecede_Restart;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundEffect guttersFadeIn;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SoundEffect spaceOn_Restart;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundEffect hexBlackToTransparent;

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xC3B7A4", Offset = "0xC3B7A4", VA = "0xC3B7A4")]
		public RoomBuild()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000089")]
	public class HatSound
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ItemId(ItemsDefs.ItemShelf.Headware)]
		public string itemId;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect mono;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffect l;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEffect r;

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xC3B7AC", Offset = "0xC3B7AC", VA = "0xC3B7AC")]
		public HatSound()
		{
		}
	}

	[Token(Token = "0x200008A")]
	private class AudioPool
	{
		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<SpatializedAudio> _free;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SpatializedAudio> _used;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpatializedAudio _prefab;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _freeRoot;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _usedRoot;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _reservedSize;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _index;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _prefix;

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xC3B7B4", Offset = "0xC3B7B4", VA = "0xC3B7B4")]
		private SpatializedAudio create()
		{
			return null;
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xC3A860", Offset = "0xC3A860", VA = "0xC3A860")]
		public AudioPool(string prefix, int maxSize, int reservedSize, SpatializedAudio prefab)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xC3B364", Offset = "0xC3B364", VA = "0xC3B364")]
		public SpatializedAudio allocate(bool forced)
		{
			return null;
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xC3B9F4", Offset = "0xC3B9F4", VA = "0xC3B9F4")]
		private void deallocate(SpatializedAudio SA, int i)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xC3AE8C", Offset = "0xC3AE8C", VA = "0xC3AE8C")]
		public void update()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xC3ACC0", Offset = "0xC3ACC0", VA = "0xC3ACC0")]
		public void MuteLoopingSounds(bool state)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xC3B93C", Offset = "0xC3B93C", VA = "0xC3B93C")]
		public bool cleanup()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioManager inst;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer _mainMixer;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NxGroup _2DNxGroup;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup _2DMixerGroup;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Global Gain (Nx)")]
	public float normalGainNx;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float headphoneGainNx;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Global Gain (Oculus)")]
	public float normalGainOculus;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float headphoneGainOculus;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Rolloff Curves")]
	public AudioSource _defaultRolloffCurve;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource _defaultMusicRolloff;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _rolloffCurvesRoot;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Nx Audio Pool")]
	public int _maxAudioObjects;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int _reserveAudioObjects;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject _coreAudioPrefab;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("2D Audio Pool")]
	public int _maxAudioObjects2D;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int _reserveAudioObjects2D;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpatializedAudio _coreAudioPrefab2D;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _forceCreateAudioObjects;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("General")]
	public AudioClip _silenceClip;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Announcer _announcer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space]
	public float globalMinTimeBetweenPlays;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SpatializedAudio _pool3DSpatializedAudio;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Effect Groups")]
	public SoundEffectGroup[] effectGroups;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Ball Loop")]
	public SoundEffect _ballLoop;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Swoosh")]
	public SoundEffect _swooshStart;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SoundEffect _swooshLoop;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Player")]
	public SoundEffect _playerFoundNotification;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Multiplayer")]
	public SoundEffect _ballTakeControl;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SoundEffect _ballGiveControl;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SoundEffect _opponentAppear;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SoundEffect _roundComplete;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SoundEffect _timerBeep1;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SoundEffect _timerBeep2;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SoundEffect _timerBuzz;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SoundEffect _waveTimeout;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Ball Impacts")]
	public SoundEffect _racketBallImpactSounds;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SoundEffect _genericBallImpactSounds;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Gutters / Rails")]
	public SoundEffect _lanesCharged;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SoundEffect _lanesSuperCharged;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SoundEffect _gutterTravel;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SoundEffect _gutterExit;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Racket pull-trigger")]
	public SoundEffect _racketPullTriggerStart;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SoundEffect _racketPullTriggerLoop;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SoundEffect _racketPullTriggerTear;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SoundEffect _racketBreak;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public SoundEffect _racketRebuild;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SoundEffect _racketHi5;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Targets")]
	public SoundEffect _smallTargetHit;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SoundEffect _redHexHit;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public SoundEffect _targetHit;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public SoundEffect _targetDestroyed;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SoundEffect _allTargetsHit;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public SoundEffect _targetActivated;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public SoundEffect _bossMove;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SoundEffect _keepAlive;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SoundEffect _healBeep;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SoundEffect _healRegenerate;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public SoundEffect _jumperPre;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public SoundEffect _jumperPost;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public SoundEffect _sliderNitro;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public SoundEffect _sliderNitro_Recharge_L;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SoundEffect _sliderNitro_Recharge_R;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SoundEffect _shieldBroken;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public SoundEffect _shieldRebuilt;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public SoundEffect _iceBroken;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public SoundEffect _iceRebuilt;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Header("Powerups")]
	public SoundEffect _PUAppear;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SoundEffect _PUAcquire;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public SoundEffect _PUKeepAlive;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public SoundEffect _PURacketHit;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public SoundEffect _PUWreckingBallBrickHit;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public SoundEffect _PUAboutToEnd;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[Header("Floaters")]
	public SoundEffect _floaterAppear;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public SoundEffect _floaterKeepAlive;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public SoundEffect _floaterHit;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public SoundEffect _floaterBreak;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public SoundEffect _floaterAboutToEnd;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public SoundEffect _floaterTimeOut;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[Header("SplashDamage PU")]
	public SoundEffect _PelletCollision;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[Header("Portals")]
	public SoundEffect _portalEntry;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public SoundEffect _portalExit;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Header("Ripple")]
	public SoundEffect _rippleBallLoop;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public SoundEffect _rippleHit;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public SoundEffect _rippleMiss;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Header("Hextrude")]
	public SoundEffect _hextrudeBumperHit;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public SoundEffect _hextrudeStopperHit;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[Header("PowerShot")]
	public SoundEffect _powerShotLoop;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public SoundEffect _powerShotHit;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public SoundEffect _powerShotMiss;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Header("Multiplayer Scorebar")]
	public SoundEffect _MPScorebar_rise;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public SoundEffect _MPScorebar_drop;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public SoundEffect _MPScorebar_tick;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[Header("Game")]
	public SoundEffect _timerPulse;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public SoundEffect _gameOver;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public SoundEffect _gameOverWinRiser;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public SoundEffect _gameOverWinHit;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public SoundEffect _faster;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public RoomBuild roomAssembly;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public SoundEffect hexLoopTest;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[Header("UI")]
	public SoundEffect _hover;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public SoundEffect _select;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public SoundEffect _selectOK;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public SoundEffect _playAgain;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public SoundEffect _selectDisabled;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public SoundEffect _back;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public SoundEffect _knobSmoothTick;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public SoundEffect _knobClick;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public SoundEffect _toggleSwitchClick;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public SoundEffect _stageCelebration_L;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public SoundEffect _stageCelebration_R;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public SoundEffect _snapTurn;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[Header("Space drones (Main Menu)")]
	public SoundEffect _spaceDroneBass1GroundFront;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SoundEffect _spaceDroneDrums1Front;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public SoundEffect _spaceDroneGlitchyLoop1AroundClose;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public SoundEffect _spaceDroneHiNoiseLoop1Around;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public SoundEffect _spaceDronePad1TopStatic;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public SoundEffect _spaceDronePad2BottomSmallCircleSlow;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public SoundEffect _spaceDronePad3BackHalfCircle;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public SoundEffect _spaceDroneSpaceyPad1TopFarCircling;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public SoundEffect _spaceDroneStatic1CirclingInOut;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[Header("Space drones (Game Over)")]
	public SoundEffect _spaceDroneAbove;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public SoundEffect _spaceDroneBelow;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public SoundEffect _spaceDroneFront;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public SoundEffect _spaceDroneBack;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public SoundEffect _spaceDroneAround;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public SoundEffect _spaceDroneFloatingInOut;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[Header("Level Editor")]
	public SoundEffect _levelEditorUISelect;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public SoundEffect _levelEditorUIDelete;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public SoundEffect _levelEditorUINew;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public SoundEffect _levelEditorUIPublishSuccess;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public SoundEffect _levelEditorUIPublishFail;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public SoundEffect _levelEditorUIOffsetSound;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public SoundEffect _levelEditorUIIntrude;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public SoundEffect _levelEditorUIExtrude;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public SoundEffect _levelEditorBrickHighlight;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public SoundEffect _levelEditorBrickSelect;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public SoundEffect _levelEditorBrickUnselect;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public SoundEffect _levelEditorBrickInvalidSelect;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public SoundEffect _levelEditorAddPU;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public SoundEffect _levelEditorBreakPU;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public SoundEffect _levelEditorHPUp;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public SoundEffect _levelEditorHPDown;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public SoundEffect _levelEditorShieldOn;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public SoundEffect _levelEditorShieldOff;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[Header("Level Editor Brushes")]
	public SoundEffect _levelEditorEraser;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public SoundEffect _levelEditorBooster;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public SoundEffect _levelEditorDowner;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public SoundEffect _levelEditorSlider;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public SoundEffect _levelEditorPortal;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public SoundEffect _levelEditorStaticTarget;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public SoundEffect _levelEditorHealingTarget;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public SoundEffect _levelEditorSnake;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public SoundEffect _levelEditorBumper;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public SoundEffect _levelEditorStopper;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public SoundEffect _levelEditorBlaster;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public SoundEffect _levelEditorIntrude;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	[Header("Achievements & items")]
	public SoundEffect _equipItem;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public SoundEffect _dequipItem;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public SoundEffect _achievementUnlocked;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public HatSound[] hats;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private List<SoundEffect> _soundEffects;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	private AudioPool _pool3D;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	private AudioPool _pool2D;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC398FC", Offset = "0xC398FC", VA = "0xC398FC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC399B8", Offset = "0xC399B8", VA = "0xC399B8")]
	private void GetPoolsPrefabs()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC39A1C", Offset = "0xC39A1C", VA = "0xC39A1C")]
	public SoundEffectGroup GetEffectGroup(EffectGroup group)
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC39AE0", Offset = "0xC39AE0", VA = "0xC39AE0")]
	public void SetEffectGroupVolume(string name, float volume)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC39C18", Offset = "0xC39C18", VA = "0xC39C18")]
	public void GetEffectGroupVolume(string name, out float volume)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC39D4C", Offset = "0xC39D4C", VA = "0xC39D4C")]
	public static HatSound GetHatSound(string itemID)
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC39E58", Offset = "0xC39E58", VA = "0xC39E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC39EB8", Offset = "0xC39EB8", VA = "0xC39EB8")]
	public void SetMusicHighPassCutoff(float fAmount)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC39F3C", Offset = "0xC39F3C", VA = "0xC39F3C")]
	public float GetMusicHighPassCutoff()
	{
		return default(float);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC2F5A8", Offset = "0xC2F5A8", VA = "0xC2F5A8")]
	public void SetMusicLowPassCutoff(float fAmount)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC39FC8", Offset = "0xC39FC8", VA = "0xC39FC8")]
	public float GetMusicLowPassCutoff()
	{
		return default(float);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC3A058", Offset = "0xC3A058", VA = "0xC3A058")]
	private void CollectSoundEffectsByReflection(object obj, List<SoundEffect> list)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC3A528", Offset = "0xC3A528", VA = "0xC3A528")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC3ABC4", Offset = "0xC3ABC4", VA = "0xC3ABC4")]
	private void headphonesConnectionChange(bool connected)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC3AC84", Offset = "0xC3AC84", VA = "0xC3AC84")]
	public void MuteLoopingSounds(bool state)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC3AE64", Offset = "0xC3AE64", VA = "0xC3AE64")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC3AF3C", Offset = "0xC3AF3C", VA = "0xC3AF3C")]
	public void ForcePlayback(bool bForce)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC38EC4", Offset = "0xC38EC4", VA = "0xC38EC4")]
	public SpatializedAudio PlayEffect2D(SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f, [Optional] Transform _locationWithoutSpatialization)
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC30858", Offset = "0xC30858", VA = "0xC30858")]
	public SpatializedAudio PlayEffect(Vector3 atPosition, SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC3B298", Offset = "0xC3B298", VA = "0xC3B298")]
	public SpatializedAudio PlayEffectVariant(Vector3 atPosition, SoundEffect effect, int sfxVariant, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC38584", Offset = "0xC38584", VA = "0xC38584")]
	public SpatializedAudio PlayEffectVariant(Transform attachedToTransform, SoundEffect effect, int sfxVariant, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xC38054", Offset = "0xC38054", VA = "0xC38054")]
	public SpatializedAudio PlayEffect(Transform attachedToTransform, SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC3B128", Offset = "0xC3B128", VA = "0xC3B128")]
	public SpatializedAudio internalPlay(SoundEffect effect)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC3AF48", Offset = "0xC3AF48", VA = "0xC3AF48")]
	public SpatializedAudio internalPlay2D(SoundEffect effect)
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC3B504", Offset = "0xC3B504", VA = "0xC3B504")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200008C")]
public class AudioRotator : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _speed;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _curAngle;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC3BBE0", Offset = "0xC3BBE0", VA = "0xC3BBE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC3BC38", Offset = "0xC3BC38", VA = "0xC3BC38")]
	public AudioRotator()
	{
	}
}
[Token(Token = "0x200008D")]
public class OpusLoaded : Test
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Voice voiceObject;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OpusEncoder _encoder;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OpusDecoder _decoder;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SamplingRate inputSamplingRateHz;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC3BC48", Offset = "0xC3BC48", VA = "0xC3BC48", Slot = "5")]
	public override void Run()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC3BD20", Offset = "0xC3BD20", VA = "0xC3BD20")]
	public OpusLoaded()
	{
	}
}
[Token(Token = "0x200008E")]
public class AudioTextureCreator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008F")]
	public class AudioChannelAnalyze
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Display")]
		public bool circular;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float circleRad;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scale;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Cross mix")]
		[Range(0f, 1f)]
		public float crossMixAmountRed;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float crossMixAmountGreen;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float crossMixAmountBlue;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Scale")]
		public float loudnessNormScale;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sampleNormScale;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		[Header("Smoothers")]
		public float smoothness;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(1f, 128f)]
		public int kernelSize;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(1f, 128f)]
		public int wrapSmootherSamples;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Normalization")]
		public float minNorm;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxNorm;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float normalizationTime;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Loudness")]
		public float loudnessTime;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float softLoudnessTime;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Buffers")]
		[Range(16f, 512f)]
		public int bufferSize;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(4f, 128f)]
		public int smoothBufferSize;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Music Sync")]
		[Range(1f, 16f)]
		public int frameDelay;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("References")]
		public AudioSource _audioSource;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LineRenderer _lineRender;

		[NonSerialized]
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float currentLoudness;

		[NonSerialized]
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float currentSoftLoudness;

		[NonSerialized]
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float currentNorm;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentNormVel;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentLoudnessVel;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentSoftLoudnessVel;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int frame;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] buffer;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] addBuffer;

		[NonSerialized]
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float[] smoothBuffer;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<float[]> smoothBufferList;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int downsampleRatio;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AnimationCurve _wrapCurve;

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xC3D5CC", Offset = "0xC3D5CC", VA = "0xC3D5CC")]
		public void UpdateParams(AudioChannelAnalyze copyFrom)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xC3C08C", Offset = "0xC3C08C", VA = "0xC3C08C")]
		public AudioChannelAnalyze(AudioChannelAnalyze copyFrom, AudioSource src, [Optional] LineRenderer lr)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xC3C040", Offset = "0xC3C040", VA = "0xC3C040")]
		public void Init(AudioChannelAnalyze copyFrom, AudioSource src, [Optional] LineRenderer lr)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xC3D620", Offset = "0xC3D620", VA = "0xC3D620")]
		public void Init()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xC3CD6C", Offset = "0xC3CD6C", VA = "0xC3CD6C")]
		public void AddAudioSourceToBuffer([Optional] AudioSource otherAudioSource)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xC3CEAC", Offset = "0xC3CEAC", VA = "0xC3CEAC")]
		public void NormalizeBuffer(float numChannels)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xC3CF18", Offset = "0xC3CF18", VA = "0xC3CF18")]
		public void Update()
		{
		}
	}

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioChannelAnalyze analyzeParams;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Stack<AudioChannelAnalyze> _freeChannels;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AudioChannelAnalyze> _currentChannels;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D _outputTexture;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] _textureColors;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int textureCacheSize;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _curTextureInCache;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D[] _textureCache;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] _totalMix;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer debugMesh;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool SingleChannelProcessing;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _AudioTexID;

	[Token(Token = "0x170000BE")]
	public AudioChannelAnalyze CurrentChannel
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xC3BD30", Offset = "0xC3BD30", VA = "0xC3BD30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC3BDA4", Offset = "0xC3BDA4", VA = "0xC3BDA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC3BEEC", Offset = "0xC3BEEC", VA = "0xC3BEEC")]
	public void AddChannel(AudioSource src, [Optional] AudioChannelAnalyze overrideDefaultParams)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC3C118", Offset = "0xC3C118", VA = "0xC3C118")]
	public void RemoveChannel(AudioSource src)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC3C314", Offset = "0xC3C314", VA = "0xC3C314")]
	public Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC3C348", Offset = "0xC3C348", VA = "0xC3C348")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC3D4E8", Offset = "0xC3D4E8", VA = "0xC3D4E8")]
	public AudioTextureCreator()
	{
	}
}
[Token(Token = "0x2000090")]
public class FollowHead : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform followTarget;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 velocity;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion angularVelocity;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool lockPlane;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("More is slower")]
	public float positionSmoothness;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("More is slower")]
	public float orientationSmoothness;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xD22920", Offset = "0xD22920", VA = "0xD22920")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xD22AEC", Offset = "0xD22AEC", VA = "0xD22AEC")]
	public FollowHead()
	{
	}
}
[Token(Token = "0x2000091")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	private enum Mode
	{
		[Token(Token = "0x4000413")]
		Idle,
		[Token(Token = "0x4000414")]
		Playing,
		[Token(Token = "0x4000415")]
		FadingIn,
		[Token(Token = "0x4000416")]
		FadingOut,
		[Token(Token = "0x4000417")]
		Stopping,
		[Token(Token = "0x4000418")]
		Skipping
	}

	[Serializable]
	[Token(Token = "0x2000093")]
	public class Track
	{
		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(-80f, 20f)]
		public float gainDb;

		[NonSerialized]
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string externalFilePath;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip FR_L;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip FR_R;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip SD_L;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip SD_R;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip RR_L;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip RR_R;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioTextureCreator.AudioChannelAnalyze analyzeParams;

		[NonSerialized]
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioManager.SoundEffect Front_L;

		[NonSerialized]
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioManager.SoundEffect Front_R;

		[NonSerialized]
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioManager.SoundEffect Side_L;

		[NonSerialized]
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioManager.SoundEffect Side_R;

		[NonSerialized]
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioManager.SoundEffect Rear_L;

		[NonSerialized]
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioManager.SoundEffect Rear_R;

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD267BC", Offset = "0xD267BC", VA = "0xD267BC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD271A4", Offset = "0xD271A4", VA = "0xD271A4")]
		public void SetExternalMusicClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD23E24", Offset = "0xD23E24", VA = "0xD23E24")]
		public Track()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <PlayMusicChallengeTrackCo>d__69 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Track track;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x170000C6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0xD27464", Offset = "0xD27464", VA = "0xD27464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000419")]
			[Address(RVA = "0xD274AC", Offset = "0xD274AC", VA = "0xD274AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xD24E5C", Offset = "0xD24E5C", VA = "0xD24E5C")]
		[DebuggerHidden]
		public <PlayMusicChallengeTrackCo>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xD27358", Offset = "0xD27358", VA = "0xD27358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD2735C", Offset = "0xD2735C", VA = "0xD2735C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xD2746C", Offset = "0xD2746C", VA = "0xD2746C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <skipMP3Co>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipBack;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xD275C4", Offset = "0xD275C4", VA = "0xD275C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0xD2760C", Offset = "0xD2760C", VA = "0xD2760C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD263C4", Offset = "0xD263C4", VA = "0xD263C4")]
		[DebuggerHidden]
		public <skipMP3Co>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xD27508", Offset = "0xD27508", VA = "0xD27508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xD2750C", Offset = "0xD2750C", VA = "0xD2750C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD275CC", Offset = "0xD275CC", VA = "0xD275CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <stopMP3Co>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipping;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0xD27764", Offset = "0xD27764", VA = "0xD27764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xD277AC", Offset = "0xD277AC", VA = "0xD277AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD26474", Offset = "0xD26474", VA = "0xD26474")]
		[DebuggerHidden]
		public <stopMP3Co>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD27614", Offset = "0xD27614", VA = "0xD27614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD27618", Offset = "0xD27618", VA = "0xD27618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xD2776C", Offset = "0xD2776C", VA = "0xD2776C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <FadeLevelEditorVolumeFactorCo>d__94 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicManager <>4__this;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float targetVolumeFactor;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <initialVolumeFactor>5__2;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__3;

		[Token(Token = "0x170000CC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0xD27890", Offset = "0xD27890", VA = "0xD27890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0xD278D8", Offset = "0xD278D8", VA = "0xD278D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xD26794", Offset = "0xD26794", VA = "0xD26794")]
		[DebuggerHidden]
		public <FadeLevelEditorVolumeFactorCo>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xD277B4", Offset = "0xD277B4", VA = "0xD277B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xD277B8", Offset = "0xD277B8", VA = "0xD277B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xD27898", Offset = "0xD27898", VA = "0xD27898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicManager inst;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Spatialization")]
	public bool dontSpatializeMusic;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Nx")]
	public float musicGlobalVolume_Game;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float musicGlobalVolume_PersonalCoeff;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Oculus")]
	public float musicGlobalVolume_Game_Oculus;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float musicGlobalVolume_PersonalCoeff_Oculus;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Speakers")]
	public MusicSpeaker[] _speakers;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AudioTextureCreator _textureCreator;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Fade times")]
	public float fadeInTime;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fadeOutTime;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float slowFadeOutTime;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float levelEditorFadeTime;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Volumes")]
	[Tooltip("Volume where slow fade out starts")]
	public float lowVolume;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Volume factor when in level editor (but not playing)")]
	public float levelEditorLowVolumeFactor;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeInSpeed;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fadeOutSpeed;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float slowFadeOutSpeed;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Mode _mode;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _targetVolume;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _fadeSpeed;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _timeSinceLastVolumeChange;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _musicLowPassCutoffVelocity;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _musicHighPassCutoffVelocity;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _lowPassCutoffWhenOptionsOpen;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _timeToKeepMusicPreviewAfterManipulation;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Track[] tracks;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MyMusicPlayer _myMusicPlayer;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Track[] _personalTracks;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float defaultGainDb;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioTextureCreator.AudioChannelAnalyze defaultParams;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ToggleSwitch myMusicSwitch;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _waitingForUserPermission;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _userPersonalTracksKey;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _usePersonalTracks;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] _playlist;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _currentTrack;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<AudioManager.SoundEffect> _soundEffects;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Music Challenges")]
	public Track oct21ChallengeTrack;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CoroutineHandle? _PlayMusicChallengeTrackCo;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _musicChallengeLength;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _volume;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _levelEditorVolumeFactor;

	[Token(Token = "0x4000410")]
	private const string fadeLevelEditorVolumeFactorTag = "fadeLevelEditorVolumeFactorTag_Coroutine";

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool _wasInOptionsMenu;

	[Token(Token = "0x170000BF")]
	public bool isPlaying
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xD22B9C", Offset = "0xD22B9C", VA = "0xD22B9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C0")]
	public Track[] usedTracks
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xD22BAC", Offset = "0xD22BAC", VA = "0xD22BAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public bool waitingForUserPermission
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xD22BFC", Offset = "0xD22BFC", VA = "0xD22BFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C2")]
	public bool usePersonalTracks
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xD22BD4", Offset = "0xD22BD4", VA = "0xD22BD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD22C04", Offset = "0xD22C04", VA = "0xD22C04")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	private int[] playlist
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD22E40", Offset = "0xD22E40", VA = "0xD22E40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public float MusicChallengeLength
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xD24E84", Offset = "0xD24E84", VA = "0xD24E84")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C5")]
	public float volume
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD2649C", Offset = "0xD2649C", VA = "0xD2649C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xD24B7C", Offset = "0xD24B7C", VA = "0xD24B7C")]
		private set
		{
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xD22C80", Offset = "0xD22C80", VA = "0xD22C80")]
	private void onPersonalMusicActivated()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xD23024", Offset = "0xD23024", VA = "0xD23024")]
	private void onPermissionResult(bool granted)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD23184", Offset = "0xD23184", VA = "0xD23184")]
	private void noLongerWaitingForUser()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD2314C", Offset = "0xD2314C", VA = "0xD2314C")]
	private void onPermissionGranted()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD231A8", Offset = "0xD231A8", VA = "0xD231A8")]
	private void LoadMediaStoreTracks()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD23790", Offset = "0xD23790", VA = "0xD23790")]
	private void loadPersonalMusic()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xD23E2C", Offset = "0xD23E2C", VA = "0xD23E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xD2412C", Offset = "0xD2412C", VA = "0xD2412C")]
	public void SetNextTrackByName(string name)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xD241F8", Offset = "0xD241F8", VA = "0xD241F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xD22E98", Offset = "0xD22E98", VA = "0xD22E98")]
	private void createPlaylist()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xD24484", Offset = "0xD24484", VA = "0xD24484")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xD24830", Offset = "0xD24830", VA = "0xD24830")]
	public void play()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xD24B84", Offset = "0xD24B84", VA = "0xD24B84")]
	public void stop(bool slowly)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xD24BB8", Offset = "0xD24BB8", VA = "0xD24BB8")]
	public void ForceRestart()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xD24CD8", Offset = "0xD24CD8", VA = "0xD24CD8")]
	public void resumeLow()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xD24CFC", Offset = "0xD24CFC", VA = "0xD24CFC")]
	public void resumeHigh()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xD24D20", Offset = "0xD24D20", VA = "0xD24D20")]
	private void PlayMusicChallengeTrack(Track track)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xD24DCC", Offset = "0xD24DCC", VA = "0xD24DCC")]
	[IteratorStateMachine(typeof(<PlayMusicChallengeTrackCo>d__69))]
	private IEnumerator<float> PlayMusicChallengeTrackCo(Track track)
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xD24E8C", Offset = "0xD24E8C", VA = "0xD24E8C")]
	public float GetTimeLeftForMusicChallenge()
	{
		return default(float);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xD24910", Offset = "0xD24910", VA = "0xD24910")]
	private void playCurrentTrack()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xD25BF0", Offset = "0xD25BF0", VA = "0xD25BF0")]
	private void onPlayStarted(Track track)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xD25C24", Offset = "0xD25C24", VA = "0xD25C24")]
	private void onPlayFailed(Track track)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xD25CD4", Offset = "0xD25CD4", VA = "0xD25CD4")]
	private void removePersonalTrack(Track track)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xD24F60", Offset = "0xD24F60", VA = "0xD24F60")]
	private void StartTrackPlayback(Track track)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xD2626C", Offset = "0xD2626C", VA = "0xD2626C")]
	private void onTrackEnd()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xD262C0", Offset = "0xD262C0", VA = "0xD262C0")]
	private void advanceToNextTrack(bool skipBack = false)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xD22D2C", Offset = "0xD22D2C", VA = "0xD22D2C")]
	public void skipTrack(bool skipBack = false)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xD2633C", Offset = "0xD2633C", VA = "0xD2633C")]
	[IteratorStateMachine(typeof(<skipMP3Co>d__82))]
	private IEnumerator skipMP3Co(bool skipBack = false)
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xD24BD4", Offset = "0xD24BD4", VA = "0xD24BD4")]
	private void stopPlayback(bool skipBack = false)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xD263EC", Offset = "0xD263EC", VA = "0xD263EC")]
	[IteratorStateMachine(typeof(<stopMP3Co>d__84))]
	private IEnumerator stopMP3Co(bool skipping = false)
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xD264A4", Offset = "0xD264A4", VA = "0xD264A4")]
	private void applyVolume()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xD26638", Offset = "0xD26638", VA = "0xD26638")]
	public void OnLevelEditorModeChanged(LevelEditorManager.LevelEditorMode oldMode, LevelEditorManager.LevelEditorMode newMode)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xD26680", Offset = "0xD26680", VA = "0xD26680")]
	private void FadeLevelEditorVolumeFactor(float targetVolumeFactor)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xD26710", Offset = "0xD26710", VA = "0xD26710")]
	[IteratorStateMachine(typeof(<FadeLevelEditorVolumeFactorCo>d__94))]
	private IEnumerator<float> FadeLevelEditorVolumeFactorCo(float targetVolumeFactor)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xD23708", Offset = "0xD23708", VA = "0xD23708")]
	private void createTrackSoundEffects(Track track, List<AudioManager.SoundEffect> list)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD268EC", Offset = "0xD268EC", VA = "0xD268EC")]
	private void addEffect(AudioManager.SoundEffect se, AudioClip clip)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xD26A78", Offset = "0xD26A78", VA = "0xD26A78")]
	public void VolumeChanged()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xD26A80", Offset = "0xD26A80", VA = "0xD26A80")]
	private void OnMusicSkipRequested(int dir)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD26B78", Offset = "0xD26B78", VA = "0xD26B78")]
	private void Update()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD26FD8", Offset = "0xD26FD8", VA = "0xD26FD8")]
	private bool fade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xD27100", Offset = "0xD27100", VA = "0xD27100")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x2000098")]
public class MusicSpeaker : MonoBehaviour
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angle;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[NonSerialized]
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpatializedAudio saudio;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action _onDone;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _playingExternalMusic;

	[Token(Token = "0x170000CE")]
	public float volume
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xD265B4", Offset = "0xD265B4", VA = "0xD265B4")]
		set
		{
		}
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD24738", Offset = "0xD24738", VA = "0xD24738")]
	public void LocateRelativeTo(Transform root)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD25E18", Offset = "0xD25E18", VA = "0xD25E18")]
	public void Play(AudioManager.SoundEffect effect, [Optional] Action onDone, [Optional] AudioTextureCreator.AudioChannelAnalyze analyzeParams, bool playingExternalMusic = false)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xD279F0", Offset = "0xD279F0", VA = "0xD279F0")]
	private void onPlaybackDone()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xD26178", Offset = "0xD26178", VA = "0xD26178")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xD2706C", Offset = "0xD2706C", VA = "0xD2706C")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xD27E44", Offset = "0xD27E44", VA = "0xD27E44")]
	public MusicSpeaker()
	{
	}
}
[Token(Token = "0x2000099")]
public abstract class MyMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x4000441")]
	public const int EXTERNAL_MUSIC_FILES_LIMIT = 3000;

	[Token(Token = "0x14000004")]
	public event Action<MusicManager.Track> onPlayStarted
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xD23FCC", Offset = "0xD23FCC", VA = "0xD23FCC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600043B")]
		[Address(RVA = "0xD28370", Offset = "0xD28370", VA = "0xD28370")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<MusicManager.Track> onPlayFailed
	{
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xD2407C", Offset = "0xD2407C", VA = "0xD2407C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xD2843C", Offset = "0xD2843C", VA = "0xD2843C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000433")]
	public abstract void getPermission(Action<bool> onDone);

	[Token(Token = "0x6000434")]
	protected abstract string getMyMusicDirectory();

	[Token(Token = "0x6000435")]
	protected abstract HashSet<string> getSupportedFileExtensions();

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xD23BF8", Offset = "0xD23BF8", VA = "0xD23BF8")]
	public List<string> listFiles()
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xD27E4C", Offset = "0xD27E4C", VA = "0xD27E4C")]
	private List<string> scanDirForMusicFiles(string path, bool recursive, int maxFiles)
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	public abstract bool canPlay();

	[Token(Token = "0x6000439")]
	public abstract void play(MusicManager.Track track, MusicSpeaker speaker);

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD28420", Offset = "0xD28420", VA = "0xD28420")]
	protected void _onPlayStarted(MusicManager.Track track)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD284EC", Offset = "0xD284EC", VA = "0xD284EC")]
	protected void _onPlayFailed(MusicManager.Track track)
	{
	}

	[Token(Token = "0x6000440")]
	public abstract bool needStopping();

	[Token(Token = "0x6000441")]
	public abstract bool canSkip();

	[Token(Token = "0x6000442")]
	public abstract IEnumerator stop();

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xD28508", Offset = "0xD28508", VA = "0xD28508")]
	protected MyMusicPlayer()
	{
	}
}
[Token(Token = "0x200009A")]
public class MyMusicPlayer_Android : MyMusicPlayer
{
	[Token(Token = "0x200009B")]
	private class MediaStoreAudioEntry
	{
		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string? displayName;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string? uri;

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xD2A000", Offset = "0xD2A000", VA = "0xD2A000")]
		public MediaStoreAudioEntry()
		{
		}
	}

	[Token(Token = "0x200009C")]
	private enum ExternalStorageState
	{
		[Token(Token = "0x400044A")]
		MEDIA_UNKNOWN,
		[Token(Token = "0x400044B")]
		MEDIA_REMOVED,
		[Token(Token = "0x400044C")]
		MEDIA_UNMOUNTED,
		[Token(Token = "0x400044D")]
		MEDIA_CHECKING,
		[Token(Token = "0x400044E")]
		MEDIA_NOFS,
		[Token(Token = "0x400044F")]
		MEDIA_MOUNTED,
		[Token(Token = "0x4000450")]
		MEDIA_MOUNTED_READ_ONLY,
		[Token(Token = "0x4000451")]
		MEDIA_SHARED,
		[Token(Token = "0x4000452")]
		MEDIA_BAD_REMOVAL,
		[Token(Token = "0x4000453")]
		MEDIA_UNMOUNTABLE
	}

	[Token(Token = "0x200009D")]
	[CompilerGenerated]
	private sealed class <requestPermissionDelayed>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MyMusicPlayer_Android <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0xD2AAB0", Offset = "0xD2AAB0", VA = "0xD2AAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0xD2AAF8", Offset = "0xD2AAF8", VA = "0xD2AAF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xD286B8", Offset = "0xD286B8", VA = "0xD286B8")]
		[DebuggerHidden]
		public <requestPermissionDelayed>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xD2A9D4", Offset = "0xD2A9D4", VA = "0xD2A9D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xD2A9D8", Offset = "0xD2A9D8", VA = "0xD2A9D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xD2AAB8", Offset = "0xD2AAB8", VA = "0xD2AAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009F")]
	[CompilerGenerated]
	private sealed class <playExternalMusicFile>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MyMusicPlayer_Android <>4__this;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager.Track track;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip <clip>5__3;

		[Token(Token = "0x170000D1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0xD2B044", Offset = "0xD2B044", VA = "0xD2B044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xD2B08C", Offset = "0xD2B08C", VA = "0xD2B08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xD2A94C", Offset = "0xD2A94C", VA = "0xD2A94C")]
		[DebuggerHidden]
		public <playExternalMusicFile>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xD2AB8C", Offset = "0xD2AB8C", VA = "0xD2AB8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xD2AB90", Offset = "0xD2AB90", VA = "0xD2AB90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xD2B04C", Offset = "0xD2B04C", VA = "0xD2B04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<bool> _onPermissionResult;

	[Token(Token = "0x4000445")]
	private const string READ_EXTERNAL_STORAGE = "android.permission.READ_EXTERNAL_STORAGE";

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _startingToPlayExternalMusic;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xD28510", Offset = "0xD28510", VA = "0xD28510", Slot = "4")]
	public override void getPermission(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xD28634", Offset = "0xD28634", VA = "0xD28634")]
	[IteratorStateMachine(typeof(<requestPermissionDelayed>d__3))]
	private IEnumerator requestPermissionDelayed(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD2329C", Offset = "0xD2329C", VA = "0xD2329C")]
	public static MusicManager.Track[] TrackList()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	private T MediaAudioMediaGetStatic<T>(string fieldName, T defaultValue) where T : notnull
	{
		return (T)null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD286E0", Offset = "0xD286E0", VA = "0xD286E0")]
	private static List<MediaStoreAudioEntry> AudiosList()
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xD29FCC", Offset = "0xD29FCC", VA = "0xD29FCC")]
	private static string? NullifyIfNotValid(ref string? str)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xD2A008", Offset = "0xD2A008", VA = "0xD2A008", Slot = "5")]
	protected override string getMyMusicDirectory()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xD2A274", Offset = "0xD2A274", VA = "0xD2A274")]
	private static ExternalStorageState? getExternalStorageState()
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xD2A00C", Offset = "0xD2A00C", VA = "0xD2A00C")]
	private static string getExternalStorageDirectory()
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xD2A49C", Offset = "0xD2A49C", VA = "0xD2A49C")]
	private static string getExternalStoragePublicDirectory(string type)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xD2A73C", Offset = "0xD2A73C", VA = "0xD2A73C", Slot = "6")]
	protected override HashSet<string> getSupportedFileExtensions()
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xD2A834", Offset = "0xD2A834", VA = "0xD2A834", Slot = "7")]
	public override bool canPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xD2A844", Offset = "0xD2A844", VA = "0xD2A844", Slot = "8")]
	public override void play(MusicManager.Track track, MusicSpeaker speaker)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xD2A8BC", Offset = "0xD2A8BC", VA = "0xD2A8BC")]
	[IteratorStateMachine(typeof(<playExternalMusicFile>d__18))]
	private IEnumerator<float> playExternalMusicFile(MusicManager.Track track)
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xD2A974", Offset = "0xD2A974", VA = "0xD2A974", Slot = "9")]
	public override bool needStopping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xD2A97C", Offset = "0xD2A97C", VA = "0xD2A97C", Slot = "10")]
	public override bool canSkip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xD2A98C", Offset = "0xD2A98C", VA = "0xD2A98C", Slot = "11")]
	public override IEnumerator stop()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xD2A9CC", Offset = "0xD2A9CC", VA = "0xD2A9CC")]
	public MyMusicPlayer_Android()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MyMusicPlayer_PC : MyMusicPlayer
{
	[Token(Token = "0x20000A2")]
	[CompilerGenerated]
	private sealed class <waitForThreadDecompress>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xD2BB10", Offset = "0xD2BB10", VA = "0xD2BB10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xD2BB58", Offset = "0xD2BB58", VA = "0xD2BB58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xD2B740", Offset = "0xD2B740", VA = "0xD2B740")]
		[DebuggerHidden]
		public <waitForThreadDecompress>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xD2BA98", Offset = "0xD2BA98", VA = "0xD2BA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xD2BA9C", Offset = "0xD2BA9C", VA = "0xD2BA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xD2BB18", Offset = "0xD2BB18", VA = "0xD2BB18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[CompilerGenerated]
	private sealed class <playMP3Co>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager.Track track;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MusicSpeaker speaker;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <mp3Channels>5__2;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte[] <buffer>5__3;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] <samples>5__4;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private short[] <shortBuffer>5__5;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource <source>5__6;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <bufferPos>5__7;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <clipPos>5__8;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047F")]
			[Address(RVA = "0xD2C6C8", Offset = "0xD2C6C8", VA = "0xD2C6C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xD2C710", Offset = "0xD2C710", VA = "0xD2C710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xD2B7A4", Offset = "0xD2B7A4", VA = "0xD2B7A4")]
		[DebuggerHidden]
		public <playMP3Co>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xD2BB60", Offset = "0xD2BB60", VA = "0xD2BB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xD2BB64", Offset = "0xD2BB64", VA = "0xD2BB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xD2C6D0", Offset = "0xD2C6D0", VA = "0xD2C6D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private sealed class <stop>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0xD2C790", Offset = "0xD2C790", VA = "0xD2C790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xD2C7D8", Offset = "0xD2C7D8", VA = "0xD2C7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xD2B840", Offset = "0xD2B840", VA = "0xD2B840")]
		[DebuggerHidden]
		public <stop>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xD2C718", Offset = "0xD2C718", VA = "0xD2C718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xD2C71C", Offset = "0xD2C71C", VA = "0xD2C71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xD2C798", Offset = "0xD2C798", VA = "0xD2C798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000461")]
	private const int MP3_FILES_LIMIT = 3000;

	[Token(Token = "0x4000462")]
	private const int NUM_MP3_BUFFER_SIZE = 262144;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip _mp3Clip;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] _nextMP3Buffer1;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private byte[] _nextMP3Buffer2;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _mp3JobFillsBuffer1;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _mp3JobWait;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _mp3IsPlaying;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _mp3Skip;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _mp3DecodingFirstBuffer;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _mp3CloseThread;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool _mp3ErrorWhileDecoding;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _mp3Coroutine;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Thread _mp3DecompressThread;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MP3Stream _stream;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xD2B0E8", Offset = "0xD2B0E8", VA = "0xD2B0E8", Slot = "4")]
	public override void getPermission(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xD2B10C", Offset = "0xD2B10C", VA = "0xD2B10C", Slot = "5")]
	protected override string getMyMusicDirectory()
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xD2B118", Offset = "0xD2B118", VA = "0xD2B118", Slot = "6")]
	protected override HashSet<string> getSupportedFileExtensions()
	{
		return null;
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xD2B1C0", Offset = "0xD2B1C0", VA = "0xD2B1C0", Slot = "7")]
	public override bool canPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xD2B1E0", Offset = "0xD2B1E0", VA = "0xD2B1E0", Slot = "8")]
	public override void play(MusicManager.Track track, MusicSpeaker speaker)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xD2B3A4", Offset = "0xD2B3A4", VA = "0xD2B3A4", Slot = "9")]
	public override bool needStopping()
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xD2B3B4", Offset = "0xD2B3B4", VA = "0xD2B3B4", Slot = "10")]
	public override bool canSkip()
	{
		return default(bool);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xD2B3BC", Offset = "0xD2B3BC", VA = "0xD2B3BC")]
	private void readMP3Job(object arg)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xD2B6CC", Offset = "0xD2B6CC", VA = "0xD2B6CC")]
	[IteratorStateMachine(typeof(<waitForThreadDecompress>d__22))]
	private IEnumerator waitForThreadDecompress()
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xD2B768", Offset = "0xD2B768", VA = "0xD2B768")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xD2B300", Offset = "0xD2B300", VA = "0xD2B300")]
	[IteratorStateMachine(typeof(<playMP3Co>d__25))]
	private IEnumerator playMP3Co(MusicManager.Track track, MusicSpeaker speaker)
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xD2B7CC", Offset = "0xD2B7CC", VA = "0xD2B7CC", Slot = "11")]
	[IteratorStateMachine(typeof(<stop>d__26))]
	public override IEnumerator stop()
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xD2B868", Offset = "0xD2B868", VA = "0xD2B868")]
	public MyMusicPlayer_PC()
	{
	}
}
[Token(Token = "0x20000A5")]
public class SpaceFloat : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A6")]
	public class Orbit
	{
		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 axis;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xD2CC90", Offset = "0xD2CC90", VA = "0xD2CC90")]
		public Orbit()
		{
		}
	}

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Object in center")]
	public Transform centerPlatform;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Maxiumum distance from initial position")]
	public float deltaDistance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Wavelength in seconds")]
	public float cycleDuration;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[Tooltip("Phase shift to desynchornize")]
	public float phaseShift;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Orbit orbit;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _centerPos;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _origDirection;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _meanPosition;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _freedomDistance;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _cycleT;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _rotationT;

	[Token(Token = "0x170000D9")]
	private Vector3 meanPosition
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xD2C7E0", Offset = "0xD2C7E0", VA = "0xD2C7E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xD2C8E8", Offset = "0xD2C8E8", VA = "0xD2C8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xD2CB1C", Offset = "0xD2CB1C", VA = "0xD2CB1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xD2CC80", Offset = "0xD2CC80", VA = "0xD2CC80")]
	public SpaceFloat()
	{
	}
}
[Token(Token = "0x20000A7")]
public class SpaceSounds : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum SoundId
	{
		[Token(Token = "0x400049C")]
		None,
		[Token(Token = "0x400049D")]
		Bass1GroundFront,
		[Token(Token = "0x400049E")]
		Drums1Front,
		[Token(Token = "0x400049F")]
		GlitchyLoop1AroundClose,
		[Token(Token = "0x40004A0")]
		HiNoiseLoop1Around,
		[Token(Token = "0x40004A1")]
		Pad1TopStatic,
		[Token(Token = "0x40004A2")]
		Pad2BottomSmallCircleSlow,
		[Token(Token = "0x40004A3")]
		Pad3BackHalfCircle,
		[Token(Token = "0x40004A4")]
		SpaceyPad1TopFarCircling,
		[Token(Token = "0x40004A5")]
		Static1CirclingInOut,
		[Token(Token = "0x40004A6")]
		Above,
		[Token(Token = "0x40004A7")]
		Below,
		[Token(Token = "0x40004A8")]
		Front,
		[Token(Token = "0x40004A9")]
		Back,
		[Token(Token = "0x40004AA")]
		Around,
		[Token(Token = "0x40004AB")]
		FloatingInOut
	}

	[Serializable]
	[Token(Token = "0x20000A9")]
	public class Sound
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SoundId id;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform position;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xD2D618", Offset = "0xD2D618", VA = "0xD2D618")]
		public Sound()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	public enum FadeMode
	{
		[Token(Token = "0x40004B0")]
		AutoFade,
		[Token(Token = "0x40004B1")]
		ExternalControl
	}

	[Token(Token = "0x20000AB")]
	private enum State
	{
		[Token(Token = "0x40004B3")]
		Silent,
		[Token(Token = "0x40004B4")]
		FadingIn,
		[Token(Token = "0x40004B5")]
		Playing,
		[Token(Token = "0x40004B6")]
		FadingOut
	}

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sound[] sounds;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeMode fadeMode;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeInTime;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SpatializedAudio> sAudios;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _state;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _fadeVolume;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _fadeVolumeVelocity;

	[Token(Token = "0x170000DA")]
	public float volume
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xD2D44C", Offset = "0xD2D44C", VA = "0xD2D44C")]
		set
		{
		}
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xD2CCF4", Offset = "0xD2CCF4", VA = "0xD2CCF4")]
	public void startPlayback()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xD2CD18", Offset = "0xD2CD18", VA = "0xD2CD18")]
	private void init()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xD2CE5C", Offset = "0xD2CE5C", VA = "0xD2CE5C")]
	private AudioManager.SoundEffect idToSfx(SoundId soundId)
	{
		return null;
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xD2D104", Offset = "0xD2D104", VA = "0xD2D104")]
	private void play(Transform transform, AudioManager.SoundEffect sfx)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xD2D318", Offset = "0xD2D318", VA = "0xD2D318")]
	public void stopPlayback()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xD2D33C", Offset = "0xD2D33C", VA = "0xD2D33C")]
	private void cleanup()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD2D26C", Offset = "0xD2D26C", VA = "0xD2D26C")]
	private void enableSpaceFloats(bool enabled)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD2D4E8", Offset = "0xD2D4E8", VA = "0xD2D4E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD2D608", Offset = "0xD2D608", VA = "0xD2D608")]
	public SpaceSounds()
	{
	}
}
[Token(Token = "0x20000AC")]
public class SpaceSounds_GameOver : SpaceSounds
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceSounds_GameOver inst;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xD2D628", Offset = "0xD2D628", VA = "0xD2D628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xD2D680", Offset = "0xD2D680", VA = "0xD2D680")]
	public SpaceSounds_GameOver()
	{
	}
}
[Token(Token = "0x20000AD")]
public class SpaceSounds_MainMenu : SpaceSounds
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceSounds_MainMenu inst;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xD2D690", Offset = "0xD2D690", VA = "0xD2D690")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xD2D6E8", Offset = "0xD2D6E8", VA = "0xD2D6E8")]
	public SpaceSounds_MainMenu()
	{
	}
}
[Token(Token = "0x20000AE")]
public class SpatializedAudio : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	private class CopyAudioClipLeftToRightChannel : MonoBehaviour
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xD2E470", Offset = "0xD2E470", VA = "0xD2E470")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xD2E4CC", Offset = "0xD2E4CC", VA = "0xD2E4CC")]
		public CopyAudioClipLeftToRightChannel()
		{
		}
	}

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audioSource;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _attachedTo;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _baseVolume;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _basePitch;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _inCleanupPhase;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _timeManipulatesPitch;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _playDelay;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _playInFrames;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NxSource _nxSource;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ONSPAudioSource _ONSPAudioSource;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource _lastRolloffCurveRefUsed;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _isPaused;

	[Token(Token = "0x170000DB")]
	public AudioSource audioSource
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xD2D6F8", Offset = "0xD2D6F8", VA = "0xD2D6F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DC")]
	public NxSource nxSource
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xD2D79C", Offset = "0xD2D79C", VA = "0xD2D79C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DD")]
	public bool isPlaying
	{
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xD2DFFC", Offset = "0xD2DFFC", VA = "0xD2DFFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000006")]
	public event Action onDone
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xD27934", Offset = "0xD27934", VA = "0xD27934")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xD2D700", Offset = "0xD2D700", VA = "0xD2D700")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD2D7A4", Offset = "0xD2D7A4", VA = "0xD2D7A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD2D9F4", Offset = "0xD2D9F4", VA = "0xD2D9F4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD2DACC", Offset = "0xD2DACC", VA = "0xD2DACC")]
	public static float LinearToDecibel(float linear)
	{
		return default(float);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xD243B0", Offset = "0xD243B0", VA = "0xD243B0")]
	public void ChangeGain(float gainDB)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xD2DB00", Offset = "0xD2DB00", VA = "0xD2DB00")]
	private static float DecibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xD2DB10", Offset = "0xD2DB10", VA = "0xD2DB10")]
	public void Play(AudioManager.SoundEffect effect, [Optional] NxGroup overrideGroup)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xD2DEF8", Offset = "0xD2DEF8", VA = "0xD2DEF8")]
	public void ReplaceClip(AudioClip clip)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xD2DF4C", Offset = "0xD2DF4C", VA = "0xD2DF4C")]
	public void AttachToTransform(Transform t)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xD26214", Offset = "0xD26214", VA = "0xD26214")]
	public void AddCopyLeftToRightComponent()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xD279D0", Offset = "0xD279D0", VA = "0xD279D0")]
	public void SetLooping(bool bLoop)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xD2DF54", Offset = "0xD2DF54", VA = "0xD2DF54")]
	public int GetLoopCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xD27B8C", Offset = "0xD27B8C", VA = "0xD27B8C")]
	public void Cleanup(bool unloadClipData = false)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD27DF8", Offset = "0xD27DF8", VA = "0xD27DF8")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xD2E0B0", Offset = "0xD2E0B0", VA = "0xD2E0B0")]
	public void internalUpdate()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xD2E460", Offset = "0xD2E460", VA = "0xD2E460")]
	public SpatializedAudio()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TestAudioChannelAnalyze : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Display")]
	public bool circular;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float circleRad;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scale;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Smoothers")]
	public float smoothness;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int kernelSize;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int wrapSmootherSamples;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Buffers")]
	public int bufferSize;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int smoothBufferSize;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Music Sync")]
	public int frameDelay;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int frame;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] buffer;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] smoothBuffer;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float[]> smoothBufferList;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] smoothBufferVel;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int downsampleRatio;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource _audioSource;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer _lineRender;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationCurve _wrapCurve;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xD2E4D4", Offset = "0xD2E4D4", VA = "0xD2E4D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xD2E788", Offset = "0xD2E788", VA = "0xD2E788")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xD2EBE8", Offset = "0xD2EBE8", VA = "0xD2EBE8")]
	public TestAudioChannelAnalyze()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Voice : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	private struct Chunk
	{
		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] buffer;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort payloadSize;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint seqNum;
	}

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The 'sweet spot' for music and general audio is around 30kbps (mono)")]
	[Range(6000f, 260000f)]
	public int bitrate;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SamplingRate samplingRate;

	[Token(Token = "0x40004DB")]
	private const Channels NUM_CHANNELES = Channels.Mono;

	[Token(Token = "0x40004DC")]
	private const OpusApplicationType APPLICATION_TYPE = OpusApplicationType.Voip;

	[Token(Token = "0x40004DD")]
	private const Delay ENCODE_DELAY = Delay.Delay60ms;

	[Token(Token = "0x40004DE")]
	private const uint HEADER_SIZE = 6u;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Voice inst;

	[Token(Token = "0x40004E0")]
	private const uint MAX_COMPRESSED_FRAME_SIZE = 4000u;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] _compressedAudioTemp;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private short[] _uncompressedAudioFrameDecode;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private short[] _uncompressedAudioFrameEncode;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OpusEncoder _encoder;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private uint _lastSeqNumSent;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ByteWriter _writer;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OpusDecoder _decoder;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private uint _packageSize;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private uint _lastSeqNumReceived;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Stopwatch _initDecodeTimer;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ByteReader _reader;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Stack<byte[]> _compressedAudioTempCache;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Chunk> _compressedAudioTempQueue;

	[Token(Token = "0x170000DE")]
	private uint bytesPerSecond
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xD2EC18", Offset = "0xD2EC18", VA = "0xD2EC18")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xD2EC24", Offset = "0xD2EC24", VA = "0xD2EC24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xD2ECC4", Offset = "0xD2ECC4", VA = "0xD2ECC4")]
	private void initEncoder()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xD2F054", Offset = "0xD2F054", VA = "0xD2F054")]
	private void initDecoder()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xD2F100", Offset = "0xD2F100", VA = "0xD2F100")]
	public void initEncode(bool sessionStart)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xD2F10C", Offset = "0xD2F10C", VA = "0xD2F10C")]
	public void initDecode(bool sessionStart)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xD2F14C", Offset = "0xD2F14C", VA = "0xD2F14C")]
	public void compressVoice(byte[] compressedAudio, uint compressedAudioSize, out uint numBytesWrittenCompressed, byte[] uncompressedAudio, uint uncompressedAudioSize, out uint numBytesUnreadUncompressed)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xD2F338", Offset = "0xD2F338", VA = "0xD2F338")]
	public void decompressVoice(byte[] compressedAudio, uint compressedAudioSize, byte[] uncompressedAudio, uint uncompressedAudioSize, out uint numBytesWrittenUncompressed)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xD2F960", Offset = "0xD2F960", VA = "0xD2F960")]
	private void copyUncompressedData(byte[] uncompressedAudio, uint uncompressedAudioSize, int numSamplesDecoded, ref uint numBytesWrittenUncompressed, ref bool dstBuffersAreFull)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xD2FA40", Offset = "0xD2FA40", VA = "0xD2FA40")]
	public Voice()
	{
	}
}
[Token(Token = "0x20000B3")]
public class VolumeControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B4")]
	public struct GroupParams
	{
		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioMixer mixer;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string mixerParam;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useEffectGroup;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Default volume is only used if not using effect group")]
		[Range(0f, 1f)]
		public float defaultVolume;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float curVolume;

		[NonSerialized]
		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gain;
	}

	[Token(Token = "0x20000B5")]
	public enum Group
	{
		[Token(Token = "0x4000503")]
		Music,
		[Token(Token = "0x4000504")]
		SoundEffects,
		[Token(Token = "0x4000505")]
		VoiceChat
	}

	[Serializable]
	[Token(Token = "0x20000B6")]
	public class GroupMixerGroupPair
	{
		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Group group;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xD30BE8", Offset = "0xD30BE8", VA = "0xD30BE8")]
		public GroupMixerGroupPair()
		{
		}
	}

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GroupParams music;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GroupParams soundEffects;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GroupParams voiceChat;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ToggleSwitch mikeSwitch;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConcurrentDictionary<Group, float> _curAmplitudes;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _mikeOn;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _announcerOn;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _waitingForUserPermission;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VolumeControl inst;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GroupMixerGroupPair[] mixerGroupMap;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _lastVoicePitch;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xD2FBD4", Offset = "0xD2FBD4", VA = "0xD2FBD4")]
	private GroupParams getParams(Group group)
	{
		return default(GroupParams);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xD2FCC4", Offset = "0xD2FCC4", VA = "0xD2FCC4")]
	private string getKey(Group group)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xD2FE3C", Offset = "0xD2FE3C", VA = "0xD2FE3C")]
	public void setVolume(Group group, float amplitude, bool saveChange = true)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xD301D0", Offset = "0xD301D0", VA = "0xD301D0")]
	public float getDefualtVolume(Group group)
	{
		return default(float);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xD2E320", Offset = "0xD2E320", VA = "0xD2E320")]
	public static Group? GroupOfMixerGroup(AudioMixerGroup mixerGroup)
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xD301F8", Offset = "0xD301F8", VA = "0xD301F8")]
	public float getVolume(Group group)
	{
		return default(float);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xD302F0", Offset = "0xD302F0", VA = "0xD302F0")]
	public void setMikeOn(bool mikeOn, bool saveChange = true)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xD30488", Offset = "0xD30488", VA = "0xD30488")]
	public bool getMikeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xD30490", Offset = "0xD30490", VA = "0xD30490")]
	private void requestPermission()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xD30510", Offset = "0xD30510", VA = "0xD30510")]
	private void onPermissionResult(bool granted)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xD3065C", Offset = "0xD3065C", VA = "0xD3065C")]
	private void noLongerWaitingForUser()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xD30664", Offset = "0xD30664", VA = "0xD30664")]
	private void onPermissionGranted()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xD30670", Offset = "0xD30670", VA = "0xD30670")]
	public void setAnnouncerOn(bool announcerOn, bool saveChange = true)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xD30704", Offset = "0xD30704", VA = "0xD30704")]
	public bool getAnnouncerOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xD3070C", Offset = "0xD3070C", VA = "0xD3070C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xD3097C", Offset = "0xD3097C", VA = "0xD3097C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xD309AC", Offset = "0xD309AC", VA = "0xD309AC")]
	public void SetVoicePitch(float pitch)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xD307D8", Offset = "0xD307D8", VA = "0xD307D8")]
	private void initGroups()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xD30980", Offset = "0xD30980", VA = "0xD30980")]
	private void loadVolumes()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xD30A94", Offset = "0xD30A94", VA = "0xD30A94")]
	private void loadVolume(Group group)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xD301AC", Offset = "0xD301AC", VA = "0xD301AC")]
	private void saveVolume(Group group, float amplitude)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xD300BC", Offset = "0xD300BC", VA = "0xD300BC")]
	private float linearToDecibel(float amplitude)
	{
		return default(float);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xD30B4C", Offset = "0xD30B4C", VA = "0xD30B4C")]
	private float decibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xD30830", Offset = "0xD30830", VA = "0xD30830")]
	public void loadMikeOn()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xD30414", Offset = "0xD30414", VA = "0xD30414")]
	private void saveMikeOn()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xD308D4", Offset = "0xD308D4", VA = "0xD308D4")]
	private void loadAnnouncerOn()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xD30690", Offset = "0xD30690", VA = "0xD30690")]
	private void saveAnnouncerOn()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xD30BD0", Offset = "0xD30BD0", VA = "0xD30BD0")]
	public VolumeControl()
	{
	}
}
[Token(Token = "0x20000B8")]
public class BallBlendedMaterial : MonoBehaviour
{
	[Token(Token = "0x20000B9")]
	public enum BallVisualMode
	{
		[Token(Token = "0x400050E")]
		Idle,
		[Token(Token = "0x400050F")]
		Plow,
		[Token(Token = "0x4000510")]
		Ice,
		[Token(Token = "0x4000511")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20000BA")]
	public struct BallBlendedMaterialData
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material normal;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material plow;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material ice;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material disabled;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xD30D20", Offset = "0xD30D20", VA = "0xD30D20")]
		public bool ControlsMaterial(Material m)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xD30E2C", Offset = "0xD30E2C", VA = "0xD30E2C")]
		public Material GetMaterialByMode(BallVisualMode mode)
		{
			return null;
		}
	}

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setBallVel;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BallBlendedMaterialData P1;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BallBlendedMaterialData P2;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Material materialInstance;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xD30C60", Offset = "0xD30C60", VA = "0xD30C60")]
	public void FirstTimeSetup()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xD30CE0", Offset = "0xD30CE0", VA = "0xD30CE0")]
	public bool ControlsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xD30E18", Offset = "0xD30E18", VA = "0xD30E18")]
	public Material GetMaterialByMode(BallVisualMode mode, bool player2 = false)
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD30F3C", Offset = "0xD30F3C", VA = "0xD30F3C")]
	public BallBlendedMaterial()
	{
	}
}
[Token(Token = "0x20000BB")]
public class BallTrail : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _posHistory;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ball _ball;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _historyLen;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _lineWidth;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color _startColor;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color _endColor;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _minTimeStep;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _passedTime;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _lastUsedIndex;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _lastUsedAlpha;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _perlinScale;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD30F44", Offset = "0xD30F44", VA = "0xD30F44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD30FF8", Offset = "0xD30FF8", VA = "0xD30FF8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xD3112C", Offset = "0xD3112C", VA = "0xD3112C")]
	public void ApplyParams_Editor(float trailApproxStrength)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xD31228", Offset = "0xD31228", VA = "0xD31228")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xD31C68", Offset = "0xD31C68", VA = "0xD31C68")]
	public BallTrail()
	{
	}
}
[Token(Token = "0x20000BC")]
public class BallVisualBlender : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light _ballLight;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ball _myBall;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _chargeAmount;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _chargeAmountVel;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _powerShotAmount;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _powerShotAmountVel;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _offAmount;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _offAmountVel;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject materialsSetupRoot;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BallBlendedMaterial[] _materialBlenders;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation _animation;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Ball Velocity Effects")]
	public Transform _ballVelocityReferenceTransform;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _plowingMinVelScale;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _plowingMaxVelScale;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _smoothBallVelocityDuration;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer[] showOnlyWhenCloseToPlayer;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Wrecking Ball")]
	public GameObject wreckingBallRoot;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material wreckingBallP1Material;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material wreckingBallP2Material;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<MeshRenderer> wreckingBallMeshRenderers;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _smoothBallVel;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 _smoothBallVel_Vel;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _ballVelParamShaderID;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _ballPlowingShaderID;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _ballPositionID;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _ballColorID;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _lastAnimationValue;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xD31C88", Offset = "0xD31C88", VA = "0xD31C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xD31D80", Offset = "0xD31D80", VA = "0xD31D80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD32584", Offset = "0xD32584", VA = "0xD32584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD32720", Offset = "0xD32720", VA = "0xD32720")]
	private void SampleAnimation(float value)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD31DA0", Offset = "0xD31DA0", VA = "0xD31DA0")]
	private void FirstTimeSetup()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xD3234C", Offset = "0xD3234C", VA = "0xD3234C")]
	public void setupVisualMode_Editor(BallBlendedMaterial.BallVisualMode mode, bool isPlayer2)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xD327A4", Offset = "0xD327A4", VA = "0xD327A4")]
	private void blendVisuals(bool isPlayer2 = false)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xD33358", Offset = "0xD33358", VA = "0xD33358")]
	private void updateShowOnlyWhenCloseToPlayer()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xD32594", Offset = "0xD32594", VA = "0xD32594")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xD33610", Offset = "0xD33610", VA = "0xD33610")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xD3342C", Offset = "0xD3342C", VA = "0xD3342C")]
	private void UpdateWreckingBall(bool isBlueBall)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xD337DC", Offset = "0xD337DC", VA = "0xD337DC")]
	public BallVisualBlender()
	{
	}
}
[Token(Token = "0x20000BD")]
public class Ball : MonoBehaviour
{
	[Token(Token = "0x20000BE")]
	private struct Plow
	{
		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool active;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 up;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timer;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 additionalPotential;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float planck;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float initSpeed;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pos;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 smoothPos;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 smoothPosVelocity;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 planeNormal;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 lastRayOrigin;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float numBumpersHit;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float currentSpeed;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speedFactor;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool canHitSameBrickAgain;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int postBlasterCount;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int currentHextrudeLayer;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int lowestHextrudeLayer;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 rotatingVelocity;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 rotatingForce;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool wasPulledOnStart;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlowableSurface _currentPlowableSurface;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider _lastCollider;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Quaternion ROTATE_90_AROUND_Y;

		[Token(Token = "0x40005C5")]
		public const float DIST_FROM_COLLIDER = 0.1f;

		[Token(Token = "0x40005C6")]
		public const float DIR_BY_VELOCITY_ANGLE_MIN = 20f;

		[Token(Token = "0x40005C7")]
		public const float DIR_BY_VELOCITY_ANGLE_MAX = 70f;

		[Token(Token = "0x40005C8")]
		public const float SMOOTH_TIME = 0.02f;

		[Token(Token = "0x170000FA")]
		public PlowableSurface currentPlowableSurface
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0xDFBAC0", Offset = "0xDFBAC0", VA = "0xDFBAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public Collider lastCollider
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0xDFBAC8", Offset = "0xDFBAC8", VA = "0xDFBAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000583")]
			[Address(RVA = "0xDFBAD0", Offset = "0xDFBAD0", VA = "0xDFBAD0")]
			set
			{
			}
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xDFBBD0", Offset = "0xDFBBD0", VA = "0xDFBBD0")]
		public void start()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000BF")]
	public class Dbg
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minForwardVelocity;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxForwardVelocity;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode randomVelocityKeyCode;

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xDFBC50", Offset = "0xDFBC50", VA = "0xDFBC50")]
		public Dbg()
		{
		}
	}

	[Token(Token = "0x20000C0")]
	public class BallCollision
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 contactPoint;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball ball;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 impactVelocity;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float impactStrength;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xDFBC6C", Offset = "0xDFBC6C", VA = "0xDFBC6C")]
		public BallCollision()
		{
		}
	}

	[Token(Token = "0x20000C1")]
	[CompilerGenerated]
	private sealed class <DelayCollisionCo>d__182 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxRadius;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDist;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeDelay;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <lastPos>5__2;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <dist>5__3;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timer>5__4;

		[Token(Token = "0x170000FC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xDFBF34", Offset = "0xDFBF34", VA = "0xDFBF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xDFBF7C", Offset = "0xDFBF7C", VA = "0xDFBF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xDFBC74", Offset = "0xDFBC74", VA = "0xDFBC74")]
		[DebuggerHidden]
		public <DelayCollisionCo>d__182(int <>1__state)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xDFBC9C", Offset = "0xDFBC9C", VA = "0xDFBC9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xDFBCA0", Offset = "0xDFBCA0", VA = "0xDFBCA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xDFBF3C", Offset = "0xDFBF3C", VA = "0xDFBF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C2")]
	[CompilerGenerated]
	private sealed class <TimerSoundCo>d__221 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <interval>5__2;

		[Token(Token = "0x170000FE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xDFC2B8", Offset = "0xDFC2B8", VA = "0xDFC2B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xDFC300", Offset = "0xDFC300", VA = "0xDFC300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xDFBFD8", Offset = "0xDFBFD8", VA = "0xDFBFD8")]
		[DebuggerHidden]
		public <TimerSoundCo>d__221(int <>1__state)
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xDFC000", Offset = "0xDFC000", VA = "0xDFC000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xDFC004", Offset = "0xDFC004", VA = "0xDFC004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xDFC2C0", Offset = "0xDFC2C0", VA = "0xDFC2C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <enterPortalCo>d__251 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Portal portal;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeInPortal>5__2;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <portalDuration>5__3;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <portalPos>5__4;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <portalDir>5__5;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Line <portalLine>5__6;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <forwardStregth>5__7;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <centricStrength>5__8;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <angularStrength>5__9;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <baseDrag>5__10;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <antiFleeDrag>5__11;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <dt>5__12;

		[Token(Token = "0x17000100")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xDFD2C8", Offset = "0xDFD2C8", VA = "0xDFD2C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xDFD310", Offset = "0xDFD310", VA = "0xDFD310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xDFC35C", Offset = "0xDFC35C", VA = "0xDFC35C")]
		[DebuggerHidden]
		public <enterPortalCo>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xDFC384", Offset = "0xDFC384", VA = "0xDFC384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xDFC388", Offset = "0xDFC388", VA = "0xDFC388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xDFD2D0", Offset = "0xDFD2D0", VA = "0xDFD2D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	[CompilerGenerated]
	private sealed class <exitPortalCo>d__253 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Portal portal;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball <>4__this;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <exitPortalPosition>5__2;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <exitVelocity>5__3;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <enterPortalSide>5__4;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <enterPortalUp>5__5;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform <enterBall>5__6;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Line <enterPortalLine>5__7;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Bezier.BezierSegment <segment>5__8;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <dt>5__9;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float <timeInPortal>5__10;

		[Token(Token = "0x17000102")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0xDFE1C0", Offset = "0xDFE1C0", VA = "0xDFE1C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0xDFE208", Offset = "0xDFE208", VA = "0xDFE208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xDFD36C", Offset = "0xDFD36C", VA = "0xDFD36C")]
		[DebuggerHidden]
		public <exitPortalCo>d__253(int <>1__state)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xDFD394", Offset = "0xDFD394", VA = "0xDFD394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xDFD398", Offset = "0xDFD398", VA = "0xDFD398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xDFE1C8", Offset = "0xDFE1C8", VA = "0xDFE1C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Plow _plow;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _keyboardShot_setPlowDirection;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector2 _keyboardShot_initMousePos;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _debugPlowAngle;

	[Token(Token = "0x4000544")]
	private const float MAX_ANGLE_FROM_WALL_NORMAL = 60f;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Dbg debug;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool useGravity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform player;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 spawnOffset;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Ball current;

	[NonSerialized]
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float _radius;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float minPitch;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float maxPitch;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 startingLocalScale;

	[NonSerialized]
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BallTrail[] _ballTrails;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ShotInfo _currentShot;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _hangingInMidAir;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _hangingInMidAirTimer;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _enteringPortal;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool _exitingPortal;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _racketLayerMask;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform _racketCollider;

	[Token(Token = "0x4000558")]
	private const int HISTORY_SIZE = 5;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private CyclicBuffer<Matrix4x4> _racketTransformHistory;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private CyclicBuffer<Vector3> _ballPositionHistory;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _pullRailParam;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PullRail _pullRail;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _pullRailExitSoundPlayed;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool _goToPositionMode;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _goToPositionRailParam;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _goToPositionCurveSpeed;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float _goToPositionSpringK;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float _goToPositionSpringD;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float _goToPositionCurveExtraDamp;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BezierCurve _goToPositionCurve;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 _goToPosition;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool _isPowerShot;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _powerShotPower;

	[NonSerialized]
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Rigidbody _rigidBody;

	[NonSerialized]
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public SphereCollider _collider;

	[NonSerialized]
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public BallSwitchEffect _switchEffect;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 _lastPos;

	[NonSerialized]
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Vector3 _velocity;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float _maxAngularVelocity;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float _bounceAngularVelocityAbsorbed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float _bounceAngularVelocityTranslatedToVelocity;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float _timeSinceLastRacketCollision;

	[NonSerialized]
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool _lastHitWasRacket;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float _averageTimeBetweenRacketHits;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private int _numRacketHitsInAverage;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool _silenced;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Camera _camera;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private GameObject _collidedGameObject;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 _contactPointPoint;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector3 _contactPointNormal;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool _hitRacket;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool _hitBrick;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private HexTrudeManager.Arc _collidedSideWall;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Brick _collidedBrick;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Target _collidedBrickTarget;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Vector3 _impactSelfVelocity;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private Vector3 _impactVelocity;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Mobile _colliderMobile;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _needToStartTrailSession;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private Vector3 _preBounceVelocity;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float _ballImpactFactor;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private bool _ballImpactFadingOut;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float _ballImpactFactorVel;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float _ballImpactFactorTime;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool _hitRacketSinceTookControl_MP;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool _missedSinceTookControl_MP;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	private bool _inPlayArea_MP;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
	private bool _outgoingBall_MP;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject _RightRacket;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject iccicle;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Header("Fix Dardale")]
	public float _fixDardaleMaxDist;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float _fixDardalePower;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float _timeAlive;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private LayerMask _plowLayerMask;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private PlayerID _trailPlayerID;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private TrailMaker.TrailType _trailType;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float _timeSinceLastRespawn;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float _timeSinceFixDardaleStarted;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private CoroutineHandle? _delayedCollisionCo;

	[Token(Token = "0x4000598")]
	private const float _SKIP_RACKET_COLLISION_DIST_SQ = 4f;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int _newPosesCounter;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool _timerSoundPlaying;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private CoroutineHandle _timerSoundCo;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private int _prevMPState;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private readonly BallCollision _collisionInfo;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private string _coroutinesTag;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Vector3 _lastMousePoint;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private Vector3 _lastMouseDir;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Vector3 effectiveVelocityReadOnly;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private Vector3 _lastValidPos;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private Vector3 _lastValidVel;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private int _stayFramesCount;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool _ignoreOnCollisionStay;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	public bool returnBallToPlayerOnNextCollision;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private int _pullingBallIntoFloorCounter;

	[Token(Token = "0x40005AB")]
	private const int MAX_PULLING_BALL_INTO_FLOOR = 10;

	[Token(Token = "0x170000DF")]
	public bool plowing
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xD332C8", Offset = "0xD332C8", VA = "0xD332C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E0")]
	public float plowRemainingTimer
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xD332D0", Offset = "0xD332D0", VA = "0xD332D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E1")]
	public Vector3 plowTargetNormal
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xD33AEC", Offset = "0xD33AEC", VA = "0xD33AEC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E2")]
	public Vector3 plowVelocity
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xD33AF8", Offset = "0xD33AF8", VA = "0xD33AF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E3")]
	public Collider plowLastCollider
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xD33B04", Offset = "0xD33B04", VA = "0xD33B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E4")]
	public SpatializedAudio _ballLoopAudio
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0xD3995C", Offset = "0xD3995C", VA = "0xD3995C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xD39964", Offset = "0xD39964", VA = "0xD39964")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public SpatializedAudio _plowLoopAudio
	{
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xD39974", Offset = "0xD39974", VA = "0xD39974")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600050F")]
		[Address(RVA = "0xD3997C", Offset = "0xD3997C", VA = "0xD3997C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public float gravityCoeff
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xD3998C", Offset = "0xD3998C", VA = "0xD3998C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E7")]
	public byte damage
	{
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xD39A34", Offset = "0xD39A34", VA = "0xD39A34")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000E8")]
	public ShotInfo currentShot
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0xD39A9C", Offset = "0xD39A9C", VA = "0xD39A9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000513")]
		[Address(RVA = "0xD36370", Offset = "0xD36370", VA = "0xD36370")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public bool exitingPortal
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xD39BC4", Offset = "0xD39BC4", VA = "0xD39BC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EA")]
	public float PullRailParam
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0xD39BCC", Offset = "0xD39BCC", VA = "0xD39BCC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EB")]
	public bool isInPullRail
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xD39BD4", Offset = "0xD39BD4", VA = "0xD39BD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EC")]
	public bool isCharged
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xD33344", Offset = "0xD33344", VA = "0xD33344")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	public int chargeCounter
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xD39C34", Offset = "0xD39C34", VA = "0xD39C34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EE")]
	public bool isPowerShot
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xD39C4C", Offset = "0xD39C4C", VA = "0xD39C4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xD35E9C", Offset = "0xD35E9C", VA = "0xD35E9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public float powerShotPower
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xD39C54", Offset = "0xD39C54", VA = "0xD39C54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F0")]
	public Vector3 normalizedVelocity
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xD39C5C", Offset = "0xD39C5C", VA = "0xD39C5C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F1")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xD39CE8", Offset = "0xD39CE8", VA = "0xD39CE8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F2")]
	public float visibilityParam
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xD39CF8", Offset = "0xD39CF8", VA = "0xD39CF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F3")]
	public Target collidedBrickTarget
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xD39E64", Offset = "0xD39E64", VA = "0xD39E64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F4")]
	public Vector3 preBounceVelocity
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xD39E6C", Offset = "0xD39E6C", VA = "0xD39E6C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F5")]
	public Vector3 position
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0xD39E7C", Offset = "0xD39E7C", VA = "0xD39E7C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F6")]
	public bool isBlueBall
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0xD333CC", Offset = "0xD333CC", VA = "0xD333CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F7")]
	public Player ControllingPlayer
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xD33708", Offset = "0xD33708", VA = "0xD33708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public bool ShotClockPassed
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xD3B31C", Offset = "0xD3B31C", VA = "0xD3B31C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F9")]
	public float ShotClockTime
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xD3EEE4", Offset = "0xD3EEE4", VA = "0xD3EEE4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xD3EEEC", Offset = "0xD3EEEC", VA = "0xD3EEEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event Action plowStart
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xD33804", Offset = "0xD33804", VA = "0xD33804")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xD338BC", Offset = "0xD338BC", VA = "0xD338BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event Action plowEnd
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xD33974", Offset = "0xD33974", VA = "0xD33974")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xD33A30", Offset = "0xD33A30", VA = "0xD33A30")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action<Ball> onBallTakeOwnership
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xD3F220", Offset = "0xD3F220", VA = "0xD3F220")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xD3F2F0", Offset = "0xD3F2F0", VA = "0xD3F2F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<Ball> onBallGiveOwnership
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xD3F740", Offset = "0xD3F740", VA = "0xD3F740")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xD3F810", Offset = "0xD3F810", VA = "0xD3F810")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD33B0C", Offset = "0xD33B0C", VA = "0xD33B0C")]
	private void startPlowing(bool remoteUpdate = false)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xD347DC", Offset = "0xD347DC", VA = "0xD347DC")]
	private void debugPlowDirection()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xD351A8", Offset = "0xD351A8", VA = "0xD351A8")]
	private void updatePlowDirectionForNewTarget()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD354E0", Offset = "0xD354E0", VA = "0xD354E0")]
	public void stopPlowing(bool ballReturnToPlayer, bool canGiveOwnership = true, bool returnBallDirectlyToHand = false, bool remoteUpdate = false)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD363B8", Offset = "0xD363B8", VA = "0xD363B8")]
	public void slide()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD3580C", Offset = "0xD3580C", VA = "0xD3580C")]
	private void plowHitBrick(Brick brick)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD36BAC", Offset = "0xD36BAC", VA = "0xD36BAC")]
	public float GetPlowPitchBoost()
	{
		return default(float);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD36BD0", Offset = "0xD36BD0", VA = "0xD36BD0")]
	private void blastHitToNeighbor(HexTrudeManager.Arc arc)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xD36E30", Offset = "0xD36E30", VA = "0xD36E30")]
	private bool handleCollideWithSideWall(Vector3 pos, bool directHit = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xD37AB8", Offset = "0xD37AB8", VA = "0xD37AB8")]
	private void applyForceOnPlow()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xD37D88", Offset = "0xD37D88", VA = "0xD37D88")]
	private void updatePlowRotation(float dt)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD38200", Offset = "0xD38200", VA = "0xD38200")]
	private bool plowRaycast(float dt, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xD38450", Offset = "0xD38450", VA = "0xD38450")]
	private void plowStep(float dt)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xD395D0", Offset = "0xD395D0", VA = "0xD395D0")]
	private void plowUpdate()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xD39AA4", Offset = "0xD39AA4", VA = "0xD39AA4")]
	public void updateTrailName(bool forced = false)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xD39E98", Offset = "0xD39E98", VA = "0xD39E98")]
	public void Rotate(Quaternion rot)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xD3A17C", Offset = "0xD3A17C", VA = "0xD3A17C")]
	public void ResetTrails()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xD31C48", Offset = "0xD31C48", VA = "0xD31C48")]
	public bool IsDuringPortal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xD3A0E8", Offset = "0xD3A0E8", VA = "0xD3A0E8")]
	public bool IsInControlledMotion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xD3A1D8", Offset = "0xD3A1D8", VA = "0xD3A1D8")]
	public void LeavePullRail()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xD3A2C4", Offset = "0xD3A2C4", VA = "0xD3A2C4")]
	private void push(Vector3 dir)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xD332AC", Offset = "0xD332AC", VA = "0xD332AC")]
	public float GetImpactFactor()
	{
		return default(float);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xD34B20", Offset = "0xD34B20", VA = "0xD34B20")]
	private void CheckOutOfBounds(bool forPlowing = false)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xD3A3D4", Offset = "0xD3A3D4", VA = "0xD3A3D4")]
	private void keyboardShortcuts()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xD3A968", Offset = "0xD3A968", VA = "0xD3A968")]
	public void limitVelocity(float max)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xD3ABE8", Offset = "0xD3ABE8", VA = "0xD3ABE8")]
	private void updatePitch()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xD3ADD4", Offset = "0xD3ADD4", VA = "0xD3ADD4")]
	private void FixDardale()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xD354CC", Offset = "0xD354CC", VA = "0xD354CC")]
	public void setImpactFactor(float factor, bool withFadeOut = false)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xD362AC", Offset = "0xD362AC", VA = "0xD362AC")]
	private void startImpactFadeOut(float overrideImpactFactor = -1f)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xD35EBC", Offset = "0xD35EBC", VA = "0xD35EBC")]
	public void returnBallToPlayer(bool willTransferOwnershipInMultiplayer = false, bool forceReturn = false, bool portalReturn = false, bool returnBallDirectlyToHand = false)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xD3B3A8", Offset = "0xD3B3A8", VA = "0xD3B3A8")]
	private void StopDelayedCollision()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xD36198", Offset = "0xD36198", VA = "0xD36198")]
	private void DelayCollision(float minDist = -1f, float maxRadius = 10f, float timeDelay = 0.2f)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xD3B448", Offset = "0xD3B448", VA = "0xD3B448")]
	[IteratorStateMachine(typeof(<DelayCollisionCo>d__182))]
	private IEnumerator<float> DelayCollisionCo(float minDist, float maxRadius, float timeDelay)
	{
		return null;
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xD3B4E0", Offset = "0xD3B4E0", VA = "0xD3B4E0")]
	private void SetColliderState(bool enabled)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xD3B514", Offset = "0xD3B514", VA = "0xD3B514")]
	public void DeterminePowershot(float ballSpeed)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xD3BA20", Offset = "0xD3BA20", VA = "0xD3BA20")]
	private void bounceFromPlane(Vector3 PlaneNormal, Vector3 PlanePoint, float fBounciness = 1f, [Optional] Vector3 PlaneVelocity)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xD3BB78", Offset = "0xD3BB78", VA = "0xD3BB78")]
	private void bounceBack(bool bCollisionStay = false)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xD3BD84", Offset = "0xD3BD84", VA = "0xD3BD84")]
	public void PlayWallHitSound(bool bSendToRemote = true)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xD3C07C", Offset = "0xD3C07C", VA = "0xD3C07C")]
	private void postBounceResponse_Static()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xD3C384", Offset = "0xD3C384", VA = "0xD3C384")]
	public void enterPullRail(PullRail p)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xD3C51C", Offset = "0xD3C51C", VA = "0xD3C51C")]
	private void racketCollisionData(RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xD3C638", Offset = "0xD3C638", VA = "0xD3C638")]
	private void onNewPoseApplied()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xD3C648", Offset = "0xD3C648", VA = "0xD3C648")]
	private void racketCollisionTest()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xD3D840", Offset = "0xD3D840", VA = "0xD3D840")]
	private void onHandsSwitched()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xD3D034", Offset = "0xD3D034", VA = "0xD3D034")]
	private void newRacketBallImpactStuff(Vector3 racketForward, bool foreHandShot)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xD3D8B4", Offset = "0xD3D8B4", VA = "0xD3D8B4")]
	public void doHitByRacketStuff(Player hittingPlayer, bool foreHandShot = true, [Optional] Vector3? normalizedVelocityOverride)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xD3DD48", Offset = "0xD3DD48", VA = "0xD3DD48")]
	public Ball instantiate()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xD3DEF0", Offset = "0xD3DEF0", VA = "0xD3DEF0")]
	public void FirstTimeInit()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xD3DD7C", Offset = "0xD3DD7C", VA = "0xD3DD7C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xD3E2B8", Offset = "0xD3E2B8", VA = "0xD3E2B8")]
	private void free()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xD3E338", Offset = "0xD3E338", VA = "0xD3E338")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xD3E35C", Offset = "0xD3E35C", VA = "0xD3E35C")]
	public Vector3 getRespawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xD3A87C", Offset = "0xD3A87C", VA = "0xD3A87C")]
	public void respawn(bool shouldReset = true)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xD3E580", Offset = "0xD3E580", VA = "0xD3E580")]
	public void respawn(Vector3 pos, bool newSession = true, bool shouldReset = true)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xD3E740", Offset = "0xD3E740", VA = "0xD3E740")]
	private void GetSpawnPosAndForward(out Vector3 pos, out Vector3 forward)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xD3A8A8", Offset = "0xD3A8A8", VA = "0xD3A8A8")]
	private void respawnAndPushForward(float powerShotScale = 1f, bool foreHand = true)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xD3E82C", Offset = "0xD3E82C", VA = "0xD3E82C")]
	public void respawnAndPush(Player player, Vector3 pos, Vector3 dir, [Optional] Vector3? plowDirOverride, float powerShotScale = 1f, bool foreHand = true)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xD3E254", Offset = "0xD3E254", VA = "0xD3E254")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xD3EEF4", Offset = "0xD3EEF4", VA = "0xD3EEF4")]
	private void OnFloaterTaken(Player p)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xD3EFB0", Offset = "0xD3EFB0", VA = "0xD3EFB0")]
	private void UpdateShotTime()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xD3F07C", Offset = "0xD3F07C", VA = "0xD3F07C")]
	private void PlayTimerSound()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xD3F100", Offset = "0xD3F100", VA = "0xD3F100")]
	[IteratorStateMachine(typeof(<TimerSoundCo>d__221))]
	private IEnumerator<float> TimerSoundCo()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xD3F174", Offset = "0xD3F174", VA = "0xD3F174")]
	private bool MuteShotClock()
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xD3F3C0", Offset = "0xD3F3C0", VA = "0xD3F3C0")]
	public void TakeOwnership_Multiplayer()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xD3F8E0", Offset = "0xD3F8E0", VA = "0xD3F8E0")]
	public void GiveOwnership_Multiplayer()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xD3FB18", Offset = "0xD3FB18", VA = "0xD3FB18")]
	public void SetVelocities_Multiplayer(Vector3 vel, Vector3 angularVel)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xD3FE48", Offset = "0xD3FE48", VA = "0xD3FE48")]
	public void SetState_Multiplayer(int state, Vector3 auxV1, Vector3 auxV2)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xD40104", Offset = "0xD40104", VA = "0xD40104")]
	private void FixedUpdate_MP()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xD404D0", Offset = "0xD404D0", VA = "0xD404D0")]
	public void contactStayResponse_Racket()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xD407C4", Offset = "0xD407C4", VA = "0xD407C4")]
	private void contactResponse_PushAway()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xD40854", Offset = "0xD40854", VA = "0xD40854")]
	private void WreckingBall_hitCloseByBricks()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xD40C64", Offset = "0xD40C64", VA = "0xD40C64")]
	public void contactResponse_Standard()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xD40EC8", Offset = "0xD40EC8", VA = "0xD40EC8")]
	public void contactResponse_SideWall()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xD36A34", Offset = "0xD36A34", VA = "0xD36A34")]
	public void contactResponse_Brick()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xD41114", Offset = "0xD41114", VA = "0xD41114")]
	private void initCollisionData(Collision collision)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xD36D18", Offset = "0xD36D18", VA = "0xD36D18")]
	private void initCollisionData(Brick brick, Vector3 point)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xD37880", Offset = "0xD37880", VA = "0xD37880")]
	private void initCollisionData(RaycastHit hit, Brick brick, Collider collider, bool obtainSideWall = false)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xD3652C", Offset = "0xD3652C", VA = "0xD3652C")]
	private void calcImpactVelocity()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xD36798", Offset = "0xD36798", VA = "0xD36798")]
	private void broadcastCollision()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xD41400", Offset = "0xD41400", VA = "0xD41400")]
	public void enterPortal(Portal portal)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD413A0", Offset = "0xD413A0", VA = "0xD413A0")]
	private void fixPortalEntryCourse()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xD415F0", Offset = "0xD415F0", VA = "0xD415F0")]
	[IteratorStateMachine(typeof(<enterPortalCo>d__251))]
	private IEnumerator<float> enterPortalCo(Portal portal)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xD41680", Offset = "0xD41680", VA = "0xD41680")]
	public void exitPortal(Portal portal)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xD417DC", Offset = "0xD417DC", VA = "0xD417DC")]
	[IteratorStateMachine(typeof(<exitPortalCo>d__253))]
	private IEnumerator<float> exitPortalCo(Portal portal)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xD4186C", Offset = "0xD4186C", VA = "0xD4186C")]
	public void GoToLocation(Vector3 targetPos, float springK = 250f, float springD = 5f)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xD418B8", Offset = "0xD418B8", VA = "0xD418B8")]
	public void GoToPositionCurve(BezierCurve targetCurve, float pathSpeed = 1f, float springK = 250f, float springD = 5f, float endOfCurveExtraDamp = 50f)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xD4198C", Offset = "0xD4198C", VA = "0xD4198C")]
	public void StopGoToLocation()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xD419A4", Offset = "0xD419A4", VA = "0xD419A4")]
	public bool IsInGoToLocationMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xD419AC", Offset = "0xD419AC", VA = "0xD419AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xD419B0", Offset = "0xD419B0", VA = "0xD419B0")]
	private void UpdateImpactFactor()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xD41A94", Offset = "0xD41A94", VA = "0xD41A94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xD420FC", Offset = "0xD420FC", VA = "0xD420FC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xD3FD90", Offset = "0xD3FD90", VA = "0xD3FD90")]
	private bool isInvalid(Vector3 v)
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xD42FEC", Offset = "0xD42FEC", VA = "0xD42FEC")]
	private void fixNanBall()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xD430A0", Offset = "0xD430A0", VA = "0xD430A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xD43150", Offset = "0xD43150", VA = "0xD43150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xD4334C", Offset = "0xD4334C", VA = "0xD4334C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xD43660", Offset = "0xD43660", VA = "0xD43660")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xD43850", Offset = "0xD43850", VA = "0xD43850")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xD43F98", Offset = "0xD43F98", VA = "0xD43F98")]
	public Ball()
	{
	}
}
[Token(Token = "0x20000C5")]
public class GravitySling : MonoBehaviour
{
	[Token(Token = "0x20000C6")]
	private class Spring
	{
		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 inHandle;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 outHandle;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _weight;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _pos;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _velocity;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _initialized;

		[Token(Token = "0x17000105")]
		public Vector3 velocity
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xE00D1C", Offset = "0xE00D1C", VA = "0xE00D1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xE009FC", Offset = "0xE009FC", VA = "0xE009FC")]
		public Spring(float p)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xE005B0", Offset = "0xE005B0", VA = "0xE005B0")]
		public void reset()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xDFF3EC", Offset = "0xDFF3EC", VA = "0xDFF3EC")]
		public void updateHandles(Vector3 prevPos, Vector3 nextPos)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xDFF0B4", Offset = "0xDFF0B4", VA = "0xDFF0B4")]
		public void update(Vector3 target, float dt)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xDFECE0", Offset = "0xDFECE0", VA = "0xDFECE0")]
		public void Rotate(Quaternion rot, bool ignoreFOV)
		{
		}
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GravitySling inst;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Springs")]
	public int numSprings;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float springStrength;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float springDrag;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Line")]
	public int lengthSamples;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float drawSpeed;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ballVelocityFalloffDist;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ballVelocityMultiplier;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ballLastForceMultiplier;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float forwardTangentMultiplier;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Helix")]
	public int numPointsHelix;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float radius;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseScale;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseAmplitude;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float noiseFrequency;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float frequency;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float speed;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float squash;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float widthHelix;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxLength;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Header("Glow")]
	public int numPointsGlow;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float widthGlow;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	[Header("Tear")]
	public float tearGraceTimeMultiplier;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float tearGraceTime;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float tearDuration;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float tearAmplitude;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tearFrequency;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float tearSpeed;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Setup")]
	private LineRenderer lineHelix;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer lineGlow;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int curUsedLineRenderers;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LineRenderer[] lineHelixCache;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LineRenderer[] lineGlowCache;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material helixMaterialP1;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material helixMaterialP2;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material glowMaterialP1;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material glowMaterialP2;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Ball _ball;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform _racketCenter;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bezier.BezierSegment _segment;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Bezier.BezierSegment _springSegment;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Spring[] _springs;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _beginParam;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _endParam;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _radius;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _frequency;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _curDeltaTime;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _curUnscaledDeltaTime;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _curTime;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private PlayerID _playerID;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Player _player;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RacketSling _sling;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3[] _pointsHelix;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3[] _pointsGlow;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _on;

	[Token(Token = "0x17000104")]
	public bool isOn
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xDFE264", Offset = "0xDFE264", VA = "0xDFE264")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action<bool> onSlingBegin
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xE0010C", Offset = "0xE0010C", VA = "0xE0010C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xE001DC", Offset = "0xE001DC", VA = "0xE001DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xDFE26C", Offset = "0xDFE26C", VA = "0xDFE26C")]
	private static Vector3 noise(Vector3 v, float frequency, float amplitude)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xDFE2FC", Offset = "0xDFE2FC", VA = "0xDFE2FC")]
	private static Vector3 fractalNoise(float t, float frequency, float amplitude, int octaves = 3, float lacunarity = 2f, float gain = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xDFE3C0", Offset = "0xDFE3C0", VA = "0xDFE3C0")]
	private void updatePoints()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xDFEAF8", Offset = "0xDFEAF8", VA = "0xDFEAF8")]
	public void Rotate(Quaternion rot, bool ignoreFOV)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xDFEE8C", Offset = "0xDFEE8C", VA = "0xDFEE8C")]
	public Vector3 getBallSpringPull()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xDFEECC", Offset = "0xDFEECC", VA = "0xDFEECC")]
	private void updateSprings()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xDFF438", Offset = "0xDFF438", VA = "0xDFF438")]
	private Vector3 getSpringPos(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xDFF5C4", Offset = "0xDFF5C4", VA = "0xDFF5C4")]
	private void drawSling()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xDFFF30", Offset = "0xDFFF30", VA = "0xDFFF30")]
	private void updateEndParams()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xE002AC", Offset = "0xE002AC", VA = "0xE002AC")]
	public void begin(bool opponentBall = false, float graceTimeMult = 1f)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xE005B8", Offset = "0xE005B8", VA = "0xE005B8")]
	public void stop(bool opponentBall = false)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xE005F8", Offset = "0xE005F8", VA = "0xE005F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xE00A38", Offset = "0xE00A38", VA = "0xE00A38")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xE00C9C", Offset = "0xE00C9C", VA = "0xE00C9C")]
	public GravitySling()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TrailMaker : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	private struct HistoryPoint
	{
		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 velocity;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distFromPrevPoint;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 noisePosition;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float noiseStrength;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _noise;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _length;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _position;

		[Token(Token = "0x17000106")]
		public Vector3 position
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xE02008", Offset = "0xE02008", VA = "0xE02008")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0xE02014", Offset = "0xE02014", VA = "0xE02014")]
			set
			{
			}
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xE02028", Offset = "0xE02028", VA = "0xE02028")]
		private void calculateNoise()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xE02098", Offset = "0xE02098", VA = "0xE02098")]
		public void update(float dt)
		{
		}
	}

	[Token(Token = "0x20000C9")]
	private class Trail
	{
		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int index;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numPoints;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float length;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startParam;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endParam;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrailDef _trailDef;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer _line;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] _points;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _debugColor;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GradientColorKey[] _colorKeys;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GradientAlphaKey[] _alphaKeys;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Gradient _gradient;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color _glowColor;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer _glow;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _glowStrength;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _glowStrengthVelocity;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Ball _ball;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TrailSession _session;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _startSpeed;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _endSpeed;

		[Token(Token = "0x17000107")]
		public TrailDef trailDef
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xE020D4", Offset = "0xE020D4", VA = "0xE020D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0xE020DC", Offset = "0xE020DC", VA = "0xE020DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		private Color color
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xE02170", Offset = "0xE02170", VA = "0xE02170")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xE0222C", Offset = "0xE0222C", VA = "0xE0222C")]
		public void init(Ball ball, TrailSession session, TrailDef def)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xE02764", Offset = "0xE02764", VA = "0xE02764")]
		private void reset()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xE027E0", Offset = "0xE027E0", VA = "0xE027E0")]
		private void refreshGradient()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xE02818", Offset = "0xE02818", VA = "0xE02818")]
		public void update()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xE01BC4", Offset = "0xE01BC4", VA = "0xE01BC4")]
		public void updateEnd()
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xE02BC8", Offset = "0xE02BC8", VA = "0xE02BC8")]
		public void remove()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xE02CA4", Offset = "0xE02CA4", VA = "0xE02CA4")]
		public void glow()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xE02EE4", Offset = "0xE02EE4", VA = "0xE02EE4")]
		public void fadeStart(bool on)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xE02F20", Offset = "0xE02F20", VA = "0xE02F20")]
		public void fadeEnd(bool on)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xE02F58", Offset = "0xE02F58", VA = "0xE02F58")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xE00DD0", Offset = "0xE00DD0", VA = "0xE00DD0")]
		public Trail()
		{
		}
	}

	[Token(Token = "0x20000CA")]
	private class TrailSession
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentIndex;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HistoryPoint[] history;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trail currentTrail;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<Trail> _trails;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Trail _firstTrail;

		[Token(Token = "0x17000109")]
		public bool isFree
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xE03090", Offset = "0xE03090", VA = "0xE03090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xE030E0", Offset = "0xE030E0", VA = "0xE030E0")]
		public TrailSession(Ball ball)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xE03324", Offset = "0xE03324", VA = "0xE03324")]
		public void disconnect()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xE031D4", Offset = "0xE031D4", VA = "0xE031D4")]
		public void reset(Ball ball)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xE03330", Offset = "0xE03330", VA = "0xE03330")]
		public void addTrail(Ball ball, TrailDef def, bool crossFade = true)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xE034BC", Offset = "0xE034BC", VA = "0xE034BC")]
		public void updateHistory(Ball ball, float dt)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xE03CC4", Offset = "0xE03CC4", VA = "0xE03CC4")]
		public void updateTrails()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xE03F4C", Offset = "0xE03F4C", VA = "0xE03F4C")]
		public void drawGizmos()
		{
		}
	}

	[Token(Token = "0x20000CB")]
	private class BallTrailSessions
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Ball _ball;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TrailSession> _sessions;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrailSession current;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _trailAddedInThisFrame;

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xE01468", Offset = "0xE01468", VA = "0xE01468")]
		public BallTrailSessions(Ball ball)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xE010AC", Offset = "0xE010AC", VA = "0xE010AC")]
		public void pauseSession()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xE012C0", Offset = "0xE012C0", VA = "0xE012C0")]
		public void startSession()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xE015C8", Offset = "0xE015C8", VA = "0xE015C8")]
		public void stopSession()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xE016F0", Offset = "0xE016F0", VA = "0xE016F0")]
		public void addTrail(TrailDef def, bool crossFade = true)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xE01B10", Offset = "0xE01B10", VA = "0xE01B10")]
		public void update(float dt)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xE01E1C", Offset = "0xE01E1C", VA = "0xE01E1C")]
		public void drawGizmos()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	public enum TrailType
	{
		[Token(Token = "0x4000675")]
		Default,
		[Token(Token = "0x4000676")]
		Impact,
		[Token(Token = "0x4000677")]
		Frozen
	}

	[Serializable]
	[Token(Token = "0x20000CD")]
	public class TrailDef
	{
		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerID playerID;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TrailType type;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float noiseStrength;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float width;

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE01F00", Offset = "0xE01F00", VA = "0xE01F00")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xE040A4", Offset = "0xE040A4", VA = "0xE040A4")]
		public TrailDef()
		{
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrailMaker inst;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int historySize;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int crossFadeGap;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ballVisibilitySmoothTime;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float glowStrenght;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float glowDamp;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float breakTrailAngle;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minTrailLength;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailDef[] trailDefs;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Ball, BallTrailSessions> _trailsPerBall;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ball _ball;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _ballVisibility;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _ballVisibilityVelocity;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _dt;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _lineColorID;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _arenaRadiusID;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _ballVisibilityID;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Stack<Trail> _unusedTrails;

	[Token(Token = "0x400064C")]
	private const float EPSILON = 0.0001f;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeStep;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xE00D28", Offset = "0xE00D28", VA = "0xE00D28")]
	private Trail allocateTrail()
	{
		return null;
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xE00DE0", Offset = "0xE00DE0", VA = "0xE00DE0")]
	private void freeTrail(Trail trail)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xE00E38", Offset = "0xE00E38", VA = "0xE00E38")]
	private TrailDef getTrailDef(PlayerID playerID, TrailType type)
	{
		return null;
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xE00FF8", Offset = "0xE00FF8", VA = "0xE00FF8")]
	public void pauseSession(Ball ball)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xE010F0", Offset = "0xE010F0", VA = "0xE010F0")]
	public void startSession(Ball ball)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xE01514", Offset = "0xE01514", VA = "0xE01514")]
	public void stopSession(Ball ball)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xE0160C", Offset = "0xE0160C", VA = "0xE0160C")]
	public void addTrail(Ball ball, PlayerID playerID, TrailType type, bool crossFade = true)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xE01738", Offset = "0xE01738", VA = "0xE01738")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xE018B4", Offset = "0xE018B4", VA = "0xE018B4")]
	private void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xE01BFC", Offset = "0xE01BFC", VA = "0xE01BFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xE01C3C", Offset = "0xE01C3C", VA = "0xE01C3C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xE01CB8", Offset = "0xE01CB8", VA = "0xE01CB8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xE01EA4", Offset = "0xE01EA4", VA = "0xE01EA4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xE01FCC", Offset = "0xE01FCC", VA = "0xE01FCC")]
	public TrailMaker()
	{
	}
}
[Token(Token = "0x20000CE")]
public class CinematicCamera : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum GameStateRelevance
	{
		[Token(Token = "0x40006A3")]
		MainMenu,
		[Token(Token = "0x40006A4")]
		ArenaIdle,
		[Token(Token = "0x40006A5")]
		ArenaDuringPlay,
		[Token(Token = "0x40006A6")]
		ArenaAlways
	}

	[Serializable]
	[Token(Token = "0x20000D0")]
	public class SerializableGameStateRelevance : SerializableEnum<GameStateRelevance>
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0xE0689C", Offset = "0xE0689C", VA = "0xE0689C")]
		public SerializableGameStateRelevance()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	public enum PointOfInterest
	{
		[Token(Token = "0x40006A8")]
		Ball,
		[Token(Token = "0x40006A9")]
		BallPredictedHitPos,
		[Token(Token = "0x40006AA")]
		ArenaCenter
	}

	[Token(Token = "0x20000D2")]
	private struct PointSample
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sessionTimeWhenScored;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int scoreAmount;
	}

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	public SerializableGameStateRelevance relevantGameState;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool relevantInSingleplayer;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool relevantInMultiplayer;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool firstPersonCamera;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _groupId;

	[NonSerialized]
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int _groupIdHash;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Postioning")]
	public PointOfInterest pointOfInterest;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 180f)]
	[Tooltip("+/- in degrees")]
	public float rotationRandomRange;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Once positioned, what is the angle to the ball from the center of the fov, in degrees")]
	[Header("Pick Scoring")]
	public float extrapolateBallPositionTime;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve angleToBall;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve timeSinceRacketHit;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve timeSinceBallReturnToPlayer;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve timeSinceWallDisconnect;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve timeSinceGutterActivated;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _coolDownTime;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("The time window (seconds) that points are looked at for scoring\r\npointsMadeInTimeWindow condition")]
	[Range(0f, 5f)]
	public float pointsTimeWindow;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve pointsMadeInTimeWindow;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve slingUsedDuration;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Out scoring")]
	public AnimationCurve angleToBall_Out;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve timeSinceRacketHit_Out;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve timeSinceBallReturnToPlayer_Out;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve cameraActiveDuration;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float cameraMinDuration;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cameraMaxDuration;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float currentShotDuration;

	[NonSerialized]
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool thirdPersonCamera;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ThirdPersonCamera _thirdPersonCamera;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Camera _camera;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Queue<PointSample> _scoreHistory;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform _cameraTransform;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _transform;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Animator _animator;

	[NonSerialized]
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float _timeSinceCameraWasPicked;

	[NonSerialized]
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float _timeSinceStartedRecording;

	[NonSerialized]
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float _lastPickScore;

	[NonSerialized]
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool _cameraActive;

	[Token(Token = "0x1700010A")]
	public Camera camera
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE04104", Offset = "0xE04104", VA = "0xE04104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE0410C", Offset = "0xE0410C", VA = "0xE0410C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE042D0", Offset = "0xE042D0", VA = "0xE042D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE04364", Offset = "0xE04364", VA = "0xE04364")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE04470", Offset = "0xE04470", VA = "0xE04470")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE04520", Offset = "0xE04520", VA = "0xE04520")]
	public void AlignWithFirstPerson()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE045D8", Offset = "0xE045D8", VA = "0xE045D8")]
	public void AlignThirdPerson()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE04418", Offset = "0xE04418", VA = "0xE04418")]
	private void Reset()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE050A0", Offset = "0xE050A0", VA = "0xE050A0")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE05264", Offset = "0xE05264", VA = "0xE05264")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE05388", Offset = "0xE05388", VA = "0xE05388")]
	private void RemoveOldScoreSamples()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE0548C", Offset = "0xE0548C", VA = "0xE0548C")]
	private void onScore(int score, Player p)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE05578", Offset = "0xE05578", VA = "0xE05578")]
	public float GetPickScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE0626C", Offset = "0xE0626C", VA = "0xE0626C")]
	public float GetOutScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE065F0", Offset = "0xE065F0", VA = "0xE065F0")]
	private float CameraActiveScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE06024", Offset = "0xE06024", VA = "0xE06024")]
	private float PointsEarnedScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE05B90", Offset = "0xE05B90", VA = "0xE05B90")]
	private float AngleToBallScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE062C0", Offset = "0xE062C0", VA = "0xE062C0")]
	private float AngleToBallScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xE05DC8", Offset = "0xE05DC8", VA = "0xE05DC8")]
	private float TimeSinceRacketHitScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xE064D0", Offset = "0xE064D0", VA = "0xE064D0")]
	private float TimeSinceRacketHitScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xE05E58", Offset = "0xE05E58", VA = "0xE05E58")]
	private float TimeSinceBallReturnToPlayerScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xE06560", Offset = "0xE06560", VA = "0xE06560")]
	private float TimeSinceBallReturnToPlayerScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xE05EE8", Offset = "0xE05EE8", VA = "0xE05EE8")]
	private float TimeSinceWallDisconnectScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xE05F78", Offset = "0xE05F78", VA = "0xE05F78")]
	private float TimeSinceCameraWasUsedScore()
	{
		return default(float);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xE05F94", Offset = "0xE05F94", VA = "0xE05F94")]
	private float TimeSinceGutterActivatedScore()
	{
		return default(float);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xE061BC", Offset = "0xE061BC", VA = "0xE061BC")]
	private float SlingDurationScore()
	{
		return default(float);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE06660", Offset = "0xE06660", VA = "0xE06660")]
	public Vector3 GetBallPredictedHitPos(Ball ball)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE0589C", Offset = "0xE0589C", VA = "0xE0589C")]
	public bool RePosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xE067C4", Offset = "0xE067C4", VA = "0xE067C4")]
	public CinematicCamera()
	{
	}
}
[Token(Token = "0x20000D3")]
public class CinematicCameraManager : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTakeTime;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeStep;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CinematicCamera[] _allCameras;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CinematicCamera _activeCamera;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeSinceLastCameraPick;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeSinceLastTimeStep;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _indifferentHash;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _lastPickedCameraHash;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE068E4", Offset = "0xE068E4", VA = "0xE068E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE06968", Offset = "0xE06968", VA = "0xE06968")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE069F8", Offset = "0xE069F8", VA = "0xE069F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE06A08", Offset = "0xE06A08", VA = "0xE06A08")]
	private void CheckCameraChange()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xE06AE8", Offset = "0xE06AE8", VA = "0xE06AE8")]
	private void PickCamera()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xE06D88", Offset = "0xE06D88", VA = "0xE06D88")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xE06F60", Offset = "0xE06F60", VA = "0xE06F60")]
	public CinematicCameraManager()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OculusSpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text debugText;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Fov;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRPlugin.Media.PlatformCameraMode _mode;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private OVRPlugin.Fovf _defaultFov;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRPlugin.Fovf _fov;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _optimizeEnabled;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _debugSpectatorEnabled;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly StringBuilder _builder;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE06F7C", Offset = "0xE06F7C", VA = "0xE06F7C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE07078", Offset = "0xE07078", VA = "0xE07078")]
	private void UpdateSpectatorCamera()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE07450", Offset = "0xE07450", VA = "0xE07450")]
	private void ToggleOptimizationsIfNeeded()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE07484", Offset = "0xE07484", VA = "0xE07484")]
	private void ToggleOptimizations(bool optimize)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xE07594", Offset = "0xE07594", VA = "0xE07594")]
	private void EnableSpectatorCamera()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE0766C", Offset = "0xE0766C", VA = "0xE0766C")]
	private void DisableSpectatorCamera()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xE076C8", Offset = "0xE076C8", VA = "0xE076C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE079D8", Offset = "0xE079D8", VA = "0xE079D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xE07A64", Offset = "0xE07A64", VA = "0xE07A64")]
	private void OverrideFOV(float scale)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE07AFC", Offset = "0xE07AFC", VA = "0xE07AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE0838C", Offset = "0xE0838C", VA = "0xE0838C")]
	private void CameraModeChanged(OVRPlugin.Media.PlatformCameraMode mode)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xE0780C", Offset = "0xE0780C", VA = "0xE0780C")]
	private void AwakeDebugText()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xE07CA4", Offset = "0xE07CA4", VA = "0xE07CA4")]
	private void UpdateDebugText()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xE08708", Offset = "0xE08708", VA = "0xE08708")]
	private void AppendLayerMaskLine(StringBuilder builder, string prefix, LayerMask mask)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xE087D8", Offset = "0xE087D8", VA = "0xE087D8")]
	private void OnApplicationPause(bool _)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xE087DC", Offset = "0xE087DC", VA = "0xE087DC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xE087E0", Offset = "0xE087E0", VA = "0xE087E0")]
	public OculusSpectatorCamera()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SimpleStreamingCam : MonoBehaviour, ISingleton
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SimpleStreamingCam inst;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject streamingCam;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isAvailable;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xE08864", Offset = "0xE08864", VA = "0xE08864", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE088E4", Offset = "0xE088E4", VA = "0xE088E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE08940", Offset = "0xE08940", VA = "0xE08940")]
	public SimpleStreamingCam()
	{
	}
}
[Token(Token = "0x20000D6")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x20000D7")]
	[CompilerGenerated]
	private sealed class <shakeCo>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThirdPersonCamera <>4__this;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float strength;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xE09868", Offset = "0xE09868", VA = "0xE09868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xE098B0", Offset = "0xE098B0", VA = "0xE098B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xE08FB4", Offset = "0xE08FB4", VA = "0xE08FB4")]
		[DebuggerHidden]
		public <shakeCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xE0977C", Offset = "0xE0977C", VA = "0xE0977C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xE09780", Offset = "0xE09780", VA = "0xE09780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xE09870", Offset = "0xE09870", VA = "0xE09870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Position")]
	public float pivotHeight;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posSmoothTime;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 targetSmoothTimeRange;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shakeStrength;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shakeDuration;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float centerParam;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerLerpSpeed;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Zoom")]
	public float maxAngle;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float zoomSmoothTime;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 radiusRange;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 fovRange;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Debug")]
	public bool debugDraw;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera _camera;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _cameraTransform;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _pos;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _velocity;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _lastPos;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _target;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _targetVelocity;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _radius;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _radiusVelocity;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _fov;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _fovVelocity;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _playerParam;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Line _line;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 _offset;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine _lastShake;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SmoothFloat _pivotHeight;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _selfUpdate;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE08994", Offset = "0xE08994", VA = "0xE08994")]
	private Player getPlayer(bool useBallDir)
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE08A2C", Offset = "0xE08A2C", VA = "0xE08A2C")]
	private Vector3 getPivot(Player player, float dt, bool useBallDir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE045F0", Offset = "0xE045F0", VA = "0xE045F0")]
	public void updateNow()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xE08CA0", Offset = "0xE08CA0", VA = "0xE08CA0")]
	private void onBallHitRacket(ShotInfo shotInfo, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xE08E74", Offset = "0xE08E74", VA = "0xE08E74")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xE08E7C", Offset = "0xE08E7C", VA = "0xE08E7C")]
	private void onRoomExplode()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xE08E84", Offset = "0xE08E84", VA = "0xE08E84")]
	private void OnShieldBroken(Target target)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xE08E08", Offset = "0xE08E08", VA = "0xE08E08")]
	private void shake(float strength, float duration)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xE08F28", Offset = "0xE08F28", VA = "0xE08F28")]
	[IteratorStateMachine(typeof(<shakeCo>d__36))]
	private IEnumerator shakeCo(float strength, float duration)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xE08FDC", Offset = "0xE08FDC", VA = "0xE08FDC")]
	private void reset()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE09118", Offset = "0xE09118", VA = "0xE09118")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xE09258", Offset = "0xE09258", VA = "0xE09258")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE09268", Offset = "0xE09268", VA = "0xE09268")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE09460", Offset = "0xE09460", VA = "0xE09460")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xE09650", Offset = "0xE09650", VA = "0xE09650")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x20000D8")]
[CreateAssetMenu(menuName = "Data/Analytics Settings")]
public class AnalyticsSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x20000D9")]
	public class RemoteLogger
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string cacheFilename;

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xE09A00", Offset = "0xE09A00", VA = "0xE09A00")]
		public RemoteLogger()
		{
		}
	}

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RemoteLogger remoteLogger;

	[Token(Token = "0x1700010D")]
	public string apiUrl
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xE098B8", Offset = "0xE098B8", VA = "0xE098B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xE099F8", Offset = "0xE099F8", VA = "0xE099F8")]
	public AnalyticsSettings()
	{
	}
}
[Token(Token = "0x20000DA")]
[CreateAssetMenu(menuName = "Data/Announcer Settings")]
public class AnnouncerSettings : UpdatableData
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Clutch Saves")]
	public float riskTimeForMinChance;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float riskTimeForMaxChance;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minClutchSaveChance;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxClutchSaveChance;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Coop")]
	public float coopEncourageCooldown;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Teamwork (shields)")]
	public int shieldTeamworkMinHP;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int shieldTeamworkHPForMaxChance;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minShieldTeamworkChance;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxShieldTeamworkChance;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Teamwork (ice breaker)")]
	public int iceTeamworkMinTargets;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int iceTeamworkMaxTargets;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minIceTeamworkChance;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxIceTeamworkChance;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float iceTeamworkMaxHittingPlayerRatio;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("On Fire (Coop only)")]
	public int minScoreForEachShot;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numConsecutiveShotsForOnFire;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float extraChancePerExtraShot;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float bestShotForMinChance;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float bestShotForMaxChance;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float minOnFireChance;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxOnFireChance;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float onFireDelay;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Achievements & items")]
	[Tooltip("The time to wait after the announcer says the achievement is unlocked and the sfx in seconds")]
	public float achievementUnlockedSfxDelay;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xE09A58", Offset = "0xE09A58", VA = "0xE09A58")]
	public AnnouncerSettings()
	{
	}
}
[Token(Token = "0x20000DB")]
[CreateAssetMenu(menuName = "Data/Arcades Settings")]
public class ArcadesSettings : UpdatableData
{
	[Token(Token = "0x600063B")]
	[Address(RVA = "0xE09AE0", Offset = "0xE09AE0", VA = "0xE09AE0")]
	public ArcadesSettings()
	{
	}
}
[Token(Token = "0x20000DC")]
[CreateAssetMenu(menuName = "Data/Avatar Settings")]
public class AvatarSettings : UpdatableData
{
	[Token(Token = "0x20000DD")]
	public enum AvatarLabel
	{
		[Token(Token = "0x4000705")]
		Unknown,
		[Token(Token = "0x4000706")]
		OG,
		[Token(Token = "0x4000707")]
		Kahin,
		[Token(Token = "0x4000708")]
		Razon,
		[Token(Token = "0x4000709")]
		Reaper
	}

	[Token(Token = "0x20000DE")]
	public enum CoatLabel
	{
		[Token(Token = "0x400070B")]
		Unknown,
		[Token(Token = "0x400070C")]
		Glass,
		[Token(Token = "0x400070D")]
		Unused_1,
		[Token(Token = "0x400070E")]
		Void,
		[Token(Token = "0x400070F")]
		Plastic,
		[Token(Token = "0x4000710")]
		Brushed,
		[Token(Token = "0x4000711")]
		Carbon,
		[Token(Token = "0x4000712")]
		Gold
	}

	[Token(Token = "0x20000DF")]
	public enum PrimaryCoats
	{
		[Token(Token = "0x4000714")]
		Unknown,
		[Token(Token = "0x4000715")]
		Glass,
		[Token(Token = "0x4000716")]
		Void,
		[Token(Token = "0x4000717")]
		Gold
	}

	[Token(Token = "0x20000E0")]
	public enum SecondaryCoat
	{
		[Token(Token = "0x4000719")]
		Unknown,
		[Token(Token = "0x400071A")]
		Plastric,
		[Token(Token = "0x400071B")]
		Brushed,
		[Token(Token = "0x400071C")]
		Carbon,
		[Token(Token = "0x400071D")]
		Gold
	}

	[Serializable]
	[Token(Token = "0x20000E1")]
	public class AvatarCoat
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private string name;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoatLabel label;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform p1;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform p2;

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE09DC0", Offset = "0xE09DC0", VA = "0xE09DC0")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xE09E38", Offset = "0xE09E38", VA = "0xE09E38")]
		public AvatarCoat()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E2")]
	public class AvatarDefinition
	{
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private string name;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		public string id;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarLabel label;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AvatarController avatarPrefab;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RacketModel racketPrefab;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AvatarCoat[] primaryCoats;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AvatarCoat[] secondaryCoats;

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xE09E40", Offset = "0xE09E40", VA = "0xE09E40")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xE09F44", Offset = "0xE09F44", VA = "0xE09F44")]
		public AvatarDefinition()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E3")]
	public class ItemDefinition
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		public string id;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item_Base prefab;

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xE09F4C", Offset = "0xE09F4C", VA = "0xE09F4C")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xE09FE0", Offset = "0xE09FE0", VA = "0xE09FE0")]
		public ItemDefinition()
		{
		}
	}

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AvatarDefinition[] definitions;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ItemDefinition[] items;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xE09AE8", Offset = "0xE09AE8", VA = "0xE09AE8")]
	public static CoatLabel GetCoatLabel(PrimaryCoats primary)
	{
		return default(CoatLabel);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xE09BA8", Offset = "0xE09BA8", VA = "0xE09BA8")]
	public static CoatLabel GetCoatLabel(SecondaryCoat secondary)
	{
		return default(CoatLabel);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xE09C68", Offset = "0xE09C68", VA = "0xE09C68")]
	public AvatarDefinition FindAvatarDef(string id)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xE09CE8", Offset = "0xE09CE8", VA = "0xE09CE8")]
	public AvatarDefinition FindAvatarDef(AvatarLabel label)
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xE09D38", Offset = "0xE09D38", VA = "0xE09D38")]
	public ItemDefinition FindItemDef(string id)
	{
		return null;
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xE09DB8", Offset = "0xE09DB8", VA = "0xE09DB8")]
	public AvatarSettings()
	{
	}
}
[Token(Token = "0x20000E4")]
[CreateAssetMenu(menuName = "Data/Backend Settings")]
public class BackendSettings : UpdatableData
{
	[Token(Token = "0x20000E5")]
	public enum Region
	{
		[Token(Token = "0x4000732")]
		Western,
		[Token(Token = "0x4000733")]
		China
	}

	[Token(Token = "0x20000E6")]
	public enum Env
	{
		[Token(Token = "0x4000735")]
		Development,
		[Token(Token = "0x4000736")]
		Production
	}

	[Serializable]
	[Token(Token = "0x20000E7")]
	private struct PlatformToSegregationId
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NativePlatformType nativePlatform;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Id;
	}

	[Token(Token = "0x20000E8")]
	public class PerRegion<T>
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T western;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T china;

		[Token(Token = "0x600064B")]
		protected T getByRegion(Region region)
		{
			return (T)null;
		}

		[Token(Token = "0x600064C")]
		public PerRegion()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E9")]
	public class StringPerEnv
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string development;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string production;

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xE0A438", Offset = "0xE0A438", VA = "0xE0A438")]
		public string getByEnv(Env env)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xE0A4F0", Offset = "0xE0A4F0", VA = "0xE0A4F0")]
		public StringPerEnv()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000EA")]
	public abstract class StringPerEnvPerRegion : PerRegion<StringPerEnv>
	{
		[Token(Token = "0x17000110")]
		protected abstract Env env
		{
			[Token(Token = "0x600064F")]
			get;
		}

		[Token(Token = "0x17000111")]
		public string Value
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0xE0A4F8", Offset = "0xE0A4F8", VA = "0xE0A4F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xE0A600", Offset = "0xE0A600", VA = "0xE0A600")]
		protected StringPerEnvPerRegion()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000EB")]
	public class RNXPlatform
	{
		[Serializable]
		[Token(Token = "0x20000EC")]
		public class RNXPlatformString : StringPerEnv
		{
			[Token(Token = "0x17000112")]
			public string Value
			{
				[Token(Token = "0x6000653")]
				[Address(RVA = "0xE0A650", Offset = "0xE0A650", VA = "0xE0A650")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000654")]
			[Address(RVA = "0xE0A6BC", Offset = "0xE0A6BC", VA = "0xE0A6BC")]
			public RNXPlatformString()
			{
			}
		}

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RNXPlatformString apiUrl;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RNXPlatformString chinaApiUrl;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xE0A648", Offset = "0xE0A648", VA = "0xE0A648")]
		public RNXPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000ED")]
	public class Analytics
	{
		[Serializable]
		[Token(Token = "0x20000EE")]
		public class AnalyticsString : StringPerEnv
		{
			[Token(Token = "0x17000113")]
			public string Value
			{
				[Token(Token = "0x6000656")]
				[Address(RVA = "0xE0998C", Offset = "0xE0998C", VA = "0xE0998C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000657")]
			[Address(RVA = "0xE0A6CC", Offset = "0xE0A6CC", VA = "0xE0A6CC")]
			public AnalyticsString()
			{
			}
		}

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnalyticsString apiUrl;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xE0A6C4", Offset = "0xE0A6C4", VA = "0xE0A6C4")]
		public Analytics()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000EF")]
	public class RemoteConfig
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bucketUrl;

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xE0A6D4", Offset = "0xE0A6D4", VA = "0xE0A6D4")]
		public RemoteConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F0")]
	public class Crates
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string devBucketUrl;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string prodBucketUrl;

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xE0A6DC", Offset = "0xE0A6DC", VA = "0xE0A6DC")]
		public Crates()
		{
		}
	}

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<PlatformToSegregationId> platformToSegregationMap;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RNXPlatform rNXPlatform;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Analytics analytics;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RemoteConfig remoteConfig;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Crates crates;

	[Token(Token = "0x1700010E")]
	public Dictionary<NativePlatformType, string> PlatformToSegregation
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xE09FE8", Offset = "0xE09FE8", VA = "0xE09FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010F")]
	public string CurrentPlatformSegregationId
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xE0A184", Offset = "0xE0A184", VA = "0xE0A184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xE0A3B0", Offset = "0xE0A3B0", VA = "0xE0A3B0")]
	public BackendSettings()
	{
	}
}
[Token(Token = "0x20000F2")]
public enum BuildType
{
	[Token(Token = "0x4000747")]
	Regular,
	[Token(Token = "0x4000748")]
	Arcades,
	[Token(Token = "0x4000749")]
	Demo
}
[Token(Token = "0x20000F3")]
[CreateAssetMenu(menuName = "Data/Debug Settings")]
public class DebugSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x20000F4")]
	public class Achievements
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Achievements will not count any progress")]
		public bool disable;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[Tooltip("Unlock all the achievements")]
		public bool unlockAll;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[Tooltip("Clears the achievements list from profile")]
		public bool clearAchievements;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Disable report of the achievement to the native platform")]
		public bool disableReportToNativePlatform;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xE0A774", Offset = "0xE0A774", VA = "0xE0A774")]
		public Achievements()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F5")]
	public class Audio
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool dontPlayInGameMusic;

		[Token(Token = "0x17000114")]
		public bool playInGameMusic
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xE0A77C", Offset = "0xE0A77C", VA = "0xE0A77C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xE0A78C", Offset = "0xE0A78C", VA = "0xE0A78C")]
		public Audio()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F6")]
	public class Backend
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forceOffline;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debugRNXPlatform;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BackendSettings.Env RNXPlatformEnv;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Note: This does not affect custom sets")]
		public BackendSettings.Env cratesEnv;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BackendSettings.Env analyticsEnv;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackendSettings.Env matchMakingLobby;

		[Token(Token = "0x17000115")]
		public bool workOffline
		{
			[Token(Token = "0x6000662")]
			[Address(RVA = "0xE0A794", Offset = "0xE0A794", VA = "0xE0A794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xE0A800", Offset = "0xE0A800", VA = "0xE0A800")]
		public Backend()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F7")]
	public class HexTiles
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool drawGizmos;

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xE0A808", Offset = "0xE0A808", VA = "0xE0A808")]
		public HexTiles()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F8")]
	public class Gameplay
	{
		[Token(Token = "0x20000F9")]
		public enum TimeLimit
		{
			[Token(Token = "0x4000772")]
			Normal,
			[Token(Token = "0x4000773")]
			Infinite,
			[Token(Token = "0x4000774")]
			Short
		}

		[Serializable]
		[Token(Token = "0x20000FA")]
		public class KeyboardShot
		{
			[Token(Token = "0x20000FB")]
			public enum PlowDirection
			{
				[Token(Token = "0x400077C")]
				Mouse,
				[Token(Token = "0x400077D")]
				Random,
				[Token(Token = "0x400077E")]
				FixedAngle,
				[Token(Token = "0x400077F")]
				MouseScroll
			}

			[Serializable]
			[Token(Token = "0x20000FC")]
			public class LastShot
			{
				[Token(Token = "0x20000FD")]
				public enum Mode
				{
					[Token(Token = "0x400078A")]
					Locked,
					[Token(Token = "0x400078B")]
					Record,
					[Token(Token = "0x400078C")]
					Replay,
					[Token(Token = "0x400078D")]
					Reset
				}

				[Token(Token = "0x4000780")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Mode mode;

				[Token(Token = "0x4000781")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public bool draw;

				[Token(Token = "0x4000782")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool shootNow;

				[Token(Token = "0x4000783")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float autoShootTime;

				[Token(Token = "0x4000784")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public Vector3 origin;

				[Token(Token = "0x4000785")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public float yaw;

				[Token(Token = "0x4000786")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public float pitch;

				[Token(Token = "0x4000787")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public float speed;

				[Token(Token = "0x4000788")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public float plowAngle;

				[Token(Token = "0x17000116")]
				public bool ShouldDraw
				{
					[Token(Token = "0x6000667")]
					[Address(RVA = "0xE0A838", Offset = "0xE0A838", VA = "0xE0A838")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x6000668")]
				[Address(RVA = "0xE0A908", Offset = "0xE0A908", VA = "0xE0A908")]
				public LastShot()
				{
				}
			}

			[Token(Token = "0x4000775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool powerShot;

			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float powerShotStrength;

			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool randomSpeed;

			[Token(Token = "0x4000778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public PlowDirection plowDirection;

			[Token(Token = "0x4000779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Counter clockwise with 0 pointing leftward")]
			public float plowFixedAngle;

			[Token(Token = "0x400077A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LastShot lastShot;

			[Token(Token = "0x6000666")]
			[Address(RVA = "0xE0A820", Offset = "0xE0A820", VA = "0xE0A820")]
			public KeyboardShot()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FE")]
		public class Waves
		{
			[Serializable]
			[Token(Token = "0x20000FF")]
			public class Arcade
			{
				[Token(Token = "0x4000793")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool playByOrder;

				[Token(Token = "0x4000794")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string[] testWaveNames;

				[Token(Token = "0x600066A")]
				[Address(RVA = "0xE0A920", Offset = "0xE0A920", VA = "0xE0A920")]
				public Arcade()
				{
				}
			}

			[Token(Token = "0x400078E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Ignore wave positioning setting")]
			public bool fixedPositioning;

			[Token(Token = "0x400078F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool testMode;

			[Token(Token = "0x4000790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int startingDifficulty;

			[Token(Token = "0x4000791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool increasingDifficulty;

			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arcade arcade;

			[Token(Token = "0x6000669")]
			[Address(RVA = "0xE0A910", Offset = "0xE0A910", VA = "0xE0A910")]
			public Waves()
			{
			}
		}

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimeLimit timeLimit;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool disablePortals;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool endlessPlow;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardShot keyboardShot;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeScaleFactor;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool debugScoring;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool testHealingTargets;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool testShields;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Waves waves;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xE0A810", Offset = "0xE0A810", VA = "0xE0A810")]
		public Gameplay()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000100")]
	public class IAP
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Use a fake in app purchases not supported for this session")]
		public bool fakeIAPNotSupported;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Use a fake in app purchases for this session, every purchase will succeed")]
		public bool fakeIAP;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.Support)]
		[Tooltip("mock purchased items (fakeIAP must be on)")]
		public string[] mockPurchasedItems;

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xE0A928", Offset = "0xE0A928", VA = "0xE0A928")]
		public IAP()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000101")]
	public class Input
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool noVR;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool mouseRacket;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool keyboardShortcuts;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeysSettings keys;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bot;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool botWantsRematch;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xE0A930", Offset = "0xE0A930", VA = "0xE0A930")]
		public Input()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000102")]
	public class Leaderboard
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool doNotUploadLeaderboards;

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xE0A938", Offset = "0xE0A938", VA = "0xE0A938")]
		public Leaderboard()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000103")]
	public class LogTypeStackTrace
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool overrideStackTrace;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StackTraceLogType log;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StackTraceLogType warning;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StackTraceLogType assert;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StackTraceLogType error;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public StackTraceLogType exception;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xE0A940", Offset = "0xE0A940", VA = "0xE0A940")]
		public LogTypeStackTrace()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000104")]
	public class MonthlyChallengeDbg
	{
		[Serializable]
		[Token(Token = "0x2000105")]
		public struct DownloadCustomToEditor
		{
			[Token(Token = "0x40007B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Download custom set into level editor")]
			public bool download;

			[Token(Token = "0x40007B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Custom set number to download")]
			public int customSetNum;
		}

		[Serializable]
		[Token(Token = "0x2000106")]
		public struct DecryptCustomSet
		{
			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Decrypt custom set")]
			public bool decrypt;

			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Custom set to decrypt")]
			public string customSetName;
		}

		[Serializable]
		[Token(Token = "0x2000107")]
		public struct PackageSetFromEditor
		{
			[Serializable]
			[Token(Token = "0x2000108")]
			public struct Output
			{
				[Token(Token = "0x40007B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				[Tooltip("For example, MC_Apr21")]
				public string setId;

				[Token(Token = "0x40007B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				[Tooltip("Challenge time for crate asset key")]
				public MonthlyChallenge.Time challengeTime;

				[Token(Token = "0x40007BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[Tooltip("Name to appear on Monthly Challenge menu item")]
				public string customName;
			}

			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Package set from level editor as a crate")]
			public bool package;

			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Custom private set name to package")]
			public string customSetName;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Output output;
		}

		[Serializable]
		[Token(Token = "0x2000109")]
		public struct WipSet
		{
			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Test local WIP content")]
			public bool test;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WaveSet setPrefab;

			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MonthlyChallenge.Time challengeTime;

			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Change the extension of the crate to .bytes")]
			public TextAsset crate;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("If TRUE than the password will be taken from the Crates manager")]
			public bool crateIsEncrypted;
		}

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Disable monthly challenges completely")]
		public bool disable;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debug;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[Tooltip("Update content every 5 seconds")]
		public bool shortUpdateInterval;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool overrideLast;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonthlyChallengesData.Last last;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DownloadCustomToEditor downloadCustomToEditor;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DecryptCustomSet decryptCustomSed;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PackageSetFromEditor packageSetFromEditor;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WipSet wipSet;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("EDITOR ONLY: Do not download using Crates and instead using built-in content")]
		public bool workOffline;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool forceShowNew;

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xE0A950", Offset = "0xE0A950", VA = "0xE0A950")]
		public MonthlyChallengeDbg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200010A")]
	public class MR
	{
		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool disableMixedReality;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool _sameSpaceMultiplayer;

		[Token(Token = "0x17000117")]
		public bool sameSpaceMultiplayer
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0xE0A958", Offset = "0xE0A958", VA = "0xE0A958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xE0AA40", Offset = "0xE0AA40", VA = "0xE0AA40")]
		public MR()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200010B")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x200010C")]
		public class Network
		{
			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Use alternate ports when detecting a conflict with another running instance")]
			public bool allowAltPorts;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool disablePeerToPeer;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float simulatedConstantDelayMS;

			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float simulatedRandomDelayMS;

			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool debugTraffic;

			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool printThroughput;

			[Token(Token = "0x6000675")]
			[Address(RVA = "0xE0AA78", Offset = "0xE0AA78", VA = "0xE0AA78")]
			public Network()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200010D")]
		public class Seasons
		{
			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool debug;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int oldSkillRating;

			[Token(Token = "0x40007DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiplayerSeasonsData.Season fakeSeason;

			[Token(Token = "0x40007DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Delay handling of online data until keypress")]
			public bool delay;

			[Token(Token = "0x40007DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode delayedKey;

			[Token(Token = "0x40007DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Tooltip("Test UI using keypress")]
			public bool testUI;

			[Token(Token = "0x40007DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode testUIKey;

			[Token(Token = "0x6000676")]
			[Address(RVA = "0xE0AA80", Offset = "0xE0AA80", VA = "0xE0AA80")]
			public Seasons()
			{
			}
		}

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debugMatchSetup;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool autoAcceptRanked;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugSkillRating;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool debugSyncing;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool debugShotInfos;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool debugWaveCreation;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool debugSnakes;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool debugVoice;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("List of RNX IDs of players to show in friends list")]
		public string[] friends;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _fakeLocal;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VersusMatchType fakeMatchType;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerID fakePlayerID;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		[Tooltip("fake items for the opponent model")]
		public string[] fakeItems;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _scoreMultiplier;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Network network;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Seasons seasons;

		[Token(Token = "0x17000118")]
		public bool fakeLocal
		{
			[Token(Token = "0x6000672")]
			[Address(RVA = "0xDFD234", Offset = "0xDFD234", VA = "0xDFD234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		public float scoreMult
		{
			[Token(Token = "0x6000673")]
			[Address(RVA = "0xE0AA48", Offset = "0xE0AA48", VA = "0xE0AA48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xE0AA58", Offset = "0xE0AA58", VA = "0xE0AA58")]
		public Multiplayer()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200010E")]
	public class OculusRichPresence
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong testGroupRoomID;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string testDestination;

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xE0AAA0", Offset = "0xE0AAA0", VA = "0xE0AAA0")]
		public OculusRichPresence()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200010F")]
	public class Profile
	{
		[Serializable]
		[Token(Token = "0x2000110")]
		public class OverrideSkillRating
		{
			[Token(Token = "0x40007EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x40007EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rating;

			[Token(Token = "0x40007ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float ratingDeviation;

			[Token(Token = "0x6000679")]
			[Address(RVA = "0xE0AAB0", Offset = "0xE0AAB0", VA = "0xE0AAB0")]
			public OverrideSkillRating()
			{
			}
		}

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debugSync;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugXP;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[Tooltip("load the offline profile but fail every try of getting the online profile")]
		public bool failFetchOnlineProfile;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool doNotUploadProfile;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool resetProfile;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool useFakeRnxID;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fakeRnxID;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverrideSkillRating overrideSkillRating;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xE0AAA8", Offset = "0xE0AAA8", VA = "0xE0AAA8")]
		public Profile()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000111")]
	public class Setup
	{
		[Token(Token = "0x2000112")]
		public enum SkipStartRoom
		{
			[Token(Token = "0x40007FA")]
			DoNotSkip,
			[Token(Token = "0x40007FB")]
			SkipWhenReady,
			[Token(Token = "0x40007FC")]
			SkipQuickly
		}

		[Token(Token = "0x2000113")]
		public enum StartMode
		{
			[Token(Token = "0x40007FE")]
			MainMenu,
			[Token(Token = "0x40007FF")]
			AutoStartArcade,
			[Token(Token = "0x4000800")]
			AutoStartNightmare,
			[Token(Token = "0x4000801")]
			AutoStartSolo,
			[Token(Token = "0x4000802")]
			AutoStartMonthlyChallenge,
			[Token(Token = "0x4000803")]
			AutoStartFindVersus,
			[Token(Token = "0x4000804")]
			AutoStartFindCoOp,
			[Token(Token = "0x4000805")]
			AutoStartFindVersusOrCoOp,
			[Token(Token = "0x4000806")]
			AutoStartPINVersus,
			[Token(Token = "0x4000807")]
			AutoStartPINCoOp,
			[Token(Token = "0x4000808")]
			AutoStartLevelEditor
		}

		[Serializable]
		[Token(Token = "0x2000114")]
		public class FirstTimeUX
		{
			[Token(Token = "0x2000115")]
			private enum ShowOnce
			{
				[Token(Token = "0x400080C")]
				Once,
				[Token(Token = "0x400080D")]
				Always,
				[Token(Token = "0x400080E")]
				Never
			}

			[Token(Token = "0x4000809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private ShowOnce showLegal;

			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private ShowOnce showTutorial;

			[Token(Token = "0x1700011D")]
			public bool showLegalOnce
			{
				[Token(Token = "0x600067E")]
				[Address(RVA = "0xE0AAE8", Offset = "0xE0AAE8", VA = "0xE0AAE8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700011E")]
			public bool alwaysShowLegal
			{
				[Token(Token = "0x600067F")]
				[Address(RVA = "0xE0AAF8", Offset = "0xE0AAF8", VA = "0xE0AAF8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700011F")]
			public bool neverShowLegal
			{
				[Token(Token = "0x6000680")]
				[Address(RVA = "0xE0AB08", Offset = "0xE0AB08", VA = "0xE0AB08")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000120")]
			public bool showTutorialOnce
			{
				[Token(Token = "0x6000681")]
				[Address(RVA = "0xE0AB18", Offset = "0xE0AB18", VA = "0xE0AB18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000121")]
			public bool alwaysShowTutorial
			{
				[Token(Token = "0x6000682")]
				[Address(RVA = "0xE0AB28", Offset = "0xE0AB28", VA = "0xE0AB28")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000122")]
			public bool neverShowTutorial
			{
				[Token(Token = "0x6000683")]
				[Address(RVA = "0xE0AB38", Offset = "0xE0AB38", VA = "0xE0AB38")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000684")]
			[Address(RVA = "0xE0AB48", Offset = "0xE0AB48", VA = "0xE0AB48")]
			public FirstTimeUX()
			{
			}
		}

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool deselectAllOnStart;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SkipStartRoom skipStartRoom;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableWelcomePopUps;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StartMode startMode;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoRestartOnGameOver;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("For example: A2, D5, Tutorial")]
		public string startSoloId;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("For example: MP1, MP13")]
		public string forceMultiplayerSetId;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("555 by default if empty")]
		public string startPIN;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fastOpeningSequence;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool unlockSoloSets;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FirstTimeUX FTUE;

		[Token(Token = "0x1700011A")]
		public bool skipStartRoomWhenReady
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0xE0AAB8", Offset = "0xE0AAB8", VA = "0xE0AAB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		public bool skipStartRoomQuickly
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xE0AAC8", Offset = "0xE0AAC8", VA = "0xE0AAC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011C")]
		public bool fastOpeningSequence
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0xE0AAD8", Offset = "0xE0AAD8", VA = "0xE0AAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xE0AAE0", Offset = "0xE0AAE0", VA = "0xE0AAE0")]
		public Setup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000116")]
	public class SuperSamplingSettings
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool overrideSuperSampling;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float overriddenSuperSamplingValue;

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE0AB50", Offset = "0xE0AB50", VA = "0xE0AB50")]
		public SuperSamplingSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000117")]
	public class UI
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debugController;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool printFlow;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugSound;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool debugSoundIncludeHover;

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xE0AB60", Offset = "0xE0AB60", VA = "0xE0AB60")]
		public UI()
		{
		}
	}

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Input input;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Setup setup;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Backend backend;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Profile profile;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Leaderboard leaderboard;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gameplay gameplay;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Multiplayer multiplayer;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UI ui;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MR mr;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Audio audio;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MonthlyChallengeDbg monthlyChallenge;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Achievements achievements;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SuperSamplingSettings settings;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HexTiles hexTiles;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OculusRichPresence oculusRichPresence;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IAP inAppPurchases;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LogTypeStackTrace logTypeStackTrace;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xE0A76C", Offset = "0xE0A76C", VA = "0xE0A76C")]
	public DebugSettings()
	{
	}
}
[Token(Token = "0x2000118")]
[CreateAssetMenu(menuName = "Data/Demo Settings")]
public class DemoSettings : UpdatableData
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] unlockedSetIds;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xE0AB68", Offset = "0xE0AB68", VA = "0xE0AB68")]
	public bool isSoloSetUnlocked(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xE0ABC0", Offset = "0xE0ABC0", VA = "0xE0ABC0")]
	public DemoSettings()
	{
	}
}
[Token(Token = "0x2000119")]
[CreateAssetMenu(menuName = "Data/Email Settings")]
public class EmailSettings : UpdatableData
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string senderAddress;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string senderPassword;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string recipientAddress;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SmtpHost;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int SmtpPort;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xE0ABC8", Offset = "0xE0ABC8", VA = "0xE0ABC8")]
	public EmailSettings()
	{
	}
}
[Token(Token = "0x200011A")]
public class ItemIdAttribute : PropertyAttribute
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemsDefs.ItemShelf filterByShelf;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xE0AC74", Offset = "0xE0AC74", VA = "0xE0AC74")]
	public ItemIdAttribute(ItemsDefs.ItemShelf shelf = ItemsDefs.ItemShelf.None)
	{
	}
}
[Token(Token = "0x200011B")]
[CreateAssetMenu(menuName = "Data/Items Defs")]
public class ItemsDefs : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200011C")]
	public class ItemDefinition
	{
		[Token(Token = "0x400081F")]
		public const int MAX_REQUIRED_ACHIEVEMENTS = 3;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNewItem;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[ShowAssetPreview(64, 64)]
		public Sprite icon;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Labels")]
		public ItemSlot slot;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("If the item is coat than what is the label for it in the avatar settings of it")]
		public AvatarSettings.PrimaryCoats primaryCoatLable;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("If the item is coat than what is the label for it in the avatar settings of it")]
		public AvatarSettings.SecondaryCoat secondaryCoatLable;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Use this item as the default for the slot")]
		public bool useAsDefaultItem;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString defaultItemTitle;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Requirements")]
		[Tooltip("Purchasable item")]
		public bool support;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Purchasable item price")]
		public string price;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Oculus purchase description")]
		public string purchaseDescription;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Leave empty for support and default items")]
		public string[] requiredAchievements;

		[Token(Token = "0x17000124")]
		public PlayerProfileData.Summary.AchievementStatus[] RequiredAchievementsStatus
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0xE0C758", Offset = "0xE0C758", VA = "0xE0C758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public PlayerProfileData.Summary.ItemStatus Status
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0xE0B238", Offset = "0xE0B238", VA = "0xE0B238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public ItemShelf ItemShelf
		{
			[Token(Token = "0x600069B")]
			[Address(RVA = "0xE0C878", Offset = "0xE0C878", VA = "0xE0C878")]
			get
			{
				return default(ItemShelf);
			}
		}

		[Token(Token = "0x17000127")]
		public AvatarSettings.AvatarDefinition AvatarDefinition
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0xE0C8CC", Offset = "0xE0C8CC", VA = "0xE0C8CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xE0BEBC", Offset = "0xE0BEBC", VA = "0xE0BEBC")]
		public void ValidateLockStateByAchievements()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xE0B358", Offset = "0xE0B358", VA = "0xE0B358")]
		public void EquipOnModel(PlayerModel model)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xE0C998", Offset = "0xE0C998", VA = "0xE0C998")]
		private void RemoveAllItemsFromModelButThis(PlayerModel model)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xE0B6C8", Offset = "0xE0B6C8", VA = "0xE0B6C8")]
		public void UnequipFromModel(PlayerModel model)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xE0CA6C", Offset = "0xE0CA6C", VA = "0xE0CA6C")]
		public ItemDefinition()
		{
		}
	}

	[Token(Token = "0x200011E")]
	public enum ItemShelf
	{
		[Token(Token = "0x4000832")]
		None = 0,
		[Token(Token = "0x4000833")]
		Model = 1,
		[Token(Token = "0x4000834")]
		Coating = 2,
		[Token(Token = "0x4000835")]
		Trails = 3,
		[Token(Token = "0x4000836")]
		Headware = 100,
		[Token(Token = "0x4000837")]
		Extras = 101,
		[Token(Token = "0x4000838")]
		Support = 102
	}

	[Token(Token = "0x200011F")]
	public enum ItemSlot
	{
		[Token(Token = "0x400083A")]
		None = 0,
		[Token(Token = "0x400083B")]
		Model = 1,
		[Token(Token = "0x400083C")]
		PrimaryCoat = 2,
		[Token(Token = "0x400083D")]
		SecondaryCoat = 3,
		[Token(Token = "0x400083E")]
		Trail = 4,
		[Token(Token = "0x400083F")]
		Head = 100,
		[Token(Token = "0x4000840")]
		Mouth = 101,
		[Token(Token = "0x4000841")]
		Neck = 102,
		[Token(Token = "0x4000842")]
		Racket = 103,
		[Token(Token = "0x4000843")]
		Trinket = 104,
		[Token(Token = "0x4000844")]
		Eyes = 105
	}

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemDefinition[] items;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ItemSlot, ItemDefinition[]> _itemsOfSlot;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, ItemDefinition> _supportItems;

	[Token(Token = "0x17000123")]
	public static Dictionary<string, ItemDefinition> SupportItems
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xE0C2D4", Offset = "0xE0C2D4", VA = "0xE0C2D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xE0AC9C", Offset = "0xE0AC9C", VA = "0xE0AC9C")]
	private static ItemShelf ShelfOf(ItemDefinition item)
	{
		return default(ItemShelf);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xE0AD10", Offset = "0xE0AD10", VA = "0xE0AD10")]
	public static bool MustBeEquipped(ItemSlot itemSlot)
	{
		return default(bool);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xE0AD28", Offset = "0xE0AD28", VA = "0xE0AD28")]
	public static int IsLeftShelf(ItemShelf shelf)
	{
		return default(int);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xE0AD50", Offset = "0xE0AD50", VA = "0xE0AD50")]
	public static void EquipAvatarItems()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xE0B6EC", Offset = "0xE0B6EC", VA = "0xE0B6EC")]
	public static void EquipOpponentAvatarItems()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xE0AECC", Offset = "0xE0AECC", VA = "0xE0AECC")]
	private static void ValidateItems()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xE0BA04", Offset = "0xE0BA04", VA = "0xE0BA04")]
	public static void ValidateDefaultItem(ItemSlot s, [Optional] ItemDefinition[] slotItems)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xE0B8A8", Offset = "0xE0B8A8", VA = "0xE0B8A8")]
	private static void ValidateItem(ItemDefinition item)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE0C0B4", Offset = "0xE0C0B4", VA = "0xE0C0B4")]
	public static ItemDefinition[] ItemsOfSlot(ItemSlot slot)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE0C56C", Offset = "0xE0C56C", VA = "0xE0C56C")]
	public static ItemDefinition[] UnseenUnlockedItems()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE0C6B8", Offset = "0xE0C6B8", VA = "0xE0C6B8")]
	public ItemsDefs()
	{
	}
}
[Token(Token = "0x2000124")]
[CreateAssetMenu(menuName = "Data/Items Settings")]
public class ItemsSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000125")]
	public enum HatSoundOrigin
	{
		[Token(Token = "0x4000854")]
		Ambient,
		[Token(Token = "0x4000855")]
		AnnouncerSpeakers,
		[Token(Token = "0x4000856")]
		Racket
	}

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Headware settings")]
	public HatSoundOrigin hatSoundOrigin;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hatSoundUiStereo;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 2f)]
	[Tooltip("cooldown for playing the particle and sound effect in the shelves ui")]
	public float fxCooldown;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("A Sequence of how match power shot to wait for the next headware sound and particle fx player 1")]
	[Range(1f, 20f)]
	public int[] headwareSoundIntervalsP1;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 20f)]
	[Tooltip("A Sequence of how match power shot to wait for the next headware sound and particle fx player 2")]
	public int[] headwareSoundIntervalsP2;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xE0CCE8", Offset = "0xE0CCE8", VA = "0xE0CCE8")]
	public ItemsSettings()
	{
	}
}
[Token(Token = "0x2000126")]
[CreateAssetMenu(menuName = "Data/Keys Settings")]
public class KeysSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000127")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x2000128")]
		public class MouseController
		{
			[Token(Token = "0x4000861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode moveRacket;

			[Token(Token = "0x4000862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode trigger1;

			[Token(Token = "0x4000863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode trigger2;

			[Token(Token = "0x4000864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode menu;

			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode back;

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode joystickLeft;

			[Token(Token = "0x4000867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode joystickRight;

			[Token(Token = "0x4000868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode joystickUp;

			[Token(Token = "0x4000869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode joystickDown;

			[Token(Token = "0x400086A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public KeyCode grip;

			[Token(Token = "0x400086B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public KeyCode rotateX;

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0xE0CD24", Offset = "0xE0CD24", VA = "0xE0CD24")]
			public MouseController()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000129")]
		public class Racket
		{
			[Token(Token = "0x400086C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode load;

			[Token(Token = "0x400086D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode remove;

			[Token(Token = "0x400086E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode ballHit;

			[Token(Token = "0x60006B7")]
			[Address(RVA = "0xE0CD54", Offset = "0xE0CD54", VA = "0xE0CD54")]
			public Racket()
			{
			}
		}

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode ok;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode yes;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode no;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode disableBotLook;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode toggleStreamingCam;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseController mouseController;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Racket racket;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xE0CD08", Offset = "0xE0CD08", VA = "0xE0CD08")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012A")]
	public class MainMenu
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode startZen;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode startArcade;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode startNightmare;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode startSolo;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode startMonthlyChallenge;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode startFindVersus;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode startFindCoOp;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode startFindVersusOrCoOp;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode startPINVersus;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode startLevelEditor;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode openProfile;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode quit;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xE0CD70", Offset = "0xE0CD70", VA = "0xE0CD70")]
		public MainMenu()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012B")]
	public class InGame
	{
		[Serializable]
		[Token(Token = "0x200012C")]
		public class Multiplayer
		{
			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode randomScore;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode loseRound;

			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode winRound;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode ctrlAltGameOver;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode opponentDisconnect;

			[Token(Token = "0x60006BA")]
			[Address(RVA = "0xE0CDC0", Offset = "0xE0CDC0", VA = "0xE0CDC0")]
			public Multiplayer()
			{
			}
		}

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode shootBall;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode backHandShoot;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode respawnBall;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode respawnBallPos;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode pullBall;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode fillUpEnergy;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode endTime;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode increaseStreak;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode skipWave;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode skipSet;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode quitGameOver;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode skipSetInLE;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Multiplayer multiplayer;

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xE0CD98", Offset = "0xE0CD98", VA = "0xE0CD98")]
		public InGame()
		{
		}
	}

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public General general;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MainMenu mainMenu;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InGame inGame;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xE0CD00", Offset = "0xE0CD00", VA = "0xE0CD00")]
	public KeysSettings()
	{
	}
}
[Token(Token = "0x200012D")]
[CreateAssetMenu(menuName = "Data/Leaderboard Settings")]
public class LeaderboardSettings : UpdatableData
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string arcadeName;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nightmareName;

	[Token(Token = "0x400088F")]
	public const LeaderboardSortMethod arcadeSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string soloPrefix;

	[Token(Token = "0x4000891")]
	public const LeaderboardSortMethod soloSort = LeaderboardSortMethod.Ascending;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string customSetPrefix;

	[Token(Token = "0x4000893")]
	public const LeaderboardSortMethod versusSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000894")]
	public const LeaderboardSortMethod coOpSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string coOpName;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xE0CDDC", Offset = "0xE0CDDC", VA = "0xE0CDDC")]
	public string getArcadeName(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE0CE08", Offset = "0xE0CE08", VA = "0xE0CE08")]
	public LeaderboardSortMethod getArcadeSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE0CE10", Offset = "0xE0CE10", VA = "0xE0CE10")]
	public string getSoloName(string setId)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE0CEA4", Offset = "0xE0CEA4", VA = "0xE0CEA4")]
	public LeaderboardSortMethod getSoloSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xE0CEAC", Offset = "0xE0CEAC", VA = "0xE0CEAC")]
	public string GetSoloCustomSetName(CustomSet customSet)
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xE0D060", Offset = "0xE0D060", VA = "0xE0D060")]
	public string getVersusName()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xE0D11C", Offset = "0xE0D11C", VA = "0xE0D11C")]
	public LeaderboardSortMethod getVersusSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xE0D124", Offset = "0xE0D124", VA = "0xE0D124")]
	public string getCoOpName()
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xE0D12C", Offset = "0xE0D12C", VA = "0xE0D12C")]
	public LeaderboardSortMethod getCoOpSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xE0D134", Offset = "0xE0D134", VA = "0xE0D134")]
	public LeaderboardSettings()
	{
	}
}
[Token(Token = "0x200012E")]
[CreateAssetMenu(menuName = "Data/LevelEditor Settings")]
public class LevelEditorSettings : ScriptableObject
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string password;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xE0D22C", Offset = "0xE0D22C", VA = "0xE0D22C")]
	public LevelEditorSettings()
	{
	}
}
[Token(Token = "0x200012F")]
[CreateAssetMenu(menuName = "Data/Localization Settings")]
public class LocalizationSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000130")]
	public struct Fonts
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontSet english;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DynamicFontSet chinese;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DynamicFontSet japanese;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DynamicFontSet korean;
	}

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Language startLanguage;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Fonts fonts;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 genericChromaticScaleFactor;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE0D234", Offset = "0xE0D234", VA = "0xE0D234")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x2000131")]
[CreateAssetMenu(menuName = "Data/Medals Settings")]
public class MedalsSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000132")]
	public class PrefabInfo
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xE0D448", Offset = "0xE0D448", VA = "0xE0D448")]
		public PrefabInfo()
		{
		}
	}

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MedalType> order;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PrefabInfo> visualPrefabs;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE0D23C", Offset = "0xE0D23C", VA = "0xE0D23C")]
	public GameObject findPrefab(MedalType medal)
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xE0D440", Offset = "0xE0D440", VA = "0xE0D440")]
	public MedalsSettings()
	{
	}
}
[Token(Token = "0x2000133")]
[CreateAssetMenu(menuName = "Data/Multiplayer Settings")]
public class MultiplayerSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000134")]
	public class Network
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int defaultPersonalLobbyServerPort;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int defaultRankedLobbyServerPort;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defaultPINLobbyServerPort;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int defaultPINLockedLobbyServerPort;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float remoteTimeEstimateLerp;

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xE0D460", Offset = "0xE0D460", VA = "0xE0D460")]
		public Network()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000135")]
	public class UI
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float playerInvitationTimeout;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float friendInvitationTimeout;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The delay after creating a lobby in which we allow the player to go do something else")]
		public float allowBrowseAwayFromLobbyDelay;

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xE0D480", Offset = "0xE0D480", VA = "0xE0D480")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000136")]
	public class InGame
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxScore;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSlingDuration;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSlingDuration2;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xE0D49C", Offset = "0xE0D49C", VA = "0xE0D49C")]
		public InGame()
		{
		}
	}

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Network networkDefault;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Network networkPS4;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UI ui;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InGame inGame;

	[Token(Token = "0x17000128")]
	public Network network
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xE0D450", Offset = "0xE0D450", VA = "0xE0D450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xE0D458", Offset = "0xE0D458", VA = "0xE0D458")]
	public MultiplayerSettings()
	{
	}
}
[Token(Token = "0x2000137")]
[CreateAssetMenu(menuName = "Data/Power-up Settings")]
public class PowerUpSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000138")]
	public class PowerupTypeAndProbability
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string title;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializablePowerupType type;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float weight;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int minWaveIndex;

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xE0D4C0", Offset = "0xE0D4C0", VA = "0xE0D4C0")]
		public PowerupTypeAndProbability()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000139")]
	public class Params
	{
		[Serializable]
		[Token(Token = "0x200013A")]
		public class RangeCurve
		{
			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Notice: Max above Min, forming together a graph")]
			public AnimationCurve max;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Notice: Min Below Max, forming together a graph")]
			public AnimationCurve min;

			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xE0D974", Offset = "0xE0D974", VA = "0xE0D974")]
			public RangeCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013B")]
		public class FirstPowerUp
		{
			[Serializable]
			[Token(Token = "0x200013C")]
			public class Unknown
			{
				[Token(Token = "0x40008C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[Tooltip("The minimum number of available power-up types required to display a power-up as unknown")]
				public int minAvailablePowerUpTypes;

				[Token(Token = "0x40008C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Tooltip("Appearance interval, measure in power-ups in between unknowns, not including")]
				public RangeCurve powerUpsWithout;

				[Token(Token = "0x60006D6")]
				[Address(RVA = "0xE0D984", Offset = "0xE0D984", VA = "0xE0D984")]
				public Unknown()
				{
				}
			}

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Appearance interval, measure in waves in between power-ups, not including")]
			public RangeCurve wavesWithout;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Measured in number of turns")]
			public int delay;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Unknown unknown;

			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xE0D97C", Offset = "0xE0D97C", VA = "0xE0D97C")]
			public FirstPowerUp()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013D")]
		public class RescuePowerUp
		{
			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Number of waves without")]
			public int cooldown;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("The X axis is % of energy left")]
			public AnimationCurve numMisses;

			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xE0D994", Offset = "0xE0D994", VA = "0xE0D994")]
			public RescuePowerUp()
			{
			}
		}

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxWaveIndex;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstPowerUp firstPowerUp;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RescuePowerUp rescuePowerUp;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PowerupTypeAndProbability[] availablePowerups;

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xE0D4C8", Offset = "0xE0D4C8", VA = "0xE0D4C8")]
		public void validate()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xE0D4D0", Offset = "0xE0D4D0", VA = "0xE0D4D0")]
		private void validateList(PowerupTypeAndProbability[] availablePowerups)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xE0D96C", Offset = "0xE0D96C", VA = "0xE0D96C")]
		public Params()
		{
		}
	}

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Params arcade;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(20f)]
	public Params versus;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(20f)]
	public Params coOp;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(20f)]
	public bool test;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Params testParams;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(20f)]
	public SerializablePowerupType[] rescuePowerups;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE0D4B8", Offset = "0xE0D4B8", VA = "0xE0D4B8")]
	public PowerUpSettings()
	{
	}
}
[Token(Token = "0x200013E")]
[CreateAssetMenu(menuName = "Data/Profile Settings")]
public class ProfileSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x200013F")]
	public struct OverallStats
	{
		[Serializable]
		[Token(Token = "0x2000140")]
		public struct ClutchSave
		{
			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Critical timer threshold (in seconds) to enter clutch mode")]
			public float criticalTimerThreshold;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Nominal timer threshold (in seconds) to complete (survive) clutch mode (should be higher than critical threshold)")]
			public float nominalTimerThreshold;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Time players need to get back to nominal in order to count a clutch save")]
			public float timeToGetToNominal;
		}

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float avgHitAccuracyWindow;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float avgDamagePerShotWindow;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float avgPointsPerShotWindow;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float avgPowershotUsageWindow;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float avgGravitySlingUsageWindow;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minNumShotsToCalcHitAccuracy;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClutchSave clutchSave;
	}

	[Serializable]
	[Token(Token = "0x2000141")]
	public struct Solo
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numIncompleteSetsToUnlockNextStage;
	}

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeoutToOfferOfflineMode;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OverallStats overallStats;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Solo solo;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string offlineFilename;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE0D99C", Offset = "0xE0D99C", VA = "0xE0D99C")]
	public ProfileSettings()
	{
	}
}
[Token(Token = "0x2000142")]
[CreateAssetMenu(menuName = "Data/Racket Configurations")]
public class RacketConfigurations : ScriptableObject
{
	[Token(Token = "0x2000143")]
	public enum Mode
	{
		[Token(Token = "0x40008F4")]
		Release,
		[Token(Token = "0x40008F5")]
		Debug
	}

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string multiplayerVersion;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mode mode;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Store/Social platform (or None for offline)")]
	public NativePlatformType nativePlatform;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Affects RNX platform and UNet backend selection")]
	public BackendSettings.Region region;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BuildType buildType;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Config assets")]
	public DebugSettings debug;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DebugSettings release;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ArcadesSettings arcades;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RNX.AudioSettings audio;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VideoSettings video;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UISettings UI;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ProfileSettings profile;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LeaderboardSettings leaderboard;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BackendSettings backend;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MultiplayerSettings multiplayer;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnalyticsSettings analytics;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EmailSettings email;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LocalizationSettings localization;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MedalsSettings medals;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PowerUpSettings powerUp;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AvatarSettings avatars;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnnouncerSettings announcer;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DemoSettings demo;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ItemsDefs itemsDefs;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ItemsSettings itemsSettings;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelEditorSettings levelEditorConfig;

	[Token(Token = "0x17000129")]
	public string versionText
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xE0DA20", Offset = "0xE0DA20", VA = "0xE0DA20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE0DA84", Offset = "0xE0DA84", VA = "0xE0DA84")]
	public RacketConfigurations()
	{
	}
}
[Token(Token = "0x2000144")]
[ExecuteInEditMode]
public class RacketSettings : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x2000145")]
	public class GeneralSettings
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float openingSequenceSpeed;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float restartSequenceSpeed;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float roomAssemblySpeed;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float roomDisassemblySpeed;

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xE112DC", Offset = "0xE112DC", VA = "0xE112DC")]
		public GeneralSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000146")]
	public class ScoreTextSettings
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Placement")]
		public float damageScoreDistFromHex;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float bossScoreDistFromCenter;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerupDistFromWall;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float toalDistFromWall;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Roll up animation")]
		public float rollUpAnimationAmount;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rollUpAnimationAmountBig;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rollUpAnimationDuration;

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xE112EC", Offset = "0xE112EC", VA = "0xE112EC")]
		public ScoreTextSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000147")]
	public class RoomSettings
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float defaultReflectionExposure;

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xE1131C", Offset = "0xE1131C", VA = "0xE1131C")]
		public RoomSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000148")]
	public class ScoreAndEnergy
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Damage PTS")]
		public int baseDamagePoints;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int eachDamageIncrease;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxDamagePoints;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Boss PTS")]
		public int bossRemovalPoints;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bossSingleShotBonus;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int doubleBossBonus;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int healingRemovalPoints;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int healingBonusPerDP;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int snakeRemovalPoints;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int hyperspeedBossBonus;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Energy")]
		public float energyFromBooster;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float energyFromDowner;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float energyFromTargetScale;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Header("Multiplayer")]
		public int downerPointsLost;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bossSingleShotBonusMP;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int doubleBossBonusMP;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxDamagePointsMP;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int lastTargetBonusMP;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int hyperspeedBossBonusMP;

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xE11324", Offset = "0xE11324", VA = "0xE11324")]
		public ScoreAndEnergy()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000149")]
	public class TimeScaleParams
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] steps;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scalePerStep;

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xE11380", Offset = "0xE11380", VA = "0xE11380")]
		public float GetScale(int value, out float progressToNextLevel, out bool lastLevel)
		{
			return default(float);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xE11458", Offset = "0xE11458", VA = "0xE11458")]
		public TimeScaleParams()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014A")]
	public class GamePlaySettings
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Diffculty")]
		[Tooltip("Initial timer amount")]
		public float globalTimerMaxValue;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Timer rate of descent per diff.\r\n2 - means timer depleats at twice the normal rate")]
		public AnimationCurve timerDifficultyCurve_Arcade;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The amount of time bonus required\r\nto generate a hael particle (score)")]
		public float timePerScorePoint;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Multiplayer Score")]
		[Tooltip("Score multiplier according to wave progress (drama escalataion)")]
		public AnimationCurve scoreRampUpPerWave_MP;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Multiplayer Best Of Three")]
		[Tooltip("(Unused) Max round time in seconds)")]
		[Obsolete]
		public float maxRoundTime;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Max wave time in seconds")]
		public float maxWaveTime;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Max wave time for last wave in seconds")]
		public float maxWaveTimeLastWave;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Shot clock time in seconds")]
		public float shotClock;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Shot clock time before the first hit in seconds")]
		public float startShotClock;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("T - this time for playing the beep sound")]
		public float shotCountWarningStart;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Array that contains all the streaks displayed to the player")]
		public int[] streakDisplayList;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Time scale")]
		public TimeScaleParams arcadeClassicTimeScale;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TimeScaleParams arcadeNightmareTimeScale;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimeScaleParams coOpTimeScale;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeScaleParams versusTimeScale;

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xE1146C", Offset = "0xE1146C", VA = "0xE1146C")]
		public GamePlaySettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014B")]
	public class BallModeSettings
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] Materials;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light BallLightSettings;

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xE11494", Offset = "0xE11494", VA = "0xE11494")]
		public BallModeSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014C")]
	public class Racket
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float colliderScale_MinSpeed;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float colliderScale_MaxSpeed;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float colliderScale_Scale;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float angularVelocitySpinFactor;

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xE1149C", Offset = "0xE1149C", VA = "0xE1149C")]
		public Racket()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014D")]
	public class BallSettings
	{
		[Serializable]
		[Token(Token = "0x200014E")]
		public class Power
		{
			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float minPowerShotSpeed;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxPowerShotSpeed;

			[Token(Token = "0x6000725")]
			[Address(RVA = "0xE11860", Offset = "0xE11860", VA = "0xE11860")]
			public Power()
			{
			}
		}

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Physics")]
		public float fastBallDamping;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _minDampedVelocity;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxVelocity;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floaterHitVelocity;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floaterHitVelocityCoOp;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float shieldReturnVelocity;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gravityFactor;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float awayFactor;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Racket Impact Control")]
		public float velocityFactor;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minTimeBetweenRacketHits;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float massRatio;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float racketFriction;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Spin Control")]
		public float _maxSpin;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float racketSpinFactor;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float racketSpinExponent;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float spinToVelocityFactor;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float spinDamping;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float maxDampingAtAngularVel;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Power shot")]
		public Power power;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Portal Entry")]
		public float disappearDuration;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float portalEntryForwardStrength;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float portalEntryCentricStrength;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float portalEntryAngularStrength;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float portalBaseDrag;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float portalAntiFleeDrag;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Visual Modes")]
		public BallModeSettings NormalMode;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BallModeSettings ImpactMode;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BallModeSettings IceChargeMode;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BallModeSettings RacketBrokenMode;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BallModeSettings NormalMode_P2;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BallModeSettings ImpactMode_P2;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BallModeSettings IceChargeMode_P2;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BallModeSettings RacketBrokenMode_P2;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Trigger Pull")]
		public float pullFactor;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float pullDamping;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float pullDampingFromBehind;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float pullSidewayDamping;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float pullSidewayDampingFromBehind;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float pullKeepDistanceK;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float pullVelocityTransferToBall;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float pullSpringTransferToBall;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float pullSpringTearTimer;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Header("Impact")]
		public float wallHitImpactFactor;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float lowRacketHitImpactFactor;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float highRacketHitImpactFactor;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float lowRacketHitValue;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float powerShotRacketHitImpactFactorMin;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float powerShotRacketHitImpactFactorMax;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float minImpactDuration;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float maxImpactDuration;

		[Token(Token = "0x1700015A")]
		public float minDampedVelocity
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xE114A4", Offset = "0xE114A4", VA = "0xE114A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015B")]
		public float currentVelocityFactor
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xE11590", Offset = "0xE11590", VA = "0xE11590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015C")]
		public float maxSpin
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xE1167C", Offset = "0xE1167C", VA = "0xE1167C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xE116A0", Offset = "0xE116A0", VA = "0xE116A0")]
		public BallModeSettings GetModeSettings(BallBlendedMaterial.BallVisualMode mode, bool player2 = false)
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xE117EC", Offset = "0xE117EC", VA = "0xE117EC")]
		public BallSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014F")]
	public class BrickSettings
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Surface")]
		public float[] distancesFromOutline;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Glow")]
		public HitLight hitLightPrefab_P1;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitLight hitLightPrefab_P2;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HitLight freezeHitLightPrefab;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BrickGlow.Params glowParamsP1;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BrickGlow.Params glowParamsP2;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BrickGlow.Params freezeGlowParams;

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xE11874", Offset = "0xE11874", VA = "0xE11874")]
		public BrickSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000150")]
	public class RippleSettings
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int initialCharge;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int initialDoubleCharge;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volumeReductionPerHex;

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xE1187C", Offset = "0xE1187C", VA = "0xE1187C")]
		public RippleSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000151")]
	public class PortalSettings
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Audio")]
		public float minDuration;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float exitSoundTimeBeforeEmergence;

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xE11898", Offset = "0xE11898", VA = "0xE11898")]
		public PortalSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000152")]
	public class ShieldSettings
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabledInArcade;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool enabledInCoOp;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space]
		public int staticTargetMinWave;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int snakeTargetMinWave;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int singleHexTargetMinWave;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int healingTargetMinWave;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space]
		public int initStep;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int finalStep;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int finalStepWave;

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xE118AC", Offset = "0xE118AC", VA = "0xE118AC")]
		public ShieldSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000153")]
	public class PowerShot
	{
		[Serializable]
		[Token(Token = "0x2000154")]
		public class PlowEffect
		{
			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject prefab;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeInTime;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float minSpedkMlt;

			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxSpedkMlt;

			[Token(Token = "0x600072B")]
			[Address(RVA = "0xE11900", Offset = "0xE11900", VA = "0xE11900")]
			public PlowEffect()
			{
			}
		}

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Params")]
		public float rotationStrength;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("Plow timer")]
		public float minPlowTime;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPlowTime;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		[Header("Plow timer loss")]
		public float plowEmptyEnergyLoss;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowTargetEnergyLoss;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowBoosterEnergyLoss;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowDownerEnergyLoss;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowSliderEnergyLoss;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowPostBlasterEnergyLoss_1st;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowPostBlasterEnergyLoss_2nd;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Plow params")]
		public float plowSpeed;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float plowExitSpeed;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlowEffect plowEffect;

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xE118DC", Offset = "0xE118DC", VA = "0xE118DC")]
		public PowerShot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000155")]
	public class SnapTurnSettings
	{
		[Token(Token = "0x2000156")]
		public enum TurnMode
		{
			[Token(Token = "0x40009A8")]
			Snap,
			[Token(Token = "0x40009A9")]
			Smooth
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TurnMode mode;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float angle;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Time it takes to smooth turn 90 degrees")]
		public float duration;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ball;

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xE1191C", Offset = "0xE1191C", VA = "0xE1191C")]
		public SnapTurnSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000157")]
	public class HapticSettings
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxImpactStrength;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDuration;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDuration;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minIntensity;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxIntensity;

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xE11938", Offset = "0xE11938", VA = "0xE11938")]
		public HapticSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000158")]
	public class LevelEditor
	{
		[Serializable]
		[Token(Token = "0x2000159")]
		public class Materials
		{
			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material empty;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material portal;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material bonus;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material bogus;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material boosterSwitch;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material staticTarget;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Material snakeHead;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material snakeTail;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Material disabled;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Material healing;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material slider;

			[Token(Token = "0x600072F")]
			[Address(RVA = "0xE119B4", Offset = "0xE119B4", VA = "0xE119B4")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Materials materials;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gutterImagePrefab;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture numbersTexture;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture hexTexture;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material hexExtrudedMat;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material hexKickerMat;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material hexBlasterMat;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material hexForceFieldMat;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float tileHeight;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 spacing;

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xE11954", Offset = "0xE11954", VA = "0xE11954")]
		public LevelEditor()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200015A")]
	public class Legal
	{
		[Serializable]
		[Token(Token = "0x200015B")]
		public class Keys
		{
			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string agreed;

			[Token(Token = "0x6000731")]
			[Address(RVA = "0xE119C4", Offset = "0xE119C4", VA = "0xE119C4")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Keys keys;

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xE119BC", Offset = "0xE119BC", VA = "0xE119BC")]
		public Legal()
		{
		}
	}

	[Token(Token = "0x200015C")]
	public struct RNX_Config
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool use_2nd_controller;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool spectating_camera_mode;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool disable_swoosh;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool disable_snap_turn;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool disable_song_skipping;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int personal_lobby_server_port;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ranked_lobby_server_port;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pin_lobby_server_port;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pin_locked_lobby_server_port;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool render_first_person_view;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float first_person_view_fov;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crop_player;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool show_player_proxy;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float body_radius;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float body_extension;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float arm_radius;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float arm_extension;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool disable_scorebar;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float players_distance;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dynamic_players_distance;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int delayed_mr_buffer_size;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int delayed_mr_frame_step;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool override_near_and_far;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool same_space_multiplayer;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string override_players_file;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool lan_enabled;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool lan_role_is_server;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string lan_server_hostname;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int lan_server_udp_port;

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xE11A1C", Offset = "0xE11A1C", VA = "0xE11A1C")]
		public void loadDefaults()
		{
		}
	}

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float Epsilon;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WAVE_CONTENT_CONFIG;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketConfigurations configuration;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RacketVersion _version;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static RacketVersion _multiplayerVersion;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header(" Debug ")]
	public bool enableAudioDemo;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GeneralSettings _general;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ScoreTextSettings _scoreText;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoomSettings _room;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScoreAndEnergy _scoreAndEnergy;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GamePlaySettings _gamePlay;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Racket _racket;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BallSettings _ball;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BrickSettings _brick;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RippleSettings _ripple;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PortalSettings _portal;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ShieldSettings _shield;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PowerShot _powerShot;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SnapTurnSettings _snapTurn;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HapticSettings _haptic;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LevelEditor _levelEditor;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Legal _legal;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _externalConfigFileName;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RNX_Config _externalConfig;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static RacketSettings inst_waveContent;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static RacketSettings inst;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool _needsToReadExternalConfig;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _UnscaledTimeID;

	[Token(Token = "0x1700012A")]
	public static string versionText
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xE0DA8C", Offset = "0xE0DA8C", VA = "0xE0DA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012B")]
	public static string multiplayerVersionText
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xE0DAF4", Offset = "0xE0DAF4", VA = "0xE0DAF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	private static string SegregatedMultiplayerVersion
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xE0DB9C", Offset = "0xE0DB9C", VA = "0xE0DB9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public static RacketVersion version
	{
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xE0DC9C", Offset = "0xE0DC9C", VA = "0xE0DC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public static RacketVersion multiplayerVersion
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xE0DD5C", Offset = "0xE0DD5C", VA = "0xE0DD5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public static RacketConfigurations.Mode mode
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xE0DE1C", Offset = "0xE0DE1C", VA = "0xE0DE1C")]
		get
		{
			return default(RacketConfigurations.Mode);
		}
	}

	[Token(Token = "0x17000130")]
	public static bool isDebugMode
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xE08694", Offset = "0xE08694", VA = "0xE08694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	public static bool isReleaseMode
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xE08620", Offset = "0xE08620", VA = "0xE08620")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public static DebugSettings debug
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xDFD0D8", Offset = "0xDFD0D8", VA = "0xDFD0D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public static BuildType buildType
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xE0E08C", Offset = "0xE0E08C", VA = "0xE0E08C")]
		get
		{
			return default(BuildType);
		}
	}

	[Token(Token = "0x17000134")]
	public static BackendSettings.Region region
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xE0A594", Offset = "0xE0A594", VA = "0xE0A594")]
		get
		{
			return default(BackendSettings.Region);
		}
	}

	[Token(Token = "0x17000135")]
	public static NativePlatformType nativePlatform
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xE0A344", Offset = "0xE0A344", VA = "0xE0A344")]
		get
		{
			return default(NativePlatformType);
		}
	}

	[Token(Token = "0x17000136")]
	public static ArcadesSettings arcades
	{
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xE0E0F8", Offset = "0xE0E0F8", VA = "0xE0E0F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	public static RNX.AudioSettings audio
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xE0E164", Offset = "0xE0E164", VA = "0xE0E164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public static VideoSettings video
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xE0E1D0", Offset = "0xE0E1D0", VA = "0xE0E1D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000139")]
	public static UISettings ui
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xE0E23C", Offset = "0xE0E23C", VA = "0xE0E23C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013A")]
	public static ProfileSettings profile
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xE0E2A8", Offset = "0xE0E2A8", VA = "0xE0E2A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static LeaderboardSettings leaderboard
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xE0E314", Offset = "0xE0E314", VA = "0xE0E314")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013C")]
	public static BackendSettings backend
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xE09920", Offset = "0xE09920", VA = "0xE09920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013D")]
	public static MultiplayerSettings multiplayer
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xE0E380", Offset = "0xE0E380", VA = "0xE0E380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013E")]
	public static AnalyticsSettings analytics
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xE0E3EC", Offset = "0xE0E3EC", VA = "0xE0E3EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	public static EmailSettings email
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xE0E458", Offset = "0xE0E458", VA = "0xE0E458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000140")]
	public static LocalizationSettings localization
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xE0E4C4", Offset = "0xE0E4C4", VA = "0xE0E4C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000141")]
	public static MedalsSettings medals
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xE0E530", Offset = "0xE0E530", VA = "0xE0E530")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	public static PowerUpSettings powerUp
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xE0E59C", Offset = "0xE0E59C", VA = "0xE0E59C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000143")]
	public static AvatarSettings avatars
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xE0C92C", Offset = "0xE0C92C", VA = "0xE0C92C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public static AnnouncerSettings announcer
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xE0E608", Offset = "0xE0E608", VA = "0xE0E608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public static DemoSettings demo
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xE0E674", Offset = "0xE0E674", VA = "0xE0E674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000146")]
	public static ItemsDefs itemsDefs
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xE0B1CC", Offset = "0xE0B1CC", VA = "0xE0B1CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000147")]
	public static ItemsSettings itemsSettings
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xE0E6E0", Offset = "0xE0E6E0", VA = "0xE0E6E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public static bool monthlyChallengesDisabled
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xE0E74C", Offset = "0xE0E74C", VA = "0xE0E74C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000149")]
	public static GeneralSettings general
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xE0E7D4", Offset = "0xE0E7D4", VA = "0xE0E7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014A")]
	public static ScoreTextSettings scoreText
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xE0E838", Offset = "0xE0E838", VA = "0xE0E838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014B")]
	public static RoomSettings room
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xE0E89C", Offset = "0xE0E89C", VA = "0xE0E89C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public static ScoreAndEnergy scoreAndEnergy
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xE0E900", Offset = "0xE0E900", VA = "0xE0E900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014D")]
	public static GamePlaySettings gamePlay
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xDFC254", Offset = "0xDFC254", VA = "0xDFC254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public static Racket racket
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xE0E964", Offset = "0xE0E964", VA = "0xE0E964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	public static BallSettings ball
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xDFD264", Offset = "0xDFD264", VA = "0xDFD264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public static BrickSettings brick
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xE0E9C8", Offset = "0xE0E9C8", VA = "0xE0E9C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000151")]
	public static RippleSettings ripple
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0xE0EA2C", Offset = "0xE0EA2C", VA = "0xE0EA2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public static PortalSettings portal
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE0EA90", Offset = "0xE0EA90", VA = "0xE0EA90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000153")]
	public static ShieldSettings shield
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE0EAF4", Offset = "0xE0EAF4", VA = "0xE0EAF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public static PowerShot powerShot
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE0EB58", Offset = "0xE0EB58", VA = "0xE0EB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000155")]
	public static SnapTurnSettings snapTurn
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xE0EBBC", Offset = "0xE0EBBC", VA = "0xE0EBBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public static HapticSettings haptic
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE0EC20", Offset = "0xE0EC20", VA = "0xE0EC20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000157")]
	public static LevelEditor levelEditor
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE0EC84", Offset = "0xE0EC84", VA = "0xE0EC84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000158")]
	public static Legal legal
	{
		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE0ED54", Offset = "0xE0ED54", VA = "0xE0ED54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000159")]
	public static RNX_Config externalConfig
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0xE0A9D0", Offset = "0xE0A9D0", VA = "0xE0A9D0")]
		get
		{
			return default(RNX_Config);
		}
	}

	[Token(Token = "0x1400000C")]
	public static event Action onExternalConfigUpdated
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0xE0F9A4", Offset = "0xE0F9A4", VA = "0xE0F9A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600070D")]
		[Address(RVA = "0xE0FA80", Offset = "0xE0FA80", VA = "0xE0FA80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xE0EDB8", Offset = "0xE0EDB8", VA = "0xE0EDB8")]
	private void readExternalConfig()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xE0DE88", Offset = "0xE0DE88", VA = "0xE0DE88")]
	private static void init()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xE0FB5C", Offset = "0xE0FB5C", VA = "0xE0FB5C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xE0FBA8", Offset = "0xE0FBA8", VA = "0xE0FBA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xE0FE54", Offset = "0xE0FE54", VA = "0xE0FE54")]
	private void SetCloudDiagnosticsMetaData()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xE10058", Offset = "0xE10058", VA = "0xE10058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xE10120", Offset = "0xE10120", VA = "0xE10120")]
	private static void onExternalConfigFileChanged(bool exists)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xE1017C", Offset = "0xE1017C", VA = "0xE1017C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xE1021C", Offset = "0xE1021C", VA = "0xE1021C")]
	public RacketSettings()
	{
	}
}
[Token(Token = "0x200015D")]
[CreateAssetMenu(menuName = "Data/UI Configuration", fileName = "UI Configuration")]
public class UISettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x200015E")]
	public class PlayerHeight
	{
		[Serializable]
		[Token(Token = "0x200015F")]
		public class RelativeHeights
		{
			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("The position of the head-mounted display relative to the player height")]
			public float hmd;

			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float eye;

			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float chest;

			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float pelvis;

			[Token(Token = "0x6000735")]
			[Address(RVA = "0xE11B3C", Offset = "0xE11B3C", VA = "0xE11B3C")]
			public RelativeHeights()
			{
			}
		}

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RelativeHeights relativeHeights;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Initial period when no data is collected")]
		public float initialDelay;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Measurment time window")]
		public float historyDuration;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Measurment interval - the lower the more accurate")]
		public float measureInterval;

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xE11B20", Offset = "0xE11B20", VA = "0xE11B20")]
		public PlayerHeight()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000160")]
	public class Controller
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 raycastOriginOffset;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float raycastBackStart;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lengthStartRoom;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lengthMainMenu;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lengthPlayerProfile;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lengthTutorial;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lengthLevelEditor;

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xE11B50", Offset = "0xE11B50", VA = "0xE11B50")]
		public Controller()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000161")]
	public class Area
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float focusArcDegrees;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xE11B78", Offset = "0xE11B78", VA = "0xE11B78")]
		public Area()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000162")]
	public class MainMenu
	{
		[Serializable]
		[Token(Token = "0x2000163")]
		public class Transition
		{
			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Smooth times: 1) between Hidden and Idle, 2) between Idle and Highlit and 3) between Highlit and Selected.")]
			public float[] smoothTimes;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float minSmoothTime;

			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float hideSpeedFactor;

			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxSpeed;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float interactableEpsilon;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float nearlyDoneEpsilon;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float doneEpsilon;

			[Token(Token = "0x6000739")]
			[Address(RVA = "0xE11B9C", Offset = "0xE11B9C", VA = "0xE11B9C")]
			public Transition()
			{
			}
		}

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transition transition;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Distance of sounds coming from distant celestial bodies (main menu items)")]
		public float farSoundDistance;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float areaShowDelay;

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xE11B88", Offset = "0xE11B88", VA = "0xE11B88")]
		public MainMenu()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000164")]
	public class Haptic
	{
		[Serializable]
		[Token(Token = "0x2000165")]
		public class Intensities
		{
			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hover;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[Range(100f, 3999f)]
			public ushort unhover;

			[Token(Token = "0x600073B")]
			[Address(RVA = "0xE11BCC", Offset = "0xE11BCC", VA = "0xE11BCC")]
			public Intensities()
			{
			}
		}

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Intensities intensities;

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xE11BC4", Offset = "0xE11BC4", VA = "0xE11BC4")]
		public Haptic()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000166")]
	public class BallCounter
	{
		[Serializable]
		[Token(Token = "0x2000167")]
		public class Active
		{
			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float smoothTime;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float decayStart;

			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float decayDuration;

			[Token(Token = "0x600073D")]
			[Address(RVA = "0xE11BE8", Offset = "0xE11BE8", VA = "0xE11BE8")]
			public Active()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000168")]
		public class Hits
		{
			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float increase;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float decayDuration;

			[Token(Token = "0x600073E")]
			[Address(RVA = "0xE11C08", Offset = "0xE11C08", VA = "0xE11C08")]
			public Hits()
			{
			}
		}

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Active active;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hits hits;

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xE11BE0", Offset = "0xE11BE0", VA = "0xE11BE0")]
		public BallCounter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000169")]
	public class LocalizedTexts
	{
		[Serializable]
		[Token(Token = "0x200016A")]
		public class PlayerLevels
		{
			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString noLevel;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString unrated;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString noob;

			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString underdog;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString risingStar;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString baller;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString master;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString racketLord;

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString ballBuster;

			[Token(Token = "0x6000740")]
			[Address(RVA = "0xE11C20", Offset = "0xE11C20", VA = "0xE11C20")]
			public PlayerLevels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016B")]
		public class PlayerStatuses
		{
			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString unknown;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString offline;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString notInRacket_Online;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString notInRacket_Away;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString notInRacket_Busy;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString inMenus;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString playingSolo;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString playingArcade;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString playingMultiplayer;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public LocalizedString playingCustomSet;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public LocalizedString editingCustomSet;

			[Token(Token = "0x6000741")]
			[Address(RVA = "0xE11C28", Offset = "0xE11C28", VA = "0xE11C28")]
			public PlayerStatuses()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016C")]
		public class Options
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString settings;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString howToPlay;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString restart;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString forfeit;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString zenFinish;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString mainMenu;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString skipTutorial;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString edit;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString browse;

			[Token(Token = "0x6000742")]
			[Address(RVA = "0xE11C30", Offset = "0xE11C30", VA = "0xE11C30")]
			public Options()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016D")]
		public class MultiplayerDesc
		{
			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString offline;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString tempOffline;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString unsupportedMultiplayerVersion;

			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString newSeason;

			[Token(Token = "0x6000743")]
			[Address(RVA = "0xE11C38", Offset = "0xE11C38", VA = "0xE11C38")]
			public MultiplayerDesc()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016E")]
		public class InGame
		{
			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString shot;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString oneShot;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString forceField;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString tooFast;

			[Token(Token = "0x6000744")]
			[Address(RVA = "0xE11C40", Offset = "0xE11C40", VA = "0xE11C40")]
			public InGame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016F")]
		public class Months
		{
			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString[] full;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedString[] abbr;

			[Token(Token = "0x6000745")]
			[Address(RVA = "0xE11C48", Offset = "0xE11C48", VA = "0xE11C48")]
			public Months()
			{
			}
		}

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerLevels playerLevels;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerStatuses playerStatuses;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Options options;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MultiplayerDesc multiplayerDesc;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InGame inGame;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Months months;

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xE11C18", Offset = "0xE11C18", VA = "0xE11C18")]
		public LocalizedTexts()
		{
		}
	}

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerHeight playerHeight;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller controller;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Area area;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clickCoolDown;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float popUpSafetyDisabledPeriod;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MainMenu mainMenu;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Haptic haptic;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Where the visual trigger moves when squeezed")]
	public Vector3 triggerPressDirection;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BallCounter ballCounter;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LocalizedTexts localizedTexts;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xE11AFC", Offset = "0xE11AFC", VA = "0xE11AFC")]
	public UISettings()
	{
	}
}
[Token(Token = "0x2000170")]
[CreateAssetMenu(menuName = "Data/Video Settings")]
public class VideoSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000171")]
	public struct PlatformSettings
	{
		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AntiAliasing.Mode antiAliasing;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SuperSampling.Mode superSampling;
	}

	[Serializable]
	[Token(Token = "0x2000172")]
	public class Keys
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string antiAliasing;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string renderScale;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string streamCamera;

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xE11C74", Offset = "0xE11C74", VA = "0xE11C74")]
		public Keys()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlatformSettings PCDefaultSettings;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlatformSettings questFixedSettings;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlatformSettings quest2FixedSettings;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlatformSettings psvrFixedSettings;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlatformSettings iqiyiFixedSettings;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Keys keys;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xE11C50", Offset = "0xE11C50", VA = "0xE11C50")]
	public VideoSettings()
	{
	}
}
[Token(Token = "0x2000173")]
public class LevelDeserializer : LevelSerializerBase
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _text;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly object _tempBuilder_lock;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _tempBuilder;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xE11D1C", Offset = "0xE11D1C", VA = "0xE11D1C")]
	public LevelDeserializer(string text)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xE12144", Offset = "0xE12144", VA = "0xE12144")]
	public char GetChar(IntVector2 coords, int row, int col)
	{
		return default(char);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xE1220C", Offset = "0xE1220C", VA = "0xE1220C")]
	public string GetString(IntVector2 coords, int row, int col, int size)
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xE12488", Offset = "0xE12488", VA = "0xE12488")]
	public string GetRow(IntVector2 coords, int row, int leftTrim = 0, int rightTrim = 0)
	{
		return null;
	}
}
[Token(Token = "0x2000174")]
public class LevelSerializer : LevelSerializerBase
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private StringBuilder _outputBuilder;

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xE1263C", Offset = "0xE1263C", VA = "0xE1263C")]
	public LevelSerializer()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xE126E0", Offset = "0xE126E0", VA = "0xE126E0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xE12700", Offset = "0xE12700", VA = "0xE12700")]
	public void SetChar(IntVector2 coords, int row, int col, char ch)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xE127D0", Offset = "0xE127D0", VA = "0xE127D0")]
	public void WriteString(IntVector2 coords, int row, int col, string text)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xE12858", Offset = "0xE12858", VA = "0xE12858")]
	public void WriteStringCentered(IntVector2 coords, int row, int shift, string text)
	{
	}
}
[Token(Token = "0x2000175")]
public class LevelSerializerBase
{
	[Token(Token = "0x2000176")]
	protected class PsyfasData
	{
		[Token(Token = "0x2000177")]
		public struct Range
		{
			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int start;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int count;
		}

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string cleanText;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<IntVector2, Range[]> rangesByCoords;

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE12AF8", Offset = "0xE12AF8", VA = "0xE12AF8")]
		public PsyfasData()
		{
		}
	}

	[Token(Token = "0x4000A4E")]
	private const string psyfasResName = "psyfas";

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string _resourcesDir;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static PsyfasData _psyfasData;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xE11D58", Offset = "0xE11D58", VA = "0xE11D58")]
	protected static void InitPsyfasData()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xE12920", Offset = "0xE12920", VA = "0xE12920")]
	private static int[] FindLineStarts(string text)
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xE124D4", Offset = "0xE124D4", VA = "0xE124D4")]
	protected int GetRowWidth(IntVector2 coords, int row)
	{
		return default(int);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xE11D50", Offset = "0xE11D50", VA = "0xE11D50")]
	public LevelSerializerBase()
	{
	}
}
[Token(Token = "0x2000179")]
public class WaveSetPacker : CratePacker
{
	[Token(Token = "0x600075A")]
	[Address(RVA = "0xE12B94", Offset = "0xE12B94", VA = "0xE12B94", Slot = "4")]
	public override void Pack(BuiltCrate crate)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xE13160", Offset = "0xE13160", VA = "0xE13160")]
	private static string SerializeWaveSet(WaveSet waveSet)
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xE131F8", Offset = "0xE131F8", VA = "0xE131F8")]
	private static string SerializeWave(WaveHandcrafted wave)
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xE134A8", Offset = "0xE134A8", VA = "0xE134A8")]
	private static string SerializeLevel(IEnumerable<IBrick> bricks)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xE13A34", Offset = "0xE13A34", VA = "0xE13A34")]
	private static void SerializeBrickHextrusion(LevelSerializer serializer, IntVector2 coords, IBrick brick)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xE13C10", Offset = "0xE13C10", VA = "0xE13C10")]
	private static string SerializeBrickTypeAndID(IBrick brick)
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xE13EFC", Offset = "0xE13EFC", VA = "0xE13EFC")]
	public WaveSetPacker()
	{
	}
}
[Token(Token = "0x200017A")]
public static class WaveSetUnpacker
{
	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DownloadedCrate crate;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Queue<string> resultQueue;

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xE156B8", Offset = "0xE156B8", VA = "0xE156B8")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xE156C0", Offset = "0xE156C0", VA = "0xE156C0")]
		internal void <UnpackCo>b__0()
		{
		}
	}

	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <UnpackCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DownloadedCrate crate;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveSet waveSet;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass6_0 <>8__1;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<WaveSet> onDone;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<string> onError;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0xE15A88", Offset = "0xE15A88", VA = "0xE15A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0xE15AD0", Offset = "0xE15AD0", VA = "0xE15AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xE141A4", Offset = "0xE141A4", VA = "0xE141A4")]
		[DebuggerHidden]
		public <UnpackCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xE156D0", Offset = "0xE156D0", VA = "0xE156D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xE156D4", Offset = "0xE156D4", VA = "0xE156D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xE15A90", Offset = "0xE15A90", VA = "0xE15A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<char, HexTrudeManager.WallType> _inverseWallTypeChars;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, BrickType> _inverseNonTargetTypeStrings;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<char, BrickType> _inverseTargetTypeChars;

	[Token(Token = "0x6000761")]
	public static Dictionary<TValue, TKey> Reverse<TKey, TValue>(this IDictionary<TKey, TValue> source)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xE13F04", Offset = "0xE13F04", VA = "0xE13F04")]
	private static void Init()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xE140AC", Offset = "0xE140AC", VA = "0xE140AC")]
	public static void Unpack(MonoBehaviour surrogate, DownloadedCrate crate, Action<WaveSet> onDone, Action<string> onError, [Optional] WaveSet waveSet)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xE140E4", Offset = "0xE140E4", VA = "0xE140E4")]
	[IteratorStateMachine(typeof(<UnpackCo>d__6))]
	private static IEnumerator UnpackCo(DownloadedCrate crate, Action<WaveSet> onDone, Action<string> onError, [Optional] WaveSet waveSet)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xE141CC", Offset = "0xE141CC", VA = "0xE141CC")]
	private static void UnpackWaves(DownloadedCrate crate, WaveSet waveSet)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xE1448C", Offset = "0xE1448C", VA = "0xE1448C")]
	private static void UnpackThread(DownloadedCrate crate, WaveSet waveSet, Queue<string> resultQueue)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xE143E0", Offset = "0xE143E0", VA = "0xE143E0")]
	public static int GetNumWaves(DownloadedCrate crate)
	{
		return default(int);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xE14C5C", Offset = "0xE14C5C", VA = "0xE14C5C")]
	private static void DeserializeWaveSet(WaveSet waveSet, string json)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xE14CE0", Offset = "0xE14CE0", VA = "0xE14CE0")]
	private static void DeserializeWave(WaveHandcrafted wave, string json)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xE14E80", Offset = "0xE14E80", VA = "0xE14E80")]
	private static void DeserializeLevel(RuntimeBrick[] levelBricks, string text)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xE1533C", Offset = "0xE1533C", VA = "0xE1533C")]
	private static void DeserializeLevelNonRuntime(LevelBrick[] levelBricks, string text)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xE154C8", Offset = "0xE154C8", VA = "0xE154C8")]
	private static void DeserializeBrickHextrusionLevelBrick(LevelBrick brick, char hextrusionChar)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xE1558C", Offset = "0xE1558C", VA = "0xE1558C")]
	private static void DeserializeBrickTypeAndIDLevelBrick(LevelBrick brick, string text)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xE15060", Offset = "0xE15060", VA = "0xE15060")]
	private static void DeserializeBrickHextrusion(ref RuntimeBrick brick, char hextrusionChar)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xE15134", Offset = "0xE15134", VA = "0xE15134")]
	private static void DeserializeBrickTypeAndID(ref RuntimeBrick brick, string text)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xE1526C", Offset = "0xE1526C", VA = "0xE1526C")]
	private static bool DeserializeBrickForceField(string text)
	{
		return default(bool);
	}
}
[Token(Token = "0x200017D")]
public class DebugArrowVis : MonoBehaviour
{
	[Token(Token = "0x200017E")]
	[CompilerGenerated]
	private sealed class <EndOfFrameUpdate>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugArrowVis <>4__this;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <waitFormEnd>5__2;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0xE15F10", Offset = "0xE15F10", VA = "0xE15F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xE15F58", Offset = "0xE15F58", VA = "0xE15F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xE15E18", Offset = "0xE15E18", VA = "0xE15E18")]
		[DebuggerHidden]
		public <EndOfFrameUpdate>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xE15E48", Offset = "0xE15E48", VA = "0xE15E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xE15E4C", Offset = "0xE15E4C", VA = "0xE15E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xE15F18", Offset = "0xE15F18", VA = "0xE15F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugArrowVis inst;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _AutoHide;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xE15AD8", Offset = "0xE15AD8", VA = "0xE15AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xE15BF4", Offset = "0xE15BF4", VA = "0xE15BF4")]
	public void Show(Vector3 pos, Vector3 arrow, bool bAutoHide = true)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xE15B80", Offset = "0xE15B80", VA = "0xE15B80")]
	[IteratorStateMachine(typeof(<EndOfFrameUpdate>d__4))]
	private IEnumerator EndOfFrameUpdate()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xE15B50", Offset = "0xE15B50", VA = "0xE15B50")]
	public void Hide()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xE15E40", Offset = "0xE15E40", VA = "0xE15E40")]
	public DebugArrowVis()
	{
	}
}
[Token(Token = "0x200017F")]
public class DebugHUD : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	[CompilerGenerated]
	private sealed class <LinePeriod>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugHUD <>4__this;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xE162DC", Offset = "0xE162DC", VA = "0xE162DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xE16324", Offset = "0xE16324", VA = "0xE16324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xE16228", Offset = "0xE16228", VA = "0xE16228")]
		[DebuggerHidden]
		public <LinePeriod>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xE16258", Offset = "0xE16258", VA = "0xE16258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xE1625C", Offset = "0xE1625C", VA = "0xE1625C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xE162E4", Offset = "0xE162E4", VA = "0xE162E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugHUD inst;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text m_DebugText;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iFrameCounter;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xE15F60", Offset = "0xE15F60", VA = "0xE15F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xE16038", Offset = "0xE16038", VA = "0xE16038")]
	public void AddLine(string line)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xE1611C", Offset = "0xE1611C", VA = "0xE1611C")]
	public void AddLine(string line, float duration)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xE161DC", Offset = "0xE161DC", VA = "0xE161DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xE1613C", Offset = "0xE1613C", VA = "0xE1613C")]
	[IteratorStateMachine(typeof(<LinePeriod>d__7))]
	private IEnumerator LinePeriod(string text, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xE16250", Offset = "0xE16250", VA = "0xE16250")]
	public DebugHUD()
	{
	}
}
[Token(Token = "0x2000181")]
public class Mirror : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resolution;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _headCamera;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera _mirrorCamera;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh _mesh;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] _uv;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xE1632C", Offset = "0xE1632C", VA = "0xE1632C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xE16528", Offset = "0xE16528", VA = "0xE16528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xE16970", Offset = "0xE16970", VA = "0xE16970")]
	public Mirror()
	{
	}
}
[Token(Token = "0x2000182")]
public class HexTile : MonoBehaviour, IEquatable<HexTile>, IComparable<HexTile>
{
	[Token(Token = "0x2000183")]
	public enum HexDirection
	{
		[Token(Token = "0x4000A8E")]
		Top,
		[Token(Token = "0x4000A8F")]
		TopRight,
		[Token(Token = "0x4000A90")]
		BottomRight,
		[Token(Token = "0x4000A91")]
		Bottom,
		[Token(Token = "0x4000A92")]
		BottomLeft,
		[Token(Token = "0x4000A93")]
		TopLeft,
		[Token(Token = "0x4000A94")]
		Count,
		[Token(Token = "0x4000A95")]
		Invalid
	}

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IntVector2 coords;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int _numNeighbors;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _numBrickNeighbors;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HexTile[] _neighborHexes;

	[NonSerialized]
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 originalPos;

	[NonSerialized]
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 targetPos;

	[NonSerialized]
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 prevPos;

	[NonSerialized]
	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<WallText> _attachedWallTexts;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Brick[] _brickNeighbors;

	[NonSerialized]
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform _surfaceObj;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh _mesh;

	[NonSerialized]
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int uvDepthIndex;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Brick _brick;

	[NonSerialized]
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HexTrudeManager.Hex _hextrudeHex;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] _cachedUV2;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Vector3> _cachedUVList3;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _vertexCount;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UVMap _uvMap;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UVMapFusion _staticFuseMapper;

	[Token(Token = "0x4000A8C")]
	private const float dontCare = 0.12345f;

	[Token(Token = "0x17000163")]
	public Brick[] brickNeighbors
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0xE16980", Offset = "0xE16980", VA = "0xE16980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000164")]
	public Mesh surfaceMesh
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0xE16C14", Offset = "0xE16C14", VA = "0xE16C14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public UVMap uvMap
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xE16C1C", Offset = "0xE16C1C", VA = "0xE16C1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xE16B5C", Offset = "0xE16B5C", VA = "0xE16B5C")]
	public bool isNeighbor(HexTile otherHex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xE16C24", Offset = "0xE16C24", VA = "0xE16C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xE16CAC", Offset = "0xE16CAC", VA = "0xE16CAC")]
	public void init()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xE17370", Offset = "0xE17370", VA = "0xE17370")]
	public static bool isCoordDisabledInMultiplayer(IntVector2 coords)
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xE16E18", Offset = "0xE16E18", VA = "0xE16E18")]
	private void initSurfaceObj()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xE17148", Offset = "0xE17148", VA = "0xE17148")]
	private void UVMapSingleHex()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xE174A4", Offset = "0xE174A4", VA = "0xE174A4")]
	private void applyHexUvMap()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xE175AC", Offset = "0xE175AC", VA = "0xE175AC")]
	private void applyFusionUvMap()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xE171E4", Offset = "0xE171E4", VA = "0xE171E4")]
	public void ApplyHexPortalUvMap()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE176A8", Offset = "0xE176A8", VA = "0xE176A8")]
	private float[] getDistancesFromFushionOutline(float minDist, float maxDist)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE177A4", Offset = "0xE177A4", VA = "0xE177A4")]
	public static HexDirection oppositeDirection(HexDirection dir)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE177CC", Offset = "0xE177CC", VA = "0xE177CC")]
	public static HexDirection mirrorDirection(HexDirection dir)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE177E4", Offset = "0xE177E4", VA = "0xE177E4")]
	private static bool isOppositeDirections(HexDirection dir1, HexDirection dir2)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE1786C", Offset = "0xE1786C", VA = "0xE1786C")]
	private static float[] calculateSnakeMapping(HexTile tile, HexDirection prevDir, HexDirection nextDir)
	{
		return null;
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE17F88", Offset = "0xE17F88", VA = "0xE17F88")]
	public static void UVMapHexChain(List<HexTile> hexChain, bool reversed, HexTile prevHexTile)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE18370", Offset = "0xE18370", VA = "0xE18370")]
	public static void UVMapHexList(List<HexTile> hexList, bool apply = true)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE18FE8", Offset = "0xE18FE8", VA = "0xE18FE8")]
	public void RestoreUVMap()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE17F4C", Offset = "0xE17F4C", VA = "0xE17F4C")]
	public HexTile GetNeighborTile(HexDirection dir)
	{
		return null;
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE18CFC", Offset = "0xE18CFC", VA = "0xE18CFC")]
	public HexDirection GetNeighborDir(HexTile hex)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE18FEC", Offset = "0xE18FEC", VA = "0xE18FEC")]
	public void Init()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xE1913C", Offset = "0xE1913C", VA = "0xE1913C")]
	public static void RemoveHexesFromListWithNeighbors(List<HexTile> srcList, List<HexTile> removeList, int degree)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE19318", Offset = "0xE19318", VA = "0xE19318")]
	public static void RemoveHexesFromListWithNeighbors(List<HexTile> srcList, HexTile[] removeList, int degree)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE19454", Offset = "0xE19454", VA = "0xE19454")]
	private Color getColorByIndex(int index)
	{
		return default(Color);
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE19498", Offset = "0xE19498", VA = "0xE19498")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE1970C", Offset = "0xE1970C", VA = "0xE1970C", Slot = "4")]
	public bool Equals(HexTile other)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE19774", Offset = "0xE19774", VA = "0xE19774", Slot = "5")]
	public int CompareTo(HexTile other)
	{
		return default(int);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE197C0", Offset = "0xE197C0", VA = "0xE197C0")]
	public HexTile()
	{
	}
}
[Token(Token = "0x2000184")]
public class HitLight : MonoBehaviour
{
	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer closeGlow;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer farGlow;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _transform;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _mpbClose;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock _mpbFar;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _closeMat;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _farMat;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _highLightClose;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color _highLightFar;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _timer;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _duration;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _initialized;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _prefabInitialized;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _colorID;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HitLight _prefab;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE19A14", Offset = "0xE19A14", VA = "0xE19A14")]
	public static HitLight allocate(HitLight prefab, Vector3 pos, float duration)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE19D88", Offset = "0xE19D88", VA = "0xE19D88")]
	private void start(Vector3 pos, float duration)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE19EA4", Offset = "0xE19EA4", VA = "0xE19EA4")]
	private void blend()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE19BDC", Offset = "0xE19BDC", VA = "0xE19BDC")]
	private void initPrefab()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE19CC0", Offset = "0xE19CC0", VA = "0xE19CC0")]
	private void init()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE19FAC", Offset = "0xE19FAC", VA = "0xE19FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE1A02C", Offset = "0xE1A02C", VA = "0xE1A02C")]
	public HitLight()
	{
	}
}
[Token(Token = "0x2000185")]
public interface IBallCollisionResponse
{
	[Token(Token = "0x60007B9")]
	void OnCollisionWithBall(Ball ball, Collision col_info);
}
[Token(Token = "0x2000186")]
public static class MeshEdges
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[,] isEdge;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool[,] isEdgeOutline;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE1A034", Offset = "0xE1A034", VA = "0xE1A034")]
	public static void init(Mesh mesh)
	{
	}
}
[Token(Token = "0x2000187")]
public class PlowableSurface : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum Type
	{
		[Token(Token = "0x4000AAC")]
		Floor,
		[Token(Token = "0x4000AAD")]
		Ceiling,
		[Token(Token = "0x4000AAE")]
		Brick
	}

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool _canStartPlowing;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool _isPlowable;

	[Token(Token = "0x17000166")]
	public bool canStartPlowing
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xE1A378", Offset = "0xE1A378", VA = "0xE1A378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	public bool canPlowInto
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xE1A398", Offset = "0xE1A398", VA = "0xE1A398")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE1A3A0", Offset = "0xE1A3A0", VA = "0xE1A3A0")]
	public PlowableSurface()
	{
	}
}
[Token(Token = "0x2000189")]
public class PullRail : MonoBehaviour
{
	[Token(Token = "0x200018A")]
	private struct PointData
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE1ADBC", Offset = "0xE1ADBC", VA = "0xE1ADBC")]
		public PointData(BezierPoint point)
		{
		}
	}

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BezierCurve _path;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierCurve[] _allPaths;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _startSpeed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _endSpeed;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _pathStartParam;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _pathEndParam;

	[NonSerialized]
	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _timeInRail;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _easeInWindow;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pullDamping;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pullForce;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _chargeStart;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _chargeEnd;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _slowMotionStart;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _slowMotionPeak;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _slowMotionEnd;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _slowMotionAmount;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Materials")]
	public Material _OffMaterial;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material _X1Material;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material _X2Material;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _WithBallMaterial;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _chargeAmountID;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material _currentMaterial;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer _railMesh;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Ball _ballOnRail;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PullRail primary;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PointData[] _initData;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _gutterEnabled;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _doubleCharge;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _currentMat;

	[Token(Token = "0x17000168")]
	public Transform gutterRootTransform
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xE1A3B8", Offset = "0xE1A3B8", VA = "0xE1A3B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	public Ball ballOnRail
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xE1A3D8", Offset = "0xE1A3D8", VA = "0xE1A3D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public bool IsEnabled
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE1B7F0", Offset = "0xE1B7F0", VA = "0xE1B7F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xE1A5BC", Offset = "0xE1A5BC", VA = "0xE1A5BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xE1A788", Offset = "0xE1A788", VA = "0xE1A788")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xE1A8DC", Offset = "0xE1A8DC", VA = "0xE1A8DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE1A9E4", Offset = "0xE1A9E4", VA = "0xE1A9E4")]
	private void onGameInitialized()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE1A550", Offset = "0xE1A550", VA = "0xE1A550")]
	private void BallLeftRail()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xE1A9E8", Offset = "0xE1A9E8", VA = "0xE1A9E8")]
	private void OffsetPathCurrentPlayer(bool toOtherPlayer = false)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE1AE20", Offset = "0xE1AE20", VA = "0xE1AE20")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xE1AE4C", Offset = "0xE1AE4C", VA = "0xE1AE4C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xE1B318", Offset = "0xE1B318", VA = "0xE1B318")]
	public static void EnterClosestGutter(Ball ball)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xE1B624", Offset = "0xE1B624", VA = "0xE1B624")]
	private void NormalizeCurveHeight(bool opponent)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xE1B04C", Offset = "0xE1B04C", VA = "0xE1B04C")]
	public void EnterGutter(Ball ball, bool opponentGutter = false)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xE1B7F8", Offset = "0xE1B7F8", VA = "0xE1B7F8")]
	public int GetChargeCount()
	{
		return default(int);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xE1B87C", Offset = "0xE1B87C", VA = "0xE1B87C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xE1BBF4", Offset = "0xE1BBF4", VA = "0xE1BBF4")]
	private float ResampleParam(float fParam)
	{
		return default(float);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xE1BC1C", Offset = "0xE1BC1C", VA = "0xE1BC1C")]
	public Vector3 SamplePosition(float fParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xE1B49C", Offset = "0xE1B49C", VA = "0xE1B49C")]
	public float FindClosestParam_Approx(Vector3 position, out float closestDistance, float step = 0.05f)
	{
		return default(float);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xE1BC38", Offset = "0xE1BC38", VA = "0xE1BC38")]
	public int GetNumPaths_Edtior()
	{
		return default(int);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xE1BC98", Offset = "0xE1BC98", VA = "0xE1BC98")]
	public bool GetPathVisible_Editor(int nPath)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xE1BD68", Offset = "0xE1BD68", VA = "0xE1BD68")]
	public Vector3 SamplePosition_Editor(int nPath, float fParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xE1BE9C", Offset = "0xE1BE9C", VA = "0xE1BE9C")]
	public float SampleSpeed(float fParam)
	{
		return default(float);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xE1BEDC", Offset = "0xE1BEDC", VA = "0xE1BEDC")]
	public PullRail()
	{
	}
}
[Token(Token = "0x200018B")]
public class UVMap
{
	[Token(Token = "0x200018C")]
	[CompilerGenerated]
	private sealed class <neighborsByMesh>d__10 : IEnumerable<UVMapVertex>, IEnumerable, IEnumerator<UVMapVertex>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UVMapVertex <>2__current;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UVMapVertex vertex;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UVMapVertex <>3__vertex;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UVMap <>4__this;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <v>5__2;

		[Token(Token = "0x1700016B")]
		private UVMapVertex System.Collections.Generic.IEnumerator<UVMapVertex>.Current
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xE1E010", Offset = "0xE1E010", VA = "0xE1E010", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xE1E058", Offset = "0xE1E058", VA = "0xE1E058", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xE1D408", Offset = "0xE1D408", VA = "0xE1D408")]
		[DebuggerHidden]
		public <neighborsByMesh>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xE1DEF4", Offset = "0xE1DEF4", VA = "0xE1DEF4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xE1DEF8", Offset = "0xE1DEF8", VA = "0xE1DEF8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xE1E018", Offset = "0xE1E018", VA = "0xE1E018", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xE1E060", Offset = "0xE1E060", VA = "0xE1E060", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<UVMapVertex> System.Collections.Generic.IEnumerable<UVMapVertex>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xE1E11C", Offset = "0xE1E11C", VA = "0xE1E11C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UVMapVertex[] _vertices;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UVMapVertex[] _canonicalVertices;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTile _hexTile;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UVMapVertex> _cachedVertList;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Queue<UVMapVertex> _verticesToDo;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xE17394", Offset = "0xE17394", VA = "0xE17394")]
	public UVMap(Mesh mesh, Transform transform, HexTile hexTile)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xE1CAB4", Offset = "0xE1CAB4", VA = "0xE1CAB4")]
	private void canonizeVerts(Transform transform)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xE1BF0C", Offset = "0xE1BF0C", VA = "0xE1BF0C")]
	private void initVertices(Mesh mesh, Transform transform)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xE1C0B8", Offset = "0xE1C0B8", VA = "0xE1C0B8")]
	private List<UVMapVertex> getEdgeVertices(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xE1C34C", Offset = "0xE1C34C", VA = "0xE1C34C")]
	private void calcOrderFromOutline(IEnumerable<UVMapVertex> edgeVertices)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xE1D368", Offset = "0xE1D368", VA = "0xE1D368")]
	[IteratorStateMachine(typeof(<neighborsByMesh>d__10))]
	private IEnumerable<UVMapVertex> neighborsByMesh(UVMapVertex vertex)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xE1CA24", Offset = "0xE1CA24", VA = "0xE1CA24")]
	private void getDistancesFromOutlineByVertexColor(Mesh mesh)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xE1CA9C", Offset = "0xE1CA9C", VA = "0xE1CA9C")]
	private void createEdges()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xE1D43C", Offset = "0xE1D43C", VA = "0xE1D43C")]
	private void createEdgesBetweenSameOrder()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xE1D7FC", Offset = "0xE1D7FC", VA = "0xE1D7FC")]
	private void createEdgesBetweenAdjacentOrders()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xE1DC88", Offset = "0xE1DC88", VA = "0xE1DC88")]
	public void removeWeldEdges()
	{
	}
}
[Token(Token = "0x200018D")]
public class UVMapEdge
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UVMapVertex _vertex0;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UVMapVertex _vertex1;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _distance;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _isWeld;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool _isWeldedToAnotherEdge;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _inPool;

	[Token(Token = "0x4000AE0")]
	private const int _edgePoolSizeIncrease = 128;

	[Token(Token = "0x4000AE1")]
	private const int _edgePoolStartSize = 65536;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<UVMapEdge> _edgePool;

	[Token(Token = "0x1700016D")]
	public bool isFusionOutline
	{
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xE1E6A4", Offset = "0xE1E6A4", VA = "0xE1E6A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xE1E120", Offset = "0xE1E120", VA = "0xE1E120")]
	public static void initPreallocatedPool()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xE1E170", Offset = "0xE1E170", VA = "0xE1E170")]
	private static void fillPreallocatedPool(int size)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xE1E234", Offset = "0xE1E234", VA = "0xE1E234")]
	public static UVMapEdge allocate()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xE1DC10", Offset = "0xE1DC10", VA = "0xE1DC10")]
	public static void connect(UVMapVertex vertex0, UVMapVertex vertex1, float distance)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xE1E3CC", Offset = "0xE1E3CC", VA = "0xE1E3CC")]
	public static void connect(UVMapVertex vertex0, UVMapVertex vertex1)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xE1E300", Offset = "0xE1E300", VA = "0xE1E300")]
	protected static void connect(UVMapVertex vertex0, UVMapVertex vertex1, float distance, bool isWeld)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xE1E4BC", Offset = "0xE1E4BC", VA = "0xE1E4BC")]
	public void destroy()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xE1E628", Offset = "0xE1E628", VA = "0xE1E628")]
	public UVMapVertex getOtherVertex(UVMapVertex vertex)
	{
		return null;
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xE1E6E8", Offset = "0xE1E6E8", VA = "0xE1E6E8")]
	private bool isWeldedToAnotherEdge()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xE1E22C", Offset = "0xE1E22C", VA = "0xE1E22C")]
	public UVMapEdge()
	{
	}
}
[Token(Token = "0x200018E")]
public class UVMapFusion
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<UVMap> _uvMaps;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Queue<UVMapVertex> _cachedVertQueue;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<UVMapVertex> _cachedVertList;

	[Token(Token = "0x4000AE6")]
	private const float worldDistanceEpsilon = 0.2f;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xE198B8", Offset = "0xE198B8", VA = "0xE198B8")]
	public UVMapFusion()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xE1EBEC", Offset = "0xE1EBEC", VA = "0xE1EBEC")]
	public UVMapFusion(List<UVMap> uvMaps)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xE18FC0", Offset = "0xE18FC0", VA = "0xE18FC0")]
	public void DoMapping()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xE18DB0", Offset = "0xE18DB0", VA = "0xE18DB0")]
	public void loadDistancesFromFusionOutline(float[] savedUVs, float minDist, float maxDist)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xE1F3A4", Offset = "0xE1F3A4", VA = "0xE1F3A4")]
	public float[] getDistancesFromFushionOutline()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xE1EDD0", Offset = "0xE1EDD0", VA = "0xE1EDD0")]
	private void fuseAll()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xE1ED48", Offset = "0xE1ED48", VA = "0xE1ED48")]
	private void unfuseAll()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xE1F668", Offset = "0xE1F668", VA = "0xE1F668")]
	public void fuseUvMaps(UVMap uvMap1, UVMap uvMap2)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xE1F800", Offset = "0xE1F800", VA = "0xE1F800")]
	public void unfuseUvMap(UVMap uvMap)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xE1EED4", Offset = "0xE1EED4", VA = "0xE1EED4")]
	private void calcDistancesFromOutline()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xE1F250", Offset = "0xE1F250", VA = "0xE1F250")]
	private void normalizeDistancesFromOutline()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xE1F814", Offset = "0xE1F814", VA = "0xE1F814")]
	private List<UVMapVertex> getEdgeVertices()
	{
		return null;
	}
}
[Token(Token = "0x200018F")]
public class UVMapVertex
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int _index;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int _canonicalIndex;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _worldPosition;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int _orderFromOutline;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _distanceFromOutline;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _distanceFromFusionOutline;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _v;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HashSet<UVMapEdge> _edges;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HashSet<UVMapEdge> _weldEdges;

	[Token(Token = "0x1700016E")]
	public bool isFusionOutline
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0xE1F9AC", Offset = "0xE1F9AC", VA = "0xE1F9AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xE1D270", Offset = "0xE1D270", VA = "0xE1D270")]
	public UVMapVertex(int index, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xE1E438", Offset = "0xE1E438", VA = "0xE1E438")]
	public void addEdge(UVMapEdge edge)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xE1E598", Offset = "0xE1E598", VA = "0xE1E598")]
	public void removeEdge(UVMapEdge edge)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xE1DCE4", Offset = "0xE1DCE4", VA = "0xE1DCE4")]
	public void removeWeldEdges()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xE1E9D0", Offset = "0xE1E9D0", VA = "0xE1E9D0")]
	public bool isVertexNeighbor(UVMapVertex otherVertex)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000190")]
public class FloaterBehaviour_OrbitAround : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000191")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float factor;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public OneHumus.Math.FloatRange radiusRange;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OneHumus.Math.FloatRange horizontalSpeedRange;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public OneHumus.Math.FloatRange verticalAmplitudeRange;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OneHumus.Math.FloatRange radialAmplitudeRange;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public OneHumus.Math.FloatRange loopDurationRange;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public OneHumus.Math.FloatRange phaseOffsetRange;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public OneHumus.Math.FloatRange angularVelocityRange;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xE1FF6C", Offset = "0xE1FF6C", VA = "0xE1FF6C")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _horizontalSpeed;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _verticalAmplitude;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _radialAmplitude;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _loopDuration;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _phaseOffset;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _baseVertAngle;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _baseRadius;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _angularAxis;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _angularSpeed;

	[Token(Token = "0x1700016F")]
	protected override IConfig config
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0xE1FB1C", Offset = "0xE1FB1C", VA = "0xE1FB1C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0xE1FB24", Offset = "0xE1FB24", VA = "0xE1FB24", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xE1FBD0", Offset = "0xE1FBD0", VA = "0xE1FBD0", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xE1FD14", Offset = "0xE1FD14", VA = "0xE1FD14", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xE1FD7C", Offset = "0xE1FD7C", VA = "0xE1FD7C", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xE1FDE4", Offset = "0xE1FDE4", VA = "0xE1FDE4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xE1FEFC", Offset = "0xE1FEFC", VA = "0xE1FEFC")]
	public FloaterBehaviour_OrbitAround()
	{
	}
}
[Token(Token = "0x2000192")]
public class FloaterBehaviour_Random : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000193")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Allowed Area")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OneHumus.Math.FloatRange distanceRange;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Move Params")]
		public OneHumus.Math.FloatRange stayDurationRange;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OneHumus.Math.FloatRange moveVerticalRange;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OneHumus.Math.FloatRange moveHorizontalRange;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OneHumus.Math.FloatRange moveDistanceRange;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool keepMovingHorizontally;

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xE2049C", Offset = "0xE2049C", VA = "0xE2049C")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000B04")]
	private const float awayFromPsyfasSpeed = 3f;

	[Token(Token = "0x4000B05")]
	private const float maxLateralSpeed = 3f;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float curStayDuration;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float curStayTimer;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _sign;

	[Token(Token = "0x17000170")]
	protected override IConfig config
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xE1FF7C", Offset = "0xE1FF7C", VA = "0xE1FF7C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000812")]
		[Address(RVA = "0xE1FF84", Offset = "0xE1FF84", VA = "0xE1FF84", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xE20030", Offset = "0xE20030", VA = "0xE20030", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xE20080", Offset = "0xE20080", VA = "0xE20080", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xE20140", Offset = "0xE20140", VA = "0xE20140", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xE20164", Offset = "0xE20164", VA = "0xE20164")]
	private static Vector3 getPositionOnTarget(Target target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xE202C0", Offset = "0xE202C0", VA = "0xE202C0", Slot = "14")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xE20438", Offset = "0xE20438", VA = "0xE20438")]
	public FloaterBehaviour_Random()
	{
	}
}
[Token(Token = "0x2000194")]
public class FloaterBehaviour_Sinusoid : FloaterBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FloaterData_Sinusoid sinusoidData;

	[Token(Token = "0x4000B13")]
	private const float updateTxInterval = 0.1f;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OneHumus.Math.FloatRange _angleRange;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _alpha;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _targetRadius;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _orbitSpeed;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _swingSpeed;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _speedMultiplier;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _timeSinceLastUpdateTx;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xE204AC", Offset = "0xE204AC", VA = "0xE204AC", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xE211B8", Offset = "0xE211B8", VA = "0xE211B8", Slot = "14")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xE21420", Offset = "0xE21420", VA = "0xE21420")]
	public FloaterBehaviour_Sinusoid()
	{
	}
}
[Token(Token = "0x2000195")]
public class FloaterBehaviour_Static : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000196")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float radius;

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xE216D8", Offset = "0xE216D8", VA = "0xE216D8")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x17000171")]
	protected override IConfig config
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xE2148C", Offset = "0xE2148C", VA = "0xE2148C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xE21494", Offset = "0xE21494", VA = "0xE21494", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xE21540", Offset = "0xE21540", VA = "0xE21540", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xE215A8", Offset = "0xE215A8", VA = "0xE215A8", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xE21610", Offset = "0xE21610", VA = "0xE21610", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xE21678", Offset = "0xE21678", VA = "0xE21678")]
	public FloaterBehaviour_Static()
	{
	}
}
[Token(Token = "0x2000197")]
public class DamageCounter
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> _damageHistory;

	[Token(Token = "0x4000B20")]
	private const int maxHistory = 30;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xE216E8", Offset = "0xE216E8", VA = "0xE216E8")]
	public DamageCounter()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xE21980", Offset = "0xE21980", VA = "0xE21980")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xE21A24", Offset = "0xE21A24", VA = "0xE21A24")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xE21ACC", Offset = "0xE21ACC", VA = "0xE21ACC")]
	private void onTargetHit(Target target)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xE21BA4", Offset = "0xE21BA4", VA = "0xE21BA4")]
	private void onTargetDamaged(Target target)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xE21C40", Offset = "0xE21C40", VA = "0xE21C40")]
	private void onTargetHealed(Target target)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xE21CDC", Offset = "0xE21CDC", VA = "0xE21CDC")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xE21D5C", Offset = "0xE21D5C", VA = "0xE21D5C")]
	public int GetNumTurnsWithoutProgress()
	{
		return default(int);
	}
}
[Token(Token = "0x2000198")]
[CreateAssetMenu(menuName = "Data/Floater Data/Follow")]
public class FloaterData_Follow : UpdatableData
{
	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spring;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float drag;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angularDrag;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float torque;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float initAngularSpeed;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xE21EB8", Offset = "0xE21EB8", VA = "0xE21EB8")]
	public FloaterData_Follow()
	{
	}
}
[Token(Token = "0x2000199")]
[CreateAssetMenu(menuName = "Data/Floater Data/Sinusoid")]
public class FloaterData_Sinusoid : UpdatableData
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Range of speed rotating around the dome")]
	public OneHumus.Math.FloatRange orbitalSpeed;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Range of speed moving up and down")]
	public OneHumus.Math.FloatRange swingSpeed;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Range of vertical angle relative to Room center")]
	public OneHumus.Math.FloatRange verticalRange;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Range of orbit radius")]
	public OneHumus.Math.FloatRange radiusRange;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Range of amplitude angle")]
	public OneHumus.Math.FloatRange angleRange;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float initSpeedMultiplier;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xE21ED4", Offset = "0xE21ED4", VA = "0xE21ED4")]
	public FloaterData_Sinusoid()
	{
	}
}
[Token(Token = "0x200019A")]
public class Floater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200019B")]
	public struct Objects
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform armOrigin;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform armEndPoint;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform physicsTarget;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform floater;
	}

	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <blinkCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reveal;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Floater <>4__this;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scale;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool hide;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x1700017C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0xE2401C", Offset = "0xE2401C", VA = "0xE2401C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xE24064", Offset = "0xE24064", VA = "0xE24064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xE22C3C", Offset = "0xE22C3C", VA = "0xE22C3C")]
		[DebuggerHidden]
		public <blinkCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xE23D78", Offset = "0xE23D78", VA = "0xE23D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xE23D7C", Offset = "0xE23D7C", VA = "0xE23D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xE24024", Offset = "0xE24024", VA = "0xE24024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <onTimeOutCo>d__66 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x1700017E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0xE24214", Offset = "0xE24214", VA = "0xE24214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xE2425C", Offset = "0xE2425C", VA = "0xE2425C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xE22DF8", Offset = "0xE22DF8", VA = "0xE22DF8")]
		[DebuggerHidden]
		public <onTimeOutCo>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xE240C0", Offset = "0xE240C0", VA = "0xE240C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xE240C4", Offset = "0xE240C4", VA = "0xE240C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xE2421C", Offset = "0xE2421C", VA = "0xE2421C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[CompilerGenerated]
	private sealed class <keepAliveCo>d__68 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x17000180")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xE24464", Offset = "0xE24464", VA = "0xE24464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xE244AC", Offset = "0xE244AC", VA = "0xE244AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xE22E30", Offset = "0xE22E30", VA = "0xE22E30")]
		[DebuggerHidden]
		public <keepAliveCo>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xE242B8", Offset = "0xE242B8", VA = "0xE242B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xE242BC", Offset = "0xE242BC", VA = "0xE242BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xE2446C", Offset = "0xE2446C", VA = "0xE2446C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[CompilerGenerated]
	private sealed class <selfDestructCo>d__75 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform <iconTransform>5__2;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__3;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <hasColor>5__4;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__5;

		[Token(Token = "0x17000182")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xE24A24", Offset = "0xE24A24", VA = "0xE24A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xE24A6C", Offset = "0xE24A6C", VA = "0xE24A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xE2359C", Offset = "0xE2359C", VA = "0xE2359C")]
		[DebuggerHidden]
		public <selfDestructCo>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE24508", Offset = "0xE24508", VA = "0xE24508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xE2450C", Offset = "0xE2450C", VA = "0xE2450C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xE24A2C", Offset = "0xE24A2C", VA = "0xE24A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <disableColliderForTime>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000184")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xE24BA0", Offset = "0xE24BA0", VA = "0xE24BA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xE24BE8", Offset = "0xE24BE8", VA = "0xE24BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xE235C4", Offset = "0xE235C4", VA = "0xE235C4")]
		[DebuggerHidden]
		public <disableColliderForTime>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xE24AC8", Offset = "0xE24AC8", VA = "0xE24AC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xE24ACC", Offset = "0xE24ACC", VA = "0xE24ACC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xE24BA8", Offset = "0xE24BA8", VA = "0xE24BA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Objects objects;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOwner;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BasePowerup _powerup;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FloaterBehaviour _behaviour;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _targetRigidbody;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BasePowerup powerupPrefab;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color dustColor;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color particleA;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color particleB;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _editorButtonPrefab;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject _editorButton;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider _collider;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _timedOut;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _destroyed;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _showing;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material insideMaterial;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public SyncGameEvents.FloaterSpawnEvent _syncGameEvents_SpawnEvent;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public SyncGameEvents.FloaterHitEvent _syncGameEvents_HitEvent;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public SyncGameEvents.FloaterUpdateEvent _syncGameEvents_UpdateEvent;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public SyncGameEvents.FloaterTimeOutEvent _syncGameEvents_TimeOutEvent;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Transform _icon;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Renderer _iconRenderer;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected MaterialPropertyBlock _iconMPB;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Renderer _flare;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MaterialPropertyBlock _flareMPB;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _PhaseID;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _ColorID;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _iconOriginalPos;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion _iconOriginalRot;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 _iconOriginalScale;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Color _iconOriginalColor;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform _iconOriginalParent;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CoroutineHandle _blinckCo;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private CoroutineHandle? _selfDestructCoroutine;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 _initModelScale;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform _modelParent;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string _coroutineTag;

	[Token(Token = "0x17000172")]
	public uint id
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0xE21EE4", Offset = "0xE21EE4", VA = "0xE21EE4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000173")]
	public bool isOwner
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0xE21F64", Offset = "0xE21F64", VA = "0xE21F64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public virtual bool isUnknown
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0xE21F6C", Offset = "0xE21F6C", VA = "0xE21F6C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000175")]
	public virtual PowerupType powerupType
	{
		[Token(Token = "0x6000831")]
		[Address(RVA = "0xE21F74", Offset = "0xE21F74", VA = "0xE21F74", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x17000176")]
	public BasePowerup powerup
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0xE21F94", Offset = "0xE21F94", VA = "0xE21F94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000177")]
	public FloaterBehaviour behaviour
	{
		[Token(Token = "0x6000833")]
		[Address(RVA = "0xE21F9C", Offset = "0xE21F9C", VA = "0xE21F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public Rigidbody targetRigidbody
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0xE21FA4", Offset = "0xE21FA4", VA = "0xE21FA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000179")]
	public bool timedOut
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0xE221A0", Offset = "0xE221A0", VA = "0xE221A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017A")]
	public bool Destroyed
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0xE221A8", Offset = "0xE221A8", VA = "0xE221A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017B")]
	public bool Showing
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xE221B0", Offset = "0xE221B0", VA = "0xE221B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xE21FAC", Offset = "0xE21FAC", VA = "0xE21FAC")]
	private void InitEditorButton()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xE221B8", Offset = "0xE221B8", VA = "0xE221B8", Slot = "6")]
	public virtual void init(uint id, bool isOwner)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xE22780", Offset = "0xE22780", VA = "0xE22780", Slot = "7")]
	public virtual void deinit()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xE22A68", Offset = "0xE22A68", VA = "0xE22A68")]
	private void RemoveFloater(GameEndReason reason)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xE22B90", Offset = "0xE22B90", VA = "0xE22B90")]
	private void RemoveFloater(string waveName, int waveID)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xE2263C", Offset = "0xE2263C", VA = "0xE2263C")]
	private void blink(float duration, float scale, bool reveal = false, bool hide = false)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xE22B94", Offset = "0xE22B94", VA = "0xE22B94")]
	[IteratorStateMachine(typeof(<blinkCo>d__60))]
	private IEnumerator<float> blinkCo(float duration, float scale, bool reveal = false, bool hide = false)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xE22C64", Offset = "0xE22C64", VA = "0xE22C64")]
	public void initPosition()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xE22C84", Offset = "0xE22C84", VA = "0xE22C84")]
	public void initPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xE22CA4", Offset = "0xE22CA4", VA = "0xE22CA4")]
	public void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xE22CDC", Offset = "0xE22CDC", VA = "0xE22CDC")]
	public void onHitFromNetwork(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xE22A6C", Offset = "0xE22A6C", VA = "0xE22A6C")]
	public void onTimeOut()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xE22D84", Offset = "0xE22D84", VA = "0xE22D84")]
	[IteratorStateMachine(typeof(<onTimeOutCo>d__66))]
	private IEnumerator<float> onTimeOutCo()
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xE22E20", Offset = "0xE22E20", VA = "0xE22E20")]
	public void onTimeOutFromNetwork(SyncGameEvents.FloaterTimeOutEvent floaterTimeOutEvent)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xE225C8", Offset = "0xE225C8", VA = "0xE225C8")]
	[IteratorStateMachine(typeof(<keepAliveCo>d__68))]
	private IEnumerator<float> keepAliveCo()
	{
		return null;
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xE22E58", Offset = "0xE22E58", VA = "0xE22E58")]
	public void onHit(Vector3 hitPos, Ball ball)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xE22FEC", Offset = "0xE22FEC", VA = "0xE22FEC", Slot = "8")]
	protected virtual void selfDestruct()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xE23274", Offset = "0xE23274", VA = "0xE23274", Slot = "9")]
	protected virtual void InitIconDefaults()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xE233B8", Offset = "0xE233B8", VA = "0xE233B8", Slot = "10")]
	protected virtual void RestoreIconDefaults()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xE2351C", Offset = "0xE2351C", VA = "0xE2351C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xE2311C", Offset = "0xE2311C", VA = "0xE2311C")]
	[IteratorStateMachine(typeof(<selfDestructCo>d__75))]
	private IEnumerator<float> selfDestructCo()
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xE23190", Offset = "0xE23190", VA = "0xE23190")]
	private void selfDestructImmediate()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xE22544", Offset = "0xE22544", VA = "0xE22544")]
	[IteratorStateMachine(typeof(<disableColliderForTime>d__77))]
	private IEnumerator<float> disableColliderForTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xE235EC", Offset = "0xE235EC", VA = "0xE235EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xE23C50", Offset = "0xE23C50", VA = "0xE23C50")]
	public Floater()
	{
	}
}
[Token(Token = "0x20001A1")]
public abstract class FloaterBehaviour : MonoBehaviour
{
	[Token(Token = "0x20001A2")]
	public interface IConfig
	{
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloaterData_Follow followData;

	[Token(Token = "0x4000B6F")]
	private const float dragFadeInTime = 1f;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Floater _floater;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float _initTime;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float _horizAngle;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _vertAngle;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _radius;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Rigidbody _rigidbody;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpringJoint _spring;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _rotationFollowMultiplier;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<HexTile> _visibleHexTiles;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _lastFloaterSpawnFrame;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _debugInit;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _debugLastRigidbodyPos;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _debugLastTargetPos;

	[Token(Token = "0x17000186")]
	public float horizAngle
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xE24C44", Offset = "0xE24C44", VA = "0xE24C44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000187")]
	public float vertAngle
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0xE24C4C", Offset = "0xE24C4C", VA = "0xE24C4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000188")]
	public float radius
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0xE24C54", Offset = "0xE24C54", VA = "0xE24C54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000189")]
	public Rigidbody rigidbody
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xE24C5C", Offset = "0xE24C5C", VA = "0xE24C5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018A")]
	protected virtual IConfig config
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xE24D74", Offset = "0xE24D74", VA = "0xE24D74", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xE24D7C", Offset = "0xE24D7C", VA = "0xE24D7C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE24C64", Offset = "0xE24C64", VA = "0xE24C64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE24D80", Offset = "0xE24D80", VA = "0xE24D80", Slot = "6")]
	protected virtual void cloneParams(FloaterBehaviour other)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE24D84", Offset = "0xE24D84", VA = "0xE24D84", Slot = "7")]
	public virtual void init(Floater floater)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE20698", Offset = "0xE20698", VA = "0xE20698", Slot = "8")]
	public virtual void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE24E34", Offset = "0xE24E34", VA = "0xE24E34", Slot = "9")]
	public virtual void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xE24EF4", Offset = "0xE24EF4", VA = "0xE24EF4", Slot = "10")]
	public virtual void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xE24F18", Offset = "0xE24F18", VA = "0xE24F18", Slot = "11")]
	protected virtual void setPosition(float horizAngle, float vertAngle, float radius)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xE24F2C", Offset = "0xE24F2C", VA = "0xE24F2C", Slot = "12")]
	protected virtual void updatePosition()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xE24F84", Offset = "0xE24F84", VA = "0xE24F84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xE251D8", Offset = "0xE251D8", VA = "0xE251D8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xE25270", Offset = "0xE25270", VA = "0xE25270", Slot = "13")]
	protected virtual void onHit(Vector3 hitPos, Ball ball)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xE25290", Offset = "0xE25290", VA = "0xE25290")]
	private void debugUpdate()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xE213AC", Offset = "0xE213AC", VA = "0xE213AC", Slot = "14")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xE25494", Offset = "0xE25494", VA = "0xE25494")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xE1FF5C", Offset = "0xE1FF5C", VA = "0xE1FF5C")]
	protected FloaterBehaviour()
	{
	}
}
[Token(Token = "0x20001A3")]
public class FloaterExplosion : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	[CompilerGenerated]
	private sealed class <explodeCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloaterExplosion <>4__this;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700018B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xE27320", Offset = "0xE27320", VA = "0xE27320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xE27368", Offset = "0xE27368", VA = "0xE27368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xE26E08", Offset = "0xE26E08", VA = "0xE26E08")]
		[DebuggerHidden]
		public <explodeCo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xE270C8", Offset = "0xE270C8", VA = "0xE270C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xE270CC", Offset = "0xE270CC", VA = "0xE270CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xE27328", Offset = "0xE27328", VA = "0xE27328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer fracture;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem dust;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem glitter;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _ColorAID;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _ColorBID;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _TimeOffsetID;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _HitPosID;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _SpecVec1ID;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _SpecVec2ID;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _Spec1ColorID;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int _Spec2ColorID;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int _CornerAddID;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static FloaterExplosion _prefab;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _fractureMat;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xE26820", Offset = "0xE26820", VA = "0xE26820")]
	public static void createExplosion(Floater floater, Vector3 hitPos, Vector3 hitVelocity)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xE2694C", Offset = "0xE2694C", VA = "0xE2694C")]
	private void explode(Vector3 hitPos, Vector3 hitVelocity, Floater floater)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xE26D94", Offset = "0xE26D94", VA = "0xE26D94")]
	[IteratorStateMachine(typeof(<explodeCo>d__17))]
	private IEnumerator<float> explodeCo(Vector3 hitPos, Vector3 hitVelocity)
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xE26E30", Offset = "0xE26E30", VA = "0xE26E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xE270B8", Offset = "0xE270B8", VA = "0xE270B8")]
	public FloaterExplosion()
	{
	}
}
[Token(Token = "0x20001A5")]
public class Floaters : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class ArenaParams
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform center;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xE28B60", Offset = "0xE28B60", VA = "0xE28B60")]
		public ArenaParams()
		{
		}
	}

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Floaters inst;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float keepAliveSFXPeriod;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Floater[] floaterPrefabs;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Floater unknownFloaterPrefab;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArenaParams arena;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debug;

	[NonSerialized]
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool disabled;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<PowerupType, Floater> _floaterPrefabsByType;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Floater> _floaters;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<uint, BasePowerup> _powerups;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static uint _nextUnusedFloaterID;

	[Token(Token = "0x1700018D")]
	public List<Floater> CurrentFloaters
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0xE273C4", Offset = "0xE273C4", VA = "0xE273C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xE273CC", Offset = "0xE273CC", VA = "0xE273CC")]
	public Floater GetFloaterPrefabByPowerupType(PowerupType type)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xE27424", Offset = "0xE27424", VA = "0xE27424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xE2762C", Offset = "0xE2762C", VA = "0xE2762C")]
	private void onNewArenaChosen()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xE2768C", Offset = "0xE2768C", VA = "0xE2768C")]
	public void onFloaterDone(Floater floater)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xE27758", Offset = "0xE27758", VA = "0xE27758")]
	public void onFloaterDoneNoErrorLog(Floater floater)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xE2781C", Offset = "0xE2781C", VA = "0xE2781C")]
	public void onPowerupDone(BasePowerup powerup)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xE27944", Offset = "0xE27944", VA = "0xE27944")]
	public void ClearAllFloaters()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xE27A90", Offset = "0xE27A90", VA = "0xE27A90")]
	public void RemoveFloater(Floater floater)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xE27B1C", Offset = "0xE27B1C", VA = "0xE27B1C")]
	public Floater spawnFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xE27C38", Offset = "0xE27C38", VA = "0xE27C38")]
	protected Floater instantiateFloater(PowerupType powerupType, uint floaterId, bool isOwner, bool isUnknown)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xE28120", Offset = "0xE28120", VA = "0xE28120")]
	public Floater spawn(PowerupType powerupType, bool displayAsUnknown)
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xE28348", Offset = "0xE28348", VA = "0xE28348")]
	public void onRxFloaterSpawnEvent(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xE28464", Offset = "0xE28464", VA = "0xE28464")]
	public void onRxFloaterUpdateEvent(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xE28510", Offset = "0xE28510", VA = "0xE28510")]
	public void onRxFloaterHitEvent(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xE2868C", Offset = "0xE2868C", VA = "0xE2868C")]
	public void onRxFloaterTimeOutEvent(SyncGameEvents.FloaterTimeOutEvent floaterTimeOutEvent)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xE28858", Offset = "0xE28858", VA = "0xE28858")]
	public void onRxPowerupRemovedEvent(SyncGameEvents.PowerupRemovedEvent powerupRemovedEvent)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE28A20", Offset = "0xE28A20", VA = "0xE28A20")]
	public Floaters()
	{
	}
}
[Token(Token = "0x20001A7")]
public class PowerupInjector : MonoBehaviour
{
	[Token(Token = "0x20001A8")]
	public struct PowerUpEvent
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PowerupType type;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool displayAsUnknown;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int delay;
	}

	[Token(Token = "0x20001A9")]
	[CompilerGenerated]
	private sealed class <showInitialPowerups>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupInjector <>4__this;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private PowerUpEvent <powerUp>5__3;

		[Token(Token = "0x1700018F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xE2AD98", Offset = "0xE2AD98", VA = "0xE2AD98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xE2ADE0", Offset = "0xE2ADE0", VA = "0xE2ADE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xE2A320", Offset = "0xE2A320", VA = "0xE2A320")]
		[DebuggerHidden]
		public <showInitialPowerups>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xE2AC24", Offset = "0xE2AC24", VA = "0xE2AC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xE2AC28", Offset = "0xE2AC28", VA = "0xE2AC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xE2ADA0", Offset = "0xE2ADA0", VA = "0xE2ADA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <monitorRescuePowerup>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupInjector <>4__this;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnergyArena <arena>5__2;

		[Token(Token = "0x17000191")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0xE2B33C", Offset = "0xE2B33C", VA = "0xE2B33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xE2B384", Offset = "0xE2B384", VA = "0xE2B384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xE2A9D8", Offset = "0xE2A9D8", VA = "0xE2A9D8")]
		[DebuggerHidden]
		public <monitorRescuePowerup>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xE2AE3C", Offset = "0xE2AE3C", VA = "0xE2AE3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xE2AE40", Offset = "0xE2AE40", VA = "0xE2AE40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xE2B344", Offset = "0xE2B344", VA = "0xE2B344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PowerupInjector inst;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FairChance _powerUpAppearChance;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FairChance _powerUpUnknownChance;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveHandcrafted _wave;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CoroutineHandle _showInitialPowerupsCo;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CoroutineHandle _monitorRescuePowerupCo;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PowerUpSettings.PowerupTypeAndProbability> _relevantPowerUps;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IEnumerable<float> _availableWeights;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<PowerUpEvent> _powerUps;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _turnCount;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DamageCounter _damageCounter;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _rescueCooldown;

	[Token(Token = "0x1700018E")]
	private PowerUpSettings.Params CurParams
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xE28EEC", Offset = "0xE28EEC", VA = "0xE28EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE28B68", Offset = "0xE28B68", VA = "0xE28B68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE2909C", Offset = "0xE2909C", VA = "0xE2909C")]
	private void onGameStarted()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE290DC", Offset = "0xE290DC", VA = "0xE290DC")]
	public void onWaveShow(WaveHandcrafted wave)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE2A2A8", Offset = "0xE2A2A8", VA = "0xE2A2A8")]
	private void stopTheShow()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE2A310", Offset = "0xE2A310", VA = "0xE2A310")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE2A234", Offset = "0xE2A234", VA = "0xE2A234")]
	[IteratorStateMachine(typeof(<showInitialPowerups>d__20))]
	private IEnumerator<float> showInitialPowerups()
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE2974C", Offset = "0xE2974C", VA = "0xE2974C")]
	private void generateFirstPowerUp()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE2A650", Offset = "0xE2A650", VA = "0xE2A650")]
	private void setFairChanceFrequency(FairChance fairChance, PowerUpSettings.Params.RangeCurve gapRanges, float progress)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE29FDC", Offset = "0xE29FDC", VA = "0xE29FDC")]
	private void generateRescuePowerUp()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE2A964", Offset = "0xE2A964", VA = "0xE2A964")]
	[IteratorStateMachine(typeof(<monitorRescuePowerup>d__24))]
	private IEnumerator<float> monitorRescuePowerup()
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE2A348", Offset = "0xE2A348", VA = "0xE2A348")]
	private void findRelevantPowerUps(bool isRescue)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE2AA00", Offset = "0xE2AA00", VA = "0xE2AA00")]
	private bool isPowerUpExcludedByWave(PowerupType powerUpType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE2AA90", Offset = "0xE2AA90", VA = "0xE2AA90")]
	private bool isPowerUpAllowedAsRescue(PowerupType powerUpType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE2AB44", Offset = "0xE2AB44", VA = "0xE2AB44")]
	public PowerupInjector()
	{
	}
}
[Token(Token = "0x20001AC")]
public class UnknownFloater : Floater
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[ReorderableList]
	[Header("Unknowns")]
	public PowerupType[] powerups;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[ReorderableList]
	public GameObject[] powerupIcons;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject unknownIcon;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Transform powerupIcon;

	[Token(Token = "0x17000193")]
	public override bool isUnknown
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xE2B470", Offset = "0xE2B470", VA = "0xE2B470", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public PowerupType actualPowerupType
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xE2B478", Offset = "0xE2B478", VA = "0xE2B478")]
		[CompilerGenerated]
		get
		{
			return default(PowerupType);
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xE2B480", Offset = "0xE2B480", VA = "0xE2B480")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE27EE4", Offset = "0xE27EE4", VA = "0xE27EE4")]
	public void SetActualPowerup(PowerupType ptype)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE2B488", Offset = "0xE2B488", VA = "0xE2B488", Slot = "8")]
	protected override void selfDestruct()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE2B570", Offset = "0xE2B570", VA = "0xE2B570", Slot = "7")]
	public override void deinit()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE2B620", Offset = "0xE2B620", VA = "0xE2B620")]
	public UnknownFloater()
	{
	}
}
[Token(Token = "0x20001AD")]
public class BallSwitchEffect : MonoBehaviour
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material player1Material;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material player2Material;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _material;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _time;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _phaseID;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _scale;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE2B628", Offset = "0xE2B628", VA = "0xE2B628")]
	public void doit(bool oppositeColor = false, float scaleFactor = 1f)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE2B790", Offset = "0xE2B790", VA = "0xE2B790")]
	private void stop()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE2B7CC", Offset = "0xE2B7CC", VA = "0xE2B7CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xE2B8FC", Offset = "0xE2B8FC", VA = "0xE2B8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xE2BA04", Offset = "0xE2BA04", VA = "0xE2BA04")]
	public BallSwitchEffect()
	{
	}
}
[Token(Token = "0x20001AE")]
public class HyperspaceSphere : MonoBehaviour
{
	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HyperspaceSphere inst;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeDuration;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _bg;

	[Token(Token = "0x17000195")]
	public bool isActive
	{
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xE2BA14", Offset = "0xE2BA14", VA = "0xE2BA14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xE2BA30", Offset = "0xE2BA30", VA = "0xE2BA30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xE2BAC0", Offset = "0xE2BAC0", VA = "0xE2BAC0")]
	public void show()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xE2BD08", Offset = "0xE2BD08", VA = "0xE2BD08")]
	public void hide()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xE2BAF0", Offset = "0xE2BAF0", VA = "0xE2BAF0")]
	private void toggle(bool fadeInElseOut)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xE2BE50", Offset = "0xE2BE50", VA = "0xE2BE50")]
	public HyperspaceSphere()
	{
	}
}
[Token(Token = "0x20001AF")]
public class LotusMaster : MonoBehaviour
{
	[Token(Token = "0x20001B0")]
	private class Flower
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _position;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _rotation;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _radius;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _delay;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _speed;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _spin;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _scale;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _initialized;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _removed;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _stopped;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color _debugColor;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Quaternion ROTATE_90_X;

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xE2C48C", Offset = "0xE2C48C", VA = "0xE2C48C")]
		public Flower(float maxDelay)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xE2C6F8", Offset = "0xE2C6F8", VA = "0xE2C6F8")]
		private void init()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xE2C808", Offset = "0xE2C808", VA = "0xE2C808")]
		private void remove()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xE2C848", Offset = "0xE2C848", VA = "0xE2C848")]
		public bool update(float dt)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xE2C26C", Offset = "0xE2C26C", VA = "0xE2C26C")]
		public void stop()
		{
		}
	}

	[Token(Token = "0x20001B1")]
	[CompilerGenerated]
	private sealed class <blincCo>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normal;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LotusMaster <>4__this;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject <flower>5__3;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <flowerTransform>5__4;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer <smr>5__5;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool <firstInstanceInThisFrame>5__6;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer <glowRenderer>5__7;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material <originalGlowMat>5__8;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material <glowMat>5__9;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 <drift>5__10;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float <t>5__11;

		[Token(Token = "0x17000196")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xE2D8A0", Offset = "0xE2D8A0", VA = "0xE2D8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xE2D8E8", Offset = "0xE2D8E8", VA = "0xE2D8E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xE2BFCC", Offset = "0xE2BFCC", VA = "0xE2BFCC")]
		[DebuggerHidden]
		public <blincCo>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xE2D074", Offset = "0xE2D074", VA = "0xE2D074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xE2D078", Offset = "0xE2D078", VA = "0xE2D078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xE2D8A8", Offset = "0xE2D8A8", VA = "0xE2D8A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B2")]
	[CompilerGenerated]
	private sealed class <showCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LotusMaster <>4__this;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <allDone>5__2;

		[Token(Token = "0x17000198")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xE2DC34", Offset = "0xE2DC34", VA = "0xE2DC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xE2DC7C", Offset = "0xE2DC7C", VA = "0xE2DC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xE2C278", Offset = "0xE2C278", VA = "0xE2C278")]
		[DebuggerHidden]
		public <showCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xE2D944", Offset = "0xE2D944", VA = "0xE2D944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xE2D948", Offset = "0xE2D948", VA = "0xE2D948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xE2DC3C", Offset = "0xE2DC3C", VA = "0xE2DC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LotusMaster inst;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 radiusRange;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 speedRange;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 spinRange;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 scaleRange;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float upnessRatio;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxHeight;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleUpHeight;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaleDownHeight;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float bankAmount;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxDensityCount;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float emmitionRate;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float blinkDuration;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float blinkScale;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float blinkSpin;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve blinkSpinCurve;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float blinkOffset;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float blinkGlow;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 blinkDriftRange;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector2 blinkPushRange;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject staticPrefab;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject dynamicPrefab;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _count;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Flower> _flowers;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material _currentGlowMaterial;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _BrightnessID;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Quaternion ROTATION_OFFSET;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xE2BE60", Offset = "0xE2BE60", VA = "0xE2BE60")]
	public void blink(Vector3 pos, Vector3 normal)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE2BF1C", Offset = "0xE2BF1C", VA = "0xE2BF1C")]
	[IteratorStateMachine(typeof(<blincCo>d__29))]
	private IEnumerator<float> blincCo(Vector3 point, Vector3 normal)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE2BFF4", Offset = "0xE2BFF4", VA = "0xE2BFF4")]
	public void show()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE2C0D8", Offset = "0xE2C0D8", VA = "0xE2C0D8")]
	public void stop()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE2C064", Offset = "0xE2C064", VA = "0xE2C064")]
	[IteratorStateMachine(typeof(<showCo>d__33))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE2C2A0", Offset = "0xE2C2A0", VA = "0xE2C2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE2C330", Offset = "0xE2C330", VA = "0xE2C330")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE2C33C", Offset = "0xE2C33C", VA = "0xE2C33C")]
	public LotusMaster()
	{
	}
}
[Token(Token = "0x20001B3")]
public class NukeSurface : MonoBehaviour
{
	[Token(Token = "0x20001B4")]
	private enum State
	{
		[Token(Token = "0x4000C12")]
		Inactive,
		[Token(Token = "0x4000C13")]
		Heating,
		[Token(Token = "0x4000C14")]
		Exploding
	}

	[Token(Token = "0x20001B5")]
	[CompilerGenerated]
	private sealed class <explodeCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NukeSurface <>4__this;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700019A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xE2E600", Offset = "0xE2E600", VA = "0xE2E600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xE2E648", Offset = "0xE2E648", VA = "0xE2E648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xE2DFFC", Offset = "0xE2DFFC", VA = "0xE2DFFC")]
		[DebuggerHidden]
		public <explodeCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xE2E42C", Offset = "0xE2E42C", VA = "0xE2E42C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xE2E430", Offset = "0xE2E430", VA = "0xE2E430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xE2E608", Offset = "0xE2E608", VA = "0xE2E608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NukeSurface inst;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _explosionSurface;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _heatSurface;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _explosionCenter;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _maxRadius;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _fade;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private State _state;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _CenterID;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _MaxRadiusID;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _RadiusID;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _FadeID;

	[Token(Token = "0x4000C0F")]
	private const float THRESH = 0.001f;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineHandle _co;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE2DCD8", Offset = "0xE2DCD8", VA = "0xE2DCD8")]
	public void init(bool showHeat)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE279EC", Offset = "0xE279EC", VA = "0xE279EC")]
	public void remove()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE2DD04", Offset = "0xE2DD04", VA = "0xE2DD04")]
	public void update(Vector3 floaterCenter, float coneAngle)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE2DE9C", Offset = "0xE2DE9C", VA = "0xE2DE9C")]
	public void explode()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xE2DF88", Offset = "0xE2DF88", VA = "0xE2DF88")]
	[IteratorStateMachine(typeof(<explodeCo>d__19))]
	private IEnumerator<float> explodeCo()
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE2E024", Offset = "0xE2E024", VA = "0xE2E024")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE2E028", Offset = "0xE2E028", VA = "0xE2E028")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE2E278", Offset = "0xE2E278", VA = "0xE2E278")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE2E41C", Offset = "0xE2E41C", VA = "0xE2E41C")]
	public NukeSurface()
	{
	}
}
[Token(Token = "0x20001B6")]
public class RacketSwoosh : MonoBehaviour
{
	[Token(Token = "0x20001B7")]
	public enum NormalMethod
	{
		[Token(Token = "0x4000C2C")]
		Cyclindrical,
		[Token(Token = "0x4000C2D")]
		Planar
	}

	[Serializable]
	[Token(Token = "0x20001B8")]
	public class Swoosh
	{
		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string copyFrom;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NormalMethod normalMethod;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve speedCurve;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material materialP1;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material materialP2;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] points;

		[NonSerialized]
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float currentSpeed;

		[NonSerialized]
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Swoosh reference;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RacketSwoosh _parent;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _debugColor;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] _verts;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _normals;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color32[] _colors;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _triangles;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] _uv0;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _historyLength;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _numPoints;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3[] _velocities;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh _mesh;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Bounds _bounds;

		[Token(Token = "0x1700019C")]
		private Material material
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0xE30320", Offset = "0xE30320", VA = "0xE30320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xE2EB9C", Offset = "0xE2EB9C", VA = "0xE2EB9C")]
		public void init(RacketSwoosh parent)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xE2F1E8", Offset = "0xE2F1E8", VA = "0xE2F1E8")]
		public void resetHistory()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xE30350", Offset = "0xE30350", VA = "0xE30350")]
		private void initMesh()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xE30A48", Offset = "0xE30A48", VA = "0xE30A48")]
		private void shiftVertsBackwards()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xE30C44", Offset = "0xE30C44", VA = "0xE30C44")]
		private void updateMesh()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xE2F684", Offset = "0xE2F684", VA = "0xE2F684")]
		public void refreshMaterial()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xE2F63C", Offset = "0xE2F63C", VA = "0xE2F63C")]
		public void setVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xE2F728", Offset = "0xE2F728", VA = "0xE2F728")]
		public void update()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xE301B0", Offset = "0xE301B0", VA = "0xE301B0")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xE30CE4", Offset = "0xE30CE4", VA = "0xE30CE4")]
		public Swoosh()
		{
		}
	}

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Visual")]
	public float historyTime;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float historyDamp;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSpeed;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Setup")]
	public Swoosh[] swooshes;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Player _player;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _transform;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _racketTransform;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _unscaledFixedDeltaTime;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private PlayerID _playerID;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _isRacketActive;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _needsHistoryReset;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("NEW SFX")]
	public float minVolume;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxVolume;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minPitch;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxPitch;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float START_THRESH;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float STOP_THRESH;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xE2E6A4", Offset = "0xE2E6A4", VA = "0xE2E6A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xE2EE5C", Offset = "0xE2EE5C", VA = "0xE2EE5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xE2EFE8", Offset = "0xE2EFE8", VA = "0xE2EFE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xE2F174", Offset = "0xE2F174", VA = "0xE2F174")]
	private void RequestHistoryReset()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xE2F180", Offset = "0xE2F180", VA = "0xE2F180")]
	private void ResetHistory()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xE2F4C8", Offset = "0xE2F4C8", VA = "0xE2F4C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xE2F6C4", Offset = "0xE2F6C4", VA = "0xE2F6C4")]
	private void UpdateSwooshes()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xE3014C", Offset = "0xE3014C", VA = "0xE3014C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xE302E8", Offset = "0xE302E8", VA = "0xE302E8")]
	public RacketSwoosh()
	{
	}
}
[Token(Token = "0x20001B9")]
[RequireComponent(typeof(MeshFilter))]
public class RandomColorMaker : MonoBehaviour
{
	[Token(Token = "0x20001BA")]
	public enum Channel
	{
		[Token(Token = "0x4000C47")]
		Color,
		[Token(Token = "0x4000C48")]
		UV0,
		[Token(Token = "0x4000C49")]
		UV1,
		[Token(Token = "0x4000C4A")]
		UV2,
		[Token(Token = "0x4000C4B")]
		UV3
	}

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Channel channel;

	[Token(Token = "0x6000913")]
	private void fillArrayWithSameValue<T>(T[] array, T value)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE30CEC", Offset = "0xE30CEC", VA = "0xE30CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE3106C", Offset = "0xE3106C", VA = "0xE3106C")]
	public RandomColorMaker()
	{
	}
}
[Token(Token = "0x20001BB")]
[RequireComponent(typeof(Camera))]
public class SimplePostProcess : MonoBehaviour
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float intensity;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _original;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _duplicate;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _IntensityID;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE31074", Offset = "0xE31074", VA = "0xE31074")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xE310C4", Offset = "0xE310C4", VA = "0xE310C4")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xE31300", Offset = "0xE31300", VA = "0xE31300")]
	public SimplePostProcess()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Snow : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <StopCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Snow <>4__this;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xE31960", Offset = "0xE31960", VA = "0xE31960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xE319A8", Offset = "0xE319A8", VA = "0xE319A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xE31658", Offset = "0xE31658", VA = "0xE31658")]
		[DebuggerHidden]
		public <StopCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE31874", Offset = "0xE31874", VA = "0xE31874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE31878", Offset = "0xE31878", VA = "0xE31878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xE31968", Offset = "0xE31968", VA = "0xE31968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Snow inst;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isXmasNow;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _particles;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _StopCo;

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xE31310", Offset = "0xE31310", VA = "0xE31310")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xE31564", Offset = "0xE31564", VA = "0xE31564")]
	private void OnGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xE315E4", Offset = "0xE315E4", VA = "0xE315E4")]
	[IteratorStateMachine(typeof(<StopCo>d__6))]
	private IEnumerator StopCo()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xE31680", Offset = "0xE31680", VA = "0xE31680")]
	private void Start()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xE3186C", Offset = "0xE3186C", VA = "0xE3186C")]
	public Snow()
	{
	}
}
[Token(Token = "0x20001BE")]
public class SpaceShrinker : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceShrinker inst;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resolution;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float activateAtPercent;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve shrinkGraph;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer shrinkPlane;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem shrinkParticles;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material pcMaterial;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material androidMaterial;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask hiddenLayers;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture rtL;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture rtR;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool testMode;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _timer;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isPlaying;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _activated;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _opponentPos;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _manuallyStarted;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private LayerMask _mask;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _strengthID;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _EyeLID;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _EyeRID;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Camera for rendering each eye texture")]
	[SerializeField]
	private Camera eyeHelperCamera;

	[Token(Token = "0x1700019F")]
	public bool isDone
	{
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xE319B0", Offset = "0xE319B0", VA = "0xE319B0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xE319B8", Offset = "0xE319B8", VA = "0xE319B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	private Camera cam
	{
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xE319C4", Offset = "0xE319C4", VA = "0xE319C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xE31A20", Offset = "0xE31A20", VA = "0xE31A20")]
	private void updatePlane()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xE31AE0", Offset = "0xE31AE0", VA = "0xE31AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xE31B2C", Offset = "0xE31B2C", VA = "0xE31B2C")]
	public void begin()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xE31DC0", Offset = "0xE31DC0", VA = "0xE31DC0")]
	public void begin_special()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xE31E48", Offset = "0xE31E48", VA = "0xE31E48")]
	public void abort()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xE31EF0", Offset = "0xE31EF0", VA = "0xE31EF0")]
	private void done()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xE31F54", Offset = "0xE31F54", VA = "0xE31F54")]
	public void updateRT()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xE32138", Offset = "0xE32138", VA = "0xE32138")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xE32228", Offset = "0xE32228", VA = "0xE32228")]
	private void Update()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xE32460", Offset = "0xE32460", VA = "0xE32460")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xE32464", Offset = "0xE32464", VA = "0xE32464")]
	public SpaceShrinker()
	{
	}
}
[Token(Token = "0x20001BF")]
public class SuperflowSphere : MonoBehaviour
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SuperflowSphere inst;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeDuration;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer arcade;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer solo_and_mp;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _bg;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _current;

	[Token(Token = "0x170001A1")]
	public bool isActive
	{
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xE324A8", Offset = "0xE324A8", VA = "0xE324A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xE324C4", Offset = "0xE324C4", VA = "0xE324C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xE325C4", Offset = "0xE325C4", VA = "0xE325C4")]
	public void show()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xE328FC", Offset = "0xE328FC", VA = "0xE328FC")]
	public void hide()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xE326CC", Offset = "0xE326CC", VA = "0xE326CC")]
	private void toggleCo(bool fadeInElseOut)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xE32978", Offset = "0xE32978", VA = "0xE32978")]
	public SuperflowSphere()
	{
	}
}
[Token(Token = "0x20001C0")]
public class AlwaysFaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rotateTarget;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverse;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xE32988", Offset = "0xE32988", VA = "0xE32988")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xE32AB4", Offset = "0xE32AB4", VA = "0xE32AB4")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xE32B40", Offset = "0xE32B40", VA = "0xE32B40")]
	public AlwaysFaceCamera()
	{
	}
}
[Token(Token = "0x20001C1")]
public class AntiAliasing
{
	[Token(Token = "0x20001C2")]
	public enum Mode
	{
		[Token(Token = "0x4000C79")]
		Disabled,
		[Token(Token = "0x4000C7A")]
		x2,
		[Token(Token = "0x4000C7B")]
		x4,
		[Token(Token = "0x4000C7C")]
		x8
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xE32B48", Offset = "0xE32B48", VA = "0xE32B48")]
	private static int modeToNumber(Mode mode)
	{
		return default(int);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xE32C14", Offset = "0xE32C14", VA = "0xE32C14")]
	private static Mode numberToMode(int aaNum)
	{
		return default(Mode);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xE32CC8", Offset = "0xE32CC8", VA = "0xE32CC8")]
	public static void setMode(Mode mode, bool saveChange = true)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xE32CE0", Offset = "0xE32CE0", VA = "0xE32CE0")]
	public static void setNum(int aaNum, bool saveChange = true)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xE32E3C", Offset = "0xE32E3C", VA = "0xE32E3C")]
	public static Mode getMode()
	{
		return default(Mode);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xE32E50", Offset = "0xE32E50", VA = "0xE32E50")]
	public static int getNum()
	{
		return default(int);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xE32E58", Offset = "0xE32E58", VA = "0xE32E58")]
	public static void load()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xE32DC0", Offset = "0xE32DC0", VA = "0xE32DC0")]
	public static void save()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xE32FB8", Offset = "0xE32FB8", VA = "0xE32FB8")]
	public AntiAliasing()
	{
	}
}
[Token(Token = "0x20001C3")]
public class AudioControl : MonoBehaviour
{
	[Token(Token = "0x20001C4")]
	public enum Mode
	{
		[Token(Token = "0x4000C87")]
		NX,
		[Token(Token = "0x4000C88")]
		Unity3D,
		[Token(Token = "0x4000C89")]
		Stereo
	}

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioControl inst;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode toggleKeyCode;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode nxKeyCode;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode unity3DKeyCode;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode stereoKeyCode;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stereoVolumeScale;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float unity3DVolumeScale;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volumeScale;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x170001A2")]
	public Mode mode
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0xE32FC0", Offset = "0xE32FC0", VA = "0xE32FC0")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xE32FC8", Offset = "0xE32FC8", VA = "0xE32FC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xE33198", Offset = "0xE33198", VA = "0xE33198")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xE331F0", Offset = "0xE331F0", VA = "0xE331F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xE33320", Offset = "0xE33320", VA = "0xE33320")]
	private void toggleMode()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xE32FE0", Offset = "0xE32FE0", VA = "0xE32FE0")]
	private void onModeChanged()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xE33344", Offset = "0xE33344", VA = "0xE33344")]
	public AudioControl()
	{
	}
}
[Token(Token = "0x20001C5")]
[RequireComponent(typeof(Renderer))]
public class BallCounter : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UISettings.BallCounter _config;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ball _myBall;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _intensityId;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _hitsId;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _p2Id;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _plowing;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _numBossesHit;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastHitTime;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _visible;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _intensity;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _smoothedIntensity;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _smoothedIntensityVelocity;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _hits;

	[Token(Token = "0x4000C98")]
	private const float minHits = 1f;

	[Token(Token = "0x4000C99")]
	private const float maxHits = 5f;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xE33370", Offset = "0xE33370", VA = "0xE33370")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xE33634", Offset = "0xE33634", VA = "0xE33634")]
	private void Start()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xE3365C", Offset = "0xE3365C", VA = "0xE3365C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xE33664", Offset = "0xE33664", VA = "0xE33664")]
	private void onPlowStart()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xE33670", Offset = "0xE33670", VA = "0xE33670")]
	private void onPlowEnd()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xE3367C", Offset = "0xE3367C", VA = "0xE3367C")]
	private void onTargetHit(Target target)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xE336F8", Offset = "0xE336F8", VA = "0xE336F8")]
	private void onBigTotalShotWillAppear()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xE33748", Offset = "0xE33748", VA = "0xE33748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xE338F4", Offset = "0xE338F4", VA = "0xE338F4")]
	public BallCounter()
	{
	}
}
[Token(Token = "0x20001C6")]
public class BallPool : MonoBehaviour
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ball ballPrototype;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int initialPoolSize;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BallPool _inst;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<Ball> _pool;

	[Token(Token = "0x170001A3")]
	public static BallPool inst
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xE338FC", Offset = "0xE338FC", VA = "0xE338FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xE33A78", Offset = "0xE33A78", VA = "0xE33A78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xE33C24", Offset = "0xE33C24", VA = "0xE33C24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xE33B70", Offset = "0xE33B70", VA = "0xE33B70")]
	private void createPool()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xE33DA4", Offset = "0xE33DA4", VA = "0xE33DA4")]
	private Ball allocateBall()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xE33EE8", Offset = "0xE33EE8", VA = "0xE33EE8")]
	public Ball allocate()
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xE33F94", Offset = "0xE33F94", VA = "0xE33F94")]
	public void free(Ball oldBall)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xE34070", Offset = "0xE34070", VA = "0xE34070")]
	public BallPool()
	{
	}
}
[Token(Token = "0x20001C7")]
public class BallVisibility : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer innerMesh;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer crystalGlowMesh;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer crystalMesh;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer glowMesh;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light pointLight;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _innerMeshOriginalAlbedoColor;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _innerMeshOriginalEmissionColor;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _crystalGlowMeshOriginalTintColor;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color _crystalMeshOriginalAlbedoColor;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _glowMeshOriginalLodAlpha;

	[Token(Token = "0x170001A4")]
	public float visibility
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xE34080", Offset = "0xE34080", VA = "0xE34080")]
		set
		{
		}
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xE3420C", Offset = "0xE3420C", VA = "0xE3420C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xE3435C", Offset = "0xE3435C", VA = "0xE3435C")]
	public BallVisibility()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Brick : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	public enum ContactSource
	{
		[Token(Token = "0x4000CBB")]
		Ball,
		[Token(Token = "0x4000CBC")]
		Ripple,
		[Token(Token = "0x4000CBD")]
		WreckingBallRipple,
		[Token(Token = "0x4000CBE")]
		SplashDamagePellet,
		[Token(Token = "0x4000CBF")]
		NukePellet,
		[Token(Token = "0x4000CC0")]
		Blaster,
		[Token(Token = "0x4000CC1")]
		HealingTarget,
		[Token(Token = "0x4000CC2")]
		IceFreeze,
		[Token(Token = "0x4000CC3")]
		IceExplode,
		[Token(Token = "0x4000CC4")]
		ShieldBreak,
		[Token(Token = "0x4000CC5")]
		ShieldRebuild
	}

	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <shakeCo>d__70 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strenght;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Brick <>4__this;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170001B5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xE36C50", Offset = "0xE36C50", VA = "0xE36C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xE36C98", Offset = "0xE36C98", VA = "0xE36C98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xE35C14", Offset = "0xE35C14", VA = "0xE35C14")]
		[DebuggerHidden]
		public <shakeCo>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xE36ABC", Offset = "0xE36ABC", VA = "0xE36ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xE36AC0", Offset = "0xE36AC0", VA = "0xE36AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xE36C58", Offset = "0xE36C58", VA = "0xE36C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Target _target;

	[NonSerialized]
	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTrudeManager.WallType overrideWallType;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private HexTrudeManager.WallType _wallType;

	[NonSerialized]
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool overrideExtruded;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _isExtruded;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _surfaceRenderer;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer _reflectionRenderer;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _shieldRenderer;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PowerupIceBreaker.Ice ice;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelEditorBrickSelection selection;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _modelParent;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BrickData _data;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BrickGlow _glow;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HexTile _hexTile;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshCollider _meshCollider;

	[Token(Token = "0x4000CB7")]
	public const float EXPLOSION_THRESH = 1f;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Ripple _ripple;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Transform powerupFX;

	[Token(Token = "0x170001A5")]
	public Target target
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xE34364", Offset = "0xE34364", VA = "0xE34364")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xE3436C", Offset = "0xE3436C", VA = "0xE3436C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public bool isGlowingDueToHit
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xE343EC", Offset = "0xE343EC", VA = "0xE343EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A7")]
	public HexTrudeManager.WallType wallType
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xE34408", Offset = "0xE34408", VA = "0xE34408")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
		[Token(Token = "0x6000963")]
		[Address(RVA = "0xE34478", Offset = "0xE34478", VA = "0xE34478")]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public bool isBumper
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0xE34480", Offset = "0xE34480", VA = "0xE34480")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A9")]
	public bool isStopper
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0xE34514", Offset = "0xE34514", VA = "0xE34514")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AA")]
	public bool isBlaster
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0xE34540", Offset = "0xE34540", VA = "0xE34540")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AB")]
	public bool isExtruded
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0xE344A8", Offset = "0xE344A8", VA = "0xE344A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000967")]
		[Address(RVA = "0xE3456C", Offset = "0xE3456C", VA = "0xE3456C")]
		set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public MeshRenderer surfaceRenderer
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0xE34578", Offset = "0xE34578", VA = "0xE34578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AD")]
	public MeshRenderer reflectionRenderer
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0xE34580", Offset = "0xE34580", VA = "0xE34580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public MeshRenderer ShieldRenderer
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0xE34588", Offset = "0xE34588", VA = "0xE34588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AF")]
	public Brick[] neighbors
	{
		[Token(Token = "0x600096D")]
		[Address(RVA = "0xE34828", Offset = "0xE34828", VA = "0xE34828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B0")]
	public BrickGlow glow
	{
		[Token(Token = "0x600096E")]
		[Address(RVA = "0xE34844", Offset = "0xE34844", VA = "0xE34844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B1")]
	public HexTile hexTile
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0xE3484C", Offset = "0xE3484C", VA = "0xE3484C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B2")]
	public MeshCollider meshCollider
	{
		[Token(Token = "0x6000970")]
		[Address(RVA = "0xE34854", Offset = "0xE34854", VA = "0xE34854")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B3")]
	public Ripple ripple
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0xE3485C", Offset = "0xE3485C", VA = "0xE3485C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000972")]
		[Address(RVA = "0xE34864", Offset = "0xE34864", VA = "0xE34864")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public bool isRippling
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0xE348CC", Offset = "0xE348CC", VA = "0xE348CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xE34630", Offset = "0xE34630", VA = "0xE34630")]
	public MeshRenderer CloneSurface(string name)
	{
		return null;
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xE348DC", Offset = "0xE348DC", VA = "0xE348DC")]
	public Vector3 getNeighborCoord(Brick neighbor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xE3497C", Offset = "0xE3497C", VA = "0xE3497C")]
	public GameObject getChildByName(string nameSuffix)
	{
		return null;
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xE34A0C", Offset = "0xE34A0C", VA = "0xE34A0C")]
	public bool isInView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xE34D30", Offset = "0xE34D30", VA = "0xE34D30")]
	public void useTheseMaterials(Material surfaceMaterial, Material reflectionMaterial)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xE2BD10", Offset = "0xE2BD10", VA = "0xE2BD10")]
	public void updateMaterials()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xE34E98", Offset = "0xE34E98", VA = "0xE34E98")]
	private void ResetLocalTransform(Transform t)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xE34F28", Offset = "0xE34F28", VA = "0xE34F28")]
	private static void scaleRearColliderVerts(Brick brick)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xE35190", Offset = "0xE35190", VA = "0xE35190")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xE35644", Offset = "0xE35644", VA = "0xE35644")]
	private void Update()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xE35674", Offset = "0xE35674", VA = "0xE35674")]
	public void onGlowPropagate()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xE35688", Offset = "0xE35688", VA = "0xE35688")]
	public void onGlowDone()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xE35690", Offset = "0xE35690", VA = "0xE35690")]
	private void onBallCollision(Ball.BallCollision collisionInfo)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xE357E4", Offset = "0xE357E4", VA = "0xE357E4")]
	public void RemoteContactMade(ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xE35AEC", Offset = "0xE35AEC", VA = "0xE35AEC")]
	public void shake(float duration, float strenght, float delay = 0f)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xE35B7C", Offset = "0xE35B7C", VA = "0xE35B7C")]
	[IteratorStateMachine(typeof(<shakeCo>d__70))]
	private IEnumerator<float> shakeCo(float duration, float strenght, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xE35C3C", Offset = "0xE35C3C", VA = "0xE35C3C", Slot = "4")]
	public virtual void shotMadeContact(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, bool forceHit = false)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xE36828", Offset = "0xE36828", VA = "0xE36828")]
	public void playPremonitionSound(float timeUntilHit)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xE3682C", Offset = "0xE3682C", VA = "0xE3682C")]
	public void playPortalEntrySound()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xE368C0", Offset = "0xE368C0", VA = "0xE368C0")]
	public void playPortalExitSound()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xE36954", Offset = "0xE36954", VA = "0xE36954")]
	public void playeEnterPortalAnimation(float duration)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xE36A00", Offset = "0xE36A00", VA = "0xE36A00")]
	public void playeExitPortalAnimation(float duration)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xE36AAC", Offset = "0xE36AAC", VA = "0xE36AAC")]
	public Brick()
	{
	}
}
[Token(Token = "0x20001CB")]
public class BrickData : MonoBehaviour
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int[] neighborIds;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3[] coords;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xE36CF4", Offset = "0xE36CF4", VA = "0xE36CF4")]
	public BrickData()
	{
	}
}
[Token(Token = "0x20001CC")]
public class BrickGlow : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CD")]
	public class Params
	{
		[Serializable]
		[Token(Token = "0x20001CE")]
		public class Materials
		{
			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material start;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material end;

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xE381C8", Offset = "0xE381C8", VA = "0xE381C8")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Materials materials;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeInNormTime;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeOutNormTime;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fillNormTime;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float propagationNormTime;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float damageNormTime;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fullHitDuration;

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xE381B4", Offset = "0xE381B4", VA = "0xE381B4")]
		public Params()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <animateGlowCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrickGlow <>4__this;

		[Token(Token = "0x170001BA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xE3829C", Offset = "0xE3829C", VA = "0xE3829C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xE382E4", Offset = "0xE382E4", VA = "0xE382E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xE37FEC", Offset = "0xE37FEC", VA = "0xE37FEC")]
		[DebuggerHidden]
		public <animateGlowCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xE381D0", Offset = "0xE381D0", VA = "0xE381D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xE381D4", Offset = "0xE381D4", VA = "0xE381D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xE382A4", Offset = "0xE382A4", VA = "0xE382A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _AlphaMultID;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _scaleAndOffsetID;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShotInfo _currentShot;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SyncHexHits.HexHitInfo _hitInfo;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshCollider _collider;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CoroutineHandle _animationCo;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _isGlowing;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Brick _brick;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _transform;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _propagated;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _isGlowVisible;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool _hitEmpty;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool _charged;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _damaged;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Params _params;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer _glowRenderer;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material _sharedGlowMaterial;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MaterialsManager.MaterialPool _materialPool;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 _hitCoords;

	[NonSerialized]
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float currentGlowTimeNormalized;

	[Token(Token = "0x170001B7")]
	public SyncHexHits.HexHitInfo hitInfo
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xE36CFC", Offset = "0xE36CFC", VA = "0xE36CFC")]
		get
		{
			return default(SyncHexHits.HexHitInfo);
		}
	}

	[Token(Token = "0x170001B8")]
	public MeshCollider meshCollider
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xE36D0C", Offset = "0xE36D0C", VA = "0xE36D0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	public bool isGlowing
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0xE36D14", Offset = "0xE36D14", VA = "0xE36D14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xE36D1C", Offset = "0xE36D1C", VA = "0xE36D1C")]
	private void initHitLight(Vector3 hitPos, bool charged, PlayerID playerID)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xE36E90", Offset = "0xE36E90", VA = "0xE36E90")]
	private void onPropagate()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xE36EC4", Offset = "0xE36EC4", VA = "0xE36EC4")]
	private void setGlowVisibility(bool state)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xE36F04", Offset = "0xE36F04", VA = "0xE36F04")]
	private MaterialsManager.MaterialPool getMaterialPool(PlayerID playerID, ref SyncHexHits.HexHitInfo hitInfo)
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xE37014", Offset = "0xE37014", VA = "0xE37014")]
	protected void reset()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xE3680C", Offset = "0xE3680C", VA = "0xE3680C")]
	public void endGlowImmediately()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xE370FC", Offset = "0xE370FC", VA = "0xE370FC")]
	private void animateGlow(float t)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xE373D4", Offset = "0xE373D4", VA = "0xE373D4")]
	public void MakeCurrentGlowNotDealAnyDamage()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xE373A4", Offset = "0xE373A4", VA = "0xE373A4")]
	private void onDone()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xE373E0", Offset = "0xE373E0", VA = "0xE373E0")]
	public Vector2 getImpactCoord(Vector3 origin)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xE3758C", Offset = "0xE3758C", VA = "0xE3758C")]
	public void glow(bool charged, ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xE37E74", Offset = "0xE37E74", VA = "0xE37E74")]
	private void PlayDamageSFXAndUpdateCombos(float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xE37F78", Offset = "0xE37F78", VA = "0xE37F78")]
	[IteratorStateMachine(typeof(<animateGlowCo>d__39))]
	private IEnumerator<float> animateGlowCo()
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xE38014", Offset = "0xE38014", VA = "0xE38014")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xE380AC", Offset = "0xE380AC", VA = "0xE380AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xE381AC", Offset = "0xE381AC", VA = "0xE381AC")]
	public BrickGlow()
	{
	}
}
[Token(Token = "0x20001D0")]
public enum BrickType
{
	[Token(Token = "0x4000CF1")]
	Empty,
	[Token(Token = "0x4000CF2")]
	Portal,
	[Token(Token = "0x4000CF3")]
	Bonus,
	[Token(Token = "0x4000CF4")]
	Bogus,
	[Token(Token = "0x4000CF5")]
	StaticTarget,
	[Token(Token = "0x4000CF6")]
	SnakeHead,
	[Token(Token = "0x4000CF7")]
	SnakeTail,
	[Token(Token = "0x4000CF8")]
	PowerUp_OBSOLETE,
	[Token(Token = "0x4000CF9")]
	StaticHealing,
	[Token(Token = "0x4000CFA")]
	BoosterSwitch,
	[Token(Token = "0x4000CFB")]
	Jumper,
	[Token(Token = "0x4000CFC")]
	Slider,
	[Token(Token = "0x4000CFD")]
	Disabled
}
[Token(Token = "0x20001D1")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xE38340", Offset = "0xE38340", VA = "0xE38340")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xE38994", Offset = "0xE38994", VA = "0xE38994")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x20001D2")]
public class CopyCat : MonoBehaviour
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, CopyCat> dictionary;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Component[] specificComponents;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xE3899C", Offset = "0xE3899C", VA = "0xE3899C")]
	public static int getLabelHash(string label)
	{
		return default(int);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xE389C4", Offset = "0xE389C4", VA = "0xE389C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xE38BB0", Offset = "0xE38BB0", VA = "0xE38BB0")]
	public CopyCat()
	{
	}
}
[Token(Token = "0x20001D3")]
public class CratesInitializer : MonoBehaviour
{
	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xE38C50", Offset = "0xE38C50", VA = "0xE38C50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xE38CBC", Offset = "0xE38CBC", VA = "0xE38CBC")]
	private static string GetBucketURL()
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xE38E40", Offset = "0xE38E40", VA = "0xE38E40")]
	public CratesInitializer()
	{
	}
}
[Token(Token = "0x20001D4")]
public class DeflectorController : MonoBehaviour
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ballDeflector;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform deflectorTarget;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mobile racketVelocity;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider mainDeflector;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider positiveDeflector;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider negativeDeflector;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 positiveDirection;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xE38E48", Offset = "0xE38E48", VA = "0xE38E48")]
	public void toggleDeflectors(bool state)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xE38EA4", Offset = "0xE38EA4", VA = "0xE38EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xE38EC8", Offset = "0xE38EC8", VA = "0xE38EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xE390C4", Offset = "0xE390C4", VA = "0xE390C4")]
	public DeflectorController()
	{
	}
}
[Token(Token = "0x20001D5")]
public class DeselectAllOnStart : MonoBehaviour
{
	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xE39124", Offset = "0xE39124", VA = "0xE39124")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xE39128", Offset = "0xE39128", VA = "0xE39128")]
	public DeselectAllOnStart()
	{
	}
}
[Token(Token = "0x20001D6")]
public class DetachAudio : MonoBehaviour
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _parent;

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xE39130", Offset = "0xE39130", VA = "0xE39130")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xE39208", Offset = "0xE39208", VA = "0xE39208")]
	public void detach()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xE39248", Offset = "0xE39248", VA = "0xE39248")]
	public void detachAndSetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xE39290", Offset = "0xE39290", VA = "0xE39290")]
	public DetachAudio()
	{
	}
}
[Token(Token = "0x20001D7")]
public class DisplayVersion : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI _textMeshProUgui;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xE39298", Offset = "0xE39298", VA = "0xE39298")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xE39328", Offset = "0xE39328", VA = "0xE39328")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xE3932C", Offset = "0xE3932C", VA = "0xE3932C")]
	private void setVersion()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xE39538", Offset = "0xE39538", VA = "0xE39538")]
	public DisplayVersion()
	{
	}
}
[Token(Token = "0x20001D8")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xE39540", Offset = "0xE39540", VA = "0xE39540")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xE395AC", Offset = "0xE395AC", VA = "0xE395AC")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x20001D9")]
public static class DynamicMeshCombiner
{
	[Token(Token = "0x20001DA")]
	private struct CombineKey
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int layer;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xE38410", Offset = "0xE38410", VA = "0xE38410")]
	public static GameObject[] combineMeshes(MeshRenderer[] meshRenderers, bool dynamic = false, bool diactivateRenderers = true)
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xE395B4", Offset = "0xE395B4", VA = "0xE395B4")]
	private static GameObject dynamicCombineMeshesWithSameMaterial(MeshRenderer[] renderers, bool diactivateRenderers)
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xE39CDC", Offset = "0xE39CDC", VA = "0xE39CDC")]
	private static GameObject staticCombineMeshesWithSameMaterial(MeshRenderer[] renderers, bool diactivateRenderers)
	{
		return null;
	}
}
[Token(Token = "0x20001DB")]
public class Forward : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class Dbg
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool drawRay;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xE3A27C", Offset = "0xE3A27C", VA = "0xE3A27C")]
		public Dbg()
		{
		}
	}

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forwardDirection;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dbg debug;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xE3A11C", Offset = "0xE3A11C", VA = "0xE3A11C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xE3A21C", Offset = "0xE3A21C", VA = "0xE3A21C")]
	public Forward()
	{
	}
}
[Token(Token = "0x20001DD")]
public class GameObjectActivationStateRNX : MonoBehaviour, IEquatable<GameObjectActivationStateRNX>, IComparable<GameObjectActivationStateRNX>
{
	[Token(Token = "0x20001DE")]
	public enum ActiveState
	{
		[Token(Token = "0x4000D15")]
		On,
		[Token(Token = "0x4000D16")]
		Off,
		[Token(Token = "0x4000D17")]
		OnInDebugMode
	}

	[Token(Token = "0x20001DF")]
	public enum ActiveStage
	{
		[Token(Token = "0x4000D19")]
		Awake,
		[Token(Token = "0x4000D1A")]
		Start
	}

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActiveState state;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ActiveStage stage;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int priority;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xE3A284", Offset = "0xE3A284", VA = "0xE3A284")]
	public void onAwake()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xE3A360", Offset = "0xE3A360", VA = "0xE3A360")]
	public void onStart()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xE3A440", Offset = "0xE3A440", VA = "0xE3A440", Slot = "5")]
	public int CompareTo(GameObjectActivationStateRNX other)
	{
		return default(int);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xE3A4E4", Offset = "0xE3A4E4", VA = "0xE3A4E4", Slot = "4")]
	public bool Equals(GameObjectActivationStateRNX other)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xE3A54C", Offset = "0xE3A54C", VA = "0xE3A54C")]
	public GameObjectActivationStateRNX()
	{
	}
}
[Token(Token = "0x20001E0")]
public class GameObjectActivatorRNX : MonoBehaviour
{
	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xE3A55C", Offset = "0xE3A55C", VA = "0xE3A55C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xE3A6E4", Offset = "0xE3A6E4", VA = "0xE3A6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xE3A86C", Offset = "0xE3A86C", VA = "0xE3A86C")]
	public GameObjectActivatorRNX()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Grow : MonoBehaviour
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxScale;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _startTime;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xE3A874", Offset = "0xE3A874", VA = "0xE3A874")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xE3A8F0", Offset = "0xE3A8F0", VA = "0xE3A8F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xE3A95C", Offset = "0xE3A95C", VA = "0xE3A95C")]
	public Grow()
	{
	}
}
[Token(Token = "0x20001E2")]
public static class HelperFunctions
{
	[Token(Token = "0x60009D6")]
	public static void addUniqueToList<T>(List<T> list, T newObj)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xE3A970", Offset = "0xE3A970", VA = "0xE3A970")]
	public static GameObject getChildWhereNameContains(Transform parent, string childSuffix)
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xE3AA18", Offset = "0xE3AA18", VA = "0xE3AA18")]
	public static GameObject getChildBySuffix(Transform parent, string parentSuffix, string childSuffix)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xE3AAF4", Offset = "0xE3AAF4", VA = "0xE3AAF4")]
	public static void setActiveUpwards(GameObject obj, bool active)
	{
	}
}
[Token(Token = "0x20001E3")]
public class Highlight : MonoBehaviour
{
	[Token(Token = "0x20001E4")]
	private enum State
	{
		[Token(Token = "0x4000D29")]
		Diminished,
		[Token(Token = "0x4000D2A")]
		Highlighting,
		[Token(Token = "0x4000D2B")]
		Highlighted,
		[Token(Token = "0x4000D2C")]
		Diminishing
	}

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float epsilon;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float highlightDuration;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float highAlpha;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fadeFromBlack;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Graphic[] _grafix;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _origAlpha;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private State _state;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _highlightTime;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentHighlightDuration;

	[Token(Token = "0x170001BC")]
	private float alpha
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xE3ABB0", Offset = "0xE3ABB0", VA = "0xE3ABB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xE3ABF0", Offset = "0xE3ABF0", VA = "0xE3ABF0")]
		set
		{
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xE3ACC0", Offset = "0xE3ACC0", VA = "0xE3ACC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xE3AD38", Offset = "0xE3AD38", VA = "0xE3AD38")]
	public void highlight()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xE3AD4C", Offset = "0xE3AD4C", VA = "0xE3AD4C")]
	public void highlightForDefaultDuration()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xE3AD60", Offset = "0xE3AD60", VA = "0xE3AD60")]
	public void highlightForDuration(float duration)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xE3AD70", Offset = "0xE3AD70", VA = "0xE3AD70")]
	public void diminish()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xE3AD7C", Offset = "0xE3AD7C", VA = "0xE3AD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xE3AE78", Offset = "0xE3AE78", VA = "0xE3AE78")]
	public Highlight()
	{
	}
}
[Token(Token = "0x20001E5")]
public class KeyboardMove : MonoBehaviour
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xE3AE8C", Offset = "0xE3AE8C", VA = "0xE3AE8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xE3AF9C", Offset = "0xE3AF9C", VA = "0xE3AF9C")]
	public KeyboardMove()
	{
	}
}
[Token(Token = "0x20001E6")]
public class LazyFollow : MonoBehaviour
{
	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float laziness;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lazyPosition;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool lazyRotation;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xE3AFAC", Offset = "0xE3AFAC", VA = "0xE3AFAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xE3B028", Offset = "0xE3B028", VA = "0xE3B028")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xE3B1F0", Offset = "0xE3B1F0", VA = "0xE3B1F0")]
	public LazyFollow()
	{
	}
}
[Token(Token = "0x20001E7")]
public class Legal
{
	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xE3B208", Offset = "0xE3B208", VA = "0xE3B208")]
	public static bool getAgreed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xE3B29C", Offset = "0xE3B29C", VA = "0xE3B29C")]
	public static void onAgreed()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xE3B30C", Offset = "0xE3B30C", VA = "0xE3B30C")]
	public Legal()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Logger : MonoBehaviour, ISingleton
{
	[Token(Token = "0x20001E9")]
	private struct LogMessage
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string logString;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string stackTrace;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LogType type;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime gameTime;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _checked;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _ignore;

		[Token(Token = "0x170001C4")]
		public bool Ignore
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xE3CFCC", Offset = "0xE3CFCC", VA = "0xE3CFCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xE3BB90", Offset = "0xE3BB90", VA = "0xE3BB90")]
		public LogMessage(string logString, string stackTrace, LogType type, DateTime gameTime)
		{
		}
	}

	[Token(Token = "0x20001EA")]
	public class StackTraceEnabler : IDisposable
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xE3BC4C", Offset = "0xE3BC4C", VA = "0xE3BC4C")]
		public StackTraceEnabler()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xE3E844", Offset = "0xE3E844", VA = "0xE3E844", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}

	[Token(Token = "0x4000D33")]
	private const string filename = "racketnx.log";

	[Token(Token = "0x4000D34")]
	private const string prevFilename = "racketnx-prev.log";

	[Token(Token = "0x4000D35")]
	private const string prev2Filename = "racketnx-prev2.log";

	[Token(Token = "0x4000D36")]
	private const string tempFilenameFormat = "racketnx-{0}-{1}.log";

	[Token(Token = "0x4000D37")]
	private const int maxMessages = 10000;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Logger inst;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _startTime;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CyclicBuffer<LogMessage> _messages;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<string> _usedTokens;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lastSaveTime;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _logs_written_this_session;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _logs_sent_this_session;

	[Token(Token = "0x170001BD")]
	private string permanentFilepath
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xE3B314", Offset = "0xE3B314", VA = "0xE3B314")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	private string permanentPrevFilepath
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xE3B390", Offset = "0xE3B390", VA = "0xE3B390")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	private string permanentPrev2Filepath
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xE3B40C", Offset = "0xE3B40C", VA = "0xE3B40C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C0")]
	private string nativeUserId
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xE3B488", Offset = "0xE3B488", VA = "0xE3B488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C1")]
	private string nativeUserName
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xE3B500", Offset = "0xE3B500", VA = "0xE3B500")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	private string myRnxId
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xE3B578", Offset = "0xE3B578", VA = "0xE3B578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C3")]
	public static string RandomSessionId
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xE3B5F0", Offset = "0xE3B5F0", VA = "0xE3B5F0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xE3B638", Offset = "0xE3B638", VA = "0xE3B638")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xE3B688", Offset = "0xE3B688", VA = "0xE3B688", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xE3B958", Offset = "0xE3B958", VA = "0xE3B958")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xE3BA90", Offset = "0xE3BA90", VA = "0xE3BA90")]
	private void onLogMessage(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xE3BBE0", Offset = "0xE3BBE0", VA = "0xE3BBE0")]
	public StackTraceEnabler EnableStackTrace()
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xE3BC6C", Offset = "0xE3BC6C", VA = "0xE3BC6C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xE3C6D4", Offset = "0xE3C6D4", VA = "0xE3C6D4")]
	private void OnApplicationPause(bool hasPaused)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xE3C708", Offset = "0xE3C708", VA = "0xE3C708")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xE3C724", Offset = "0xE3C724", VA = "0xE3C724")]
	private string LogHeader()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xE3BCA0", Offset = "0xE3BCA0", VA = "0xE3BCA0")]
	private void writeMessagesToFile(string filepath)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xE3D0D8", Offset = "0xE3D0D8", VA = "0xE3D0D8")]
	public void sendByEmail(bool byPlayer, [Optional] string logToken)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xE3E4E0", Offset = "0xE3E4E0", VA = "0xE3E4E0")]
	private string CreateTempFilename()
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xE3E774", Offset = "0xE3E774", VA = "0xE3E774")]
	private Attachment createAttachment(string filepath, string displayName, string mediaType)
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xE3E688", Offset = "0xE3E688", VA = "0xE3E688")]
	private string generateUniqueToken()
	{
		return null;
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xE3E810", Offset = "0xE3E810", VA = "0xE3E810")]
	private string generateToken()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xE3E83C", Offset = "0xE3E83C", VA = "0xE3E83C")]
	public Logger()
	{
	}
}
[Token(Token = "0x20001ED")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _lookAtPlayer;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _reverse;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool _fromAllCameras;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _transform;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("can be null if this is the objcet to rotate")]
	public Transform objectToRotate;

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE3EAF8", Offset = "0xE3EAF8", VA = "0xE3EAF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE3EC24", Offset = "0xE3EC24", VA = "0xE3EC24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xE3ED58", Offset = "0xE3ED58", VA = "0xE3ED58")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xE3EDA8", Offset = "0xE3EDA8", VA = "0xE3EDA8")]
	public LookAt()
	{
	}
}
[Token(Token = "0x20001EE")]
public class MakeRoomForElder : MonoBehaviour
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component componentType;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xE3EDB0", Offset = "0xE3EDB0", VA = "0xE3EDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xE3EF94", Offset = "0xE3EF94", VA = "0xE3EF94")]
	public MakeRoomForElder()
	{
	}
}
[Token(Token = "0x20001EF")]
public class Mobile : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	private struct SpeedKey
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float smoothSpeed;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;
	}

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fidelity;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool trackAngularVelocity;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxAngularVelocityAngle;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool saveSpeedHistory;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Stopwatch _stopWatch;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _transform;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _historyIndex;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _posHistory;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] _rotHistory;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long[] _deltaTimeHistory;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _startRecordingTime;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SpeedKey> _speedHistory;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int NumFramesInWindow;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _smoothVelocity;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _smoothVelocityVelocity;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _velocityMultiplier;

	[Token(Token = "0x4000D68")]
	private const float SMOOTH_VELOCITY_DAMP = 0.01f;

	[Token(Token = "0x170001C5")]
	public Vector3 velocity
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xE3EF9C", Offset = "0xE3EF9C", VA = "0xE3EF9C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C6")]
	public float angularVelocityAngle
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xE3EFB8", Offset = "0xE3EFB8", VA = "0xE3EFB8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xE3EFC0", Offset = "0xE3EFC0", VA = "0xE3EFC0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public Vector3 angularVelocityAxis
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xE3EFC8", Offset = "0xE3EFC8", VA = "0xE3EFC8")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xE3EFD4", Offset = "0xE3EFD4", VA = "0xE3EFD4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xE3EFE0", Offset = "0xE3EFE0", VA = "0xE3EFE0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xE3EFF8", Offset = "0xE3EFF8", VA = "0xE3EFF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xE3F218", Offset = "0xE3F218", VA = "0xE3F218")]
	public void OnPositionUpdate()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xE3FAFC", Offset = "0xE3FAFC", VA = "0xE3FAFC")]
	public Vector3 GetVelocityAtPoint(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xE3FCDC", Offset = "0xE3FCDC", VA = "0xE3FCDC")]
	public Mobile()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MobileProxy : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mobile mobile;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xE3FD70", Offset = "0xE3FD70", VA = "0xE3FD70")]
	public MobileProxy()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Mouse : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class Racket
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mouseSensitivity;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 orbitOffsetFromCamera;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[NonSerialized]
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hand;

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xE40514", Offset = "0xE40514", VA = "0xE40514")]
		public Racket()
		{
		}
	}

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Mouse inst;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minXAngle;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxXAngle;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Racket racket;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera _camera;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _racketRelPosition;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _neck;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xE3FD78", Offset = "0xE3FD78", VA = "0xE3FD78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xE3FF20", Offset = "0xE3FF20", VA = "0xE3FF20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xE404F8", Offset = "0xE404F8", VA = "0xE404F8")]
	public Mouse()
	{
	}
}
[Token(Token = "0x20001F4")]
public class PasteCat : MonoBehaviour
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new bool enabled;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xE40530", Offset = "0xE40530", VA = "0xE40530")]
	private void copyComponent(Component refComp)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xE40640", Offset = "0xE40640", VA = "0xE40640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xE409A0", Offset = "0xE409A0", VA = "0xE409A0")]
	public PasteCat()
	{
	}
}
[Token(Token = "0x20001F5")]
public class PlanetRotation : MonoBehaviour
{
	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xE409B0", Offset = "0xE409B0", VA = "0xE409B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xE40A48", Offset = "0xE40A48", VA = "0xE40A48")]
	public PlanetRotation()
	{
	}
}
[Token(Token = "0x20001F6")]
public enum PlayerLevel
{
	[Token(Token = "0x4000D7F")]
	Unrated,
	[Token(Token = "0x4000D80")]
	Noob,
	[Token(Token = "0x4000D81")]
	Underdog,
	[Token(Token = "0x4000D82")]
	RisingStar,
	[Token(Token = "0x4000D83")]
	Baller,
	[Token(Token = "0x4000D84")]
	Master,
	[Token(Token = "0x4000D85")]
	RacketLord,
	[Token(Token = "0x4000D86")]
	BallBuster
}
[Serializable]
[Token(Token = "0x20001F7")]
public class SerializablePlayerLevel : SerializableEnum<PlayerLevel>
{
	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xE40A50", Offset = "0xE40A50", VA = "0xE40A50")]
	public SerializablePlayerLevel()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F8")]
public class PlowEffect : MonoBehaviour
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _material;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color _origColorBase;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _origColor1;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _origColor2;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ball _ball;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _fadingIn;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _fadeStartTime;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _fadeEndTime;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _colorBaseID;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _color1ID;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _color2ID;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _speelMltID;

	[Token(Token = "0x170001C9")]
	private Quaternion desiredRotation
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xE40BFC", Offset = "0xE40BFC", VA = "0xE40BFC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170001CA")]
	public float speed
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xE41010", Offset = "0xE41010", VA = "0xE41010")]
		set
		{
		}
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xE40A98", Offset = "0xE40A98", VA = "0xE40A98")]
	public void init(Ball ball)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xE40C70", Offset = "0xE40C70", VA = "0xE40C70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xE40E34", Offset = "0xE40E34", VA = "0xE40E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xE410D8", Offset = "0xE410D8", VA = "0xE410D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xE40E5C", Offset = "0xE40E5C", VA = "0xE40E5C")]
	private void fadeIn()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xE41114", Offset = "0xE41114", VA = "0xE41114")]
	public PlowEffect()
	{
	}
}
[Token(Token = "0x20001F9")]
public class Portal
{
	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <playCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Portal <>4__this;

		[Token(Token = "0x170001CF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0xE4161C", Offset = "0xE4161C", VA = "0xE4161C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0xE41664", Offset = "0xE41664", VA = "0xE41664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xE414C4", Offset = "0xE414C4", VA = "0xE414C4")]
		[DebuggerHidden]
		public <playCo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xE414EC", Offset = "0xE414EC", VA = "0xE414EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xE414F0", Offset = "0xE414F0", VA = "0xE414F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xE41624", Offset = "0xE41624", VA = "0xE41624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Ball _enterBall;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Brick _entryBrick;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Brick _exitBrick;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _duration;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Ball _exitBall;

	[Token(Token = "0x170001CB")]
	public Ball enterBall
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xE4111C", Offset = "0xE4111C", VA = "0xE4111C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	public Brick entryBrick
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xE41124", Offset = "0xE41124", VA = "0xE41124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CD")]
	public Brick exitBrick
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xE4112C", Offset = "0xE4112C", VA = "0xE4112C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CE")]
	public float duration
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xE41134", Offset = "0xE41134", VA = "0xE41134")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xE4113C", Offset = "0xE4113C", VA = "0xE4113C")]
	public Portal(Ball ball, Brick entryBrick, Brick exitBrick, float duration)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xE41450", Offset = "0xE41450", VA = "0xE41450")]
	[IteratorStateMachine(typeof(<playCo>d__14))]
	private IEnumerator<float> playCo()
	{
		return null;
	}
}
[Token(Token = "0x20001FB")]
public class PremonitionAudio : MonoBehaviour
{
	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <playCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PremonitionAudio <>4__this;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeUntilHit;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <startTime>5__2;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <endTime>5__3;

		[Token(Token = "0x170001D1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xE41A54", Offset = "0xE41A54", VA = "0xE41A54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xE41A9C", Offset = "0xE41A9C", VA = "0xE41A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xE41834", Offset = "0xE41834", VA = "0xE41834")]
		[DebuggerHidden]
		public <playCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xE41874", Offset = "0xE41874", VA = "0xE41874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xE41878", Offset = "0xE41878", VA = "0xE41878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xE41A5C", Offset = "0xE41A5C", VA = "0xE41A5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float playStartTime;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minPlayTime;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxPlayTime;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource _audio;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xE416C0", Offset = "0xE416C0", VA = "0xE416C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xE41718", Offset = "0xE41718", VA = "0xE41718")]
	public void play(float timeUntilHit)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xE417B0", Offset = "0xE417B0", VA = "0xE417B0")]
	[IteratorStateMachine(typeof(<playCo>d__6))]
	private IEnumerator<float> playCo(float timeUntilHit)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xE4185C", Offset = "0xE4185C", VA = "0xE4185C")]
	public PremonitionAudio()
	{
	}
}
[Token(Token = "0x20001FD")]
public class PTL_Racket : PTL_Adapter
{
	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arenaRadius;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float arenaHeight;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xE41AF8", Offset = "0xE41AF8", VA = "0xE41AF8", Slot = "4")]
	public override Bounds getBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xE41B4C", Offset = "0xE41B4C", VA = "0xE41B4C")]
	public PTL_Racket()
	{
	}
}
[Token(Token = "0x20001FE")]
public static class Quitter
{
	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _quitting;

	[Token(Token = "0x170001D3")]
	public static bool quitting
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xE41B60", Offset = "0xE41B60", VA = "0xE41B60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xE41BA8", Offset = "0xE41BA8", VA = "0xE41BA8")]
	public static bool CanQuit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xE41BB0", Offset = "0xE41BB0", VA = "0xE41BB0")]
	public static void Quit()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xE41C5C", Offset = "0xE41C5C", VA = "0xE41C5C")]
	private static void SetCloudDiagnosticsMetaData()
	{
	}
}
[Token(Token = "0x20001FF")]
public class RacketHaptic : MonoBehaviour
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ushort _requestedIntensity;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xE41CB8", Offset = "0xE41CB8", VA = "0xE41CB8")]
	public void onRacketExplode()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xE41E9C", Offset = "0xE41E9C", VA = "0xE41E9C")]
	public void onBallCollision(Ball.BallCollision collisionInfo)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xE41FE4", Offset = "0xE41FE4", VA = "0xE41FE4")]
	public void hapticPulse(float duration, float intensity = 1f, bool diminish = true)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xE4205C", Offset = "0xE4205C", VA = "0xE4205C")]
	public void hapticPulse(ushort intensity, float duration = 0.1f)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xE4207C", Offset = "0xE4207C", VA = "0xE4207C")]
	public void hapticPulseManaged(ushort intensity)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xE42090", Offset = "0xE42090", VA = "0xE42090")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xE420D0", Offset = "0xE420D0", VA = "0xE420D0")]
	public RacketHaptic()
	{
	}
}
[Token(Token = "0x2000200")]
public class RacketTrigger : MonoBehaviour
{
	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider collider_;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketTrigger otherTrigger;

	[Token(Token = "0x170001D4")]
	public bool isTriggered
	{
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xE420D8", Offset = "0xE420D8", VA = "0xE420D8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xE420E0", Offset = "0xE420E0", VA = "0xE420E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xE420EC", Offset = "0xE420EC", VA = "0xE420EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xE42194", Offset = "0xE42194", VA = "0xE42194")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xE4221C", Offset = "0xE4221C", VA = "0xE4221C")]
	public RacketTrigger()
	{
	}
}
[Token(Token = "0x2000201")]
public class RacketVersion
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string major;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minor;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int update;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dev;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool demo;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool china;

	[Token(Token = "0x4000DB2")]
	public const string devPostfix = "[DEV]";

	[Token(Token = "0x4000DB3")]
	public const string demoPostfix = "[DEMO]";

	[Token(Token = "0x4000DB4")]
	public const string chinaPostfix = "[CHINA]";

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xE42224", Offset = "0xE42224", VA = "0xE42224")]
	public RacketVersion(string versionStr)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xE425BC", Offset = "0xE425BC", VA = "0xE425BC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xE42800", Offset = "0xE42800", VA = "0xE42800", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xE42930", Offset = "0xE42930", VA = "0xE42930", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xE42890", Offset = "0xE42890", VA = "0xE42890")]
	public static bool operator ==(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xE4298C", Offset = "0xE4298C", VA = "0xE4298C")]
	public static bool operator !=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xE429C8", Offset = "0xE429C8", VA = "0xE429C8")]
	public static bool operator <(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xE429DC", Offset = "0xE429DC", VA = "0xE429DC")]
	public static bool operator >(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xE429F4", Offset = "0xE429F4", VA = "0xE429F4")]
	public static bool operator <=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xE42A0C", Offset = "0xE42A0C", VA = "0xE42A0C")]
	public static bool operator >=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xE428BC", Offset = "0xE428BC", VA = "0xE428BC")]
	public static int compare(RacketVersion version1, RacketVersion version2)
	{
		return default(int);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xE42A24", Offset = "0xE42A24", VA = "0xE42A24")]
	private static int compareMajors(string major1, string major2)
	{
		return default(int);
	}
}
[Token(Token = "0x2000202")]
public class Ripple
{
	[Token(Token = "0x2000203")]
	private class DistanceComparer : IComparer
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _originPoint;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xE441F0", Offset = "0xE441F0", VA = "0xE441F0")]
		public DistanceComparer(Vector3 originPoint)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xE442E4", Offset = "0xE442E4", VA = "0xE442E4", Slot = "4")]
		public int Compare(object x, object y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000DB5")]
	private const int RIPPLE_BANK_SIZE = 32;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<Ripple> _freeRipples;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Ripple> _usedRipples;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ShotInfo _shot;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SyncHexHits.HexHitInfo _originHitInfo;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _wreckingBallRipple;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _charged;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _remainingCharges;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _originBrickWasExplodable;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Brick> _affectedBricks;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Brick> _curWave;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Brick> _lastWave;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curWaveProgress;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Target> _damagedTargets;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _deallocateWhenEmpty;

	[Token(Token = "0x170001D5")]
	public uint ShotIndex
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xE4315C", Offset = "0xE4315C", VA = "0xE4315C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001D6")]
	public bool IsWreckingBallRipple
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xE43174", Offset = "0xE43174", VA = "0xE43174")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D7")]
	public bool Charged
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xE4317C", Offset = "0xE4317C", VA = "0xE4317C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D8")]
	private int remainingCharges
	{
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xE43184", Offset = "0xE43184", VA = "0xE43184")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D9")]
	public bool remoteRipple
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xE431CC", Offset = "0xE431CC", VA = "0xE431CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xE42AD4", Offset = "0xE42AD4", VA = "0xE42AD4")]
	public static Ripple AllocateRipple()
	{
		return null;
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xE42FE0", Offset = "0xE42FE0", VA = "0xE42FE0")]
	static Ripple()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xE42DD8", Offset = "0xE42DD8", VA = "0xE42DD8")]
	public static void DeallocateRipple(Ripple ripple)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xE42E88", Offset = "0xE42E88", VA = "0xE42E88")]
	public Ripple()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xE4326C", Offset = "0xE4326C", VA = "0xE4326C")]
	public void Initialize(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, PowerupType powerup)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xE4380C", Offset = "0xE4380C", VA = "0xE4380C")]
	public void Initialize(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int numCharges)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xE4338C", Offset = "0xE4338C", VA = "0xE4338C")]
	private void _InternalInit(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int numCharges)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xE4387C", Offset = "0xE4387C", VA = "0xE4387C")]
	public int GetAffectedBrickCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xE4365C", Offset = "0xE4365C", VA = "0xE4365C")]
	private void createFirstWave()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xE43BF0", Offset = "0xE43BF0", VA = "0xE43BF0")]
	private void consumeDamage()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xE4390C", Offset = "0xE4390C", VA = "0xE4390C")]
	private void createGlow(ref SyncHexHits.HexHitInfo newHitInfo)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xE43C1C", Offset = "0xE43C1C", VA = "0xE43C1C")]
	public void onGlowPropagate()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xE4408C", Offset = "0xE4408C", VA = "0xE4408C")]
	public void RemoveBrick(Brick b)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xE44140", Offset = "0xE44140", VA = "0xE44140")]
	public void AddBrick(Brick b)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xE43CA4", Offset = "0xE43CA4", VA = "0xE43CA4")]
	private void createNextWave()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xE438C4", Offset = "0xE438C4", VA = "0xE438C4")]
	private bool canBrickBeFirstInRipple(Brick brick)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xE4422C", Offset = "0xE4422C", VA = "0xE4422C")]
	private bool canBrickBeNextInRipple(Brick brick)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000204")]
public class RNXPlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xE444E0", Offset = "0xE444E0", VA = "0xE444E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xE4463C", Offset = "0xE4463C", VA = "0xE4463C")]
	public RNXPlatformInitializer()
	{
	}
}
[Token(Token = "0x2000205")]
public class Room : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000206")]
	public class ObjectLocations
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform floor;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ceiling;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] gutters;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xE45554", Offset = "0xE45554", VA = "0xE45554")]
		public ObjectLocations()
		{
		}
	}

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Room inst;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Vector3 center;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Brick> _bricks;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTile brickHexTile0;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HexTile[] _brickHexTiles;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] _roomAmbientSoundLocations;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] _roomAnimatedLights;

	[NonSerialized]
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] _roomAnimatedLightsDefaultIntensity;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] _roomBaseLights;

	[NonSerialized]
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] _roomBaseLightsDefaultIntensity;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObjectLocations objectLocations;

	[Token(Token = "0x4000DD0")]
	public const int NUM_ROWS = 3;

	[Token(Token = "0x4000DD1")]
	public const int NUM_COLUMNS = 32;

	[Token(Token = "0x4000DD2")]
	public const int stripWidth = 2;

	[Token(Token = "0x4000DD3")]
	public const int quarterWidth = 8;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] _roomObjectsWithoutBackground;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer _ceilingRefractionMesh;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PullRail[] _pullRails;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, HexTile> _tilesByCoord;

	[Token(Token = "0x170001DA")]
	public List<Brick> bricks
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xE44644", Offset = "0xE44644", VA = "0xE44644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xE4464C", Offset = "0xE4464C", VA = "0xE4464C")]
	public void Select()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xE44814", Offset = "0xE44814", VA = "0xE44814")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xE4487C", Offset = "0xE4487C", VA = "0xE4487C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xE448E0", Offset = "0xE448E0", VA = "0xE448E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xE451E8", Offset = "0xE451E8", VA = "0xE451E8")]
	public void PlayRoomAmbientSound(AudioManager.SoundEffect sfx, float delay = 0f)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xE452C0", Offset = "0xE452C0", VA = "0xE452C0")]
	public void ActivateRoomWithoutBackground()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xE45324", Offset = "0xE45324", VA = "0xE45324")]
	public HexTile getHexTile(IntVector2 coords)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xE453C4", Offset = "0xE453C4", VA = "0xE453C4")]
	public static IntVector2 xShiftedCoords(IntVector2 coords, int xShift)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xE45404", Offset = "0xE45404", VA = "0xE45404")]
	public void activatePullRails(bool bActive)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xE45478", Offset = "0xE45478", VA = "0xE45478")]
	public Room()
	{
	}
}
[Token(Token = "0x2000207")]
[ExecuteInEditMode]
public class RoomInitializer : MonoBehaviour
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Bricks")]
	public Material brickSurfaceMaterial;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material brickReflectionMaterial;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material brickGlowMaterial;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material brickHighlightMaterial;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Wall")]
	public Material frameMaterial;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Ceiling")]
	public Material ceilingMaterial;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] ceilingPrefabs;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Floor")]
	public Material floorMaterial;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] floorPrefabs;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Room _room;

	[Token(Token = "0x170001DB")]
	private Room room
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xE4555C", Offset = "0xE4555C", VA = "0xE4555C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xE45604", Offset = "0xE45604", VA = "0xE45604")]
	private void initObject(GameObject obj, [Optional] Material mat, bool isStatic = false)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xE4572C", Offset = "0xE4572C", VA = "0xE4572C")]
	private void initObject(Transform t, [Optional] Material mat, bool isStatic = false)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xE457D0", Offset = "0xE457D0", VA = "0xE457D0")]
	private void initCeiling(Transform ceiling)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xE45A6C", Offset = "0xE45A6C", VA = "0xE45A6C")]
	private void initBrick(Transform brickCollider)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xE45DD4", Offset = "0xE45DD4", VA = "0xE45DD4")]
	private void initWall(Transform wall)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xE461A4", Offset = "0xE461A4", VA = "0xE461A4")]
	private void initFloor(Transform floor)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xE463DC", Offset = "0xE463DC", VA = "0xE463DC")]
	public void initHexTiles()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xE46E08", Offset = "0xE46E08", VA = "0xE46E08")]
	public void renumHexTiles()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xE46F5C", Offset = "0xE46F5C", VA = "0xE46F5C")]
	public void initHexTileCoordsNew()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xE47270", Offset = "0xE47270", VA = "0xE47270")]
	public void initHexTileCoords()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xE47690", Offset = "0xE47690", VA = "0xE47690")]
	private static HexTile nextBottomTileToTheRight(HexTile hexTile)
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xE47400", Offset = "0xE47400", VA = "0xE47400")]
	private void findTile0()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xE4772C", Offset = "0xE4772C", VA = "0xE4772C")]
	public void init()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xE47868", Offset = "0xE47868", VA = "0xE47868")]
	private void CreateLane(Transform root, Vector3[] arrKeys)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xE47B08", Offset = "0xE47B08", VA = "0xE47B08")]
	private void TransformLaneArray(ref Vector3[] laneArray)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xE47BDC", Offset = "0xE47BDC", VA = "0xE47BDC")]
	public void initLanes()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xE48620", Offset = "0xE48620", VA = "0xE48620")]
	public void removeShadowsFromAllRenderers()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xE487D0", Offset = "0xE487D0", VA = "0xE487D0")]
	public RoomInitializer()
	{
	}
}
[Token(Token = "0x2000208")]
public class SceneStarter : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneStarter <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xE48C90", Offset = "0xE48C90", VA = "0xE48C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xE48CD8", Offset = "0xE48CD8", VA = "0xE48CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xE4884C", Offset = "0xE4884C", VA = "0xE4884C")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE48B00", Offset = "0xE48B00", VA = "0xE48B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE48B04", Offset = "0xE48B04", VA = "0xE48B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xE48C98", Offset = "0xE48C98", VA = "0xE48C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartRoom startRoomPrefab;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform container;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xE487D8", Offset = "0xE487D8", VA = "0xE487D8")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xE48874", Offset = "0xE48874", VA = "0xE48874")]
	private void init()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xE48900", Offset = "0xE48900", VA = "0xE48900")]
	private void requestPermissionToRecordAudio()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xE48A20", Offset = "0xE48A20", VA = "0xE48A20")]
	private void createStartRoom()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xE48AF8", Offset = "0xE48AF8", VA = "0xE48AF8")]
	public SceneStarter()
	{
	}
}
[Token(Token = "0x200020B")]
public class ShowDebugMode : MonoBehaviour
{
	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xE48E6C", Offset = "0xE48E6C", VA = "0xE48E6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xE48F08", Offset = "0xE48F08", VA = "0xE48F08")]
	public ShowDebugMode()
	{
	}
}
[Token(Token = "0x200020C")]
public class ShowNumBricksLeft : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200020D")]
	public class Highlight
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float epsilon;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xE495E4", Offset = "0xE495E4", VA = "0xE495E4")]
		public Highlight()
		{
		}
	}

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Highlight highlight;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeout;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _text;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image _image;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _moving;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _highlighted;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _highlightTime;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _desiredAlpha;

	[Token(Token = "0x170001DE")]
	public int numBricksLeft
	{
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE48F10", Offset = "0xE48F10", VA = "0xE48F10")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE48F18", Offset = "0xE48F18", VA = "0xE48F18")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	private float alpha
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE48F20", Offset = "0xE48F20", VA = "0xE48F20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE48F4C", Offset = "0xE48F4C", VA = "0xE48F4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xE49060", Offset = "0xE49060", VA = "0xE49060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xE49140", Offset = "0xE49140", VA = "0xE49140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xE492EC", Offset = "0xE492EC", VA = "0xE492EC")]
	public void onExplode()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xE49510", Offset = "0xE49510", VA = "0xE49510")]
	private void selfDestruct()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xE4957C", Offset = "0xE4957C", VA = "0xE4957C")]
	public ShowNumBricksLeft()
	{
	}
}
[Token(Token = "0x200020E")]
public static class SuperSampling
{
	[Token(Token = "0x200020F")]
	public enum Mode
	{
		[Token(Token = "0x4000DFC")]
		x0_7,
		[Token(Token = "0x4000DFD")]
		x1_0,
		[Token(Token = "0x4000DFE")]
		x1_2,
		[Token(Token = "0x4000DFF")]
		x1_6
	}

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<Mode, float> renderScales;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xE49600", Offset = "0xE49600", VA = "0xE49600")]
	private static float modeToRenderScale(Mode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xE49760", Offset = "0xE49760", VA = "0xE49760")]
	private static Mode renderScaleToMode(float renderScale)
	{
		return default(Mode);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xE49904", Offset = "0xE49904", VA = "0xE49904")]
	public static void setMode(Mode mode, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xE49C4C", Offset = "0xE49C4C", VA = "0xE49C4C")]
	public static Mode getMode()
	{
		return default(Mode);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xE4996C", Offset = "0xE4996C", VA = "0xE4996C")]
	public static void setRenderScale(float renderScale, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xE49CA0", Offset = "0xE49CA0", VA = "0xE49CA0")]
	public static float getRenderScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xE49D44", Offset = "0xE49D44", VA = "0xE49D44")]
	public static void load()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xE49CA8", Offset = "0xE49CA8", VA = "0xE49CA8")]
	public static void save()
	{
	}
}
[Token(Token = "0x2000210")]
public class TextWriterBetter
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FileStream _fs;

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xE3CE48", Offset = "0xE3CE48", VA = "0xE3CE48")]
	public TextWriterBetter(string path)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xE3CEE8", Offset = "0xE3CEE8", VA = "0xE3CEE8")]
	public void Write(string str)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xE3CE84", Offset = "0xE3CE84", VA = "0xE3CE84")]
	public void WriteLine(string str)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xE3D0A0", Offset = "0xE3D0A0", VA = "0xE3D0A0")]
	public void close()
	{
	}
}
[Token(Token = "0x2000211")]
public class Triggers : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	public delegate void EventHandler();

	[Token(Token = "0x2000213")]
	private struct Pulse
	{
		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float timer;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float interval;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float intensity;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool diminish;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _lastPulseTime;

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xE4A2D4", Offset = "0xE4A2D4", VA = "0xE4A2D4")]
		public void Init(float duration, float interval, float intensity, bool diminish)
		{
		}
	}

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _pulseInterval;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pulse> pulses;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Triggers _inst;

	[Token(Token = "0x170001E0")]
	public static Triggers inst
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xE49FD8", Offset = "0xE49FD8", VA = "0xE49FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xE4A020", Offset = "0xE4A020", VA = "0xE4A020")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xE4A0D8", Offset = "0xE4A0D8", VA = "0xE4A0D8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xE4A210", Offset = "0xE4A210", VA = "0xE4A210")]
	private void updatePulse(ref Pulse pulse)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xE41D64", Offset = "0xE41D64", VA = "0xE41D64")]
	public void hapticPulse(float duration, float intensity, bool diminish, float interval = 0.025f)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xE4A2F4", Offset = "0xE4A2F4", VA = "0xE4A2F4")]
	public Triggers()
	{
	}
}
[Token(Token = "0x2000214")]
public class LeaderboardManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000215")]
	public struct PreloadedLeaderboard
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LeaderboardSortMethod sortMethod;
	}

	[Token(Token = "0x2000216")]
	public class Entry
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string userID2;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isMe;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int globalRank;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name2;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string extraData;

		[Token(Token = "0x170001E1")]
		public bool hasUser2
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xE4BCB8", Offset = "0xE4BCB8", VA = "0xE4BCB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xE4B850", Offset = "0xE4B850", VA = "0xE4B850")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x2000217")]
	public class LeaderboardContainer
	{
		[Token(Token = "0x2000218")]
		public delegate bool NameForRank(int rank, int maxRank);

		[Token(Token = "0x2000219")]
		public static class NameForRankCallbacks
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xE4BF34", Offset = "0xE4BF34", VA = "0xE4BF34")]
			public static bool All(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xE4BF3C", Offset = "0xE4BF3C", VA = "0xE4BF3C")]
			public static bool None(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xE4BF44", Offset = "0xE4BF44", VA = "0xE4BF44")]
			public static bool TopTen(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xE4BF50", Offset = "0xE4BF50", VA = "0xE4BF50")]
			public static bool TopTenAndLastRank(int rank, int maxRank)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RnxPlatform.Leaderboard.Type type;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardSortMethod sortMethod;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool leaderboardLoaded;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Entry[] lastAcquiredLeaderboardData;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool haveFinalResults;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool dataUpdated;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool haveNames;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool uploadScoreSucceeded;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int myCurrentValue;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int myCurrentRank;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int myPreviousValue;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int myPreviousRank;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Entry myEntry;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NameForRank nameForRankCallback;

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xE4AC44", Offset = "0xE4AC44", VA = "0xE4AC44")]
		public LeaderboardContainer(RnxPlatform.Leaderboard.Type type, string id, LeaderboardSortMethod sortMethod)
		{
		}
	}

	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboard>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0xE4C308", Offset = "0xE4C308", VA = "0xE4C308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xE4C350", Offset = "0xE4C350", VA = "0xE4C350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xE4ACD0", Offset = "0xE4ACD0", VA = "0xE4ACD0")]
		[DebuggerHidden]
		public <LoadLeaderboard>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xE4C134", Offset = "0xE4C134", VA = "0xE4C134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE4C138", Offset = "0xE4C138", VA = "0xE4C138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xE4C310", Offset = "0xE4C310", VA = "0xE4C310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _haveResult;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xE4C358", Offset = "0xE4C358", VA = "0xE4C358")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xE4C360", Offset = "0xE4C360", VA = "0xE4C360")]
		internal void <LoadLeaderboardAttempt>b__0(bool success)
		{
		}
	}

	[Token(Token = "0x200021D")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboardAttempt>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass13_0 <>8__1;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xE4C768", Offset = "0xE4C768", VA = "0xE4C768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xE4C7B0", Offset = "0xE4C7B0", VA = "0xE4C7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xE4AD88", Offset = "0xE4AD88", VA = "0xE4AD88")]
		[DebuggerHidden]
		public <LoadLeaderboardAttempt>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xE4C418", Offset = "0xE4C418", VA = "0xE4C418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xE4C41C", Offset = "0xE4C41C", VA = "0xE4C41C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xE4C770", Offset = "0xE4C770", VA = "0xE4C770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaderboardManager inst;

	[Token(Token = "0x4000E0B")]
	public const string noNameYet = "---";

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, LeaderboardContainer> _leaderboards;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xE4A414", Offset = "0xE4A414", VA = "0xE4A414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xE4A46C", Offset = "0xE4A46C", VA = "0xE4A46C")]
	public LeaderboardContainer GetLeaderboard(string leaderboardId)
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xE4A500", Offset = "0xE4A500", VA = "0xE4A500")]
	public void ClearLeaderboardCache(string leaderboardId)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xE4A5EC", Offset = "0xE4A5EC", VA = "0xE4A5EC")]
	public void PostNormalLeaderboardValue(string leaderboardId, int value, LeaderboardUpdateMethod updateMethod, [Optional] string extraData, [Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xE4A604", Offset = "0xE4A604", VA = "0xE4A604")]
	public void PostLeaderboardValue(string leaderboardId, string rnxId2, int value, LeaderboardUpdateMethod updateMethod, [Optional] string extraData, [Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xE4AAC0", Offset = "0xE4AAC0", VA = "0xE4AAC0")]
	public LeaderboardContainer LoadOrCreateLeaderboard(RnxPlatform.Leaderboard.Type leadeboardType, string leaderboardId, LeaderboardSortMethod sortMethod)
	{
		return null;
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xE4ABB4", Offset = "0xE4ABB4", VA = "0xE4ABB4")]
	[IteratorStateMachine(typeof(<LoadLeaderboard>d__12))]
	private IEnumerator LoadLeaderboard(LeaderboardContainer lcontainer)
	{
		return null;
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xE4ACF8", Offset = "0xE4ACF8", VA = "0xE4ACF8")]
	[IteratorStateMachine(typeof(<LoadLeaderboardAttempt>d__13))]
	private IEnumerator LoadLeaderboardAttempt(LeaderboardContainer lcontainer)
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xE4ADB0", Offset = "0xE4ADB0", VA = "0xE4ADB0")]
	private void onLeaderboardCreated(LeaderboardContainer curLB)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xE4AEB4", Offset = "0xE4AEB4", VA = "0xE4AEB4")]
	public void DownloadNormalLeaderboardResults(string leaderboardId, int startRank, int count, [Optional] LeaderboardContainer.NameForRank nameForRank)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xE4AECC", Offset = "0xE4AECC", VA = "0xE4AECC")]
	public void DownloadLeaderboardResults(string leaderboardId, string rnxId2, int startRank, int count, [Optional] LeaderboardContainer.NameForRank nameForRank, bool fetchNames = true)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xE4B278", Offset = "0xE4B278", VA = "0xE4B278")]
	private void onDownloadResults(string leaderboardId, string rnxId2, List<RnxPlatform.LeaderboardEntry> entries, bool fetchNames)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xE4B858", Offset = "0xE4B858", VA = "0xE4B858")]
	private static string min(string rnxId1, string rnxId2)
	{
		return null;
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xE4B884", Offset = "0xE4B884", VA = "0xE4B884")]
	private static string max(string rnxId1, string rnxId2)
	{
		return null;
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xE4B8B0", Offset = "0xE4B8B0", VA = "0xE4B8B0")]
	private void fetchMissingNames(LeaderboardContainer curLB)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xE4BCD8", Offset = "0xE4BCD8", VA = "0xE4BCD8")]
	public void DownloadMyResult(string leaderboardId)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xE4BCF0", Offset = "0xE4BCF0", VA = "0xE4BCF0")]
	public void DownloadOurResult(string leaderboardId, string rnxId2)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xE4BD04", Offset = "0xE4BD04", VA = "0xE4BD04")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x2000220")]
public class LeaderboardsLoader : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardsLoader <>4__this;

		[Token(Token = "0x170001E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xE4D900", Offset = "0xE4D900", VA = "0xE4D900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xE4D948", Offset = "0xE4D948", VA = "0xE4D948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE4D014", Offset = "0xE4D014", VA = "0xE4D014")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xE4D6B8", Offset = "0xE4D6B8", VA = "0xE4D6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE4D6BC", Offset = "0xE4D6BC", VA = "0xE4D6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE4D908", Offset = "0xE4D908", VA = "0xE4D908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaderboardsLoader inst;

	[Token(Token = "0x170001E6")]
	private LeaderboardSettings config
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xE4CEF8", Offset = "0xE4CEF8", VA = "0xE4CEF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xE4CF48", Offset = "0xE4CF48", VA = "0xE4CF48", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xE4CFA0", Offset = "0xE4CFA0", VA = "0xE4CFA0")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xE4D03C", Offset = "0xE4D03C", VA = "0xE4D03C")]
	public LeaderboardManager.LeaderboardContainer GetArcade(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xE4D15C", Offset = "0xE4D15C", VA = "0xE4D15C")]
	public LeaderboardManager.LeaderboardContainer GetSolo(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xE4D1E8", Offset = "0xE4D1E8", VA = "0xE4D1E8")]
	public LeaderboardManager.LeaderboardContainer GetSoloMusicChallenge(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xE4D274", Offset = "0xE4D274", VA = "0xE4D274")]
	public LeaderboardManager.LeaderboardContainer GetSoloCustomSet(CustomSet customSet)
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xE4D300", Offset = "0xE4D300", VA = "0xE4D300")]
	public LeaderboardManager.LeaderboardContainer GetVersusCurrentSeason()
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xE4D384", Offset = "0xE4D384", VA = "0xE4D384")]
	public LeaderboardManager.LeaderboardContainer GetVersus(int seasonIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xE4D430", Offset = "0xE4D430", VA = "0xE4D430")]
	public LeaderboardManager.LeaderboardContainer GetCoOp()
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xE4D438", Offset = "0xE4D438", VA = "0xE4D438")]
	private LeaderboardManager.LeaderboardContainer GetCoOp(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xE4D548", Offset = "0xE4D548", VA = "0xE4D548")]
	public LeaderboardsLoader()
	{
	}
}
[Token(Token = "0x2000223")]
public class OculusLeaderboard : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusLeaderboard inst;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xE4D950", Offset = "0xE4D950", VA = "0xE4D950", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xE4D9A8", Offset = "0xE4D9A8", VA = "0xE4D9A8")]
	public void UpdateUserEntry(string leaderboardName, int value, LeaderboardEntryData entryData, LeaderboardUpdateMethod updateMethod, Action<bool, RnxPlatform.LeaderboardEntry, RnxPlatform.LeaderboardEntry> onResponse)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xE4DB00", Offset = "0xE4DB00", VA = "0xE4DB00")]
	public OculusLeaderboard()
	{
	}
}
[Token(Token = "0x2000225")]
public class TheLeaderboards : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TheLeaderboards inst;

	[Token(Token = "0x170001E9")]
	private bool shouldUpdateOculus
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE4DBF0", Offset = "0xE4DBF0", VA = "0xE4DBF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xE4DC94", Offset = "0xE4DC94", VA = "0xE4DC94", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xE4C6D0", Offset = "0xE4C6D0", VA = "0xE4C6D0")]
	public void FindOrCreateLeaderboard(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, LeaderboardSortMethod sortOrder, Action<bool> onResponse)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xE4A984", Offset = "0xE4A984", VA = "0xE4A984")]
	public void UpdateUserEntry(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, int value, LeaderboardEntryData entryData, string rnxId, string rnxId2, LeaderboardUpdateMethod updateMethod, Action<bool, RnxPlatform.LeaderboardEntry, RnxPlatform.LeaderboardEntry> onResponse)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xE4B1C0", Offset = "0xE4B1C0", VA = "0xE4B1C0")]
	public void GetEntries(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, string rnxId, string rnxId2, int start, int count, Action<bool, List<RnxPlatform.LeaderboardEntry>> onResponse)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xE4DD7C", Offset = "0xE4DD7C", VA = "0xE4DD7C")]
	private string WrapLeaderboardNameWithNativePlatformPrefix(string leaderboardName)
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xE4DCEC", Offset = "0xE4DCEC", VA = "0xE4DCEC")]
	private string IMPORT_AWS_CHINA__WrapLeaderboardName(string leaderboardName)
	{
		return null;
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xE4DE24", Offset = "0xE4DE24", VA = "0xE4DE24")]
	public TheLeaderboards()
	{
	}
}
[Serializable]
[Token(Token = "0x2000226")]
public enum BrushType
{
	[Token(Token = "0x4000E46")]
	None,
	[Token(Token = "0x4000E47")]
	Eraser,
	[Token(Token = "0x4000E48")]
	Booster,
	[Token(Token = "0x4000E49")]
	Downer,
	[Token(Token = "0x4000E4A")]
	Slider,
	[Token(Token = "0x4000E4B")]
	Portal,
	[Token(Token = "0x4000E4C")]
	StaticTarget,
	[Token(Token = "0x4000E4D")]
	HealingTarget,
	[Token(Token = "0x4000E4E")]
	Forcefield,
	[Token(Token = "0x4000E4F")]
	Snake,
	[Token(Token = "0x4000E50")]
	Bumper,
	[Token(Token = "0x4000E51")]
	Stopper,
	[Token(Token = "0x4000E52")]
	Blaster,
	[Token(Token = "0x4000E53")]
	Intrude,
	[Token(Token = "0x4000E54")]
	Invalid
}
[Token(Token = "0x2000227")]
public class LevelEditorAlignMarkerWithWaveShift : MonoBehaviour
{
	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xE4DE2C", Offset = "0xE4DE2C", VA = "0xE4DE2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xE4DEBC", Offset = "0xE4DEBC", VA = "0xE4DEBC")]
	public LevelEditorAlignMarkerWithWaveShift()
	{
	}
}
[Token(Token = "0x2000228")]
public static class LevelEditorAudio
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float _PITCH_FACTOR;

	[Token(Token = "0x170001EA")]
	private static Vector3 _UiHitPoint
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE4DEC4", Offset = "0xE4DEC4", VA = "0xE4DEC4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001EB")]
	private static Vector3 _HighlitBrick
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE4DF48", Offset = "0xE4DF48", VA = "0xE4DF48")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001EC")]
	private static AudioManager _AM
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE4DFB0", Offset = "0xE4DFB0", VA = "0xE4DFB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xE4DFF8", Offset = "0xE4DFF8", VA = "0xE4DFF8")]
	public static void PlayUIOffsetSound()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xE4E0F0", Offset = "0xE4E0F0", VA = "0xE4E0F0")]
	public static void PlayUIDeleteSound()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xE4E1E8", Offset = "0xE4E1E8", VA = "0xE4E1E8")]
	public static void PlayUINewSound()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xE4E2E0", Offset = "0xE4E2E0", VA = "0xE4E2E0")]
	public static void PlayUIAddPowerUp()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xE4E3D8", Offset = "0xE4E3D8", VA = "0xE4E3D8")]
	public static void PlayUIPublishSound(bool success)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xE4E4F0", Offset = "0xE4E4F0", VA = "0xE4E4F0")]
	public static void PlayDefaultExtrutionSound(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xE4E60C", Offset = "0xE4E60C", VA = "0xE4E60C")]
	public static void PlayBrickExtrutionSound(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xE4EC0C", Offset = "0xE4EC0C", VA = "0xE4EC0C")]
	public static void PlayBrickSelectionSound()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xE4ED04", Offset = "0xE4ED04", VA = "0xE4ED04")]
	public static void PlayBrickHighlightSound()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xE4EDFC", Offset = "0xE4EDFC", VA = "0xE4EDFC")]
	public static void PlayBrickDeselectionSound()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xE4EEC4", Offset = "0xE4EEC4", VA = "0xE4EEC4")]
	public static void PlayShield(Target target, bool added)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xE4EFF0", Offset = "0xE4EFF0", VA = "0xE4EFF0")]
	private static float HpPitch(int hp)
	{
		return default(float);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xE4F038", Offset = "0xE4F038", VA = "0xE4F038")]
	public static void PlayHp(int hp)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xE4F1AC", Offset = "0xE4F1AC", VA = "0xE4F1AC")]
	public static void PlayInvalidSelection()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xE4F2A4", Offset = "0xE4F2A4", VA = "0xE4F2A4")]
	public static void PlayPrimitiveBrush(BrushType brush)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xE4F4FC", Offset = "0xE4F4FC", VA = "0xE4F4FC")]
	public static void PlayComplexBrush(BrushType brush)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xE4E80C", Offset = "0xE4E80C", VA = "0xE4E80C")]
	private static Vector3 GetBricksCenter()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000229")]
public class LevelEditorBrickSelection
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool highlit;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool targetHighlit;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool selected;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool available;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HexTile.HexDirection availableDir;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SmoothFloat _selectedValue;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothFloat _availableValue;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _HighLitID;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _SelectedID;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _AvailableID;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _AvailablityArrowRotateID;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xE4F6F8", Offset = "0xE4F6F8", VA = "0xE4F6F8")]
	public LevelEditorBrickSelection(Brick brick)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xE4F914", Offset = "0xE4F914", VA = "0xE4F914")]
	public void Update(float dt, float smoothTime = 0.2f)
	{
	}
}
[Token(Token = "0x200022A")]
public static class LevelEditorHelpers
{
	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xE4FB54", Offset = "0xE4FB54", VA = "0xE4FB54")]
	public static bool WaveIsValid(WaveHandcrafted wave)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xE4FCA8", Offset = "0xE4FCA8", VA = "0xE4FCA8")]
	public static bool IsGroupTarget(BrickType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xE4FCC8", Offset = "0xE4FCC8", VA = "0xE4FCC8")]
	public static bool IsStaticTarget(BrickType brickType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xE4FCE4", Offset = "0xE4FCE4", VA = "0xE4FCE4")]
	public static float StepBetween(float value, float min, float max, float steps)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xE4FD20", Offset = "0xE4FD20", VA = "0xE4FD20")]
	public static bool IsSnakeType(Brick t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xE4FD40", Offset = "0xE4FD40", VA = "0xE4FD40")]
	public static bool IsSnakeType(BrickType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x200022C")]
public class LevelEditorManager : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x200022D")]
	private struct CustomSetMeta
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool published;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int publicNumber;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float personalBest;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int bestProgress;

		[Token(Token = "0x17000203")]
		public PlayerProfileData.Solo.Set.Result bestResult
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xE548A0", Offset = "0xE548A0", VA = "0xE548A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xE5499C", Offset = "0xE5499C", VA = "0xE5499C")]
			set
			{
			}
		}
	}

	[Token(Token = "0x200022E")]
	public enum SetsMode
	{
		[Token(Token = "0x4000EA3")]
		Custom,
		[Token(Token = "0x4000EA4")]
		Solo,
		[Token(Token = "0x4000EA5")]
		Multiplayer,
		[Token(Token = "0x4000EA6")]
		MonthlyChallenge
	}

	[Token(Token = "0x200022F")]
	public enum LevelEditorMode
	{
		[Token(Token = "0x4000EA8")]
		Disabled,
		[Token(Token = "0x4000EA9")]
		Editing,
		[Token(Token = "0x4000EAA")]
		Playing,
		[Token(Token = "0x4000EAB")]
		Browsing
	}

	[Token(Token = "0x2000230")]
	public class WaveChangeEvent : UnityEvent<WaveHandcrafted, int>
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xE5CFC8", Offset = "0xE5CFC8", VA = "0xE5CFC8")]
		public WaveChangeEvent()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[CompilerGenerated]
	private sealed class <ShowWelcomeWhenArenaIsReady>d__213 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xE5E6AC", Offset = "0xE5E6AC", VA = "0xE5E6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xE5E6F4", Offset = "0xE5E6F4", VA = "0xE5E6F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xE5B464", Offset = "0xE5B464", VA = "0xE5B464")]
		[DebuggerHidden]
		public <ShowWelcomeWhenArenaIsReady>d__213(int <>1__state)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xE5E5B0", Offset = "0xE5E5B0", VA = "0xE5E5B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xE5E5B4", Offset = "0xE5E5B4", VA = "0xE5E5B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xE5E6B4", Offset = "0xE5E6B4", VA = "0xE5E6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <ShowUtilityWhenArenaIsReady>d__214 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEditorManager <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xE5E808", Offset = "0xE5E808", VA = "0xE5E808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xE5E850", Offset = "0xE5E850", VA = "0xE5E850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xE5B48C", Offset = "0xE5B48C", VA = "0xE5B48C")]
		[DebuggerHidden]
		public <ShowUtilityWhenArenaIsReady>d__214(int <>1__state)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xE5E6FC", Offset = "0xE5E6FC", VA = "0xE5E6FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xE5E700", Offset = "0xE5E700", VA = "0xE5E700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xE5E810", Offset = "0xE5E810", VA = "0xE5E810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <ShowBrowsingWhenArenaIsReady>d__215 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xE5E964", Offset = "0xE5E964", VA = "0xE5E964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xE5E9AC", Offset = "0xE5E9AC", VA = "0xE5E9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xE5B4B4", Offset = "0xE5B4B4", VA = "0xE5B4B4")]
		[DebuggerHidden]
		public <ShowBrowsingWhenArenaIsReady>d__215(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xE5E858", Offset = "0xE5E858", VA = "0xE5E858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xE5E85C", Offset = "0xE5E85C", VA = "0xE5E85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xE5E96C", Offset = "0xE5E96C", VA = "0xE5E96C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HashSet<int> _usedIdes;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<IntVector2, RuntimeBrick> _brickToRuntimeBrick;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _setsFolder;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SetsMode _lastSetsMode;

	[Token(Token = "0x4000E69")]
	private const string COPY_EXTENTION = " - Copy";

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _lastMatchBeatsHighScore;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _reloadTargets;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _reloadHextrusions;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _reloadHextrusionsFast;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _reloadHard;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _needToSave;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool _skipAutoSave;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool _skipUndoState;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _savePending;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _timeSinceLastSave;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float saveTime;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<Brick> _validSnakeNeighbors;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<Target> _selectedSnakes;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Brick> _splitSnakeList;

	[Token(Token = "0x4000E79")]
	private const float DOUBLE_CLICK_INTERVAL = 0.2f;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HashSet<Brick> _selectedBricks;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Brick _highlitBrick;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Floater _highlitFloater;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Brick _lastClickedBrick;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _lastClickedBrickWasInSelection;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _pointingAtTheEditor;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool _clickWasOnFloater;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private RaycastHit _pointerHit;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _timeSinceLastClick;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _disableSelectionUntilTriggerReleased;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<WaveHandcrafted> _freeStack;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<WaveHandcrafted> _undoList;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Stack<WaveHandcrafted> _redoStack;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaveHandcrafted _tempWave;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform _undoParent;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorManager inst;

	[Token(Token = "0x4000E8A")]
	[Header("IO")]
	public const string DEFAULT_SET_NAME = "New Custom Set";

	[Token(Token = "0x4000E8B")]
	public const int DEFAULT_TARGET_HP = 3;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int maxNumOfSets;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int maxNumOfWaves;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LocalizedString waveNameFormat;

	[Token(Token = "0x4000E8F")]
	public const SetsMode setsMode = SetsMode.Custom;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Selection")]
	public BrushType selectedBrushType;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LayerMask tilesLayerMask;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Undo")]
	public int maxUndoCount;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[Header("Debug")]
	public bool debugDrawIDs;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Events")]
	public WaveChangeEvent CurretWaveChanged;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnWaveChanged;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private LevelEditorMode _mode;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaveSet _currentSet;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _playingFromStart;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaveHandcrafted _currentWave;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _currentWaveIndex;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RuntimeBrick _tempBrick;

	[Token(Token = "0x170001ED")]
	public string SetsFolder
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xE52024", Offset = "0xE52024", VA = "0xE52024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EE")]
	public string CurrentSetFile
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xE52100", Offset = "0xE52100", VA = "0xE52100")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xE52108", Offset = "0xE52108", VA = "0xE52108")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public bool LastMatchBeatsHighScore
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xE52110", Offset = "0xE52110", VA = "0xE52110")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F0")]
	public IEnumerable<Brick> SelectedBricks
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xE5757C", Offset = "0xE5757C", VA = "0xE5757C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F1")]
	public Brick HighlitBrick
	{
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xE57584", Offset = "0xE57584", VA = "0xE57584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F2")]
	public bool PointingAtTheEditor
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xE5758C", Offset = "0xE5758C", VA = "0xE5758C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F3")]
	public bool HasUndoSteps
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xE58F94", Offset = "0xE58F94", VA = "0xE58F94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F4")]
	public bool HasRedoSteps
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xE58FE4", Offset = "0xE58FE4", VA = "0xE58FE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F5")]
	public string password
	{
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xE531E0", Offset = "0xE531E0", VA = "0xE531E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public LevelEditorMode Mode
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xE5A08C", Offset = "0xE5A08C", VA = "0xE5A08C")]
		get
		{
			return default(LevelEditorMode);
		}
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xE5A094", Offset = "0xE5A094", VA = "0xE5A094")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public static bool InEditorPlayMode
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xE5A508", Offset = "0xE5A508", VA = "0xE5A508")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F8")]
	public static bool InEditorBrowseMode
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xE5A564", Offset = "0xE5A564", VA = "0xE5A564")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F9")]
	public static bool InEditMode
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xE57FB0", Offset = "0xE57FB0", VA = "0xE57FB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FA")]
	public static bool InEditorArena
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xE5A5C0", Offset = "0xE5A5C0", VA = "0xE5A5C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FB")]
	public static bool IsPlayingPublicSet
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xE5A61C", Offset = "0xE5A61C", VA = "0xE5A61C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FC")]
	public static bool IsPlayingPrivateSet
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xE5A690", Offset = "0xE5A690", VA = "0xE5A690")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FD")]
	public WaveSet CurrentSet
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xE5A6F4", Offset = "0xE5A6F4", VA = "0xE5A6F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xE5A6FC", Offset = "0xE5A6FC", VA = "0xE5A6FC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public WaveHandcrafted CurrentWave
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xE5A7C4", Offset = "0xE5A7C4", VA = "0xE5A7C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FF")]
	public bool IsPublicSet
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xE5A680", Offset = "0xE5A680", VA = "0xE5A680")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000200")]
	public CustomSet CurrentPublicSetMeta
	{
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xE5A7CC", Offset = "0xE5A7CC", VA = "0xE5A7CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xE5A7D4", Offset = "0xE5A7D4", VA = "0xE5A7D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public bool PlayingFromStart
	{
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xE5A7E4", Offset = "0xE5A7E4", VA = "0xE5A7E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000202")]
	public static int LastEditWaveIndex
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xE5A7EC", Offset = "0xE5A7EC", VA = "0xE5A7EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1400000D")]
	public event UnityAction<WaveSet> SetLoaded
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xE59F24", Offset = "0xE59F24", VA = "0xE59F24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xE59FD8", Offset = "0xE59FD8", VA = "0xE59FD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xE4FE84", Offset = "0xE4FE84", VA = "0xE4FE84")]
	public int GetFreeGroupId()
	{
		return default(int);
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xE50050", Offset = "0xE50050", VA = "0xE50050")]
	public RuntimeBrick GetRuntimeBrickFromBrick(Brick brick)
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xE50274", Offset = "0xE50274", VA = "0xE50274")]
	private bool AtLeastOneForceField(IEnumerable<Brick> bricks)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xE503F0", Offset = "0xE503F0", VA = "0xE503F0")]
	private void SelectBrushType(BrushType brash)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xE503F8", Offset = "0xE503F8", VA = "0xE503F8")]
	public bool AddHpToHighlightedBrick(int hpToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xE50528", Offset = "0xE50528", VA = "0xE50528")]
	public int GetHpById(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xE50560", Offset = "0xE50560", VA = "0xE50560")]
	public void RemovePowerup(Floater floater)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xE507E8", Offset = "0xE507E8", VA = "0xE507E8")]
	public void AddPowerUp(PowerupType type = PowerupType.SplashDamage)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xE509F8", Offset = "0xE509F8", VA = "0xE509F8")]
	private bool HasNuke()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xE50B04", Offset = "0xE50B04", VA = "0xE50B04")]
	private void SetSelectedBricksAsType(BrickType brickType)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xE50D80", Offset = "0xE50D80", VA = "0xE50D80")]
	private void ResetBricksIds(IEnumerable<Brick> bricks)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xE51064", Offset = "0xE51064", VA = "0xE51064")]
	private void SetSelectedBricksAsGroupType(BrickType brickType)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xE5123C", Offset = "0xE5123C", VA = "0xE5123C")]
	private void SetSelectedBrickExtrusion(HexTrudeManager.WallType type)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xE513AC", Offset = "0xE513AC", VA = "0xE513AC")]
	private void SetBrickExtrution(Brick brick, HexTrudeManager.WallType type)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xE51208", Offset = "0xE51208", VA = "0xE51208")]
	private RuntimeBrick SetBrickTypeAndId(Brick brick, BrickType type = BrickType.Empty, int id = 0, bool forceField = false)
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xE5141C", Offset = "0xE5141C", VA = "0xE5141C")]
	public void SetExtrusion(HexTrudeManager.WallType wallType, bool silent = false)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xE514D0", Offset = "0xE514D0", VA = "0xE514D0")]
	public void SetTimeFactor(float factor)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xE5155C", Offset = "0xE5155C", VA = "0xE5155C")]
	public void ToggleForceFiledForBrick(Target target)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xE518D4", Offset = "0xE518D4", VA = "0xE518D4")]
	private void DrawHighlightedBrick(Brick brick)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xE51A98", Offset = "0xE51A98", VA = "0xE51A98")]
	private void DrawSelectedBricks()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xE51BF0", Offset = "0xE51BF0", VA = "0xE51BF0")]
	private void DrawValidSnakeMoves()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xE51E5C", Offset = "0xE51E5C", VA = "0xE51E5C")]
	private void DrawIDs()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xE52118", Offset = "0xE52118", VA = "0xE52118")]
	public List<WaveSetData> LoadSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xE524C8", Offset = "0xE524C8", VA = "0xE524C8")]
	private string GetSoloSetNameFromID(string id)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xE52618", Offset = "0xE52618", VA = "0xE52618")]
	private List<WaveSetData> LoadSoloSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xE52960", Offset = "0xE52960", VA = "0xE52960")]
	private List<WaveSetData> LoadMultiplayerSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xE529E0", Offset = "0xE529E0", VA = "0xE529E0")]
	private List<WaveSetData> LoadMonthlyChallengeSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xE52A68", Offset = "0xE52A68", VA = "0xE52A68")]
	private string FixSetName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xE52698", Offset = "0xE52698", VA = "0xE52698")]
	private List<WaveSetData> LoadSetsList(WaveSet[] sets)
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xE52F60", Offset = "0xE52F60", VA = "0xE52F60")]
	private void LoadSet(string setName, Action<WaveSet> done)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xE53254", Offset = "0xE53254", VA = "0xE53254")]
	private void RecoverMyPublicSetIfMissing(WaveSet set, CustomSet meta)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xE53BE4", Offset = "0xE53BE4", VA = "0xE53BE4")]
	public void PlayPublicSet(DownloadedCrate crate, CustomSet meta)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xE53A44", Offset = "0xE53A44", VA = "0xE53A44")]
	private void SaveSet([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xE52BEC", Offset = "0xE52BEC", VA = "0xE52BEC")]
	private void SaveSet(WaveSet set, string fileName)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xE53DB0", Offset = "0xE53DB0", VA = "0xE53DB0")]
	public WaveSet CreateNewSetCrate()
	{
		return null;
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xE53568", Offset = "0xE53568", VA = "0xE53568")]
	private string GenerateNewSetName(string baseName = "New Custom Set", bool useBaseIfUnique = false)
	{
		return null;
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xE52B4C", Offset = "0xE52B4C", VA = "0xE52B4C")]
	private string GetSetFileFromName(string setName)
	{
		return null;
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xE53F30", Offset = "0xE53F30", VA = "0xE53F30")]
	public void DeleteSetCrate(string setName)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xE53F94", Offset = "0xE53F94", VA = "0xE53F94")]
	public WaveSetData DuplicateSetCrate(string setName)
	{
		return default(WaveSetData);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xE54148", Offset = "0xE54148", VA = "0xE54148")]
	public bool RenameSetCrate(string oldSetName, string newSetName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xE54058", Offset = "0xE54058", VA = "0xE54058")]
	private static string GetSetMetaFile(string setFile)
	{
		return null;
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xE547A8", Offset = "0xE547A8", VA = "0xE547A8")]
	private static CustomSetMeta GetSetMeta(string metaFile)
	{
		return default(CustomSetMeta);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xE540C8", Offset = "0xE540C8", VA = "0xE540C8")]
	private void SaveSetMeta(string metaFile, CustomSetMeta meta)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xE53F60", Offset = "0xE53F60", VA = "0xE53F60")]
	public void DeleteSetMetaFile(string setFile)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xE54730", Offset = "0xE54730", VA = "0xE54730")]
	private void RenameSetMeta(string oldSetFile, string newSetFile)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xE54818", Offset = "0xE54818", VA = "0xE54818")]
	public bool IsSetPublished(string setFile, out int publicNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xE53BA8", Offset = "0xE53BA8", VA = "0xE53BA8")]
	private void SavePublicNumber(string setFile, int number)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xE54874", Offset = "0xE54874", VA = "0xE54874")]
	public PlayerProfileData.Solo.Set.Result GetSetPersonalBest(string setFile)
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xE5490C", Offset = "0xE5490C", VA = "0xE5490C")]
	public void UpdatePersonalBest(string setFile, PlayerProfileData.Solo.Set.Result result)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xE53D88", Offset = "0xE53D88", VA = "0xE53D88")]
	private void ResetPersonalBest(string setFile)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xE549BC", Offset = "0xE549BC", VA = "0xE549BC")]
	public void DevOnly_DownloadCustomSetToEditor()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xE54C04", Offset = "0xE54C04", VA = "0xE54C04")]
	public void DevOnly_PackageSetFromEditorForMC()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xE54E2C", Offset = "0xE54E2C", VA = "0xE54E2C")]
	public void DevOnly_DecryptCustomSet()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xE55194", Offset = "0xE55194", VA = "0xE55194")]
	private void ReloadTargets()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xE55298", Offset = "0xE55298", VA = "0xE55298")]
	private void ReloadHextrusions()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xE553AC", Offset = "0xE553AC", VA = "0xE553AC")]
	private void ReloadHard()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xE55558", Offset = "0xE55558", VA = "0xE55558")]
	private void SaveIfNeeded(bool now = false)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xE55898", Offset = "0xE55898", VA = "0xE55898")]
	private bool IsValidSnake(IEnumerable<Brick> bricks)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xE55E20", Offset = "0xE55E20", VA = "0xE55E20")]
	private Brick FindSnakeHead(IEnumerable<Brick> bricks)
	{
		return null;
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xE55F78", Offset = "0xE55F78", VA = "0xE55F78")]
	private (Brick, Brick) FindSnakeHeadAndTail(IEnumerable<Brick> bricks)
	{
		return default((Brick, Brick));
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xE56140", Offset = "0xE56140", VA = "0xE56140")]
	private void SetBricksAsSnake(IEnumerable<Brick> bricks)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xE56510", Offset = "0xE56510", VA = "0xE56510")]
	private IEnumerable<Brick> SelectedNeighbors(Brick brick)
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xE565CC", Offset = "0xE565CC", VA = "0xE565CC")]
	private void ResetValidSnakeNeighbors()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xE56B00", Offset = "0xE56B00", VA = "0xE56B00")]
	private void SplitSnakeIfSelectionCutThrough()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xE56E48", Offset = "0xE56E48", VA = "0xE56E48")]
	private void SplitOneSnake(TargetSnake snake)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xE5713C", Offset = "0xE5713C", VA = "0xE5713C")]
	private void DeselectHalfSnake(Brick clickedBrick)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xE57338", Offset = "0xE57338", VA = "0xE57338")]
	private List<Brick> GetSnakeSelectionFromTo(Brick from, Brick to, [Optional] Brick prev)
	{
		return null;
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xE57594", Offset = "0xE57594", VA = "0xE57594")]
	private void ShootBrushRay(Ray ray, out RaycastHit hit)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xE579D0", Offset = "0xE579D0", VA = "0xE579D0")]
	private void UpdateSelection()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xE57908", Offset = "0xE57908", VA = "0xE57908")]
	private void OnPointerEnterBrick()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xE57E50", Offset = "0xE57E50", VA = "0xE57E50")]
	private void OnTriggerClicked()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xE58180", Offset = "0xE58180", VA = "0xE58180")]
	private void OnTriggerOneClick()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xE5806C", Offset = "0xE5806C", VA = "0xE5806C")]
	private void OnTriggerDoubleClick()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xE58C94", Offset = "0xE58C94", VA = "0xE58C94")]
	private void OnTriggerReleased()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xE58DB4", Offset = "0xE58DB4", VA = "0xE58DB4")]
	private void OnGripReleased()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xE58D48", Offset = "0xE58D48", VA = "0xE58D48")]
	private void ApplySelection()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xE58E34", Offset = "0xE58E34", VA = "0xE58E34")]
	private void ApplyBrush()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xE589F0", Offset = "0xE589F0", VA = "0xE589F0")]
	private void AddNeighborsToSelection(Brick brick, bool skipIfSelected = false)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xE58B40", Offset = "0xE58B40", VA = "0xE58B40")]
	private void RemoveNeighborsFromSelection(Brick brick, bool skipIfNotSelected = false)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xE58248", Offset = "0xE58248", VA = "0xE58248")]
	private void AddTargetGroupToSelection(Target target)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xE5861C", Offset = "0xE5861C", VA = "0xE5861C")]
	private void RemoveTargetGroupFromSelection(Target target)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xE57B58", Offset = "0xE57B58", VA = "0xE57B58")]
	private void RemoveBrickFromSelection(Brick brick, bool silent = false)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xE57CAC", Offset = "0xE57CAC", VA = "0xE57CAC")]
	private void AddBrickToSelection(Brick brick, bool silent = false)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xE5800C", Offset = "0xE5800C", VA = "0xE5800C")]
	private void DeselectAllBricks()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xE59034", Offset = "0xE59034", VA = "0xE59034")]
	private WaveHandcrafted CreateUndoWave(string name)
	{
		return null;
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xE590E4", Offset = "0xE590E4", VA = "0xE590E4")]
	private void InitUndo()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xE592C4", Offset = "0xE592C4", VA = "0xE592C4")]
	private void ResetUndo()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xE59504", Offset = "0xE59504", VA = "0xE59504")]
	private void ResetRedoStack()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xE59BE4", Offset = "0xE59BE4", VA = "0xE59BE4")]
	private void CopyLevelBrick(RuntimeBrick from, RuntimeBrick to)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xE59614", Offset = "0xE59614", VA = "0xE59614")]
	private void CopyWaveState(WaveHandcrafted from, WaveHandcrafted to)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xE5567C", Offset = "0xE5567C", VA = "0xE5567C")]
	private void SaveUndoState()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xE59C1C", Offset = "0xE59C1C", VA = "0xE59C1C")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xE59D90", Offset = "0xE59D90", VA = "0xE59D90")]
	public void Redo()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xE5A840", Offset = "0xE5A840", VA = "0xE5A840", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xE5A170", Offset = "0xE5A170", VA = "0xE5A170")]
	private void UnRegisterCallbacks()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xE5A304", Offset = "0xE5A304", VA = "0xE5A304")]
	private void RegisterCallbacks()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xE5A924", Offset = "0xE5A924", VA = "0xE5A924")]
	private void OnAppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xE5A934", Offset = "0xE5A934", VA = "0xE5A934")]
	public void PreviewLocalWave(WaveSetData setData)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xE5AA28", Offset = "0xE5AA28", VA = "0xE5AA28")]
	public void StartEditingLocalWave(WaveSetData setData, [Optional] Action<WaveSet> done)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xE5AB3C", Offset = "0xE5AB3C", VA = "0xE5AB3C")]
	public void LoadEditorArena()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xE5ADE4", Offset = "0xE5ADE4", VA = "0xE5ADE4")]
	public void BackToBrowse()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xE5AED4", Offset = "0xE5AED4", VA = "0xE5AED4")]
	public void ClearCurrentSetEntirely()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xE5B044", Offset = "0xE5B044", VA = "0xE5B044")]
	public void BackToEditCurrentWave()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xE5AD84", Offset = "0xE5AD84", VA = "0xE5AD84")]
	[IteratorStateMachine(typeof(<ShowWelcomeWhenArenaIsReady>d__213))]
	private IEnumerator ShowWelcomeWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xE5AE60", Offset = "0xE5AE60", VA = "0xE5AE60")]
	[IteratorStateMachine(typeof(<ShowUtilityWhenArenaIsReady>d__214))]
	private IEnumerator ShowUtilityWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xE5AE00", Offset = "0xE5AE00", VA = "0xE5AE00")]
	[IteratorStateMachine(typeof(<ShowBrowsingWhenArenaIsReady>d__215))]
	private IEnumerator ShowBrowsingWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xE5B4DC", Offset = "0xE5B4DC", VA = "0xE5B4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xE5B574", Offset = "0xE5B574", VA = "0xE5B574")]
	public void PlaySetFromCurrentWave()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xE5B57C", Offset = "0xE5B57C", VA = "0xE5B57C")]
	public void PlaySet(int fromIndex = 0)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xE5B8FC", Offset = "0xE5B8FC", VA = "0xE5B8FC")]
	public void PublishCurrentSet(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xE5BAC8", Offset = "0xE5BAC8", VA = "0xE5BAC8")]
	public void RePublishCurrentSet(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xE5BC94", Offset = "0xE5BC94", VA = "0xE5BC94")]
	private void OnArenaShutdown()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xE53E20", Offset = "0xE53E20", VA = "0xE53E20")]
	private WaveSet CreateNewSet(string set_name)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xE5BE8C", Offset = "0xE5BE8C", VA = "0xE5BE8C")]
	public WaveHandcrafted AddNewWave([Optional] WaveSet set)
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xE5C100", Offset = "0xE5C100", VA = "0xE5C100")]
	private void SetWavesPosition(WaveSet set)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xE5C1F0", Offset = "0xE5C1F0", VA = "0xE5C1F0")]
	public string NameWave(int index)
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xE5C27C", Offset = "0xE5C27C", VA = "0xE5C27C")]
	private void RenameWaves()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xE5C2F8", Offset = "0xE5C2F8", VA = "0xE5C2F8")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xE5C5F0", Offset = "0xE5C5F0", VA = "0xE5C5F0")]
	public bool MoveWave(int oldIndex, int newIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xE5C6F4", Offset = "0xE5C6F4", VA = "0xE5C6F4")]
	public void ShiftCurrentWave(int offset)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xE5C8DC", Offset = "0xE5C8DC", VA = "0xE5C8DC")]
	public bool RemoveWave(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xE5C914", Offset = "0xE5C914", VA = "0xE5C914")]
	public bool RemoveWave([Optional] Wave wave)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xE5CB10", Offset = "0xE5CB10", VA = "0xE5CB10")]
	public int AlternativeIndexForDeletedWave(int i = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xE5CB28", Offset = "0xE5CB28", VA = "0xE5CB28")]
	public bool ChangeCurrentEditWave(int waveIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xE5B168", Offset = "0xE5B168", VA = "0xE5B168")]
	private void ChangeCurrentEditWave(WaveHandcrafted wave, int waveIndex = -1)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xE5CBFC", Offset = "0xE5CBFC", VA = "0xE5CBFC")]
	private void SetCurrentEditSet(WaveSet set)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xE5BD48", Offset = "0xE5BD48", VA = "0xE5BD48")]
	private void HideAllUIs()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xE5CC34", Offset = "0xE5CC34", VA = "0xE5CC34")]
	public LevelEditorManager()
	{
	}
}
[Token(Token = "0x2000246")]
public class EditorBordersKnob : KnobBase
{
	[Token(Token = "0x2000247")]
	public class ValueChangedEvent : UnityEvent<HexTrudeManager.WallType>
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE5F3B0", Offset = "0xE5F3B0", VA = "0xE5F3B0")]
		public ValueChangedEvent()
		{
		}
	}

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialChange;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ValueChangedEvent ValueChanged;

	[Token(Token = "0x1700020A")]
	public HexTrudeManager.WallType Value
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE5F134", Offset = "0xE5F134", VA = "0xE5F134")]
		[CompilerGenerated]
		get
		{
			return default(HexTrudeManager.WallType);
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xE5F13C", Offset = "0xE5F13C", VA = "0xE5F13C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xE5F040", Offset = "0xE5F040", VA = "0xE5F040")]
	public void InitializeKnob()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xE5F068", Offset = "0xE5F068", VA = "0xE5F068", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xE5F144", Offset = "0xE5F144", VA = "0xE5F144", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xE5F188", Offset = "0xE5F188", VA = "0xE5F188", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xE5F338", Offset = "0xE5F338", VA = "0xE5F338")]
	public EditorBordersKnob()
	{
	}
}
[Token(Token = "0x2000248")]
public class EditorBrowsKnob : KnobBase
{
	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <BackToDefaultCo>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorBrowsKnob <>4__this;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmp>5__2;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__4;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xE5FBCC", Offset = "0xE5FBCC", VA = "0xE5FBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xE5FC14", Offset = "0xE5FC14", VA = "0xE5FC14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xE5F9B8", Offset = "0xE5F9B8", VA = "0xE5F9B8")]
		[DebuggerHidden]
		public <BackToDefaultCo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xE5FA74", Offset = "0xE5FA74", VA = "0xE5FA74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xE5FA78", Offset = "0xE5FA78", VA = "0xE5FA78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xE5FBD4", Offset = "0xE5FBD4", VA = "0xE5FBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Browsing")]
	public int index;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stepTime;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro countText;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _timeSinceLastStep;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _step;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _count;

	[Token(Token = "0x4000EEA")]
	private const string LAST_KNOWN_VALUE_KEY = "LastSeenSetInLevelEditorBrowser";

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _BackToDefaultCo;

	[Token(Token = "0x1700020B")]
	public int Count
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE5F3F8", Offset = "0xE5F3F8", VA = "0xE5F3F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xE5F400", Offset = "0xE5F400", VA = "0xE5F400")]
		set
		{
		}
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xE5F4B0", Offset = "0xE5F4B0", VA = "0xE5F4B0", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xE5F4B8", Offset = "0xE5F4B8", VA = "0xE5F4B8", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xE5F720", Offset = "0xE5F720", VA = "0xE5F720", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xE5F73C", Offset = "0xE5F73C", VA = "0xE5F73C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xE5F758", Offset = "0xE5F758", VA = "0xE5F758")]
	public void LoadLastIndex()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xE5F7B8", Offset = "0xE5F7B8", VA = "0xE5F7B8")]
	public static int LastIndexPref()
	{
		return default(int);
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xE5F81C", Offset = "0xE5F81C", VA = "0xE5F81C")]
	public void SaveLastIndex()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xE5F870", Offset = "0xE5F870", VA = "0xE5F870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xE5F8B4", Offset = "0xE5F8B4", VA = "0xE5F8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xE5F944", Offset = "0xE5F944", VA = "0xE5F944")]
	[IteratorStateMachine(typeof(<BackToDefaultCo>d__20))]
	private IEnumerator BackToDefaultCo()
	{
		return null;
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xE5F9E0", Offset = "0xE5F9E0", VA = "0xE5F9E0")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xE5FA24", Offset = "0xE5FA24", VA = "0xE5FA24")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xE5F700", Offset = "0xE5F700", VA = "0xE5F700")]
	public void SetIndex(int newIndex)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xE5FA58", Offset = "0xE5FA58", VA = "0xE5FA58")]
	public EditorBrowsKnob()
	{
	}
}
[Token(Token = "0x200024A")]
public class EditorBrowsUI : Area
{
	[Token(Token = "0x200024B")]
	private struct SetCache
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CustomSet meta;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timestamp;

		[Token(Token = "0x4000F03")]
		private const float CACHE_VALID_TIME = 600f;

		[Token(Token = "0x17000214")]
		public bool IsValid
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0xE60234", Offset = "0xE60234", VA = "0xE60234")]
			get
			{
				return default(bool);
			}
		}
	}

	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <DebugPrintAllSets>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorBrowsUI <>4__this;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xE61B38", Offset = "0xE61B38", VA = "0xE61B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xE61B80", Offset = "0xE61B80", VA = "0xE61B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xE610C4", Offset = "0xE610C4", VA = "0xE610C4")]
		[DebuggerHidden]
		public <DebugPrintAllSets>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xE61A24", Offset = "0xE61A24", VA = "0xE61A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xE61A28", Offset = "0xE61A28", VA = "0xE61A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE61B40", Offset = "0xE61B40", VA = "0xE61B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorBrowsUI inst;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float refreshTime;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EditorBrowsKnob knob;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions playButton;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIItemTransitions madeBy;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LocalizeFormatted madeByText;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIItemTransitions timesButton;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leaderboardRotator;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomSet _setMeta;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<int, SetCache> _set_meta_cache;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _lastIndex;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _timeSinceIndexChanged;

	[Token(Token = "0x4000EFE")]
	private const int REFRESH_DISABLED = 1000;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> _playerNames;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _numSets;

	[Token(Token = "0x1700020E")]
	public CustomSet SetMeta
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xE5FC1C", Offset = "0xE5FC1C", VA = "0xE5FC1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xE5FC24", Offset = "0xE5FC24", VA = "0xE5FC24")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xE5FD1C", Offset = "0xE5FD1C", VA = "0xE5FD1C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000210")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE5FD24", Offset = "0xE5FD24", VA = "0xE5FD24", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000211")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE5FD2C", Offset = "0xE5FD2C", VA = "0xE5FD2C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000212")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xE5FD34", Offset = "0xE5FD34", VA = "0xE5FD34", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000213")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xE5FD3C", Offset = "0xE5FD3C", VA = "0xE5FD3C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xE5FD44", Offset = "0xE5FD44", VA = "0xE5FD44", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xE5FE44", Offset = "0xE5FE44", VA = "0xE5FE44", Slot = "14")]
	public override void hide(bool byPopUp = false)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xE5FE7C", Offset = "0xE5FE7C", VA = "0xE5FE7C")]
	private void OnNumSetsReceived(bool success, int count)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xE5FF84", Offset = "0xE5FF84", VA = "0xE5FF84", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xE60050", Offset = "0xE60050", VA = "0xE60050")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xE600BC", Offset = "0xE600BC", VA = "0xE600BC")]
	private void SetIndex(int index)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xE60264", Offset = "0xE60264", VA = "0xE60264")]
	private void GetIndexMeta(int index, Action<bool, CustomSet> OnResponse)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xE6031C", Offset = "0xE6031C", VA = "0xE6031C")]
	public static void GetIndexMeta_Cahce(int index, Action<bool, CustomSet> OnResponse)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xE5EB88", Offset = "0xE5EB88", VA = "0xE5EB88")]
	public void UpdateSetCache(CustomSet set)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xE60468", Offset = "0xE60468", VA = "0xE60468")]
	private void OnSetMetaReceived(bool success, CustomSet set)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xE6081C", Offset = "0xE6081C", VA = "0xE6081C")]
	private void AddUserNameOnCustomSetMeta(CustomSet set)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xE60938", Offset = "0xE60938", VA = "0xE60938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xE60A48", Offset = "0xE60A48", VA = "0xE60A48", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xE60AF4", Offset = "0xE60AF4", VA = "0xE60AF4")]
	public void OnPlayClicked()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xE60AFC", Offset = "0xE60AFC", VA = "0xE60AFC")]
	public void PlaySet(CustomSet set)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xE60D0C", Offset = "0xE60D0C", VA = "0xE60D0C")]
	public void OnRandomClicked()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xE60D58", Offset = "0xE60D58", VA = "0xE60D58")]
	public void SetKnobSetNumber(int setNum)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xE60D8C", Offset = "0xE60D8C", VA = "0xE60D8C")]
	public void OnLeaderboardClicked()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xE60E7C", Offset = "0xE60E7C", VA = "0xE60E7C")]
	public void GetNextValidSet(int index, Action<CustomSet> OnResponse, int tries = 0)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xE61050", Offset = "0xE61050", VA = "0xE61050")]
	[IteratorStateMachine(typeof(<DebugPrintAllSets>d__48))]
	private IEnumerator DebugPrintAllSets()
	{
		return null;
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xE610EC", Offset = "0xE610EC", VA = "0xE610EC")]
	private void DebugGetSetInfo(int setNum)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xE611CC", Offset = "0xE611CC", VA = "0xE611CC")]
	private void DebugPrintSetInfo(CustomSet set)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xE61320", Offset = "0xE61320", VA = "0xE61320")]
	public EditorBrowsUI()
	{
	}
}
[Token(Token = "0x2000253")]
public class EditorDarkener : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[CompilerGenerated]
	private sealed class <FadeCo>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool revense;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorDarkener <>4__this;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color0>5__2;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <color1>5__3;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__4;

		[Token(Token = "0x17000217")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0xE623E4", Offset = "0xE623E4", VA = "0xE623E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xE6242C", Offset = "0xE6242C", VA = "0xE6242C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xE620C4", Offset = "0xE620C4", VA = "0xE620C4")]
		[DebuggerHidden]
		public <FadeCo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xE621EC", Offset = "0xE621EC", VA = "0xE621EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xE621F0", Offset = "0xE621F0", VA = "0xE621F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xE623EC", Offset = "0xE623EC", VA = "0xE623EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float durationIn;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float durationOut;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _originalColor;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _param;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CoroutineHandle? _handle;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _wasVisible;

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xE61F14", Offset = "0xE61F14", VA = "0xE61F14")]
	private void Fade(float duration, bool reverse = false)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xE6202C", Offset = "0xE6202C", VA = "0xE6202C")]
	[IteratorStateMachine(typeof(<FadeCo>d__7))]
	private IEnumerator<float> FadeCo(float duration, bool revense)
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xE620EC", Offset = "0xE620EC", VA = "0xE620EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xE62188", Offset = "0xE62188", VA = "0xE62188")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xE621D8", Offset = "0xE621D8", VA = "0xE621D8")]
	public EditorDarkener()
	{
	}
}
[Token(Token = "0x2000255")]
public class EditorEnergyKnob : KnobBase
{
	[Token(Token = "0x2000256")]
	public class ValueChangedEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xE629EC", Offset = "0xE629EC", VA = "0xE629EC")]
		public ValueChangedEvent()
		{
		}
	}

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Header("Energy")]
	public float minEnergy;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float maxEnergy;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float barPower;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer energyBar;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ValueChangedEvent ValueChanged;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _TimeLeftID;

	[Token(Token = "0x17000219")]
	public float EnergyFactor
	{
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xE62488", Offset = "0xE62488", VA = "0xE62488")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xE62490", Offset = "0xE62490", VA = "0xE62490")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xE62498", Offset = "0xE62498", VA = "0xE62498", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xE624F0", Offset = "0xE624F0", VA = "0xE624F0")]
	private void UpdateBar(float amplitude)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xE6255C", Offset = "0xE6255C", VA = "0xE6255C", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xE62750", Offset = "0xE62750", VA = "0xE62750", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xE627E0", Offset = "0xE627E0", VA = "0xE627E0", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xE62644", Offset = "0xE62644", VA = "0xE62644")]
	private static float RoundFloat(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xE626B8", Offset = "0xE626B8", VA = "0xE626B8")]
	private float ValueToAmplitude(float energy)
	{
		return default(float);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xE628A8", Offset = "0xE628A8", VA = "0xE628A8")]
	private float AmplitudeToValue(float amplitude)
	{
		return default(float);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xE6290C", Offset = "0xE6290C", VA = "0xE6290C")]
	public void OnKnobDeselect()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xE62964", Offset = "0xE62964", VA = "0xE62964")]
	public EditorEnergyKnob()
	{
	}
}
[Token(Token = "0x2000257")]
public class EditorFloaterButton : MonoBehaviour
{
	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xE62A34", Offset = "0xE62A34", VA = "0xE62A34")]
	public void OnDeleteClicked()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xE62B00", Offset = "0xE62B00", VA = "0xE62B00")]
	public EditorFloaterButton()
	{
	}
}
[Token(Token = "0x2000258")]
public class EditorOffsetKnob : KnobBase
{
	[Token(Token = "0x2000259")]
	[CompilerGenerated]
	private sealed class <BackToDefaultCo>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorOffsetKnob <>4__this;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmp>5__2;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xE63018", Offset = "0xE63018", VA = "0xE63018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xE63060", Offset = "0xE63060", VA = "0xE63060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xE62D40", Offset = "0xE62D40", VA = "0xE62D40")]
		[DebuggerHidden]
		public <BackToDefaultCo>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xE62EE4", Offset = "0xE62EE4", VA = "0xE62EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xE62EE8", Offset = "0xE62EE8", VA = "0xE62EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xE63020", Offset = "0xE63020", VA = "0xE63020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float firstDelay;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float delay;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _offset;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _timeSinceLastShift;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _delay;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine _BackToDefaultCo;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xE62B08", Offset = "0xE62B08", VA = "0xE62B08", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xE62B10", Offset = "0xE62B10", VA = "0xE62B10", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xE62B54", Offset = "0xE62B54", VA = "0xE62B54", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xE62CCC", Offset = "0xE62CCC", VA = "0xE62CCC")]
	[IteratorStateMachine(typeof(<BackToDefaultCo>d__9))]
	private IEnumerator BackToDefaultCo()
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xE62D68", Offset = "0xE62D68", VA = "0xE62D68")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xE62DAC", Offset = "0xE62DAC", VA = "0xE62DAC")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xE62DE4", Offset = "0xE62DE4", VA = "0xE62DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xE62E8C", Offset = "0xE62E8C", VA = "0xE62E8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xE62ED0", Offset = "0xE62ED0", VA = "0xE62ED0")]
	public EditorOffsetKnob()
	{
	}
}
[Token(Token = "0x200025A")]
public class EditorSetSelectionUI : Area
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorSetSelectionUI inst;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelectableWavesSetsTouchItemGruop setListContainer;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions newSetButton;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions duplicateSetButton;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIItemTransitions openSetButton;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions deleteSetButton;

	[Token(Token = "0x1700021C")]
	private bool _SelectedNotAvaliable
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xE63068", Offset = "0xE63068", VA = "0xE63068")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021D")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xE630E0", Offset = "0xE630E0", VA = "0xE630E0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021E")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xE630E8", Offset = "0xE630E8", VA = "0xE630E8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021F")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xE630F0", Offset = "0xE630F0", VA = "0xE630F0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000220")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xE630F8", Offset = "0xE630F8", VA = "0xE630F8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000221")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xE63100", Offset = "0xE63100", VA = "0xE63100", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000222")]
	public int waveShiftForCurrentSession
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xE63108", Offset = "0xE63108", VA = "0xE63108")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xE63110", Offset = "0xE63110", VA = "0xE63110")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xE63118", Offset = "0xE63118", VA = "0xE63118", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xE5B108", Offset = "0xE5B108", VA = "0xE5B108")]
	public void SetWaveShiftInFrontOfPlayer()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xE6317C", Offset = "0xE6317C", VA = "0xE6317C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xE6330C", Offset = "0xE6330C", VA = "0xE6330C")]
	private void DisableButtonsIfNeeded()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE63424", Offset = "0xE63424", VA = "0xE63424", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xE634F8", Offset = "0xE634F8", VA = "0xE634F8")]
	public void OnCreateNewSet()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xE6361C", Offset = "0xE6361C", VA = "0xE6361C")]
	public void OnDeleteClick()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xE637D0", Offset = "0xE637D0", VA = "0xE637D0")]
	public void OnDuplicateClick()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xE63908", Offset = "0xE63908", VA = "0xE63908")]
	public void OnOpenClick()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xE63A28", Offset = "0xE63A28", VA = "0xE63A28")]
	public EditorSetSelectionUI()
	{
	}
}
[Token(Token = "0x200025B")]
public class EditorStickUI : MonoBehaviour
{
	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorStickUI inst;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI hpText;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitions hpIncrement;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions hpDecrement;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIItemTransitions forceFieldToggle;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder _builder;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Target target;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _button;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _center;

	[Token(Token = "0x17000223")]
	public bool IsVisible
	{
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xE63AA4", Offset = "0xE63AA4", VA = "0xE63AA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xE63AC0", Offset = "0xE63AC0", VA = "0xE63AC0")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xE63B9C", Offset = "0xE63B9C", VA = "0xE63B9C")]
	private void OnMusicSkipRequestedNoDelay(int dir)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xE63C14", Offset = "0xE63C14", VA = "0xE63C14")]
	private void OnSnapTurnRequested(int dir)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xE63C90", Offset = "0xE63C90", VA = "0xE63C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xE63D20", Offset = "0xE63D20", VA = "0xE63D20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xE63EC0", Offset = "0xE63EC0", VA = "0xE63EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xE641E4", Offset = "0xE641E4", VA = "0xE641E4")]
	public EditorStickUI()
	{
	}
}
[Token(Token = "0x200025C")]
[RequireComponent(typeof(EditorUtilityUI))]
public class EditorUtilityRotator : MonoBehaviour
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Follow")]
	public float smoothTime;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Fold")]
	public float foldHorizontalAngleThresh;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float foldAngle;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float foldHeight;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float foldSmoothTime;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform foldTransform;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EditorUtilityUI _ui;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SmoothVector3 _dir;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SmoothFloat _foldAngle;

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xE64258", Offset = "0xE64258", VA = "0xE64258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xE642CC", Offset = "0xE642CC", VA = "0xE642CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xE64ADC", Offset = "0xE64ADC", VA = "0xE64ADC")]
	public EditorUtilityRotator()
	{
	}
}
[Token(Token = "0x200025D")]
public class EditorUtilityUI : Area
{
	[Token(Token = "0x200025F")]
	[CompilerGenerated]
	private sealed class <ScrollToCo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool oneFrameDeley;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EditorUtilityUI <>4__this;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float endValue;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xE66C0C", Offset = "0xE66C0C", VA = "0xE66C0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xE66C54", Offset = "0xE66C54", VA = "0xE66C54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xE65F30", Offset = "0xE65F30", VA = "0xE65F30")]
		[DebuggerHidden]
		public <ScrollToCo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE66AD8", Offset = "0xE66AD8", VA = "0xE66AD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xE66ADC", Offset = "0xE66ADC", VA = "0xE66ADC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xE66C14", Offset = "0xE66C14", VA = "0xE66C14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorUtilityUI inst;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelectableTouchItemGroupDynamic selectableBrushes;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SelectableDynamicTouchItemWaveSetGroup selectableWaves;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScrollRect wavesScrollRect;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro SetTitleText;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions centerMark;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("UI Buttons")]
	public UIItemTransitions undoButton;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions redoButton;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIItemTransitions publishButton;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIItemTransitions cantPublishTooltip;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIItemTransitions republishButton;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UIItemTransitions cantRePublishTooltip;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LocalizeFormatted publicIDText;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UIItemTransitions deleteWaveButton;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIItemTransitions addWaveButton;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UIItemTransitions playSetButton;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UIItemTransitions playFromHereButton;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("UI Knobs")]
	public EditorEnergyKnob energyKnob;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public EditorBordersKnob bordersKnob;

	[Token(Token = "0x4000F65")]
	public const int MAX_POWERUPS = 10;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Power ups buttons")]
	public UIItemTransitions nukePowerUp;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<UIItemTransitions> powerUps;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _powerUpsCount;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine _scrollToCo;

	[Token(Token = "0x17000224")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xE64B74", Offset = "0xE64B74", VA = "0xE64B74", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000225")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xE64B7C", Offset = "0xE64B7C", VA = "0xE64B7C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000226")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xE64B84", Offset = "0xE64B84", VA = "0xE64B84", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000227")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xE64B8C", Offset = "0xE64B8C", VA = "0xE64B8C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000228")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xE64B94", Offset = "0xE64B94", VA = "0xE64B94", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xE64B9C", Offset = "0xE64B9C", VA = "0xE64B9C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xE64DDC", Offset = "0xE64DDC", VA = "0xE64DDC")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xE651D8", Offset = "0xE651D8", VA = "0xE651D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xE652F0", Offset = "0xE652F0", VA = "0xE652F0")]
	private void UpdatePowerUpUI()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE65660", Offset = "0xE65660", VA = "0xE65660")]
	private void DisableWaveListButtons()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE65788", Offset = "0xE65788", VA = "0xE65788", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE65BF0", Offset = "0xE65BF0", VA = "0xE65BF0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE65C1C", Offset = "0xE65C1C", VA = "0xE65C1C")]
	private void OnWaveChanged()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xE65CD8", Offset = "0xE65CD8", VA = "0xE65CD8")]
	private void ReValidateSelectedItem()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE64DE0", Offset = "0xE64DE0", VA = "0xE64DE0")]
	private void UpdatePublishButtons()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE65A6C", Offset = "0xE65A6C", VA = "0xE65A6C")]
	private void SetLoaded([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE65C34", Offset = "0xE65C34", VA = "0xE65C34")]
	private void AutoSelectLastEditWave()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE5C3B8", Offset = "0xE5C3B8", VA = "0xE5C3B8")]
	public void RefreshList()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE65B5C", Offset = "0xE65B5C", VA = "0xE65B5C")]
	private void ScrollToItem([Optional] WaveListItemUI item)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE65D80", Offset = "0xE65D80", VA = "0xE65D80")]
	private void SnapTo(WaveListItemUI target)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xE65E90", Offset = "0xE65E90", VA = "0xE65E90")]
	[IteratorStateMachine(typeof(<ScrollToCo>d__49))]
	private IEnumerator ScrollToCo(float endValue, float time = 0.2f, bool oneFrameDeley = true)
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xE65F58", Offset = "0xE65F58", VA = "0xE65F58")]
	public void OnWaveItemSelected(SelectableTouchItem item)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xE66028", Offset = "0xE66028", VA = "0xE66028")]
	public void OnBrushItemSelected(SelectableTouchItem item)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE660AC", Offset = "0xE660AC", VA = "0xE660AC")]
	public void OnExitButtonClicked()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE66158", Offset = "0xE66158", VA = "0xE66158")]
	public void OnPowerUpClick(int powerUp)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE661DC", Offset = "0xE661DC", VA = "0xE661DC")]
	public void PlayFromHere()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xE6560C", Offset = "0xE6560C", VA = "0xE6560C")]
	public void PlayFromStart()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xE66230", Offset = "0xE66230", VA = "0xE66230")]
	public void OnPublishClicked()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE66308", Offset = "0xE66308", VA = "0xE66308")]
	public void OnRePublishClicked()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE663E0", Offset = "0xE663E0", VA = "0xE663E0")]
	public void OnWaveUpClick()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xE664F0", Offset = "0xE664F0", VA = "0xE664F0")]
	public void OnWaveDownClick()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xE66600", Offset = "0xE66600", VA = "0xE66600")]
	public void OnWaveDelete()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xE667C0", Offset = "0xE667C0", VA = "0xE667C0")]
	public void OnNewWave()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xE66894", Offset = "0xE66894", VA = "0xE66894")]
	public void OnUndoClicked()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xE668E4", Offset = "0xE668E4", VA = "0xE668E4")]
	public void OnRedoClicked()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xE66934", Offset = "0xE66934", VA = "0xE66934")]
	public EditorUtilityUI()
	{
	}
}
[Token(Token = "0x2000260")]
public class EditorWelcomeUI : Area
{
	[Serializable]
	[Token(Token = "0x2000261")]
	public struct JapaneseSwitch
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform welcomeText;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RectTransform welcomeSuperText;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float welcomeTextOffset;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float welcomeSuperTextOffset;
	}

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorWelcomeUI inst;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public JapaneseSwitch japaneseSwitch;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _welcomeTextOrigY;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _welcomeSuperTextOrigY;

	[Token(Token = "0x1700022B")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xE66C5C", Offset = "0xE66C5C", VA = "0xE66C5C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022C")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xE66C64", Offset = "0xE66C64", VA = "0xE66C64", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022D")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xE66C6C", Offset = "0xE66C6C", VA = "0xE66C6C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022E")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xE66C74", Offset = "0xE66C74", VA = "0xE66C74", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022F")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xE66C7C", Offset = "0xE66C7C", VA = "0xE66C7C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xE66C84", Offset = "0xE66C84", VA = "0xE66C84", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xE66D18", Offset = "0xE66D18", VA = "0xE66D18", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xE66DAC", Offset = "0xE66DAC", VA = "0xE66DAC")]
	public void OnCreateClicked()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xE66E64", Offset = "0xE66E64", VA = "0xE66E64")]
	public void OnBrowseClicked()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xE66F2C", Offset = "0xE66F2C", VA = "0xE66F2C")]
	public void OnWelcomeLocalized()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xE6704C", Offset = "0xE6704C", VA = "0xE6704C")]
	public EditorWelcomeUI()
	{
	}
}
[Token(Token = "0x2000262")]
public class MaterialProgressController : MonoBehaviour
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressTouchItem progressItem;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image progressImage;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string property;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float from;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _progressID;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xE67054", Offset = "0xE67054", VA = "0xE67054")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xE6713C", Offset = "0xE6713C", VA = "0xE6713C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xE67224", Offset = "0xE67224", VA = "0xE67224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xE6730C", Offset = "0xE6730C", VA = "0xE6730C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xE673F4", Offset = "0xE673F4", VA = "0xE673F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xE67470", Offset = "0xE67470", VA = "0xE67470")]
	private void updateMaterialProgress(float value)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xE674F0", Offset = "0xE674F0", VA = "0xE674F0")]
	public MaterialProgressController()
	{
	}
}
[Token(Token = "0x2000263")]
public class SelectableDynamicTouchItemWaveSetGroup : SelectableTouchItemGroupDynamic<WaveListItemUI, WaveHandcrafted>
{
	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xE67550", Offset = "0xE67550", VA = "0xE67550")]
	public SelectableDynamicTouchItemWaveSetGroup()
	{
	}
}
[Token(Token = "0x2000264")]
public class SelectableWaveSetItem : SelectableDynamicTouchItem<WaveSetData>
{
	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI IdText;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UIItemTransitions renameButton;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WaveSetData _data;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private UIItemTransitions _transition;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TouchScreenKeyboard _keyboard;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] INVALID_CHARS;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _builder;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string _lastText;

	[Token(Token = "0x17000230")]
	public override WaveSetData Data
	{
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xE67598", Offset = "0xE67598", VA = "0xE67598", Slot = "8")]
		get
		{
			return default(WaveSetData);
		}
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xE675AC", Offset = "0xE675AC", VA = "0xE675AC", Slot = "9")]
	public override void InitializeItem(WaveSetData data)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xE677A0", Offset = "0xE677A0", VA = "0xE677A0")]
	private void OnSelectedThisSet()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xE67840", Offset = "0xE67840", VA = "0xE67840")]
	public void OnRenameClicked()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xE678BC", Offset = "0xE678BC", VA = "0xE678BC")]
	private static string GetValidFilename(string fileName, char replaceChar = '_')
	{
		return null;
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xE67AB0", Offset = "0xE67AB0", VA = "0xE67AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xE67CF8", Offset = "0xE67CF8", VA = "0xE67CF8")]
	public SelectableWaveSetItem()
	{
	}
}
[Token(Token = "0x2000266")]
public class SelectableWavesSetsTouchItemGruop : SelectableTouchItemGroupDynamic<SelectableWaveSetItem, WaveSetData>
{
	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xE67DE8", Offset = "0xE67DE8", VA = "0xE67DE8")]
	public SelectableWavesSetsTouchItemGruop()
	{
	}
}
[Token(Token = "0x2000267")]
public class WaveListItemUI : SelectableDynamicTouchItem<WaveHandcrafted>
{
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI waveText;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject WarningIcon;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _isValid;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string _name;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private WaveHandcrafted _wave;

	[Token(Token = "0x17000231")]
	public bool IsValid
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xE67E30", Offset = "0xE67E30", VA = "0xE67E30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xE67E38", Offset = "0xE67E38", VA = "0xE67E38")]
		set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public string Name
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xE67E68", Offset = "0xE67E68", VA = "0xE67E68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xE67E70", Offset = "0xE67E70", VA = "0xE67E70")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public WaveHandcrafted Wave
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xE67ED4", Offset = "0xE67ED4", VA = "0xE67ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000234")]
	public override WaveHandcrafted Data
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xE67EDC", Offset = "0xE67EDC", VA = "0xE67EDC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE67EE4", Offset = "0xE67EE4", VA = "0xE67EE4", Slot = "9")]
	public override void InitializeItem(WaveHandcrafted wave)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE67F3C", Offset = "0xE67F3C", VA = "0xE67F3C")]
	public bool ReValidate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE67F68", Offset = "0xE67F68", VA = "0xE67F68")]
	public WaveListItemUI()
	{
	}
}
[Token(Token = "0x2000268")]
public struct WaveSetData
{
	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool isPublished;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string publicId;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE67FB0", Offset = "0xE67FB0", VA = "0xE67FB0")]
	public WaveSetData(string name)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE6801C", Offset = "0xE6801C", VA = "0xE6801C")]
	public WaveSetData(string name, bool isPublished, string publicId)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE68054", Offset = "0xE68054", VA = "0xE68054")]
	public WaveSetData(FileInfo fileInfo)
	{
	}
}
[Token(Token = "0x2000269")]
public class DifficultyTest : MonoBehaviour
{
	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE68184", Offset = "0xE68184", VA = "0xE68184")]
	public DifficultyTest()
	{
	}
}
[Token(Token = "0x200026A")]
public interface IBrick
{
	[Token(Token = "0x17000235")]
	IntVector2 Coords
	{
		[Token(Token = "0x6000D20")]
		get;
	}

	[Token(Token = "0x17000236")]
	BrickType Type
	{
		[Token(Token = "0x6000D21")]
		get;
	}

	[Token(Token = "0x17000237")]
	int Id
	{
		[Token(Token = "0x6000D22")]
		get;
	}

	[Token(Token = "0x17000238")]
	bool Extruded
	{
		[Token(Token = "0x6000D23")]
		get;
	}

	[Token(Token = "0x17000239")]
	bool ForceField
	{
		[Token(Token = "0x6000D24")]
		get;
	}

	[Token(Token = "0x1700023A")]
	HexTrudeManager.WallType WallType
	{
		[Token(Token = "0x6000D25")]
		get;
	}
}
[Token(Token = "0x200026B")]
[ExecuteInEditMode]
public class Level : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	[CompilerGenerated]
	private sealed class <get_iterBricks>d__7 : IEnumerable<LevelBrick>, IEnumerable, IEnumerator<LevelBrick>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LevelBrick <>2__current;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level <>4__this;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LevelBrick[] <>7__wrap1;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x1700023E")]
		private LevelBrick System.Collections.Generic.IEnumerator<LevelBrick>.Current
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xE68760", Offset = "0xE68760", VA = "0xE68760", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xE687A8", Offset = "0xE687A8", VA = "0xE687A8", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xE68268", Offset = "0xE68268", VA = "0xE68268")]
		[DebuggerHidden]
		public <get_iterBricks>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xE68684", Offset = "0xE68684", VA = "0xE68684", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xE68688", Offset = "0xE68688", VA = "0xE68688", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xE68768", Offset = "0xE68768", VA = "0xE68768", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xE687B0", Offset = "0xE687B0", VA = "0xE687B0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<LevelBrick> System.Collections.Generic.IEnumerable<LevelBrick>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE6885C", Offset = "0xE6885C", VA = "0xE6885C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<IntVector2, LevelBrick> _bricksByCoords;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelBrick[] bricks;

	[Token(Token = "0x1700023B")]
	private LevelBrick levelBrickPrefab
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xE6818C", Offset = "0xE6818C", VA = "0xE6818C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023C")]
	public Dictionary<IntVector2, LevelBrick> bricksByCoords
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xE681DC", Offset = "0xE681DC", VA = "0xE681DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	public IEnumerable<LevelBrick> iterBricks
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xE681E4", Offset = "0xE681E4", VA = "0xE681E4")]
		[IteratorStateMachine(typeof(<get_iterBricks>d__7))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xE6829C", Offset = "0xE6829C", VA = "0xE6829C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xE682A0", Offset = "0xE682A0", VA = "0xE682A0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xE68300", Offset = "0xE68300", VA = "0xE68300")]
	private void initBricksByCoords()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xE6867C", Offset = "0xE6867C", VA = "0xE6867C")]
	public Level()
	{
	}
}
[Token(Token = "0x200026D")]
public class LevelBrick : MonoBehaviour, IBrick
{
	[Token(Token = "0x200026E")]
	public struct Data
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BrickType type;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int id;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool extruded;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HexTrudeManager.WallType wallType;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forcefield;
	}

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IntVector2 coords;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BrickType type;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool extruded;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool forcefield;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HexTrudeManager.WallType wallType;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Level _level;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LevelBrick[] _neighbors;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer _renderer;

	[Token(Token = "0x17000240")]
	private IntVector2 IBrick.Coords
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xE68860", Offset = "0xE68860", VA = "0xE68860", Slot = "4")]
		get
		{
			return default(IntVector2);
		}
	}

	[Token(Token = "0x17000241")]
	private BrickType IBrick.Type
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xE68868", Offset = "0xE68868", VA = "0xE68868", Slot = "5")]
		get
		{
			return default(BrickType);
		}
	}

	[Token(Token = "0x17000242")]
	private int IBrick.Id
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE68870", Offset = "0xE68870", VA = "0xE68870", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000243")]
	private bool IBrick.Extruded
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xE68878", Offset = "0xE68878", VA = "0xE68878", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000244")]
	private bool IBrick.ForceField
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xE68880", Offset = "0xE68880", VA = "0xE68880", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000245")]
	private HexTrudeManager.WallType IBrick.WallType
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xE68888", Offset = "0xE68888", VA = "0xE68888", Slot = "9")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
	}

	[Token(Token = "0x17000246")]
	private Level level
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xE68890", Offset = "0xE68890", VA = "0xE68890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000247")]
	public LevelBrick[] neighbors
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xE68958", Offset = "0xE68958", VA = "0xE68958")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000248")]
	public bool isBumper
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xE6897C", Offset = "0xE6897C", VA = "0xE6897C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000249")]
	public bool isBlaster
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xE6898C", Offset = "0xE6898C", VA = "0xE6898C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024A")]
	public bool isAnyTarget
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xE6899C", Offset = "0xE6899C", VA = "0xE6899C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024B")]
	public Material typeMaterial
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xE68BE0", Offset = "0xE68BE0", VA = "0xE68BE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xE689BC", Offset = "0xE689BC", VA = "0xE689BC")]
	public static bool IsAnyTarget(BrickType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE689DC", Offset = "0xE689DC", VA = "0xE689DC")]
	public Data getData()
	{
		return default(Data);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xE68A10", Offset = "0xE68A10", VA = "0xE68A10")]
	public void reset(bool ignoreOnEdited = false)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xE68B10", Offset = "0xE68B10", VA = "0xE68B10")]
	public void copyDataFrom(LevelBrick other)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE68B44", Offset = "0xE68B44", VA = "0xE68B44")]
	public void copyDataFrom(Data data)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE68B78", Offset = "0xE68B78", VA = "0xE68B78")]
	public void randomize()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xE68BDC", Offset = "0xE68BDC", VA = "0xE68BDC")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xE68A4C", Offset = "0xE68A4C", VA = "0xE68A4C")]
	public void onEdited()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xE68EBC", Offset = "0xE68EBC", VA = "0xE68EBC")]
	public LevelBrick()
	{
	}
}
[Token(Token = "0x200026F")]
public class RuntimeBrick : IBrick
{
	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntVector2 coords;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BrickType type;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int id;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool extruded;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool forcefield;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public HexTrudeManager.WallType wallType;

	[Token(Token = "0x1700024C")]
	private IntVector2 IBrick.Coords
	{
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE68EC4", Offset = "0xE68EC4", VA = "0xE68EC4", Slot = "4")]
		get
		{
			return default(IntVector2);
		}
	}

	[Token(Token = "0x1700024D")]
	private BrickType IBrick.Type
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE68ECC", Offset = "0xE68ECC", VA = "0xE68ECC", Slot = "5")]
		get
		{
			return default(BrickType);
		}
	}

	[Token(Token = "0x1700024E")]
	private int IBrick.Id
	{
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE68ED4", Offset = "0xE68ED4", VA = "0xE68ED4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024F")]
	private bool IBrick.Extruded
	{
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xE68EDC", Offset = "0xE68EDC", VA = "0xE68EDC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000250")]
	private bool IBrick.ForceField
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE68EE4", Offset = "0xE68EE4", VA = "0xE68EE4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000251")]
	private HexTrudeManager.WallType IBrick.WallType
	{
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xE68EEC", Offset = "0xE68EEC", VA = "0xE68EEC", Slot = "9")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xE68EF4", Offset = "0xE68EF4", VA = "0xE68EF4")]
	public RuntimeBrick()
	{
	}
}
[Token(Token = "0x2000270")]
public class LocalizeDuration : LocalizeDynamic
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _duration;

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xE68EFC", Offset = "0xE68EFC", VA = "0xE68EFC")]
	public void SetDuration(float duration)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xE68F34", Offset = "0xE68F34", VA = "0xE68F34", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xE6911C", Offset = "0xE6911C", VA = "0xE6911C")]
	public LocalizeDuration()
	{
	}
}
[Token(Token = "0x2000271")]
[RequireComponent(typeof(LocalizeEx))]
[RequireComponent(typeof(Localize))]
[RequireComponent(typeof(TMP_Text))]
public abstract class LocalizeDynamic : MonoBehaviour
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _initialized;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TMP_Text _text;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Localize _localize;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected LocalizeEx _localizeEx;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected string _origFormat;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _altText;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StringBuilder _altText2;

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xE691B0", Offset = "0xE691B0", VA = "0xE691B0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xE692F0", Offset = "0xE692F0", VA = "0xE692F0")]
	private void OnLocalized()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xE68F04", Offset = "0xE68F04", VA = "0xE68F04")]
	protected void OnDataChanged()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xE694E4", Offset = "0xE694E4", VA = "0xE694E4")]
	private void ClearAltText()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xE6950C", Offset = "0xE6950C", VA = "0xE6950C")]
	public void SetAltText(string altText)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xE69538", Offset = "0xE69538", VA = "0xE69538")]
	public void SetAltText(StringBuilder altText)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xE693D0", Offset = "0xE693D0", VA = "0xE693D0")]
	protected void UpdateText()
	{
	}

	[Token(Token = "0x6000D5C")]
	protected abstract void UpdateTextForReal();

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xE69124", Offset = "0xE69124", VA = "0xE69124")]
	protected LocalizeDynamic()
	{
	}
}
[Token(Token = "0x2000272")]
public class LocalizeFormatted : LocalizeDynamic
{
	[Serializable]
	[Token(Token = "0x2000273")]
	public struct Param
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Name to be used by code")]
		public string name;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Tooltip("String to replace in original (localized) text")]
		public string stringToReplace;
	}

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Param[] parameters;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, string> _args;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xE69574", Offset = "0xE69574", VA = "0xE69574")]
	public void SetArg(string name, string value)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xE695E4", Offset = "0xE695E4", VA = "0xE695E4", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xE696FC", Offset = "0xE696FC", VA = "0xE696FC")]
	public LocalizeFormatted()
	{
	}
}
[Token(Token = "0x2000274")]
public class LocalizeInt : LocalizeDynamic
{
	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _value;

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xE69784", Offset = "0xE69784", VA = "0xE69784")]
	public void SetInt(int value)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xE6978C", Offset = "0xE6978C", VA = "0xE6978C", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xE697F8", Offset = "0xE697F8", VA = "0xE697F8")]
	public LocalizeInt()
	{
	}
}
[Token(Token = "0x2000275")]
[CreateAssetMenu(menuName = "Data/Dynamic Font Set")]
public class DynamicFontSet : ScriptableObject
{
	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset bold;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset medium;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset regular;

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xE69800", Offset = "0xE69800", VA = "0xE69800")]
	public DynamicFontSet()
	{
	}
}
[Token(Token = "0x2000276")]
[CreateAssetMenu(menuName = "Data/Font Set")]
public class FontSet : ScriptableObject
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset bold;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset block;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset blockBlur;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset medium;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_FontAsset mediumBlur;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_FontAsset regular;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_FontAsset ultra;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_FontAsset ultraBlur;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xE69808", Offset = "0xE69808", VA = "0xE69808")]
	public FontSet()
	{
	}
}
[Token(Token = "0x2000277")]
public enum Language
{
	[Token(Token = "0x4000FCD")]
	System,
	[Token(Token = "0x4000FCE")]
	English,
	[Token(Token = "0x4000FCF")]
	ChineseSimplified,
	[Token(Token = "0x4000FD0")]
	Japanese,
	[Token(Token = "0x4000FD1")]
	Korean,
	[Token(Token = "0x4000FD2")]
	Hebrew
}
[Token(Token = "0x2000278")]
[DisallowMultipleComponent]
public class LocalizeEx : MonoBehaviour
{
	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _language;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localize _localize;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text _textMeshPro;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_FontAsset _origFont;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextAlignmentOptions _origAlignment;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _origMaterial;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _inited;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent onAfterLocalized;

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xE69810", Offset = "0xE69810", VA = "0xE69810")]
	public void setOrigMaterial(Material origMaterial)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xE6983C", Offset = "0xE6983C", VA = "0xE6983C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xE69A0C", Offset = "0xE69A0C", VA = "0xE69A0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xE69AF0", Offset = "0xE69AF0", VA = "0xE69AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xE69B08", Offset = "0xE69B08", VA = "0xE69B08")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xE69BD0", Offset = "0xE69BD0", VA = "0xE69BD0")]
	public void replaceFontAndMaterial()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xE69CB8", Offset = "0xE69CB8", VA = "0xE69CB8")]
	public void SetCustomMaterial(Material material)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xE69F04", Offset = "0xE69F04", VA = "0xE69F04")]
	public void SetTerm(string primary)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xE69F68", Offset = "0xE69F68", VA = "0xE69F68")]
	public LocalizeEx()
	{
	}
}
[Token(Token = "0x2000279")]
public class LocalizeHighlight : MonoBehaviour
{
	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject english;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject nonEnglish;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text _text;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xE69F70", Offset = "0xE69F70", VA = "0xE69F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xE6A124", Offset = "0xE6A124", VA = "0xE6A124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xE6A128", Offset = "0xE6A128", VA = "0xE6A128")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xE6A328", Offset = "0xE6A328", VA = "0xE6A328")]
	public LocalizeHighlight()
	{
	}
}
[Token(Token = "0x200027A")]
public class Localizer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200027B")]
	private struct MergingMaterials
	{
		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material baseMaterial;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material textureMaterial;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xE6AAC0", Offset = "0xE6AAC0", VA = "0xE6AAC0")]
		public MergingMaterials(Material baseMaterial, Material textureMaterial)
		{
		}
	}

	[Token(Token = "0x200027C")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localizer <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xE6AD54", Offset = "0xE6AD54", VA = "0xE6AD54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xE6AD9C", Offset = "0xE6AD9C", VA = "0xE6AD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE6A464", Offset = "0xE6A464", VA = "0xE6A464")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xE6AC24", Offset = "0xE6AC24", VA = "0xE6AC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE6AC28", Offset = "0xE6AC28", VA = "0xE6AC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xE6AD5C", Offset = "0xE6AD5C", VA = "0xE6AD5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Localizer inst;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<MergingMaterials, Material> _mergedMaterials;

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xE6A330", Offset = "0xE6A330", VA = "0xE6A330", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xE6A388", Offset = "0xE6A388", VA = "0xE6A388")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xE6A3F0", Offset = "0xE6A3F0", VA = "0xE6A3F0")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xE6A48C", Offset = "0xE6A48C", VA = "0xE6A48C")]
	public static string getLanguageName(Language language)
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xE6A514", Offset = "0xE6A514", VA = "0xE6A514")]
	public void setLanguage(Language language)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xE6A7C0", Offset = "0xE6A7C0", VA = "0xE6A7C0")]
	private Language getSystemLanguage()
	{
		return default(Language);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xE6A90C", Offset = "0xE6A90C", VA = "0xE6A90C")]
	private void AddFontsAsFallbacks(DynamicFontSet fontSet)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xE6A9D4", Offset = "0xE6A9D4", VA = "0xE6A9D4")]
	private void AddFallbackFont(TMP_FontAsset font, TMP_FontAsset fallbackFont)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xE69DF4", Offset = "0xE69DF4", VA = "0xE69DF4")]
	public Material mergeFontMaterials(Material baseMaterial, Material textureMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xE6AAF0", Offset = "0xE6AAF0", VA = "0xE6AAF0")]
	private Material mergeFontMaterials_actual(Material baseMaterial, Material textureMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xE6AB9C", Offset = "0xE6AB9C", VA = "0xE6AB9C")]
	public Localizer()
	{
	}
}
[Token(Token = "0x200027D")]
public class AnalyticsManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200027E")]
	public static class CustomEvents
	{
		[Token(Token = "0x200027F")]
		public interface ICustomEvent
		{
			[Token(Token = "0x17000254")]
			string EventName
			{
				[Token(Token = "0x6000D8E")]
				get;
			}

			[Token(Token = "0x17000255")]
			Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D8F")]
				[Address(RVA = "0xE6B5A8", Offset = "0xE6B5A8", VA = "0xE6B5A8", Slot = "1")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xE6B618", Offset = "0xE6B618", VA = "0xE6B618", Slot = "2")]
			void Apply()
			{
			}
		}

		[Token(Token = "0x2000280")]
		public class GameOver : ICustomEvent
		{
			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ArenaType arenaType;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ArcadeType arcadeType;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameEndReason endReason;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float gameDuration;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool usedQuickButton;

			[Token(Token = "0x17000256")]
			public string EventName
			{
				[Token(Token = "0x6000D91")]
				[Address(RVA = "0xE6B61C", Offset = "0xE6B61C", VA = "0xE6B61C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			public Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D92")]
				[Address(RVA = "0xE6B65C", Offset = "0xE6B65C", VA = "0xE6B65C", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xE6B040", Offset = "0xE6B040", VA = "0xE6B040")]
			public GameOver()
			{
			}
		}

		[Token(Token = "0x2000281")]
		public abstract class QueueEndEvent : ICustomEvent
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float searchTime;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public QueueType intent;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClient.Connecting connecting;

			[Token(Token = "0x17000258")]
			public virtual string EventName
			{
				[Token(Token = "0x6000D94")]
				[Address(RVA = "0xE6B8D4", Offset = "0xE6B8D4", VA = "0xE6B8D4", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			public virtual Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D95")]
				[Address(RVA = "0xE6B914", Offset = "0xE6B914", VA = "0xE6B914", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xE6BB78", Offset = "0xE6BB78", VA = "0xE6BB78")]
			protected QueueEndEvent()
			{
			}
		}

		[Token(Token = "0x2000282")]
		public enum MatchFailReason
		{
			[Token(Token = "0x4001001")]
			None,
			[Token(Token = "0x4001002")]
			Cancel,
			[Token(Token = "0x4001003")]
			Fail
		}

		[Token(Token = "0x2000283")]
		public class QueueEndFail : QueueEndEvent
		{
			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MatchFailReason failReason;

			[Token(Token = "0x1700025A")]
			public override string EventName
			{
				[Token(Token = "0x6000D97")]
				[Address(RVA = "0xE6BB80", Offset = "0xE6BB80", VA = "0xE6BB80", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025B")]
			public override Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D98")]
				[Address(RVA = "0xE6BBF0", Offset = "0xE6BBF0", VA = "0xE6BBF0", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xE6B268", Offset = "0xE6B268", VA = "0xE6B268")]
			public QueueEndFail()
			{
			}
		}

		[Token(Token = "0x2000284")]
		public class QueueEndConnected : QueueEndEvent
		{
			[Token(Token = "0x1700025C")]
			public override string EventName
			{
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0xE6BCAC", Offset = "0xE6BCAC", VA = "0xE6BCAC", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xE6B150", Offset = "0xE6B150", VA = "0xE6B150")]
			public QueueEndConnected()
			{
			}
		}

		[Token(Token = "0x2000285")]
		public class OpponentFound : ICustomEvent
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool accept;

			[Token(Token = "0x1700025D")]
			public string EventName
			{
				[Token(Token = "0x6000D9C")]
				[Address(RVA = "0xE6BD1C", Offset = "0xE6BD1C", VA = "0xE6BD1C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			public Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D9D")]
				[Address(RVA = "0xE6BD5C", Offset = "0xE6BD5C", VA = "0xE6BD5C", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xE6B340", Offset = "0xE6B340", VA = "0xE6B340")]
			public OpponentFound()
			{
			}
		}

		[Token(Token = "0x2000286")]
		public enum FriendInviteResult
		{
			[Token(Token = "0x4001007")]
			Accept,
			[Token(Token = "0x4001008")]
			Decline,
			[Token(Token = "0x4001009")]
			Ignore
		}

		[Token(Token = "0x2000287")]
		public class FriendInvite : ICustomEvent
		{
			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FriendInviteResult inviteResult;

			[Token(Token = "0x1700025F")]
			public string EventName
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0xE6BE44", Offset = "0xE6BE44", VA = "0xE6BE44", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xE6B414", Offset = "0xE6B414", VA = "0xE6B414")]
			public FriendInvite()
			{
			}
		}

		[Token(Token = "0x4000FE8")]
		private const string GAME_OVER = "GameOver";

		[Token(Token = "0x4000FE9")]
		private const string QUEUE_END = "QueueEnd";

		[Token(Token = "0x4000FEA")]
		private const string OPPONENT_FOUND = "OpponentFound";

		[Token(Token = "0x4000FEB")]
		private const string FRIEND_INVITE = "FriendInvite";

		[Token(Token = "0x4000FEC")]
		private const string ARENA_TYPE_PARAM = "arenaType";

		[Token(Token = "0x4000FED")]
		private const string ARCADE_TYPE_PARAM = "arcadeType";

		[Token(Token = "0x4000FEE")]
		private const string END_REASON_PARAM = "endReason";

		[Token(Token = "0x4000FEF")]
		private const string GAME_DURATION_PARAM = "gameDuration";

		[Token(Token = "0x4000FF0")]
		private const string QUICK_BUTTON_PARAM = "quick_button";

		[Token(Token = "0x4000FF1")]
		private const string SEARCH_TIME_PARAM = "search_time";

		[Token(Token = "0x4000FF2")]
		private const string INTENT_PARAM = "intent";

		[Token(Token = "0x4000FF3")]
		private const string CO_MODE_PARAM = "co_mode";

		[Token(Token = "0x4000FF4")]
		private const string PHASE_PARAM = "phase";

		[Token(Token = "0x4000FF5")]
		private const string SOURCE_PARAM = "source";

		[Token(Token = "0x4000FF6")]
		private const string MATCH_FAIL_REASON_PARAM = "matchFailReason";

		[Token(Token = "0x4000FF7")]
		private const string ACCEPT_PARAM = "acceptedInvite";

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE6B424", Offset = "0xE6B424", VA = "0xE6B424")]
		public static void ApplyEvent(ICustomEvent e)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private struct <Start>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<List<string>> <>u__2;

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE6BEDC", Offset = "0xE6BEDC", VA = "0xE6BEDC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE6C390", Offset = "0xE6C390", VA = "0xE6C390", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnalyticsManager inst;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool used_quick_button;

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xE6ADA4", Offset = "0xE6ADA4", VA = "0xE6ADA4", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xE6ADFC", Offset = "0xE6ADFC", VA = "0xE6ADFC")]
	[AsyncStateMachine(typeof(<Start>d__3))]
	private void Start()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xE6AE98", Offset = "0xE6AE98", VA = "0xE6AE98")]
	public void onGameOver(GameEndReason endReason, float gameDuration)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xE6B048", Offset = "0xE6B048", VA = "0xE6B048")]
	public void OnMultiplayerQueueConnected(float searchTime, LobbyistClient.Connecting connecting, QueueType intent)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xE6B158", Offset = "0xE6B158", VA = "0xE6B158")]
	public void OnMatchQueueCanceled(float searchTime, LobbyistClient.Connecting connecting, CustomEvents.MatchFailReason reason, QueueType intent)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xE6B270", Offset = "0xE6B270", VA = "0xE6B270")]
	public void onOpponentFoundUIResponse(bool didAccept)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xE6B348", Offset = "0xE6B348", VA = "0xE6B348")]
	public void onFriendInvite(CustomEvents.FriendInviteResult result)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xE6B41C", Offset = "0xE6B41C", VA = "0xE6B41C")]
	public AnalyticsManager()
	{
	}
}
[Token(Token = "0x2000289")]
public class Analytiks : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	public enum GameMode
	{
		[Token(Token = "0x4001019")]
		None,
		[Token(Token = "0x400101A")]
		ArcadeZen,
		[Token(Token = "0x400101B")]
		ArcadeClassic,
		[Token(Token = "0x400101C")]
		ArcadeNightmare,
		[Token(Token = "0x400101D")]
		SoloCampaign,
		[Token(Token = "0x400101E")]
		SoloMonthlyChallenge,
		[Token(Token = "0x400101F")]
		SoloMusicChallenge,
		[Token(Token = "0x4001020")]
		SoloCustomPrivate,
		[Token(Token = "0x4001021")]
		SoloCustomPublic,
		[Token(Token = "0x4001022")]
		MPVersusRanked,
		[Token(Token = "0x4001023")]
		MPVersusFriendly,
		[Token(Token = "0x4001024")]
		MPCoOpRanked
	}

	[Token(Token = "0x200028B")]
	private class Session
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime startTime;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int realtimeDuration;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameMode lastGameMode;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string lastSetId;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string lastWaveId;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int lastWaveDifficulty;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GameEndReason lastGameEndReason;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int timeInArcadeZen;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int timeInArcadeClassic;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int timeInArcadeNightmare;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int timeInSoloCampaign;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int timeInSoloMonthlyChallenge;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int timeInSoloMusicChallenge;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int timeInSoloCustomPrivate;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int timeInSoloCustomPublic;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int timeInMPVersusRanked;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int timeInMPVersusFriendly;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int timeInMPCoOpRanked;

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xE6F974", Offset = "0xE6F974", VA = "0xE6F974")]
		public Session()
		{
		}
	}

	[Token(Token = "0x200028C")]
	private class Match
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime startTime;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int realtimeDuration;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int sessionNum;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string player1RnxId;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string player2RnxId;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameMode mode;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int gameDuration;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int matchScoreP1;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int matchScoreP2;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PlayerID winningPlayerId;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int roundNum;

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xE70AC8", Offset = "0xE70AC8", VA = "0xE70AC8")]
		public Match()
		{
		}
	}

	[Token(Token = "0x200028D")]
	public enum GameFollowUp
	{
		[Token(Token = "0x4001047")]
		Undefined,
		[Token(Token = "0x4001048")]
		BackToMenu,
		[Token(Token = "0x4001049")]
		Retry,
		[Token(Token = "0x400104A")]
		Next,
		[Token(Token = "0x400104B")]
		Quit,
		[Token(Token = "0x400104C")]
		Rematch,
		[Token(Token = "0x400104D")]
		Again
	}

	[Token(Token = "0x200028E")]
	private class Game
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int matchNum;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int roundNum;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sessionNum;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime startTime;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int realtimeDuration;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameMode mode;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string setId;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameEndReason endReason;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string endWaveId;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int endDifficulty;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int score;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int gameDuration;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int progress;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameFollowUp followUp;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int numTimesSetPlayed;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int numTimesSetCompleted;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float powershotUsage;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float gravitySlingUsage;

		[Token(Token = "0x17000262")]
		public bool isNonCustomSoloMode
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xE71534", Offset = "0xE71534", VA = "0xE71534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public bool isCustomSoloMode
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xE736B8", Offset = "0xE736B8", VA = "0xE736B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000264")]
		public bool isSoloMode
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xE71510", Offset = "0xE71510", VA = "0xE71510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xE714D0", Offset = "0xE714D0", VA = "0xE714D0")]
		public Game()
		{
		}
	}

	[Token(Token = "0x200028F")]
	private enum PowerUpUsage
	{
		[Token(Token = "0x4001063")]
		NotAvailable,
		[Token(Token = "0x4001064")]
		None,
		[Token(Token = "0x4001065")]
		Some,
		[Token(Token = "0x4001066")]
		All
	}

	[Token(Token = "0x2000290")]
	private class Wave
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime startTime;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int realtimeDuration;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int sessionNum;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int gameNum;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameMode gameMode;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string setId;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameEndReason endReason;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int difficulty;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _gameDurationAtStart;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int gameDuration;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int _numPowerUps;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int _numPowerUpsTaken;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PowerUpUsage powerupUsage;

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE72CEC", Offset = "0xE72CEC", VA = "0xE72CEC")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Analytiks <>4__this;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xE73C78", Offset = "0xE73C78", VA = "0xE73C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xE73CC0", Offset = "0xE73CC0", VA = "0xE73CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE6C54C", Offset = "0xE6C54C", VA = "0xE6C54C")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE736CC", Offset = "0xE736CC", VA = "0xE736CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE736D0", Offset = "0xE736D0", VA = "0xE736D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE73C80", Offset = "0xE73C80", VA = "0xE73C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Analytiks inst;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RNXDepot.MyDepot<AnalytiksCounters> _personalCounters;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Arena _curGameArena;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameMode _curGameMode;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Session _session;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Match _match;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Game _game;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Game _justEndedGame;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Wave _wave;

	[Token(Token = "0x17000260")]
	private string player1RnxId
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xE70950", Offset = "0xE70950", VA = "0xE70950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000261")]
	private string player2RnxId
	{
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xE70A0C", Offset = "0xE70A0C", VA = "0xE70A0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xE6C39C", Offset = "0xE6C39C", VA = "0xE6C39C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xE6C4D8", Offset = "0xE6C4D8", VA = "0xE6C4D8")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xE6C574", Offset = "0xE6C574", VA = "0xE6C574")]
	private void onSessionStarted()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xE6D230", Offset = "0xE6D230", VA = "0xE6D230")]
	public void onEndedGameFollowUp(GameFollowUp followUp)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xE6D3B4", Offset = "0xE6D3B4", VA = "0xE6D3B4")]
	private void onGameStart()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xE6DEFC", Offset = "0xE6DEFC", VA = "0xE6DEFC")]
	private void onGameEnded(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xE6EC20", Offset = "0xE6EC20", VA = "0xE6EC20")]
	private void onWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xE6F140", Offset = "0xE6F140", VA = "0xE6F140")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xE6F2F0", Offset = "0xE6F2F0", VA = "0xE6F2F0")]
	private void onRoundEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xE6F4B0", Offset = "0xE6F4B0", VA = "0xE6F4B0")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xE6F660", Offset = "0xE6F660", VA = "0xE6F660")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xE6C93C", Offset = "0xE6C93C", VA = "0xE6C93C")]
	private void startSession()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xE6F97C", Offset = "0xE6F97C", VA = "0xE6F97C")]
	private void updateSession()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xE6FA78", Offset = "0xE6FA78", VA = "0xE6FA78")]
	private void sendSession(Session session)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xE6F800", Offset = "0xE6F800", VA = "0xE6F800")]
	private void endSession()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xE6D8A0", Offset = "0xE6D8A0", VA = "0xE6D8A0")]
	private void startMatch()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xE6E920", Offset = "0xE6E920", VA = "0xE6E920")]
	private void endMatch()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xE70AD0", Offset = "0xE70AD0", VA = "0xE70AD0")]
	private void sendMatch(Match match)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xE6DB70", Offset = "0xE6DB70", VA = "0xE6DB70")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xE6D5D8", Offset = "0xE6D5D8", VA = "0xE6D5D8")]
	public GameMode determineCurrentGameMode()
	{
		return default(GameMode);
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xE6E3C4", Offset = "0xE6E3C4", VA = "0xE6E3C4")]
	private void endGame()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xE714D8", Offset = "0xE714D8", VA = "0xE714D8")]
	private bool isScoreRelevant(Game game)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xE6D380", Offset = "0xE6D380", VA = "0xE6D380")]
	private void updateEndedGame(GameFollowUp followUp)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xE71558", Offset = "0xE71558", VA = "0xE71558")]
	private int getNumTimesSoloSetPlayed()
	{
		return default(int);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xE715A4", Offset = "0xE715A4", VA = "0xE715A4")]
	private int getNumTimesSoloSetCompleted()
	{
		return default(int);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xE71610", Offset = "0xE71610", VA = "0xE71610")]
	private void sendGame(Game game)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xE725D0", Offset = "0xE725D0", VA = "0xE725D0")]
	private void updateTimeInMode()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xE6EE2C", Offset = "0xE6EE2C", VA = "0xE6EE2C")]
	private void startWave(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xE72A9C", Offset = "0xE72A9C", VA = "0xE72A9C")]
	private string determineCurrentSetId()
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xE6E10C", Offset = "0xE6E10C", VA = "0xE6E10C")]
	private void endWave()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xE72D38", Offset = "0xE72D38", VA = "0xE72D38")]
	private void sendWave(Wave wave)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xE72CF4", Offset = "0xE72CF4", VA = "0xE72CF4")]
	private PowerUpUsage calcPowerUpUsage()
	{
		return default(PowerUpUsage);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xE736B0", Offset = "0xE736B0", VA = "0xE736B0")]
	public Analytiks()
	{
	}
}
[Serializable]
[Token(Token = "0x2000292")]
public class AnalytiksCounters
{
	[Serializable]
	[Token(Token = "0x2000293")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x2000294")]
		public class Set
		{
			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numGamesPlayed;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numGamesComplete;

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xE73DC0", Offset = "0xE73DC0", VA = "0xE73DC0")]
			public Set()
			{
			}
		}

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Set> sets;

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE7284C", Offset = "0xE7284C", VA = "0xE7284C")]
		public Set getSet(string setId)
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE73D38", Offset = "0xE73D38", VA = "0xE73D38")]
		public Solo()
		{
		}
	}

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int messageNumber;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int sessionNumber;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int matchNumber;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int gameNumber;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Solo solo;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xE73CC8", Offset = "0xE73CC8", VA = "0xE73CC8")]
	public AnalytiksCounters()
	{
	}
}
[Token(Token = "0x2000295")]
public class ConnectionMaster : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000296")]
	public delegate void OfflineStateChange(bool isOffline);

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _tempOffline;

	[Token(Token = "0x17000267")]
	public static bool offline
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE73DC8", Offset = "0xE73DC8", VA = "0xE73DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000E")]
	public static event OfflineStateChange OnOfflineStateChanged
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE73E10", Offset = "0xE73E10", VA = "0xE73E10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE73EC8", Offset = "0xE73EC8", VA = "0xE73EC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xE73F80", Offset = "0xE73F80", VA = "0xE73F80")]
	private bool HasNoWiFiConnectivity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xE73F9C", Offset = "0xE73F9C", VA = "0xE73F9C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xE73FF4", Offset = "0xE73FF4", VA = "0xE73FF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xE7404C", Offset = "0xE7404C", VA = "0xE7404C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xE740A4", Offset = "0xE740A4", VA = "0xE740A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xE74224", Offset = "0xE74224", VA = "0xE74224")]
	public ConnectionMaster()
	{
	}
}
[Token(Token = "0x2000297")]
public class ControllerButtons : MonoBehaviour
{
	[Token(Token = "0x2000298")]
	public delegate void OnMenuButtonClick();

	[Token(Token = "0x2000299")]
	public delegate void OnPadClick();

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControllerButtons inst;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ListStack<OnMenuButtonClick> _onMenuButtonClickHandlers;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ListStack<OnPadClick> _onPadClickHandlers;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xE743AC", Offset = "0xE743AC", VA = "0xE743AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xE744B0", Offset = "0xE744B0", VA = "0xE744B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xE74608", Offset = "0xE74608", VA = "0xE74608")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xE747CC", Offset = "0xE747CC", VA = "0xE747CC")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xE748C8", Offset = "0xE748C8", VA = "0xE748C8")]
	private void onPadClicked()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xE749C4", Offset = "0xE749C4", VA = "0xE749C4")]
	public void handleMenuButtonClick(OnMenuButtonClick onMenuButtonClickHandler)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xE74A1C", Offset = "0xE74A1C", VA = "0xE74A1C")]
	public void unhandleMenuButtonClick(OnMenuButtonClick onMenuButtonClickHandler)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xE74AD4", Offset = "0xE74AD4", VA = "0xE74AD4")]
	public void handlePadClick(OnPadClick onPadClickHandler)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xE74B2C", Offset = "0xE74B2C", VA = "0xE74B2C")]
	public void unhandlePadClick(OnPadClick onPadClickHandler)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xE74BE4", Offset = "0xE74BE4", VA = "0xE74BE4")]
	public ControllerButtons()
	{
	}
}
[Token(Token = "0x200029A")]
public class DebugFriends
{
	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<RnxPlatform.User> _users;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> _friendRnxIds;

	[Token(Token = "0x17000268")]
	public List<RnxPlatform.User> users
	{
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xE74E04", Offset = "0xE74E04", VA = "0xE74E04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000269")]
	public static bool any
	{
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xE74E0C", Offset = "0xE74E0C", VA = "0xE74E0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action onUpdated
	{
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE75264", Offset = "0xE75264", VA = "0xE75264")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE75300", Offset = "0xE75300", VA = "0xE75300")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xE74E84", Offset = "0xE74E84", VA = "0xE74E84")]
	public DebugFriends()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xE7539C", Offset = "0xE7539C", VA = "0xE7539C")]
	private void onGotFriendDetails(bool success, Dictionary<string, RnxPlatform.User> rnxIdToUser)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xE7554C", Offset = "0xE7554C", VA = "0xE7554C")]
	public void update()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xE75604", Offset = "0xE75604", VA = "0xE75604")]
	private void onFriendStatusUpdated(bool success, Dictionary<string, Status> rnxIdToStatus)
	{
	}
}
[Token(Token = "0x200029B")]
public class GameEventsManager : MonoBehaviour
{
	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static float _lastRacketHitSessionTime;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static float _lastHexHitSessionTime;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float _lastWallDisconnectSessionTime;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static float _lastReturnBallToPlayerSessionTime;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static float _lastGutterActivationSessionTime;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _lastReturnBallToPlayerFrame;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static bool _hasSessionStarted;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private static bool _hasQuit;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private static bool _game_in_progress;

	[Token(Token = "0x1700026A")]
	public static float timeSinceRacketHit
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xE76AC8", Offset = "0xE76AC8", VA = "0xE76AC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026B")]
	public static float timeSinceHexHit
	{
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE76C3C", Offset = "0xE76C3C", VA = "0xE76C3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026C")]
	public static float timeSinceBallDisconnectedFromWall
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xE76DB0", Offset = "0xE76DB0", VA = "0xE76DB0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026D")]
	public static float timeSinceBallReturnedToPlayer
	{
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xE76F24", Offset = "0xE76F24", VA = "0xE76F24")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026E")]
	public static float timeSinceGutterActivation
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xE77098", Offset = "0xE77098", VA = "0xE77098")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026F")]
	public static bool hasSessionStarted
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xE7720C", Offset = "0xE7720C", VA = "0xE7720C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action onSessionStarted
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xE73BA0", Offset = "0xE73BA0", VA = "0xE73BA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE75834", Offset = "0xE75834", VA = "0xE75834")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action onBallContact
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xE7590C", Offset = "0xE7590C", VA = "0xE7590C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xE759E8", Offset = "0xE759E8", VA = "0xE759E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action<ShotInfo, Vector3> onBallHitRacket
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xE75AC4", Offset = "0xE75AC4", VA = "0xE75AC4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xE75BB8", Offset = "0xE75BB8", VA = "0xE75BB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action<ShotInfo, HexTile> onBallHitHex
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xE75CAC", Offset = "0xE75CAC", VA = "0xE75CAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xE75DA0", Offset = "0xE75DA0", VA = "0xE75DA0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<HexTrudeManager.WallType> onBallHitWall
	{
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xE75E94", Offset = "0xE75E94", VA = "0xE75E94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xE75F88", Offset = "0xE75F88", VA = "0xE75F88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<Player> onBallReturnedToPlayer
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xE7607C", Offset = "0xE7607C", VA = "0xE7607C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xE76170", Offset = "0xE76170", VA = "0xE76170")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action<string, int> onWaveStarted
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xE6CD84", Offset = "0xE6CD84", VA = "0xE6CD84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xE76264", Offset = "0xE76264", VA = "0xE76264")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action<string, int> onWaveEnded
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xE6CE78", Offset = "0xE6CE78", VA = "0xE6CE78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xE76358", Offset = "0xE76358", VA = "0xE76358")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Action<int, Player> onScore
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xE7644C", Offset = "0xE7644C", VA = "0xE7644C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xE76540", Offset = "0xE76540", VA = "0xE76540")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event Action<GameEndReason> onNonLastRoundEnded
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xE6CF6C", Offset = "0xE6CF6C", VA = "0xE6CF6C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xE76634", Offset = "0xE76634", VA = "0xE76634")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event Action<Player> onFloaterTaken
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xE6D060", Offset = "0xE6D060", VA = "0xE6D060")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xE76728", Offset = "0xE76728", VA = "0xE76728")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action onQuit
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xE6D154", Offset = "0xE6D154", VA = "0xE6D154")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xE7681C", Offset = "0xE7681C", VA = "0xE7681C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action onRoundStarted
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xE6CBB4", Offset = "0xE6CBB4", VA = "0xE6CBB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xE768F8", Offset = "0xE768F8", VA = "0xE768F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Action<GameEndReason> onLastRoundEnded
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xE6CC90", Offset = "0xE6CC90", VA = "0xE6CC90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xE769D4", Offset = "0xE769D4", VA = "0xE769D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event Action OnGameStart
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xE777E4", Offset = "0xE777E4", VA = "0xE777E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xE778C0", Offset = "0xE778C0", VA = "0xE778C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event Action<GameEndReason> OnGameEnd
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xE77B24", Offset = "0xE77B24", VA = "0xE77B24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE77C18", Offset = "0xE77C18", VA = "0xE77C18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xE77264", Offset = "0xE77264", VA = "0xE77264")]
	public static void BallContact()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xE772D8", Offset = "0xE772D8", VA = "0xE772D8")]
	public static void BallHitWall(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xE77354", Offset = "0xE77354", VA = "0xE77354")]
	public static void BallHitRacket(ShotInfo shot, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xE774E8", Offset = "0xE774E8", VA = "0xE774E8")]
	public static void BallHitHex(ShotInfo shot, HexTile h)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xE775E4", Offset = "0xE775E4", VA = "0xE775E4")]
	public static void BallReturnedToPlayer(Player p)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xE77754", Offset = "0xE77754", VA = "0xE77754")]
	public static void Score(int score, Player p)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xE7799C", Offset = "0xE7799C", VA = "0xE7799C")]
	private static void GameStarted()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xE77D0C", Offset = "0xE77D0C", VA = "0xE77D0C")]
	private static void GameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xE77E5C", Offset = "0xE77E5C", VA = "0xE77E5C")]
	public static void waveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xE77FC8", Offset = "0xE77FC8", VA = "0xE77FC8")]
	public static void waveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xE78134", Offset = "0xE78134", VA = "0xE78134")]
	public static void gameInitialized()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xE7829C", Offset = "0xE7829C", VA = "0xE7829C")]
	public static void gameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xE783FC", Offset = "0xE783FC", VA = "0xE783FC")]
	public static void roundEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xE78554", Offset = "0xE78554", VA = "0xE78554")]
	public static void floaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xE786AC", Offset = "0xE786AC", VA = "0xE786AC")]
	public static void sessionStarted()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xE7883C", Offset = "0xE7883C", VA = "0xE7883C")]
	public static void quit()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xE788D4", Offset = "0xE788D4", VA = "0xE788D4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xE78920", Offset = "0xE78920", VA = "0xE78920")]
	public GameEventsManager()
	{
	}
}
[Token(Token = "0x200029C")]
public class HexTrudeManager : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	public class Point
	{
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Node node;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Hex> hexes;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numHexes;

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xE7F434", Offset = "0xE7F434", VA = "0xE7F434")]
		public Point(Vector3 p)
		{
		}
	}

	[Token(Token = "0x200029E")]
	public class Arc
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Arc next;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arc prev;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallType _currentWallType;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Node _node1;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Node _node2;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 forward;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 center;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Hex _hex1;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hex _hex2;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _normal;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool used;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool reveresed;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Point> _points;

		[Token(Token = "0x17000273")]
		public Node node1
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xE7911C", Offset = "0xE7911C", VA = "0xE7911C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xE7F4E4", Offset = "0xE7F4E4", VA = "0xE7F4E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public Node node2
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xE79138", Offset = "0xE79138", VA = "0xE79138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xE7F57C", Offset = "0xE7F57C", VA = "0xE7F57C")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Hex hex1
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xE790E4", Offset = "0xE790E4", VA = "0xE790E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xE7F598", Offset = "0xE7F598", VA = "0xE7F598")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Hex hex2
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0xE79100", Offset = "0xE79100", VA = "0xE79100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0xE7F5A0", Offset = "0xE7F5A0", VA = "0xE7F5A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public int higherLayer
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xE7F5A8", Offset = "0xE7F5A8", VA = "0xE7F5A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000278")]
		public Brick lowerBrick
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xE7F630", Offset = "0xE7F630", VA = "0xE7F630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		public Brick higherBrick
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xE7F670", Offset = "0xE7F670", VA = "0xE7F670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public Vector3 normal
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xE79434", Offset = "0xE79434", VA = "0xE79434")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700027B")]
		public int numPoints
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xE7FBE0", Offset = "0xE7FBE0", VA = "0xE7FBE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE7F500", Offset = "0xE7F500", VA = "0xE7F500")]
		private void UpdateCenter()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE7F6B0", Offset = "0xE7F6B0", VA = "0xE7F6B0")]
		public Brick GetOtherBrick(Brick b)
		{
			return null;
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE7F824", Offset = "0xE7F824", VA = "0xE7F824")]
		public bool GetNormalAtPosition(Vector3 pos, out Vector3 retNormal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE79958", Offset = "0xE79958", VA = "0xE79958")]
		public Vector3 projectPointOnNeighbor(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE7FA14", Offset = "0xE7FA14", VA = "0xE7FA14")]
		public Vector3 projectPointOnArc(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE7FAEC", Offset = "0xE7FAEC", VA = "0xE7FAEC")]
		public bool isPointOnLeftSide(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE7FB68", Offset = "0xE7FB68", VA = "0xE7FB68")]
		public Point getPoint(int i)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE7FC28", Offset = "0xE7FC28", VA = "0xE7FC28")]
		public void addPoint(Point point)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xE7B84C", Offset = "0xE7B84C", VA = "0xE7B84C")]
		public void calculateNormal()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xE7F020", Offset = "0xE7F020", VA = "0xE7F020")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE7FCD8", Offset = "0xE7FCD8", VA = "0xE7FCD8")]
		public void _drawGizmos()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xE8015C", Offset = "0xE8015C", VA = "0xE8015C")]
		public Arc()
		{
		}
	}

	[Token(Token = "0x200029F")]
	public class Node
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Point point;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Arc> arcs;

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xE801E4", Offset = "0xE801E4", VA = "0xE801E4")]
		public Node(Point p)
		{
		}
	}

	[Token(Token = "0x20002A0")]
	public class Hex
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HexTile tile;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Arc> arcs;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> _points;

		[Token(Token = "0x40010E6")]
		private const float THRESH = 0.0001f;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xE7AA20", Offset = "0xE7AA20", VA = "0xE7AA20")]
		public Hex(HexTile h)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xE7AF70", Offset = "0xE7AF70", VA = "0xE7AF70")]
		public void findSharedPoints(Hex other)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xE7B250", Offset = "0xE7B250", VA = "0xE7B250")]
		public void initArcs()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE7B500", Offset = "0xE7B500", VA = "0xE7B500")]
		public void findSharedArcs()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE7BAD8", Offset = "0xE7BAD8", VA = "0xE7BAD8")]
		public void cleanup()
		{
		}
	}

	[Token(Token = "0x20002A1")]
	private class Strip
	{
		[Token(Token = "0x20002A2")]
		[CompilerGenerated]
		private sealed class <rebuild>d__44 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Strip <>4__this;

			[Token(Token = "0x1700027C")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000E8B")]
				[Address(RVA = "0xE820D0", Offset = "0xE820D0", VA = "0xE820D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700027D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E8D")]
				[Address(RVA = "0xE82118", Offset = "0xE82118", VA = "0xE82118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xE81DB4", Offset = "0xE81DB4", VA = "0xE81DB4")]
			[DebuggerHidden]
			public <rebuild>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xE81DDC", Offset = "0xE81DDC", VA = "0xE81DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xE81DE0", Offset = "0xE81DE0", VA = "0xE81DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xE820D8", Offset = "0xE820D8", VA = "0xE820D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A3")]
		[CompilerGenerated]
		private sealed class <initMesh>d__47 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Strip <>4__this;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <numPoints>5__2;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <numSteps>5__3;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <step>5__4;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__5;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <mod>5__6;

			[Token(Token = "0x1700027E")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000E91")]
				[Address(RVA = "0xE835A0", Offset = "0xE835A0", VA = "0xE835A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700027F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E93")]
				[Address(RVA = "0xE835E8", Offset = "0xE835E8", VA = "0xE835E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xE82174", Offset = "0xE82174", VA = "0xE82174")]
			[DebuggerHidden]
			public <initMesh>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xE8219C", Offset = "0xE8219C", VA = "0xE8219C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xE821A0", Offset = "0xE821A0", VA = "0xE821A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E92")]
			[Address(RVA = "0xE835A8", Offset = "0xE835A8", VA = "0xE835A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _numSegments;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arc firstArc;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh _mesh;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh _meshGlow;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh _meshBack;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter _meshFilterGlow;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter _meshFilterBack;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer _meshRendererGlow;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer _meshRendererBack;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector3> _points;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> _pointNormals;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<float> _mappingVcoord;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> _materialIndexes;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<float> _highlights;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Vector3> _vertices;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Vector3> _normals;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vector3> _targetVertices;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<int>[] _triangles;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector2> _uv0;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Color> _colors;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Vector3> _verticesGlow;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<Vector3> _targetVerticesGlow;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<int> _trianglesGlow;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Vector2> _uv0Glow;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Vector2> _uv1Glow;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Vector3> _verticesBack;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Vector3> _targetVerticesBack;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int>[] _trianglesBack;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] _int6;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] _intSteps6;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] _vec3Steps1;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] _vec3Steps2;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector2[] _vec2Steps;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Color[] _colorSteps;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _numWallTypes;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WallType[] _wallTypeByIndex;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _initialized;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE7C2C0", Offset = "0xE7C2C0", VA = "0xE7C2C0")]
		public Strip()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE7DB8C", Offset = "0xE7DB8C", VA = "0xE7DB8C")]
		public void debug()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE80288", Offset = "0xE80288", VA = "0xE80288")]
		private void initPoints()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xE813D8", Offset = "0xE813D8", VA = "0xE813D8")]
		private Material getMaterialByWallType(WallType wallType)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xE814B8", Offset = "0xE814B8", VA = "0xE814B8")]
		private Material getMaterialBackByWallType(WallType wallType)
		{
			return null;
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xE81590", Offset = "0xE81590", VA = "0xE81590")]
		[IteratorStateMachine(typeof(<rebuild>d__44))]
		public IEnumerator<float> rebuild()
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xE81604", Offset = "0xE81604", VA = "0xE81604")]
		private void weldSeamNormals()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xE81380", Offset = "0xE81380", VA = "0xE81380")]
		private int getMaterialIndexFromWallType(WallType wallType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE817BC", Offset = "0xE817BC", VA = "0xE817BC")]
		[IteratorStateMachine(typeof(<initMesh>d__47))]
		private IEnumerator<float> initMesh()
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE81830", Offset = "0xE81830", VA = "0xE81830")]
		public void updateVerts(float t)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE7D254", Offset = "0xE7D254", VA = "0xE7D254")]
		public void disable()
		{
		}
	}

	[Token(Token = "0x20002A4")]
	public enum WallType
	{
		[Token(Token = "0x400111A")]
		Bumper,
		[Token(Token = "0x400111B")]
		Stopper,
		[Token(Token = "0x400111C")]
		Blaster,
		[Token(Token = "0x400111D")]
		Invalid
	}

	[Token(Token = "0x20002A5")]
	[CompilerGenerated]
	private sealed class <switchTilesCo>d__74 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HexTrudeManager <>4__this;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool gameEnded;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool immediate;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__2;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <roomCenter>5__3;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <dontStop>5__4;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Strip>.Enumerator <>7__wrap4;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <w>5__6;

		[Token(Token = "0x17000280")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xE84174", Offset = "0xE84174", VA = "0xE84174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xE841BC", Offset = "0xE841BC", VA = "0xE841BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE83644", Offset = "0xE83644", VA = "0xE83644")]
		[DebuggerHidden]
		public <switchTilesCo>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE8366C", Offset = "0xE8366C", VA = "0xE8366C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE83688", Offset = "0xE83688", VA = "0xE83688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE84124", Offset = "0xE84124", VA = "0xE84124")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE8417C", Offset = "0xE8417C", VA = "0xE8417C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HexTrudeManager inst;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Transition")]
	public float moveDuration;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Bumper")]
	public float bumperStrength;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bumperCooldown;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bumperSnapAngle;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bumperCornerSize;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Model")]
	private bool walledBorders;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WallType borderWallType;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 3f)]
	public float layerHeight;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float pushAmount;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float pushBackAmount;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.5f)]
	public float chamfer;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float glowDistance;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float glowPush;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierCurve profileCurve;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material stopperMaterial;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material bumperMaterial;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material blasterMaterial;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material stopperBackMaterial;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material bumperBackMaterial;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material blasterBackMaterial;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material glowMaterial;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float hitlightDuration;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HitLight hitlightBumperPrefab;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HitLight hitlightStopperPrefab;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WallType overrideWallType;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool debug;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool overrideBricks;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<Room, Arc[]> _roomArcs;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Strip> _strips;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Strip> _prevStrips;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<Strip> _stripsPool;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Vector3[] _profileNormalizedPoints;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected float[] _profileUValues;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float[] _profilePointsNonFrontality;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float cornerMultiplier;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static OneHumus.Math.Geometry.Segment _segment;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector4 _hitGlobalShaderVector;

	[Token(Token = "0x40010CA")]
	private const string COROUTINES_TAG = "HexTrudeManager_Coroutines";

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _swhitchingTiles;

	[Token(Token = "0x40010CC")]
	private const float DELAY_TIME = 0.3f;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _ballStoppedPlowingAt;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector4 _lastHitGlobalShaderVector;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _HextrudeHitID;

	[Token(Token = "0x17000270")]
	public Material _stopperMaterial
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE78980", Offset = "0xE78980", VA = "0xE78980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000271")]
	public Material _bumperMaterial
	{
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xE78AC4", Offset = "0xE78AC4", VA = "0xE78AC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000272")]
	public Material _blasterMaterial
	{
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xE78C08", Offset = "0xE78C08", VA = "0xE78C08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000020")]
	public static event Action onHextrusionStarted
	{
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xE7D2A0", Offset = "0xE7D2A0", VA = "0xE7D2A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xE7D37C", Offset = "0xE7D37C", VA = "0xE7D37C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xE78D4C", Offset = "0xE78D4C", VA = "0xE78D4C")]
	private static int getHexLayer(Hex hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xE78E60", Offset = "0xE78E60", VA = "0xE78E60")]
	public static float distanceFromBricksBoarder(Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xE79154", Offset = "0xE79154", VA = "0xE79154")]
	private static bool isPointOnSideWall(Vector3 hitPoint, Arc arc, out float dist, float radiusMultiplier)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xE79454", Offset = "0xE79454", VA = "0xE79454")]
	public static Arc getSideWallArc(Vector3 point, Brick brick, float radiusMultiplier = 1.1f)
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xE78DB8", Offset = "0xE78DB8", VA = "0xE78DB8")]
	public static int getTileLayer(HexTile tile)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xE79B6C", Offset = "0xE79B6C", VA = "0xE79B6C")]
	public static int getBrickLayer(Brick brick)
	{
		return default(int);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xE79C30", Offset = "0xE79C30", VA = "0xE79C30")]
	private static WallType getHexWallType(Hex hex)
	{
		return default(WallType);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xE79CEC", Offset = "0xE79CEC", VA = "0xE79CEC")]
	public static WallType getBrickWallType(Brick brick)
	{
		return default(WallType);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xE79E24", Offset = "0xE79E24", VA = "0xE79E24")]
	public static void stopperHit(Vector3 pos, bool corner = false, bool fromRemote = false)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xE79FB4", Offset = "0xE79FB4", VA = "0xE79FB4")]
	public static void bumperHit(Vector3 pos, float pitchBoost, bool fromRemote = false)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xE7A138", Offset = "0xE7A138", VA = "0xE7A138")]
	public void initRoom(Room room)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xE7BCC8", Offset = "0xE7BCC8", VA = "0xE7BCC8")]
	private void initStrips(bool gameEnded = false)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xE7CDD0", Offset = "0xE7CDD0", VA = "0xE7CDD0")]
	private void setTilesHeight(bool gameEnded = false)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xE7CFF0", Offset = "0xE7CFF0", VA = "0xE7CFF0")]
	private void onArenaShutdown()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xE7D084", Offset = "0xE7D084", VA = "0xE7D084")]
	private void clearStrips()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xE7D458", Offset = "0xE7D458", VA = "0xE7D458")]
	private void stopPlowing()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xE7D534", Offset = "0xE7D534", VA = "0xE7D534")]
	private void switchTiles(bool gameEnded = false, bool immediate = false)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xE7D690", Offset = "0xE7D690", VA = "0xE7D690")]
	[IteratorStateMachine(typeof(<switchTilesCo>d__74))]
	private IEnumerator<float> switchTilesCo(bool gameEnded = false, bool immediate = false)
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xE7D724", Offset = "0xE7D724", VA = "0xE7D724")]
	public void flatten()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xE7D814", Offset = "0xE7D814", VA = "0xE7D814")]
	public void randomize(int seed)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xE7D96C", Offset = "0xE7D96C", VA = "0xE7D96C")]
	public void loadCurrentWave(bool immediate = false)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xE7DA20", Offset = "0xE7DA20", VA = "0xE7DA20")]
	private void onWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xE7DA28", Offset = "0xE7DA28", VA = "0xE7DA28")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xE7DA2C", Offset = "0xE7DA2C", VA = "0xE7DA2C")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xE7E428", Offset = "0xE7E428", VA = "0xE7E428")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xE7E434", Offset = "0xE7E434", VA = "0xE7E434")]
	private void onProfileCurveUpdated()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xE7EA64", Offset = "0xE7EA64", VA = "0xE7EA64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xE7ECA0", Offset = "0xE7ECA0", VA = "0xE7ECA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xE7ED44", Offset = "0xE7ED44", VA = "0xE7ED44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xE7EE78", Offset = "0xE7EE78", VA = "0xE7EE78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xE7EEEC", Offset = "0xE7EEEC", VA = "0xE7EEEC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xE7F1EC", Offset = "0xE7F1EC", VA = "0xE7F1EC")]
	public HexTrudeManager()
	{
	}
}
[Token(Token = "0x20002A6")]
public class LightAndReflectionManager : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightAndReflectionManager <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xE84A80", Offset = "0xE84A80", VA = "0xE84A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xE84AC8", Offset = "0xE84AC8", VA = "0xE84AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE84558", Offset = "0xE84558", VA = "0xE84558")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE84870", Offset = "0xE84870", VA = "0xE84870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE84874", Offset = "0xE84874", VA = "0xE84874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE84A88", Offset = "0xE84A88", VA = "0xE84A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LightAndReflectionManager inst;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultReflectionColor;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ReflectionProbe probe;

	[NonSerialized]
	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float currentReflectionExposure;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color _targetReflectionColor;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color _currentReflectionColor;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color _lastReflectionColor;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color _targetLightColor;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color _currentLightColor;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ArenaLightAndReflection _currentArenaLNR;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _currentLNRAmountChanged;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _currentLNRAmount;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int tintColorID;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _tintID;

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xE84218", Offset = "0xE84218", VA = "0xE84218")]
	private void onArenaSelected()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xE84350", Offset = "0xE84350", VA = "0xE84350")]
	private void onArenaShutdown()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xE8435C", Offset = "0xE8435C", VA = "0xE8435C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xE844E4", Offset = "0xE844E4", VA = "0xE844E4")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xE84580", Offset = "0xE84580", VA = "0xE84580")]
	private float colorDistance(Color c1, Color c2)
	{
		return default(float);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xE84598", Offset = "0xE84598", VA = "0xE84598")]
	public void OverrideLNRAmount(float amount)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xE845A8", Offset = "0xE845A8", VA = "0xE845A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xE84850", Offset = "0xE84850", VA = "0xE84850")]
	public LightAndReflectionManager()
	{
	}
}
[Token(Token = "0x20002A8")]
public class MappingCacher : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A9")]
	private class CahceKeyValue
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint key;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] value;

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE85A9C", Offset = "0xE85A9C", VA = "0xE85A9C")]
		public CahceKeyValue(uint key, float[] value)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002AA")]
	private class CachedDatabase
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string version;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CahceKeyValue[] data;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE854CC", Offset = "0xE854CC", VA = "0xE854CC")]
		public CachedDatabase(Dictionary<uint, float[]> pool)
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[CompilerGenerated]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MappingCacher <>4__this;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xE861C0", Offset = "0xE861C0", VA = "0xE861C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0xE86208", Offset = "0xE86208", VA = "0xE86208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE859DC", Offset = "0xE859DC", VA = "0xE859DC")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE85AD4", Offset = "0xE85AD4", VA = "0xE85AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE85AD8", Offset = "0xE85AD8", VA = "0xE85AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE861C8", Offset = "0xE861C8", VA = "0xE861C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MappingCacher inst;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool validate;

	[Token(Token = "0x400113B")]
	public const float EPSILON = 1E-05f;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset template;

	[Token(Token = "0x400113D")]
	private const string FILE_NAME = "HexMapping.dat";

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<uint, float[]> _hexMappingPool;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentVersion;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _needToCacheArenas;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _needToSaveHexMapping;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xE84AD0", Offset = "0xE84AD0", VA = "0xE84AD0")]
	public bool hasHexMapping(uint hash)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xE84B28", Offset = "0xE84B28", VA = "0xE84B28")]
	public float[] getHexMapping(uint hash)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xE84B80", Offset = "0xE84B80", VA = "0xE84B80")]
	public void addHexMapping(uint hash, float[] mapping)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xE84BF4", Offset = "0xE84BF4", VA = "0xE84BF4")]
	public bool hasSnakeMapping(uint hash)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xE84C4C", Offset = "0xE84C4C", VA = "0xE84C4C")]
	public float[] getSnakeMapping(uint hash)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xE84CA4", Offset = "0xE84CA4", VA = "0xE84CA4")]
	public void addSnakeMapping(uint hash, float[] mapping)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xE84D18", Offset = "0xE84D18", VA = "0xE84D18")]
	public static void copyCachedDataToPath(string path)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xE84E9C", Offset = "0xE84E9C", VA = "0xE84E9C")]
	public uint getSnakeHash(HexTile.HexDirection prevDir, HexTile.HexDirection nextDir)
	{
		return default(uint);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xE84EB4", Offset = "0xE84EB4", VA = "0xE84EB4")]
	private bool loadCachedData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xE85368", Offset = "0xE85368", VA = "0xE85368")]
	private void saveCachedData()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xE8577C", Offset = "0xE8577C", VA = "0xE8577C")]
	public uint getHexHash(HexTile hex, List<HexTile> hexList)
	{
		return default(uint);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xE858E0", Offset = "0xE858E0", VA = "0xE858E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xE85968", Offset = "0xE85968", VA = "0xE85968")]
	[IteratorStateMachine(typeof(<Start>d__23))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xE85A04", Offset = "0xE85A04", VA = "0xE85A04")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xE85A08", Offset = "0xE85A08", VA = "0xE85A08")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xE85A14", Offset = "0xE85A14", VA = "0xE85A14")]
	public MappingCacher()
	{
	}
}
[Token(Token = "0x20002AC")]
public class MaterialsManager : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class MaterialPool
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int initInstances;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInstances;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Material> _unusedInstances;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _lastIndex;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xE873A0", Offset = "0xE873A0", VA = "0xE873A0")]
		private Material instantiate()
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE86F88", Offset = "0xE86F88", VA = "0xE86F88")]
		public void InitPool()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xE874B0", Offset = "0xE874B0", VA = "0xE874B0")]
		public Material GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE87670", Offset = "0xE87670", VA = "0xE87670")]
		public void ReturnInstance(Material instance)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE87788", Offset = "0xE87788", VA = "0xE87788")]
		public MaterialPool()
		{
		}
	}

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MaterialsManager inst;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global")]
	public Material _defaultReflectionProbe;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _freezeReflectionProbe;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _globalSphereFader;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material _ceilingRefaction;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D _blackTexture;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader _fadeToBlackPostProcessShader;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Bricks")]
	[SerializeField]
	private Material _brickBonus;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material _brickDowner;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material _brickDownerBlue;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material _brickSelection;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material _brickSnake;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material _brickSlider;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _brickSliderAdditive;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material _buildingBricks;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Pools")]
	[SerializeField]
	private MaterialPool[] _brickTargetGroup;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MaterialPool _brickHealing;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MaterialPool _brickGlow;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MaterialPool _brickGlow_empty_P1;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MaterialPool _brickGlow_empty_P2;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MaterialPool _brickFreezeGlow;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MaterialPool _brickFreezeGlow_empty;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MaterialPool _brickShield;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MaterialPool _brickIce;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MaterialPool _brickPortal;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MaterialPool _brickBoosterSwitch;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private MaterialPool _brickRefractionBroken;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private MaterialPool _brickReflectionBroken;

	[NonSerialized]
	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material skybox;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<Material, Material> _originalMaterials;

	[Token(Token = "0x17000286")]
	public Material brickBonus
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE86210", Offset = "0xE86210", VA = "0xE86210")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000287")]
	public Material brickDowner
	{
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE86354", Offset = "0xE86354", VA = "0xE86354")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000288")]
	public Material brickDownerBlue
	{
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE86498", Offset = "0xE86498", VA = "0xE86498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000289")]
	public Material brickSnake
	{
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE865DC", Offset = "0xE865DC", VA = "0xE865DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028A")]
	public Material brickSlider
	{
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE86720", Offset = "0xE86720", VA = "0xE86720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028B")]
	public MaterialPool[] brickTargetGroup
	{
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE86864", Offset = "0xE86864", VA = "0xE86864")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028C")]
	public MaterialPool brickHealing
	{
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE86964", Offset = "0xE86964", VA = "0xE86964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028D")]
	public MaterialPool brickRefractionBroken
	{
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE86AB0", Offset = "0xE86AB0", VA = "0xE86AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028E")]
	public MaterialPool brickReflectionBroken
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE86BFC", Offset = "0xE86BFC", VA = "0xE86BFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xE86D48", Offset = "0xE86D48", VA = "0xE86D48")]
	public static Material duplicateMaterial(Material m)
	{
		return null;
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xE86E80", Offset = "0xE86E80", VA = "0xE86E80")]
	public bool resetMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xE86F28", Offset = "0xE86F28", VA = "0xE86F28")]
	public static void initPool(MaterialPool[] pools)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xE870A4", Offset = "0xE870A4", VA = "0xE870A4")]
	public static void initPool(MaterialPool pool)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xE870B0", Offset = "0xE870B0", VA = "0xE870B0")]
	private void initAllPools()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xE8715C", Offset = "0xE8715C", VA = "0xE8715C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xE87318", Offset = "0xE87318", VA = "0xE87318")]
	public MaterialsManager()
	{
	}
}
[Token(Token = "0x20002AE")]
public class Medals : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class Bunch
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int count;

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xE88368", Offset = "0xE88368", VA = "0xE88368")]
		public Bunch()
		{
		}
	}

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Medals inst;

	[Token(Token = "0x400116F")]
	private const string MC_EVENT_ID_PREFIX = "MonthlyChallenge_";

	[Token(Token = "0x14000021")]
	public event Action onMedalAwarded
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE8779C", Offset = "0xE8779C", VA = "0xE8779C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE87838", Offset = "0xE87838", VA = "0xE87838")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xE878D4", Offset = "0xE878D4", VA = "0xE878D4", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xE8792C", Offset = "0xE8792C", VA = "0xE8792C")]
	public bool isMyEventMedalSet(string eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xE87990", Offset = "0xE87990", VA = "0xE87990")]
	public void setMyEventMedal(string eventId, MedalType medal)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xE87A90", Offset = "0xE87A90", VA = "0xE87A90")]
	public static string getMonthlyChallengeSetIdFromEventId(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xE87B68", Offset = "0xE87B68", VA = "0xE87B68")]
	public static string getMonthlyChallengeEventId(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xE87BB4", Offset = "0xE87BB4", VA = "0xE87BB4")]
	public bool isMyMonthlyChallengeMedalSet(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xE87BCC", Offset = "0xE87BCC", VA = "0xE87BCC")]
	public void setMyMonthlyChallengeMedal(string setId, MedalType medal)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xE87BFC", Offset = "0xE87BFC", VA = "0xE87BFC")]
	public List<Bunch> getAllMedals(PlayerProfileData profileData)
	{
		return null;
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xE88370", Offset = "0xE88370", VA = "0xE88370")]
	public List<Bunch> getAllMyMedals()
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xE88388", Offset = "0xE88388", VA = "0xE88388")]
	public Medals()
	{
	}
}
[Token(Token = "0x20002B0")]
public class Pauser : MonoBehaviour
{
	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pauser inst;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _pausedForDashboard;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _pausedForPopUp;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _timeBeforePause;

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xE88390", Offset = "0xE88390", VA = "0xE88390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xE883E8", Offset = "0xE883E8", VA = "0xE883E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xE88564", Offset = "0xE88564", VA = "0xE88564")]
	private void OnPopUpPopped(Transform popUp)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xE88570", Offset = "0xE88570", VA = "0xE88570")]
	private void OnPopUpUnpopped()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xE88578", Offset = "0xE88578", VA = "0xE88578")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xE8859C", Offset = "0xE8859C", VA = "0xE8859C")]
	public void OnDashShown()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xE88698", Offset = "0xE88698", VA = "0xE88698")]
	public void OnDashHidden()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xE8882C", Offset = "0xE8882C", VA = "0xE8882C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xE88930", Offset = "0xE88930", VA = "0xE88930")]
	public Pauser()
	{
	}
}
[Token(Token = "0x20002B1")]
public class PhysicsManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x20002B2")]
	[RequireComponent(typeof(Rigidbody))]
	public class PhysicsFollower : MonoBehaviour
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xE88CA8", Offset = "0xE88CA8", VA = "0xE88CA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xE88E24", Offset = "0xE88E24", VA = "0xE88E24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xE88E84", Offset = "0xE88E84", VA = "0xE88E84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xE88F2C", Offset = "0xE88F2C", VA = "0xE88F2C")]
		public PhysicsFollower()
		{
		}
	}

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhysicsManager inst;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene _unscaledTimeScene;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhysicsScene _unscaledTimePhysicsScene;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _unscaledTimer;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _comingBackFromPause;

	[Token(Token = "0x400117B")]
	private const int MAX_ITERAIONS = 100;

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xE88940", Offset = "0xE88940", VA = "0xE88940", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xE88998", Offset = "0xE88998", VA = "0xE88998")]
	public void MoveToUnscaledTimeScene(GameObject go)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xE88AC8", Offset = "0xE88AC8", VA = "0xE88AC8")]
	public PhysicsFollower CreatePhysicsFollower(Rigidbody rb)
	{
		return null;
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xE88B24", Offset = "0xE88B24", VA = "0xE88B24")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xE88B30", Offset = "0xE88B30", VA = "0xE88B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xE88BD8", Offset = "0xE88BD8", VA = "0xE88BD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xE88CA0", Offset = "0xE88CA0", VA = "0xE88CA0")]
	public PhysicsManager()
	{
	}
}
[Token(Token = "0x20002B3")]
public class MultiplayerUpdateMsg : SimpleMessage
{
	[Token(Token = "0x20002B4")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerUpdateMsg <>4__this;

		[Token(Token = "0x17000292")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xE8926C", Offset = "0xE8926C", VA = "0xE8926C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xE892B4", Offset = "0xE892B4", VA = "0xE892B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xE89058", Offset = "0xE89058", VA = "0xE89058")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xE891A0", Offset = "0xE891A0", VA = "0xE891A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xE891A4", Offset = "0xE891A4", VA = "0xE891A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xE89274", Offset = "0xE89274", VA = "0xE89274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Debug")]
	public bool forceShow;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUpdateMsg inst;

	[Token(Token = "0x1700028F")]
	protected override bool playerIsQualified
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE89080", Offset = "0xE89080", VA = "0xE89080", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000290")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE89130", Offset = "0xE89130", VA = "0xE89130", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000291")]
	public override bool needToShow
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xE89170", Offset = "0xE89170", VA = "0xE89170", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xE88F34", Offset = "0xE88F34", VA = "0xE88F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xE88FE4", Offset = "0xE88FE4", VA = "0xE88FE4")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xE89178", Offset = "0xE89178", VA = "0xE89178")]
	public MultiplayerUpdateMsg()
	{
	}
}
[Token(Token = "0x20002B5")]
public class NxMessage : SimpleMessage, ISingleton
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NxMessage inst;

	[Token(Token = "0x17000294")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xE89314", Offset = "0xE89314", VA = "0xE89314", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xE892BC", Offset = "0xE892BC", VA = "0xE892BC", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xE89354", Offset = "0xE89354", VA = "0xE89354")]
	public NxMessage()
	{
	}
}
[Token(Token = "0x20002B6")]
public abstract class SimpleMessage : MonoBehaviour
{
	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerLevel minLevel;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool skipNewPlayers;

	[Token(Token = "0x17000295")]
	protected virtual bool playerIsQualified
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xE89094", Offset = "0xE89094", VA = "0xE89094", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000296")]
	protected abstract string popUpSeenByUserKey
	{
		[Token(Token = "0x6000F07")]
		get;
	}

	[Token(Token = "0x17000297")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE89368", Offset = "0xE89368", VA = "0xE89368")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xE88FBC", Offset = "0xE88FBC", VA = "0xE88FBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000298")]
	public virtual bool needToShow
	{
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xE89390", Offset = "0xE89390", VA = "0xE89390", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xE8918C", Offset = "0xE8918C", VA = "0xE8918C")]
	protected SimpleMessage()
	{
	}
}
[Token(Token = "0x20002B7")]
public class WelcomePopups : MonoBehaviour
{
	[Token(Token = "0x20002B8")]
	[CompilerGenerated]
	private sealed class <showDelayed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WelcomePopups <>4__this;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool gameStart;

		[Token(Token = "0x1700029B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xE89B60", Offset = "0xE89B60", VA = "0xE89B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xE89BA8", Offset = "0xE89BA8", VA = "0xE89BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE89990", Offset = "0xE89990", VA = "0xE89990")]
		[DebuggerHidden]
		public <showDelayed>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xE89A9C", Offset = "0xE89A9C", VA = "0xE89A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xE89AA0", Offset = "0xE89AA0", VA = "0xE89AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xE89B68", Offset = "0xE89B68", VA = "0xE89B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBetweenPopups;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sfxVolume;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float showDelay;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WelcomePopups inst;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _showing;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _gameStart;

	[Token(Token = "0x17000299")]
	public bool needToShow
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE894DC", Offset = "0xE894DC", VA = "0xE894DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029A")]
	public bool showing
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE896A8", Offset = "0xE896A8", VA = "0xE896A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xE89484", Offset = "0xE89484", VA = "0xE89484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xE896B0", Offset = "0xE896B0", VA = "0xE896B0")]
	public void show(bool gameStart, bool delay = true)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xE89734", Offset = "0xE89734", VA = "0xE89734")]
	private void _show()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xE898F8", Offset = "0xE898F8", VA = "0xE898F8")]
	[IteratorStateMachine(typeof(<showDelayed>d__13))]
	private IEnumerator showDelayed(bool gameStart, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xE899B8", Offset = "0xE899B8", VA = "0xE899B8")]
	public void onPopupDone()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xE89A80", Offset = "0xE89A80", VA = "0xE89A80")]
	public WelcomePopups()
	{
	}
}
[Token(Token = "0x20002B9")]
public class YURMessage : SimpleMessage, ISingleton
{
	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURMessage inst;

	[Token(Token = "0x1700029D")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xE89C08", Offset = "0xE89C08", VA = "0xE89C08", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xE89BB0", Offset = "0xE89BB0", VA = "0xE89BB0", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xE89C48", Offset = "0xE89C48", VA = "0xE89C48")]
	public YURMessage()
	{
	}
}
[Token(Token = "0x20002BA")]
[RequireComponent(typeof(Renderer))]
public class PortalVortex : MonoBehaviour
{
	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer _rend;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _mat;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _strengthID;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _angleID;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _duration;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isPlaying;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _isEntering;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Quaternion ROTATION_OFFSET;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3 UP;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly Vector3 ONE;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly float Z_OFFSET;

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xE89C5C", Offset = "0xE89C5C", VA = "0xE89C5C")]
	private void init(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xE89ED4", Offset = "0xE89ED4", VA = "0xE89ED4")]
	public void enter(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xE89F7C", Offset = "0xE89F7C", VA = "0xE89F7C")]
	public void exit(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xE8A024", Offset = "0xE8A024", VA = "0xE8A024")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xE8A104", Offset = "0xE8A104", VA = "0xE8A104")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xE8A2D8", Offset = "0xE8A2D8", VA = "0xE8A2D8")]
	public PortalVortex()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BB")]
public class DemoLockTextData
{
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class StoreLink
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string English;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xE8A3DC", Offset = "0xE8A3DC", VA = "0xE8A3DC")]
		public StoreLink()
		{
		}
	}

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StoreLink storeLink;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xE8A3D4", Offset = "0xE8A3D4", VA = "0xE8A3D4")]
	public DemoLockTextData()
	{
	}
}
[Token(Token = "0x20002BD")]
public class DemoLockText : RemoteConfig<DemoLockTextData>
{
	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DemoLockText inst;

	[Token(Token = "0x1700029E")]
	public bool ready
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xE8A3E4", Offset = "0xE8A3E4", VA = "0xE8A3E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029F")]
	public string StoreLinkText
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xE8A484", Offset = "0xE8A484", VA = "0xE8A484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xE8A42C", Offset = "0xE8A42C", VA = "0xE8A42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xE8A530", Offset = "0xE8A530", VA = "0xE8A530")]
	public DemoLockText()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BE")]
public class EventMedalsData
{
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class Event
	{
		[Serializable]
		[Token(Token = "0x20002C0")]
		public class Medalist
		{
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string medal;

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xE8A588", Offset = "0xE8A588", VA = "0xE8A588")]
			public Medalist()
			{
			}
		}

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventId;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Medalist[] medalists;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xE8A580", Offset = "0xE8A580", VA = "0xE8A580")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Event[] events;

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xE8A578", Offset = "0xE8A578", VA = "0xE8A578")]
	public EventMedalsData()
	{
	}
}
[Token(Token = "0x20002C1")]
public class EventMedals : RemoteConfig<EventMedalsData>
{
	[Token(Token = "0x20002C2")]
	[CompilerGenerated]
	private sealed class <awardMedals>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventMedals <>4__this;

		[Token(Token = "0x170002A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xE8AAC4", Offset = "0xE8AAC4", VA = "0xE8AAC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xE8AB0C", Offset = "0xE8AB0C", VA = "0xE8AB0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xE8A6C4", Offset = "0xE8A6C4", VA = "0xE8A6C4")]
		[DebuggerHidden]
		public <awardMedals>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xE8A734", Offset = "0xE8A734", VA = "0xE8A734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xE8A738", Offset = "0xE8A738", VA = "0xE8A738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xE8AACC", Offset = "0xE8AACC", VA = "0xE8AACC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EventMedals inst;

	[Token(Token = "0x170002A0")]
	public bool ready
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xE8A590", Offset = "0xE8A590", VA = "0xE8A590")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xE8A5D8", Offset = "0xE8A5D8", VA = "0xE8A5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xE8A630", Offset = "0xE8A630", VA = "0xE8A630", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xE8A650", Offset = "0xE8A650", VA = "0xE8A650")]
	[IteratorStateMachine(typeof(<awardMedals>d__5))]
	private IEnumerator awardMedals()
	{
		return null;
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xE8A6EC", Offset = "0xE8A6EC", VA = "0xE8A6EC")]
	public EventMedals()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C3")]
public class GenericData
{
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x20002C5")]
		public class SetWeight
		{
			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string setId;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float weight;

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xE8AB24", Offset = "0xE8AB24", VA = "0xE8AB24")]
			public SetWeight()
			{
			}
		}

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetWeight[] setWeights;

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xE8AB1C", Offset = "0xE8AB1C", VA = "0xE8AB1C")]
		public Multiplayer()
		{
		}
	}

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Multiplayer multiplayer;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xE8AB14", Offset = "0xE8AB14", VA = "0xE8AB14")]
	public GenericData()
	{
	}
}
[Token(Token = "0x20002C6")]
public class GenericRemoteConfig : RemoteConfig<GenericData>, ISingleton
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GenericRemoteConfig inst;

	[Token(Token = "0x170002A3")]
	public bool ready
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xE8AB2C", Offset = "0xE8AB2C", VA = "0xE8AB2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A4")]
	public GenericData data
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xE8AB74", Offset = "0xE8AB74", VA = "0xE8AB74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xE8AB7C", Offset = "0xE8AB7C", VA = "0xE8AB7C", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xE8ABD4", Offset = "0xE8ABD4", VA = "0xE8ABD4")]
	public GenericRemoteConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C7")]
public class MultiplayerSeasonsData
{
	[Serializable]
	[Token(Token = "0x20002C8")]
	public class Season
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboard;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string end;

		[Token(Token = "0x170002A5")]
		public bool IsCurrent
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xE8AC24", Offset = "0xE8AC24", VA = "0xE8AC24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A6")]
		public DateTime EndDate
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xE8AC30", Offset = "0xE8AC30", VA = "0xE8AC30")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xE8AD68", Offset = "0xE8AD68", VA = "0xE8AD68")]
		public Season()
		{
		}
	}

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Season> seasons;

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xE8AC1C", Offset = "0xE8AC1C", VA = "0xE8AC1C")]
	public MultiplayerSeasonsData()
	{
	}
}
[Token(Token = "0x20002C9")]
public class MultiplayerSeasons : RemoteConfig<MultiplayerSeasonsData>, ISingleton
{
	[Token(Token = "0x20002CA")]
	[CompilerGenerated]
	private sealed class <waitForProfileCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerSeasons <>4__this;

		[Token(Token = "0x170002B3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0xE8BA5C", Offset = "0xE8BA5C", VA = "0xE8BA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0xE8BAA4", Offset = "0xE8BAA4", VA = "0xE8BAA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xE8B470", Offset = "0xE8B470", VA = "0xE8B470")]
		[DebuggerHidden]
		public <waitForProfileCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xE8B8C8", Offset = "0xE8B8C8", VA = "0xE8B8C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xE8B8CC", Offset = "0xE8B8CC", VA = "0xE8B8CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xE8BA64", Offset = "0xE8BA64", VA = "0xE8BA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CB")]
	[CompilerGenerated]
	private sealed class <debugKeysCo>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerSeasons <>4__this;

		[Token(Token = "0x170002B5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0xE8BBDC", Offset = "0xE8BBDC", VA = "0xE8BBDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0xE8BC24", Offset = "0xE8BC24", VA = "0xE8BC24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xE8B498", Offset = "0xE8B498", VA = "0xE8B498")]
		[DebuggerHidden]
		public <debugKeysCo>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xE8BB00", Offset = "0xE8BB00", VA = "0xE8BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xE8BB04", Offset = "0xE8BB04", VA = "0xE8BB04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xE8BBE4", Offset = "0xE8BBE4", VA = "0xE8BBE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerLevel minLevel;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerSeasons inst;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _debugActualLeaderboard;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _newMsgToShowUser;

	[Token(Token = "0x170002A7")]
	private DebugSettings.Multiplayer.Seasons debugConfig
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xE8AD70", Offset = "0xE8AD70", VA = "0xE8AD70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A8")]
	public bool ready
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xE8ADD8", Offset = "0xE8ADD8", VA = "0xE8ADD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A9")]
	public int numSeasons
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xE8AE64", Offset = "0xE8AE64", VA = "0xE8AE64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002AA")]
	private MultiplayerSeasonsData.Season currentSeason
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xE8AF14", Offset = "0xE8AF14", VA = "0xE8AF14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AB")]
	private MultiplayerSeasonsData.Season previousSeason
	{
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xE8AF80", Offset = "0xE8AF80", VA = "0xE8AF80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AC")]
	public string seasonName
	{
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xE8AFEC", Offset = "0xE8AFEC", VA = "0xE8AFEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AD")]
	private string seasonLeaderboard
	{
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xE8B008", Offset = "0xE8B008", VA = "0xE8B008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AE")]
	private string seasonType
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xE8B024", Offset = "0xE8B024", VA = "0xE8B024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AF")]
	private bool playerIsQualified
	{
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xE8B3D4", Offset = "0xE8B3D4", VA = "0xE8B3D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B0")]
	private bool needToReset
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xE8B618", Offset = "0xE8B618", VA = "0xE8B618")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B1")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xE8B850", Offset = "0xE8B850", VA = "0xE8B850")]
		set
		{
		}
	}

	[Token(Token = "0x170002B2")]
	public bool needToShow
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xE8967C", Offset = "0xE8967C", VA = "0xE8967C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000022")]
	public event Action changed
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xE8B040", Offset = "0xE8B040", VA = "0xE8B040")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xE8B0DC", Offset = "0xE8B0DC", VA = "0xE8B0DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xE8AEB4", Offset = "0xE8AEB4", VA = "0xE8AEB4")]
	public MultiplayerSeasonsData.Season getSeason(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xE8B178", Offset = "0xE8B178", VA = "0xE8B178")]
	private void onChanged()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xE8B194", Offset = "0xE8B194", VA = "0xE8B194", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xE8B1EC", Offset = "0xE8B1EC", VA = "0xE8B1EC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE8B2EC", Offset = "0xE8B2EC", VA = "0xE8B2EC")]
	[IteratorStateMachine(typeof(<waitForProfileCo>d__28))]
	private IEnumerator<float> waitForProfileCo()
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xE8B360", Offset = "0xE8B360", VA = "0xE8B360")]
	[IteratorStateMachine(typeof(<debugKeysCo>d__29))]
	private IEnumerator<float> debugKeysCo()
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xE8B4C0", Offset = "0xE8B4C0", VA = "0xE8B4C0", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xE8B52C", Offset = "0xE8B52C", VA = "0xE8B52C")]
	private void fakeNewSeasonNow()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xE8B5E4", Offset = "0xE8B5E4", VA = "0xE8B5E4")]
	private void onReady()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xE8B688", Offset = "0xE8B688", VA = "0xE8B688")]
	private void resetUserProfile()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xE8B878", Offset = "0xE8B878", VA = "0xE8B878")]
	public MultiplayerSeasons()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CC")]
public class OSTReleaseData
{
	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool released;

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE8BC80", Offset = "0xE8BC80", VA = "0xE8BC80")]
	public OSTReleaseData()
	{
	}
}
[Token(Token = "0x20002CD")]
public class OSTRelease : RemoteConfig<OSTReleaseData>
{
	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerLevel minLevel;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Debug")]
	public bool forceShow;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OSTRelease inst;

	[Token(Token = "0x40011C3")]
	private const string ostReleasedKey = "ost_released";

	[Token(Token = "0x40011C4")]
	private const string popUpSeenByUserKey = "ost_release_seen";

	[Token(Token = "0x170002B7")]
	private bool playerIsQualified
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xE8BE0C", Offset = "0xE8BE0C", VA = "0xE8BE0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B8")]
	public bool ostReleased
	{
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xE8BEB8", Offset = "0xE8BEB8", VA = "0xE8BEB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xE8BD48", Offset = "0xE8BD48", VA = "0xE8BD48")]
		set
		{
		}
	}

	[Token(Token = "0x170002B9")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xE8BF08", Offset = "0xE8BF08", VA = "0xE8BF08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xE8BD94", Offset = "0xE8BD94", VA = "0xE8BD94")]
		set
		{
		}
	}

	[Token(Token = "0x170002BA")]
	public bool needToShow
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xE8964C", Offset = "0xE8964C", VA = "0xE8964C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE8BC88", Offset = "0xE8BC88", VA = "0xE8BC88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xE8BDE0", Offset = "0xE8BDE0", VA = "0xE8BDE0", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xE8BF58", Offset = "0xE8BF58", VA = "0xE8BF58")]
	public OSTRelease()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CE")]
public class RankingData
{
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class Levels
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xE8BFB0", Offset = "0xE8BFB0", VA = "0xE8BFB0")]
		public Levels()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D0")]
	public class General
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float incompleteWaveXpRatio;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xE8BFB8", Offset = "0xE8BFB8", VA = "0xE8BFB8")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D1")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x20002D2")]
		public class Campaign
		{
			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] xpPerWaveByStage;

			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xE8BFC8", Offset = "0xE8BFC8", VA = "0xE8BFC8")]
			public Campaign()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D3")]
		public class MonthlyChallenge
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float xpPerWave;

			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xE8BFD0", Offset = "0xE8BFD0", VA = "0xE8BFD0")]
			public MonthlyChallenge()
			{
			}
		}

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Campaign campaign;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonthlyChallenge monthlyChallenge;

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xE8BFC0", Offset = "0xE8BFC0", VA = "0xE8BFC0")]
		public Solo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D4")]
	public class ArcadeStyleXp
	{
		[Serializable]
		[Token(Token = "0x20002D5")]
		public class XpDifficultyFactor
		{
			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxDifficulty;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxFactor;

			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xE8BFE0", Offset = "0xE8BFE0", VA = "0xE8BFE0")]
			public XpDifficultyFactor()
			{
			}
		}

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float xpPerWaveBase;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XpDifficultyFactor xpDifficultyFactor;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xE8BFD8", Offset = "0xE8BFD8", VA = "0xE8BFD8")]
		public ArcadeStyleXp()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D6")]
	public class Arcade
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeStyleXp classic;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArcadeStyleXp nightmare;

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xE8BFE8", Offset = "0xE8BFE8", VA = "0xE8BFE8")]
		public Arcade()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D7")]
	public class CoOp
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeStyleXp classic;

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xE8BFF0", Offset = "0xE8BFF0", VA = "0xE8BFF0")]
		public CoOp()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D8")]
	public class Versus
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float xpPerWave;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float xpPerWin;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xpPerRatingGain;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xE8BFF8", Offset = "0xE8BFF8", VA = "0xE8BFF8")]
		public Versus()
		{
		}
	}

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Levels[] levels;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public General general;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Solo solo;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Arcade arcade;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CoOp coOp;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Versus versus;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xE8BFA8", Offset = "0xE8BFA8", VA = "0xE8BFA8")]
	public RankingData()
	{
	}
}
[Token(Token = "0x20002D9")]
public class Ranking : RemoteConfig<RankingData>, ISingleton
{
	[Token(Token = "0x40011DC")]
	private const float minGameDurationForAnyXp = 5f;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Ranking inst;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlayerLevel[] _levels;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UISettings.LocalizedTexts.PlayerLevels _levelTexts;

	[Token(Token = "0x170002BB")]
	public bool ready
	{
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xE8C000", Offset = "0xE8C000", VA = "0xE8C000")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xE8C048", Offset = "0xE8C048", VA = "0xE8C048", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xE8C0B0", Offset = "0xE8C0B0", VA = "0xE8C0B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xE8C124", Offset = "0xE8C124", VA = "0xE8C124")]
	public PlayerLevel getLevelByXp(int xp)
	{
		return default(PlayerLevel);
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xE8C268", Offset = "0xE8C268", VA = "0xE8C268")]
	public int GetRequiredXpForLevel(PlayerLevel level)
	{
		return default(int);
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xE8C468", Offset = "0xE8C468", VA = "0xE8C468")]
	public LocalizedString levelTerm(PlayerLevel level)
	{
		return default(LocalizedString);
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xE8C808", Offset = "0xE8C808", VA = "0xE8C808")]
	private int levelIndex(PlayerLevel level)
	{
		return default(int);
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xE8C880", Offset = "0xE8C880", VA = "0xE8C880")]
	public int CalcArcadeXp(ArcadeType arcadeType)
	{
		return default(int);
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xE8D024", Offset = "0xE8D024", VA = "0xE8D024")]
	public int CalcCoOpXp()
	{
		return default(int);
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xE8CA70", Offset = "0xE8CA70", VA = "0xE8CA70")]
	private int CalcArcadeStyleXp(RankingData.ArcadeStyleXp arcadeStyleXp)
	{
		return default(int);
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xE8D150", Offset = "0xE8D150", VA = "0xE8D150")]
	public int CalcSoloXp(string setId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xE8D920", Offset = "0xE8D920", VA = "0xE8D920")]
	public int CalcVersusXp()
	{
		return default(int);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xE8E034", Offset = "0xE8E034", VA = "0xE8E034")]
	public Ranking()
	{
	}
}
[Token(Token = "0x20002DA")]
public class RemoteConfig<Data> : MonoBehaviour
{
	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <readCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RemoteConfig<Data> <>4__this;

		[Token(Token = "0x170002BF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F9B")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9D")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F98")]
		[DebuggerHidden]
		public <readCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F99")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9A")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9C")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DC")]
	[CompilerGenerated]
	private sealed class <readDataCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RemoteConfig<Data> <>4__this;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <fetchedOnline>5__2;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <offlineable>5__3;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string <url>5__4;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityWebRequest <www>5__5;

		[Token(Token = "0x170002C1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FA2")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9E")]
		[DebuggerHidden]
		public <readDataCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9F")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA0")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FA3")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string resourceName;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float updateInterval;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool allowOffline;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool forceOffline;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool clearCache;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool readOfflineFirst;

	[Token(Token = "0x40011E6")]
	private const string keyPrefix = "remote_config_cache_";

	[Token(Token = "0x40011E7")]
	private const int WWW_TIMEOUT = 10;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Data _data;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CoroutineHandle _readDataRoutine;

	[Token(Token = "0x170002BC")]
	public string local
	{
		[Token(Token = "0x6000F8B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BD")]
	private string key
	{
		[Token(Token = "0x6000F8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BE")]
	protected bool dataLoaded
	{
		[Token(Token = "0x6000F8D")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F8E")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F8F")]
	private void OnOnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6000F90")]
	[IteratorStateMachine(typeof(RemoteConfig<>.<readCo>d__18))]
	private IEnumerator<float> readCo()
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[IteratorStateMachine(typeof(RemoteConfig<>.<readDataCo>d__19))]
	private IEnumerator<float> readDataCo()
	{
		return null;
	}

	[Token(Token = "0x6000F92")]
	private string readOffline()
	{
		return null;
	}

	[Token(Token = "0x6000F93")]
	private bool parseData(string textResponse)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F94")]
	private void OnDataParsed(bool isOnline)
	{
	}

	[Token(Token = "0x6000F95")]
	protected virtual void onDataParsed(bool isOnline)
	{
	}

	[Token(Token = "0x6000F96")]
	protected virtual void onDataParsed()
	{
	}

	[Token(Token = "0x6000F97")]
	public RemoteConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DD")]
public class RNXVersionData
{
	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string minSupportedGameVersion;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string minSupportedMultiplayerVersion;

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xE8E1C0", Offset = "0xE8E1C0", VA = "0xE8E1C0")]
	public RNXVersionData()
	{
	}
}
[Token(Token = "0x20002DE")]
public class RemoteRNXVersion : RemoteConfig<RNXVersionData>, ISingleton
{
	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RemoteRNXVersion inst;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketVersion _minSupportedGameVersion;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RacketVersion _minSupportedMultiplayerVersion;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RacketVersion _lastPrintedMinSupportedMultiplayerVersion;

	[Token(Token = "0x170002C3")]
	public bool ready
	{
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xE8E1C8", Offset = "0xE8E1C8", VA = "0xE8E1C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002C4")]
	public static bool multiplayerVersionSupported
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xE8E57C", Offset = "0xE8E57C", VA = "0xE8E57C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000023")]
	public event Action multiplayerVersionSupportedChanged
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xE8E210", Offset = "0xE8E210", VA = "0xE8E210")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xE8E2AC", Offset = "0xE8E2AC", VA = "0xE8E2AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xE8E348", Offset = "0xE8E348", VA = "0xE8E348")]
	private void onMultiplayerVersionSupportedChanged()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xE8E364", Offset = "0xE8E364", VA = "0xE8E364", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xE8E3BC", Offset = "0xE8E3BC", VA = "0xE8E3BC", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xE8E6A8", Offset = "0xE8E6A8", VA = "0xE8E6A8")]
	public RemoteRNXVersion()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DF")]
public class SoloProgressData
{
	[Serializable]
	[Token(Token = "0x20002E0")]
	public class Set
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] starThresholds;

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xE8E6F8", Offset = "0xE8E6F8", VA = "0xE8E6F8")]
		public Set()
		{
		}
	}

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Set[] sets;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xE8E6F0", Offset = "0xE8E6F0", VA = "0xE8E6F0")]
	public SoloProgressData()
	{
	}
}
[Token(Token = "0x20002E1")]
public class SoloProgress : RemoteConfig<SoloProgressData>, ISingleton
{
	[Token(Token = "0x20002E2")]
	public class StarsEarned
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] numStars;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numPotentialStars;

		[Token(Token = "0x170002C7")]
		public int totalNumStars
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xE8F6E4", Offset = "0xE8F6E4", VA = "0xE8F6E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xE8F304", Offset = "0xE8F304", VA = "0xE8F304")]
		public StarsEarned()
		{
		}
	}

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloProgress inst;

	[Token(Token = "0x170002C5")]
	public static bool Ready
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xE8E700", Offset = "0xE8E700", VA = "0xE8E700")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002C6")]
	public bool ready
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xE8E7A4", Offset = "0xE8E7A4", VA = "0xE8E7A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xE8E7EC", Offset = "0xE8E7EC", VA = "0xE8E7EC", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xE8E844", Offset = "0xE8E844", VA = "0xE8E844")]
	public SoloProgressData.Set getSetInfo(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xE8E99C", Offset = "0xE8E99C", VA = "0xE8E99C")]
	public int getSetNumStarsEarned(PlayerProfileData.Solo.Set setStats)
	{
		return default(int);
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xE8F064", Offset = "0xE8F064", VA = "0xE8F064")]
	public StarsEarned getTotalStarsEarned(PlayerProfileData profileData)
	{
		return null;
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xE8F368", Offset = "0xE8F368", VA = "0xE8F368")]
	public StarsEarned getStarsEarnedInStage(int stageIndex)
	{
		return null;
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xE8F69C", Offset = "0xE8F69C", VA = "0xE8F69C")]
	public SoloProgress()
	{
	}
}
[Token(Token = "0x20002E3")]
public class SoloContent : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x20002E4")]
	public struct StageInput
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SoloSetMenuItem[] soloSetMenuItems;
	}

	[Token(Token = "0x20002E5")]
	public class Stage
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Set> sets;

		[Token(Token = "0x170002CC")]
		public bool isLast
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xE900CC", Offset = "0xE900CC", VA = "0xE900CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CD")]
		public Stage next
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xE90148", Offset = "0xE90148", VA = "0xE90148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xE900BC", Offset = "0xE900BC", VA = "0xE900BC")]
		public Stage()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	public class Set
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stage stage;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloSetMenuItem uiItem;

		[Token(Token = "0x170002CE")]
		private int indexInStage
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xE901E0", Offset = "0xE901E0", VA = "0xE901E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002CF")]
		public bool isLastInStage
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xE9024C", Offset = "0xE9024C", VA = "0xE9024C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D0")]
		public Set next
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xE902B0", Offset = "0xE902B0", VA = "0xE902B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xE900B4", Offset = "0xE900B4", VA = "0xE900B4")]
		public Set()
		{
		}
	}

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoloSetMenuItem tutorialSoloSetMenuItem;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StageInput[] stageUis;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloContent inst;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Stage> _stages;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Set> _sets;

	[Token(Token = "0x170002C8")]
	public List<Stage> stages
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xE8F728", Offset = "0xE8F728", VA = "0xE8F728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C9")]
	public List<Set> sets
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xE8F730", Offset = "0xE8F730", VA = "0xE8F730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002CA")]
	public IEnumerable<Set> iterAllSets
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xE8F738", Offset = "0xE8F738", VA = "0xE8F738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002CB")]
	public int CountSets
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE8F83C", Offset = "0xE8F83C", VA = "0xE8F83C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xE8F61C", Offset = "0xE8F61C", VA = "0xE8F61C")]
	public Stage getStage(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xE8D7BC", Offset = "0xE8D7BC", VA = "0xE8D7BC")]
	public Set findSet(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xE8F948", Offset = "0xE8F948", VA = "0xE8F948", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xE8F9A8", Offset = "0xE8F9A8", VA = "0xE8F9A8")]
	private void extractContentFromUi()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xE900C4", Offset = "0xE900C4", VA = "0xE900C4")]
	public SoloContent()
	{
	}
}
[Token(Token = "0x20002E9")]
public class TutorialSequence : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	private class KeepTime
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _timeAtStart;

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xE91180", Offset = "0xE91180", VA = "0xE91180")]
		public KeepTime()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xE911A4", Offset = "0xE911A4", VA = "0xE911A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xE911C0", Offset = "0xE911C0", VA = "0xE911C0")]
		public float TimeSince()
		{
			return default(float);
		}
	}

	[Token(Token = "0x20002EB")]
	[CompilerGenerated]
	private sealed class <WaitForUserPrompt>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool restartBall;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialPromptUI.TextList.MessageContent text;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioManager.SoundEffect announcerSFX;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TutorialPromptUI.TextList.MessageContent nextText;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioManager.SoundEffect nextAnnouncerSFX;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool noBallRespawn;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool <racketWasInGame>5__2;

		[Token(Token = "0x170002D7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xE91460", Offset = "0xE91460", VA = "0xE91460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xE914A8", Offset = "0xE914A8", VA = "0xE914A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xE90EAC", Offset = "0xE90EAC", VA = "0xE90EAC")]
		[DebuggerHidden]
		public <WaitForUserPrompt>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xE911E0", Offset = "0xE911E0", VA = "0xE911E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xE911E4", Offset = "0xE911E4", VA = "0xE911E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xE91468", Offset = "0xE91468", VA = "0xE91468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[CompilerGenerated]
	private sealed class <WaitPostRacketHit>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x170002D9")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xE915E4", Offset = "0xE915E4", VA = "0xE915E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xE9162C", Offset = "0xE9162C", VA = "0xE9162C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xE90F58", Offset = "0xE90F58", VA = "0xE90F58")]
		[DebuggerHidden]
		public <WaitPostRacketHit>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xE91504", Offset = "0xE91504", VA = "0xE91504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xE91508", Offset = "0xE91508", VA = "0xE91508", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xE915EC", Offset = "0xE915EC", VA = "0xE915EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[CompilerGenerated]
	private sealed class <TutorialSequenceCo>d__49 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ball <ball>5__2;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private KeepTime <shotsStart>5__3;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private KeepTime <pullStart>5__4;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timePulling>5__5;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <numSlings>5__6;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeepTime <powerShotStart>5__7;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <prevPowerShots>5__8;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <reminderTimer>5__9;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <lastDamage>5__10;

		[Token(Token = "0x170002DB")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xE92754", Offset = "0xE92754", VA = "0xE92754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xE9279C", Offset = "0xE9279C", VA = "0xE9279C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xE91110", Offset = "0xE91110", VA = "0xE91110")]
		[DebuggerHidden]
		public <TutorialSequenceCo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xE91688", Offset = "0xE91688", VA = "0xE91688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xE9168C", Offset = "0xE9168C", VA = "0xE9168C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xE9275C", Offset = "0xE9275C", VA = "0xE9275C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialSequence inst;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _postRacketHitDelay;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Stage I")]
	public int _numRacketHitsNeeded;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _minSlingDuration;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _numSlingsRequired;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _powerShotsRequired;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Stage II")]
	public float _postTargetAppearDelay;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _postEnergyBarDelay;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Stage III")]
	public int _stage3StartingWave;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timeouts")]
	public float _timoutFirstHits;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _timoutGravitySling;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _timoutPlow;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Physics Changes")]
	public float ballMinDampedVelocity;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ballMinPowershotSpeed;

	[NonSerialized]
	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _isPlaying;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool ballHitRacket;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool playerFailed;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool _canCompleteWaves;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _canProgressTimer;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _canShowDisplayTimerBar;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool _shouldUIPromptsBeInFrontOfPlayer;

	[Token(Token = "0x4001225")]
	private const string COROUTINE_TAG = "TutorialSequence_Coroutines";

	[Token(Token = "0x170002D1")]
	public static bool playing
	{
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xE90470", Offset = "0xE90470", VA = "0xE90470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D2")]
	public static bool canCompleteWaves
	{
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xE904C4", Offset = "0xE904C4", VA = "0xE904C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D3")]
	public static bool canProgressTimer
	{
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xE90528", Offset = "0xE90528", VA = "0xE90528")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D4")]
	public static bool canShowDisplayTimerBar
	{
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xE9058C", Offset = "0xE9058C", VA = "0xE9058C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D5")]
	public static bool shouldUIPromptsBeInFrontOfPlayer
	{
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xE905F0", Offset = "0xE905F0", VA = "0xE905F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002D6")]
	public bool isPlaying
	{
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xE90654", Offset = "0xE90654", VA = "0xE90654")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xE9065C", Offset = "0xE9065C", VA = "0xE9065C")]
		set
		{
		}
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xE906C4", Offset = "0xE906C4", VA = "0xE906C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xE9071C", Offset = "0xE9071C", VA = "0xE9071C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xE90950", Offset = "0xE90950", VA = "0xE90950")]
	public void CheckIfNeedTutorial()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xE90A34", Offset = "0xE90A34", VA = "0xE90A34")]
	private void MarkTutorialDone()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xE90A9C", Offset = "0xE90A9C", VA = "0xE90A9C")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xE90BA8", Offset = "0xE90BA8", VA = "0xE90BA8")]
	private void StopTutorial()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xE90CAC", Offset = "0xE90CAC", VA = "0xE90CAC")]
	private void onBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xE90CB8", Offset = "0xE90CB8", VA = "0xE90CB8")]
	public void PlayerFailed()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xE90CC4", Offset = "0xE90CC4", VA = "0xE90CC4")]
	public void BuildTutorialArena()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xE90DB8", Offset = "0xE90DB8", VA = "0xE90DB8")]
	[IteratorStateMachine(typeof(<WaitForUserPrompt>d__45))]
	private IEnumerator<float> WaitForUserPrompt(TutorialPromptUI.TextList.MessageContent text, bool restartBall = false, bool noBallRespawn = false, [Optional] TutorialPromptUI.TextList.MessageContent nextText, [Optional] AudioManager.SoundEffect announcerSFX, [Optional] AudioManager.SoundEffect nextAnnouncerSFX)
	{
		return null;
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xE90ED4", Offset = "0xE90ED4", VA = "0xE90ED4")]
	[IteratorStateMachine(typeof(<WaitPostRacketHit>d__46))]
	private IEnumerator<float> WaitPostRacketHit(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xE90F80", Offset = "0xE90F80", VA = "0xE90F80")]
	private void SpawnArenaBall(float pathSpeed = 0.25f)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xE9074C", Offset = "0xE9074C", VA = "0xE9074C")]
	public void Abort()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xE90D44", Offset = "0xE90D44", VA = "0xE90D44")]
	[IteratorStateMachine(typeof(<TutorialSequenceCo>d__49))]
	private IEnumerator<float> TutorialSequenceCo()
	{
		return null;
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xE91138", Offset = "0xE91138", VA = "0xE91138")]
	public TutorialSequence()
	{
	}
}
[Token(Token = "0x20002EE")]
public class UIPlayerPosition : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002EF")]
	public struct Debugg
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Test states in runtime")]
		public bool enable;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Range(0f, 2f)]
		public float hmdHeight;
	}

	[Token(Token = "0x20002F0")]
	public enum Level
	{
		[Token(Token = "0x400124D")]
		Eye,
		[Token(Token = "0x400124E")]
		Chest,
		[Token(Token = "0x400124F")]
		Pelvis
	}

	[Token(Token = "0x20002F1")]
	[CompilerGenerated]
	private sealed class <updateCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIPlayerPosition <>4__this;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <interval>5__2;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <waitTimer>5__3;

		[Token(Token = "0x170002DF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xE9364C", Offset = "0xE9364C", VA = "0xE9364C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xE93694", Offset = "0xE93694", VA = "0xE93694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xE932F0", Offset = "0xE932F0", VA = "0xE932F0")]
		[DebuggerHidden]
		public <updateCo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xE9341C", Offset = "0xE9341C", VA = "0xE9341C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xE93420", Offset = "0xE93420", VA = "0xE93420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xE93654", Offset = "0xE93654", VA = "0xE93654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001241")]
	private const float _initialHeight = 1.7f;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Debugg debug;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UISettings.PlayerHeight _config;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CyclicBuffer<float> _lastHeights;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _playerHeight;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _monitoring;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _monitoringCo;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPlayerPosition inst;

	[Token(Token = "0x170002DD")]
	private float playerHeight
	{
		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xE9294C", Offset = "0xE9294C", VA = "0xE9294C")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public static Vector3 centerPosAtEyeHeight
	{
		[Token(Token = "0x6001000")]
		[Address(RVA = "0xE92BC0", Offset = "0xE92BC0", VA = "0xE92BC0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000024")]
	public event Action playerHeightChanged
	{
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xE927F8", Offset = "0xE927F8", VA = "0xE927F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xE92894", Offset = "0xE92894", VA = "0xE92894")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xE92930", Offset = "0xE92930", VA = "0xE92930")]
	private void onPlayerHeightChanged()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xE92A30", Offset = "0xE92A30", VA = "0xE92A30")]
	public static float getHeightAt(Level level)
	{
		return default(float);
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xE92C84", Offset = "0xE92C84", VA = "0xE92C84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xE92DFC", Offset = "0xE92DFC", VA = "0xE92DFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xE93034", Offset = "0xE93034", VA = "0xE93034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xE92FB4", Offset = "0xE92FB4", VA = "0xE92FB4")]
	private void startMonitoring()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xE93150", Offset = "0xE93150", VA = "0xE93150")]
	private void stopMonitoring()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xE93238", Offset = "0xE93238", VA = "0xE93238")]
	private void onUiConfigUpdated()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xE931C4", Offset = "0xE931C4", VA = "0xE931C4")]
	[IteratorStateMachine(typeof(<updateCo>d__25))]
	private IEnumerator<float> updateCo()
	{
		return null;
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xE93318", Offset = "0xE93318", VA = "0xE93318")]
	private void calculateHeight()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xE93408", Offset = "0xE93408", VA = "0xE93408")]
	public UIPlayerPosition()
	{
	}
}
[Token(Token = "0x20002F2")]
public class VideoControl : MonoBehaviour
{
	[Token(Token = "0x20002F3")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xE938E0", Offset = "0xE938E0", VA = "0xE938E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xE93928", Offset = "0xE93928", VA = "0xE93928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xE937A8", Offset = "0xE937A8", VA = "0xE937A8")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xE937D8", Offset = "0xE937D8", VA = "0xE937D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xE937DC", Offset = "0xE937DC", VA = "0xE937DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xE938E8", Offset = "0xE938E8", VA = "0xE938E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VideoControl inst;

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xE936F0", Offset = "0xE936F0", VA = "0xE936F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xE93748", Offset = "0xE93748", VA = "0xE93748")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xE937D0", Offset = "0xE937D0", VA = "0xE937D0")]
	public VideoControl()
	{
	}
}
[Token(Token = "0x20002F4")]
public class VortexManager : MonoBehaviour
{
	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VortexManager inst;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float enterDuration;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float exitDuration;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strength;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angle;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve enterAnimation;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve exitAnimation;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PortalVortex enterVortex;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PortalVortex exitVertex;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool vortexAtMiddle;

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xE93930", Offset = "0xE93930", VA = "0xE93930")]
	public static void enter(Transform portal, Vector3 hitPos)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xE93934", Offset = "0xE93934", VA = "0xE93934")]
	public static void exit(Transform portal)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xE93938", Offset = "0xE93938", VA = "0xE93938")]
	private void Awake()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xE93990", Offset = "0xE93990", VA = "0xE93990")]
	public VortexManager()
	{
	}
}
[Token(Token = "0x20002F5")]
public class MultiplayerDebugText : MonoBehaviour
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xE939B4", Offset = "0xE939B4", VA = "0xE939B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xE93A40", Offset = "0xE93A40", VA = "0xE93A40")]
	private void Update()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xE94154", Offset = "0xE94154", VA = "0xE94154")]
	public MultiplayerDebugText()
	{
	}
}
[Token(Token = "0x20002F6")]
[RequireComponent(typeof(AudioSource))]
public class NoiseCanceller : MonoBehaviour
{
	[Token(Token = "0x20002F7")]
	private enum State
	{
		[Token(Token = "0x4001278")]
		Silent,
		[Token(Token = "0x4001279")]
		Speak,
		[Token(Token = "0x400127A")]
		Noise
	}

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBucketLowerLimit;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float silentBucketThresh;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float noiseRatioThresh;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speechSpectrumMin;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speechSpectrumMax;

	[NonSerialized]
	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool active;

	[NonSerialized]
	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool noiseDetected;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource _audioSource;

	[Token(Token = "0x400126C")]
	private const int SPECTRUM_SIZE = 256;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] _spectrum;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] _playbackBuffer;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private short[] _shortsBuffer;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _readIndex;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _writeIndex;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State _currentState;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State _wantedState;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _stateChangeCounter;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _delayFromCurrentToWanted;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _normalizedNoise;

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xE9415C", Offset = "0xE9415C", VA = "0xE9415C")]
	private int GetDelay(State from, State to)
	{
		return default(int);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xE941B0", Offset = "0xE941B0", VA = "0xE941B0")]
	private void UpdateState(State targetState)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xE942B0", Offset = "0xE942B0", VA = "0xE942B0")]
	private void SetActiveState(bool state)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xE94364", Offset = "0xE94364", VA = "0xE94364")]
	public void CopyDataFromBuffer(byte[] buffer, int count)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xE94440", Offset = "0xE94440", VA = "0xE94440")]
	private void DetectNoise()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xE945C8", Offset = "0xE945C8", VA = "0xE945C8")]
	private void OnHeadphonesConnectionChange(bool state)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xE945D4", Offset = "0xE945D4", VA = "0xE945D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xE9462C", Offset = "0xE9462C", VA = "0xE9462C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xE94728", Offset = "0xE94728", VA = "0xE94728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xE947A8", Offset = "0xE947A8", VA = "0xE947A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xE947AC", Offset = "0xE947AC", VA = "0xE947AC")]
	private void OnAudioFilterRead(float[] floatBuf, int numChannels)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xE9497C", Offset = "0xE9497C", VA = "0xE9497C")]
	public NoiseCanceller()
	{
	}
}
[Token(Token = "0x20002F8")]
public class SyncBall : SyncObject
{
	[Token(Token = "0x20002F9")]
	public struct BallFrame
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rotation;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 angularVelocity;
	}

	[Token(Token = "0x20002FA")]
	public enum BallStates
	{
		[Token(Token = "0x4001297")]
		Charged = 1,
		[Token(Token = "0x4001298")]
		Powershot = 2,
		[Token(Token = "0x4001299")]
		Plowing = 4,
		[Token(Token = "0x400129A")]
		GravitySlingUsed = 8,
		[Token(Token = "0x400129B")]
		GravitySlingTorn = 0x10,
		[Token(Token = "0x400129C")]
		ExitingPortal = 0x20,
		[Token(Token = "0x400129D")]
		GoToPositionMode = 0x40
	}

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncBall inst;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SyncBall> allInstances;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Ball _ball;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _velocity;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _auxVector1;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _auxVector2;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion _lastRotation;

	[Token(Token = "0x4001285")]
	private const float targetBallHistoryDelay = 0.04f;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentBallRemoteTime;

	[Token(Token = "0x4001287")]
	private const int historyBufferLength = 20;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CyclicBuffer<BallFrame> historyBuffer;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float interpolationSoftness;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 predictedPos;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion predictedRotation;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 interpolationPosVel;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Quaternion interpolationRotVel;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool logOwnershipChanges;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _lastBallState;

	[Token(Token = "0x170002E3")]
	public static bool recievedBallPacketSinceTurnOver
	{
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xE94A60", Offset = "0xE94A60", VA = "0xE94A60")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600102D")]
		[Address(RVA = "0xE94AA8", Offset = "0xE94AA8", VA = "0xE94AA8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	public override PlayerID playerID
	{
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xE94AF4", Offset = "0xE94AF4", VA = "0xE94AF4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170002E5")]
	public static SyncBall Current
	{
		[Token(Token = "0x6001030")]
		[Address(RVA = "0xE94C04", Offset = "0xE94C04", VA = "0xE94C04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E6")]
	public static Ball CurrentBall
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xE94C4C", Offset = "0xE94C4C", VA = "0xE94C4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E7")]
	public static bool isBallControlledByOtherPlayer
	{
		[Token(Token = "0x6001032")]
		[Address(RVA = "0xE94CEC", Offset = "0xE94CEC", VA = "0xE94CEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E8")]
	public static bool isBallUnderMyControl
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0xE93FC0", Offset = "0xE93FC0", VA = "0xE93FC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E9")]
	public static PlayerID ballOwnerID
	{
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xE94DF8", Offset = "0xE94DF8", VA = "0xE94DF8")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170002EA")]
	public static Player ballOwner
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xE94E68", Offset = "0xE94E68", VA = "0xE94E68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002EB")]
	public int lastBallState
	{
		[Token(Token = "0x6001037")]
		[Address(RVA = "0xE95194", Offset = "0xE95194", VA = "0xE95194")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xE94BE0", Offset = "0xE94BE0", VA = "0xE94BE0", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xE94ED8", Offset = "0xE94ED8", VA = "0xE94ED8")]
	public static void setControllingPlayer(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xE9519C", Offset = "0xE9519C", VA = "0xE9519C")]
	private void registerInstance()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xE9530C", Offset = "0xE9530C", VA = "0xE9530C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xE953F4", Offset = "0xE953F4", VA = "0xE953F4")]
	protected new void OnEnable()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xE955CC", Offset = "0xE955CC", VA = "0xE955CC")]
	protected new void OnDisable()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xE95570", Offset = "0xE95570", VA = "0xE95570")]
	private void ResetHistoryBuffer()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xE957D0", Offset = "0xE957D0", VA = "0xE957D0")]
	private void BallChangedOwnership(PlayerID owningPlayerID)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xE95884", Offset = "0xE95884", VA = "0xE95884", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xE958E0", Offset = "0xE958E0", VA = "0xE958E0", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xE95928", Offset = "0xE95928", VA = "0xE95928", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xE95944", Offset = "0xE95944", VA = "0xE95944", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xE95BE4", Offset = "0xE95BE4", VA = "0xE95BE4")]
	public static void SpawnMultiplayerBall(float entryPathSpeed)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xE96270", Offset = "0xE96270", VA = "0xE96270")]
	private void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xE95980", Offset = "0xE95980", VA = "0xE95980")]
	public static int getCurrentBallState()
	{
		return default(int);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xE96410", Offset = "0xE96410", VA = "0xE96410", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xE96560", Offset = "0xE96560", VA = "0xE96560", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xE96B78", Offset = "0xE96B78", VA = "0xE96B78")]
	private BallFrame GetBallFrameForTime(float time)
	{
		return default(BallFrame);
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xE96F3C", Offset = "0xE96F3C", VA = "0xE96F3C")]
	public static bool CanAssumeOwnership()
	{
		return default(bool);
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xE9703C", Offset = "0xE9703C", VA = "0xE9703C")]
	public static void OnBallFixedUpdate()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xE9708C", Offset = "0xE9708C", VA = "0xE9708C")]
	public void _onBallFixedUpdate()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xE97428", Offset = "0xE97428", VA = "0xE97428")]
	public void ApplyLastDataToBall()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xE9754C", Offset = "0xE9754C", VA = "0xE9754C")]
	public SyncBall()
	{
	}
}
[Token(Token = "0x20002FB")]
public class SyncBallTurnOver : SyncObject
{
	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncBallTurnOver inst;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _needToTakeOwnership;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _needToGoIntoGutter;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool _needToGiveOwnership;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool _skipNextGiveOnership;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _fakePlayerHitBallThisTurn;

	[Token(Token = "0x170002EC")]
	public static bool skipNextGiveOnership
	{
		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC3EB2C", Offset = "0xC3EB2C", VA = "0xC3EB2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002ED")]
	public static bool aboutToGiveOwnership
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC3EB80", Offset = "0xC3EB80", VA = "0xC3EB80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002EE")]
	public static bool aboutToTakeOwnership
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC3EBEC", Offset = "0xC3EBEC", VA = "0xC3EBEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000025")]
	public static event Action<PlayerID> onBallChangeOwnership
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC3E98C", Offset = "0xC3E98C", VA = "0xC3E98C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC3EA5C", Offset = "0xC3EA5C", VA = "0xC3EA5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xC3EC40", Offset = "0xC3EC40", VA = "0xC3EC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xC3EC98", Offset = "0xC3EC98", VA = "0xC3EC98", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xC3ECFC", Offset = "0xC3ECFC", VA = "0xC3ECFC", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xC3ED04", Offset = "0xC3ED04", VA = "0xC3ED04")]
	public static void SkipNextGiveOwnership()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xC3ED5C", Offset = "0xC3ED5C", VA = "0xC3ED5C")]
	public static void GiveOwnership()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xC3F188", Offset = "0xC3F188", VA = "0xC3F188")]
	public static void setControllingPlayer(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xC3F240", Offset = "0xC3F240", VA = "0xC3F240", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xC3F248", Offset = "0xC3F248", VA = "0xC3F248", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xC3F254", Offset = "0xC3F254", VA = "0xC3F254")]
	public void Update()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xC3F5E0", Offset = "0xC3F5E0", VA = "0xC3F5E0", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xC3F9C4", Offset = "0xC3F9C4", VA = "0xC3F9C4", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xC3FA08", Offset = "0xC3FA08", VA = "0xC3FA08", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xC3F394", Offset = "0xC3F394", VA = "0xC3F394")]
	private void ActuallyTakeOwnership_Internal()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xC3FA44", Offset = "0xC3FA44", VA = "0xC3FA44")]
	public SyncBallTurnOver()
	{
	}
}
[Token(Token = "0x20002FC")]
public class SyncBoxTester : MonoBehaviour
{
	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bPlayerOne;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPos;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _time;

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xC3FB10", Offset = "0xC3FB10", VA = "0xC3FB10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xC3FBA0", Offset = "0xC3FBA0", VA = "0xC3FBA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xC3FDC4", Offset = "0xC3FDC4", VA = "0xC3FDC4")]
	public SyncBoxTester()
	{
	}
}
[Token(Token = "0x20002FD")]
public class SyncGameEvents : SyncObject
{
	[Token(Token = "0x20002FE")]
	public enum SyncedEventID : byte
	{
		[Token(Token = "0x40012BA")]
		RacketHitBall,
		[Token(Token = "0x40012BB")]
		GameOver,
		[Token(Token = "0x40012BC")]
		RematchRequest,
		[Token(Token = "0x40012BD")]
		PlayerQuit,
		[Token(Token = "0x40012BE")]
		Ping,
		[Token(Token = "0x40012BF")]
		Checkpoint,
		[Token(Token = "0x40012C0")]
		HitHextrudeWall,
		[Token(Token = "0x40012C1")]
		StartMPSet,
		[Token(Token = "0x40012C2")]
		FloaterSpawn,
		[Token(Token = "0x40012C3")]
		FloaterUpdate,
		[Token(Token = "0x40012C4")]
		FloaterHit,
		[Token(Token = "0x40012C5")]
		FloaterTimeOut,
		[Token(Token = "0x40012C6")]
		PowerupRemoved,
		[Token(Token = "0x40012C7")]
		CoopTimer,
		[Token(Token = "0x40012C8")]
		ScoreSync,
		[Token(Token = "0x40012C9")]
		StartingPlayer,
		[Token(Token = "0x40012CA")]
		AnnouncerSeed,
		[Token(Token = "0x40012CB")]
		PlayerSentLog
	}

	[Token(Token = "0x20002FF")]
	public abstract class GameEvent
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SyncedEventID eventID;

		[Token(Token = "0x6001085")]
		public abstract void AddDataToSendBuffer(byte[] buffer, ref int index);

		[Token(Token = "0x6001086")]
		public abstract void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime);

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xC42CE0", Offset = "0xC42CE0", VA = "0xC42CE0")]
		protected GameEvent()
		{
		}
	}

	[Token(Token = "0x2000300")]
	public class ScoreSyncEvent : GameEvent
	{
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gameScore;

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xC42CB8", Offset = "0xC42CB8", VA = "0xC42CB8")]
		public ScoreSyncEvent()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xC42CE8", Offset = "0xC42CE8", VA = "0xC42CE8", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xC42D0C", Offset = "0xC42D0C", VA = "0xC42D0C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000301")]
	public class RacketHitEvent : GameEvent
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normalizedVelocity;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xC40488", Offset = "0xC40488", VA = "0xC40488")]
		public RacketHitEvent(Vector3 normalizedVelocity)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xC42DAC", Offset = "0xC42DAC", VA = "0xC42DAC", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xC42E78", Offset = "0xC42E78", VA = "0xC42E78", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000302")]
	public class SyncCheckpointEvent : GameEvent
	{
		[Token(Token = "0x2000303")]
		public enum Checkpoint : byte
		{
			[Token(Token = "0x40012D5")]
			MPStartSequence_Begin,
			[Token(Token = "0x40012D6")]
			MPStartSequence_SelectSet,
			[Token(Token = "0x40012D7")]
			MPStartSequence_ReleaseBall,
			[Token(Token = "0x40012D8")]
			MPRoundOver_ClearOldSet,
			[Token(Token = "0x40012D9")]
			MPRoundOver_ShowTargets,
			[Token(Token = "0x40012DA")]
			MPRoundOver_ReleaseBall
		}

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int numCheckPoints;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] checkPointReachedP1;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] checkPointReachedP2;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Checkpoint> locallyReachedCheckpoints;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SyncCheckpointEvent inst;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xC3FF0C", Offset = "0xC3FF0C", VA = "0xC3FF0C")]
		public SyncCheckpointEvent()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xC41C34", Offset = "0xC41C34", VA = "0xC41C34")]
		public static void ResetSyncedCheckpoint(Checkpoint c)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xC41CF4", Offset = "0xC41CF4", VA = "0xC41CF4")]
		public static bool WaitForSyncedCheckpoint(Checkpoint c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xC40150", Offset = "0xC40150", VA = "0xC40150")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xC402A8", Offset = "0xC402A8", VA = "0xC402A8")]
		public bool HaveSendData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC43020", Offset = "0xC43020", VA = "0xC43020", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xC4314C", Offset = "0xC4314C", VA = "0xC4314C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000304")]
	public class StartMPSetEvent : GameEvent
	{
		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int setIndex;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ballEntryPathSpeed;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xC42B18", Offset = "0xC42B18", VA = "0xC42B18")]
		public StartMPSetEvent(int selectedSetIndex)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xC43248", Offset = "0xC43248", VA = "0xC43248", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xC43284", Offset = "0xC43284", VA = "0xC43284", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000305")]
	public class HextrudeWallHitEvent : GameEvent
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectPitch;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hitCorner;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hitBumper;

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xC40A1C", Offset = "0xC40A1C", VA = "0xC40A1C")]
		public HextrudeWallHitEvent(bool bumper, Vector3 pos, float pitch, bool corner)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xC4334C", Offset = "0xC4334C", VA = "0xC4334C", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xC433B4", Offset = "0xC433B4", VA = "0xC433B4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000306")]
	public class StartingPlayerEvent : GameEvent
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startingPlayer;

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xC42B48", Offset = "0xC42B48", VA = "0xC42B48")]
		public StartingPlayerEvent(PlayerID startingPlayer)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xC434FC", Offset = "0xC434FC", VA = "0xC434FC", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xC43508", Offset = "0xC43508", VA = "0xC43508", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000307")]
	public class AnnouncerSeedEvent : GameEvent
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int seed;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xC42B7C", Offset = "0xC42B7C", VA = "0xC42B7C")]
		public AnnouncerSeedEvent(int seed)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC4358C", Offset = "0xC4358C", VA = "0xC4358C", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xC43598", Offset = "0xC43598", VA = "0xC43598", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000308")]
	public class PlayerSentLogEvent : GameEvent
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _token;

		[Token(Token = "0x40012E4")]
		private const int TOKEN_LENGTH = 3;

		[Token(Token = "0x170002F0")]
		public string Token
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xC4361C", Offset = "0xC4361C", VA = "0xC4361C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xC40FB0", Offset = "0xC40FB0", VA = "0xC40FB0")]
			set
			{
			}
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xC42BAC", Offset = "0xC42BAC", VA = "0xC42BAC")]
		public PlayerSentLogEvent()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xC43624", Offset = "0xC43624", VA = "0xC43624", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xC436A4", Offset = "0xC436A4", VA = "0xC436A4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000309")]
	public class GameOverEvent : GameEvent
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameEndReason _gameEndReason;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _player1_score;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _roundNum;

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xC40810", Offset = "0xC40810", VA = "0xC40810")]
		public GameOverEvent(GameEndReason gameEndReason, int player1_score, int roundNum)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xC43854", Offset = "0xC43854", VA = "0xC43854", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC438A4", Offset = "0xC438A4", VA = "0xC438A4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xC43A60", Offset = "0xC43A60", VA = "0xC43A60")]
		private static GameEndReason fixGameEndReasonFromOpponent(GameEndReason gameEndReason)
		{
			return default(GameEndReason);
		}
	}

	[Token(Token = "0x200030A")]
	public class RematchRequestEvent : GameEvent
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xC41114", Offset = "0xC41114", VA = "0xC41114")]
		public RematchRequestEvent()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xC43A80", Offset = "0xC43A80", VA = "0xC43A80", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xC43A84", Offset = "0xC43A84", VA = "0xC43A84", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x200030B")]
	public class PlayerQuitEvent : GameEvent
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xC41234", Offset = "0xC41234", VA = "0xC41234")]
		public PlayerQuitEvent()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xC43AEC", Offset = "0xC43AEC", VA = "0xC43AEC", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xC43BA4", Offset = "0xC43BA4", VA = "0xC43BA4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x200030C")]
	public class PingEvent : GameEvent
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool isPong;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float pingTime;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int lastPing;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xC405D0", Offset = "0xC405D0", VA = "0xC405D0")]
		public PingEvent(bool isPong = false, float pingTime = float.MaxValue)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xC43CF4", Offset = "0xC43CF4", VA = "0xC43CF4", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC43D4C", Offset = "0xC43D4C", VA = "0xC43D4C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x200030D")]
	public class FloaterSpawnEvent : GameEvent
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupType powerupType;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isUnknown;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rotation;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xC42BCC", Offset = "0xC42BCC", VA = "0xC42BCC")]
		public FloaterSpawnEvent()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xC440B0", Offset = "0xC440B0", VA = "0xC440B0", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xC44160", Offset = "0xC44160", VA = "0xC44160", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x200030E")]
	public class FloaterUpdateEvent : GameEvent
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float horizAngle;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float vertAngle;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float radius;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xC42BF4", Offset = "0xC42BF4", VA = "0xC42BF4")]
		public FloaterUpdateEvent()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xC44270", Offset = "0xC44270", VA = "0xC44270", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xC442D4", Offset = "0xC442D4", VA = "0xC442D4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x200030F")]
	public class FloaterHitEvent : GameEvent
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rotation;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 contactPoint;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ballVelocity;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public uint powerupUParam;

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC42C1C", Offset = "0xC42C1C", VA = "0xC42C1C")]
		public FloaterHitEvent()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC44390", Offset = "0xC44390", VA = "0xC44390", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC4442C", Offset = "0xC4442C", VA = "0xC4442C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000310")]
	public class FloaterTimeOutEvent : GameEvent
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC42C48", Offset = "0xC42C48", VA = "0xC42C48")]
		public FloaterTimeOutEvent()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC44510", Offset = "0xC44510", VA = "0xC44510", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC4451C", Offset = "0xC4451C", VA = "0xC4451C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000311")]
	public class PowerupRemovedEvent : GameEvent
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC42C70", Offset = "0xC42C70", VA = "0xC42C70")]
		public PowerupRemovedEvent()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC4459C", Offset = "0xC4459C", VA = "0xC4459C", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC445A8", Offset = "0xC445A8", VA = "0xC445A8", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000312")]
	public class CoopTimerEvent : GameEvent
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int waveNumber;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float remainingTime;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pendingBonusTime;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeSinceLastBonusEarn;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float pendingPenaltyTime;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeSinceLastPenaltyEarn;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int laneChargeStreakCount;

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC42C98", Offset = "0xC42C98", VA = "0xC42C98")]
		public CoopTimerEvent()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC44628", Offset = "0xC44628", VA = "0xC44628", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC44748", Offset = "0xC44748", VA = "0xC44748", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000313")]
	[CompilerGenerated]
	private sealed class <delayGameOverMsg>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverEvent gameOverEvent;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SyncGameEvents <>4__this;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xC44A1C", Offset = "0xC44A1C", VA = "0xC44A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xC44A64", Offset = "0xC44A64", VA = "0xC44A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC40FEC", Offset = "0xC40FEC", VA = "0xC40FEC")]
		[DebuggerHidden]
		public <delayGameOverMsg>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC448C0", Offset = "0xC448C0", VA = "0xC448C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC448C4", Offset = "0xC448C4", VA = "0xC448C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC44A24", Offset = "0xC44A24", VA = "0xC44A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncGameEvents inst;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameEvent> _sendGameEvents;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SyncCheckpointEvent synchedCheckpoints;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Coroutine _delayGameOverMsgCo;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HextrudeWallHitEvent _hextrudeEvent_ForReading;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RacketHitEvent _racketHitEvent_ForReading;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StartMPSetEvent _startMPSetEvent;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StartingPlayerEvent _startingPlayerEvent;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AnnouncerSeedEvent _announcerSeedEvent;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerSentLogEvent _playerSentLogEvent;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FloaterSpawnEvent _floaterSpawnEvent;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FloaterUpdateEvent _floaterUpdateEvent;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FloaterHitEvent _floaterHitEvent;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FloaterTimeOutEvent _floaterTimeOutEvent;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PowerupRemovedEvent _powerupRemovedEvent;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoopTimerEvent _coopTimerEvent;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ScoreSyncEvent _scoreSyncEvent;

	[Token(Token = "0x170002EF")]
	public bool HasGameEventsToSend
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC3FDCC", Offset = "0xC3FDCC", VA = "0xC3FDCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xC3FE1C", Offset = "0xC3FE1C", VA = "0xC3FE1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xC400B8", Offset = "0xC400B8", VA = "0xC400B8", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xC401F8", Offset = "0xC401F8", VA = "0xC401F8", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xC40238", Offset = "0xC40238", VA = "0xC40238", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xC40240", Offset = "0xC40240", VA = "0xC40240", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xC402F8", Offset = "0xC402F8", VA = "0xC402F8", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xC40360", Offset = "0xC40360", VA = "0xC40360")]
	public static void SendRacketHit(Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xC404C8", Offset = "0xC404C8", VA = "0xC404C8")]
	public static void SendPing()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xC40610", Offset = "0xC40610", VA = "0xC40610")]
	public static void SendPong(float timeReceived)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xC40724", Offset = "0xC40724", VA = "0xC40724")]
	public static void SendGameOver(GameEndReason gameEndReason, int player1Score, int roundNum)
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xC408E4", Offset = "0xC408E4", VA = "0xC408E4")]
	public static void SendBumperHit(Vector3 pos, float pitchBoost)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xC40A7C", Offset = "0xC40A7C", VA = "0xC40A7C")]
	public static void SendStopperHit(Vector3 pos, bool corner)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xC40BC0", Offset = "0xC40BC0", VA = "0xC40BC0")]
	public static void SendStartMPSet(float ballStartSpeed, int setIndex)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xC40CA8", Offset = "0xC40CA8", VA = "0xC40CA8")]
	public static void SendStartingPlayer(PlayerID playerId)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xC40D80", Offset = "0xC40D80", VA = "0xC40D80")]
	public static void SendRandomAnnouncerSeed()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xC40EC4", Offset = "0xC40EC4", VA = "0xC40EC4")]
	public static void PlayerSentLog(string logToken)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xC40854", Offset = "0xC40854", VA = "0xC40854")]
	[IteratorStateMachine(typeof(<delayGameOverMsg>d__42))]
	private IEnumerator delayGameOverMsg(GameOverEvent gameOverEvent)
	{
		return null;
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xC41014", Offset = "0xC41014", VA = "0xC41014")]
	public static void SendRematchRequest()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xC41134", Offset = "0xC41134", VA = "0xC41134")]
	public static void SendQuitMatch()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xC41254", Offset = "0xC41254", VA = "0xC41254")]
	public static void SendFloaterSpawn(Floater floater)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xC41510", Offset = "0xC41510", VA = "0xC41510")]
	public static void SendFloaterUpdate(Floater floater)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xC41614", Offset = "0xC41614", VA = "0xC41614")]
	public static void SendFloaterHit(Floater floater, Vector3 contactPoint, Vector3 ballVelocity, uint powerupUParam)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xC41820", Offset = "0xC41820", VA = "0xC41820")]
	public static void SendFloaterTimeOut(Floater floater)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xC41990", Offset = "0xC41990", VA = "0xC41990")]
	public static void SendPowerupRemovedEvent(BasePowerup powerup)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xC3F83C", Offset = "0xC3F83C", VA = "0xC3F83C")]
	public static void SendCoopTimerSync()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xC41AEC", Offset = "0xC41AEC", VA = "0xC41AEC")]
	public static void SendScoreSync(int score)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xC41C30", Offset = "0xC41C30", VA = "0xC41C30")]
	public static void ResetCheckpoint(SyncCheckpointEvent.Checkpoint c)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xC41CF0", Offset = "0xC41CF0", VA = "0xC41CF0")]
	public static bool WaitForCheckpoint(SyncCheckpointEvent.Checkpoint c)
	{
		return default(bool);
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xC41EE0", Offset = "0xC41EE0", VA = "0xC41EE0", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xC41EF8", Offset = "0xC41EF8", VA = "0xC41EF8")]
	public void AddDataToSendBuffer(byte[] buffer, ref int index, out List<(SyncedEventID, int)> report)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xC42260", Offset = "0xC42260", VA = "0xC42260", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xC42278", Offset = "0xC42278", VA = "0xC42278")]
	public void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime, out List<(SyncedEventID, int)> report)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xC426F4", Offset = "0xC426F4", VA = "0xC426F4")]
	public SyncGameEvents()
	{
	}
}
[Token(Token = "0x2000314")]
public class SyncHexHits : SyncObject
{
	[Token(Token = "0x2000315")]
	public struct HexHitInfo
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 contactPoint;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float impactStrength;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Brick hitBrick;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVector2 hexCoords;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVector2 exitPortal;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint targetUniqueID;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Brick.ContactSource hitSource;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte damagePotential;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool oneShotBoss;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool doubleBoss;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool shielded;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool GodModeActive;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int targetExpectedDamage;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int damageApplied;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Target _target;

		[Token(Token = "0x170002F3")]
		public Target target
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xC45A18", Offset = "0xC45A18", VA = "0xC45A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC45B58", Offset = "0xC45B58", VA = "0xC45B58")]
		private static byte DamageByContactSource(Brick.ContactSource contactSource)
		{
			return default(byte);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC45C70", Offset = "0xC45C70", VA = "0xC45C70")]
		public HexHitInfo(Target t, Brick.ContactSource contactSource, Vector3 contactPoint, float impactStrength)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC45D54", Offset = "0xC45D54", VA = "0xC45D54")]
		public HexHitInfo(Brick b, Brick.ContactSource contactSource, Vector3 contactPoint, float impactStrength)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC4505C", Offset = "0xC4505C", VA = "0xC4505C")]
		public HexHitInfo(TargetMainHealing healingTarget)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC44CD4", Offset = "0xC44CD4", VA = "0xC44CD4")]
		public void DebugLog()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC455DC", Offset = "0xC455DC", VA = "0xC455DC")]
		public void Read(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC453C0", Offset = "0xC453C0", VA = "0xC453C0")]
		public void Write(byte[] buffer, ref int index)
		{
		}
	}

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncHexHits inst;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<HexHitInfo> _sendHits;

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xC44A6C", Offset = "0xC44A6C", VA = "0xC44A6C", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xC44ADC", Offset = "0xC44ADC", VA = "0xC44ADC", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xC44B1C", Offset = "0xC44B1C", VA = "0xC44B1C")]
	public static bool ReportHit(HexHitInfo hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xC44F20", Offset = "0xC44F20", VA = "0xC44F20")]
	public static bool ReportHeal(TargetMainHealing healingTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xC45108", Offset = "0xC45108", VA = "0xC45108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xC4516C", Offset = "0xC4516C", VA = "0xC4516C", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xC45174", Offset = "0xC45174", VA = "0xC45174", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xC45180", Offset = "0xC45180", VA = "0xC45180", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xC451D0", Offset = "0xC451D0", VA = "0xC451D0", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xC45498", Offset = "0xC45498", VA = "0xC45498", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xC4584C", Offset = "0xC4584C", VA = "0xC4584C")]
	private void ApplyHitInfo(ref HexHitInfo info)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xC45AAC", Offset = "0xC45AAC", VA = "0xC45AAC")]
	public SyncHexHits()
	{
	}
}
[Token(Token = "0x2000316")]
public class SyncManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000317")]
	private class SyncObjectComparer : Comparer<SyncObject>
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC499F0", Offset = "0xC499F0", VA = "0xC499F0", Slot = "6")]
		public override int Compare(SyncObject x, SyncObject y)
		{
			return default(int);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xC499A8", Offset = "0xC499A8", VA = "0xC499A8")]
		public SyncObjectComparer()
		{
		}
	}

	[Token(Token = "0x2000318")]
	private enum SwitchConnectionMode
	{
		[Token(Token = "0x400132E")]
		None,
		[Token(Token = "0x400132F")]
		Switching,
		[Token(Token = "0x4001330")]
		Switched
	}

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncManager inst;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _P2PDisconnectedSeconds;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _P2PInactiveSeconds;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sessionTime;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SyncTime _timerObject;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SyncObject> _senderObjects;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SyncObject> _listenerObjects;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SyncObject> _allSyncObjects;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerID _myPlayerID;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeSinceLastPacket;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool sessionIsOpen;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool sessionIsActive;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool sessionDisconnected;

	[Token(Token = "0x4001327")]
	public const int MAX_BUFFER_SIZE = 512;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] sendBuffer;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] receiveBuffer;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SyncObjectComparer _syncObjectComparer;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SwitchConnectionMode _switchedMode;

	[Token(Token = "0x400132C")]
	public const int SEND_PACKET_MOD = 2;

	[Token(Token = "0x170002F4")]
	public PlayerID _otherPlayerID
	{
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC3F800", Offset = "0xC3F800", VA = "0xC3F800")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170002F5")]
	public static bool isMultiplayer
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC3F180", Offset = "0xC3F180", VA = "0xC3F180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002F6")]
	public static bool isHost
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC460A8", Offset = "0xC460A8", VA = "0xC460A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002F7")]
	public static bool isClient
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC461E8", Offset = "0xC461E8", VA = "0xC461E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xC45E6C", Offset = "0xC45E6C", VA = "0xC45E6C")]
	private static string ColorTag(string str, string hex)
	{
		return null;
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xC46060", Offset = "0xC46060", VA = "0xC46060")]
	private static string ColorTagStr(string str)
	{
		return null;
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xC46254", Offset = "0xC46254", VA = "0xC46254")]
	public void StartSwitchConnectionProcess()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xC46260", Offset = "0xC46260", VA = "0xC46260")]
	public void SwitchConnectionProcessClientResponse()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xC4626C", Offset = "0xC4626C", VA = "0xC4626C")]
	private void SendSwitchPacket()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xC4695C", Offset = "0xC4695C", VA = "0xC4695C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xC46B4C", Offset = "0xC46B4C", VA = "0xC46B4C")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xC46D3C", Offset = "0xC46D3C", VA = "0xC46D3C")]
	private void InitializeSyncObject(SyncObject so)
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xC473D4", Offset = "0xC473D4", VA = "0xC473D4")]
	public void RestartMatch()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xC4792C", Offset = "0xC4792C", VA = "0xC4792C")]
	public void onLocalPlayerDisconnected()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xC47958", Offset = "0xC47958", VA = "0xC47958")]
	private void onConnectionClosed()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xC43C78", Offset = "0xC43C78", VA = "0xC43C78")]
	public void onRemotePlayerQuitMatch()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xC477B4", Offset = "0xC477B4", VA = "0xC477B4")]
	public void StartSession(PlayerID playerID, bool isRestart = false)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xC47BF4", Offset = "0xC47BF4", VA = "0xC47BF4")]
	public void UnRegisterSyncObj(SyncObject obj)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xC47C74", Offset = "0xC47C74", VA = "0xC47C74")]
	public void RegisterSyncObj(SyncObject obj)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xC47D64", Offset = "0xC47D64", VA = "0xC47D64")]
	public void BallChangedOwnership()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xC3F814", Offset = "0xC3F814", VA = "0xC3F814")]
	public void ChangedOwnership(SyncObject so)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xC46E3C", Offset = "0xC46E3C", VA = "0xC46E3C")]
	private void RegisterSender(SyncObject obj)
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xC47108", Offset = "0xC47108", VA = "0xC47108")]
	private void RegisterListener(SyncObject obj)
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xC47E3C", Offset = "0xC47E3C", VA = "0xC47E3C")]
	public SyncObject FindSyncObject(SyncObject.SyncObjectID syncID, bool bSender)
	{
		return null;
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xC47F30", Offset = "0xC47F30", VA = "0xC47F30")]
	[CanBeNull]
	public static SyncObject FindListenerSyncObject(SyncObject.SyncObjectID syncID)
	{
		return null;
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xC48030", Offset = "0xC48030", VA = "0xC48030")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xC493C4", Offset = "0xC493C4", VA = "0xC493C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xC4951C", Offset = "0xC4951C", VA = "0xC4951C")]
	private void SendUpdatePacket()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xC4992C", Offset = "0xC4992C", VA = "0xC4992C")]
	public SyncManager()
	{
	}
}
[Token(Token = "0x200031B")]
public abstract class SyncObject : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	public enum SyncObjectID : byte
	{
		[Token(Token = "0x4001344")]
		Invalid,
		[Token(Token = "0x4001345")]
		Timestamp,
		[Token(Token = "0x4001346")]
		HexHits,
		[Token(Token = "0x4001347")]
		Ball,
		[Token(Token = "0x4001348")]
		BallTurnOver,
		[Token(Token = "0x4001349")]
		RacketHand,
		[Token(Token = "0x400134A")]
		FreeHand,
		[Token(Token = "0x400134B")]
		Head,
		[Token(Token = "0x400134C")]
		Score,
		[Token(Token = "0x400134D")]
		Wave,
		[Token(Token = "0x400134E")]
		GameEnd,
		[Token(Token = "0x400134F")]
		GameEvents,
		[Token(Token = "0x4001350")]
		Voice,
		[Token(Token = "0x4001351")]
		SwitchConnection
	}

	[Token(Token = "0x200031D")]
	[Flags]
	public enum SyncObjectIDFlag
	{
		[Token(Token = "0x4001353")]
		None = 0,
		[Token(Token = "0x4001354")]
		Invalid = 1,
		[Token(Token = "0x4001355")]
		Timestamp = 2,
		[Token(Token = "0x4001356")]
		HexHits = 4,
		[Token(Token = "0x4001357")]
		Ball = 8,
		[Token(Token = "0x4001358")]
		BallTurnOver = 0x10,
		[Token(Token = "0x4001359")]
		RacketHand = 0x20,
		[Token(Token = "0x400135A")]
		FreeHand = 0x40,
		[Token(Token = "0x400135B")]
		Head = 0x80,
		[Token(Token = "0x400135C")]
		Score = 0x100,
		[Token(Token = "0x400135D")]
		Wave = 0x200,
		[Token(Token = "0x400135E")]
		GameEnd = 0x400,
		[Token(Token = "0x400135F")]
		GameEvents = 0x800,
		[Token(Token = "0x4001360")]
		Voice = 0x1000,
		[Token(Token = "0x4001361")]
		SwitchConnection = 0x2000
	}

	[Serializable]
	[Token(Token = "0x200031E")]
	public class SerializableSyncObjectID : SerializableEnum<SyncObjectID>
	{
		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC49E1C", Offset = "0xC49E1C", VA = "0xC49E1C")]
		public SerializableSyncObjectID()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[CompilerGenerated]
	private sealed class <onEnableCo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncObject <>4__this;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0xC49FA8", Offset = "0xC49FA8", VA = "0xC49FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0xC49FF0", Offset = "0xC49FF0", VA = "0xC49FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xC49D58", Offset = "0xC49D58", VA = "0xC49D58")]
		[DebuggerHidden]
		public <onEnableCo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xC49EB0", Offset = "0xC49EB0", VA = "0xC49EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xC49EB4", Offset = "0xC49EB4", VA = "0xC49EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xC49FB0", Offset = "0xC49FB0", VA = "0xC49FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableSyncObjectID _objectID;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOwner;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullDuplex;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _indexOfLengthByte;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _indexAtStartOfObjectParsing;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _lastHeaderLength;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected byte _expectedLength;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _duringObj;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] _lastSendBuffer;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _haveInitData;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private PlayerID _orgPlayerID;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool _orgIsOwner;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool _orgFullDuplex;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _onEnableCo;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int HeaderSize;

	[Token(Token = "0x170002F8")]
	public virtual PlayerID playerID
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0xC49BDC", Offset = "0xC49BDC", VA = "0xC49BDC", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(PlayerID);
		}
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xC49BE4", Offset = "0xC49BE4", VA = "0xC49BE4", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xC49BB4", Offset = "0xC49BB4", VA = "0xC49BB4")]
	public static SyncObjectIDFlag SyncObjectID2Flag(SyncObjectID objId)
	{
		return default(SyncObjectIDFlag);
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xC3ECD8", Offset = "0xC3ECD8", VA = "0xC3ECD8", Slot = "6")]
	public virtual void Cleanup()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xC49BEC", Offset = "0xC49BEC", VA = "0xC49BEC", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xC49CE4", Offset = "0xC49CE4", VA = "0xC49CE4")]
	[IteratorStateMachine(typeof(<onEnableCo>d__24))]
	private IEnumerator onEnableCo()
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xC49D80", Offset = "0xC49D80", VA = "0xC49D80", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xC49E10", Offset = "0xC49E10", VA = "0xC49E10")]
	public void SetOwner(bool bOwner)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xC46450", Offset = "0xC46450", VA = "0xC46450")]
	public void Close(int index)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xC4634C", Offset = "0xC4634C", VA = "0xC4634C")]
	public void WriteHeader(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xC48E4C", Offset = "0xC48E4C", VA = "0xC48E4C")]
	public static SyncObjectID PeekHeader(byte[] buffer, int index, out byte length)
	{
		return default(SyncObjectID);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xC48FCC", Offset = "0xC48FCC", VA = "0xC48FCC")]
	public static bool PacketContainsID(byte[] buffer, int size, SyncObjectID ID)
	{
		return default(bool);
	}

	[Token(Token = "0x600110E")]
	public abstract bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet);

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xC48EA4", Offset = "0xC48EA4", VA = "0xC48EA4")]
	public bool StartParsingObject(byte[] buffer, ref int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001110")]
	public abstract void onSessionStart();

	[Token(Token = "0x6001111")]
	public abstract bool NeedToSendPacket();

	[Token(Token = "0x6001112")]
	public abstract bool NeedToSendReliablePacket();

	[Token(Token = "0x6001113")]
	public abstract void AddDataToSendBuffer(byte[] buffer, ref int index);

	[Token(Token = "0x6001114")]
	public abstract void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime);

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xC3FA98", Offset = "0xC3FA98", VA = "0xC3FA98")]
	protected SyncObject()
	{
	}
}
[Token(Token = "0x2000320")]
public class SyncSwitchConnection : SyncObject
{
	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncSwitchConnection inst;

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xC49FF8", Offset = "0xC49FF8", VA = "0xC49FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xC4A050", Offset = "0xC4A050", VA = "0xC4A050", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xC4A058", Offset = "0xC4A058", VA = "0xC4A058", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xC4A05C", Offset = "0xC4A05C", VA = "0xC4A05C", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xC4A064", Offset = "0xC4A064", VA = "0xC4A064", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xC4A06C", Offset = "0xC4A06C", VA = "0xC4A06C", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xC4A070", Offset = "0xC4A070", VA = "0xC4A070", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xC4A074", Offset = "0xC4A074", VA = "0xC4A074")]
	public SyncSwitchConnection()
	{
	}
}
[Token(Token = "0x2000321")]
public class SyncTime : SyncObject
{
	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _maxOffsetFromLastKnownTime;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lastKnownRemoteTime;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float currentRemoteTime;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float localSessionTime;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float networkJitter;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float lastKnownRemoteTimeScale;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncTime inst;

	[Token(Token = "0x170002FB")]
	public static bool remoteIsPaused
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC4A0C8", Offset = "0xC4A0C8", VA = "0xC4A0C8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001127")]
		[Address(RVA = "0xC4A110", Offset = "0xC4A110", VA = "0xC4A110")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xC4A15C", Offset = "0xC4A15C", VA = "0xC4A15C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xC4A1E8", Offset = "0xC4A1E8", VA = "0xC4A1E8")]
	public static float getLastRemoteTimeScale()
	{
		return default(float);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xC4A23C", Offset = "0xC4A23C", VA = "0xC4A23C", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xC47BA0", Offset = "0xC47BA0", VA = "0xC47BA0")]
	public void onSessionRestart()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xC4A29C", Offset = "0xC4A29C", VA = "0xC4A29C", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xC4A31C", Offset = "0xC4A31C", VA = "0xC4A31C")]
	private void Update()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xC4A36C", Offset = "0xC4A36C", VA = "0xC4A36C", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xC4A378", Offset = "0xC4A378", VA = "0xC4A378", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xC4A3B0", Offset = "0xC4A3B0", VA = "0xC4A3B0", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xC4A3B8", Offset = "0xC4A3B8", VA = "0xC4A3B8", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xC4A4B4", Offset = "0xC4A4B4", VA = "0xC4A4B4", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xC4A6D8", Offset = "0xC4A6D8", VA = "0xC4A6D8")]
	public SyncTime()
	{
	}
}
[Token(Token = "0x2000322")]
public class SyncTransform : SyncObject
{
	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _velocity;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float predictionLookAheadMaxTime;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float interpolationSoftness;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float interpolationDT;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeSinceLastSend;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeOfLastData;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion _lastRotation;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float auxiliary;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool sendAuxiliary;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 predictedPos;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion predictedRotation;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 interpolationPosVel;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion interpolationRotVel;

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xC4A734", Offset = "0xC4A734", VA = "0xC4A734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xC4A758", Offset = "0xC4A758", VA = "0xC4A758", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xC4A760", Offset = "0xC4A760", VA = "0xC4A760", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xC4A7A0", Offset = "0xC4A7A0", VA = "0xC4A7A0", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xC4A7AC", Offset = "0xC4A7AC", VA = "0xC4A7AC", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xC4A7C8", Offset = "0xC4A7C8", VA = "0xC4A7C8", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xC4A7D0", Offset = "0xC4A7D0", VA = "0xC4A7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xC4AE84", Offset = "0xC4AE84", VA = "0xC4AE84", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xC4AF3C", Offset = "0xC4AF3C", VA = "0xC4AF3C", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xC4A9D0", Offset = "0xC4A9D0", VA = "0xC4A9D0")]
	private void CalcPrediction()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xC4AFD4", Offset = "0xC4AFD4", VA = "0xC4AFD4")]
	public SyncTransform()
	{
	}
}
[Token(Token = "0x2000323")]
public class SyncVoice : SyncObject
{
	[Token(Token = "0x2000324")]
	private struct VoiceProcess
	{
		[Token(Token = "0x2000325")]
		public enum ThreadState
		{
			[Token(Token = "0x40013A7")]
			Stopped,
			[Token(Token = "0x40013A8")]
			Starting,
			[Token(Token = "0x40013A9")]
			Running
		}

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool started;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Thread thread;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ThreadState threadState;
	}

	[Token(Token = "0x2000326")]
	public struct DecompressChunk
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] buffer;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int size;
	}

	[StructLayout(2)]
	[Token(Token = "0x2000327")]
	private struct ShortBytes
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte b1;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte b2;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short value;
	}

	[Token(Token = "0x2000328")]
	[CompilerGenerated]
	private sealed class <SetupVoiceProcessesCo>d__59 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SyncVoice <>4__this;

		[Token(Token = "0x170002FE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xC4EB74", Offset = "0xC4EB74", VA = "0xC4EB74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xC4EBBC", Offset = "0xC4EBBC", VA = "0xC4EBBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC4D320", Offset = "0xC4D320", VA = "0xC4D320")]
		[DebuggerHidden]
		public <SetupVoiceProcessesCo>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xC4EA28", Offset = "0xC4EA28", VA = "0xC4EA28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xC4EA2C", Offset = "0xC4EA2C", VA = "0xC4EA2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC4EB7C", Offset = "0xC4EB7C", VA = "0xC4EB7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncVoice inst;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint desiredSampleRate;

	[Token(Token = "0x4001380")]
	public const int MAX_SEND_BYTES = 512;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool printWarnings;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int playbackBufferWriteIndex;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int playbackBufferReadIndex;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private byte[] playbackBuffer;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private short[] auxShortBuffer;

	[Token(Token = "0x4001386")]
	public const uint MAX_UNCOMPRESSED_BLOCK_SIZE = 48000u;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private byte[] _partialRecordedBlock;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint _partialRecordedBlockSize;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VoiceProcess _voiceRecorder;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VoiceProcess _voicePlayback;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _loudness;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _myLoudness;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _statsBytesReceived;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _statsBytesPlayedBack;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _statsBytesSent;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _statsTime;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip streamClipInsteadOfVoice;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] streamClipInsteadOfVoiceData;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int curStreamedClipSample;

	[Token(Token = "0x4001394")]
	private const int NUM_COMPRESSED_BUFFERS = 16;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Queue<DecompressChunk> _sendQueue;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Stack<byte[]> _sendBufferCache;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Queue<DecompressChunk> _decompressQueue;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Stack<byte[]> _decompressBufferCache;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource _audioSource;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NxSource _nxSource;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private NoiseCanceller _noiseCanceller;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ONSPAudioSource _ONSPAudioSource;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool useNoiseCanceller;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string _coroutineTag;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _skipEnableAndDisable;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _queuedUncompressedAudioSeconds;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _skipEveryNthIncomingSample;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private ShortBytes _bytesToShort;

	[Token(Token = "0x170002FC")]
	public float loudness
	{
		[Token(Token = "0x600113F")]
		[Address(RVA = "0xC4B080", Offset = "0xC4B080", VA = "0xC4B080")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002FD")]
	public float myLoudness
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xC4B088", Offset = "0xC4B088", VA = "0xC4B088")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001141")]
	private void DestroyNull<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xC4B090", Offset = "0xC4B090", VA = "0xC4B090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xC4B434", Offset = "0xC4B434", VA = "0xC4B434")]
	private void setOutputSampleRate()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xC4B578", Offset = "0xC4B578", VA = "0xC4B578")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xC4B6AC", Offset = "0xC4B6AC", VA = "0xC4B6AC")]
	private void ClearBuffers()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xC4B94C", Offset = "0xC4B94C", VA = "0xC4B94C", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xC4BCF8", Offset = "0xC4BCF8", VA = "0xC4BCF8")]
	private void StartPlayback()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xC4BF84", Offset = "0xC4BF84", VA = "0xC4BF84")]
	private void StartVoiceDecompresserThread()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xC4BBAC", Offset = "0xC4BBAC", VA = "0xC4BBAC")]
	private void StopPlayback()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xC4C0D8", Offset = "0xC4C0D8", VA = "0xC4C0D8")]
	private void StartRecording()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xC4C218", Offset = "0xC4C218", VA = "0xC4C218")]
	private void StartVoiceRecorderThread()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xC4BAA4", Offset = "0xC4BAA4", VA = "0xC4BAA4")]
	private void StopRecording()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xC4C36C", Offset = "0xC4C36C", VA = "0xC4C36C", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xC4C408", Offset = "0xC4C408", VA = "0xC4C408", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xC4C410", Offset = "0xC4C410", VA = "0xC4C410", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xC4C460", Offset = "0xC4C460", VA = "0xC4C460", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xC4C468", Offset = "0xC4C468", VA = "0xC4C468", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xC4C7C0", Offset = "0xC4C7C0", VA = "0xC4C7C0")]
	private void voiceDecompresserJob()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xC4CFA0", Offset = "0xC4CFA0", VA = "0xC4CFA0", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xC4BC84", Offset = "0xC4BC84", VA = "0xC4BC84")]
	[IteratorStateMachine(typeof(<SetupVoiceProcessesCo>d__59))]
	private IEnumerator<float> SetupVoiceProcessesCo()
	{
		return null;
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xC4D348", Offset = "0xC4D348", VA = "0xC4D348")]
	private void voiceRecorderJob()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xC4DF34", Offset = "0xC4DF34", VA = "0xC4DF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xC4E2F8", Offset = "0xC4E2F8", VA = "0xC4E2F8", Slot = "7")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xC4E3E4", Offset = "0xC4E3E4", VA = "0xC4E3E4", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xC4E404", Offset = "0xC4E404", VA = "0xC4E404")]
	private void OnAudioFilterRead(float[] floatBuf, int numChannels)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xC4E888", Offset = "0xC4E888", VA = "0xC4E888")]
	public SyncVoice()
	{
	}
}
[Token(Token = "0x2000329")]
public class SyncWave : SyncObject
{
	[Token(Token = "0x200032A")]
	public struct SnakeMove
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint targetUniqueID;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntVector2[] hexCoords;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HexTile.HexDirection lastMoveDir;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool reversed;
	}

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncWave inst;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _sendCreateWaveIndex;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _sendDestroyWaveIndex;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _sendCreateWaveShift;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _sendFlippedHorizontally;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _sendFlippedVertically;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _receivedCreateWaveIndex;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _receivedDestroyWaveIndex;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _receivedCreateWaveShift;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _receivedFlippedHorizontally;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool _receivedFlippedVertically;

	[Token(Token = "0x40013BD")]
	private const int _desroyWaveBits = 16;

	[Token(Token = "0x40013BE")]
	private const int _destroyWaveMask = 65535;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SnakeMove> _receivedSnakeMoves;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<SnakeMove> _sendSnakeMoves;

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xC4EC18", Offset = "0xC4EC18", VA = "0xC4EC18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xC4EC88", Offset = "0xC4EC88", VA = "0xC4EC88", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xC4ED4C", Offset = "0xC4ED4C", VA = "0xC4ED4C", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xC4ED8C", Offset = "0xC4ED8C", VA = "0xC4ED8C")]
	public static bool needToMoveSnake(uint targetUniqueID, out SnakeMove move)
	{
		return default(bool);
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xC4EF18", Offset = "0xC4EF18", VA = "0xC4EF18")]
	public static void reportSnakeMove(uint targetUniqueID, List<HexTile> hexTiles, HexTile.HexDirection lastMoveDir, bool reversed)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xC4F118", Offset = "0xC4F118", VA = "0xC4F118")]
	public static bool needToDestroyWave(ref int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xC4F1C8", Offset = "0xC4F1C8", VA = "0xC4F1C8")]
	public static bool needToCreateWave(ref int waveIndex, ref int waveShift, ref bool flippedHorizontally, ref bool flippedVertically)
	{
		return default(bool);
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xC4F2D4", Offset = "0xC4F2D4", VA = "0xC4F2D4")]
	public static void reportWaveDestroyed(int waveIndex)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xC4F48C", Offset = "0xC4F48C", VA = "0xC4F48C")]
	public static void reportWaveCreated(int waveIndex, int wavePosShift, bool flippedHorizontally, bool flippedVertically)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xC4F6D0", Offset = "0xC4F6D0", VA = "0xC4F6D0", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xC4F6D8", Offset = "0xC4F6D8", VA = "0xC4F6D8", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xC4F6E4", Offset = "0xC4F6E4", VA = "0xC4F6E4", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xC4F754", Offset = "0xC4F754", VA = "0xC4F754", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xC4F9CC", Offset = "0xC4F9CC", VA = "0xC4F9CC", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xC4F9B4", Offset = "0xC4F9B4", VA = "0xC4F9B4")]
	private byte packCoords(IntVector2 hexCoords)
	{
		return default(byte);
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xC4FF40", Offset = "0xC4FF40", VA = "0xC4FF40")]
	private IntVector2 unpackCoords(byte packedCoords)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xC4F9C0", Offset = "0xC4F9C0", VA = "0xC4F9C0")]
	private byte packDirectionAndReversed(HexTile.HexDirection direction, bool reversed)
	{
		return default(byte);
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xC4FF50", Offset = "0xC4FF50", VA = "0xC4FF50")]
	private void unpackDirectionAndReversed(byte packed, out HexTile.HexDirection direction, out bool reversed)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xC4FF64", Offset = "0xC4FF64", VA = "0xC4FF64")]
	public SyncWave()
	{
	}
}
[Token(Token = "0x200032B")]
public class CurrentConnection : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200032C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool doneGettingUserDetails;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RNXDepot.FriendDepot<PlayerProfileData> opponentProfile;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC51D90", Offset = "0xC51D90", VA = "0xC51D90")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC51EB4", Offset = "0xC51EB4", VA = "0xC51EB4")]
		internal bool <LoadOpponentInfoCo>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC51EBC", Offset = "0xC51EBC", VA = "0xC51EBC")]
		internal bool <LoadOpponentInfoCo>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200032D")]
	[CompilerGenerated]
	private sealed class <LoadOpponentInfoCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrentConnection <>4__this;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass4_0 <>8__1;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TaskCompletionSource<PlayerProfileData> promise;

		[Token(Token = "0x1700030E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xC52468", Offset = "0xC52468", VA = "0xC52468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xC524B0", Offset = "0xC524B0", VA = "0xC524B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC502E4", Offset = "0xC502E4", VA = "0xC502E4")]
		[DebuggerHidden]
		public <LoadOpponentInfoCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC51F0C", Offset = "0xC51F0C", VA = "0xC51F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC51F10", Offset = "0xC51F10", VA = "0xC51F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC52470", Offset = "0xC52470", VA = "0xC52470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[CompilerGenerated]
	private sealed class <DisposeFirstConnectionCo>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000310")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xC525D8", Offset = "0xC525D8", VA = "0xC525D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xC52620", Offset = "0xC52620", VA = "0xC52620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC510AC", Offset = "0xC510AC", VA = "0xC510AC")]
		[DebuggerHidden]
		public <DisposeFirstConnectionCo>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xC5250C", Offset = "0xC5250C", VA = "0xC5250C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC52510", Offset = "0xC52510", VA = "0xC52510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xC525E0", Offset = "0xC525E0", VA = "0xC525E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[CompilerGenerated]
	private sealed class <FlushAllSyncManagerMessagesAndCleanup>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000312")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xC52918", Offset = "0xC52918", VA = "0xC52918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xC52960", Offset = "0xC52960", VA = "0xC52960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC517E4", Offset = "0xC517E4", VA = "0xC517E4")]
		[DebuggerHidden]
		public <FlushAllSyncManagerMessagesAndCleanup>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC52750", Offset = "0xC52750", VA = "0xC52750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xC52754", Offset = "0xC52754", VA = "0xC52754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xC52920", Offset = "0xC52920", VA = "0xC52920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CurrentConnection inst;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CoroutineHandle _loadOpponentInfoCo;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerProfileData _otherPlayerProfile;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private P2PNode _readConnection;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private P2PNode _writeConnection;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly ConcurrentQueue<byte[]> _switchQueue;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private P2PNode _switchConnection;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _switchPacketCount;

	[Token(Token = "0x40013CF")]
	private const float DISPOSE_FIRST_CONNECTION_COOLDOWN = 5f;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly ConcurrentQueue<byte[]> _packetQueue;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerID roundStartingPlayer;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _announcerSeed;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _remotePlayerLeftOrDisconnected;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _remotePlayerLeftExplicitly;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _localDisconnected;

	[Token(Token = "0x17000300")]
	private static string MyName
	{
		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC5030C", Offset = "0xC5030C", VA = "0xC5030C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000301")]
	private static string OtherPlayerName
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0xC50368", Offset = "0xC50368", VA = "0xC50368")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000302")]
	public static string Player1Name
	{
		[Token(Token = "0x6001179")]
		[Address(RVA = "0xC503B4", Offset = "0xC503B4", VA = "0xC503B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000303")]
	public static string Player2Name
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0xC50460", Offset = "0xC50460", VA = "0xC50460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000304")]
	public string OtherPlayerId
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xC5050C", Offset = "0xC5050C", VA = "0xC5050C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600117C")]
		[Address(RVA = "0xC50514", Offset = "0xC50514", VA = "0xC50514")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000305")]
	public static RnxPlatform.User OtherPlayerRnxUser
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC5051C", Offset = "0xC5051C", VA = "0xC5051C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC50564", Offset = "0xC50564", VA = "0xC50564")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000306")]
	public PlayerProfileData OtherPlayerProfile
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC505B4", Offset = "0xC505B4", VA = "0xC505B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000307")]
	public static bool IsPeerToPeer
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC43FE8", Offset = "0xC43FE8", VA = "0xC43FE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000308")]
	public static bool IsNativePlatformPeerToPeer
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC506BC", Offset = "0xC506BC", VA = "0xC506BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000309")]
	public static bool HasConnection
	{
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC50784", Offset = "0xC50784", VA = "0xC50784")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030A")]
	public static PlayerID MyPlayerId
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC507F0", Offset = "0xC507F0", VA = "0xC507F0")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x1700030B")]
	public static bool AmITheHost
	{
		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC4615C", Offset = "0xC4615C", VA = "0xC4615C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030C")]
	private static bool IsReceiver
	{
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xC50E24", Offset = "0xC50E24", VA = "0xC50E24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030D")]
	private static bool IsInitiator
	{
		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC50E28", Offset = "0xC50E28", VA = "0xC50E28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xC5005C", Offset = "0xC5005C", VA = "0xC5005C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xC500B4", Offset = "0xC500B4", VA = "0xC500B4")]
	public TaskCompletionSource<PlayerProfileData> SetupUser(string id)
	{
		return null;
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xC50254", Offset = "0xC50254", VA = "0xC50254")]
	[IteratorStateMachine(typeof(<LoadOpponentInfoCo>d__4))]
	private IEnumerator<float> LoadOpponentInfoCo(TaskCompletionSource<PlayerProfileData> promise)
	{
		return null;
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xC50824", Offset = "0xC50824", VA = "0xC50824")]
	public void SetConnection(P2PNode connection)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xC50BB0", Offset = "0xC50BB0", VA = "0xC50BB0")]
	private void SwitchReadConnection(P2PNode readConnection)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xC50D9C", Offset = "0xC50D9C", VA = "0xC50D9C")]
	private void SwitchWriteConnection(P2PNode writeConnection)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xC50E40", Offset = "0xC50E40", VA = "0xC50E40")]
	public void BetterConnectionFound(NodeStatus status)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xC50F88", Offset = "0xC50F88", VA = "0xC50F88")]
	private void SwitchConnectionOnReceivedData(byte[] packet)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xC49908", Offset = "0xC49908", VA = "0xC49908")]
	public void OnSentSwitchPacket()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xC490B0", Offset = "0xC490B0", VA = "0xC490B0")]
	public void OnSwitchedConnection()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xC50FEC", Offset = "0xC50FEC", VA = "0xC50FEC")]
	private static void DisposeFirstConnection()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xC5104C", Offset = "0xC5104C", VA = "0xC5104C")]
	[IteratorStateMachine(typeof(<DisposeFirstConnectionCo>d__52))]
	private static IEnumerator<float> DisposeFirstConnectionCo()
	{
		return null;
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xC50994", Offset = "0xC50994", VA = "0xC50994")]
	private void DisposeConnection()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xC510E8", Offset = "0xC510E8", VA = "0xC510E8")]
	private void DisposeP2PNode(ref P2PNode connection)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xC4947C", Offset = "0xC4947C", VA = "0xC4947C")]
	public bool CanSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xC46780", Offset = "0xC46780", VA = "0xC46780")]
	public void SendPacket(byte[] buffer, int size, bool reliable)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xC49900", Offset = "0xC49900", VA = "0xC49900")]
	public void SendVoicePacket(byte[] buffer, int size)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xC51288", Offset = "0xC51288", VA = "0xC51288")]
	private void OnReceivedData(byte[] packet)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xC48D40", Offset = "0xC48D40", VA = "0xC48D40")]
	public bool ReceivePacket(byte[] buffer, out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xC512E0", Offset = "0xC512E0", VA = "0xC512E0")]
	public void SendStartingPlayerToOtherPlayer(PlayerID startingPlayerId)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xC51308", Offset = "0xC51308", VA = "0xC51308")]
	public void SetStartingPlayer(PlayerID startingPlayer)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xC4764C", Offset = "0xC4764C", VA = "0xC4764C")]
	public void SwitchStartingPlayer()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xC51310", Offset = "0xC51310", VA = "0xC51310")]
	public PlayerID GetStartingPlayer()
	{
		return default(PlayerID);
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xC510E0", Offset = "0xC510E0", VA = "0xC510E0")]
	public void ResetAnnouncerSeed()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xC513E0", Offset = "0xC513E0", VA = "0xC513E0")]
	public void SetAnnouncerSeed(int seed)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xC513E8", Offset = "0xC513E8", VA = "0xC513E8")]
	public int GetAnnouncerSeed()
	{
		return default(int);
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xC50990", Offset = "0xC50990", VA = "0xC50990")]
	private void DebugAssertDisconnectionState()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xC510D4", Offset = "0xC510D4", VA = "0xC510D4")]
	private void ResetDisconnectionSate()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xC5147C", Offset = "0xC5147C", VA = "0xC5147C")]
	public void OnLocalPlayerDisconnected()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xC5169C", Offset = "0xC5169C", VA = "0xC5169C")]
	public void OnLocalPlayerDisconnectedDelayClose()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xC51784", Offset = "0xC51784", VA = "0xC51784")]
	[IteratorStateMachine(typeof(<FlushAllSyncManagerMessagesAndCleanup>d__77))]
	private IEnumerator<float> FlushAllSyncManagerMessagesAndCleanup()
	{
		return null;
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xC47984", Offset = "0xC47984", VA = "0xC47984")]
	public void OnRemotePlayerDisconnected(bool explicitly)
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xC5180C", Offset = "0xC5180C", VA = "0xC5180C")]
	public bool DidDisconnectOccur()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xC5182C", Offset = "0xC5182C", VA = "0xC5182C")]
	public bool DidRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xC51834", Offset = "0xC51834", VA = "0xC51834")]
	public bool DidRemoteLeaveExplicitly()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xC51590", Offset = "0xC51590", VA = "0xC51590")]
	private static void CleanupMultiplayer()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xC51CB4", Offset = "0xC51CB4", VA = "0xC51CB4")]
	public CurrentConnection()
	{
	}
}
[Token(Token = "0x2000331")]
[RequireComponent(typeof(LobbyistClient))]
public class MultiplayerOverseer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000332")]
	private class LobbyistClientCallbacks : IDisposable
	{
		[Token(Token = "0x2000333")]
		[CompilerGenerated]
		private sealed class <ConnectCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClientCallbacks <>4__this;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskCompletionSource<bool> promise;

			[Token(Token = "0x1700031C")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001200")]
				[Address(RVA = "0xC56A20", Offset = "0xC56A20", VA = "0xC56A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700031D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001202")]
				[Address(RVA = "0xC56A68", Offset = "0xC56A68", VA = "0xC56A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xC55D40", Offset = "0xC55D40", VA = "0xC55D40")]
			[DebuggerHidden]
			public <ConnectCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xC56864", Offset = "0xC56864", VA = "0xC56864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xC56868", Offset = "0xC56868", VA = "0xC56868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001201")]
			[Address(RVA = "0xC56A28", Offset = "0xC56A28", VA = "0xC56A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000334")]
		[CompilerGenerated]
		private struct <OnMatchConnectingTask>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient client;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Task<PlayerProfileData> <otherUserProfileTask>5__2;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayerProfileData> <>u__2;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<bool?> <>u__4;

			[Token(Token = "0x6001203")]
			[Address(RVA = "0xC56AC4", Offset = "0xC56AC4", VA = "0xC56AC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0xC57434", Offset = "0xC57434", VA = "0xC57434", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000336")]
		[CompilerGenerated]
		private sealed class <OnMatchConnectedCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClientCallbacks <>4__this;

			[Token(Token = "0x1700031E")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600120B")]
				[Address(RVA = "0xC579F0", Offset = "0xC579F0", VA = "0xC579F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700031F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600120D")]
				[Address(RVA = "0xC57A38", Offset = "0xC57A38", VA = "0xC57A38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0xC564A8", Offset = "0xC564A8", VA = "0xC564A8")]
			[DebuggerHidden]
			public <OnMatchConnectedCo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001209")]
			[Address(RVA = "0xC57548", Offset = "0xC57548", VA = "0xC57548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600120A")]
			[Address(RVA = "0xC5754C", Offset = "0xC5754C", VA = "0xC5754C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600120C")]
			[Address(RVA = "0xC579F8", Offset = "0xC579F8", VA = "0xC579F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000337")]
		[CompilerGenerated]
		private sealed class <InitIceDelayCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x17000320")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001211")]
				[Address(RVA = "0xC57B58", Offset = "0xC57B58", VA = "0xC57B58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001213")]
				[Address(RVA = "0xC57BA0", Offset = "0xC57BA0", VA = "0xC57BA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0xC5681C", Offset = "0xC5681C", VA = "0xC5681C")]
			[DebuggerHidden]
			public <InitIceDelayCo>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0xC57A94", Offset = "0xC57A94", VA = "0xC57A94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001210")]
			[Address(RVA = "0xC57A98", Offset = "0xC57A98", VA = "0xC57A98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001212")]
			[Address(RVA = "0xC57B60", Offset = "0xC57B60", VA = "0xC57B60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LobbyistClient _client;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _playerID;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string _host;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _port;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string _multiplayer_version;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _calledConnect;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _failReason;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _connectFailed;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _connected;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Task _onMatchConnectingTask;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CoroutineHandle _onMatchConnectedCo;

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xC553E8", Offset = "0xC553E8", VA = "0xC553E8")]
		public LobbyistClientCallbacks(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC5578C", Offset = "0xC5578C", VA = "0xC5578C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC55B0C", Offset = "0xC55B0C", VA = "0xC55B0C")]
		public TaskCompletionSource<bool> Connect()
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC55CB0", Offset = "0xC55CB0", VA = "0xC55CB0")]
		[IteratorStateMachine(typeof(<ConnectCo>d__9))]
		private IEnumerator<float> ConnectCo(TaskCompletionSource<bool> promise)
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC55D68", Offset = "0xC55D68", VA = "0xC55D68")]
		private void OnClientConnected(LobbyistClient _)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC55D74", Offset = "0xC55D74", VA = "0xC55D74")]
		private void OnConnectionToServerFailed(LobbyistClient _, string reason)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC55D88", Offset = "0xC55D88", VA = "0xC55D88")]
		private void OnDisconnectedFromServer(LobbyistClient _, string reason)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC55F14", Offset = "0xC55F14", VA = "0xC55F14")]
		private void OnQueueFailed(LobbyistClient _)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC560A4", Offset = "0xC560A4", VA = "0xC560A4")]
		private void OnQueue(LobbyistClient _)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC560F8", Offset = "0xC560F8", VA = "0xC560F8")]
		private void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC56134", Offset = "0xC56134", VA = "0xC56134")]
		[AsyncStateMachine(typeof(<OnMatchConnectingTask>d__20))]
		private static Task OnMatchConnectingTask(LobbyistClient client)
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC56224", Offset = "0xC56224", VA = "0xC56224")]
		private static void DeclineMatch(LobbyistClient client)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC56244", Offset = "0xC56244", VA = "0xC56244")]
		private static void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC562B8", Offset = "0xC562B8", VA = "0xC562B8")]
		private void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC56434", Offset = "0xC56434", VA = "0xC56434")]
		[IteratorStateMachine(typeof(<OnMatchConnectedCo>d__25))]
		private IEnumerator<float> OnMatchConnectedCo()
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC564D0", Offset = "0xC564D0", VA = "0xC564D0")]
		private static void AnnounceMatchFound()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC565C0", Offset = "0xC565C0", VA = "0xC565C0")]
		private void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC567BC", Offset = "0xC567BC", VA = "0xC567BC")]
		[IteratorStateMachine(typeof(<InitIceDelayCo>d__28))]
		private IEnumerator<float> InitIceDelayCo()
		{
			return null;
		}
	}

	[Token(Token = "0x2000338")]
	public static class OverseerState
	{
		[Token(Token = "0x2000339")]
		public enum ServerConnectionState
		{
			[Token(Token = "0x400140C")]
			None,
			[Token(Token = "0x400140D")]
			Disconnected,
			[Token(Token = "0x400140E")]
			Connecting,
			[Token(Token = "0x400140F")]
			Connected
		}

		[Token(Token = "0x17000322")]
		public static ServerConnectionState LobbyistConnectionState
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xC57BFC", Offset = "0xC57BFC", VA = "0xC57BFC")]
			get
			{
				return default(ServerConnectionState);
			}
		}

		[Token(Token = "0x17000323")]
		public static LobbyistClient.State State
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xC57C6C", Offset = "0xC57C6C", VA = "0xC57C6C")]
			get
			{
				return default(LobbyistClient.State);
			}
		}

		[Token(Token = "0x17000324")]
		public static bool IsIdle
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xC57CC8", Offset = "0xC57CC8", VA = "0xC57CC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000325")]
		public static bool IsQueued
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xC57CE0", Offset = "0xC57CE0", VA = "0xC57CE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000326")]
		public static bool IsConnecting
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xC57CF8", Offset = "0xC57CF8", VA = "0xC57CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000327")]
		public static bool IsConnected
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xC57D10", Offset = "0xC57D10", VA = "0xC57D10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000328")]
		public static bool IsConnectedToServer
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xC57D28", Offset = "0xC57D28", VA = "0xC57D28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public static LobbyistClient.Connecting Connecting
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xC56038", Offset = "0xC56038", VA = "0xC56038")]
			get
			{
				return default(LobbyistClient.Connecting);
			}
		}

		[Token(Token = "0x1700032A")]
		public static QueueType PlayerIntent
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xC57F1C", Offset = "0xC57F1C", VA = "0xC57F1C")]
			get
			{
				return default(QueueType);
			}
		}

		[Token(Token = "0x1700032B")]
		public static LobbyistClient.PlayerIntentParams PlayerIntentParams
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xC57F78", Offset = "0xC57F78", VA = "0xC57F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public static event Action<bool> OnServerConnectionStateChanged
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xC57D84", Offset = "0xC57D84", VA = "0xC57D84")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xC57E50", Offset = "0xC57E50", VA = "0xC57E50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC55EA8", Offset = "0xC55EA8", VA = "0xC55EA8")]
		public static void ServerConnectionStateChanged(bool isConnected)
		{
		}
	}

	[Token(Token = "0x200033A")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task<bool> t;

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC57FD4", Offset = "0xC57FD4", VA = "0xC57FD4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xC57FDC", Offset = "0xC57FDC", VA = "0xC57FDC")]
		internal bool <SignInCo>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200033C")]
	[CompilerGenerated]
	private sealed class <SignInCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string playerID;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass15_0 <>8__1;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <attemptsCount>5__2;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LobbyistClientConfig <conf>5__3;

		[Token(Token = "0x1700032C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xC5868C", Offset = "0xC5868C", VA = "0xC5868C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xC586D4", Offset = "0xC586D4", VA = "0xC586D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xC580DC", Offset = "0xC580DC", VA = "0xC580DC")]
		[DebuggerHidden]
		public <SignInCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xC58104", Offset = "0xC58104", VA = "0xC58104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xC58108", Offset = "0xC58108", VA = "0xC58108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC58694", Offset = "0xC58694", VA = "0xC58694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerOverseer inst;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LobbyistClient _lobbyistClient;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Expandable]
	public LobbyistClientConfig developmentLobbyistConfig;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Expandable]
	public LobbyistClientConfig productionLobbyistConfig;

	[Token(Token = "0x40013E7")]
	private const float RETRY_SIGNIN_EVERY = 15f;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LobbyistClientCallbacks _connector;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CoroutineHandle _signInCo;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ICEProcess iceProcess;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static QueueType _intentOnSetupIce;

	[Token(Token = "0x17000314")]
	[CanBeNull]
	public static string MultiplayerVersionAndSeason
	{
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC529BC", Offset = "0xC529BC", VA = "0xC529BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000315")]
	public LobbyistClientConfig LobbyistConfig
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC52B90", Offset = "0xC52B90", VA = "0xC52B90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000316")]
	public bool isSearchingForRanked
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC53948", Offset = "0xC53948", VA = "0xC53948")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000317")]
	public bool isInvitingFriend
	{
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC5396C", Offset = "0xC5396C", VA = "0xC5396C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000318")]
	public bool isSearchingForPIN
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xC53990", Offset = "0xC53990", VA = "0xC53990")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000319")]
	public bool IsSetupToJoinPrivateFriendMatch
	{
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xC539B4", Offset = "0xC539B4", VA = "0xC539B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031A")]
	public bool canBrowseAwayFromLobbyUntilConnected
	{
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xC539DC", Offset = "0xC539DC", VA = "0xC539DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031B")]
	public bool canCancelRankedQueue
	{
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xC53A8C", Offset = "0xC53A8C", VA = "0xC53A8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xC52A80", Offset = "0xC52A80", VA = "0xC52A80", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xC52B10", Offset = "0xC52B10", VA = "0xC52B10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xC52BFC", Offset = "0xC52BFC", VA = "0xC52BFC")]
	public void SignIn(string playerID)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xC52C9C", Offset = "0xC52C9C", VA = "0xC52C9C")]
	[IteratorStateMachine(typeof(<SignInCo>d__15))]
	private static IEnumerator<float> SignInCo(string playerID)
	{
		return null;
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xC52D10", Offset = "0xC52D10", VA = "0xC52D10")]
	private void InitIce()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xC53268", Offset = "0xC53268", VA = "0xC53268")]
	private static void OnUdpUtpChosenAddress(LobbyistClient _, AgentType type, object data)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xC532DC", Offset = "0xC532DC", VA = "0xC532DC")]
	private static void OnEndIce(LobbyistClient _, AgentType type, [CanBeNull] object data)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xC53350", Offset = "0xC53350", VA = "0xC53350")]
	private static void OnEstablished(LobbyistClient _, AgentType type, object data)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xC533C4", Offset = "0xC533C4", VA = "0xC533C4")]
	private static void OnRxReflexiveAddress(LobbyistClient _, ReflexiveAddress[] addresses)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xC53428", Offset = "0xC53428", VA = "0xC53428")]
	private static void OnRxHostAddresses(LobbyistClient _, string[] addresses)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xC5348C", Offset = "0xC5348C", VA = "0xC5348C")]
	private static void OnRxSuccessfulTest(LobbyistClient client, AgentType type, object data)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xC53500", Offset = "0xC53500", VA = "0xC53500")]
	private static void OnRxRelayedAddresses(LobbyistClient _, string[] addresses)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xC53564", Offset = "0xC53564", VA = "0xC53564")]
	private static void OnRxTestsDone(LobbyistClient client, AgentType agentType)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xC535C8", Offset = "0xC535C8", VA = "0xC535C8")]
	private static void OnFirstIceConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xC53668", Offset = "0xC53668", VA = "0xC53668")]
	private static void OnICEConnectionFailed(ICEProcess _)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xC53844", Offset = "0xC53844", VA = "0xC53844")]
	private static void OnICEBetterConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xC51854", Offset = "0xC51854", VA = "0xC51854")]
	public static void CleanIce()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xC53AA8", Offset = "0xC53AA8", VA = "0xC53AA8")]
	public void InviteFriend(string friendId, CoMode coMode)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xC53AC4", Offset = "0xC53AC4", VA = "0xC53AC4")]
	public void QueueForGroupLaunch(ulong roomId, CoMode coMode)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xC53B14", Offset = "0xC53B14", VA = "0xC53B14")]
	public void QueueForPIN(string pin, CoMode coMode)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xC53B30", Offset = "0xC53B30", VA = "0xC53B30")]
	public void QueueForRanked(CoModes coModes)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xC53BC4", Offset = "0xC53BC4", VA = "0xC53BC4")]
	public void CancelQueueIfQueued()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xC53CD4", Offset = "0xC53CD4", VA = "0xC53CD4")]
	public void OnPlayerSentLog(string logToken)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xC53D78", Offset = "0xC53D78", VA = "0xC53D78")]
	public void UpdateBlockedUsers(List<string> blockedRnxIds)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xC53DE4", Offset = "0xC53DE4", VA = "0xC53DE4")]
	public static bool? IsFriendly()
	{
		return null;
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xC53EF4", Offset = "0xC53EF4", VA = "0xC53EF4")]
	private static void SetupMultiplayer()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xC54240", Offset = "0xC54240", VA = "0xC54240")]
	public static DateTime NetworkUtcNow()
	{
		return default(DateTime);
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xC542C4", Offset = "0xC542C4", VA = "0xC542C4")]
	public static long NetworkEpochTimeNow()
	{
		return default(long);
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xC5376C", Offset = "0xC5376C", VA = "0xC5376C")]
	private static void MultiplayerUITriggerBack()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xC51574", Offset = "0xC51574", VA = "0xC51574")]
	public void DisconnectMatch()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xC54344", Offset = "0xC54344", VA = "0xC54344")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xC543E0", Offset = "0xC543E0", VA = "0xC543E0")]
	public MultiplayerOverseer()
	{
	}
}
[Token(Token = "0x200033D")]
public class Elo : MonoBehaviour
{
	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float K;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float N;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialRating;

	[Token(Token = "0x400141D")]
	public const float WIN = 1f;

	[Token(Token = "0x400141E")]
	public const float DRAW = 0.5f;

	[Token(Token = "0x400141F")]
	public const float LOSS = 0f;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Elo inst;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xC58730", Offset = "0xC58730", VA = "0xC58730")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xC58788", Offset = "0xC58788", VA = "0xC58788")]
	public float CalcExpectedScore(float mySR, float opSR)
	{
		return default(float);
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xC587D4", Offset = "0xC587D4", VA = "0xC587D4")]
	public float CalcNewRating(float mySR, float opSR, float Smy)
	{
		return default(float);
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xC5884C", Offset = "0xC5884C", VA = "0xC5884C")]
	public Elo()
	{
	}
}
[Token(Token = "0x200033E")]
public class Glicko : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	public struct Rating
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float mean;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deviation;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xC588C4", Offset = "0xC588C4", VA = "0xC588C4")]
		public Rating(float mean, float deviation)
		{
		}
	}

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minRD;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRD;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialRating;

	[Token(Token = "0x4001424")]
	private const float Q = 0.005756463f;

	[Token(Token = "0x4001425")]
	public const int unratedSkillRating = -1;

	[Token(Token = "0x4001426")]
	public const float WIN = 1f;

	[Token(Token = "0x4001427")]
	public const float DRAW = 0.5f;

	[Token(Token = "0x4001428")]
	public const float LOSS = 0f;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Glicko inst;

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xC58868", Offset = "0xC58868", VA = "0xC58868")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xC588C0", Offset = "0xC588C0", VA = "0xC588C0")]
	private void SelfTest()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xC589C8", Offset = "0xC589C8", VA = "0xC589C8")]
	private float CalcImpact(float ratingDeviation)
	{
		return default(float);
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xC589FC", Offset = "0xC589FC", VA = "0xC589FC")]
	private float _CalcExpectedScore(ref Rating rating, ref Rating otherRating, float impact)
	{
		return default(float);
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xC588CC", Offset = "0xC588CC", VA = "0xC588CC")]
	public Rating CalcNewRating(ref Rating rating, float actualScore, ref Rating otherRating)
	{
		return default(Rating);
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xC58A38", Offset = "0xC58A38", VA = "0xC58A38")]
	public float CalcExpectedScore(ref Rating rating, ref Rating otherRating)
	{
		return default(float);
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xC58AB8", Offset = "0xC58AB8", VA = "0xC58AB8")]
	public Glicko()
	{
	}
}
[Token(Token = "0x2000340")]
public class VersusRating : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	[CompilerGenerated]
	private sealed class <InitCo>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x17000330")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xC5A938", Offset = "0xC5A938", VA = "0xC5A938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xC5A980", Offset = "0xC5A980", VA = "0xC5A980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xC5903C", Offset = "0xC5903C", VA = "0xC5903C")]
		[DebuggerHidden]
		public <InitCo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xC5A65C", Offset = "0xC5A65C", VA = "0xC5A65C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xC5A660", Offset = "0xC5A660", VA = "0xC5A660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xC5A940", Offset = "0xC5A940", VA = "0xC5A940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000343")]
	[CompilerGenerated]
	private sealed class <DoRankedMatchStart>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x17000332")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xC5ABE0", Offset = "0xC5ABE0", VA = "0xC5ABE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000333")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xC5AC28", Offset = "0xC5AC28", VA = "0xC5AC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xC59270", Offset = "0xC59270", VA = "0xC59270")]
		[DebuggerHidden]
		public <DoRankedMatchStart>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xC5A9DC", Offset = "0xC5A9DC", VA = "0xC5A9DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xC5A9E0", Offset = "0xC5A9E0", VA = "0xC5A9E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xC5ABE8", Offset = "0xC5ABE8", VA = "0xC5ABE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000344")]
	[CompilerGenerated]
	private sealed class <DoRatingForMatch>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <myScore>5__2;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <opScore>5__3;

		[Token(Token = "0x17000334")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xC5B1E8", Offset = "0xC5B1E8", VA = "0xC5B1E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000335")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xC5B230", Offset = "0xC5B230", VA = "0xC5B230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xC59984", Offset = "0xC59984", VA = "0xC59984")]
		[DebuggerHidden]
		public <DoRatingForMatch>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xC5AC84", Offset = "0xC5AC84", VA = "0xC5AC84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xC5AC88", Offset = "0xC5AC88", VA = "0xC5AC88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC5B1F0", Offset = "0xC5B1F0", VA = "0xC5B1F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400142C")]
	public const int unratedSkillRating = -1;

	[Token(Token = "0x400142D")]
	public const int unratedSkillRatingDev = -1;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VersusRating inst;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle _getOldRatingsCo;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CoroutineHandle _calcNewRatingCo;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LeaderboardManager.LeaderboardContainer _rankedLeaderboard;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _haveRatings;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _duringMatch;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _myOldRating;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _myNewRatingIfWin;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _myNewRatingIfDefeat;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _myOldRatingDeviation;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _myNewRatingDeviation;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastRatingDiff;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _calcNewRatingIsRunning;

	[Token(Token = "0x1700032E")]
	public float LastRatingDiff
	{
		[Token(Token = "0x600123B")]
		[Address(RVA = "0xC58C10", Offset = "0xC58C10", VA = "0xC58C10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700032F")]
	private PlayerProfileData.Multiplayer.Versus profileVersus
	{
		[Token(Token = "0x600123C")]
		[Address(RVA = "0xC58C18", Offset = "0xC58C18", VA = "0xC58C18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000027")]
	public event Action matchConcluded
	{
		[Token(Token = "0x6001239")]
		[Address(RVA = "0xC58AD8", Offset = "0xC58AD8", VA = "0xC58AD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xC58B74", Offset = "0xC58B74", VA = "0xC58B74")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xC58C40", Offset = "0xC58C40", VA = "0xC58C40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xC58C98", Offset = "0xC58C98", VA = "0xC58C98")]
	private void Start()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xC58DCC", Offset = "0xC58DCC", VA = "0xC58DCC")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xC58D58", Offset = "0xC58D58", VA = "0xC58D58")]
	[IteratorStateMachine(typeof(<InitCo>d__24))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xC59064", Offset = "0xC59064", VA = "0xC59064")]
	private void loadRankedLeaderboard()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xC59188", Offset = "0xC59188", VA = "0xC59188")]
	public void RankedMatchStarted()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xC591FC", Offset = "0xC591FC", VA = "0xC591FC")]
	[IteratorStateMachine(typeof(<DoRankedMatchStart>d__27))]
	private IEnumerator<float> DoRankedMatchStart()
	{
		return null;
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xC59298", Offset = "0xC59298", VA = "0xC59298")]
	private void calcPotentialRatings()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xC5980C", Offset = "0xC5980C", VA = "0xC5980C")]
	public void onNewMultiplayerSeason()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xC5989C", Offset = "0xC5989C", VA = "0xC5989C")]
	public void UpdateRating()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xC59910", Offset = "0xC59910", VA = "0xC59910")]
	[IteratorStateMachine(typeof(<DoRatingForMatch>d__32))]
	private IEnumerator<float> DoRatingForMatch()
	{
		return null;
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xC599AC", Offset = "0xC599AC", VA = "0xC599AC")]
	private void updateNewRatingAndLeaderboard([Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xC58DD8", Offset = "0xC58DD8", VA = "0xC58DD8")]
	private void checkAndReportUnreportedRating()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xC59F40", Offset = "0xC59F40", VA = "0xC59F40")]
	private void postResultsDone()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xC5A0B0", Offset = "0xC5A0B0", VA = "0xC5A0B0")]
	public float CalcWinProbablity(PlayerProfileData.Multiplayer.Versus p1Data, PlayerProfileData.Multiplayer.Versus p2Data)
	{
		return default(float);
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xC5A518", Offset = "0xC5A518", VA = "0xC5A518")]
	public VersusRating()
	{
	}
}
[Token(Token = "0x2000345")]
public class LobbyistManualTest : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000346")]
	[CompilerGenerated]
	private struct <OnPingClicked>d__38 : IAsyncStateMachine
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbyistManualTest <>4__this;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<(bool, long)> <>u__1;

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xC5C418", Offset = "0xC5C418", VA = "0xC5C418", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xC5C760", Offset = "0xC5C760", VA = "0xC5C760", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Address lobbyistAddress;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ICEProcess _iceProcess;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField playerIDInputField;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button connectButton;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button disconnectButton;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text serverConnectionStatus;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InputField remotePlayerIDInputField;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button findRankedButton;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button inviteButton;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InputField pinInputField;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button pinButton;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text clientState;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text connectedPlayerID;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text connectedCoMode;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text connectedRole;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button leaveButton;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Dropdown coMode;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InputField mpVersion;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button pingButton;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LobbyistClient _client;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private P2PNode _p2p;

	[Token(Token = "0x400145F")]
	private const string DEFAULT_MP_VERSION = "42";

	[Token(Token = "0x17000336")]
	private string MpVersion
	{
		[Token(Token = "0x600126E")]
		[Address(RVA = "0xC5BF88", Offset = "0xC5BF88", VA = "0xC5BF88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xC5B28C", Offset = "0xC5B28C", VA = "0xC5B28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xC5B738", Offset = "0xC5B738", VA = "0xC5B738")]
	private void Update()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xC5B73C", Offset = "0xC5B73C", VA = "0xC5B73C")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xC5BB44", Offset = "0xC5BB44", VA = "0xC5BB44")]
	private void OnQueue(LobbyistClient client)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xC5BBBC", Offset = "0xC5BBBC", VA = "0xC5BBBC")]
	private void OnMatchConnecting(LobbyistClient client)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xC5BBF0", Offset = "0xC5BBF0", VA = "0xC5BBF0")]
	private void OnICEConnectionFailed(ICEProcess _)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xC5BC58", Offset = "0xC5BC58", VA = "0xC5BC58")]
	private void OnFirstIceConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xC5BD64", Offset = "0xC5BD64", VA = "0xC5BD64")]
	private void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xC5BE84", Offset = "0xC5BE84", VA = "0xC5BE84")]
	public void OnConnectClicked()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xC5C004", Offset = "0xC5C004", VA = "0xC5C004")]
	public void OnDisconnectClicked()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xC5C020", Offset = "0xC5C020", VA = "0xC5C020")]
	public void OnFindRankedClicked()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xC5C074", Offset = "0xC5C074", VA = "0xC5C074")]
	public void OnInviteClicked()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xC5C14C", Offset = "0xC5C14C", VA = "0xC5C14C")]
	public void OnPinClicked()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xC5C224", Offset = "0xC5C224", VA = "0xC5C224")]
	public void OnLeaveClicked()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xC5C26C", Offset = "0xC5C26C", VA = "0xC5C26C")]
	[AsyncStateMachine(typeof(<OnPingClicked>d__38))]
	public void OnPingClicked()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xC5C324", Offset = "0xC5C324", VA = "0xC5C324")]
	public LobbyistManualTest()
	{
	}
}
[Token(Token = "0x2000347")]
public class LobbyistTestsConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000348")]
	public class RankedMeta
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mpVersion;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dev;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seasonLB;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xC5C96C", Offset = "0xC5C96C", VA = "0xC5C96C")]
		public RankedMeta()
		{
		}
	}

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public LobbyistClientConfig lobbyistAddress;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ICESettings iceSettings;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cooldownBetweenTests;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] playerIDs;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RankedMeta rankedMeta;

	[Token(Token = "0x4001469")]
	public const float initialRating = 1500f;

	[Token(Token = "0x400146A")]
	public const float maxRatingDev = 200f;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbyistTestsConfig inst;

	[Token(Token = "0x17000337")]
	public string MultiplayerVersion
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0xC5C76C", Offset = "0xC5C76C", VA = "0xC5C76C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xC5C778", Offset = "0xC5C778", VA = "0xC5C778")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xC5C7D0", Offset = "0xC5C7D0", VA = "0xC5C7D0")]
	public LobbyistTestsConfig()
	{
	}
}
[Token(Token = "0x2000349")]
[AddComponentMenu("Multiplayer/Tests/SkipSignInTest")]
public class SkipSignInTest : LobbyistTest
{
	[Token(Token = "0x17000338")]
	public override string title
	{
		[Token(Token = "0x6001282")]
		[Address(RVA = "0xC5C974", Offset = "0xC5C974", VA = "0xC5C974", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xC5C9B4", Offset = "0xC5C9B4", VA = "0xC5C9B4", Slot = "5")]
	public override void Run()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xC5CB90", Offset = "0xC5CB90", VA = "0xC5CB90")]
	public SkipSignInTest()
	{
	}
}
[Token(Token = "0x200034B")]
public class BackgroundUDPConnectionToLobbyist : MonoBehaviour
{
	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyistClientConfig lobbyistConfig;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LobbyistClient _lobbyistClient;

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xC5CC88", Offset = "0xC5CC88", VA = "0xC5CC88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xC5CCE0", Offset = "0xC5CCE0", VA = "0xC5CCE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xC5CE98", Offset = "0xC5CE98", VA = "0xC5CE98")]
	private static void OnConnectionToServerFailed(LobbyistClient _, string reason)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xC5CF24", Offset = "0xC5CF24", VA = "0xC5CF24")]
	private static void OnConnectedToServer(LobbyistClient _)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xC5CF8C", Offset = "0xC5CF8C", VA = "0xC5CF8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xC5D080", Offset = "0xC5D080", VA = "0xC5D080")]
	public BackgroundUDPConnectionToLobbyist()
	{
	}
}
[Token(Token = "0x200034C")]
public class RelayManualTest : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[Flags]
	public enum LogMessagesFilter
	{
		[Token(Token = "0x4001485")]
		Incoming = 1,
		[Token(Token = "0x4001486")]
		Outgoing = 2
	}

	[Token(Token = "0x200034E")]
	[Flags]
	public enum SendType
	{
		[Token(Token = "0x4001488")]
		Both = -1,
		[Token(Token = "0x4001489")]
		Reliable = 1,
		[Token(Token = "0x400148A")]
		Unreliable = 2
	}

	[StructLayout(3)]
	[Token(Token = "0x200034F")]
	[CompilerGenerated]
	private struct <Start>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<List<string>> <>u__2;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC5E4FC", Offset = "0xC5E4FC", VA = "0xC5E4FC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xC5E98C", Offset = "0xC5E98C", VA = "0xC5E98C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000350")]
	[CompilerGenerated]
	private struct <OnCreateClicked>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC5E998", Offset = "0xC5E998", VA = "0xC5E998", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC5EED0", Offset = "0xC5EED0", VA = "0xC5EED0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000351")]
	[CompilerGenerated]
	private struct <OnDestroyClicked>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xC5EEDC", Offset = "0xC5EEDC", VA = "0xC5EEDC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xC5F370", Offset = "0xC5F370", VA = "0xC5F370", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000352")]
	[CompilerGenerated]
	private struct <OnJoinClicked>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xC5F37C", Offset = "0xC5F37C", VA = "0xC5F37C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC5F984", Offset = "0xC5F984", VA = "0xC5F984", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000353")]
	[CompilerGenerated]
	private struct <OnLeaveClicked>d__22 : IAsyncStateMachine
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC5F990", Offset = "0xC5F990", VA = "0xC5F990", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC5FB6C", Offset = "0xC5FB6C", VA = "0xC5FB6C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LogMessagesFilter logMessagesFilter;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SendType sendType;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField joinCodeOutputField;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField joinCodeInputField;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField messageInputField;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle sendMessageAsHostToggle;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dropdown regionDropdown;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle sendRandomDataEveryFrameToggle;

	[Token(Token = "0x400147B")]
	private const int MAX_CONNECTIONS = 8;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RelayUtpHost _host;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RelayUtpClient _client;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> _regions;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly byte[] _randomBuffer;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[MinMaxSlider(0f, 1024f)]
	public Vector2 packetSizeRandomRange;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Expandable]
	public LobbyistClientConfig lobbyistConfig;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LobbyistClient lobbyistClient;

	[Token(Token = "0x4001483")]
	private const string URELAY_PREFIX = "urelay:";

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xC5D088", Offset = "0xC5D088", VA = "0xC5D088")]
	[AsyncStateMachine(typeof(<Start>d__14))]
	private void Start()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xC5D13C", Offset = "0xC5D13C", VA = "0xC5D13C")]
	[AsyncStateMachine(typeof(<OnCreateClicked>d__15))]
	public void OnCreateClicked()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xC5D1F4", Offset = "0xC5D1F4", VA = "0xC5D1F4")]
	private void OnClientConnectedToHost()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xC5D25C", Offset = "0xC5D25C", VA = "0xC5D25C")]
	private void OnReceiveData(byte[] msgBytes)
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xC5D360", Offset = "0xC5D360", VA = "0xC5D360")]
	private static string ColorStr(string str)
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xC5D3CC", Offset = "0xC5D3CC", VA = "0xC5D3CC")]
	[AsyncStateMachine(typeof(<OnDestroyClicked>d__19))]
	public void OnDestroyClicked()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xC5D484", Offset = "0xC5D484", VA = "0xC5D484")]
	[AsyncStateMachine(typeof(<OnJoinClicked>d__20))]
	public void OnJoinClicked()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xC5D53C", Offset = "0xC5D53C", VA = "0xC5D53C")]
	public void OnSendClicked()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xC5D8BC", Offset = "0xC5D8BC", VA = "0xC5D8BC")]
	[AsyncStateMachine(typeof(<OnLeaveClicked>d__22))]
	public void OnLeaveClicked()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xC5D974", Offset = "0xC5D974", VA = "0xC5D974")]
	private void DestroyHost()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xC5DA20", Offset = "0xC5DA20", VA = "0xC5DA20")]
	private void DestroyClient()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xC5DACC", Offset = "0xC5DACC", VA = "0xC5DACC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xC5DBF8", Offset = "0xC5DBF8", VA = "0xC5DBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xC5DCCC", Offset = "0xC5DCCC", VA = "0xC5DCCC")]
	private void SendRandomMessages()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xC5DFDC", Offset = "0xC5DFDC", VA = "0xC5DFDC")]
	public void SignInToLobbyist()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xC5E124", Offset = "0xC5E124", VA = "0xC5E124")]
	private void OnConnectionToLobbyistFailed(LobbyistClient arg1, string arg2)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xC5E18C", Offset = "0xC5E18C", VA = "0xC5E18C")]
	private void OnConnectedToLobbyist(LobbyistClient obj)
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xC5E1F4", Offset = "0xC5E1F4", VA = "0xC5E1F4")]
	public void QueueForPin()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xC5E384", Offset = "0xC5E384", VA = "0xC5E384")]
	private void OnRxRelayedAddresses(LobbyistClient _, string[] relayedAddress)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xC5E424", Offset = "0xC5E424", VA = "0xC5E424")]
	private void OnMatchConnecting(LobbyistClient _)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xC5E48C", Offset = "0xC5E48C", VA = "0xC5E48C")]
	public RelayManualTest()
	{
	}
}
[Token(Token = "0x2000354")]
public class StunTestsConfig : MonoBehaviour
{
	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int localPort;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string host;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int port;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string transactionID;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float sendTimeout;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float receiveTimeout;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StunTestsConfig inst;

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xC5FB78", Offset = "0xC5FB78", VA = "0xC5FB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xC5FBD0", Offset = "0xC5FBD0", VA = "0xC5FBD0")]
	public StunTestsConfig()
	{
	}
}
[Token(Token = "0x2000355")]
public class TestStun : Test
{
	[Token(Token = "0x2000356")]
	private struct Response
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string transactionID;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string address;
	}

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Thread _thread;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<Action> _toRunOnMainThread;

	[Token(Token = "0x17000339")]
	public override string title
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC5FC6C", Offset = "0xC5FC6C", VA = "0xC5FC6C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033A")]
	public override float timeout
	{
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC5FCAC", Offset = "0xC5FCAC", VA = "0xC5FCAC", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700033B")]
	protected static StunTestsConfig config
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC5FCB4", Offset = "0xC5FCB4", VA = "0xC5FCB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xC5FCFC", Offset = "0xC5FCFC", VA = "0xC5FCFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xC5FD78", Offset = "0xC5FD78", VA = "0xC5FD78", Slot = "5")]
	public override void Run()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xC5FE60", Offset = "0xC5FE60", VA = "0xC5FE60")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xC5FEEC", Offset = "0xC5FEEC", VA = "0xC5FEEC")]
	private void DoWork()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xC60634", Offset = "0xC60634", VA = "0xC60634")]
	public TestStun()
	{
	}
}
[Token(Token = "0x2000359")]
public class UtpUdpTest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200035A")]
	public struct Address
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;
	}

	[Token(Token = "0x200035D")]
	[CompilerGenerated]
	private sealed class <TestAddress>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtpUdpTest <>4__this;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IPEndPoint hostAddress;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IPEndPoint reflexiveAddress;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xC61EF0", Offset = "0xC61EF0", VA = "0xC61EF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xC61F38", Offset = "0xC61F38", VA = "0xC61F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC61874", Offset = "0xC61874", VA = "0xC61874")]
		[DebuggerHidden]
		public <TestAddress>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC61C34", Offset = "0xC61C34", VA = "0xC61C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xC61C38", Offset = "0xC61C38", VA = "0xC61C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xC61EF8", Offset = "0xC61EF8", VA = "0xC61EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Address STUNServerAddress;

	[Token(Token = "0x40014B2")]
	private const bool debug = true;

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xC60920", Offset = "0xC60920", VA = "0xC60920")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xC60ED8", Offset = "0xC60ED8", VA = "0xC60ED8")]
	private static IEnumerable<IPAddress> GetHostAddresses()
	{
		return null;
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xC60924", Offset = "0xC60924", VA = "0xC60924")]
	private void CreateCandidates()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xC61640", Offset = "0xC61640", VA = "0xC61640")]
	private void OnReflexiveAddressDetected(IceCandidate candidate)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xC617D0", Offset = "0xC617D0", VA = "0xC617D0")]
	[IteratorStateMachine(typeof(<TestAddress>d__7))]
	private IEnumerator TestAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
	{
		return null;
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xC6189C", Offset = "0xC6189C", VA = "0xC6189C")]
	public UtpUdpTest()
	{
	}
}
[Token(Token = "0x200035E")]
public class ByteConverterZ
{
	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int FLOAT_SIZE;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int INT_SIZE;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int UINT_SIZE;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float[] auxFloatArr;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] auxIntArr;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static uint[] auxUIntArr;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static byte[] auxBytesArr;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xC61F40", Offset = "0xC61F40", VA = "0xC61F40")]
	public static void Init()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xC620EC", Offset = "0xC620EC", VA = "0xC620EC")]
	public static void ToByteBuffer(bool val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xC6212C", Offset = "0xC6212C", VA = "0xC6212C")]
	public static void ToByteBuffer(byte val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xC62168", Offset = "0xC62168", VA = "0xC62168")]
	public static void ToByteBuffer(int val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xC6220C", Offset = "0xC6220C", VA = "0xC6220C")]
	public static void ToByteBuffer(uint val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xC622B0", Offset = "0xC622B0", VA = "0xC622B0")]
	public static void ToByteBuffer(float val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xC6235C", Offset = "0xC6235C", VA = "0xC6235C")]
	public static void ToByteBuffer(Vector2 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xC6241C", Offset = "0xC6241C", VA = "0xC6241C")]
	public static void ToByteBuffer(IntVector2 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xC624D4", Offset = "0xC624D4", VA = "0xC624D4")]
	public static void ToByteBuffer(Vector3 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xC625B0", Offset = "0xC625B0", VA = "0xC625B0")]
	public static void ToByteBuffer(Vector4 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xC62698", Offset = "0xC62698", VA = "0xC62698")]
	public static void ToByteBuffer(Quaternion val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xC62780", Offset = "0xC62780", VA = "0xC62780")]
	public static void ToByteBuffer(string val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xC6284C", Offset = "0xC6284C", VA = "0xC6284C")]
	public static void FromByteBuffer(ref bool val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xC62894", Offset = "0xC62894", VA = "0xC62894")]
	public static void FromByteBuffer(ref byte val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xC628D4", Offset = "0xC628D4", VA = "0xC628D4")]
	public static void FromByteBuffer(ref int val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xC62980", Offset = "0xC62980", VA = "0xC62980")]
	public static void FromByteBuffer(ref uint val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xC62A2C", Offset = "0xC62A2C", VA = "0xC62A2C")]
	public static void FromByteBuffer(ref float val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xC62AD8", Offset = "0xC62AD8", VA = "0xC62AD8")]
	public static void FromByteBuffer(ref Vector2 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xC62B98", Offset = "0xC62B98", VA = "0xC62B98")]
	public static void FromByteBuffer(ref IntVector2 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xC62C58", Offset = "0xC62C58", VA = "0xC62C58")]
	public static void FromByteBuffer(ref Vector3 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xC62D2C", Offset = "0xC62D2C", VA = "0xC62D2C")]
	public static void FromByteBuffer(ref Vector4 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xC62E0C", Offset = "0xC62E0C", VA = "0xC62E0C")]
	public static void FromByteBuffer(ref Quaternion val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xC62EEC", Offset = "0xC62EEC", VA = "0xC62EEC")]
	public static void FromByteBuffer(ref string val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xC63018", Offset = "0xC63018", VA = "0xC63018")]
	public ByteConverterZ()
	{
	}
}
[Token(Token = "0x200035F")]
[CreateAssetMenu(menuName = "Data/Lobbyist/ICE Settings/Connectivity Test Settings")]
public class ConnectivityTestSettings : ScriptableObject
{
	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NUM_PINGS;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int NUM_DISCARDED_PINGS;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PING_INTERVAL;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ACCEPTABLE_ROUNDTRIP;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ACCEPTABLE_DROP_RATE;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RELAY_CONNECT_TIMEOUT;

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xC63020", Offset = "0xC63020", VA = "0xC63020")]
	public ConnectivityTestSettings()
	{
	}
}
[Token(Token = "0x2000360")]
public class IceCandidate : MonoBehaviour, IDisposable
{
	[Token(Token = "0x2000361")]
	private struct TxQueueItem
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] data;

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC64374", Offset = "0xC64374", VA = "0xC64374")]
		public TxQueueItem(string host, int port, byte[] data)
		{
		}
	}

	[Token(Token = "0x2000362")]
	private struct RxQueueItem
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IPEndPoint remoteIP;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] msgBytes;

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xC63D8C", Offset = "0xC63D8C", VA = "0xC63D8C")]
		public RxQueueItem(IPEndPoint remoteIP, byte[] msgBytes)
		{
		}
	}

	[Token(Token = "0x2000363")]
	private class StunRequest
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string transactionID;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC64344", Offset = "0xC64344", VA = "0xC64344")]
		public StunRequest(string transactionID)
		{
		}
	}

	[Token(Token = "0x2000364")]
	private class StunMessage : StunRequest
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string address;

		[Token(Token = "0x17000340")]
		public bool HasNoAddress
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xC6400C", Offset = "0xC6400C", VA = "0xC6400C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public IPEndPoint ParsedAddress
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xC64514", Offset = "0xC64514", VA = "0xC64514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xC644D0", Offset = "0xC644D0", VA = "0xC644D0")]
		public StunMessage(string transactionID, string address)
		{
		}
	}

	[Token(Token = "0x2000365")]
	private class FindUdpClientException : Exception
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0xC633D4", Offset = "0xC633D4", VA = "0xC633D4")]
		public FindUdpClientException(string message)
		{
		}
	}

	[Token(Token = "0x2000366")]
	public delegate void TestConnectivityDoneDelegate(bool success, NodeAnalyzeReport report);

	[Token(Token = "0x2000367")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IceCandidate <>4__this;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<IPEndPoint> onDone;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xC64C34", Offset = "0xC64C34", VA = "0xC64C34")]
		public <>c__DisplayClass32_0()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[CompilerGenerated]
	private sealed class <DetectReflexiveAddressCo>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCandidate <>4__this;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<IPEndPoint> onDone;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stunServerAddress;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int stunServerPort;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass32_0 <>8__1;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <retryTime>5__2;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <numRetries>5__3;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xC64F8C", Offset = "0xC64F8C", VA = "0xC64F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xC64FD4", Offset = "0xC64FD4", VA = "0xC64FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xC645D0", Offset = "0xC645D0", VA = "0xC645D0")]
		[DebuggerHidden]
		public <DetectReflexiveAddressCo>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xC64CDC", Offset = "0xC64CDC", VA = "0xC64CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xC64CE0", Offset = "0xC64CE0", VA = "0xC64CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xC64F94", Offset = "0xC64F94", VA = "0xC64F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000369")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long[] rxTimes;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stopwatch stopwatch;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC64FDC", Offset = "0xC64FDC", VA = "0xC64FDC")]
		public <>c__DisplayClass36_0()
		{
		}
	}

	[Token(Token = "0x200036B")]
	[CompilerGenerated]
	private sealed class <TestConnectivityCo>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCandidate <>4__this;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass36_0 <>8__1;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IPEndPoint remoteAddress;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TestConnectivityDoneDelegate onDone;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ConnectivityTestSettings <testSettings>5__2;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long[] <txTimes>5__3;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <p>5__4;

		[Token(Token = "0x17000344")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC65C3C", Offset = "0xC65C3C", VA = "0xC65C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xC65C84", Offset = "0xC65C84", VA = "0xC65C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC64764", Offset = "0xC64764", VA = "0xC64764")]
		[DebuggerHidden]
		public <TestConnectivityCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC65344", Offset = "0xC65344", VA = "0xC65344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xC65348", Offset = "0xC65348", VA = "0xC65348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC65C44", Offset = "0xC65C44", VA = "0xC65C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014D2")]
	private const int STARTING_PORT = 28679;

	[Token(Token = "0x40014D3")]
	private const int ENDING_PORT = 28699;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ICESettings _iceSettings;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UdpClient _udpClient;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IPEndPoint _reflexiveAddress;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<TxQueueItem> _txQueue;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<RxQueueItem> _rxQueue;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Action<StunMessage>> _responseHandlers;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CancellationTokenSource _bindCancelTokenSource;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] _PERIOD_SEPARATOR;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _disposed;

	[Token(Token = "0x1700033E")]
	public IPEndPoint hostAddress
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC61740", Offset = "0xC61740", VA = "0xC61740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033F")]
	public IPEndPoint reflexiveAddress
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC63040", Offset = "0xC63040", VA = "0xC63040")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xC63048", Offset = "0xC63048", VA = "0xC63048")]
	public bool HasAddress(IPEndPoint address)
	{
		return default(bool);
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xC630AC", Offset = "0xC630AC", VA = "0xC630AC")]
	private void Init()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xC613A8", Offset = "0xC613A8", VA = "0xC613A8")]
	public bool Bind(IPAddress address, ICESettings iceSettings)
	{
		return default(bool);
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xC631C8", Offset = "0xC631C8", VA = "0xC631C8")]
	private void FindUdpClient(IPAddress address)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xC6343C", Offset = "0xC6343C", VA = "0xC6343C")]
	private void SocketLoop()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xC63A30", Offset = "0xC63A30", VA = "0xC63A30")]
	private void HandleReadable(Socket s)
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xC63DBC", Offset = "0xC63DBC", VA = "0xC63DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xC63E48", Offset = "0xC63E48", VA = "0xC63E48")]
	private void OnRxData(IPEndPoint remoteIP, byte[] msgBytes)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xC63BDC", Offset = "0xC63BDC", VA = "0xC63BDC")]
	private void HandleWritable(Socket s)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xC641E8", Offset = "0xC641E8", VA = "0xC641E8")]
	private void SendStunRequest(string host, int port, string transactionID, Action<StunMessage> onResponse)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xC643AC", Offset = "0xC643AC", VA = "0xC643AC")]
	private void SendStunResponse(string host, int port, string transactionID, string address)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xC64018", Offset = "0xC64018", VA = "0xC64018")]
	private void OnRxStunRequest(IPEndPoint remoteIP, StunRequest request)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xC64090", Offset = "0xC64090", VA = "0xC64090")]
	private void OnRxStunResponse(StunMessage response)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xC61620", Offset = "0xC61620", VA = "0xC61620")]
	public void DetectReflexiveAddress(string stunServerAddress, int stunServerPort, Action<IPEndPoint> onDone)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xC6451C", Offset = "0xC6451C", VA = "0xC6451C")]
	[IteratorStateMachine(typeof(<DetectReflexiveAddressCo>d__32))]
	private IEnumerator DetectReflexiveAddressCo(string stunServerAddress, int stunServerPort, Action<IPEndPoint> onDone)
	{
		return null;
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xC645F8", Offset = "0xC645F8", VA = "0xC645F8")]
	public void TestConnectivity(IPEndPoint remoteAddress, TestConnectivityDoneDelegate onDone)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xC646C0", Offset = "0xC646C0", VA = "0xC646C0")]
	[IteratorStateMachine(typeof(<TestConnectivityCo>d__36))]
	private IEnumerator TestConnectivityCo(IPEndPoint remoteAddress, TestConnectivityDoneDelegate onDone)
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xC6478C", Offset = "0xC6478C", VA = "0xC6478C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xC64790", Offset = "0xC64790", VA = "0xC64790", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xC647F0", Offset = "0xC647F0", VA = "0xC647F0")]
	private void _Dispose()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xC64860", Offset = "0xC64860", VA = "0xC64860")]
	public IceCandidate()
	{
	}
}
[Serializable]
[Token(Token = "0x200036C")]
public class ICESettings
{
	[Serializable]
	[Token(Token = "0x200036D")]
	public class ICEDebugSettings
	{
		[Token(Token = "0x200036E")]
		public enum WhoIsHost
		{
			[Token(Token = "0x400150E")]
			None,
			[Token(Token = "0x400150F")]
			Client,
			[Token(Token = "0x4001510")]
			Host
		}

		[Token(Token = "0x200036F")]
		[Flags]
		public enum UdpAddressesToUse
		{
			[Token(Token = "0x4001512")]
			Everything = -1,
			[Token(Token = "0x4001513")]
			Reflexive = 1,
			[Token(Token = "0x4001514")]
			Host = 2
		}

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("When ICE Process finds a new connection after the first one, it chooses it regardless of ping score")]
		[AllowNesting]
		public bool anyNewConnectionIsBetter;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool simulateNoConnectivity;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool fakeUtpBug;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Make sure who would be the chosen relay host UnityRelayQos")]
		public WhoIsHost forceRelayHost;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Make sure who would be the chosen utp host")]
		public WhoIsHost forceUtpHost;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Eliminate Host/Reflexive addresses in tests")]
		public UdpAddressesToUse udpAddressesToUse;

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xC65CC0", Offset = "0xC65CC0", VA = "0xC65CC0")]
		public ICEDebugSettings()
		{
		}
	}

	[Token(Token = "0x2000370")]
	[Flags]
	public enum RelayRegionsAllocation
	{
		[Token(Token = "0x4001516")]
		None = 0,
		[Token(Token = "0x4001517")]
		Regionless = 1,
		[Token(Token = "0x4001518")]
		AvailableRegions = 2
	}

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool debug;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ICEDebugSettings debugSettings;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Maximum time to wait until getting reflexive address in seconds")]
	public float maxReflexiveAddressDetection;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum time to wait until failing the ICE process (both host & client+extra)")]
	public float maxIceDuration;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Extra time to wait until failing the ICE process")]
	public float clientExtraIceDuration;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Connection types to try on the ICE process")]
	public ConnectionsType connectionsType;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ICEAgentsList iceAgentsList;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Relay allocation strategy (only if Relay is enabled on connection type)")]
	[EnableIf("ConnectionTypeHasRelay")]
	[AllowNesting]
	[Header("Unity Relay")]
	public RelayRegionsAllocation relayRegionsAllocation;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Maximum relay allocations when using AvailableRegions allocation strategy")]
	[Range(1f, 10f)]
	[AllowNesting]
	[EnableIf(EConditionOperator.And, new string[] { "HasAvailableRegions", "ConnectionTypeHasRelay" })]
	public int maxRelayAllocations;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Expandable]
	[AllowNesting]
	[Tooltip("Host Ice connectivity test settings")]
	[Header("Pings Tests")]
	public ConnectivityTestSettings connectivityTestSettings;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Expandable]
	[AllowNesting]
	[Tooltip("STUN Server end point")]
	public StunServerConfig stunServerAddress;

	[Token(Token = "0x17000346")]
	public IceAgent[] IceAgents
	{
		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC65C8C", Offset = "0xC65C8C", VA = "0xC65C8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000347")]
	private bool ConnectionTypeHasRelay
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0xC65CA8", Offset = "0xC65CA8", VA = "0xC65CA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000348")]
	private bool HasAvailableRegions
	{
		[Token(Token = "0x6001324")]
		[Address(RVA = "0xC65CB4", Offset = "0xC65CB4", VA = "0xC65CB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xC61380", Offset = "0xC61380", VA = "0xC61380")]
	public ICESettings()
	{
	}
}
[Token(Token = "0x2000371")]
public static class IpParser
{
	[Token(Token = "0x4001519")]
	private const string COLON_SEPARATOR = ":";

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xC648F8", Offset = "0xC648F8", VA = "0xC648F8")]
	public static IPEndPoint ParseIPEndPoint(string ipEndPoint)
	{
		return null;
	}
}
[Token(Token = "0x2000372")]
public class NativePeerToPeer : MonoBehaviour, P2PNode, IDisposable
{
	[Token(Token = "0x2000373")]
	private enum HandshakeState : uint
	{
		[Token(Token = "0x4001525")]
		SendHandshakeMessage,
		[Token(Token = "0x4001526")]
		WaitForHandshakeMessage,
		[Token(Token = "0x4001527")]
		WaitForSecondHandshakeMessage,
		[Token(Token = "0x4001528")]
		Done
	}

	[Token(Token = "0x2000374")]
	[CompilerGenerated]
	private sealed class <ConnectCo>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <useHandshake>5__2;

		[Token(Token = "0x1700034A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xC66E04", Offset = "0xC66E04", VA = "0xC66E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xC66E4C", Offset = "0xC66E4C", VA = "0xC66E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC6623C", Offset = "0xC6623C", VA = "0xC6623C")]
		[DebuggerHidden]
		public <ConnectCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC66BC4", Offset = "0xC66BC4", VA = "0xC66BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC66BC8", Offset = "0xC66BC8", VA = "0xC66BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC66E0C", Offset = "0xC66E0C", VA = "0xC66E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000375")]
	[CompilerGenerated]
	private sealed class <FlushIncomingMessagesCo>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint <packetsRead>5__2;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xC66F0C", Offset = "0xC66F0C", VA = "0xC66F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xC66F54", Offset = "0xC66F54", VA = "0xC66F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC662D8", Offset = "0xC662D8", VA = "0xC662D8")]
		[DebuggerHidden]
		public <FlushIncomingMessagesCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC66E54", Offset = "0xC66E54", VA = "0xC66E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC66E58", Offset = "0xC66E58", VA = "0xC66E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC66F14", Offset = "0xC66F14", VA = "0xC66F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000376")]
	[CompilerGenerated]
	private sealed class <DoHandshakeCo>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandshakeState <handShakeState>5__2;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <handshakeMessage>5__3;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <numHandshakeAttempts>5__4;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeInThisHandshake>5__5;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <myNum>5__6;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <hisNum>5__7;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xC67A00", Offset = "0xC67A00", VA = "0xC67A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xC67A48", Offset = "0xC67A48", VA = "0xC67A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC66374", Offset = "0xC66374", VA = "0xC66374")]
		[DebuggerHidden]
		public <DoHandshakeCo>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC66F5C", Offset = "0xC66F5C", VA = "0xC66F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC66F60", Offset = "0xC66F60", VA = "0xC66F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC67A08", Offset = "0xC67A08", VA = "0xC67A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000377")]
	[CompilerGenerated]
	private sealed class <WaitForConnectionCo>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeLeft>5__2;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xC67CD4", Offset = "0xC67CD4", VA = "0xC67CD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xC67D1C", Offset = "0xC67D1C", VA = "0xC67D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC66410", Offset = "0xC66410", VA = "0xC66410")]
		[DebuggerHidden]
		public <WaitForConnectionCo>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC67A50", Offset = "0xC67A50", VA = "0xC67A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC67A54", Offset = "0xC67A54", VA = "0xC67A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC67CDC", Offset = "0xC67CDC", VA = "0xC67CDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000378")]
	[CompilerGenerated]
	private sealed class <ReceivePacketsCo>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x17000352")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0xC67E70", Offset = "0xC67E70", VA = "0xC67E70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0xC67EB8", Offset = "0xC67EB8", VA = "0xC67EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC66544", Offset = "0xC66544", VA = "0xC66544")]
		[DebuggerHidden]
		public <ReceivePacketsCo>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC67D24", Offset = "0xC67D24", VA = "0xC67D24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC67D28", Offset = "0xC67D28", VA = "0xC67D28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC67E78", Offset = "0xC67E78", VA = "0xC67E78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _connected;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isHost;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _opponentRnxId;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _opponentNativeId;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly byte[] _tempBuffer;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _connectCo;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _receivePacketsCo;

	[Token(Token = "0x17000349")]
	private bool P2PNode.Connected
	{
		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC65E08", Offset = "0xC65E08", VA = "0xC65E08", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000028")]
	public event Action Connected
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0xC65CD0", Offset = "0xC65CD0", VA = "0xC65CD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC65D6C", Offset = "0xC65D6C", VA = "0xC65D6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action FailedToConnect
	{
		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC65ED0", Offset = "0xC65ED0", VA = "0xC65ED0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC65F6C", Offset = "0xC65F6C", VA = "0xC65F6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC66844", Offset = "0xC66844", VA = "0xC66844", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC668F4", Offset = "0xC668F4", VA = "0xC668F4", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xC65E10", Offset = "0xC65E10", VA = "0xC65E10", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xC65EAC", Offset = "0xC65EAC", VA = "0xC65EAC")]
	private void OnConnected()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xC66008", Offset = "0xC66008", VA = "0xC66008")]
	private void OnFailedToConnect()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xC66024", Offset = "0xC66024", VA = "0xC66024")]
	public void Connect(string opponentRnxId, string opponentNativeId, bool isHost)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xC661C8", Offset = "0xC661C8", VA = "0xC661C8")]
	[IteratorStateMachine(typeof(<ConnectCo>d__18))]
	private IEnumerator ConnectCo()
	{
		return null;
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xC66264", Offset = "0xC66264", VA = "0xC66264")]
	[IteratorStateMachine(typeof(<FlushIncomingMessagesCo>d__19))]
	private IEnumerator FlushIncomingMessagesCo()
	{
		return null;
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xC66300", Offset = "0xC66300", VA = "0xC66300")]
	[IteratorStateMachine(typeof(<DoHandshakeCo>d__21))]
	private IEnumerator DoHandshakeCo()
	{
		return null;
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xC6639C", Offset = "0xC6639C", VA = "0xC6639C")]
	[IteratorStateMachine(typeof(<WaitForConnectionCo>d__22))]
	private IEnumerator WaitForConnectionCo()
	{
		return null;
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xC66438", Offset = "0xC66438", VA = "0xC66438", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xC65E14", Offset = "0xC65E14", VA = "0xC65E14")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xC664D0", Offset = "0xC664D0", VA = "0xC664D0")]
	[IteratorStateMachine(typeof(<ReceivePacketsCo>d__26))]
	private IEnumerator ReceivePacketsCo()
	{
		return null;
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xC6656C", Offset = "0xC6656C", VA = "0xC6656C")]
	public bool isPacketAvailable(out uint dataSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xC665D0", Offset = "0xC665D0", VA = "0xC665D0")]
	public bool receivePacket(byte[] data, out uint dataSize, out string senderId)
	{
		return default(bool);
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xC66680", Offset = "0xC66680", VA = "0xC66680", Slot = "5")]
	public void Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600133D")]
	[Address(RVA = "0xC669A4", Offset = "0xC669A4", VA = "0xC669A4")]
	private void Log(object message)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600133E")]
	[Address(RVA = "0xC66A38", Offset = "0xC66A38", VA = "0xC66A38")]
	private void LogWarning(object message)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600133F")]
	[Address(RVA = "0xC66ACC", Offset = "0xC66ACC", VA = "0xC66ACC")]
	private void LogError(object message)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xC66B60", Offset = "0xC66B60", VA = "0xC66B60")]
	public NativePeerToPeer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000379")]
public struct NetworkAddress
{
	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string hostname;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int port;

	[Token(Token = "0x17000354")]
	public IPAddress ipAddress
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC67EC0", Offset = "0xC67EC0", VA = "0xC67EC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xC67F54", Offset = "0xC67F54", VA = "0xC67F54", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200037A")]
public interface P2PNode
{
	[Token(Token = "0x17000355")]
	bool Connected
	{
		[Token(Token = "0x6001361")]
		get;
	}

	[Token(Token = "0x1400002B")]
	event Action<byte[]> onReceivedData;

	[Token(Token = "0x6001362")]
	void Send(ReadOnlySpan<byte> data, bool reliable);

	[Token(Token = "0x6001365")]
	void Close();
}
[Token(Token = "0x200037B")]
public enum PacketSendType
{
	[Token(Token = "0x4001544")]
	Unreliable,
	[Token(Token = "0x4001545")]
	UnreliableNoDelay,
	[Token(Token = "0x4001546")]
	Reliable
}
[Token(Token = "0x200037C")]
public static class RelayRegions
{
	[StructLayout(3)]
	[Token(Token = "0x200037F")]
	[CompilerGenerated]
	private struct <GetList>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<string>> <>t__builder;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long <now>5__2;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<List<Region>> <>u__2;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC68488", Offset = "0xC68488", VA = "0xC68488", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC68B54", Offset = "0xC68B54", VA = "0xC68B54", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001547")]
	private const long CACHE_VALIDITY_DURATION_MS = 600000L;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> _cachedRegions;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static long _cacheTimeMs;

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xC5E898", Offset = "0xC5E898", VA = "0xC5E898")]
	[AsyncStateMachine(typeof(<GetList>d__3))]
	public static Task<List<string>> GetList()
	{
		return null;
	}
}
[Token(Token = "0x2000380")]
public static class RelayThrottling
{
	[StructLayout(3)]
	[Token(Token = "0x2000381")]
	[CompilerGenerated]
	private struct <DoDespiteThrottling>d__1<T> : IAsyncStateMachine
	{
		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AsyncTaskMethodBuilder<T> <>t__builder;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numRetries;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<Task<T>> operation;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int retryDelayMs;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <numRetriesLeft>5__2;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter<T> <>u__1;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6001371")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001372")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001555")]
	private const uint WARN_FOR_THROTTLING_EVERY = 4u;

	[Token(Token = "0x6001370")]
	[AsyncStateMachine(typeof(<DoDespiteThrottling>d__1<>))]
	public static Task<T> DoDespiteThrottling<T>(Func<Task<T>> operation, int numRetries = 12, int retryDelayMs = 200)
	{
		return null;
	}
}
[Token(Token = "0x2000382")]
public abstract class RelayUtpBase : MonoBehaviour, P2PNode, IDisposable
{
	[StructLayout(3)]
	[Token(Token = "0x2000384")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__31 : IAsyncStateMachine
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] allocationIdBytes;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] connectionDataBytes;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] hostConnectionDataBytes;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] hmacKeyBytes;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NetworkEndPoint serverEndpoint;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isSecure;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RelayUtpBase <>4__this;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xC69C6C", Offset = "0xC69C6C", VA = "0xC69C6C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xC6A41C", Offset = "0xC6A41C", VA = "0xC6A41C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool _debug;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _disposed;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected NetworkDriver _networkDriver;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected NetworkEndPoint _serverEndpoint;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	protected NetworkPipeline _reliablePipe;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	protected NetworkPipeline _unreliablePipe;

	[Token(Token = "0x4001567")]
	private const int CONNECTION_CAPACITY = 2;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	protected List<NetworkConnection> _connections;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	protected readonly HashSet<NetworkConnection> _connectedConnections;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected bool _leaving;

	[Token(Token = "0x400156B")]
	private const bool USE_DTLS = false;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private StatusCode _debug_lastStatusCode;

	[Token(Token = "0x17000356")]
	public bool Connected
	{
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC68C5C", Offset = "0xC68C5C", VA = "0xC68C5C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000357")]
	public bool Ready
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC68CE8", Offset = "0xC68CE8", VA = "0xC68CE8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xC68CF0", Offset = "0xC68CF0", VA = "0xC68CF0")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x17000358")]
	public virtual string joinCode
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xC68CFC", Offset = "0xC68CFC", VA = "0xC68CFC", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC68D04", Offset = "0xC68D04", VA = "0xC68D04", Slot = "11")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC5EE20", Offset = "0xC5EE20", VA = "0xC5EE20", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC68BAC", Offset = "0xC68BAC", VA = "0xC68BAC", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xC68CE4", Offset = "0xC68CE4", VA = "0xC68CE4", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600137B")]
	[Address(RVA = "0xC68D0C", Offset = "0xC68D0C", VA = "0xC68D0C")]
	public NetworkConnection.State? ConnectionStateOf(NetworkConnection connection)
	{
		return null;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600137C")]
	[Address(RVA = "0xC68DA0", Offset = "0xC68DA0", VA = "0xC68DA0")]
	protected bool IsConnectedToDriver(NetworkConnection connection)
	{
		return default(bool);
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xC68DEC", Offset = "0xC68DEC", VA = "0xC68DEC")]
	private static RelayAllocationId ConvertAllocationIdBytes(byte[] allocationIdBytes)
	{
		return default(RelayAllocationId);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xC68E14", Offset = "0xC68E14", VA = "0xC68E14")]
	private static RelayConnectionData ConvertConnectionDataBytes(byte[] connectionData)
	{
		return default(RelayConnectionData);
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xC68E88", Offset = "0xC68E88", VA = "0xC68E88")]
	private static RelayHMACKey ConvertHMACKeyBytes(byte[] hmac)
	{
		return default(RelayHMACKey);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xC68F04", Offset = "0xC68F04", VA = "0xC68F04")]
	protected static NetworkEndPoint GetEndpointForAllocation(List<RelayServerEndpoint> endpoints, string ip, int port, out bool isSecure)
	{
		return default(NetworkEndPoint);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xC68FC4", Offset = "0xC68FC4", VA = "0xC68FC4")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__31))]
	protected Task BindToAllocation(NetworkEndPoint serverEndpoint, byte[] allocationIdBytes, byte[] connectionDataBytes, byte[] hostConnectionDataBytes, byte[] hmacKeyBytes, bool isSecure)
	{
		return null;
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xC69160", Offset = "0xC69160", VA = "0xC69160", Slot = "12")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xC69308", Offset = "0xC69308", VA = "0xC69308")]
	protected void ReceiveNetworkEvents(NetworkDriver driver)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xC69580", Offset = "0xC69580", VA = "0xC69580")]
	private void ProcessNetworkEvent(NetworkConnection conn, DataStreamReader strm, NetworkEvent.Type cmd)
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xC6982C", Offset = "0xC6982C", VA = "0xC6982C", Slot = "5")]
	private void P2PNode.Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xC69840", Offset = "0xC69840", VA = "0xC69840", Slot = "13")]
	protected virtual void BroadcastSend(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xC5D750", Offset = "0xC5D750", VA = "0xC5D750")]
	public void Broadcast(ReadOnlySpan<byte> messageBytes, bool reliable)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xC69848", Offset = "0xC69848", VA = "0xC69848")]
	private void SendToConnection(ReadOnlySpan<byte> messageBytes, bool reliable, NetworkConnection connection)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xC697AC", Offset = "0xC697AC", VA = "0xC697AC")]
	private byte[] ReadMessageContents(ref DataStreamReader strm)
	{
		return null;
	}

	[Token(Token = "0x600138A")]
	protected abstract void ProcessDisconnectEvent();

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xC5F0B8", Offset = "0xC5F0B8", VA = "0xC5F0B8")]
	public void Leave()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xC69A44", Offset = "0xC69A44", VA = "0xC69A44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xC69A48", Offset = "0xC69A48", VA = "0xC69A48", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xC69AB8", Offset = "0xC69AB8", VA = "0xC69AB8", Slot = "15")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xC69AE8", Offset = "0xC69AE8", VA = "0xC69AE8")]
	protected RelayUtpBase()
	{
	}
}
[Token(Token = "0x2000385")]
public class RelayUtpClient : RelayUtpBase
{
	[Token(Token = "0x2000386")]
	public class ConnectToRelayException : Exception
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xC6ABC0", Offset = "0xC6ABC0", VA = "0xC6ABC0")]
		public ConnectToRelayException()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xC6AC18", Offset = "0xC6AC18", VA = "0xC6AC18")]
		public ConnectToRelayException(string message)
		{
		}
	}

	[Token(Token = "0x2000387")]
	public class DisposeWhileConnectToRelayException : ConnectToRelayException
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xC6AC80", Offset = "0xC6AC80", VA = "0xC6AC80")]
		public DisposeWhileConnectToRelayException(string message)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000388")]
	[CompilerGenerated]
	private struct <Join>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string code;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debug;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xC6AC84", Offset = "0xC6AC84", VA = "0xC6AC84", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xC6B240", Offset = "0xC6B240", VA = "0xC6B240", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private struct <JoinAllocation>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<JoinAllocation> <>u__1;

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC6B24C", Offset = "0xC6B24C", VA = "0xC6B24C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC6B5E0", Offset = "0xC6B5E0", VA = "0xC6B5E0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200038A")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC6B5EC", Offset = "0xC6B5EC", VA = "0xC6B5EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC6B8E8", Offset = "0xC6B8E8", VA = "0xC6B8E8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200038B")]
	[CompilerGenerated]
	private struct <Connect>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC6B8F4", Offset = "0xC6B8F4", VA = "0xC6B8F4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC6BD5C", Offset = "0xC6BD5C", VA = "0xC6BD5C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private JoinAllocation _allocation;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private bool _firstUpdate;

	[Token(Token = "0x17000359")]
	public bool IsDriverConnectedToHost
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0xC6A4C8", Offset = "0xC6A4C8", VA = "0xC6A4C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action onHostDisconnected
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xC5F8E4", Offset = "0xC5F8E4", VA = "0xC5F8E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xC6A428", Offset = "0xC6A428", VA = "0xC6A428")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xC5F7D4", Offset = "0xC5F7D4", VA = "0xC5F7D4")]
	[AsyncStateMachine(typeof(<Join>d__6))]
	public Task Join(string code, bool debug = false)
	{
		return null;
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xC6A558", Offset = "0xC6A558", VA = "0xC6A558")]
	[AsyncStateMachine(typeof(<JoinAllocation>d__7))]
	private Task JoinAllocation()
	{
		return null;
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xC6A644", Offset = "0xC6A644", VA = "0xC6A644")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__8))]
	private Task BindToAllocation()
	{
		return null;
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xC6A730", Offset = "0xC6A730", VA = "0xC6A730")]
	[AsyncStateMachine(typeof(<Connect>d__11))]
	private Task Connect()
	{
		return null;
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xC6A81C", Offset = "0xC6A81C", VA = "0xC6A81C", Slot = "13")]
	protected override void BroadcastSend(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xC6A8D4", Offset = "0xC6A8D4", VA = "0xC6A8D4", Slot = "12")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xC6A92C", Offset = "0xC6A92C", VA = "0xC6A92C", Slot = "14")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xC6AAA8", Offset = "0xC6AAA8", VA = "0xC6AAA8")]
	public RelayUtpClient()
	{
	}
}
[Token(Token = "0x200038D")]
public class RelayUtpHost : RelayUtpBase
{
	[StructLayout(3)]
	[Token(Token = "0x200038E")]
	[CompilerGenerated]
	private struct <Allocate>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string region;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debug;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxConnections;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<string> <getJoinCodeTask>5__2;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC6DC8C", Offset = "0xC6DC8C", VA = "0xC6DC8C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC6E578", Offset = "0xC6E578", VA = "0xC6E578", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000391")]
	[CompilerGenerated]
	private struct <CreateAllocation>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxConnections;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string region;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<Allocation> <>u__1;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC6E9C4", Offset = "0xC6E9C4", VA = "0xC6E9C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC6ED60", Offset = "0xC6ED60", VA = "0xC6ED60", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000392")]
	[CompilerGenerated]
	private struct <GetJoinCodeAsync>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC6ED6C", Offset = "0xC6ED6C", VA = "0xC6ED6C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC6F0BC", Offset = "0xC6F0BC", VA = "0xC6F0BC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000393")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC6F114", Offset = "0xC6F114", VA = "0xC6F114", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC6F568", Offset = "0xC6F568", VA = "0xC6F568", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[SerializeField]
	private int numClients;

	[Token(Token = "0x4001595")]
	private const string connectionType = "udp";

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Allocation _allocation;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool _nothingMoreToAccept;

	[Token(Token = "0x1700035A")]
	public string chosenRegion
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xC6D2D4", Offset = "0xC6D2D4", VA = "0xC6D2D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC6D2DC", Offset = "0xC6D2DC", VA = "0xC6D2DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action onClientConnected
	{
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xC6D054", Offset = "0xC6D054", VA = "0xC6D054")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xC6D0F4", Offset = "0xC6D0F4", VA = "0xC6D0F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action onClientDisconnected
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xC6D194", Offset = "0xC6D194", VA = "0xC6D194")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC6D234", Offset = "0xC6D234", VA = "0xC6D234")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xC6D2EC", Offset = "0xC6D2EC", VA = "0xC6D2EC")]
	[AsyncStateMachine(typeof(<Allocate>d__13))]
	public Task<string> Allocate(int maxConnections, [Optional] string region, bool debug = false)
	{
		return null;
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xC6D430", Offset = "0xC6D430", VA = "0xC6D430")]
	[AsyncStateMachine(typeof(<CreateAllocation>d__14))]
	private Task CreateAllocation(int maxConnections, [Optional] string region)
	{
		return null;
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xC6D540", Offset = "0xC6D540", VA = "0xC6D540")]
	[AsyncStateMachine(typeof(<GetJoinCodeAsync>d__15))]
	private Task<string> GetJoinCodeAsync()
	{
		return null;
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xC6D64C", Offset = "0xC6D64C", VA = "0xC6D64C")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__16))]
	private Task BindToAllocation()
	{
		return null;
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xC6D738", Offset = "0xC6D738", VA = "0xC6D738", Slot = "12")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xC6D764", Offset = "0xC6D764", VA = "0xC6D764")]
	private void UpdateConnections()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xC6DA68", Offset = "0xC6DA68", VA = "0xC6DA68", Slot = "14")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xC6DB78", Offset = "0xC6DB78", VA = "0xC6DB78")]
	public RelayUtpHost()
	{
	}
}
[Token(Token = "0x2000395")]
public static class UnityAuth
{
	[Token(Token = "0x2000396")]
	private enum State
	{
		[Token(Token = "0x40015BD")]
		NotSignedIn,
		[Token(Token = "0x40015BE")]
		SigningIn,
		[Token(Token = "0x40015BF")]
		SignedIn
	}

	[StructLayout(3)]
	[Token(Token = "0x2000397")]
	[CompilerGenerated]
	private struct <TrySignInFallbackToAnonymous>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object <>7__wrap1;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xC6FA50", Offset = "0xC6FA50", VA = "0xC6FA50", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xC70050", Offset = "0xC70050", VA = "0xC70050", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000398")]
	[CompilerGenerated]
	private struct <SignInAnonymously>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xC7005C", Offset = "0xC7005C", VA = "0xC7005C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xC70494", Offset = "0xC70494", VA = "0xC70494", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000399")]
	[CompilerGenerated]
	private struct <SignIn>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InitializationOptions <options>5__2;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__3;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <timedOut>5__4;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC704A0", Offset = "0xC704A0", VA = "0xC704A0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC710BC", Offset = "0xC710BC", VA = "0xC710BC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static State _state;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Exception _ex;

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xC6F864", Offset = "0xC6F864", VA = "0xC6F864")]
	static UnityAuth()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xC6E4A8", Offset = "0xC6E4A8", VA = "0xC6E4A8")]
	[AsyncStateMachine(typeof(<TrySignInFallbackToAnonymous>d__4))]
	public static Task TrySignInFallbackToAnonymous()
	{
		return null;
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xC6F8AC", Offset = "0xC6F8AC", VA = "0xC6F8AC")]
	[AsyncStateMachine(typeof(<SignInAnonymously>d__5))]
	public static Task SignInAnonymously()
	{
		return null;
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xC6F97C", Offset = "0xC6F97C", VA = "0xC6F97C")]
	[AsyncStateMachine(typeof(<SignIn>d__6))]
	public static Task SignIn()
	{
		return null;
	}
}
[Token(Token = "0x200039A")]
public class ConnectionTest : MonoBehaviour
{
	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xC710C8", Offset = "0xC710C8", VA = "0xC710C8")]
	public ConnectionTest()
	{
	}
}
[Token(Token = "0x200039B")]
public abstract class UdpUtpBase : MonoBehaviour, P2PNode, IDisposable
{
	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool _debug;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected NetworkDriver _networkDriver;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected NetworkPipeline _reliablePipe;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	protected NetworkPipeline _unreliablePipe;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected List<NetworkConnection> _connections;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	protected bool _leaving;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private StatusCode _debug_lastStatusCode;

	[Token(Token = "0x1700035B")]
	public bool Connected
	{
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC714A0", Offset = "0xC714A0", VA = "0xC714A0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035C")]
	protected bool CreatedAndBound
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC71AB4", Offset = "0xC71AB4", VA = "0xC71AB4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC71AA8", Offset = "0xC71AA8", VA = "0xC71AA8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action onConnected
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xC710D0", Offset = "0xC710D0", VA = "0xC710D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xC7116C", Offset = "0xC7116C", VA = "0xC7116C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event Action onDisconnected
	{
		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC71208", Offset = "0xC71208", VA = "0xC71208")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xC712A4", Offset = "0xC712A4", VA = "0xC712A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC71340", Offset = "0xC71340", VA = "0xC71340", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC713F0", Offset = "0xC713F0", VA = "0xC713F0", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xC715AC", Offset = "0xC715AC", VA = "0xC715AC")]
	public NetworkConnection.State? ConnectionStateOf(NetworkConnection connection)
	{
		return null;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xC71640", Offset = "0xC71640", VA = "0xC71640")]
	public bool IsConnectedToDriver(NetworkConnection connection)
	{
		return default(bool);
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xC71718", Offset = "0xC71718", VA = "0xC71718", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xC719D4", Offset = "0xC719D4", VA = "0xC719D4")]
	protected NetworkEndPoint ConvertIPToUNet(IPEndPoint address)
	{
		return default(NetworkEndPoint);
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xC71ABC", Offset = "0xC71ABC", VA = "0xC71ABC")]
	protected void CreateAndBind(NetworkEndPoint networkEndPoint)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xC71D8C", Offset = "0xC71D8C", VA = "0xC71D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xC72248", Offset = "0xC72248", VA = "0xC72248", Slot = "10")]
	protected virtual void BoundUpdate()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xC71FDC", Offset = "0xC71FDC", VA = "0xC71FDC")]
	protected void ReceiveNetworkEvents()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xC7224C", Offset = "0xC7224C", VA = "0xC7224C")]
	private void ProcessNetworkEvent(NetworkConnection conn, DataStreamReader strm, NetworkEvent.Type cmd)
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xC723BC", Offset = "0xC723BC", VA = "0xC723BC")]
	private byte[] ReadMessageContents(ref DataStreamReader strm)
	{
		return null;
	}

	[Token(Token = "0x60013E9")]
	protected abstract void ProcessConnectEvent();

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xC7243C", Offset = "0xC7243C", VA = "0xC7243C")]
	protected void OnConnected()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xC72458", Offset = "0xC72458", VA = "0xC72458", Slot = "5")]
	private void P2PNode.Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xC72460", Offset = "0xC72460", VA = "0xC72460")]
	public void Broadcast(ReadOnlySpan<byte> messageBytes, bool reliable)
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xC725CC", Offset = "0xC725CC", VA = "0xC725CC")]
	private void SendToConnection(ReadOnlySpan<byte> messageBytes, bool reliable, NetworkConnection connection)
	{
	}

	[Token(Token = "0x60013EE")]
	protected abstract void ProcessDisconnectEvent();

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xC727B8", Offset = "0xC727B8", VA = "0xC727B8")]
	protected void OnDisconnected()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xC7171C", Offset = "0xC7171C", VA = "0xC7171C")]
	public void Leave()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xC727D4", Offset = "0xC727D4", VA = "0xC727D4", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xC728D8", Offset = "0xC728D8", VA = "0xC728D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xC728DC", Offset = "0xC728DC", VA = "0xC728DC")]
	protected UdpUtpBase()
	{
	}
}
[Token(Token = "0x200039C")]
public class UdpUtpClient : UdpUtpBase
{
	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xC72968", Offset = "0xC72968", VA = "0xC72968")]
	public void Connect(IPEndPoint localAddress, IPEndPoint remoteAddress, bool debug)
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xC72B14", Offset = "0xC72B14", VA = "0xC72B14", Slot = "11")]
	protected override void ProcessConnectEvent()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xC72C0C", Offset = "0xC72C0C", VA = "0xC72C0C", Slot = "12")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xC72D64", Offset = "0xC72D64", VA = "0xC72D64")]
	public UdpUtpClient()
	{
	}
}
[Token(Token = "0x200039D")]
public class UdpUtpHost : UdpUtpBase
{
	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private readonly IPAddress _hostZeroAddress;

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xC72D68", Offset = "0xC72D68", VA = "0xC72D68")]
	public void Listen(IPEndPoint add, bool debug)
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xC72F10", Offset = "0xC72F10", VA = "0xC72F10", Slot = "10")]
	protected override void BoundUpdate()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xC730B4", Offset = "0xC730B4", VA = "0xC730B4", Slot = "11")]
	protected override void ProcessConnectEvent()
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xC73174", Offset = "0xC73174", VA = "0xC73174", Slot = "12")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xC73264", Offset = "0xC73264", VA = "0xC73264")]
	public UdpUtpHost()
	{
	}
}
[Token(Token = "0x200039E")]
public class EnterPinUI : Area
{
	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject versusTitle;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject coOpTitle;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PINKnob knob1;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PINKnob knob2;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PINKnob knob3;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIItemTransitions findingMatchPanel;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions goButton;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnterPinUI inst;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isSearchingForMatch;

	[Token(Token = "0x1700035D")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC732E8", Offset = "0xC732E8", VA = "0xC732E8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035E")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC732F0", Offset = "0xC732F0", VA = "0xC732F0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035F")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC732F8", Offset = "0xC732F8", VA = "0xC732F8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000360")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC73300", Offset = "0xC73300", VA = "0xC73300", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000361")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0xC73308", Offset = "0xC73308", VA = "0xC73308", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xC73310", Offset = "0xC73310", VA = "0xC73310", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xC733D4", Offset = "0xC733D4", VA = "0xC733D4")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xC733FC", Offset = "0xC733FC", VA = "0xC733FC")]
	private void UpdateGoButton()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xC73458", Offset = "0xC73458", VA = "0xC73458", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xC73508", Offset = "0xC73508", VA = "0xC73508")]
	public void abortAndHide()
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xC735C8", Offset = "0xC735C8", VA = "0xC735C8", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xC73654", Offset = "0xC73654", VA = "0xC73654")]
	private string getPIN()
	{
		return null;
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xC736E4", Offset = "0xC736E4", VA = "0xC736E4")]
	public void debugSetPIN(string pin)
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xC738E0", Offset = "0xC738E0", VA = "0xC738E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xC73A64", Offset = "0xC73A64", VA = "0xC73A64")]
	public void onGoClicked()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xC73544", Offset = "0xC73544", VA = "0xC73544")]
	public void onCancelFindClicked()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xC73B20", Offset = "0xC73B20", VA = "0xC73B20")]
	public EnterPinUI()
	{
	}
}
[Token(Token = "0x200039F")]
public class FindFriendUI : Area
{
	[Token(Token = "0x20003A0")]
	[CompilerGenerated]
	private sealed class <updateCo>d__42 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FindFriendUI <>4__this;

		[Token(Token = "0x1700036B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xC74C6C", Offset = "0xC74C6C", VA = "0xC74C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xC74CB4", Offset = "0xC74CB4", VA = "0xC74CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC748F8", Offset = "0xC748F8", VA = "0xC748F8")]
		[DebuggerHidden]
		public <updateCo>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC74BB0", Offset = "0xC74BB0", VA = "0xC74BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC74BB4", Offset = "0xC74BB4", VA = "0xC74BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC74C74", Offset = "0xC74C74", VA = "0xC74C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InvitableFriend[] friendItems;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject noFriends;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TouchItem nextButtonTouchItem;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TouchItem prevButtonTouchItem;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PageButton page1Button;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int maxNumPages;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float updateInterval;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions newCoOpIndicator;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _firstShownIndex;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FindFriendUI inst;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DebugFriends _debugFriends;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CoroutineHandle updateCoroutineRef;

	[Token(Token = "0x17000362")]
	private int curPage
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC73B28", Offset = "0xC73B28", VA = "0xC73B28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000363")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC73C3C", Offset = "0xC73C3C", VA = "0xC73C3C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000364")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC73C44", Offset = "0xC73C44", VA = "0xC73C44", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000365")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC73C4C", Offset = "0xC73C4C", VA = "0xC73C4C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000366")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC73C54", Offset = "0xC73C54", VA = "0xC73C54", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000367")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC73C5C", Offset = "0xC73C5C", VA = "0xC73C5C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000368")]
	private int numFriendsPerPage
	{
		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC73C20", Offset = "0xC73C20", VA = "0xC73C20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000369")]
	private int numDebugFriends
	{
		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC73C64", Offset = "0xC73C64", VA = "0xC73C64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700036A")]
	private int numFriends
	{
		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC73CBC", Offset = "0xC73CBC", VA = "0xC73CBC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xC73D44", Offset = "0xC73D44", VA = "0xC73D44")]
	private RnxPlatform.User getFriend(int i)
	{
		return null;
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xC73E00", Offset = "0xC73E00", VA = "0xC73E00", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xC73E64", Offset = "0xC73E64", VA = "0xC73E64", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xC74004", Offset = "0xC74004", VA = "0xC74004")]
	private void loadDebugFriends()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xC74470", Offset = "0xC74470", VA = "0xC74470", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xC74604", Offset = "0xC74604", VA = "0xC74604", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xC7465C", Offset = "0xC7465C", VA = "0xC7465C")]
	public void onNextClicked()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xC74680", Offset = "0xC74680", VA = "0xC74680")]
	public void onPrevClicked()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xC746A4", Offset = "0xC746A4", VA = "0xC746A4")]
	public void onPageSelected(TextMeshPro text)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xC740F4", Offset = "0xC740F4", VA = "0xC740F4")]
	private void showPage(int firstShownIndex)
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xC742E8", Offset = "0xC742E8", VA = "0xC742E8")]
	private void updateData()
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xC748F0", Offset = "0xC748F0", VA = "0xC748F0")]
	private void onFriendsInfoUpdated()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xC74360", Offset = "0xC74360", VA = "0xC74360")]
	[IteratorStateMachine(typeof(<updateCo>d__42))]
	private IEnumerator<float> updateCo()
	{
		return null;
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xC74920", Offset = "0xC74920", VA = "0xC74920")]
	public void onFriendSelected(RnxPlatform.User info)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xC74AD4", Offset = "0xC74AD4", VA = "0xC74AD4")]
	public void onEnterPINClicked()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xC74B48", Offset = "0xC74B48", VA = "0xC74B48")]
	private void onFindFriendCanceled()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xC74B9C", Offset = "0xC74B9C", VA = "0xC74B9C")]
	public FindFriendUI()
	{
	}
}
[Token(Token = "0x20003A1")]
public class FindingGameUI : MonoBehaviour
{
	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tipObject;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FindingGameUI inst;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool searchingForOpponentInBackground;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelectableTouchItem autoAccept;

	[Token(Token = "0x40015FB")]
	private const string AUTO_ACCEPT_KEY = "Auto Accept Multiplayer Invitations";

	[Token(Token = "0x1700036D")]
	public bool shown
	{
		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC74D10", Offset = "0xC74D10", VA = "0xC74D10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036E")]
	public bool AutoAcceptInvitations
	{
		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC74D18", Offset = "0xC74D18", VA = "0xC74D18")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC74D20", Offset = "0xC74D20", VA = "0xC74D20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xC74D2C", Offset = "0xC74D2C", VA = "0xC74D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xC74F00", Offset = "0xC74F00", VA = "0xC74F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xC74F74", Offset = "0xC74F74", VA = "0xC74F74")]
	public void show(bool bFirstTime = false)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xC75084", Offset = "0xC75084", VA = "0xC75084")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xC75118", Offset = "0xC75118", VA = "0xC75118")]
	public void hide()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xC74F0C", Offset = "0xC74F0C", VA = "0xC74F0C")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xC751BC", Offset = "0xC751BC", VA = "0xC751BC")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xC751C0", Offset = "0xC751C0", VA = "0xC751C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xC75090", Offset = "0xC75090", VA = "0xC75090")]
	public void onCancelClicked()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xC752C0", Offset = "0xC752C0", VA = "0xC752C0")]
	public void OnAutoAcceptChanged(bool state)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xC7531C", Offset = "0xC7531C", VA = "0xC7531C")]
	public FindingGameUI()
	{
	}
}
[Token(Token = "0x20003A2")]
public class GameFoundUI : Area
{
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class WaitingForPlayer
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem playButtonTouchItem;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem cancelButtonTouchItem;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GraphBar playButtonCountdown;

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC76374", Offset = "0xC76374", VA = "0xC76374")]
		public WaitingForPlayer()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A4")]
	public class OpponentDeclined
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC7637C", Offset = "0xC7637C", VA = "0xC7637C")]
		public OpponentDeclined()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A5")]
	public class WaitingForOpponent
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC76384", Offset = "0xC76384", VA = "0xC76384")]
		public WaitingForOpponent()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	[CompilerGenerated]
	private sealed class <safetyDisabledPeriod>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameFoundUI <>4__this;

		[Token(Token = "0x17000374")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0xC76440", Offset = "0xC76440", VA = "0xC76440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xC76488", Offset = "0xC76488", VA = "0xC76488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC75A10", Offset = "0xC75A10", VA = "0xC75A10")]
		[DebuggerHidden]
		public <safetyDisabledPeriod>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC7638C", Offset = "0xC7638C", VA = "0xC7638C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC76390", Offset = "0xC76390", VA = "0xC76390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC76448", Offset = "0xC76448", VA = "0xC76448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A7")]
	[CompilerGenerated]
	private sealed class <updateCountdown>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameFoundUI <>4__this;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x17000376")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0xC76614", Offset = "0xC76614", VA = "0xC76614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0xC7665C", Offset = "0xC7665C", VA = "0xC7665C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC75E08", Offset = "0xC75E08", VA = "0xC75E08")]
		[DebuggerHidden]
		public <updateCountdown>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC764E4", Offset = "0xC764E4", VA = "0xC764E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC764E8", Offset = "0xC764E8", VA = "0xC764E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC7661C", Offset = "0xC7661C", VA = "0xC7661C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] versusObjects;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] coOpObjects;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WaitingForPlayer waitingForPlayerObjects;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OpponentDeclined opponentDeclinedObjects;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WaitingForOpponent waitingForOpponentObjects;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameFoundUI inst;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoMode _coMode;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _playerAccepted;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool _opponentAccepted;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CoroutineHandle _updateCountdownCo;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private CoroutineHandle _safetyDisabledPeriodCo;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TaskCompletionSource<bool?> _promise;

	[Token(Token = "0x1700036F")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC75324", Offset = "0xC75324", VA = "0xC75324", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000370")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC7532C", Offset = "0xC7532C", VA = "0xC7532C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000371")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC75334", Offset = "0xC75334", VA = "0xC75334", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000372")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC7533C", Offset = "0xC7533C", VA = "0xC7533C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000373")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC75344", Offset = "0xC75344", VA = "0xC75344", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xC7534C", Offset = "0xC7534C", VA = "0xC7534C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xC753B0", Offset = "0xC753B0", VA = "0xC753B0")]
	public TaskCompletionSource<bool?> ShowGameFoundAcceptPopup(CoMode coMode)
	{
		return null;
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xC7544C", Offset = "0xC7544C", VA = "0xC7544C")]
	private void Show(CoMode coMode)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xC75638", Offset = "0xC75638", VA = "0xC75638", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xC75688", Offset = "0xC75688", VA = "0xC75688", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xC7599C", Offset = "0xC7599C", VA = "0xC7599C")]
	[IteratorStateMachine(typeof(<safetyDisabledPeriod>d__30))]
	private IEnumerator<float> safetyDisabledPeriod()
	{
		return null;
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xC75954", Offset = "0xC75954", VA = "0xC75954")]
	private void enableButtons(bool enable)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xC75A38", Offset = "0xC75A38", VA = "0xC75A38")]
	private void enableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xC75AB0", Offset = "0xC75AB0", VA = "0xC75AB0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xC75BE8", Offset = "0xC75BE8", VA = "0xC75BE8")]
	public void Abort()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xC758E0", Offset = "0xC758E0", VA = "0xC758E0")]
	[IteratorStateMachine(typeof(<updateCountdown>d__35))]
	private IEnumerator<float> updateCountdown()
	{
		return null;
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xC75E30", Offset = "0xC75E30", VA = "0xC75E30")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xC75E34", Offset = "0xC75E34", VA = "0xC75E34", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xC75E38", Offset = "0xC75E38", VA = "0xC75E38")]
	public void OnPlayClicked()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xC75C38", Offset = "0xC75C38", VA = "0xC75C38")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xC76044", Offset = "0xC76044", VA = "0xC76044")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xC7615C", Offset = "0xC7615C", VA = "0xC7615C")]
	public void OnOpponentAccepted()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xC76184", Offset = "0xC76184", VA = "0xC76184")]
	public void OnOpponentDeclined()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xC76238", Offset = "0xC76238", VA = "0xC76238")]
	public void OnBackClicked()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xC7624C", Offset = "0xC7624C", VA = "0xC7624C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xC7636C", Offset = "0xC7636C", VA = "0xC7636C")]
	public GameFoundUI()
	{
	}
}
[Token(Token = "0x20003A8")]
public class GroupLaunchUI : Area
{
	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GroupLaunchUI inst;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject waitingRoot;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waitingUnknownRoot;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject fullRoot;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro friendName;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image friendAvatar;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _defaultFriendName;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Sprite _defaultAvatar;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isWaitingForConnection;

	[Token(Token = "0x17000378")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC766B8", Offset = "0xC766B8", VA = "0xC766B8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000379")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC766C0", Offset = "0xC766C0", VA = "0xC766C0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700037A")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC766C8", Offset = "0xC766C8", VA = "0xC766C8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700037B")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC766D0", Offset = "0xC766D0", VA = "0xC766D0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700037C")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC766D8", Offset = "0xC766D8", VA = "0xC766D8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xC766E0", Offset = "0xC766E0", VA = "0xC766E0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xC7678C", Offset = "0xC7678C", VA = "0xC7678C", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xC767DC", Offset = "0xC767DC", VA = "0xC767DC")]
	private void OnMatchIsFull()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xC76914", Offset = "0xC76914", VA = "0xC76914")]
	public void showUnknown(ulong roomId, CoMode coMode)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xC76924", Offset = "0xC76924", VA = "0xC76924")]
	public void show(ulong roomId, string friendName, Texture2D avatarImage, CoMode coMode)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xC76AC8", Offset = "0xC76AC8", VA = "0xC76AC8")]
	public void UpdateAvatarImage(Texture2D avatarImage)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xC76BC4", Offset = "0xC76BC4", VA = "0xC76BC4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xC76D84", Offset = "0xC76D84", VA = "0xC76D84", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xC76E6C", Offset = "0xC76E6C", VA = "0xC76E6C")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xC76E70", Offset = "0xC76E70", VA = "0xC76E70", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xC76E74", Offset = "0xC76E74", VA = "0xC76E74")]
	public void OnMatchConnected()
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xC76F2C", Offset = "0xC76F2C", VA = "0xC76F2C")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xC77098", Offset = "0xC77098", VA = "0xC77098")]
	public void OnFullOKClicked()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xC77150", Offset = "0xC77150", VA = "0xC77150")]
	public GroupLaunchUI()
	{
	}
}
[Token(Token = "0x20003A9")]
public class InvitableFriend : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class PlayerObjects
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro name;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize status;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject statusTipAvailable;

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xC77484", Offset = "0xC77484", VA = "0xC77484")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public delegate void OnSelected(RnxPlatform.User friend);

	[Token(Token = "0x20003AC")]
	private enum PlayerStatus
	{
		[Token(Token = "0x4001627")]
		Unavailable,
		[Token(Token = "0x4001628")]
		Busy,
		[Token(Token = "0x4001629")]
		Available
	}

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OnSelected _onSelected;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RnxPlatform.User _friend;

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xC74854", Offset = "0xC74854", VA = "0xC74854")]
	public void show(RnxPlatform.User info, OnSelected onSelected)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xC748B4", Offset = "0xC748B4", VA = "0xC748B4")]
	public void hide()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xC77158", Offset = "0xC77158", VA = "0xC77158")]
	public void update()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xC7740C", Offset = "0xC7740C", VA = "0xC7740C")]
	private PlayerStatus determinePlayerStatus()
	{
		return default(PlayerStatus);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xC77454", Offset = "0xC77454", VA = "0xC77454")]
	public void onClicked()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xC7747C", Offset = "0xC7747C", VA = "0xC7747C")]
	public InvitableFriend()
	{
	}
}
[Token(Token = "0x20003AD")]
public class InvitedByFriendUI : Area
{
	[Token(Token = "0x20003AE")]
	[CompilerGenerated]
	private sealed class <NotificationTimerCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <buttonTimer>5__2;

		[Token(Token = "0x17000382")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xC78980", Offset = "0xC78980", VA = "0xC78980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xC789C8", Offset = "0xC789C8", VA = "0xC789C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC77898", Offset = "0xC77898", VA = "0xC77898")]
		[DebuggerHidden]
		public <NotificationTimerCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC7860C", Offset = "0xC7860C", VA = "0xC7860C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC78610", Offset = "0xC78610", VA = "0xC78610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC78988", Offset = "0xC78988", VA = "0xC78988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AF")]
	[CompilerGenerated]
	private sealed class <safetyDisabledPeriod>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x17000384")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xC78AE8", Offset = "0xC78AE8", VA = "0xC78AE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xC78B30", Offset = "0xC78B30", VA = "0xC78B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC77E24", Offset = "0xC77E24", VA = "0xC77E24")]
		[DebuggerHidden]
		public <safetyDisabledPeriod>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC78A24", Offset = "0xC78A24", VA = "0xC78A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC78A28", Offset = "0xC78A28", VA = "0xC78A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC78AF0", Offset = "0xC78AF0", VA = "0xC78AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B0")]
	[CompilerGenerated]
	private sealed class <UpdateCountdown>d__38 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <startTime>5__2;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <endTime>5__3;

		[Token(Token = "0x17000386")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xC78CC4", Offset = "0xC78CC4", VA = "0xC78CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xC78D0C", Offset = "0xC78D0C", VA = "0xC78D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC780C0", Offset = "0xC780C0", VA = "0xC780C0")]
		[DebuggerHidden]
		public <UpdateCountdown>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC78B8C", Offset = "0xC78B8C", VA = "0xC78B8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC78B90", Offset = "0xC78B90", VA = "0xC78B90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xC78CCC", Offset = "0xC78CCC", VA = "0xC78CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B1")]
	[CompilerGenerated]
	private sealed class <JoinFriendInviteCo>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator<float> <a>5__2;

		[Token(Token = "0x17000388")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xC7900C", Offset = "0xC7900C", VA = "0xC7900C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000389")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xC79054", Offset = "0xC79054", VA = "0xC79054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xC78538", Offset = "0xC78538", VA = "0xC78538")]
		[DebuggerHidden]
		public <JoinFriendInviteCo>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC78D68", Offset = "0xC78D68", VA = "0xC78D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC78D6C", Offset = "0xC78D6C", VA = "0xC78D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC79014", Offset = "0xC79014", VA = "0xC79014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B3")]
	[CompilerGenerated]
	private sealed class <AbortCurrentArena>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x1700038A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xC7947C", Offset = "0xC7947C", VA = "0xC7947C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xC794C4", Offset = "0xC794C4", VA = "0xC794C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC785D4", Offset = "0xC785D4", VA = "0xC785D4")]
		[DebuggerHidden]
		public <AbortCurrentArena>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC791B8", Offset = "0xC791B8", VA = "0xC791B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC791BC", Offset = "0xC791BC", VA = "0xC791BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC79484", Offset = "0xC79484", VA = "0xC79484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image opponentImage;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro incomingTxt;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LocalizedString versusLocalizedText;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LocalizedString coOpLocalizedText;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject warningText;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TouchItem acceptButtonTouchItem;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TouchItem declineButtonTouchItem;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GraphBar playButtonCountdown;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InvitedByFriendUI inst;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RnxPlatform.User _friendInfo;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CoMode _coMode;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float menuButtonNotificationTimePeriod;

	[Token(Token = "0x4001636")]
	private const ushort hapticIntensity = 2000;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TaskCompletionSource<bool> _invitePopupPromise;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CoroutineHandle _notificationTimerCo;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private CoroutineHandle _updateCountdownCo;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _safetyDisabledPeriodCo;

	[Token(Token = "0x1700037D")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC774CC", Offset = "0xC774CC", VA = "0xC774CC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700037E")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC774D4", Offset = "0xC774D4", VA = "0xC774D4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700037F")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC774DC", Offset = "0xC774DC", VA = "0xC774DC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000380")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC774E4", Offset = "0xC774E4", VA = "0xC774E4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000381")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC774EC", Offset = "0xC774EC", VA = "0xC774EC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xC774F4", Offset = "0xC774F4", VA = "0xC774F4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xC77558", Offset = "0xC77558", VA = "0xC77558")]
	public TaskCompletionSource<bool> ShowInvitePopup(RnxPlatform.User friendInfo, CoMode coMode)
	{
		return null;
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xC77824", Offset = "0xC77824", VA = "0xC77824")]
	[IteratorStateMachine(typeof(<NotificationTimerCo>d__27))]
	private IEnumerator<float> NotificationTimerCo()
	{
		return null;
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xC778C0", Offset = "0xC778C0", VA = "0xC778C0", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xC77910", Offset = "0xC77910", VA = "0xC77910")]
	private void OnInvitationCanceled()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xC77990", Offset = "0xC77990", VA = "0xC77990", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xC77CE4", Offset = "0xC77CE4", VA = "0xC77CE4")]
	private void SetIncomingText()
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xC77DB0", Offset = "0xC77DB0", VA = "0xC77DB0")]
	[IteratorStateMachine(typeof(<safetyDisabledPeriod>d__34))]
	private IEnumerator<float> safetyDisabledPeriod()
	{
		return null;
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xC77D7C", Offset = "0xC77D7C", VA = "0xC77D7C")]
	private void EnableButtons(bool enable)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xC77E4C", Offset = "0xC77E4C", VA = "0xC77E4C")]
	private void EnableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xC77EC4", Offset = "0xC77EC4", VA = "0xC77EC4", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xC77C70", Offset = "0xC77C70", VA = "0xC77C70")]
	[IteratorStateMachine(typeof(<UpdateCountdown>d__38))]
	private IEnumerator<float> UpdateCountdown()
	{
		return null;
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xC780E8", Offset = "0xC780E8", VA = "0xC780E8")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xC780EC", Offset = "0xC780EC", VA = "0xC780EC", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xC780F0", Offset = "0xC780F0", VA = "0xC780F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xC7838C", Offset = "0xC7838C", VA = "0xC7838C")]
	public void OnDeclineClicked()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xC78428", Offset = "0xC78428", VA = "0xC78428")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xC78210", Offset = "0xC78210", VA = "0xC78210")]
	public void OnAcceptClicked()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xC784C4", Offset = "0xC784C4", VA = "0xC784C4")]
	[IteratorStateMachine(typeof(<JoinFriendInviteCo>d__45))]
	private IEnumerator<float> JoinFriendInviteCo()
	{
		return null;
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xC78560", Offset = "0xC78560", VA = "0xC78560")]
	[IteratorStateMachine(typeof(<AbortCurrentArena>d__46))]
	private IEnumerator<float> AbortCurrentArena()
	{
		return null;
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xC785FC", Offset = "0xC785FC", VA = "0xC785FC")]
	public InvitedByFriendUI()
	{
	}
}
[Token(Token = "0x20003B4")]
public class InvitingFriendUI : Area
{
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class WaitingObjects
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizeFormatted waitingForPlayerName;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphBar cancelButtonCountdown;

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xC79EA4", Offset = "0xC79EA4", VA = "0xC79EA4")]
		public WaitingObjects()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B6")]
	public class DeclinedObjects
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizeFormatted declinedText;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC79EAC", Offset = "0xC79EAC", VA = "0xC79EAC")]
		public DeclinedObjects()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	private enum State
	{
		[Token(Token = "0x400165D")]
		Hidden,
		[Token(Token = "0x400165E")]
		Waiting,
		[Token(Token = "0x400165F")]
		Declined
	}

	[Token(Token = "0x20003B8")]
	[CompilerGenerated]
	private sealed class <UpdateCountdown>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitingFriendUI <>4__this;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <duration>5__3;

		[Token(Token = "0x17000391")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xC79FE4", Offset = "0xC79FE4", VA = "0xC79FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000392")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xC7A02C", Offset = "0xC7A02C", VA = "0xC7A02C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC79DA8", Offset = "0xC79DA8", VA = "0xC79DA8")]
		[DebuggerHidden]
		public <UpdateCountdown>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC79EB4", Offset = "0xC79EB4", VA = "0xC79EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC79EB8", Offset = "0xC79EB8", VA = "0xC79EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC79FEC", Offset = "0xC79FEC", VA = "0xC79FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaitingObjects waitingObjects;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DeclinedObjects declinedObjects;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InvitingFriendUI inst;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State _state;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RnxPlatform.User _friendInfo;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action _onCancel;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle? _updateCountdownCo;

	[Token(Token = "0x1700038C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC79520", Offset = "0xC79520", VA = "0xC79520", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC79528", Offset = "0xC79528", VA = "0xC79528", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC79530", Offset = "0xC79530", VA = "0xC79530", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC79538", Offset = "0xC79538", VA = "0xC79538", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000390")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC79540", Offset = "0xC79540", VA = "0xC79540", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xC79548", Offset = "0xC79548", VA = "0xC79548", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xC74A6C", Offset = "0xC74A6C", VA = "0xC74A6C")]
	public void show(RnxPlatform.User friendInfo, Action onCancel)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xC795AC", Offset = "0xC795AC", VA = "0xC795AC", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xC795FC", Offset = "0xC795FC", VA = "0xC795FC", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xC7985C", Offset = "0xC7985C", VA = "0xC7985C")]
	public void OnDeclined()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xC79B38", Offset = "0xC79B38", VA = "0xC79B38", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xC79CA8", Offset = "0xC79CA8", VA = "0xC79CA8")]
	private void StartCountdown()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xC797E8", Offset = "0xC797E8", VA = "0xC797E8")]
	[IteratorStateMachine(typeof(<UpdateCountdown>d__27))]
	private IEnumerator<float> UpdateCountdown()
	{
		return null;
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xC79DD0", Offset = "0xC79DD0", VA = "0xC79DD0")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xC79DD4", Offset = "0xC79DD4", VA = "0xC79DD4", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xC79DD8", Offset = "0xC79DD8", VA = "0xC79DD8")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xC79E14", Offset = "0xC79E14", VA = "0xC79E14")]
	public void OnBackClicked()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xC79E28", Offset = "0xC79E28", VA = "0xC79E28")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xC79E9C", Offset = "0xC79E9C", VA = "0xC79E9C")]
	public InvitingFriendUI()
	{
	}
}
[Token(Token = "0x20003B9")]
public class MultiplayerFindUI : Area
{
	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TouchItem findButton;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions newCoOpIndicator;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerFindUI inst;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _versusSelected;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _coOpSelected;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UIItemTransitions _findBtnTrans;

	[Token(Token = "0x17000393")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC7A088", Offset = "0xC7A088", VA = "0xC7A088", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000394")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC7A090", Offset = "0xC7A090", VA = "0xC7A090", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000395")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC7A098", Offset = "0xC7A098", VA = "0xC7A098", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000396")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC7A0A0", Offset = "0xC7A0A0", VA = "0xC7A0A0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000397")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC7A0A8", Offset = "0xC7A0A8", VA = "0xC7A0A8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0xC7A0B0", Offset = "0xC7A0B0", VA = "0xC7A0B0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xC7A1A0", Offset = "0xC7A1A0", VA = "0xC7A1A0")]
	private void OnOfflineStateChanged(bool _)
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xC7A214", Offset = "0xC7A214", VA = "0xC7A214", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xC7A26C", Offset = "0xC7A26C", VA = "0xC7A26C", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xC7A2C4", Offset = "0xC7A2C4", VA = "0xC7A2C4")]
	public void onVersusSelected()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xC7A2D0", Offset = "0xC7A2D0", VA = "0xC7A2D0")]
	public void onVersusUnselected()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xC7A2D8", Offset = "0xC7A2D8", VA = "0xC7A2D8")]
	public void onCoOpSelected()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xC7A2E4", Offset = "0xC7A2E4", VA = "0xC7A2E4")]
	public void onCoOpUnselected()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xC7A1A4", Offset = "0xC7A1A4", VA = "0xC7A1A4")]
	private void updateFindButton()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xC7A2EC", Offset = "0xC7A2EC", VA = "0xC7A2EC")]
	private void EnableFindButton(bool enable)
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xC7A310", Offset = "0xC7A310", VA = "0xC7A310")]
	public void onFindClicked()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xC7A3DC", Offset = "0xC7A3DC", VA = "0xC7A3DC")]
	public void startRanked(CoModes coModes)
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xC7A49C", Offset = "0xC7A49C", VA = "0xC7A49C")]
	public MultiplayerFindUI()
	{
	}
}
[Token(Token = "0x20003BA")]
public class MultiplayerMenuUI : Area
{
	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitions findNewIndicator;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions inviteNewIndicator;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerMenuUI inst;

	[Token(Token = "0x17000398")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xC7A4A4", Offset = "0xC7A4A4", VA = "0xC7A4A4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000399")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xC7A4AC", Offset = "0xC7A4AC", VA = "0xC7A4AC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039A")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xC7A4B4", Offset = "0xC7A4B4", VA = "0xC7A4B4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039B")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC7A4BC", Offset = "0xC7A4BC", VA = "0xC7A4BC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039C")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC7A4C4", Offset = "0xC7A4C4", VA = "0xC7A4C4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xC7A4CC", Offset = "0xC7A4CC", VA = "0xC7A4CC", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xC7A530", Offset = "0xC7A530", VA = "0xC7A530", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xC7A598", Offset = "0xC7A598", VA = "0xC7A598", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xC7A628", Offset = "0xC7A628", VA = "0xC7A628")]
	public void onFindClicked()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xC7A69C", Offset = "0xC7A69C", VA = "0xC7A69C")]
	public void onFriendlyClicked()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xC7A710", Offset = "0xC7A710", VA = "0xC7A710")]
	public MultiplayerMenuUI()
	{
	}
}
[Token(Token = "0x20003BB")]
public class MultiplayerMiniProfiles : MonoBehaviour
{
	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xC7A718", Offset = "0xC7A718", VA = "0xC7A718")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xC7A770", Offset = "0xC7A770", VA = "0xC7A770")]
	public void show()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xC7A790", Offset = "0xC7A790", VA = "0xC7A790")]
	public void hide()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xC7A7B0", Offset = "0xC7A7B0", VA = "0xC7A7B0")]
	public MultiplayerMiniProfiles()
	{
	}
}
[Token(Token = "0x20003BC")]
public class MultiplayerScoreboardUI : Area
{
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x20003BE")]
		public class CheckersBandMaterials
		{
			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material neutral;

			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material player1Won;

			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material player2Won;

			[Token(Token = "0x6001505")]
			[Address(RVA = "0xC7B3F8", Offset = "0xC7B3F8", VA = "0xC7B3F8")]
			public CheckersBandMaterials()
			{
			}
		}

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro setName;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image setImage;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer checkersBand;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CheckersBandMaterials checkersBandMaterials;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiplayerMiniProfiles miniProfiles;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC7B3F0", Offset = "0xC7B3F0", VA = "0xC7B3F0")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003BF")]
	public class WinIcons
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite endOfContent;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite timesUp;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite knockOut;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite TKO;

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC7B400", Offset = "0xC7B400", VA = "0xC7B400")]
		public WinIcons()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C0")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x20003C1")]
		public class Round
		{
			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject win;

			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image icon;

			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions chromatic;

			[Token(Token = "0x6001508")]
			[Address(RVA = "0xC7B410", Offset = "0xC7B410", VA = "0xC7B410")]
			public Round()
			{
			}
		}

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro name;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numRoundsWonTexts;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Round[] rounds;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xC7B408", Offset = "0xC7B408", VA = "0xC7B408")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public General general;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WinIcons winIcons;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerObjects player1;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerObjects player2;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _player1WonLastRound;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _player2WonLastRound;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _player1Name;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _player2Name;

	[Token(Token = "0x1700039D")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC7A7B8", Offset = "0xC7A7B8", VA = "0xC7A7B8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039E")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC7A7C0", Offset = "0xC7A7C0", VA = "0xC7A7C0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039F")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC7A7C8", Offset = "0xC7A7C8", VA = "0xC7A7C8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A0")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC7A7D0", Offset = "0xC7A7D0", VA = "0xC7A7D0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A1")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC7A7D8", Offset = "0xC7A7D8", VA = "0xC7A7D8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xC7A7E0", Offset = "0xC7A7E0", VA = "0xC7A7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xC7A984", Offset = "0xC7A984", VA = "0xC7A984", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xC7B000", Offset = "0xC7B000", VA = "0xC7B000")]
	private void showWinIcon(PlayerID playerID, int roundIndex)
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xC7B218", Offset = "0xC7B218", VA = "0xC7B218", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xC7B3E8", Offset = "0xC7B3E8", VA = "0xC7B3E8")]
	public MultiplayerScoreboardUI()
	{
	}
}
[Token(Token = "0x20003C2")]
public class MultiplayerUI : Area
{
	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup modesTransitionsGroup;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUI inst;

	[Token(Token = "0x170003A2")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001509")]
		[Address(RVA = "0xC7B418", Offset = "0xC7B418", VA = "0xC7B418", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A3")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600150A")]
		[Address(RVA = "0xC7B420", Offset = "0xC7B420", VA = "0xC7B420", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A4")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600150B")]
		[Address(RVA = "0xC7B428", Offset = "0xC7B428", VA = "0xC7B428", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A5")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600150C")]
		[Address(RVA = "0xC7B430", Offset = "0xC7B430", VA = "0xC7B430", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A6")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600150D")]
		[Address(RVA = "0xC7B438", Offset = "0xC7B438", VA = "0xC7B438", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xC7B440", Offset = "0xC7B440", VA = "0xC7B440", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xC7B4A4", Offset = "0xC7B4A4", VA = "0xC7B4A4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xC7B644", Offset = "0xC7B644", VA = "0xC7B644")]
	private void OnServerOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xC7B730", Offset = "0xC7B730", VA = "0xC7B730", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xC7B7BC", Offset = "0xC7B7BC", VA = "0xC7B7BC", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xC7B8F4", Offset = "0xC7B8F4", VA = "0xC7B8F4")]
	public void onVersusLeaderboardClicked()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xC7BA38", Offset = "0xC7BA38", VA = "0xC7BA38")]
	public void onCoOpLeaderboardClicked()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xC7BB78", Offset = "0xC7BB78", VA = "0xC7BB78")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xC7BB98", Offset = "0xC7BB98", VA = "0xC7BB98")]
	public MultiplayerUI()
	{
	}
}
[Token(Token = "0x20003C3")]
public class InfectedMC : MusicChallenge
{
	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float speedUpStep;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] speedUpTimes;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fasterSFXVolumeOverride;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float[] powerupTimes;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float snowStart;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float snowEnd;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isSnowing;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ColorKey[] colorKeys;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float colorShiftSpeed;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _lastPowerupIndex;

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xC7BBA0", Offset = "0xC7BBA0", VA = "0xC7BBA0", Slot = "6")]
	public override float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xC7BC5C", Offset = "0xC7BC5C", VA = "0xC7BC5C", Slot = "7")]
	public override void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xC7BDFC", Offset = "0xC7BDFC", VA = "0xC7BDFC")]
	private void CheckForPowerups()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0xC7BEB8", Offset = "0xC7BEB8", VA = "0xC7BEB8", Slot = "9")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0xC7BF58", Offset = "0xC7BF58", VA = "0xC7BF58", Slot = "4")]
	protected override void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0xC7C088", Offset = "0xC7C088", VA = "0xC7C088")]
	public InfectedMC()
	{
	}
}
[Token(Token = "0x20003C4")]
public abstract class MusicChallenge : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003C5")]
	public struct ColorKey
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ColorUsage(true, true)]
		public Color color;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;
	}

	[Serializable]
	[Token(Token = "0x20003C6")]
	public class Key
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Reflections")]
		public bool changeColor;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ColorUsage(true, true)]
		public Color color;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ColorUsage(true, true)]
		public Color color2;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float colorFrequency;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float colorSmoothTime;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Powerups")]
		public bool spawnPowerup;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PowerupType powerup;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Speedup")]
		public bool changeSpeed;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float speed;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Special")]
		public string special;

		[NonSerialized]
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool consumed;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xC7C88C", Offset = "0xC7C88C", VA = "0xC7C88C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC7CA94", Offset = "0xC7CA94", VA = "0xC7CA94")]
		public Key()
		{
		}
	}

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicChallenge inst;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonthlyChallenge.Time time;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string setName;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Key[] keys;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SmoothColor _color;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeScale;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _smoothTime;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _length;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _currentTime;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _isActive;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool _isCurrentChallenge;

	[Token(Token = "0x170003A7")]
	public static bool IsActive
	{
		[Token(Token = "0x600151D")]
		[Address(RVA = "0xC7C150", Offset = "0xC7C150", VA = "0xC7C150")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xC7C1F8", Offset = "0xC7C1F8", VA = "0xC7C1F8", Slot = "4")]
	protected virtual void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xC7C1FC", Offset = "0xC7C1FC", VA = "0xC7C1FC", Slot = "5")]
	protected virtual void OnSpecial(string special)
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xC7C200", Offset = "0xC7C200", VA = "0xC7C200", Slot = "6")]
	public virtual float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xC7C20C", Offset = "0xC7C20C", VA = "0xC7C20C", Slot = "7")]
	public virtual void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xC7C25C", Offset = "0xC7C25C", VA = "0xC7C25C", Slot = "8")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xC7BF54", Offset = "0xC7BF54", VA = "0xC7BF54", Slot = "9")]
	protected virtual void Cleanup()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xC7C330", Offset = "0xC7C330", VA = "0xC7C330")]
	private void OnCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xC7C464", Offset = "0xC7C464", VA = "0xC7C464")]
	private void UpdateKeys(float dt)
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xC7C678", Offset = "0xC7C678", VA = "0xC7C678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xC7C730", Offset = "0xC7C730", VA = "0xC7C730", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xC7C0B0", Offset = "0xC7C0B0", VA = "0xC7C0B0")]
	protected MusicChallenge()
	{
	}
}
[Token(Token = "0x20003C7")]
public class ZomboyMC : MusicChallenge
{
	[Token(Token = "0x20003C8")]
	private struct SpeedUpKey
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int waveIndex;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float speed;
	}

	[Token(Token = "0x20003C9")]
	[CompilerGenerated]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZomboyMC <>4__this;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveSetFromCrate <set>5__2;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xC7D9E4", Offset = "0xC7D9E4", VA = "0xC7D9E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xC7DA2C", Offset = "0xC7DA2C", VA = "0xC7DA2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC7D500", Offset = "0xC7D500", VA = "0xC7D500")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC7D6A0", Offset = "0xC7D6A0", VA = "0xC7D6A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC7D6A4", Offset = "0xC7D6A4", VA = "0xC7D6A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC7D9EC", Offset = "0xC7D9EC", VA = "0xC7D9EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SpeedUpKey> _speedKeys;

	[Token(Token = "0x40016B0")]
	public const string FIRE_TRAIL_ID = "FRLN";

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _currentSpeedWaveIndex;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currentSpeed;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _currentSpeedLevelProgress;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _fireTrailOn;

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xC7CAA8", Offset = "0xC7CAA8", VA = "0xC7CAA8")]
	private void FillWithSnakes(List<HexTile> tiles)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xC7D00C", Offset = "0xC7D00C", VA = "0xC7D00C")]
	private void ActivateSnakeMode()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xC7D19C", Offset = "0xC7D19C", VA = "0xC7D19C", Slot = "5")]
	protected override void OnSpecial(string special)
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xC7D204", Offset = "0xC7D204", VA = "0xC7D204", Slot = "7")]
	public override void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xC7D24C", Offset = "0xC7D24C", VA = "0xC7D24C", Slot = "6")]
	public override float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xC7D25C", Offset = "0xC7D25C", VA = "0xC7D25C")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xC7D32C", Offset = "0xC7D32C", VA = "0xC7D32C", Slot = "8")]
	protected override void Init()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xC7D3E8", Offset = "0xC7D3E8", VA = "0xC7D3E8", Slot = "9")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xC7D48C", Offset = "0xC7D48C", VA = "0xC7D48C")]
	[IteratorStateMachine(typeof(<Start>d__14))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xC7D528", Offset = "0xC7D528", VA = "0xC7D528", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xC7D614", Offset = "0xC7D614", VA = "0xC7D614")]
	public ZomboyMC()
	{
	}
}
[Token(Token = "0x20003CA")]
public class AudioRecorder : MonoBehaviour
{
	[Token(Token = "0x20003CB")]
	[CompilerGenerated]
	private sealed class <StartRecordingCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioRecorder <>4__this;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xC7E5A8", Offset = "0xC7E5A8", VA = "0xC7E5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0xC7E5F0", Offset = "0xC7E5F0", VA = "0xC7E5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC7DB78", Offset = "0xC7DB78", VA = "0xC7DB78")]
		[DebuggerHidden]
		public <StartRecordingCo>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC7E120", Offset = "0xC7E120", VA = "0xC7E120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC7E124", Offset = "0xC7E124", VA = "0xC7E124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC7E5B0", Offset = "0xC7E5B0", VA = "0xC7E5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016BB")]
	private const int MIC_LENGTH_IN_SEC = 5;

	[Token(Token = "0x40016BC")]
	private const int MIC_BUFFER_SIZE = 9600;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isRecording;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _recordingDeviceName;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] _micBufferFloat;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private short[] _micBufferShort;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _lastMicPos;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _readBufferSize;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _frequency;

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xC7DA34", Offset = "0xC7DA34", VA = "0xC7DA34")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xC7DB04", Offset = "0xC7DB04", VA = "0xC7DB04")]
	[IteratorStateMachine(typeof(<StartRecordingCo>d__11))]
	private IEnumerator StartRecordingCo()
	{
		return null;
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0xC7DBA0", Offset = "0xC7DBA0", VA = "0xC7DBA0")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xC7DBDC", Offset = "0xC7DBDC", VA = "0xC7DBDC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xC7DF9C", Offset = "0xC7DF9C", VA = "0xC7DF9C")]
	public bool GetPCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xC7E080", Offset = "0xC7E080", VA = "0xC7E080")]
	public AudioRecorder()
	{
	}
}
[Token(Token = "0x20003CC")]
[DisallowMultipleComponent]
public class EmptyNativePlatform : NativePlatform
{
	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> rnxFriendsList;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x170003AC")]
	public static bool Initialized
	{
		[Token(Token = "0x6001548")]
		[Address(RVA = "0xC7E5F8", Offset = "0xC7E5F8", VA = "0xC7E5F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003AD")]
	public override bool isInitialized
	{
		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC7E600", Offset = "0xC7E600", VA = "0xC7E600", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xC7E608", Offset = "0xC7E608", VA = "0xC7E608", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xC7E610", Offset = "0xC7E610", VA = "0xC7E610", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xC7E618", Offset = "0xC7E618", VA = "0xC7E618")]
	private void Awake()
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xC7E794", Offset = "0xC7E794", VA = "0xC7E794")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xC7E800", Offset = "0xC7E800", VA = "0xC7E800", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xC7E804", Offset = "0xC7E804", VA = "0xC7E804", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User rnxUser)
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xC7E808", Offset = "0xC7E808", VA = "0xC7E808")]
	private int GetFriendsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xC7E810", Offset = "0xC7E810", VA = "0xC7E810", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xC7E814", Offset = "0xC7E814", VA = "0xC7E814", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xC7E82C", Offset = "0xC7E82C", VA = "0xC7E82C", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xC7E844", Offset = "0xC7E844", VA = "0xC7E844", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xC7E85C", Offset = "0xC7E85C", VA = "0xC7E85C", Slot = "19")]
	public override bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xC7E864", Offset = "0xC7E864", VA = "0xC7E864", Slot = "21")]
	public override void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xC7E868", Offset = "0xC7E868", VA = "0xC7E868", Slot = "23")]
	public override void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xC7E86C", Offset = "0xC7E86C", VA = "0xC7E86C", Slot = "24")]
	public override void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xC7E870", Offset = "0xC7E870", VA = "0xC7E870", Slot = "25")]
	public override bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xC7E87C", Offset = "0xC7E87C", VA = "0xC7E87C", Slot = "26")]
	public override bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xC7E8E4", Offset = "0xC7E8E4", VA = "0xC7E8E4")]
	public EmptyNativePlatform()
	{
	}
}
[Token(Token = "0x20003CD")]
[DisallowMultipleComponent]
public class iQIYINativePlatform : NativePlatform
{
	[Token(Token = "0x40016CA")]
	private const string APP_ID = "68972289";

	[Token(Token = "0x40016CB")]
	private const string DEVELOPER_ID = "5973121";

	[Token(Token = "0x40016CC")]
	private const string AUTHORIZATION_SECRET = "29b9f118978ecb69fada718ed77cae8a";

	[Token(Token = "0x40016CD")]
	private const string SIGN_KEY = "a284caeffcc836323d60d80b5ac2c9c9";

	[Token(Token = "0x40016CE")]
	private const string APP_SECRET = "f99418eb081af1a05a510696a3464c29";

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _isInitialized;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> _friends;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x170003AE")]
	public override bool isInitialized
	{
		[Token(Token = "0x600155C")]
		[Address(RVA = "0xC7EA30", Offset = "0xC7EA30", VA = "0xC7EA30", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xC7EA38", Offset = "0xC7EA38", VA = "0xC7EA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xC7EAA4", Offset = "0xC7EAA4", VA = "0xC7EAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xC7EAA8", Offset = "0xC7EAA8", VA = "0xC7EAA8")]
	private void Init()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xC7EC10", Offset = "0xC7EC10", VA = "0xC7EC10", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xC7EC14", Offset = "0xC7EC14", VA = "0xC7EC14", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xC7EC18", Offset = "0xC7EC18", VA = "0xC7EC18", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xC7EC20", Offset = "0xC7EC20", VA = "0xC7EC20", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0xC7EC24", Offset = "0xC7EC24", VA = "0xC7EC24", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xC7EC2C", Offset = "0xC7EC2C", VA = "0xC7EC2C", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xC7EC44", Offset = "0xC7EC44", VA = "0xC7EC44", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0xC7EC5C", Offset = "0xC7EC5C", VA = "0xC7EC5C", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xC7EC74", Offset = "0xC7EC74", VA = "0xC7EC74")]
	public iQIYINativePlatform()
	{
	}
}
[Token(Token = "0x20003CE")]
public abstract class NativePlatform : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	public class NativeUser
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Platform platform;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nativeID;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D avatarImage;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sprite _sprite;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D _spriteTex;

		[Token(Token = "0x170003B6")]
		public Sprite sprite
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xC80C98", Offset = "0xC80C98", VA = "0xC80C98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xC7E78C", Offset = "0xC7E78C", VA = "0xC7E78C")]
		public NativeUser()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	public class RNXUserSorter : IComparer<RnxPlatform.User>
	{
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xC80E00", Offset = "0xC80E00", VA = "0xC80E00", Slot = "4")]
		public int Compare(RnxPlatform.User a, RnxPlatform.User b)
		{
			return default(int);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xC808BC", Offset = "0xC808BC", VA = "0xC808BC")]
		public RNXUserSorter()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	public delegate void IMPORT_AWS_CHINA__OnResponseT(bool success, RnxPlatform.User rnxUser);

	[Token(Token = "0x20003D2")]
	[CompilerGenerated]
	private sealed class <DownloadImageCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string avatarUrl;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<(bool success, Texture2D avatarTex)> done;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D <avatarImage>5__2;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <avatarRequest>5__3;

		[Token(Token = "0x170003B7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xC81790", Offset = "0xC81790", VA = "0xC81790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0xC817D8", Offset = "0xC817D8", VA = "0xC817D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xC7F5D8", Offset = "0xC7F5D8", VA = "0xC7F5D8")]
		[DebuggerHidden]
		public <DownloadImageCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xC8104C", Offset = "0xC8104C", VA = "0xC8104C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xC81068", Offset = "0xC81068", VA = "0xC81068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xC816E0", Offset = "0xC816E0", VA = "0xC816E0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xC81798", Offset = "0xC81798", VA = "0xC81798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016D2")]
	public const uint desiredSampleRate = 48000u;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NativePlatform inst;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static NativePlatform lastInst;

	[Token(Token = "0x40016D5")]
	private const float retryDelay = 3f;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Status _currentGameState;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected NativeUser _myNativeUser;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RnxPlatform.User me;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RNXUserSorter _userSorter;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<string, ItemsDefs.ItemDefinition> purchasedItems;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _numSignInAttempts;

	[Token(Token = "0x40016DE")]
	private const int maxSignInAttempts = 3;

	[Token(Token = "0x170003AF")]
	public static bool initialized
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0xC71010", Offset = "0xC71010", VA = "0xC71010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003B0")]
	public abstract bool isInitialized
	{
		[Token(Token = "0x600156A")]
		get;
	}

	[Token(Token = "0x170003B1")]
	public static bool IsSignedIn
	{
		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC7ECF8", Offset = "0xC7ECF8", VA = "0xC7ECF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003B2")]
	public Status gameState
	{
		[Token(Token = "0x600156C")]
		[Address(RVA = "0xC7ED5C", Offset = "0xC7ED5C", VA = "0xC7ED5C")]
		set
		{
		}
	}

	[Token(Token = "0x170003B3")]
	public NativeUser nativeUser
	{
		[Token(Token = "0x600156F")]
		[Address(RVA = "0xC7EE08", Offset = "0xC7EE08", VA = "0xC7EE08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003B4")]
	public virtual bool SupportsIAP
	{
		[Token(Token = "0x6001591")]
		[Address(RVA = "0xC7F898", Offset = "0xC7F898", VA = "0xC7F898", Slot = "32")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003B5")]
	public bool IsPurchasedItemsReady
	{
		[Token(Token = "0x6001592")]
		[Address(RVA = "0xC7F8A0", Offset = "0xC7F8A0", VA = "0xC7F8A0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001593")]
		[Address(RVA = "0xC7F8A8", Offset = "0xC7F8A8", VA = "0xC7F8A8")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event Action friendsInfoUpdated
	{
		[Token(Token = "0x600157A")]
		[Address(RVA = "0xC743D4", Offset = "0xC743D4", VA = "0xC743D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC74568", Offset = "0xC74568", VA = "0xC74568")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600156D")]
	protected abstract void SetCurrentGameState(Status gameState);

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xC772C8", Offset = "0xC772C8", VA = "0xC772C8")]
	public static LocalizedString statusTerm(Status status)
	{
		return default(LocalizedString);
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xC7EE10", Offset = "0xC7EE10", VA = "0xC7EE10", Slot = "6")]
	protected virtual void SignIn()
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xC7F1C0", Offset = "0xC7F1C0", VA = "0xC7F1C0", Slot = "7")]
	protected virtual void onSignInResponse(bool success, RnxPlatform.User rnxUser)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xC7F2E4", Offset = "0xC7F2E4", VA = "0xC7F2E4", Slot = "8")]
	protected virtual void onSignInSuccess()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xC7F0CC", Offset = "0xC7F0CC", VA = "0xC7F0CC")]
	private void SetCloudDiagnosticsMetaData_BeforeSignIn()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xC7F34C", Offset = "0xC7F34C", VA = "0xC7F34C")]
	private void SetCloudDiagnosticsMetaData_AfterSignIn()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xC7F3E0", Offset = "0xC7F3E0", VA = "0xC7F3E0", Slot = "9")]
	protected virtual void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xC7F4D0", Offset = "0xC7F4D0", VA = "0xC7F4D0")]
	protected static void DownloadImage(string imgUrl, [Optional] Action<(bool success, Texture2D avatarTex)> done)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xC7F548", Offset = "0xC7F548", VA = "0xC7F548")]
	[IteratorStateMachine(typeof(<DownloadImageCo>d__27))]
	protected static IEnumerator<float> DownloadImageCo(string avatarUrl, [Optional] Action<(bool success, Texture2D avatarTex)> done)
	{
		return null;
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xC7F600", Offset = "0xC7F600", VA = "0xC7F600", Slot = "10")]
	public virtual bool SupportsFriends()
	{
		return default(bool);
	}

	[Token(Token = "0x6001579")]
	public abstract void UpdateFriendsInfo();

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xC7F608", Offset = "0xC7F608", VA = "0xC7F608")]
	protected void onFriendsInfoUpdated()
	{
	}

	[Token(Token = "0x600157D")]
	public abstract List<RnxPlatform.User> GetFriendsList();

	[Token(Token = "0x600157E")]
	public abstract void AddFriendRequest(RnxPlatform.User user);

	[Token(Token = "0x600157F")]
	public abstract RnxPlatform.User GetFriendInfo(string friendId);

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xC7F624", Offset = "0xC7F624", VA = "0xC7F624", Slot = "15")]
	public virtual void OpenStorePage()
	{
	}

	[Token(Token = "0x6001581")]
	public abstract void StartVoiceRecording();

	[Token(Token = "0x6001582")]
	public abstract void StopVoiceRecording();

	[Token(Token = "0x6001583")]
	public abstract bool GetVoicePCM(byte[] buffer, out uint bytesWritten);

	[Token(Token = "0x6001584")]
	[Address(RVA = "0xC7F68C", Offset = "0xC7F68C", VA = "0xC7F68C", Slot = "19")]
	public virtual bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0xC7F694", Offset = "0xC7F694", VA = "0xC7F694", Slot = "20")]
	public virtual bool RequiresP2PHandshake()
	{
		return default(bool);
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0xC7F69C", Offset = "0xC7F69C", VA = "0xC7F69C", Slot = "21")]
	public virtual void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xC7F6EC", Offset = "0xC7F6EC", VA = "0xC7F6EC", Slot = "22")]
	public virtual bool IsP2PConnected(string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xC7F6F4", Offset = "0xC7F6F4", VA = "0xC7F6F4", Slot = "23")]
	public virtual void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xC7F744", Offset = "0xC7F744", VA = "0xC7F744", Slot = "24")]
	public virtual void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xC7F794", Offset = "0xC7F794", VA = "0xC7F794", Slot = "25")]
	public virtual bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xC7F7E4", Offset = "0xC7F7E4", VA = "0xC7F7E4", Slot = "26")]
	public virtual bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xC7F834", Offset = "0xC7F834", VA = "0xC7F834", Slot = "27")]
	public virtual void ReportGameData()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xC7F838", Offset = "0xC7F838", VA = "0xC7F838", Slot = "28")]
	public virtual bool SupportsAchievements()
	{
		return default(bool);
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xC7F840", Offset = "0xC7F840", VA = "0xC7F840", Slot = "29")]
	public virtual void UnlockAchievement(Achievement achievement, Action<string> callback)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xC7F890", Offset = "0xC7F890", VA = "0xC7F890", Slot = "30")]
	public virtual void UpdateAchievementProgress(Achievement achievement, [Optional] Action<string> callback)
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xC7F894", Offset = "0xC7F894", VA = "0xC7F894", Slot = "31")]
	public virtual void PlaySoundEffectOnHapticSource(AudioManager.SoundEffect sfx, SpatializedAudio spatializedAudio)
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xC7F8B4", Offset = "0xC7F8B4", VA = "0xC7F8B4")]
	public void InitializeInAppPurchases()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xC7FA28", Offset = "0xC7FA28", VA = "0xC7FA28")]
	public bool IsItemPurchased(in string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xC7FABC", Offset = "0xC7FABC", VA = "0xC7FABC")]
	public void PurchaseAndEnsure(string itemId, Action onSuccess, Action<string> onError)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xC7FD78", Offset = "0xC7FD78", VA = "0xC7FD78")]
	public bool ValidatePurchasableItemStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xC8003C", Offset = "0xC8003C", VA = "0xC8003C", Slot = "33")]
	protected virtual void PurchaseItem(string itemId, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xC80104", Offset = "0xC80104", VA = "0xC80104", Slot = "34")]
	protected virtual void FetchPurchasedItems(Action<ItemsDefs.ItemDefinition[]> onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xC801CC", Offset = "0xC801CC", VA = "0xC801CC")]
	public static ulong GetHash(string str)
	{
		return default(ulong);
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xC803C0", Offset = "0xC803C0", VA = "0xC803C0")]
	public void IMPORT_AWS_CHINA__ReSignIn(IMPORT_AWS_CHINA__OnResponseT onResponse)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xC803C4", Offset = "0xC803C4", VA = "0xC803C4")]
	private void IMPORT_AWS_CHINA__ReSignIn_Actually(IMPORT_AWS_CHINA__OnResponseT onResponse)
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xC7E96C", Offset = "0xC7E96C", VA = "0xC7E96C")]
	protected NativePlatform()
	{
	}
}
[Token(Token = "0x20003D6")]
public class NativePlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xC81C74", Offset = "0xC81C74", VA = "0xC81C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xC81D2C", Offset = "0xC81D2C", VA = "0xC81D2C")]
	public NativePlatformInitializer()
	{
	}
}
[Token(Token = "0x20003D7")]
public enum NativePlatformType
{
	[Token(Token = "0x40016F5")]
	None,
	[Token(Token = "0x40016F6")]
	Steam,
	[Token(Token = "0x40016F7")]
	OculusHome,
	[Token(Token = "0x40016F8")]
	Viveport,
	[Token(Token = "0x40016F9")]
	Pico,
	[Token(Token = "0x40016FA")]
	NetVios,
	[Token(Token = "0x40016FB")]
	PlayStation,
	[Token(Token = "0x40016FC")]
	iQIYI,
	[Token(Token = "0x40016FD")]
	ChinaMobile
}
[Token(Token = "0x20003D8")]
[DisallowMultipleComponent]
public class NetViosNativePlatform : NativePlatform
{
	[Token(Token = "0x20003D9")]
	private delegate void NetViosSDK_OnInitCompleteFP(int code, string sdkDataString);

	[Token(Token = "0x20003DA")]
	private delegate void NetViosSDK_OnDataReportCompleteFP(int code, string respData);

	[Serializable]
	[Token(Token = "0x20003DB")]
	private struct SDKData
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string appid;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string udid;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sdk_version;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string app_channel;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string openid;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string unionid;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string merchant_account;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string extra_data;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string platform_version;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string nickname;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string avatar;
	}

	[Token(Token = "0x20003DC")]
	private class InitResult
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sdkDataString;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC821D4", Offset = "0xC821D4", VA = "0xC821D4")]
		public InitResult()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003DD")]
	public struct GameReportData
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mode;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int bestScore;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numStars;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float versusRating;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC8286C", Offset = "0xC8286C", VA = "0xC8286C")]
		public GameReportData(string mode)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003DE")]
	private struct GameDataReportResponse
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int code;
	}

	[Token(Token = "0x20003DF")]
	[CompilerGenerated]
	private sealed class <InitCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x170003BA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xC8368C", Offset = "0xC8368C", VA = "0xC8368C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xC836D4", Offset = "0xC836D4", VA = "0xC836D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xC821DC", Offset = "0xC821DC", VA = "0xC821DC")]
		[DebuggerHidden]
		public <InitCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC82F04", Offset = "0xC82F04", VA = "0xC82F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xC82F08", Offset = "0xC82F08", VA = "0xC82F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xC83694", Offset = "0xC83694", VA = "0xC83694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E0")]
	[CompilerGenerated]
	private sealed class <DownloadAvatarImage>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string avatarUrl;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <avatarRequest>5__2;

		[Token(Token = "0x170003BC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xC84CA4", Offset = "0xC84CA4", VA = "0xC84CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xC84CEC", Offset = "0xC84CEC", VA = "0xC84CEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xC84730", Offset = "0xC84730", VA = "0xC84730")]
		[DebuggerHidden]
		public <DownloadAvatarImage>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xC84758", Offset = "0xC84758", VA = "0xC84758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xC84774", Offset = "0xC84774", VA = "0xC84774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xC84BF4", Offset = "0xC84BF4", VA = "0xC84BF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xC84CAC", Offset = "0xC84CAC", VA = "0xC84CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[CompilerGenerated]
	private sealed class <SendCoOpReport>d__48 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x170003BE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xC850F4", Offset = "0xC850F4", VA = "0xC850F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0xC8513C", Offset = "0xC8513C", VA = "0xC8513C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xC84F18", Offset = "0xC84F18", VA = "0xC84F18")]
		[DebuggerHidden]
		public <SendCoOpReport>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xC84F40", Offset = "0xC84F40", VA = "0xC84F40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xC84F44", Offset = "0xC84F44", VA = "0xC84F44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xC850FC", Offset = "0xC850FC", VA = "0xC850FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016FE")]
	private const int CODE_OK = 0;

	[Token(Token = "0x40016FF")]
	private const int CODE_PLAT_NOT_FOUND = 1;

	[Token(Token = "0x4001700")]
	private const int CODE_ANOTHER_GAME_PLAYING = 2;

	[Token(Token = "0x4001701")]
	private const int CODE_NOT_LAUNCHED_FROM_PLAT = 3;

	[Token(Token = "0x4001702")]
	private const int CODE_DONT_REPEAT_INITIALIZATION = 4;

	[Token(Token = "0x4001703")]
	private const int CODE_CONNECT_PLATFORM_FAILED = 10;

	[Token(Token = "0x4001704")]
	private const int CODE_UNKNOWN = int.MaxValue;

	[Token(Token = "0x4001705")]
	private const string APP_ID = "74a0132606e64bdd";

	[Token(Token = "0x4001706")]
	private const string APP_SECRET = "69ad18ae9b6e4cfb90d2d7f859f1ed49";

	[Token(Token = "0x4001707")]
	private const string GAME_DATA_REPORT_APP = "racketnx";

	[Token(Token = "0x4001708")]
	private const string GAME_DATA_REPORT_APP_KEY = "e46905222f21d505";

	[Token(Token = "0x4001709")]
	private const string GAME_DATA_REPORT_API_SECRET = "5dc90935bc464f4c868f943635bb95af";

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InitResult _initResult;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SDKData _sdkData;

	[Token(Token = "0x170003B9")]
	public override bool isInitialized
	{
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC81FC4", Offset = "0xC81FC4", VA = "0xC81FC4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[PreserveSig]
	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xC81D34", Offset = "0xC81D34", VA = "0xC81D34")]
	private static extern void NetViosSDK_Init(string appId, string appKey, NetViosSDK_OnInitCompleteFP onInitComplete);

	[PreserveSig]
	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xC81DF8", Offset = "0xC81DF8", VA = "0xC81DF8")]
	private static extern void NetViosSDK_Start();

	[PreserveSig]
	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xC81E5C", Offset = "0xC81E5C", VA = "0xC81E5C")]
	private static extern void NetViosSDK_Close();

	[PreserveSig]
	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xC81EC0", Offset = "0xC81EC0", VA = "0xC81EC0")]
	private static extern void NetViosSDK_ReportGameData(string app, string appKey, string apiSecret, string gameData, NetViosSDK_OnDataReportCompleteFP onDataReportComplete);

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xC81FCC", Offset = "0xC81FCC", VA = "0xC81FCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xC8212C", Offset = "0xC8212C", VA = "0xC8212C")]
	private static void onInitComplete(int code, string sdkDataString)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xC820B8", Offset = "0xC820B8", VA = "0xC820B8")]
	[IteratorStateMachine(typeof(<InitCo>d__28))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xC82204", Offset = "0xC82204", VA = "0xC82204")]
	private void InitAnonymousPlayer()
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xC822B8", Offset = "0xC822B8", VA = "0xC822B8")]
	private void InitWeChatPlayer()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xC82344", Offset = "0xC82344", VA = "0xC82344")]
	[IteratorStateMachine(typeof(<DownloadAvatarImage>d__31))]
	private IEnumerator<float> DownloadAvatarImage(string avatarUrl)
	{
		return null;
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xC823D4", Offset = "0xC823D4", VA = "0xC823D4", Slot = "8")]
	protected override void onSignInSuccess()
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xC824FC", Offset = "0xC824FC", VA = "0xC824FC", Slot = "9")]
	protected override void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xC8250C", Offset = "0xC8250C", VA = "0xC8250C", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xC82510", Offset = "0xC82510", VA = "0xC82510", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xC82514", Offset = "0xC82514", VA = "0xC82514", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xC82584", Offset = "0xC82584", VA = "0xC82584", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xC82588", Offset = "0xC82588", VA = "0xC82588", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xC82590", Offset = "0xC82590", VA = "0xC82590", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xC825A8", Offset = "0xC825A8", VA = "0xC825A8", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xC825C0", Offset = "0xC825C0", VA = "0xC825C0", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xC825D8", Offset = "0xC825D8", VA = "0xC825D8", Slot = "27")]
	public override void ReportGameData()
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xC82894", Offset = "0xC82894", VA = "0xC82894")]
	private void SendReport(GameReportData report)
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xC82B20", Offset = "0xC82B20", VA = "0xC82B20")]
	private void onVersusMatchConcluded()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xC82BF0", Offset = "0xC82BF0", VA = "0xC82BF0")]
	private void onCoOpMatchConcluded()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xC82C58", Offset = "0xC82C58", VA = "0xC82C58")]
	[IteratorStateMachine(typeof(<SendCoOpReport>d__48))]
	private IEnumerator<float> SendCoOpReport()
	{
		return null;
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xC82CCC", Offset = "0xC82CCC", VA = "0xC82CCC")]
	public NetViosNativePlatform()
	{
	}
}
[Token(Token = "0x20003E3")]
[DisallowMultipleComponent]
public class OculusNativePlatform : NativePlatform
{
	[Token(Token = "0x20003E4")]
	public class FriendInfo
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong oculusID;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RnxPlatform.User rnxUser;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool askedTranslateForThisUser;

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC87764", Offset = "0xC87764", VA = "0xC87764")]
		public FriendInfo()
		{
		}
	}

	[Token(Token = "0x20003E5")]
	public enum Intent
	{
		[Token(Token = "0x4001765")]
		None,
		[Token(Token = "0x4001766")]
		Solo,
		[Token(Token = "0x4001767")]
		Arcade,
		[Token(Token = "0x4001768")]
		FriendlyMatch
	}

	[Token(Token = "0x20003E6")]
	private class DeepLinkData
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string intent;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC8C2A4", Offset = "0xC8C2A4", VA = "0xC8C2A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC8C49C", Offset = "0xC8C49C", VA = "0xC8C49C")]
		public DeepLinkData()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	private class RichPresenceData
	{
		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string apiName;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool joinable;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool idle;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime? startTime;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RichPresenceExtraContext extraContext;

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC8C4A4", Offset = "0xC8C4A4", VA = "0xC8C4A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC8C880", Offset = "0xC8C880", VA = "0xC8C880", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC8C9C4", Offset = "0xC8C9C4", VA = "0xC8C9C4")]
		public RichPresenceOptions GetRichPresenceOptions()
		{
			return null;
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC8CB78", Offset = "0xC8CB78", VA = "0xC8CB78", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC8A7D8", Offset = "0xC8A7D8", VA = "0xC8A7D8")]
		public RichPresenceData()
		{
		}
	}

	[Token(Token = "0x20003E8")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool entitled;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool entitlementCheckDone;

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC8CB80", Offset = "0xC8CB80", VA = "0xC8CB80")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xC8CB88", Offset = "0xC8CB88", VA = "0xC8CB88")]
		internal void <InitCo>b__2(Oculus.Platform.Message msg)
		{
		}
	}

	[Token(Token = "0x20003EA")]
	[CompilerGenerated]
	private sealed class <InitCo>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusNativePlatform <>4__this;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass32_0 <>8__1;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170003C3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xC8DB84", Offset = "0xC8DB84", VA = "0xC8DB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xC8DBCC", Offset = "0xC8DBCC", VA = "0xC8DBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xC86300", Offset = "0xC86300", VA = "0xC86300")]
		[DebuggerHidden]
		public <InitCo>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xC8D0C8", Offset = "0xC8D0C8", VA = "0xC8D0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xC8D0E4", Offset = "0xC8D0E4", VA = "0xC8D0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xC8DAD4", Offset = "0xC8DAD4", VA = "0xC8DAD4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC8DB8C", Offset = "0xC8DB8C", VA = "0xC8DB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EB")]
	[CompilerGenerated]
	private sealed class <GetFriendAvatarImage>d__48 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Oculus.Platform.Models.User oculusFriend;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RnxPlatform.User rnxFriend;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170003C5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xC8DEA8", Offset = "0xC8DEA8", VA = "0xC8DEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xC8DEF0", Offset = "0xC8DEF0", VA = "0xC8DEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC86D1C", Offset = "0xC86D1C", VA = "0xC86D1C")]
		[DebuggerHidden]
		public <GetFriendAvatarImage>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC8DC28", Offset = "0xC8DC28", VA = "0xC8DC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xC8DC44", Offset = "0xC8DC44", VA = "0xC8DC44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC8DDF8", Offset = "0xC8DDF8", VA = "0xC8DDF8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC8DEB0", Offset = "0xC8DEB0", VA = "0xC8DEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F3")]
	[CompilerGenerated]
	private sealed class <startEditorArena>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string destination;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <setNum>5__2;

		[Token(Token = "0x170003C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xC8F0E4", Offset = "0xC8F0E4", VA = "0xC8F0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xC8F12C", Offset = "0xC8F12C", VA = "0xC8F12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xC8B788", Offset = "0xC8B788", VA = "0xC8B788")]
		[DebuggerHidden]
		public <startEditorArena>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC8E92C", Offset = "0xC8E92C", VA = "0xC8E92C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xC8E930", Offset = "0xC8E930", VA = "0xC8E930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xC8F0EC", Offset = "0xC8F0EC", VA = "0xC8F0EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	[CompilerGenerated]
	private sealed class <startSoloSet>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string soloID;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x170003C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xC8F500", Offset = "0xC8F500", VA = "0xC8F500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xC8F548", Offset = "0xC8F548", VA = "0xC8F548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xC8B7B0", Offset = "0xC8B7B0", VA = "0xC8B7B0")]
		[DebuggerHidden]
		public <startSoloSet>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xC8F134", Offset = "0xC8F134", VA = "0xC8F134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xC8F138", Offset = "0xC8F138", VA = "0xC8F138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xC8F508", Offset = "0xC8F508", VA = "0xC8F508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	[CompilerGenerated]
	private sealed class <startSoloMonthlyChallengeSet>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x170003CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xC8F998", Offset = "0xC8F998", VA = "0xC8F998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xC8F9E0", Offset = "0xC8F9E0", VA = "0xC8F9E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xC8B7D8", Offset = "0xC8B7D8", VA = "0xC8B7D8")]
		[DebuggerHidden]
		public <startSoloMonthlyChallengeSet>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xC8F550", Offset = "0xC8F550", VA = "0xC8F550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xC8F554", Offset = "0xC8F554", VA = "0xC8F554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xC8F9A0", Offset = "0xC8F9A0", VA = "0xC8F9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F6")]
	[CompilerGenerated]
	private sealed class <startArcade>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string arcadeID;

		[Token(Token = "0x170003CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xC8FC88", Offset = "0xC8FC88", VA = "0xC8FC88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xC8FCD0", Offset = "0xC8FCD0", VA = "0xC8FCD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xC8B800", Offset = "0xC8B800", VA = "0xC8B800")]
		[DebuggerHidden]
		public <startArcade>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xC8F9E8", Offset = "0xC8F9E8", VA = "0xC8F9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xC8F9EC", Offset = "0xC8F9EC", VA = "0xC8F9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xC8FC90", Offset = "0xC8FC90", VA = "0xC8FC90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	[CompilerGenerated]
	private sealed class <startRankedMultiplayer>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string destination;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CoModes <coModes>5__2;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xC90154", Offset = "0xC90154", VA = "0xC90154", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0xC9019C", Offset = "0xC9019C", VA = "0xC9019C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xC8B828", Offset = "0xC8B828", VA = "0xC8B828")]
		[DebuggerHidden]
		public <startRankedMultiplayer>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xC8FD28", Offset = "0xC8FD28", VA = "0xC8FD28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xC8FD2C", Offset = "0xC8FD2C", VA = "0xC8FD2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xC9015C", Offset = "0xC9015C", VA = "0xC9015C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[CompilerGenerated]
	private sealed class <startGroupLaunch>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusNativePlatform <>4__this;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong roomID;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UserList users;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string destinationApiName;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xC90BEC", Offset = "0xC90BEC", VA = "0xC90BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xC90C34", Offset = "0xC90C34", VA = "0xC90C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xC8B850", Offset = "0xC8B850", VA = "0xC8B850")]
		[DebuggerHidden]
		public <startGroupLaunch>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xC901A4", Offset = "0xC901A4", VA = "0xC901A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xC901A8", Offset = "0xC901A8", VA = "0xC901A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xC90BF4", Offset = "0xC90BF4", VA = "0xC90BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FA")]
	[CompilerGenerated]
	private sealed class <DownloadOculusUserAvatar>d__133 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusNativePlatform <>4__this;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Oculus.Platform.Models.User user;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RnxPlatform.User <dummy>5__2;

		[Token(Token = "0x170003D3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xC90D4C", Offset = "0xC90D4C", VA = "0xC90D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xC90D94", Offset = "0xC90D94", VA = "0xC90D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xC8B908", Offset = "0xC8B908", VA = "0xC8B908")]
		[DebuggerHidden]
		public <DownloadOculusUserAvatar>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xC90C3C", Offset = "0xC90C3C", VA = "0xC90C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xC90C40", Offset = "0xC90C40", VA = "0xC90C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xC90D54", Offset = "0xC90D54", VA = "0xC90D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FB")]
	[CompilerGenerated]
	private sealed class <sendFriendlyInviteCo>d__134 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string rnxid;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OculusNativePlatform <>4__this;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xC91084", Offset = "0xC91084", VA = "0xC91084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xC910CC", Offset = "0xC910CC", VA = "0xC910CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xC8B930", Offset = "0xC8B930", VA = "0xC8B930")]
		[DebuggerHidden]
		public <sendFriendlyInviteCo>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xC90DF0", Offset = "0xC90DF0", VA = "0xC90DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xC90DF4", Offset = "0xC90DF4", VA = "0xC90DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xC9108C", Offset = "0xC9108C", VA = "0xC9108C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong RIFT_APP_ID;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong QUEST_APP_ID;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OculusNativePlatform _inst;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_EverInialized;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _oculusHomeInitialized;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Oculus.Platform.Models.User _oculusMe;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RnxPlatform.User> rnxFriendsList;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<FriendInfo> oculusFriendsList;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ulong, FriendInfo> oculusIDToFriendInfo;

	[Token(Token = "0x4001736")]
	private const string KEY_OCULUS_NAME = "RNX_LAST_OCULUS_NAME";

	[Token(Token = "0x4001737")]
	private const string KEY_OCULUS_ID = "RNX_LAST_OCULUS_ID";

	[Token(Token = "0x4001738")]
	private const string KEY_OCULUS_AVATAR_WIDTH = "RNX_LAST_OCULUS_AVATAR_WIDTH";

	[Token(Token = "0x4001739")]
	private const string KEY_OCULUS_AVATAR_HEIGHT = "RNX_LAST_OCULUS_AVATAR_HEIGHT";

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _avatarImageFileName;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _cacheUser;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _micInitialized;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private IntPtr _ovrNativeMicrophonePtr;

	[Token(Token = "0x400173E")]
	private const int MIC_BUFFER_SIZE = 9600;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private short[] _micBufferShort;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private object _lock;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _friendsTranslateInProcess;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<string> _translateOculusIDs;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<string> _updateRnxIDs;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _translateFriendsFailedOnce;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Packet lastReadPacket;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong remoteConnectedP2PUserID;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string remoteConnectedP2PUserIDString;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private PeerConnectionState m_state;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool _voipMicAvailable;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool _appFocused;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RichPresenceData _richPresenceData;

	[Token(Token = "0x400174C")]
	private const string DEST_IN_MENU = "in_menu";

	[Token(Token = "0x400174D")]
	private const string DEST_SOLO_MONTHLY_CHALLENGE = "solo_challenge_monthly";

	[Token(Token = "0x400174E")]
	private const string DEST_SOLO_PREFIX = "solo_";

	[Token(Token = "0x400174F")]
	private const string DEST_ARCADE_PREFIX = "arcade_";

	[Token(Token = "0x4001750")]
	private const string DEST_ARCADE_ZEN = "arcade_zen";

	[Token(Token = "0x4001751")]
	private const string DEST_ARCADE_CLASSIC = "arcade_classic";

	[Token(Token = "0x4001752")]
	private const string DEST_ARCADE_NIGHTMARE = "arcade_nightmare";

	[Token(Token = "0x4001753")]
	private const string DEST_MULTIPLAYER_PREFIX = "multiplayer";

	[Token(Token = "0x4001754")]
	private const string DEST_MULTIPLAYER_FRIENDLY = "multiplayer_friendly";

	[Token(Token = "0x4001755")]
	private const string DEST_MULTIPLAYER_COOPERATIVE = "multiplayer_cooperative";

	[Token(Token = "0x4001756")]
	private const string DEST_MULTIPLAYER_COMPETITIVE = "multiplayer_competitive";

	[Token(Token = "0x4001757")]
	private const string DEST_LEVEL_EDITOR_PREFIX = "level_editor_";

	[Token(Token = "0x4001758")]
	private const string DEST_LEVEL_EDITOR_EDITOR = "level_editor_editor";

	[Token(Token = "0x4001759")]
	private const string DEST_LEVEL_EDITOR_BROWSER = "level_editor_browser";

	[Token(Token = "0x400175A")]
	private const string DEST_LEVEL_EDITOR_SET = "level_editor_set_";

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<CoModes, string> coModesDestinations;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Status _lastMyStatus;

	[Token(Token = "0x400175D")]
	private const float START_DELAY_SEC = 5f;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool _startingGroupLaunch;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private LobbyistClient.State _lastState;

	[Token(Token = "0x170003C0")]
	public static bool Initialized
	{
		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xC85198", Offset = "0xC85198", VA = "0xC85198")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003C1")]
	public override bool isInitialized
	{
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xC85264", Offset = "0xC85264", VA = "0xC85264", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003C2")]
	public override bool SupportsIAP
	{
		[Token(Token = "0x6001624")]
		[Address(RVA = "0xC89134", Offset = "0xC89134", VA = "0xC89134", Slot = "32")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xC8526C", Offset = "0xC8526C", VA = "0xC8526C", Slot = "10")]
	public override bool SupportsFriends()
	{
		return default(bool);
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xC85274", Offset = "0xC85274", VA = "0xC85274", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xC8527C", Offset = "0xC8527C", VA = "0xC8527C", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0xC85408", Offset = "0xC85408", VA = "0xC85408")]
	private void InitCallbacks()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xC8540C", Offset = "0xC8540C", VA = "0xC8540C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xC85410", Offset = "0xC85410", VA = "0xC85410")]
	private void Init()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xC85778", Offset = "0xC85778", VA = "0xC85778")]
	private void onOculusInit(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xC85998", Offset = "0xC85998", VA = "0xC85998")]
	private bool Application_wantsToQuit()
	{
		return default(bool);
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xC85B5C", Offset = "0xC85B5C", VA = "0xC85B5C")]
	private void cacheUserData()
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xC85D04", Offset = "0xC85D04", VA = "0xC85D04")]
	private void loadUserDataFromCache()
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xC85F5C", Offset = "0xC85F5C", VA = "0xC85F5C")]
	private void createOfflineUser()
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xC86020", Offset = "0xC86020", VA = "0xC86020")]
	private void onGetLoggedInUser(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xC85704", Offset = "0xC85704", VA = "0xC85704")]
	[IteratorStateMachine(typeof(<InitCo>d__32))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xC86328", Offset = "0xC86328", VA = "0xC86328", Slot = "8")]
	protected override void onSignInSuccess()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xC86558", Offset = "0xC86558", VA = "0xC86558")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xC85A1C", Offset = "0xC85A1C", VA = "0xC85A1C")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xC866AC", Offset = "0xC866AC", VA = "0xC866AC", Slot = "9")]
	protected override void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xC86740", Offset = "0xC86740", VA = "0xC86740", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xC86744", Offset = "0xC86744", VA = "0xC86744", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User rnxUser)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xC8677C", Offset = "0xC8677C", VA = "0xC8677C", Slot = "15")]
	public override void OpenStorePage()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xC867E8", Offset = "0xC867E8", VA = "0xC867E8", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xC86954", Offset = "0xC86954", VA = "0xC86954", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xC869C4", Offset = "0xC869C4", VA = "0xC869C4", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xC86C8C", Offset = "0xC86C8C", VA = "0xC86C8C")]
	[IteratorStateMachine(typeof(<GetFriendAvatarImage>d__48))]
	private IEnumerator<float> GetFriendAvatarImage(RnxPlatform.User rnxFriend, Oculus.Platform.Models.User oculusFriend)
	{
		return null;
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xC86D44", Offset = "0xC86D44", VA = "0xC86D44")]
	private void onGotOculusFriends(Message<UserList> msg)
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xC8776C", Offset = "0xC8776C", VA = "0xC8776C", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xC8789C", Offset = "0xC8789C", VA = "0xC8789C")]
	private void onFriendStatusUpdated(bool success, Dictionary<string, Status> rnxIdToStatus)
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xC87BF4", Offset = "0xC87BF4", VA = "0xC87BF4")]
	private void onGotFriendsTranslated(bool success, Dictionary<string, string> oculusToRnx)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xC88148", Offset = "0xC88148", VA = "0xC88148")]
	private void onGotFriendDetails(bool success, Dictionary<string, RnxPlatform.User> idToUser)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xC8864C", Offset = "0xC8864C", VA = "0xC8864C", Slot = "19")]
	public override bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xC88654", Offset = "0xC88654", VA = "0xC88654", Slot = "20")]
	public override bool RequiresP2PHandshake()
	{
		return default(bool);
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xC8865C", Offset = "0xC8865C", VA = "0xC8865C", Slot = "21")]
	public override void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xC886E8", Offset = "0xC886E8", VA = "0xC886E8", Slot = "22")]
	public override bool IsP2PConnected(string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xC886F4", Offset = "0xC886F4", VA = "0xC886F4", Slot = "23")]
	public override void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xC88778", Offset = "0xC88778", VA = "0xC88778", Slot = "24")]
	public override void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xC88888", Offset = "0xC88888", VA = "0xC88888", Slot = "25")]
	public override bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xC88934", Offset = "0xC88934", VA = "0xC88934", Slot = "26")]
	public override bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xC88A40", Offset = "0xC88A40", VA = "0xC88A40")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xC88ABC", Offset = "0xC88ABC", VA = "0xC88ABC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xC88CD0", Offset = "0xC88CD0", VA = "0xC88CD0")]
	private void OnOfflineStateChanged(bool tempOffline)
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xC88D68", Offset = "0xC88D68", VA = "0xC88D68", Slot = "28")]
	public override bool SupportsAchievements()
	{
		return default(bool);
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xC88D70", Offset = "0xC88D70", VA = "0xC88D70", Slot = "29")]
	public override void UnlockAchievement(Achievement achievement, Action<string> callback)
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xC88F04", Offset = "0xC88F04", VA = "0xC88F04")]
	public void ErrorDialog(MultiplayerErrorErrorKey errorKey)
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xC89014", Offset = "0xC89014", VA = "0xC89014")]
	public void DisableMicWhenMicrophoneAvailabilityIsFalse()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xC89118", Offset = "0xC89118", VA = "0xC89118")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xC89124", Offset = "0xC89124", VA = "0xC89124")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xC8913C", Offset = "0xC8913C", VA = "0xC8913C", Slot = "34")]
	protected override void FetchPurchasedItems(Action<ItemsDefs.ItemDefinition[]> onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xC8920C", Offset = "0xC8920C", VA = "0xC8920C")]
	private void FetchPurchasedItems(Action<IEnumerable<ItemsDefs.ItemDefinition>> onCompelete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xC89428", Offset = "0xC89428", VA = "0xC89428", Slot = "33")]
	protected override void PurchaseItem(string itemId, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xC89494", Offset = "0xC89494", VA = "0xC89494")]
	private static void _PurchaseItem(string sku, Action onPurchased, Action<string> onError)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0xC89668", Offset = "0xC89668", VA = "0xC89668")]
	private static string ErrorToString(Error err, int indent = 0)
	{
		return null;
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xC86474", Offset = "0xC86474", VA = "0xC86474")]
	private void initPresence()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xC8A19C", Offset = "0xC8A19C", VA = "0xC8A19C")]
	private RichPresenceData GetRichPresenceData(Status gameStatus)
	{
		return null;
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xC8A7E8", Offset = "0xC8A7E8", VA = "0xC8A7E8")]
	private GroupPresenceOptions GetGroupPresenceOptions()
	{
		return null;
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xC8AB70", Offset = "0xC8AB70", VA = "0xC8AB70")]
	private static string CombineIds()
	{
		return null;
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xC8ACF8", Offset = "0xC8ACF8", VA = "0xC8ACF8")]
	private void onMyStatusChanged(Status status)
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xC8ADA0", Offset = "0xC8ADA0", VA = "0xC8ADA0")]
	private static bool IsJoinableByOverseer(LobbyistClient.State state)
	{
		return default(bool);
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xC8ADB0", Offset = "0xC8ADB0", VA = "0xC8ADB0")]
	private void OverseerStateChange(LobbyistClient.State state)
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0xC8AE50", Offset = "0xC8AE50", VA = "0xC8AE50")]
	private static string intentToString(Intent intent)
	{
		return null;
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xC8AF30", Offset = "0xC8AF30", VA = "0xC8AF30")]
	private static Intent stringToIntent(string str)
	{
		return default(Intent);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0xC866A8", Offset = "0xC866A8", VA = "0xC866A8")]
	private void clearPresence()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0xC8AD78", Offset = "0xC8AD78", VA = "0xC8AD78")]
	private void updatePresence()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0xC8B16C", Offset = "0xC8B16C", VA = "0xC8B16C")]
	private void updateGroupPresence()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0xC8B028", Offset = "0xC8B028", VA = "0xC8B028")]
	private void clearGroupPresence()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0xC8B19C", Offset = "0xC8B19C", VA = "0xC8B19C")]
	private void setGroupPresence(GroupPresenceOptions options)
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0xC8B2A4", Offset = "0xC8B2A4", VA = "0xC8B2A4")]
	private void OnLaunchIntentChangeNotif(Message<string> message)
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0xC89A38", Offset = "0xC89A38", VA = "0xC89A38")]
	private void readDeepLinkMessage([Optional] string deeplinkMessage, ulong roomID = 0uL)
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xC8B704", Offset = "0xC8B704", VA = "0xC8B704")]
	[IteratorStateMachine(typeof(<startEditorArena>d__126))]
	private IEnumerator startEditorArena(string destination, float delay)
	{
		return null;
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xC8B578", Offset = "0xC8B578", VA = "0xC8B578")]
	[IteratorStateMachine(typeof(<startSoloSet>d__127))]
	private IEnumerator startSoloSet(string soloID, float delay)
	{
		return null;
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0xC8B508", Offset = "0xC8B508", VA = "0xC8B508")]
	[IteratorStateMachine(typeof(<startSoloMonthlyChallengeSet>d__128))]
	private IEnumerator startSoloMonthlyChallengeSet(float delay)
	{
		return null;
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xC8B5FC", Offset = "0xC8B5FC", VA = "0xC8B5FC")]
	[IteratorStateMachine(typeof(<startArcade>d__129))]
	private IEnumerator startArcade(string arcadeID, float delay)
	{
		return null;
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xC8B680", Offset = "0xC8B680", VA = "0xC8B680")]
	[IteratorStateMachine(typeof(<startRankedMultiplayer>d__130))]
	private IEnumerator startRankedMultiplayer(string destination, float delay)
	{
		return null;
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0xC8B3C4", Offset = "0xC8B3C4", VA = "0xC8B3C4")]
	[IteratorStateMachine(typeof(<startGroupLaunch>d__132))]
	private IEnumerator startGroupLaunch(string destinationApiName, ulong roomID = 0uL, [Optional] UserList users)
	{
		return null;
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0xC8B878", Offset = "0xC8B878", VA = "0xC8B878")]
	[IteratorStateMachine(typeof(<DownloadOculusUserAvatar>d__133))]
	private IEnumerator<float> DownloadOculusUserAvatar(Oculus.Platform.Models.User user)
	{
		return null;
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0xC8B478", Offset = "0xC8B478", VA = "0xC8B478")]
	[IteratorStateMachine(typeof(<sendFriendlyInviteCo>d__134))]
	private IEnumerator sendFriendlyInviteCo(string rnxid)
	{
		return null;
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0xC8B958", Offset = "0xC8B958", VA = "0xC8B958")]
	private void sendFriendlyInvite(bool success, RnxPlatform.User user)
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xC8BBB8", Offset = "0xC8BBB8", VA = "0xC8BBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xC8BBBC", Offset = "0xC8BBBC", VA = "0xC8BBBC")]
	private void UpdateCheckForOverseerStateChange()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0xC8BBFC", Offset = "0xC8BBFC", VA = "0xC8BBFC")]
	public OculusNativePlatform()
	{
	}
}
[Token(Token = "0x20003FC")]
[DisallowMultipleComponent]
public class PicoNativePlatform : EmptyNativePlatform
{
	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xC910D4", Offset = "0xC910D4", VA = "0xC910D4")]
	public PicoNativePlatform()
	{
	}
}
[Token(Token = "0x20003FD")]
public class PicoRemoveDestroyIfNotPico3DSpatializer : MonoBehaviour
{
	[Token(Token = "0x60016AD")]
	[Address(RVA = "0xC910DC", Offset = "0xC910DC", VA = "0xC910DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xC91234", Offset = "0xC91234", VA = "0xC91234")]
	public PicoRemoveDestroyIfNotPico3DSpatializer()
	{
	}
}
[Token(Token = "0x20003FE")]
[DisallowMultipleComponent]
public class PSVRNativePlatform : NativePlatform
{
	[Token(Token = "0x20003FF")]
	public enum ActivityEndState
	{
		[Token(Token = "0x40017B6")]
		None,
		[Token(Token = "0x40017B7")]
		Completed,
		[Token(Token = "0x40017B8")]
		Failed,
		[Token(Token = "0x40017B9")]
		Abandoned
	}

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PSVRNativePlatform _inst;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RnxPlatform.User> _rnxFriendsList;

	[Token(Token = "0x170003D7")]
	public override bool isInitialized
	{
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC9123C", Offset = "0xC9123C", VA = "0xC9123C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xC912E4", Offset = "0xC912E4", VA = "0xC912E4")]
	private string NativeUserIdToString(ulong accountId)
	{
		return null;
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xC91300", Offset = "0xC91300", VA = "0xC91300")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xC913B0", Offset = "0xC913B0", VA = "0xC913B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0xC914BC", Offset = "0xC914BC", VA = "0xC914BC")]
	private static void InitUniversalDataSystem()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xC914C0", Offset = "0xC914C0", VA = "0xC914C0")]
	private static void InitTrophies()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xC914C4", Offset = "0xC914C4", VA = "0xC914C4", Slot = "28")]
	public override bool SupportsAchievements()
	{
		return default(bool);
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xC914CC", Offset = "0xC914CC", VA = "0xC914CC")]
	public bool HasTrophyForAchievement(Achievement achievement)
	{
		return default(bool);
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xC914FC", Offset = "0xC914FC", VA = "0xC914FC", Slot = "29")]
	public override void UnlockAchievement(Achievement achievement, Action<string> callback)
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xC9150C", Offset = "0xC9150C", VA = "0xC9150C", Slot = "30")]
	public override void UpdateAchievementProgress(Achievement achievement, Action<string> callback)
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xC9156C", Offset = "0xC9156C", VA = "0xC9156C")]
	private static CoroutineHandle MakeActivitiesAvailable(IEnumerable<string> ids)
	{
		return default(CoroutineHandle);
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0xC91574", Offset = "0xC91574", VA = "0xC91574")]
	public static CoroutineHandle ActivityEnd(string activityId, ActivityEndState endState)
	{
		return default(CoroutineHandle);
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0xC9157C", Offset = "0xC9157C", VA = "0xC9157C")]
	private static void TerminateAllActivities()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0xC91580", Offset = "0xC91580", VA = "0xC91580")]
	private void Update()
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0xC91584", Offset = "0xC91584", VA = "0xC91584", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0xC91588", Offset = "0xC91588", VA = "0xC91588", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0xC91590", Offset = "0xC91590", VA = "0xC91590", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xC91594", Offset = "0xC91594", VA = "0xC91594", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0xC9159C", Offset = "0xC9159C", VA = "0xC9159C", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xC915A0", Offset = "0xC915A0", VA = "0xC915A0", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xC915BC", Offset = "0xC915BC", VA = "0xC915BC", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0xC915D8", Offset = "0xC915D8", VA = "0xC915D8", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xC915F4", Offset = "0xC915F4", VA = "0xC915F4", Slot = "19")]
	public override bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xC915FC", Offset = "0xC915FC", VA = "0xC915FC", Slot = "21")]
	public override void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xC91600", Offset = "0xC91600", VA = "0xC91600", Slot = "23")]
	public override void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0xC91604", Offset = "0xC91604", VA = "0xC91604", Slot = "24")]
	public override void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0xC91608", Offset = "0xC91608", VA = "0xC91608", Slot = "25")]
	public override bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0xC91614", Offset = "0xC91614", VA = "0xC91614", Slot = "26")]
	public override bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0xC9167C", Offset = "0xC9167C", VA = "0xC9167C")]
	public PSVRNativePlatform()
	{
	}
}
[Token(Token = "0x2000400")]
public abstract class AnimatedSequence : MonoBehaviour
{
	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimatedSequence current;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _abortWhenArenaShutsDown;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _isPlaying;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isNice;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TimedValueLerp[] allTimedValueLerps;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected TimedEvent[] allTimedEvents;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _timer;

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0xC91708", Offset = "0xC91708", VA = "0xC91708", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0xC91AF4", Offset = "0xC91AF4", VA = "0xC91AF4", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0xC91D78", Offset = "0xC91D78", VA = "0xC91D78", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0xC92038", Offset = "0xC92038", VA = "0xC92038", Slot = "7")]
	public virtual void Abort()
	{
	}

	[Token(Token = "0x60016D0")]
	public abstract void StartSequence(float delay = 0f);

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xC922F8", Offset = "0xC922F8", VA = "0xC922F8")]
	protected AnimatedSequence()
	{
	}
}
[Token(Token = "0x2000401")]
public class ArenaStartSequence : AnimatedSequence
{
	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArenaStartSequence inst;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _reflectionIntensityDamp;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedValueLerp _tutorialTimerSkip;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _ballStartDropTime;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TimedEvent _firstTargetAppearTime;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Header("Objects")]
	private float _delayStart;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _currentPlaySpeed;

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xC9230C", Offset = "0xC9230C", VA = "0xC9230C", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xC9237C", Offset = "0xC9237C", VA = "0xC9237C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xC923E4", Offset = "0xC923E4", VA = "0xC923E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xC92400", Offset = "0xC92400", VA = "0xC92400", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xC9260C", Offset = "0xC9260C", VA = "0xC9260C")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0xC927BC", Offset = "0xC927BC", VA = "0xC927BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0xC935AC", Offset = "0xC935AC", VA = "0xC935AC")]
	public static void SpawnBall()
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0xC93AD4", Offset = "0xC93AD4", VA = "0xC93AD4")]
	private void onAnnouncerLetsGoDone()
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xC93B3C", Offset = "0xC93B3C", VA = "0xC93B3C")]
	private void playInGameMusic()
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xC93C80", Offset = "0xC93C80", VA = "0xC93C80")]
	public ArenaStartSequence()
	{
	}
}
[Token(Token = "0x2000402")]
public class BackToMainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BackToMainMenuSequence inst;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _globalFadeOut;

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0xC93C9C", Offset = "0xC93C9C", VA = "0xC93C9C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xC93CFC", Offset = "0xC93CFC", VA = "0xC93CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xC93D0C", Offset = "0xC93D0C", VA = "0xC93D0C", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0xC93EDC", Offset = "0xC93EDC", VA = "0xC93EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0xC9408C", Offset = "0xC9408C", VA = "0xC9408C")]
	private void onTotalBlackout()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0xC942A8", Offset = "0xC942A8", VA = "0xC942A8")]
	public BackToMainMenuSequence()
	{
	}
}
[Token(Token = "0x2000403")]
public class BestOfXRoundOverSequence : AnimatedSequence
{
	[Token(Token = "0x2000404")]
	[CompilerGenerated]
	private sealed class <chooseNextRoundSet>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BestOfXRoundOverSequence <>4__this;

		[Token(Token = "0x170003D8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xC94C3C", Offset = "0xC94C3C", VA = "0xC94C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xC94C84", Offset = "0xC94C84", VA = "0xC94C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xC94880", Offset = "0xC94880", VA = "0xC94880")]
		[DebuggerHidden]
		public <chooseNextRoundSet>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xC94AE4", Offset = "0xC94AE4", VA = "0xC94AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xC94AE8", Offset = "0xC94AE8", VA = "0xC94AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC94C44", Offset = "0xC94C44", VA = "0xC94C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000405")]
	[CompilerGenerated]
	private sealed class <animationCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BestOfXRoundOverSequence <>4__this;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndReason reason;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int p1Score;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int p2Score;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int round;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerID winningPlayer;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MultiplayerDisplay <display>5__2;

		[Token(Token = "0x170003DA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xC953A0", Offset = "0xC953A0", VA = "0xC953A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xC953E8", Offset = "0xC953E8", VA = "0xC953E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC94964", Offset = "0xC94964", VA = "0xC94964")]
		[DebuggerHidden]
		public <animationCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC94CE0", Offset = "0xC94CE0", VA = "0xC94CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC94CE4", Offset = "0xC94CE4", VA = "0xC94CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC953A8", Offset = "0xC953A8", VA = "0xC953A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BestOfXRoundOverSequence inst;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Delay before (sec)")]
	public float gameOverReasonAnnouncment;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float roundXCompleteAnnouncment;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float displayCelebration;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scoreStateAnnouncment;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float nextRound;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float showTargetsDelay;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float gameOver;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Config")]
	public float ballEntryPathSpeed;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MultiplayerScoreboardUI roundCompleteUI;

	[Token(Token = "0x40017DC")]
	private const string COROUTINES_TAG = "BestOfXRoundOverSequence_TAG";

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0xC942BC", Offset = "0xC942BC", VA = "0xC942BC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xC9431C", Offset = "0xC9431C", VA = "0xC9431C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xC9432C", Offset = "0xC9432C", VA = "0xC9432C")]
	public void StartSequence(GameResolution resolution, GameEndReason reason, PlayerID winningPlayer, int round, int p1Score, int p2Score)
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xC94760", Offset = "0xC94760", VA = "0xC94760", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xC94808", Offset = "0xC94808", VA = "0xC94808", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xC9480C", Offset = "0xC9480C", VA = "0xC9480C")]
	[IteratorStateMachine(typeof(<chooseNextRoundSet>d__16))]
	private IEnumerator<float> chooseNextRoundSet()
	{
		return null;
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xC948A8", Offset = "0xC948A8", VA = "0xC948A8")]
	private void startNextRound()
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xC948FC", Offset = "0xC948FC", VA = "0xC948FC")]
	private void showTargets()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xC946B4", Offset = "0xC946B4", VA = "0xC946B4")]
	[IteratorStateMachine(typeof(<animationCo>d__19))]
	private IEnumerator<float> animationCo(GameResolution resolution, GameEndReason reason, PlayerID winningPlayer, int round, int p1Score, int p2Score)
	{
		return null;
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xC9498C", Offset = "0xC9498C", VA = "0xC9498C")]
	private void hideTheBall()
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xC94AB0", Offset = "0xC94AB0", VA = "0xC94AB0")]
	public BestOfXRoundOverSequence()
	{
	}
}
[Token(Token = "0x2000406")]
public class GameOverSequence : AnimatedSequence
{
	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSequence inst;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _hexTransparentToBlack;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _gutterFadeOut;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimedValueLerp _reflectionsDown;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _turnOffLights;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _reflectionsDamping;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedEvent _startRoomBreakdown;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedEvent _showEndgameUI;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedEvent _playAnnouncerMsg;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Objects")]
	private bool _specialTutorialEnding;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[HideInInspector]
	public bool _winningSounds;

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0xC95444", Offset = "0xC95444", VA = "0xC95444", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0xC954A4", Offset = "0xC954A4", VA = "0xC954A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0xC954B4", Offset = "0xC954B4", VA = "0xC954B4", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0xC9589C", Offset = "0xC9589C", VA = "0xC9589C")]
	public void hideTheBall()
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0xC959C0", Offset = "0xC959C0", VA = "0xC959C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0xC969E0", Offset = "0xC969E0", VA = "0xC969E0")]
	public GameOverSequence()
	{
	}
}
[Token(Token = "0x2000407")]
public class GameRestartSequence : AnimatedSequence
{
	[Token(Token = "0x2000408")]
	[CompilerGenerated]
	private sealed class <MPStart>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameRestartSequence <>4__this;

		[Token(Token = "0x170003DD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xC9869C", Offset = "0xC9869C", VA = "0xC9869C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xC986E4", Offset = "0xC986E4", VA = "0xC986E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xC970E4", Offset = "0xC970E4", VA = "0xC970E4")]
		[DebuggerHidden]
		public <MPStart>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xC9848C", Offset = "0xC9848C", VA = "0xC9848C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xC98490", Offset = "0xC98490", VA = "0xC98490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC986A4", Offset = "0xC986A4", VA = "0xC986A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameRestartSequence inst;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x40017F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _reflectionIntensityDampSolo;

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _reflectionIntensityDampArcade;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedEvent _ballStartDropTime;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _firstTargetAppearTime;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Header("Objects")]
	private float _delayStart;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _currentPlaySpeed;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _quickStart;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool _multiPlayerCanStart;

	[Token(Token = "0x170003DC")]
	public float _reflectionIntensityDamp
	{
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xC969F4", Offset = "0xC969F4", VA = "0xC969F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0xC96A2C", Offset = "0xC96A2C", VA = "0xC96A2C", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xC96A9C", Offset = "0xC96A9C", VA = "0xC96A9C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xC96AFC", Offset = "0xC96AFC", VA = "0xC96AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xC96B0C", Offset = "0xC96B0C", VA = "0xC96B0C", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0xC97058", Offset = "0xC97058", VA = "0xC97058")]
	public void OnPlayerRestart()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0xC97070", Offset = "0xC97070", VA = "0xC97070")]
	[IteratorStateMachine(typeof(<MPStart>d__24))]
	private IEnumerator<float> MPStart()
	{
		return null;
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0xC96CD8", Offset = "0xC96CD8", VA = "0xC96CD8")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0xC9710C", Offset = "0xC9710C", VA = "0xC9710C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0xC97D28", Offset = "0xC97D28", VA = "0xC97D28")]
	private static void SpawnBall()
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0xC9830C", Offset = "0xC9830C", VA = "0xC9830C")]
	private void onAnnouncerLetsGoDone()
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0xC9835C", Offset = "0xC9835C", VA = "0xC9835C")]
	private void playInGameMusic()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0xC98464", Offset = "0xC98464", VA = "0xC98464")]
	public GameRestartSequence()
	{
	}
}
[Token(Token = "0x2000409")]
public class MainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuSequence inst;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _reversed;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _globalFadeIn;

	[Token(Token = "0x6001712")]
	[Address(RVA = "0xC98740", Offset = "0xC98740", VA = "0xC98740", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0xC987A0", Offset = "0xC987A0", VA = "0xC987A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0xC987A8", Offset = "0xC987A8", VA = "0xC987A8", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0xC940F0", Offset = "0xC940F0", VA = "0xC940F0")]
	public void StartSequence(bool bReversed = false)
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0xC987E8", Offset = "0xC987E8", VA = "0xC987E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0xC989B0", Offset = "0xC989B0", VA = "0xC989B0")]
	public MainMenuSequence()
	{
	}
}
[Token(Token = "0x200040A")]
public class MPStartSequence : AnimatedSequence
{
	[Token(Token = "0x200040C")]
	[CompilerGenerated]
	private sealed class <DoSequenceCo>d__23 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MPStartSequence <>4__this;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <delayCounter>5__2;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool <announcerSeedIsKnown>5__3;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool <startingPlayerIsKnown>5__4;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeToWaitForStartingPlayer>5__5;

		[Token(Token = "0x170003E0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xC9BCE0", Offset = "0xC9BCE0", VA = "0xC9BCE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xC9BD28", Offset = "0xC9BD28", VA = "0xC9BD28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC9AD28", Offset = "0xC9AD28", VA = "0xC9AD28")]
		[DebuggerHidden]
		public <DoSequenceCo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC9AD50", Offset = "0xC9AD50", VA = "0xC9AD50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC9AD54", Offset = "0xC9AD54", VA = "0xC9AD54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xC9BCE8", Offset = "0xC9BCE8", VA = "0xC9BCE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiplayerScoreboardUI roundCompleteUI;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPStartSequence inst;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _reflectionIntensityDampVersus;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _reflectionIntensityDampCoOp;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _scoreboardHide;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float delayTheEnd;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _delayStart;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _currentPlaySpeed;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CoroutineHandle _DoSequenceCo;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _coroutingRunning;

	[Token(Token = "0x170003DF")]
	public float _reflectionIntensityDamp
	{
		[Token(Token = "0x6001718")]
		[Address(RVA = "0xC989C4", Offset = "0xC989C4", VA = "0xC989C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0xC989F0", Offset = "0xC989F0", VA = "0xC989F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0xC98A58", Offset = "0xC98A58", VA = "0xC98A58")]
	private void Start()
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0xC98A74", Offset = "0xC98A74", VA = "0xC98A74", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0xC98D58", Offset = "0xC98D58", VA = "0xC98D58")]
	[IteratorStateMachine(typeof(<DoSequenceCo>d__23))]
	private IEnumerator<float> DoSequenceCo()
	{
		return null;
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0xC98DCC", Offset = "0xC98DCC", VA = "0xC98DCC", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0xC98CE0", Offset = "0xC98CE0", VA = "0xC98CE0")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0xC98EC8", Offset = "0xC98EC8", VA = "0xC98EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0xC99BC8", Offset = "0xC99BC8", VA = "0xC99BC8")]
	public MPStartSequence()
	{
	}
}
[Token(Token = "0x200040D")]
internal class BrickAssembler
{
	[Token(Token = "0x200040E")]
	[CompilerGenerated]
	private sealed class <get_iterBreakTimers>d__24 : IEnumerable<TimedValueLerp>, IEnumerable, IEnumerator<TimedValueLerp>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TimedValueLerp <>2__current;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BrickAssembler <>4__this;

		[Token(Token = "0x170003E5")]
		private TimedValueLerp System.Collections.Generic.IEnumerator<TimedValueLerp>.Current
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC9D340", Offset = "0xC9D340", VA = "0xC9D340", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xC9D388", Offset = "0xC9D388", VA = "0xC9D388", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC9BE30", Offset = "0xC9BE30", VA = "0xC9BE30")]
		[DebuggerHidden]
		public <get_iterBreakTimers>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC9D2E0", Offset = "0xC9D2E0", VA = "0xC9D2E0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC9D2E4", Offset = "0xC9D2E4", VA = "0xC9D2E4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC9D348", Offset = "0xC9D348", VA = "0xC9D348", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC9D390", Offset = "0xC9D390", VA = "0xC9D390", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<TimedValueLerp> System.Collections.Generic.IEnumerable<TimedValueLerp>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC9D43C", Offset = "0xC9D43C", VA = "0xC9D43C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject obj;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _normal;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _axis;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _finalPos;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _initRot;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _finalRot;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _finalScale;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _firstBuildupUpdate;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _push;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _spinDir;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _spinSpeed;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TimedValueLerp _buildMoveTimer;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TimedValueLerp _breakPushTimer;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _minBrickHeight;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float _maxBrickHeight;

	[Token(Token = "0x170003E2")]
	public bool finishedBuildup
	{
		[Token(Token = "0x600172C")]
		[Address(RVA = "0xC9BD84", Offset = "0xC9BD84", VA = "0xC9BD84")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600172D")]
		[Address(RVA = "0xC9BD8C", Offset = "0xC9BD8C", VA = "0xC9BD8C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003E3")]
	public bool finishedBreakdown
	{
		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC9BD98", Offset = "0xC9BD98", VA = "0xC9BD98")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC9BDA0", Offset = "0xC9BDA0", VA = "0xC9BDA0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003E4")]
	private IEnumerable<TimedValueLerp> iterBreakTimers
	{
		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC9BDAC", Offset = "0xC9BDAC", VA = "0xC9BDAC")]
		[IteratorStateMachine(typeof(<get_iterBreakTimers>d__24))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xC9BE64", Offset = "0xC9BE64", VA = "0xC9BE64")]
	public BrickAssembler(GameObject o)
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0xC9C150", Offset = "0xC9C150", VA = "0xC9C150")]
	public void initBuildup(float start)
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xC9C7B8", Offset = "0xC9C7B8", VA = "0xC9C7B8")]
	private void updateBuildupMove()
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xC9CB28", Offset = "0xC9CB28", VA = "0xC9CB28")]
	private void finishBuild()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xC9CBB0", Offset = "0xC9CBB0", VA = "0xC9CBB0")]
	public void updateBuildup()
	{
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xC9CD4C", Offset = "0xC9CD4C", VA = "0xC9CD4C")]
	public void initBreakdown(Vector3 ballPos)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xC9D048", Offset = "0xC9D048", VA = "0xC9D048")]
	private void updateBreakPush()
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0xC9D1D8", Offset = "0xC9D1D8", VA = "0xC9D1D8")]
	private void finishBreak()
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xC9D1E4", Offset = "0xC9D1E4", VA = "0xC9D1E4")]
	public void updateBreakdown()
	{
	}
}
[Token(Token = "0x200040F")]
public class RoomAssembler : MonoBehaviour
{
	[Token(Token = "0x2000410")]
	public enum State
	{
		[Token(Token = "0x4001883")]
		Disassembled,
		[Token(Token = "0x4001884")]
		Building,
		[Token(Token = "0x4001885")]
		Breaking,
		[Token(Token = "0x4001886")]
		Assembled
	}

	[Token(Token = "0x2000411")]
	[CompilerGenerated]
	private sealed class <slowMotionCo>d__89 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomAssembler <>4__this;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <t>5__2;

		[Token(Token = "0x170003E8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xCA0540", Offset = "0xCA0540", VA = "0xCA0540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xCA0588", Offset = "0xCA0588", VA = "0xCA0588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC9F4BC", Offset = "0xC9F4BC", VA = "0xC9F4BC")]
		[DebuggerHidden]
		public <slowMotionCo>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xCA0324", Offset = "0xCA0324", VA = "0xCA0324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xCA0328", Offset = "0xCA0328", VA = "0xCA0328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xCA0548", Offset = "0xCA0548", VA = "0xCA0548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Build")]
	public float buildFloor;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float buildFloorSound;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float buildBrickDelayChaos;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float buildBrickMove;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buildBrickMoveChaos;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float buildBrickScale;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float buildCeiling;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float buildCeilingRotations;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float buildCeilingSound;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float crossFadeBricks;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Long Build")]
	public float longBuildBrickVerticalDelay;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float longBuildCircularDelay;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float longBuildCeilingDelay;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float longBuildAudioSourceLerp;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float longBuildAudioDelay;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Short Build")]
	public float shortBuildBrickDelay;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shortBuildCeilingDelay;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float shortBuildAudioDelay;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Break")]
	public float breakFloor;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float breakBrickMinPush;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float breakBrickMaxPush;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float breakBrickPushChaos;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float breakBrickPushDirChaos;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float breakBrickSpin;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float breakBrickSpinChaos;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float breakCeiling;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float slowMotionAmount;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float unSlowMotionStart;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float unSlowMotionDuration;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Setup")]
	public GameObject bricks;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ceiling;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject floor;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject spaceSphere;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject background;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform bricksAudioSource;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RoomAssembler inst;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float timer;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 lastBallPos;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 ZERO;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private State _state;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BrickAssembler[] _animatedBricks;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TimedValueLerp _buildCeiling;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TimedValueLerp _logoLightOff;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TimedValueLerp _buildFloor;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TimedEvent _buildCeilingSound;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private TimedEvent _buildCeilingEnd;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TimedEvent _buildFloorSound;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private TimedEvent _buildFloorEnd;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TimedValueLerp _breakCeiling;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TimedValueLerp _breakFloor;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TimedEvent _breakCeilingEnd;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TimedEvent _breakFloorEnd;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 _ceilingInitPos;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 _ceilingFinalPos;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion _ceilingBaseRot;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 _ceilingFinalScale;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Vector3 _floorInitPos;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 _floorFinalPos;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 _floorFinalScale;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _currentPlaySpeed;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _finishedBuildup;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool _finishedBreakdown;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
	private bool _bricksAudioSourceInit;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private SpatializedAudio _hexLoopAudio;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private CoroutineHandle _slowMotionCo;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool shortBuildup;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Vector3? bicksFrontier;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _breakingFromTutorial;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int _OpacityID;

	[Token(Token = "0x170003E7")]
	public State state
	{
		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC9D440", Offset = "0xC9D440", VA = "0xC9D440")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x14000034")]
	public static event Action onRoomExplode
	{
		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC9D448", Offset = "0xC9D448", VA = "0xC9D448")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001745")]
		[Address(RVA = "0xC9D524", Offset = "0xC9D524", VA = "0xC9D524")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xC9D600", Offset = "0xC9D600", VA = "0xC9D600")]
	public void Select()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xC9D77C", Offset = "0xC9D77C", VA = "0xC9D77C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xC9D7E4", Offset = "0xC9D7E4", VA = "0xC9D7E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xC9BB70", Offset = "0xC9BB70", VA = "0xC9BB70")]
	public static void StartBuildup(bool shortBuildup)
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xC9DF20", Offset = "0xC9DF20", VA = "0xC9DF20")]
	public static void StartBreakdown(bool specailTutorialBreakdown)
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xC9CCB0", Offset = "0xC9CCB0", VA = "0xC9CCB0")]
	public static bool isTimerInRange(TimedValueLerp t)
	{
		return default(bool);
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xC9E3C0", Offset = "0xC9E3C0", VA = "0xC9E3C0")]
	public static bool isTimerDone(TimedValueLerp t)
	{
		return default(bool);
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xC9E430", Offset = "0xC9E430", VA = "0xC9E430")]
	public static bool IsBuildupComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xC9E4FC", Offset = "0xC9E4FC", VA = "0xC9E4FC")]
	public static bool IsBreakdownComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0xC9E5C8", Offset = "0xC9E5C8", VA = "0xC9E5C8")]
	public static void abort()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xC9DA4C", Offset = "0xC9DA4C", VA = "0xC9DA4C")]
	private void initBuild()
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xC9EA7C", Offset = "0xC9EA7C", VA = "0xC9EA7C")]
	private void updateBuild()
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xC9E6EC", Offset = "0xC9E6EC", VA = "0xC9E6EC")]
	public void finishBuild()
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xC9E170", Offset = "0xC9E170", VA = "0xC9E170")]
	private void initBreakdown()
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xC9F448", Offset = "0xC9F448", VA = "0xC9F448")]
	[IteratorStateMachine(typeof(<slowMotionCo>d__89))]
	private IEnumerator<float> slowMotionCo()
	{
		return null;
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0xC9F4E4", Offset = "0xC9F4E4", VA = "0xC9F4E4")]
	private void updateBreakdown()
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xC9E928", Offset = "0xC9E928", VA = "0xC9E928")]
	private void finishBreakdown()
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xC9FB90", Offset = "0xC9FB90", VA = "0xC9FB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xC9FFA4", Offset = "0xC9FFA4", VA = "0xC9FFA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xC9FFC4", Offset = "0xC9FFC4", VA = "0xC9FFC4")]
	public RoomAssembler()
	{
	}
}
[Token(Token = "0x2000412")]
public class StartScreenToMainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartScreenToMainMenuSequence inst;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent activateMainMenu;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _delayStart;

	[Token(Token = "0x6001761")]
	[Address(RVA = "0xCA05E4", Offset = "0xCA05E4", VA = "0xCA05E4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0xCA0648", Offset = "0xCA0648", VA = "0xCA0648")]
	private void Start()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0xCA0664", Offset = "0xCA0664", VA = "0xCA0664", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0xCA07B4", Offset = "0xCA07B4", VA = "0xCA07B4")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0xCA08C4", Offset = "0xCA08C4", VA = "0xCA08C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0xCA0B6C", Offset = "0xCA0B6C", VA = "0xCA0B6C")]
	public StartScreenToMainMenuSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x2000415")]
public class TimedEvent
{
	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float _triggerTime;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _triggered;

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xC9EA74", Offset = "0xC9EA74", VA = "0xC9EA74")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xC9F41C", Offset = "0xC9F41C", VA = "0xC9F41C")]
	public bool IsTriggered(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xCA0E5C", Offset = "0xCA0E5C", VA = "0xCA0E5C")]
	public bool HasTriggered()
	{
		return default(bool);
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xCA0270", Offset = "0xCA0270", VA = "0xCA0270")]
	public TimedEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000416")]
public class TimedValueLerp
{
	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool _smoothResult;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float _startTime;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _endTime;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _started;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _ended;

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xCA0E64", Offset = "0xCA0E64", VA = "0xCA0E64")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xCA0E6C", Offset = "0xCA0E6C", VA = "0xCA0E6C")]
	public bool IsStarted(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xCA0E98", Offset = "0xCA0E98", VA = "0xCA0E98")]
	public bool HasStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0xCA0EA0", Offset = "0xCA0EA0", VA = "0xCA0EA0")]
	public bool IsEnded(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xCA0ECC", Offset = "0xCA0ECC", VA = "0xCA0ECC")]
	public bool HasEnded()
	{
		return default(bool);
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0xCA0ED4", Offset = "0xCA0ED4", VA = "0xCA0ED4")]
	public static float smootherStep(float x)
	{
		return default(float);
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0xC9C128", Offset = "0xC9C128", VA = "0xC9C128")]
	public TimedValueLerp(bool doSmoothStep = false)
	{
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0xC9CAC4", Offset = "0xC9CAC4", VA = "0xC9CAC4")]
	public float sampleValue(float time)
	{
		return default(float);
	}
}
[Token(Token = "0x2000417")]
public class AvatarConfigurations : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000418")]
	public class MaterialPair
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material p1;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material p2;

		[NonSerialized]
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material current;

		[NonSerialized]
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material lerpTo;

		[NonSerialized]
		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material lerpFrom;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xCA1698", Offset = "0xCA1698", VA = "0xCA1698")]
		public bool HasMaterial(Material m)
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xCA2434", Offset = "0xCA2434", VA = "0xCA2434")]
		private static string GetFixedName(string name)
		{
			return null;
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xCA19A4", Offset = "0xCA19A4", VA = "0xCA19A4")]
		public void Init(AvatarConfigurations config)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xCA2330", Offset = "0xCA2330", VA = "0xCA2330")]
		public MaterialPair()
		{
		}
	}

	[Token(Token = "0x2000419")]
	[CompilerGenerated]
	private sealed class <UpdateMaterialsCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarConfigurations <>4__this;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x170003ED")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xCA27E8", Offset = "0xCA27E8", VA = "0xCA27E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xCA2830", Offset = "0xCA2830", VA = "0xCA2830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xCA23FC", Offset = "0xCA23FC", VA = "0xCA23FC")]
		[DebuggerHidden]
		public <UpdateMaterialsCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xCA251C", Offset = "0xCA251C", VA = "0xCA251C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xCA2520", Offset = "0xCA2520", VA = "0xCA2520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xCA27F0", Offset = "0xCA27F0", VA = "0xCA27F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerID _playerID;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float colorChangeDuration;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<MaterialPair> _materialPairs;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CoroutineHandle _UpdateMaterialsCo;

	[Token(Token = "0x170003EC")]
	public PlayerID PlayerID
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0xCA0F00", Offset = "0xCA0F00", VA = "0xCA0F00")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0xCA0F08", Offset = "0xCA0F08", VA = "0xCA0F08")]
	public void ChangePlayerID(PlayerID id, bool immediately = false)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0xCA1408", Offset = "0xCA1408", VA = "0xCA1408")]
	public void Init()
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0xCA1768", Offset = "0xCA1768", VA = "0xCA1768")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0xCA1B6C", Offset = "0xCA1B6C", VA = "0xCA1B6C")]
	public Material GetCurrentMaterial(string name)
	{
		return null;
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0xCA1CF4", Offset = "0xCA1CF4", VA = "0xCA1CF4")]
	public void GetMaterialsByProperty(int propID, List<Material> list)
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xCA1F20", Offset = "0xCA1F20", VA = "0xCA1F20")]
	public Material GetReferenceMaterial(MaterialPair pair)
	{
		return null;
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0xCA1F4C", Offset = "0xCA1F4C", VA = "0xCA1F4C")]
	public Material AppendIfUnique(Material p1, Material p2)
	{
		return null;
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xCA1178", Offset = "0xCA1178", VA = "0xCA1178")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xCA2388", Offset = "0xCA2388", VA = "0xCA2388")]
	[IteratorStateMachine(typeof(<UpdateMaterialsCo>d__15))]
	private IEnumerator<float> UpdateMaterialsCo()
	{
		return null;
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0xCA0F28", Offset = "0xCA0F28", VA = "0xCA0F28")]
	public void UpdateMaterialsImmediately()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xCA2424", Offset = "0xCA2424", VA = "0xCA2424")]
	public AvatarConfigurations()
	{
	}
}
[Token(Token = "0x200041A")]
public class AvatarController : MonoBehaviour
{
	[Token(Token = "0x200041B")]
	private class BrainPart
	{
		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _dir;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _origin;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _offset;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xCA5674", Offset = "0xCA5674", VA = "0xCA5674")]
		public BrainPart(Transform t)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xCA44B0", Offset = "0xCA44B0", VA = "0xCA44B0")]
		public void Update(float loudness, float t)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200041C")]
	public class SpineLink
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _percent;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _offsetPos;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion _offsetRot;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SmoothVector3 _up;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xCA6970", Offset = "0xCA6970", VA = "0xCA6970")]
		private void GetSpinePose(AvatarController avatar, float dt, ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xCA4800", Offset = "0xCA4800", VA = "0xCA4800")]
		public void Init(AvatarController avatar)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xCA3F7C", Offset = "0xCA3F7C", VA = "0xCA3F7C")]
		public void Update(AvatarController avatar, float dt)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xCA6B68", Offset = "0xCA6B68", VA = "0xCA6B68")]
		public SpineLink()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200041D")]
	public class Connector
	{
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform inAnchor;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform outAnchor;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer[] _lines;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] _points;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Bezier.BezierSegment _segment;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xCA5B38", Offset = "0xCA5B38", VA = "0xCA5B38")]
		public void Init(AvatarController avatar)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xCA6B70", Offset = "0xCA6B70", VA = "0xCA6B70")]
		private void UpdateSpline()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xCA6D54", Offset = "0xCA6D54", VA = "0xCA6D54")]
		private void UpdateLines(AvatarController avatar)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xCA41C4", Offset = "0xCA41C4", VA = "0xCA41C4")]
		public void Update(AvatarController avatar)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xCA63C8", Offset = "0xCA63C8", VA = "0xCA63C8")]
		public void DrawGizmos(AvatarController avatar)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xCA6F5C", Offset = "0xCA6F5C", VA = "0xCA6F5C")]
		public Connector()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200041E")]
	public class Spring
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _initLocalPos;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _initLocalUp;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _localOffset;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _offsetRot;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpringVector3 _spring;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xCA57E0", Offset = "0xCA57E0", VA = "0xCA57E0")]
		public void Init()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xCA5008", Offset = "0xCA5008", VA = "0xCA5008")]
		public void Update(float dt, float time, float strength, float drag)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xCA66C4", Offset = "0xCA66C4", VA = "0xCA66C4")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xCA73A0", Offset = "0xCA73A0", VA = "0xCA73A0")]
		public Spring()
		{
		}
	}

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarSettings.AvatarLabel label;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Spine")]
	public float pelvisOffsetFromHead;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pelvisTangents;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pelvisDirDamp;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pelvisTangentOffset;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float pelvisStiffness;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pelvisAngleDeadZone;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve pelvisPosDampCurve;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pelvisPosDampMin;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pelvisPosDampMax;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pelvisPosDampRadius;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Energy Lines")]
	public int numLines;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distBetweenLines;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float energyLineWidth;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material lineMaterialP1;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material lineMaterialP2;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Voice")]
	public float voiceLightStrength;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float voiceScale;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float voiceFrequency;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float voiceSmoothTime;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Setup")]
	public Transform head;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform brain;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform[] brainParts;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform spineEnd;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpineLink[] spine;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform spineStart;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform pelvis;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Connector[] connectors;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Springs")]
	public float springsStrength;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float springsDrag;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Spring[] springs;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Medals")]
	public Transform medalsUpperPosition;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform medalsLowerPosition;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Debug")]
	public bool connectToHead;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool debugDraw;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bezier.BezierSegment _spineSpline;

	[NonSerialized]
	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float averageHeight;

	[NonSerialized]
	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform[] anchors;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SmoothVector3 _pelvisSmoothPos;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SmoothVector3 _pelvisSmoothDir;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SmoothVector3 _pelvisSmoothUp;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SmoothFloat _loudness;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private BrainPart[] _brainParts;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<Material> _speakMaterials;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _SpeakingID;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AvatarMedals _avatarMedals;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _isPlayer;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlayerModel _model;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Player _player;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _mirrorTurnAngle;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Matrix4x4 _turnMatrix;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _mirrorMatrixValid;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Matrix4x4 _mirrorMatrixPre;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Matrix4x4 _mirrorMatrixPost;

	[Token(Token = "0x170003EF")]
	public float Loudness
	{
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xCA288C", Offset = "0xCA288C", VA = "0xCA288C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003F0")]
	public AvatarMedals Medals
	{
		[Token(Token = "0x6001794")]
		[Address(RVA = "0xCA28AC", Offset = "0xCA28AC", VA = "0xCA28AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003F1")]
	public Player Player
	{
		[Token(Token = "0x6001795")]
		[Address(RVA = "0xCA28B4", Offset = "0xCA28B4", VA = "0xCA28B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003F2")]
	public float MirrorTurnAngle
	{
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xCA28BC", Offset = "0xCA28BC", VA = "0xCA28BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xCA28C4", Offset = "0xCA28C4", VA = "0xCA28C4")]
		set
		{
		}
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xCA2A3C", Offset = "0xCA2A3C", VA = "0xCA2A3C")]
	private void BakeMirrorMatrix()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xCA2EC8", Offset = "0xCA2EC8", VA = "0xCA2EC8")]
	public void MirrorTransform(Transform source, Transform target)
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xCA303C", Offset = "0xCA303C", VA = "0xCA303C")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xCA31D8", Offset = "0xCA31D8", VA = "0xCA31D8")]
	public void Relocate(Vector3 offset)
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xCA32D8", Offset = "0xCA32D8", VA = "0xCA32D8")]
	private float GetCurrentHeight()
	{
		return default(float);
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xCA33E4", Offset = "0xCA33E4", VA = "0xCA33E4")]
	private void UpdatePelvis(float dt)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xCA3CF4", Offset = "0xCA3CF4", VA = "0xCA3CF4")]
	private void UpdateSpline()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xCA3F04", Offset = "0xCA3F04", VA = "0xCA3F04")]
	private void UpdateSpine(float dt)
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xCA414C", Offset = "0xCA414C", VA = "0xCA414C")]
	private void UpdateConnectors()
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xCA41EC", Offset = "0xCA41EC", VA = "0xCA41EC")]
	private void UpdateVoice(float t, float dt)
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xCA4518", Offset = "0xCA4518", VA = "0xCA4518")]
	public void Init()
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xCA45B0", Offset = "0xCA45B0", VA = "0xCA45B0")]
	private void SetMedalsPosition(Transform holder)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xCA4528", Offset = "0xCA4528", VA = "0xCA4528")]
	public void HideBrain()
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xCA4710", Offset = "0xCA4710", VA = "0xCA4710")]
	public void ShowBrain()
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xCA4798", Offset = "0xCA4798", VA = "0xCA4798")]
	private void InitSpine()
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xCA49C0", Offset = "0xCA49C0", VA = "0xCA49C0")]
	private void ResetSpeaker()
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0xCA4B30", Offset = "0xCA4B30", VA = "0xCA4B30")]
	private void FindChildrenWithSuffix(Transform parent, string suffix, List<Transform> list)
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0xCA4EB4", Offset = "0xCA4EB4", VA = "0xCA4EB4")]
	private void FindAnchors()
	{
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0xCA4F8C", Offset = "0xCA4F8C", VA = "0xCA4F8C")]
	private void UpdateSprings(float dt, float time)
	{
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0xCA52E8", Offset = "0xCA52E8", VA = "0xCA52E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0xCA5A24", Offset = "0xCA5A24", VA = "0xCA5A24")]
	private void Start()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xCA5F30", Offset = "0xCA5F30", VA = "0xCA5F30")]
	private void Update()
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xCA60F0", Offset = "0xCA60F0", VA = "0xCA60F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xCA67B0", Offset = "0xCA67B0", VA = "0xCA67B0")]
	public AvatarController()
	{
	}
}
[Token(Token = "0x200041F")]
public class AvatarMedals : MonoBehaviour
{
	[Token(Token = "0x2000421")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarMedals <>4__this;

		[Token(Token = "0x170003F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xCA81C8", Offset = "0xCA81C8", VA = "0xCA81C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xCA8210", Offset = "0xCA8210", VA = "0xCA8210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xCA7484", Offset = "0xCA7484", VA = "0xCA7484")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xCA7EF4", Offset = "0xCA7EF4", VA = "0xCA7EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xCA7EF8", Offset = "0xCA7EF8", VA = "0xCA7EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xCA81D0", Offset = "0xCA81D0", VA = "0xCA81D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000422")]
	[CompilerGenerated]
	private sealed class <showOpponent>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMedals <>4__this;

		[Token(Token = "0x170003F5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xCA8328", Offset = "0xCA8328", VA = "0xCA8328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xCA8370", Offset = "0xCA8370", VA = "0xCA8370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xCA7DA4", Offset = "0xCA7DA4", VA = "0xCA7DA4")]
		[DebuggerHidden]
		public <showOpponent>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xCA8218", Offset = "0xCA8218", VA = "0xCA8218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xCA821C", Offset = "0xCA821C", VA = "0xCA821C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xCA8330", Offset = "0xCA8330", VA = "0xCA8330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerModel _model;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle? _showOpponent;

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0xCA73B8", Offset = "0xCA73B8", VA = "0xCA73B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0xCA7410", Offset = "0xCA7410", VA = "0xCA7410")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0xCA74AC", Offset = "0xCA74AC", VA = "0xCA74AC")]
	private void onMedalAwarded()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0xCA751C", Offset = "0xCA751C", VA = "0xCA751C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0xCA76AC", Offset = "0xCA76AC", VA = "0xCA76AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xCA7830", Offset = "0xCA7830", VA = "0xCA7830")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xCA7770", Offset = "0xCA7770", VA = "0xCA7770")]
	private void removeAllMedals()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xCA78E0", Offset = "0xCA78E0", VA = "0xCA78E0")]
	private void showMedals(List<Medals.Bunch> medalBunches)
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xCA74B0", Offset = "0xCA74B0", VA = "0xCA74B0")]
	private void updateMeNow()
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xCA7638", Offset = "0xCA7638", VA = "0xCA7638")]
	[IteratorStateMachine(typeof(<showOpponent>d__11))]
	private IEnumerator<float> showOpponent()
	{
		return null;
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xCA7DCC", Offset = "0xCA7DCC", VA = "0xCA7DCC")]
	public AvatarMedals()
	{
	}
}
[Token(Token = "0x2000423")]
[RequireComponent(typeof(Renderer))]
public class AvatarRenderer : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	public enum Coat
	{
		[Token(Token = "0x4001903")]
		None,
		[Token(Token = "0x4001904")]
		Primary,
		[Token(Token = "0x4001905")]
		Secondary
	}

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Coat coat;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x170003F7")]
	public Renderer Renderer
	{
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xCA83CC", Offset = "0xCA83CC", VA = "0xCA83CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0xCA8474", Offset = "0xCA8474", VA = "0xCA8474")]
	public AvatarRenderer()
	{
	}
}
[Token(Token = "0x2000425")]
public class FireTrail : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000426")]
	public class PlayerParams
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material boltMaterial_Slow;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material boltMaterial_Fast;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material boltMaterial_Powershot;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _boltMaterial;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material flameMaterial;

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xCA8698", Offset = "0xCA8698", VA = "0xCA8698")]
		public void UpdateMaterial(Material mat, bool powershot, float t)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xCA9634", Offset = "0xCA9634", VA = "0xCA9634")]
		public PlayerParams()
		{
		}
	}

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numPoints;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float boltMinScale;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float boltMaxScale;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ballSlowSpeed;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ballFastSpeed;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject visuals;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] bones;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer boltRenderer;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystemRenderer flameParticles;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerParams p1;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerParams p2;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onForMe;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool onForOpponent;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _transform;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _bolt;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Ball _ball;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _lastUp;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 _lastVelocity;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CyclicBuffer<Vector3> _trail;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Quaternion OFFSET_ROT;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _strength;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0xCA847C", Offset = "0xCA847C", VA = "0xCA847C")]
	private void UpdateMaterialsAndScale(PlayerID playerID)
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0xCA87C0", Offset = "0xCA87C0", VA = "0xCA87C0")]
	private void UpdateBones()
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0xCA9080", Offset = "0xCA9080", VA = "0xCA9080")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0xCA9228", Offset = "0xCA9228", VA = "0xCA9228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0xCA92CC", Offset = "0xCA92CC", VA = "0xCA92CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0xCA9370", Offset = "0xCA9370", VA = "0xCA9370")]
	private void OnBallHitRacket(ShotInfo shotInfo, Vector3 _)
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0xCA93F8", Offset = "0xCA93F8", VA = "0xCA93F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0xCA9458", Offset = "0xCA9458", VA = "0xCA9458")]
	private void Update()
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0xCA95CC", Offset = "0xCA95CC", VA = "0xCA95CC")]
	public FireTrail()
	{
	}
}
[Token(Token = "0x2000427")]
public class Item_Anchored : Item_Base
{
	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Hit Particles")]
	public int minBurstSize;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxBurstSize;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem hitFXPrefab;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _i;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _racketHitCount;

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xCA963C", Offset = "0xCA963C", VA = "0xCA963C")]
	private void OnBallHitRacket(ShotInfo shotInfo, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xCA9D9C", Offset = "0xCA9D9C", VA = "0xCA9D9C")]
	private void OnWaveStart(string _, int n)
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xCA977C", Offset = "0xCA977C", VA = "0xCA977C")]
	private bool ShouldPlayOnThisHit()
	{
		return default(bool);
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xCA9DA4", Offset = "0xCA9DA4", VA = "0xCA9DA4")]
	public void PlayHitFX(Vector3 pos, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0xCA9870", Offset = "0xCA9870", VA = "0xCA9870")]
	private void PlayHitFX(Vector3 pos, Vector3 normalizedVelocity, bool fromRacket)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0xCA9E74", Offset = "0xCA9E74", VA = "0xCA9E74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0xCA9FE0", Offset = "0xCA9FE0", VA = "0xCA9FE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xCAA12C", Offset = "0xCAA12C", VA = "0xCAA12C")]
	private Transform GetItemAnchor(PlayerModel model, string itemName)
	{
		return null;
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xCAA1C4", Offset = "0xCAA1C4", VA = "0xCAA1C4", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xCAA53C", Offset = "0xCAA53C", VA = "0xCAA53C")]
	public Item_Anchored()
	{
	}
}
[Token(Token = "0x2000428")]
public class Item_Base : MonoBehaviour
{
	[Token(Token = "0x2000429")]
	public class Chain
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform[] _bones;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringVector3[] _springs;

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xCAA664", Offset = "0xCAA664", VA = "0xCAA664")]
		public Chain(Transform[] bones)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xCAA8AC", Offset = "0xCAA8AC", VA = "0xCAA8AC")]
		public void Update(float dt, float springStrength, float springDrag, float springAmount, float springGravity)
		{
		}
	}

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ItemId(ItemsDefs.ItemShelf.None)]
	public string itemId;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected PlayerModel _model;

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xCAA468", Offset = "0xCAA468", VA = "0xCAA468")]
	public void SetAvatarLayer()
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xCAA3B0", Offset = "0xCAA3B0", VA = "0xCAA3B0", Slot = "4")]
	public virtual Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xCAA558", Offset = "0xCAA558", VA = "0xCAA558", Slot = "5")]
	protected virtual void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xCAA55C", Offset = "0xCAA55C", VA = "0xCAA55C", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xCAA5E0", Offset = "0xCAA5E0", VA = "0xCAA5E0", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xCAA550", Offset = "0xCAA550", VA = "0xCAA550")]
	public Item_Base()
	{
	}
}
[Token(Token = "0x200042A")]
public class Item_ChickenComb : Item_Anchored
{
	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Springs")]
	public float springStrength;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springAmount;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springGravity;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<Chain> _chains;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material p1;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material p2;

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xCAAA78", Offset = "0xCAAA78", VA = "0xCAAA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xCAAFD0", Offset = "0xCAAFD0", VA = "0xCAAFD0", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xCAB0D4", Offset = "0xCAB0D4", VA = "0xCAB0D4", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xCAB234", Offset = "0xCAB234", VA = "0xCAB234")]
	public Item_ChickenComb()
	{
	}
}
[Token(Token = "0x200042B")]
public class Item_Cigar : Item_Anchored
{
	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Spring")]
	public float springStrength;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springMaxLength;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springAmount;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float springGravity;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float speakingAngle;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringVector3 _spring;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _SpeakingID;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer[] _speakingRenderers;

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xCAB2D4", Offset = "0xCAB2D4", VA = "0xCAB2D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0xCAB50C", Offset = "0xCAB50C", VA = "0xCAB50C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xCAB5BC", Offset = "0xCAB5BC", VA = "0xCAB5BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xCAB66C", Offset = "0xCAB66C", VA = "0xCAB66C")]
	private void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xCAB6A0", Offset = "0xCAB6A0", VA = "0xCAB6A0", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xCAB98C", Offset = "0xCAB98C", VA = "0xCAB98C")]
	public Item_Cigar()
	{
	}
}
[Token(Token = "0x200042C")]
public class Item_Crown : Item_Hat
{
	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Crown")]
	public float rotationSpeed;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _rotationAngle;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _child;

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xCAB9B8", Offset = "0xCAB9B8", VA = "0xCAB9B8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xCABA30", Offset = "0xCABA30", VA = "0xCABA30", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xCABAA0", Offset = "0xCABAA0", VA = "0xCABAA0")]
	public Item_Crown()
	{
	}
}
[Token(Token = "0x200042D")]
public class Item_FireTrail : Item_Trail
{
	[Token(Token = "0x6001808")]
	[Address(RVA = "0xCABAF0", Offset = "0xCABAF0", VA = "0xCABAF0", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xCABCE0", Offset = "0xCABCE0", VA = "0xCABCE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xCABD58", Offset = "0xCABD58", VA = "0xCABD58")]
	public Item_FireTrail()
	{
	}
}
[Token(Token = "0x200042E")]
public class Item_HamsaRacket : Item_Base
{
	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform center;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] wings;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystemRenderer sparks;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material hamsaMaterialP1;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material hamsaMaterialP2;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material sparkMaterialP1;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material sparkMaterialP2;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _quitting;

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xCABD68", Offset = "0xCABD68", VA = "0xCABD68", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xCABEC8", Offset = "0xCABEC8", VA = "0xCABEC8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xCABED4", Offset = "0xCABED4", VA = "0xCABED4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xCABF88", Offset = "0xCABF88", VA = "0xCABF88")]
	public Item_HamsaRacket()
	{
	}
}
[Token(Token = "0x200042F")]
public class Item_Hat : Item_Anchored
{
	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Hat")]
	public float springStrength;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springMaxLength;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springAmount;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float springGravity;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform _transform;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringVector3 _spring;

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xCABF90", Offset = "0xCABF90", VA = "0xCABF90", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xCABA0C", Offset = "0xCABA0C", VA = "0xCABA0C", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xCABAC8", Offset = "0xCABAC8", VA = "0xCABAC8")]
	public Item_Hat()
	{
	}
}
[Token(Token = "0x2000430")]
public class Item_Pendant : Item_Base
{
	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numCopies;

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xCAC1B4", Offset = "0xCAC1B4", VA = "0xCAC1B4", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xCAC554", Offset = "0xCAC554", VA = "0xCAC554")]
	public Item_Pendant()
	{
	}
}
[Token(Token = "0x2000431")]
public class Item_PixelTrail : Item_Trail
{
	[Token(Token = "0x6001814")]
	[Address(RVA = "0xCAC564", Offset = "0xCAC564", VA = "0xCAC564", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xCAC5E8", Offset = "0xCAC5E8", VA = "0xCAC5E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xCAC660", Offset = "0xCAC660", VA = "0xCAC660")]
	public Item_PixelTrail()
	{
	}
}
[Token(Token = "0x2000432")]
public class Item_Trail : Item_Base
{
	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailMaker.TrailDef[] trailDefs;

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xCABB74", Offset = "0xCABB74", VA = "0xCABB74", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xCAC668", Offset = "0xCAC668", VA = "0xCAC668")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0xCABD60", Offset = "0xCABD60", VA = "0xCABD60")]
	public Item_Trail()
	{
	}
}
[Token(Token = "0x2000433")]
public class Item_WizardHat : Item_Hat
{
	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Wizard")]
	public float chainStrength;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float chainDrag;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float chainAmount;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float chainGravity;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform[] bones;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Chain _chain;

	[Token(Token = "0x600181A")]
	[Address(RVA = "0xCAC6C8", Offset = "0xCAC6C8", VA = "0xCAC6C8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0xCAC754", Offset = "0xCAC754", VA = "0xCAC754", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0xCAC78C", Offset = "0xCAC78C", VA = "0xCAC78C")]
	public Item_WizardHat()
	{
	}
}
[Token(Token = "0x2000434")]
public class MirrorBall : MonoBehaviour
{
	[Token(Token = "0x2000435")]
	[CompilerGenerated]
	private sealed class <ShowBallCo>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MirrorBall <>4__this;

		[Token(Token = "0x170003F9")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0xCACEC4", Offset = "0xCACEC4", VA = "0xCACEC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0xCACF0C", Offset = "0xCACF0C", VA = "0xCACF0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xCAC9B8", Offset = "0xCAC9B8", VA = "0xCAC9B8")]
		[DebuggerHidden]
		public <ShowBallCo>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xCACD34", Offset = "0xCACD34", VA = "0xCACD34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xCACD38", Offset = "0xCACD38", VA = "0xCACD38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xCACECC", Offset = "0xCACECC", VA = "0xCACECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000436")]
	[CompilerGenerated]
	private sealed class <HideBallCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x170003FB")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xCAD1A4", Offset = "0xCAD1A4", VA = "0xCAD1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0xCAD1EC", Offset = "0xCAD1EC", VA = "0xCAD1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xCACAD8", Offset = "0xCACAD8", VA = "0xCACAD8")]
		[DebuggerHidden]
		public <HideBallCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xCACF68", Offset = "0xCACF68", VA = "0xCACF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xCACF6C", Offset = "0xCACF6C", VA = "0xCACF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xCAD1AC", Offset = "0xCAD1AC", VA = "0xCAD1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float swing;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float trailTimeStep;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _transform;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer1;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timer2;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _ShowBallCo;

	[Token(Token = "0x170003F8")]
	private Vector3 Target
	{
		[Token(Token = "0x600181D")]
		[Address(RVA = "0xCAC7C0", Offset = "0xCAC7C0", VA = "0xCAC7C0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0xCAC82C", Offset = "0xCAC82C", VA = "0xCAC82C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0xCAC8A8", Offset = "0xCAC8A8", VA = "0xCAC8A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0xCAC944", Offset = "0xCAC944", VA = "0xCAC944")]
	[IteratorStateMachine(typeof(<ShowBallCo>d__13))]
	private IEnumerator<float> ShowBallCo()
	{
		return null;
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0xCAC9E0", Offset = "0xCAC9E0", VA = "0xCAC9E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xCACA78", Offset = "0xCACA78", VA = "0xCACA78")]
	[IteratorStateMachine(typeof(<HideBallCo>d__15))]
	private IEnumerator<float> HideBallCo()
	{
		return null;
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xCACB00", Offset = "0xCACB00", VA = "0xCACB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xCACC30", Offset = "0xCACC30", VA = "0xCACC30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xCACD20", Offset = "0xCACD20", VA = "0xCACD20")]
	public MirrorBall()
	{
	}
}
[Token(Token = "0x2000437")]
public class Pendant : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000438")]
	public class Item
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _active;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpringJoint _joint;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer _line;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _model;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SmoothVector3 _tangent;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bezier.BezierSegment _segment;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xCAD7A0", Offset = "0xCAD7A0", VA = "0xCAD7A0")]
		public Item Duplicate()
		{
			return null;
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xCAD6B8", Offset = "0xCAD6B8", VA = "0xCAD6B8")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xCAD648", Offset = "0xCAD648", VA = "0xCAD648")]
		public void SetConnectedBody(Rigidbody connectedBody, Vector3 connectedAnchor)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xCAD898", Offset = "0xCAD898", VA = "0xCAD898")]
		public void Init(PlayerModel playerModel, int numPoints, GameObject model, Rigidbody connectedBody)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xCADF24", Offset = "0xCADF24", VA = "0xCADF24")]
		public void Update(float dt, float smoothTime, int numPoints, PlayerModel playerModel)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xCAE190", Offset = "0xCAE190", VA = "0xCAE190")]
		public Item()
		{
		}
	}

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numPoints;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothTime;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Item> items;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerModel _playerModel;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _handleRB;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _followTarget;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _unscaledTimer;

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xCAD248", Offset = "0xCAD248", VA = "0xCAD248")]
	private void ValidateHandle()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xCAC26C", Offset = "0xCAC26C", VA = "0xCAC26C")]
	public void UseModel(GameObject model, int numCopies = 1)
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xCADB9C", Offset = "0xCADB9C", VA = "0xCADB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xCADD48", Offset = "0xCADD48", VA = "0xCADD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0xCAE178", Offset = "0xCAE178", VA = "0xCAE178")]
	public Pendant()
	{
	}
}
[Token(Token = "0x2000439")]
public class PixelTrail : MonoBehaviour
{
	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material particlesMaterialP1;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material particlesMaterialP2;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject visuals;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystemRenderer particlesRenderer;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ball _ball;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onForMe;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool onForOpponent;

	[Token(Token = "0x600183D")]
	[Address(RVA = "0xCAE294", Offset = "0xCAE294", VA = "0xCAE294")]
	private void Awake()
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0xCAE2EC", Offset = "0xCAE2EC", VA = "0xCAE2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0xCAE488", Offset = "0xCAE488", VA = "0xCAE488")]
	public PixelTrail()
	{
	}
}
[Token(Token = "0x200043A")]
public class SpringVector3
{
	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _target;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _current;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxLength;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _velocity;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _parent;

	[Token(Token = "0x170003FD")]
	public Vector3 Target
	{
		[Token(Token = "0x6001840")]
		[Address(RVA = "0xCA7310", Offset = "0xCA7310", VA = "0xCA7310")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001841")]
		[Address(RVA = "0xCA7060", Offset = "0xCA7060", VA = "0xCA7060")]
		set
		{
		}
	}

	[Token(Token = "0x170003FE")]
	public Vector3 Current
	{
		[Token(Token = "0x6001842")]
		[Address(RVA = "0xCAE490", Offset = "0xCAE490", VA = "0xCAE490")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0xCA6FE8", Offset = "0xCA6FE8", VA = "0xCA6FE8")]
	public SpringVector3(Vector3 initPos, [Optional] Transform parent)
	{
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0xCA7118", Offset = "0xCA7118", VA = "0xCA7118")]
	public void Update(float dt, float strength, float drag, float amount, float gravity)
	{
	}
}
[Token(Token = "0x200043B")]
public enum MedalType
{
	[Token(Token = "0x4001982")]
	None,
	[Token(Token = "0x4001983")]
	Gold,
	[Token(Token = "0x4001984")]
	Silver,
	[Token(Token = "0x4001985")]
	Bronze,
	[Token(Token = "0x4001986")]
	ThreeStars,
	[Token(Token = "0x4001987")]
	TwoStars,
	[Token(Token = "0x4001988")]
	OneStar,
	[Token(Token = "0x4001989")]
	TournamentGold,
	[Token(Token = "0x400198A")]
	TournamentSilver,
	[Token(Token = "0x400198B")]
	TournamentBronze
}
[Serializable]
[Token(Token = "0x200043C")]
public class SerializableMedalType : SerializableEnum<MedalType>
{
	[Token(Token = "0x6001845")]
	[Address(RVA = "0xCAE49C", Offset = "0xCAE49C", VA = "0xCAE49C")]
	public SerializableMedalType()
	{
	}
}
[Token(Token = "0x200043D")]
[RequireComponent(typeof(Camera))]
public class ShowBrainOnPreRender : MonoBehaviour
{
	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showBrain;

	[Token(Token = "0x6001846")]
	[Address(RVA = "0xCAE4E4", Offset = "0xCAE4E4", VA = "0xCAE4E4")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0xCAE5DC", Offset = "0xCAE5DC", VA = "0xCAE5DC")]
	public ShowBrainOnPreRender()
	{
	}
}
[Token(Token = "0x200043E")]
[RequireComponent(typeof(Player))]
public class BotPlayer : MonoBehaviour
{
	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isActive;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player _player;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _head;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _headOffset;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SmoothVector3 _headDir;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _gointTowardsWall;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SmoothVector3 _racketPos;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothQuaternion _racketRot;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _ballIsPassingNearPlayer;

	[Token(Token = "0x6001848")]
	[Address(RVA = "0xCAE5E4", Offset = "0xCAE5E4", VA = "0xCAE5E4")]
	private void SetRacketPose(Vector3 hitPos, Vector3 ballPos, Vector3 headPos)
	{
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0xCAE9E8", Offset = "0xCAE9E8", VA = "0xCAE9E8")]
	private void UpdateRacketPose(float dt)
	{
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0xCAEAB8", Offset = "0xCAEAB8", VA = "0xCAEAB8")]
	private void CopyRacketPose()
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0xCAECD4", Offset = "0xCAECD4", VA = "0xCAECD4")]
	private void MaybeHitTheBall()
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0xCAF4A4", Offset = "0xCAF4A4", VA = "0xCAF4A4")]
	private void UpdateHead(Vector3 headPos, Vector3 ballPos)
	{
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0xCAF5BC", Offset = "0xCAF5BC", VA = "0xCAF5BC")]
	private void HitTheBall(Vector3 headPos, Vector3 ballPos)
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0xCB04F8", Offset = "0xCB04F8", VA = "0xCB04F8")]
	private void UpdateMe()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0xCB0578", Offset = "0xCB0578", VA = "0xCB0578")]
	private void UpdateOpponent()
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0xCB0634", Offset = "0xCB0634", VA = "0xCB0634")]
	private void Start()
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0xCB0858", Offset = "0xCB0858", VA = "0xCB0858")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0xCB0980", Offset = "0xCB0980", VA = "0xCB0980")]
	private void Update()
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0xCB0A98", Offset = "0xCB0A98", VA = "0xCB0A98")]
	public BotPlayer()
	{
	}
}
[Token(Token = "0x200043F")]
public class FadeToBlackPostProcess : MonoBehaviour
{
	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _material;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _fadeID;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<FadeToBlackPostProcess> _list;

	[Token(Token = "0x170003FF")]
	public static float fade
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0xCB0BD4", Offset = "0xCB0BD4", VA = "0xCB0BD4")]
		set
		{
		}
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0xCB0D9C", Offset = "0xCB0D9C", VA = "0xCB0D9C")]
	public static void addToCamera(Camera cam)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0xCB0DA0", Offset = "0xCB0DA0", VA = "0xCB0DA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0xCB0FB0", Offset = "0xCB0FB0", VA = "0xCB0FB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0xCB1030", Offset = "0xCB1030", VA = "0xCB1030")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xCB10D0", Offset = "0xCB10D0", VA = "0xCB10D0")]
	public FadeToBlackPostProcess()
	{
	}
}
[Serializable]
[Token(Token = "0x2000440")]
public class GameplayStats
{
	[Serializable]
	[Token(Token = "0x2000441")]
	public struct Best
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hitStreak;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int pointsPerShot;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float damagePerShot;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float hitAccuracy;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalPoints;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numBoostsTaken;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalDamage;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numClutchSaves;
	}

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Best best;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int timePlayed;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numGamesPlayed;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numWavesComplete;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int numRacketShots;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numShotMisses;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numPowerShots;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numGutters;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numTargetsDestroyed;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numBoostsTaken;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int numPortalsUsed;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int totalDamage;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numClutchSaves;

	[Token(Token = "0x600185B")]
	[Address(RVA = "0xCB1168", Offset = "0xCB1168", VA = "0xCB1168", Slot = "4")]
	public virtual void init()
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0xCB116C", Offset = "0xCB116C", VA = "0xCB116C", Slot = "5")]
	public virtual void updateRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0xCB1170", Offset = "0xCB1170", VA = "0xCB1170")]
	public GameplayStats()
	{
	}
}
[Serializable]
[Token(Token = "0x2000442")]
public class GameplayStatsEx : GameplayStats
{
	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MovingAverage avgHitAccuracy;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MovingAverage avgDamagePerShot;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MovingAverage avgPointsPerShot;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MovingAverage avgPowershotUsage;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MovingAverage avgGravitySlingUsage;

	[Token(Token = "0x600185E")]
	[Address(RVA = "0xCB1178", Offset = "0xCB1178", VA = "0xCB1178", Slot = "4")]
	public override void init()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0xCB117C", Offset = "0xCB117C", VA = "0xCB117C")]
	public void initWindows()
	{
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0xCB125C", Offset = "0xCB125C", VA = "0xCB125C", Slot = "5")]
	public override void updateRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0xCB13A8", Offset = "0xCB13A8", VA = "0xCB13A8")]
	public GameplayStatsEx()
	{
	}
}
[Token(Token = "0x2000443")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	private class SlowMotionRequest
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sender;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool globalTimeScale;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float slowMotionTarget;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float slowMotionRate;

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xCB5100", Offset = "0xCB5100", VA = "0xCB5100")]
		public SlowMotionRequest()
		{
		}
	}

	[Token(Token = "0x2000445")]
	[CompilerGenerated]
	private sealed class <ScaleUpCo>d__72 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x1700040B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xCB7544", Offset = "0xCB7544", VA = "0xCB7544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xCB758C", Offset = "0xCB758C", VA = "0xCB758C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xCB3F20", Offset = "0xCB3F20", VA = "0xCB3F20")]
		[DebuggerHidden]
		public <ScaleUpCo>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xCB745C", Offset = "0xCB745C", VA = "0xCB745C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xCB7460", Offset = "0xCB7460", VA = "0xCB7460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xCB754C", Offset = "0xCB754C", VA = "0xCB754C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000446")]
	[CompilerGenerated]
	private sealed class <WaitForShotToFinalizeAndLogIt>d__73 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x1700040D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xCB7DCC", Offset = "0xCB7DCC", VA = "0xCB7DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700040E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xCB7E14", Offset = "0xCB7E14", VA = "0xCB7E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xCB3FD8", Offset = "0xCB3FD8", VA = "0xCB3FD8")]
		[DebuggerHidden]
		public <WaitForShotToFinalizeAndLogIt>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xCB75E8", Offset = "0xCB75E8", VA = "0xCB75E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xCB75EC", Offset = "0xCB75EC", VA = "0xCB75EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xCB7DD4", Offset = "0xCB7DD4", VA = "0xCB7DD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000447")]
	[CompilerGenerated]
	private sealed class <AttemptToSyncScores>d__76 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int remoteScore;

		[Token(Token = "0x1700040F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xCB8304", Offset = "0xCB8304", VA = "0xCB8304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000410")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xCB834C", Offset = "0xCB834C", VA = "0xCB834C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xCB4274", Offset = "0xCB4274", VA = "0xCB4274")]
		[DebuggerHidden]
		public <AttemptToSyncScores>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xCB7E70", Offset = "0xCB7E70", VA = "0xCB7E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xCB7E74", Offset = "0xCB7E74", VA = "0xCB7E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xCB830C", Offset = "0xCB830C", VA = "0xCB830C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000448")]
	[CompilerGenerated]
	private sealed class <SmoothRotateCo>d__111 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player <>4__this;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion initRot;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion destRot;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <timer>5__2;

		[Token(Token = "0x17000411")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xCB85F4", Offset = "0xCB85F4", VA = "0xCB85F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000412")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xCB863C", Offset = "0xCB863C", VA = "0xCB863C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xCB6C4C", Offset = "0xCB6C4C", VA = "0xCB6C4C")]
		[DebuggerHidden]
		public <SmoothRotateCo>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xCB83A8", Offset = "0xCB83A8", VA = "0xCB83A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xCB83AC", Offset = "0xCB83AC", VA = "0xCB83AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xCB85FC", Offset = "0xCB85FC", VA = "0xCB85FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000449")]
	[CompilerGenerated]
	private sealed class <AnimateScaleCo>d__118 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float targetScale;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <initScale>5__2;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x17000413")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xCB888C", Offset = "0xCB888C", VA = "0xCB888C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000414")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xCB88D4", Offset = "0xCB88D4", VA = "0xCB88D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xCB7000", Offset = "0xCB7000", VA = "0xCB7000")]
		[DebuggerHidden]
		public <AnimateScaleCo>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xCB8698", Offset = "0xCB8698", VA = "0xCB8698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xCB869C", Offset = "0xCB869C", VA = "0xCB869C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xCB8894", Offset = "0xCB8894", VA = "0xCB8894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Player me;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Player opponent;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLocalPlayer;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float becomeVisibleScaleUpDuration;

	[NonSerialized]
	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerModel model;

	[NonSerialized]
	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHandDetector _handDetector;

	[NonSerialized]
	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ReturnBallToPlayer _returnBallToPlayer;

	[NonSerialized]
	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _wantsRematch;

	[NonSerialized]
	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _timeOfLastBallLost;

	[NonSerialized]
	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BotPlayer bot;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _curTimeScaleVel;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _slowMotionActive;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothVector3 _smoothHeadForwardDir;

	[NonSerialized]
	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool _approvedOpponentConnection;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ShotInfo _lastRacketShot;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ShotInfo> _allGameShots;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<ShotInfo> mergedShotsFromBothPlayers;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _originalScale;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int _lanesChargeStreakCounter;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _streakCounter;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SlowMotionRequest> _slowMotionRequests;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float _lastTimeScaleMultiplier;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float _speedLevelProgress;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Vector3 VR_ROOT_OFFSET;

	[NonSerialized]
	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool hasScaling;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _lastSlowMotionAmount;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _shouldFadeToBlackFarFromDais;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _didFadeToBlackLastFrame;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _timeSinceLastSnapTurn;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _snapTurnCounter;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _snapTurnAbsCounter;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion _destRot;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private CoroutineHandle? _SmoothRotateCo;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _racketBaseScale;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static CoroutineHandle? _animateScaleCo;

	[Token(Token = "0x17000400")]
	public PlayerID playerID
	{
		[Token(Token = "0x6001866")]
		[Address(RVA = "0xCB182C", Offset = "0xCB182C", VA = "0xCB182C")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x17000401")]
	public static Player ballOwner
	{
		[Token(Token = "0x6001867")]
		[Address(RVA = "0xCB19F0", Offset = "0xCB19F0", VA = "0xCB19F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000402")]
	public static PlayerID BallOwnerID
	{
		[Token(Token = "0x6001868")]
		[Address(RVA = "0xCB1A58", Offset = "0xCB1A58", VA = "0xCB1A58")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x17000403")]
	public static Player player1
	{
		[Token(Token = "0x6001869")]
		[Address(RVA = "0xCB1B78", Offset = "0xCB1B78", VA = "0xCB1B78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000404")]
	public static Player player2
	{
		[Token(Token = "0x600186A")]
		[Address(RVA = "0xCB1C40", Offset = "0xCB1C40", VA = "0xCB1C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000405")]
	public ShotInfo lastRacketShot
	{
		[Token(Token = "0x600186B")]
		[Address(RVA = "0xCB1D08", Offset = "0xCB1D08", VA = "0xCB1D08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000406")]
	public static int lanesChargeStreakCount
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xCB1D10", Offset = "0xCB1D10", VA = "0xCB1D10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000407")]
	public float currentGlobalTimeScale
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0xCB210C", Offset = "0xCB210C", VA = "0xCB210C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xCB2114", Offset = "0xCB2114", VA = "0xCB2114")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000408")]
	public static float TimeScaleMultiplier
	{
		[Token(Token = "0x6001873")]
		[Address(RVA = "0xCB211C", Offset = "0xCB211C", VA = "0xCB211C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xCB2174", Offset = "0xCB2174", VA = "0xCB2174")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000409")]
	public static float SpeedLevelProgress
	{
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xCB21D8", Offset = "0xCB21D8", VA = "0xCB21D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700040A")]
	public float Scale
	{
		[Token(Token = "0x600189E")]
		[Address(RVA = "0xCB6C74", Offset = "0xCB6C74", VA = "0xCB6C74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600189F")]
		[Address(RVA = "0xCB6CA4", Offset = "0xCB6CA4", VA = "0xCB6CA4")]
		set
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event Action bigTotalShotWillAppearSoon
	{
		[Token(Token = "0x6001862")]
		[Address(RVA = "0xCB14BC", Offset = "0xCB14BC", VA = "0xCB14BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001863")]
		[Address(RVA = "0xCB1598", Offset = "0xCB1598", VA = "0xCB1598")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action OnSnapTurn
	{
		[Token(Token = "0x6001864")]
		[Address(RVA = "0xCB1674", Offset = "0xCB1674", VA = "0xCB1674")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001865")]
		[Address(RVA = "0xCB1750", Offset = "0xCB1750", VA = "0xCB1750")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event Action OnResetStreakCounter
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0xCB1EF8", Offset = "0xCB1EF8", VA = "0xCB1EF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xCB1F94", Offset = "0xCB1F94", VA = "0xCB1F94")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event Action<int> OnStreakIncreased
	{
		[Token(Token = "0x6001885")]
		[Address(RVA = "0xCB429C", Offset = "0xCB429C", VA = "0xCB429C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001886")]
		[Address(RVA = "0xCB434C", Offset = "0xCB434C", VA = "0xCB434C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event Action<int, ShotInfo> OnStreakIncreasedShotInfo
	{
		[Token(Token = "0x6001887")]
		[Address(RVA = "0xCB43FC", Offset = "0xCB43FC", VA = "0xCB43FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xCB44AC", Offset = "0xCB44AC", VA = "0xCB44AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xCB1D68", Offset = "0xCB1D68", VA = "0xCB1D68")]
	public static void SetLaneChargeInMP_Coop(int laneCharge)
	{
	}

	[Token(Token = "0x6001870")]
	[Address(RVA = "0xCB2030", Offset = "0xCB2030", VA = "0xCB2030")]
	public void ResetStreakCounter()
	{
	}

	[Token(Token = "0x6001876")]
	[Address(RVA = "0xCB2230", Offset = "0xCB2230", VA = "0xCB2230")]
	private void UpdateTimeScaleMultiplier()
	{
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0xCB28B4", Offset = "0xCB28B4", VA = "0xCB28B4")]
	public void Relocate(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0xCB2AD0", Offset = "0xCB2AD0", VA = "0xCB2AD0")]
	public bool IsInPlayZone(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xCB2B3C", Offset = "0xCB2B3C", VA = "0xCB2B3C")]
	public void UpdateAvatarColors()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xCB2C54", Offset = "0xCB2C54", VA = "0xCB2C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xCB3168", Offset = "0xCB3168", VA = "0xCB3168")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xCB3300", Offset = "0xCB3300", VA = "0xCB3300")]
	public void GameReset()
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xCB3B70", Offset = "0xCB3B70", VA = "0xCB3B70")]
	public void PostSessionStats()
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xCB3DE0", Offset = "0xCB3DE0", VA = "0xCB3DE0")]
	public void SetLastRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xCB3DE8", Offset = "0xCB3DE8", VA = "0xCB3DE8")]
	public void ToggleVisiblity(bool visible, bool withScaling = true)
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xCB3EAC", Offset = "0xCB3EAC", VA = "0xCB3EAC")]
	[IteratorStateMachine(typeof(<ScaleUpCo>d__72))]
	private IEnumerator<float> ScaleUpCo()
	{
		return null;
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xCB3F48", Offset = "0xCB3F48", VA = "0xCB3F48")]
	[IteratorStateMachine(typeof(<WaitForShotToFinalizeAndLogIt>d__73))]
	private IEnumerator<float> WaitForShotToFinalizeAndLogIt(ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xCB4000", Offset = "0xCB4000", VA = "0xCB4000")]
	public void ReceivedScoreSync(int remoteScore)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xCB4134", Offset = "0xCB4134", VA = "0xCB4134")]
	public static ShotInfo GetLastShotFromOtherPlayer(PlayerID thisPlayerID)
	{
		return null;
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xCB40CC", Offset = "0xCB40CC", VA = "0xCB40CC")]
	[IteratorStateMachine(typeof(<AttemptToSyncScores>d__76))]
	private IEnumerator<float> AttemptToSyncScores(int remoteScore)
	{
		return null;
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0xCB455C", Offset = "0xCB455C", VA = "0xCB455C")]
	public void IncreaseStreak(int amount = 1, [Optional] ShotInfo shotInfo)
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0xCB4B70", Offset = "0xCB4B70", VA = "0xCB4B70")]
	public void LogShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0xCB4C90", Offset = "0xCB4C90", VA = "0xCB4C90")]
	private void Start()
	{
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0xCB32DC", Offset = "0xCB32DC", VA = "0xCB32DC")]
	public Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0xCB4E78", Offset = "0xCB4E78", VA = "0xCB4E78")]
	public Vector3 GetHeadForwardDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0xCB4E9C", Offset = "0xCB4E9C", VA = "0xCB4E9C")]
	public Vector3 GetHeadRightDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0xCB4EC0", Offset = "0xCB4EC0", VA = "0xCB4EC0")]
	public Vector3 GetHeadForwardDir_Smooth()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0xCB4EE0", Offset = "0xCB4EE0", VA = "0xCB4EE0")]
	public void SetGlobalTimeScale(GameObject sender, float timeScale, float fRate = 0.2f)
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0xCB5108", Offset = "0xCB5108", VA = "0xCB5108")]
	public void StartSlowMotion(GameObject sender, float fRequestedSlowMotion, float fRate = 0.2f)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0xCB52D0", Offset = "0xCB52D0", VA = "0xCB52D0")]
	public void StopSlowMotion(GameObject sender)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xCB53EC", Offset = "0xCB53EC", VA = "0xCB53EC")]
	private void HandleSlowMotion()
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0xCB596C", Offset = "0xCB596C", VA = "0xCB596C")]
	public float GetSlowMotionAmount()
	{
		return default(float);
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0xCB59A8", Offset = "0xCB59A8", VA = "0xCB59A8")]
	private void MpFadeToBlackOnOpponentSide()
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0xCB391C", Offset = "0xCB391C", VA = "0xCB391C")]
	private void InitFadeToBlackFarFromDais()
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0xCB5CC4", Offset = "0xCB5CC4", VA = "0xCB5CC4")]
	private void FadeToBlackFarFromDais()
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0xCB5EF4", Offset = "0xCB5EF4", VA = "0xCB5EF4")]
	public static Vector3 RotatePoint(Vector3 point, Quaternion rot, bool ignoreFOV, out Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0xCB6200", Offset = "0xCB6200", VA = "0xCB6200")]
	private void Rotate(int dir)
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0xCB67F0", Offset = "0xCB67F0", VA = "0xCB67F0")]
	private void Rotate(Quaternion wantedRot)
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0xCB64A0", Offset = "0xCB64A0", VA = "0xCB64A0")]
	private void SnapRotate(float angle)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0xCB6570", Offset = "0xCB6570", VA = "0xCB6570")]
	private void SmoothRotate(float angle, float duration)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0xCB6B74", Offset = "0xCB6B74", VA = "0xCB6B74")]
	[IteratorStateMachine(typeof(<SmoothRotateCo>d__111))]
	private IEnumerator<float> SmoothRotateCo(Transform root, Quaternion initRot, Quaternion destRot, float duration)
	{
		return null;
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xCB6E10", Offset = "0xCB6E10", VA = "0xCB6E10")]
	public void AnimateScale(float targetScale, float duration)
	{
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0xCB6F78", Offset = "0xCB6F78", VA = "0xCB6F78")]
	[IteratorStateMachine(typeof(<AnimateScaleCo>d__118))]
	private IEnumerator<float> AnimateScaleCo(float targetScale, float duration)
	{
		return null;
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0xCB7028", Offset = "0xCB7028", VA = "0xCB7028")]
	private void Update()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0xCB72BC", Offset = "0xCB72BC", VA = "0xCB72BC")]
	public Player()
	{
	}
}
[Token(Token = "0x200044A")]
public class PlayerHandDetector : MonoBehaviour
{
	[Token(Token = "0x40019FB")]
	private const int skipFrames = 9;

	[Token(Token = "0x40019FC")]
	private const int histroyLength = 300;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int curFrame;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CyclicBuffer<float> history;

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0xCB8930", Offset = "0xCB8930", VA = "0xCB8930")]
	private void Start()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0xCB8938", Offset = "0xCB8938", VA = "0xCB8938")]
	private void Update()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0xCB8CC0", Offset = "0xCB8CC0", VA = "0xCB8CC0")]
	public float EstimateHandedness()
	{
		return default(float);
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0xCB8DE8", Offset = "0xCB8DE8", VA = "0xCB8DE8")]
	public float EstimateHandedness_Normalized()
	{
		return default(float);
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0xCB8E44", Offset = "0xCB8E44", VA = "0xCB8E44")]
	public PlayerHandDetector()
	{
	}
}
[Token(Token = "0x200044B")]
public class PlayerModel : MonoBehaviour
{
	[Token(Token = "0x200044C")]
	public enum ModelLabel
	{
		[Token(Token = "0x4001A22")]
		Me,
		[Token(Token = "0x4001A23")]
		Opponent,
		[Token(Token = "0x4001A24")]
		Mirror
	}

	[Token(Token = "0x200044D")]
	private struct Triplet
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Renderer renderer;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarRenderer.Coat coat;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject p1;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer p1Renderer;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject p2;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer p2Renderer;
	}

	[Token(Token = "0x200044E")]
	public enum Layers
	{
		[Token(Token = "0x4001A2D")]
		Avatar_Me,
		[Token(Token = "0x4001A2E")]
		Avatar_My_Head,
		[Token(Token = "0x4001A2F")]
		Avatar_Opponent,
		[Token(Token = "0x4001A30")]
		Racket
	}

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerModel myModel;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlayerModel opponentModel;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static PlayerModel mirrorModel;

	[NonSerialized]
	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMine;

	[NonSerialized]
	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isOpponent;

	[NonSerialized]
	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isMirror;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ModelLabel modelLabel;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Customizations")]
	public AvatarSettings.AvatarLabel avatarLabel;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AvatarSettings.PrimaryCoats primaryCoat;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AvatarSettings.PrimaryCoats _primaryCoat;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AvatarSettings.SecondaryCoat secondaryCoat;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarSettings.SecondaryCoat _secondaryCoat;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AvatarSettings.AvatarDefinition _definition;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailMaker.TrailDef[] overrideTrailDefs;

	[Token(Token = "0x4001A0D")]
	private const string PREF_KEY = "USE_DEFAULT_RACKET";

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _useDefaultRacket;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Items")]
	private List<string> _itemIds;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Item_Base> _items;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("References")]
	public AvatarController avatar;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AvatarConfigurations avatarConfig;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RacketAnimator racket;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RacketModel racketModel;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RacketRigidBody racketRB;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform dais;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Untanglementer untangle;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RacketSwoosh swoosh;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform brain;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Pendant pendant;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<string, Triplet> _triplets;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Transform> _tempList;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HashSet<Transform> _tempHashSet;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<Layers, int> _layers;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<string> _keys;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _needToLoadItems;

	[Token(Token = "0x17000415")]
	public bool useDefaultRacket
	{
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xCB8ED4", Offset = "0xCB8ED4", VA = "0xCB8ED4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xCB8F5C", Offset = "0xCB8F5C", VA = "0xCB8F5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000416")]
	public bool NeedToLoadItems
	{
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xCBC124", Offset = "0xCBC124", VA = "0xCBC124")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0xCB8FB8", Offset = "0xCB8FB8", VA = "0xCB8FB8")]
	public static int GetLayer(Layers layer)
	{
		return default(int);
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xCB9140", Offset = "0xCB9140", VA = "0xCB9140")]
	public static void SetLayerToAllChildren(Transform root, Layers layer)
	{
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0xCB91AC", Offset = "0xCB91AC", VA = "0xCB91AC")]
	private static void SetLayerToAllChildren(Transform obj, int layer)
	{
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xCB9260", Offset = "0xCB9260", VA = "0xCB9260")]
	private void InitTriplates()
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xCB97DC", Offset = "0xCB97DC", VA = "0xCB97DC")]
	private void UpdateTriplates(AvatarSettings.AvatarCoat coat)
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xCB9FE0", Offset = "0xCB9FE0", VA = "0xCB9FE0")]
	private void LoadCoat(AvatarSettings.CoatLabel label, AvatarSettings.AvatarCoat[] coats, AvatarRenderer.Coat coatMask)
	{
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0xCBB158", Offset = "0xCBB158", VA = "0xCBB158")]
	private bool LoadPrimaryCoat(AvatarSettings.AvatarDefinition def)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0xCBB1BC", Offset = "0xCBB1BC", VA = "0xCBB1BC")]
	private bool LoadSecondaryCoat(AvatarSettings.AvatarDefinition def)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xCBB21C", Offset = "0xCBB21C", VA = "0xCBB21C")]
	private void LoadDefaultCoat(AvatarSettings.AvatarDefinition def)
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0xCBB258", Offset = "0xCBB258", VA = "0xCBB258")]
	private void RemoveAvatar(bool removeRacket = true)
	{
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0xCBB3D8", Offset = "0xCBB3D8", VA = "0xCBB3D8")]
	private void LoadAvatar()
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0xCBB5A0", Offset = "0xCBB5A0", VA = "0xCBB5A0")]
	private void LoadAvatar(AvatarSettings.AvatarLabel avatarLabel, bool withoutRacket = false)
	{
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0xCBB8CC", Offset = "0xCBB8CC", VA = "0xCBB8CC")]
	private void Debug_LoadFakeItems()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xCBBDD8", Offset = "0xCBBDD8", VA = "0xCBBDD8")]
	private void InitAvatar(AvatarSettings.AvatarDefinition def, bool withoutRacket = false)
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xCBBEC4", Offset = "0xCBBEC4", VA = "0xCBBEC4")]
	public Item_Base GetItem(string itemId)
	{
		return null;
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0xCBBFB0", Offset = "0xCBBFB0", VA = "0xCBBFB0")]
	public void AddItem(string itemId)
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xCBC094", Offset = "0xCBC094", VA = "0xCBC094")]
	public void RemoveItem(string itemId)
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xCBC12C", Offset = "0xCBC12C", VA = "0xCBC12C")]
	private void LoadItems()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0xCBC62C", Offset = "0xCBC62C", VA = "0xCBC62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0xCBC718", Offset = "0xCBC718", VA = "0xCBC718")]
	private void Start()
	{
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xCBC790", Offset = "0xCBC790", VA = "0xCBC790")]
	private void Update()
	{
	}

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0xCBC7F8", Offset = "0xCBC7F8", VA = "0xCBC7F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0xCBC858", Offset = "0xCBC858", VA = "0xCBC858")]
	public PlayerModel()
	{
	}
}
[Token(Token = "0x2000452")]
public class ReturnBallToPlayer : MonoBehaviour
{
	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ReturnBallToPlayer inst;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player _player;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Forehand Zone")]
	public float _forehandLengthMin;

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _forehandLengthMax;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _forehandAngleMin;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _forehandAngleMax;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Backhand Zone")]
	public float _backhandLengthMin;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _backhandLengthMax;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _backhandAngleMin;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _backhandAngleMax;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Player Zone")]
	public float startingPlayerZoneRad;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float bouncPlayerZoneRadIncrease;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Floaters")]
	public float returnFromFloaterVelocityCoeff;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _numBouncesWithNoReturn;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool forceReturnOnNextBounce;

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0xCBCBC4", Offset = "0xCBCBC4", VA = "0xCBCBC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0xCBCCBC", Offset = "0xCBCCBC", VA = "0xCBCCBC")]
	public static Vector3 GetVelocityToBall(bool forceReturn, out bool ballReturnedToPlayer, bool returnBallDirectlyToHand = false, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xCBD348", Offset = "0xCBD348", VA = "0xCBD348")]
	public static Vector3 GetPortalOutVelocity(bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xCBD564", Offset = "0xCBD564", VA = "0xCBD564")]
	public static void ForceReturnOnNextBounce()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xCBD5BC", Offset = "0xCBD5BC", VA = "0xCBD5BC")]
	public Vector3 GetVelocityToRandomSpotInReturnZone(float rightOrLeft, float forehandAmount = 0f, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xCBDE68", Offset = "0xCBDE68", VA = "0xCBDE68")]
	private Vector3 GetPlayerHead(bool willTransferOwnership)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xCBD3A0", Offset = "0xCBD3A0", VA = "0xCBD3A0")]
	public Vector3 GetPortalReturnBallVelocity(bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xCBCD3C", Offset = "0xCBCD3C", VA = "0xCBCD3C")]
	public Vector3 GetReturnBallVelocity(bool forceReturn, bool returnBallDirectlyToHand, out bool ballReturnedToPlayer, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xCBE150", Offset = "0xCBE150", VA = "0xCBE150")]
	public ReturnBallToPlayer()
	{
	}
}
[Token(Token = "0x2000453")]
public class ShotInfo
{
	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static uint shotIndexCounter;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static uint opponentBit;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint shotUniqueIndex;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint shotUniqueIndexSerial;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player hittingPlayer;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Ball hittingBall;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numBonusesTaken;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numBonusesTaken_PreDealDamage;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numBossesDestroyed;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numBossesDestroyed_PreDealDamage;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numDamageDealt;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numDamageDealt_PreDealDamage;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hitFirstBrickOrFloater;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool hitAnyBrick;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool ballReturnedToPlayer;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool firstHitNonEmpty;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool enterGutter;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int pointsEarnedRaw;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int pointContributions;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numAttachedLivingPellets;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int numBounces;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int numSlides;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool shotFromRacket;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool foreHand;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool wasPowerShot;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mpLastTargetIdBonusTook;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool startedAsPowershot;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool usedGravitySlingBefore;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool startedAsMidPowerShot;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool waitingToFinalize;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool iceBreaker;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool waitingForIceToBreak;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _chargeCounter;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isChargedActive;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<uint, int> targetIDDamage;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 ballLocationWhenShotEnds;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float gameTimeWhenCreated;

	[Token(Token = "0x4001A69")]
	public const int SHOT_INFO_POOL_SIZE = 4096;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<ShotInfo> _shotPool;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CoroutineHandle? _logShotCoroutine;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool shotFinalized;

	[NonSerialized]
	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Floater hittingFloater;

	[Token(Token = "0x17000417")]
	public int pointsEarned
	{
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xCB1348", Offset = "0xCB1348", VA = "0xCB1348")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000418")]
	public int chargeCounter
	{
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xCBE170", Offset = "0xCBE170", VA = "0xCBE170")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000419")]
	public bool isCharged
	{
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xCBE178", Offset = "0xCBE178", VA = "0xCBE178")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700041A")]
	public bool isExpectingDamage
	{
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xCB82D4", Offset = "0xCB82D4", VA = "0xCB82D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700041B")]
	public bool canFinalize
	{
		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xCB79E8", Offset = "0xCB79E8", VA = "0xCB79E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700041C")]
	public bool remoteShot
	{
		[Token(Token = "0x6001908")]
		[Address(RVA = "0xCB7CF4", Offset = "0xCB7CF4", VA = "0xCB7CF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003A")]
	public static event Action<ShotInfo> OnShotFinalized
	{
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xCBEC84", Offset = "0xCBEC84", VA = "0xCBEC84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001906")]
		[Address(RVA = "0xCBED78", Offset = "0xCBED78", VA = "0xCBED78")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xCBE198", Offset = "0xCBE198", VA = "0xCBE198")]
	public void initCharge(int count, bool chargeIsFromGutter = false)
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0xCBE1CC", Offset = "0xCBE1CC", VA = "0xCBE1CC")]
	public void decrementCharge()
	{
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0xCBE208", Offset = "0xCBE208", VA = "0xCBE208")]
	public void deactivateCharge()
	{
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0xCB3008", Offset = "0xCB3008", VA = "0xCB3008")]
	public static void CreatePool()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xCBE2CC", Offset = "0xCBE2CC", VA = "0xCBE2CC")]
	public void DebugLog(bool debugCreate = false)
	{
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0xCB3750", Offset = "0xCB3750", VA = "0xCB3750")]
	public static ShotInfo CreateShot(Player p, Ball b, bool racketShot = true, bool foreHand = true)
	{
		return null;
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0xCB35F8", Offset = "0xCB35F8", VA = "0xCB35F8")]
	public void ReturnShot()
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xCBEBAC", Offset = "0xCBEBAC", VA = "0xCBEBAC")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001901")]
	[Address(RVA = "0xCBE230", Offset = "0xCBE230", VA = "0xCBE230")]
	private ShotInfo()
	{
	}

	[Token(Token = "0x6001902")]
	[Address(RVA = "0xCBE8FC", Offset = "0xCBE8FC", VA = "0xCBE8FC")]
	private void Init(Player p, Ball b, bool racketShot, bool foreHandShot = true)
	{
	}

	[Token(Token = "0x6001903")]
	[Address(RVA = "0xCB359C", Offset = "0xCB359C", VA = "0xCB359C")]
	public static void GameReset()
	{
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0xCBEC68", Offset = "0xCBEC68", VA = "0xCBEC68")]
	public void Log()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0xCB7B14", Offset = "0xCB7B14", VA = "0xCB7B14")]
	public void FinalizeShot()
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0xCBFAF8", Offset = "0xCBFAF8", VA = "0xCBFAF8")]
	public void HitBrick(Brick brick, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0xCBFC7C", Offset = "0xCBFC7C", VA = "0xCBFC7C")]
	public void HitFloater(Floater floater)
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0xCBFCC4", Offset = "0xCBFCC4", VA = "0xCBFCC4")]
	public void BallBounced()
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0xCBF7EC", Offset = "0xCBF7EC", VA = "0xCBF7EC")]
	public int GetNumDestroyedBosses(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0xCBFCD4", Offset = "0xCBFCD4", VA = "0xCBFCD4")]
	public void DestroyedBoss(bool preDealDamage)
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0xCB1330", Offset = "0xCB1330", VA = "0xCB1330")]
	public int GetNumDamageDealt(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xCBFDC0", Offset = "0xCBFDC0", VA = "0xCBFDC0")]
	public void IncrementDamageDealt(bool preDealDamage)
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xCBFE64", Offset = "0xCBFE64", VA = "0xCBFE64")]
	public int GetConsecutiveBonuses(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xCBFE7C", Offset = "0xCBFE7C", VA = "0xCBFE7C")]
	public void IncrementConsecutiveBonus(bool preDealDamage)
	{
	}
}
[Token(Token = "0x2000454")]
public class StatsManager : MonoBehaviour
{
	[Token(Token = "0x2000455")]
	public struct MultiplayerStats
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player leadingPlayer;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lastLeadSwitchTime;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeP1InLead;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeP2InLead;

		[Token(Token = "0x17000423")]
		public float percentTimeP1InLead
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0xCC3154", Offset = "0xCC3154", VA = "0xCC3154")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000424")]
		public float percentTimeP2InLead
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xCC3170", Offset = "0xCC3170", VA = "0xCC3170")]
			get
			{
				return default(float);
			}
		}
	}

	[Token(Token = "0x2000456")]
	private struct ClutchSave
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool inCriticalMode;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float gameTimeCriticalStarted;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lastGameTimeOverNominal;
	}

	[Token(Token = "0x2000457")]
	[CompilerGenerated]
	private sealed class <statsToUpdate>d__24 : IEnumerable<GameplayStats>, IEnumerable, IEnumerator<GameplayStats>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameplayStats <>2__current;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool me;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool <>3__me;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool includingCurrentGame;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool <>3__includingCurrentGame;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StatsManager <>4__this;

		[Token(Token = "0x17000425")]
		private GameplayStats System.Collections.Generic.IEnumerator<GameplayStats>.Current
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xCC3404", Offset = "0xCC3404", VA = "0xCC3404", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000426")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xCC344C", Offset = "0xCC344C", VA = "0xCC344C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xCC0244", Offset = "0xCC0244", VA = "0xCC0244")]
		[DebuggerHidden]
		public <statsToUpdate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xCC318C", Offset = "0xCC318C", VA = "0xCC318C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xCC3190", Offset = "0xCC3190", VA = "0xCC3190", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xCC340C", Offset = "0xCC340C", VA = "0xCC340C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xCC3454", Offset = "0xCC3454", VA = "0xCC3454", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GameplayStats> System.Collections.Generic.IEnumerable<GameplayStats>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xCC3510", Offset = "0xCC3510", VA = "0xCC3510", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000458")]
	[CompilerGenerated]
	private sealed class <saveSetStatsCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatsManager <>4__this;

		[Token(Token = "0x17000427")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xCC362C", Offset = "0xCC362C", VA = "0xCC362C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000428")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xCC3674", Offset = "0xCC3674", VA = "0xCC3674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xCC0A24", Offset = "0xCC0A24", VA = "0xCC0A24")]
		[DebuggerHidden]
		public <saveSetStatsCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xCC3514", Offset = "0xCC3514", VA = "0xCC3514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xCC3518", Offset = "0xCC3518", VA = "0xCC3518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xCC3634", Offset = "0xCC3634", VA = "0xCC3634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameplayStatsEx _currentGameStats;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameplayStats.Best _bestModeStatsUntilThisGame;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameplayStats.Best _bestSetStatsUntilThisGame;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameplayStatsEx _currentGameOpponentStats;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MultiplayerStats _multiplayerStats;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StatsManager inst;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<float> onClutchSave;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isRoundInProgress;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private ClutchSave _clutchSave;

	[Token(Token = "0x1700041D")]
	public static GameplayStatsEx currentGameStats
	{
		[Token(Token = "0x6001913")]
		[Address(RVA = "0xCBFF7C", Offset = "0xCBFF7C", VA = "0xCBFF7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700041E")]
	public static GameplayStats.Best bestModeStatsUntilThisGame
	{
		[Token(Token = "0x6001914")]
		[Address(RVA = "0xCBFFD0", Offset = "0xCBFFD0", VA = "0xCBFFD0")]
		get
		{
			return default(GameplayStats.Best);
		}
	}

	[Token(Token = "0x1700041F")]
	public static GameplayStats.Best bestSetStatsUntilThisGame
	{
		[Token(Token = "0x6001915")]
		[Address(RVA = "0xCC002C", Offset = "0xCC002C", VA = "0xCC002C")]
		get
		{
			return default(GameplayStats.Best);
		}
	}

	[Token(Token = "0x17000420")]
	public static GameplayStatsEx currentGameOpponentStats
	{
		[Token(Token = "0x6001916")]
		[Address(RVA = "0xCC0088", Offset = "0xCC0088", VA = "0xCC0088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000421")]
	public static MultiplayerStats multiplayerStats
	{
		[Token(Token = "0x6001917")]
		[Address(RVA = "0xCC00DC", Offset = "0xCC00DC", VA = "0xCC00DC")]
		get
		{
			return default(MultiplayerStats);
		}
	}

	[Token(Token = "0x17000422")]
	private PlayerProfileData myProfileData
	{
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xCC0198", Offset = "0xCC0198", VA = "0xCC0198")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001918")]
	[Address(RVA = "0xCC0140", Offset = "0xCC0140", VA = "0xCC0140")]
	private void Awake()
	{
	}

	[Token(Token = "0x600191A")]
	[Address(RVA = "0xCC01A0", Offset = "0xCC01A0", VA = "0xCC01A0")]
	[IteratorStateMachine(typeof(<statsToUpdate>d__24))]
	private IEnumerable<GameplayStats> statsToUpdate(bool me, bool includingCurrentGame = true)
	{
		return null;
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xCC0278", Offset = "0xCC0278", VA = "0xCC0278")]
	public GameplayStats getCurrentModeStats()
	{
		return null;
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0xCC0494", Offset = "0xCC0494", VA = "0xCC0494")]
	public GameplayStats getCurrentSetStats()
	{
		return null;
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0xCC0820", Offset = "0xCC0820", VA = "0xCC0820")]
	public void onMatchStart()
	{
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0xCC09A4", Offset = "0xCC09A4", VA = "0xCC09A4")]
	[IteratorStateMachine(typeof(<saveSetStatsCo>d__28))]
	private IEnumerator<float> saveSetStatsCo()
	{
		return null;
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xCC0A18", Offset = "0xCC0A18", VA = "0xCC0A18")]
	public void onRoundStart()
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0xCC0A4C", Offset = "0xCC0A4C", VA = "0xCC0A4C")]
	public void onRoundOver()
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0xCB3CF0", Offset = "0xCB3CF0", VA = "0xCB3CF0")]
	public void onGameOver(int numRacketShots)
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0xCC1244", Offset = "0xCC1244", VA = "0xCC1244")]
	private void savePerMatchBests(int numRacketShots)
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0xCC1704", Offset = "0xCC1704", VA = "0xCC1704")]
	public void onArenaShutdown()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0xCC0C68", Offset = "0xCC0C68", VA = "0xCC0C68")]
	public void countTimePlayed(int timePlayed)
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0xCC0F58", Offset = "0xCC0F58", VA = "0xCC0F58")]
	public void countGamePlayed()
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0xCC172C", Offset = "0xCC172C", VA = "0xCC172C")]
	public void countWaveComplete()
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0xCBEE6C", Offset = "0xCBEE6C", VA = "0xCBEE6C")]
	public void countRacketShotEx(ShotInfo shot)
	{
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0xCBF20C", Offset = "0xCBF20C", VA = "0xCBF20C")]
	public void countRacketShot(bool me)
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0xCBF4FC", Offset = "0xCBF4FC", VA = "0xCBF4FC")]
	public void countRacketShotMiss(bool me)
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0xCC1A18", Offset = "0xCC1A18", VA = "0xCC1A18")]
	public void countPowerShot(bool me)
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0xCC1D08", Offset = "0xCC1D08", VA = "0xCC1D08")]
	public void countGutterUse(bool me)
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0xCC1FF8", Offset = "0xCC1FF8", VA = "0xCC1FF8")]
	public void countTargetDestroyed(bool me)
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0xCC22E8", Offset = "0xCC22E8", VA = "0xCC22E8")]
	public void countBoostTaken(bool me)
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xCC25D8", Offset = "0xCC25D8", VA = "0xCC25D8")]
	public void countDownerTaken(bool me)
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xCC25DC", Offset = "0xCC25DC", VA = "0xCC25DC")]
	public void countPortalUse(bool me)
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xCBF804", Offset = "0xCBF804", VA = "0xCBF804")]
	public void countDamage(bool me, int damage)
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xCC28CC", Offset = "0xCC28CC", VA = "0xCC28CC")]
	private void countClutchSave(Player player, float timeInRisk)
	{
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xCB4878", Offset = "0xCB4878", VA = "0xCB4878")]
	public void updateMaxHitStreak(bool me, int hitStreak)
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xCC2CC4", Offset = "0xCC2CC4", VA = "0xCC2CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xCC0AEC", Offset = "0xCC0AEC", VA = "0xCC0AEC")]
	private void onLeadingPlayerChanged(Player newLeadingPlayer, Player endedLeadingPlayer)
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xCC314C", Offset = "0xCC314C", VA = "0xCC314C")]
	public StatsManager()
	{
	}
}
[Token(Token = "0x2000459")]
public abstract class BasePowerup : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	public enum State
	{
		[Token(Token = "0x4001A97")]
		OnFloater,
		[Token(Token = "0x4001A98")]
		Active,
		[Token(Token = "0x4001A99")]
		Removed
	}

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Player _owningPlayer;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State _state;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<BasePowerup> _internalActivePowerups;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<PowerupType, BasePowerup> _latestActiveByType;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public SyncGameEvents.PowerupRemovedEvent _syncGameEvents_PowerupRemovedEvent;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint _id;

	[Token(Token = "0x4001A93")]
	public const float TIME_BEFORE_END_TO_PLAY_SOUND = 4f;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _timer;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _playedCloseToEndSound;

	[Token(Token = "0x17000429")]
	public virtual Player owningPlayer
	{
		[Token(Token = "0x6001946")]
		[Address(RVA = "0xCC36D0", Offset = "0xCC36D0", VA = "0xCC36D0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001947")]
		[Address(RVA = "0xCC3760", Offset = "0xCC3760", VA = "0xCC3760")]
		private set
		{
		}
	}

	[Token(Token = "0x1700042A")]
	public Floater floater
	{
		[Token(Token = "0x6001948")]
		[Address(RVA = "0xCC3768", Offset = "0xCC3768", VA = "0xCC3768")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001949")]
		[Address(RVA = "0xCC3770", Offset = "0xCC3770", VA = "0xCC3770")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700042B")]
	public abstract PowerupType type
	{
		[Token(Token = "0x600194A")]
		get;
	}

	[Token(Token = "0x1700042C")]
	public State state
	{
		[Token(Token = "0x600194B")]
		[Address(RVA = "0xCC3778", Offset = "0xCC3778", VA = "0xCC3778")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700042D")]
	public bool IsLatest
	{
		[Token(Token = "0x6001952")]
		[Address(RVA = "0xCC3854", Offset = "0xCC3854", VA = "0xCC3854")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700042E")]
	public uint id
	{
		[Token(Token = "0x6001953")]
		[Address(RVA = "0xCC38FC", Offset = "0xCC38FC", VA = "0xCC38FC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1400003B")]
	public static event Action<Player> OnFloaterTaken
	{
		[Token(Token = "0x600195B")]
		[Address(RVA = "0xCC4128", Offset = "0xCC4128", VA = "0xCC4128")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600195C")]
		[Address(RVA = "0xCC421C", Offset = "0xCC421C", VA = "0xCC421C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event Action<Player, BasePowerup> OnPowerupTaken
	{
		[Token(Token = "0x600195D")]
		[Address(RVA = "0xCC4310", Offset = "0xCC4310", VA = "0xCC4310")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600195E")]
		[Address(RVA = "0xCC4404", Offset = "0xCC4404", VA = "0xCC4404")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600194C")]
	protected abstract void init();

	[Token(Token = "0x600194D")]
	protected abstract void activate();

	[Token(Token = "0x600194E")]
	protected abstract void cleanup();

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xCB5810", Offset = "0xCB5810", VA = "0xCB5810")]
	public static bool isActiveForAnyPlayer(PowerupType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0xCBDFD4", Offset = "0xCBDFD4", VA = "0xCBDFD4")]
	public static bool isActiveForPlayer(PowerupType type, Player p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0xCC3780", Offset = "0xCC3780", VA = "0xCC3780")]
	public static BasePowerup GetLatestActive(PowerupType type)
	{
		return null;
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0xCC3904", Offset = "0xCC3904", VA = "0xCC3904", Slot = "9")]
	public virtual void onHitFromNetwork(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x6001955")]
	[Address(RVA = "0xCC3CE4", Offset = "0xCC3CE4", VA = "0xCC3CE4", Slot = "10")]
	protected virtual void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0xCC3CE8", Offset = "0xCC3CE8", VA = "0xCC3CE8", Slot = "11")]
	public virtual void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0xCC3CF0", Offset = "0xCC3CF0", VA = "0xCC3CF0", Slot = "12")]
	public virtual void onRemovedFromNetwork(SyncGameEvents.PowerupRemovedEvent powerupRemovedEvent)
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0xCC3FE0", Offset = "0xCC3FE0", VA = "0xCC3FE0")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0xCC3CF8", Offset = "0xCC3CF8", VA = "0xCC3CF8")]
	public void remove(bool dontSendSyncEvents = false)
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xCC3FE8", Offset = "0xCC3FE8", VA = "0xCC3FE8")]
	public void onFloaterCreated(Floater floater, uint id)
	{
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0xCC3984", Offset = "0xCC3984", VA = "0xCC3984")]
	public void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0xCC44F8", Offset = "0xCC44F8", VA = "0xCC44F8")]
	protected void UpdateTimer(float duration)
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0xCC4560", Offset = "0xCC4560", VA = "0xCC4560")]
	protected void UpdateShouldPlaySound(float duration)
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0xCC46B4", Offset = "0xCC46B4", VA = "0xCC46B4")]
	protected BasePowerup()
	{
	}
}
[Token(Token = "0x200045B")]
public class PelletHitLight : MonoBehaviour
{
	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public MeshRenderer _closeGlow;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public MeshRenderer _farGlow;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform _transform;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _farGlowDefaultColor;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _closeGlowDefaultColor;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fadeInTime;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fadeOutTime;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _effectTime;

	[Token(Token = "0x6001964")]
	[Address(RVA = "0xCC4820", Offset = "0xCC4820", VA = "0xCC4820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0xCC4A30", Offset = "0xCC4A30", VA = "0xCC4A30")]
	public void Init()
	{
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0xCC4A90", Offset = "0xCC4A90", VA = "0xCC4A90")]
	private void Update()
	{
	}

	[Token(Token = "0x6001967")]
	[Address(RVA = "0xCC4C40", Offset = "0xCC4C40", VA = "0xCC4C40")]
	public PelletHitLight()
	{
	}
}
[Token(Token = "0x200045C")]
public class PowerupBlasterMaze : BasePowerup
{
	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PowerupBlasterMaze lastInst;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _randSeed;

	[Token(Token = "0x1700042F")]
	public override PowerupType type
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xCC4C54", Offset = "0xCC4C54", VA = "0xCC4C54", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x6001969")]
	[Address(RVA = "0xCC4C5C", Offset = "0xCC4C5C", VA = "0xCC4C5C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xCC4C80", Offset = "0xCC4C80", VA = "0xCC4C80", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xCC4DA0", Offset = "0xCC4DA0", VA = "0xCC4DA0", Slot = "10")]
	protected override void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xCC4DA8", Offset = "0xCC4DA8", VA = "0xCC4DA8", Slot = "11")]
	public override void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xCC4DB4", Offset = "0xCC4DB4", VA = "0xCC4DB4", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0xCC4FD8", Offset = "0xCC4FD8", VA = "0xCC4FD8")]
	private void OnWaveEnded(string _, int i)
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0xCC4FE0", Offset = "0xCC4FE0", VA = "0xCC4FE0")]
	public PowerupBlasterMaze()
	{
	}
}
[Token(Token = "0x200045D")]
public class PowerupGodMode : BasePowerup
{
	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Space]
	[Header("Super Booster params")]
	public float immuneDuration;

	[Token(Token = "0x17000430")]
	public static bool isActive
	{
		[Token(Token = "0x6001970")]
		[Address(RVA = "0xCC5034", Offset = "0xCC5034", VA = "0xCC5034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000431")]
	public override PowerupType type
	{
		[Token(Token = "0x6001971")]
		[Address(RVA = "0xCC5084", Offset = "0xCC5084", VA = "0xCC5084", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xCC508C", Offset = "0xCC508C", VA = "0xCC508C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xCC5090", Offset = "0xCC5090", VA = "0xCC5090", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xCC5148", Offset = "0xCC5148", VA = "0xCC5148", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xCC51CC", Offset = "0xCC51CC", VA = "0xCC51CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xCC51D4", Offset = "0xCC51D4", VA = "0xCC51D4")]
	public PowerupGodMode()
	{
	}
}
[Token(Token = "0x200045E")]
public class PowerupHyperspace : BasePowerup
{
	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PowerupHyperspace> activePowerups;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Space]
	[Header("Time Wrap params")]
	public float duration;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeScale;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material arenaBrickRefraction;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color arenaReflectionsMultiplier;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color arenaLightsMultiplier;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float fadeDuration;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material sppMaterialArcade;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material sppMaterialElse;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _fadeParam;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PowerupHyperspace _latestActive;

	[Token(Token = "0x17000432")]
	public static bool isActive
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0xCC5230", Offset = "0xCC5230", VA = "0xCC5230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000433")]
	public static float TimeScaleOffset
	{
		[Token(Token = "0x6001978")]
		[Address(RVA = "0xCB58A0", Offset = "0xCB58A0", VA = "0xCB58A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000434")]
	public override PowerupType type
	{
		[Token(Token = "0x6001979")]
		[Address(RVA = "0xCC5280", Offset = "0xCC5280", VA = "0xCC5280", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0xCC5288", Offset = "0xCC5288", VA = "0xCC5288", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xCC528C", Offset = "0xCC528C", VA = "0xCC528C", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xCC5450", Offset = "0xCC5450", VA = "0xCC5450", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0xCC5568", Offset = "0xCC5568", VA = "0xCC5568")]
	private void onGameInitialized()
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0xCC5570", Offset = "0xCC5570", VA = "0xCC5570")]
	private static PowerupHyperspace getMostActive()
	{
		return null;
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0xCC5758", Offset = "0xCC5758", VA = "0xCC5758")]
	public static void ManipulateArenaColors(ref Color currentReflectionColor, ref Color currentLightColor)
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0xCC5824", Offset = "0xCC5824", VA = "0xCC5824")]
	private void Update()
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0xCC59C4", Offset = "0xCC59C4", VA = "0xCC59C4")]
	public PowerupHyperspace()
	{
	}
}
[Token(Token = "0x200045F")]
public class PowerupIceBreaker : BasePowerup
{
	[Token(Token = "0x2000460")]
	public class Ice
	{
		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer renderer;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShotInfo freezeShot;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 explosionPos;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Target target;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FreezeState freezeState;

		[Token(Token = "0x17000438")]
		public bool IsOrWillBeFrozen
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xCC6A18", Offset = "0xCC6A18", VA = "0xCC6A18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xCC7504", Offset = "0xCC7504", VA = "0xCC7504")]
		public Ice(Brick brick)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xCC758C", Offset = "0xCC758C", VA = "0xCC758C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xCC75D0", Offset = "0xCC75D0", VA = "0xCC75D0")]
		public void DebugDraw()
		{
		}
	}

	[Token(Token = "0x2000461")]
	public enum FreezeState
	{
		[Token(Token = "0x4001AC4")]
		None,
		[Token(Token = "0x4001AC5")]
		Scheduled,
		[Token(Token = "0x4001AC6")]
		Freezing,
		[Token(Token = "0x4001AC7")]
		Frozen,
		[Token(Token = "0x4001AC8")]
		Melting,
		[Token(Token = "0x4001AC9")]
		Exploding
	}

	[Token(Token = "0x2000462")]
	[CompilerGenerated]
	private sealed class <AnimateIccicles>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball ball;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerupIceBreaker <>4__this;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool reverse;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <trans>5__2;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x17000439")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xCC77E8", Offset = "0xCC77E8", VA = "0xCC77E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700043A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xCC7830", Offset = "0xCC7830", VA = "0xCC7830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xCC5DEC", Offset = "0xCC5DEC", VA = "0xCC5DEC")]
		[DebuggerHidden]
		public <AnimateIccicles>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xCC7620", Offset = "0xCC7620", VA = "0xCC7620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xCC7624", Offset = "0xCC7624", VA = "0xCC7624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xCC77F0", Offset = "0xCC77F0", VA = "0xCC77F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000463")]
	[CompilerGenerated]
	private sealed class <ExplodeCo>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick first;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <hittingPlayerCount>5__2;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <totalBricksCount>5__3;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Brick <brick>5__4;

		[Token(Token = "0x1700043B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xCC7EE4", Offset = "0xCC7EE4", VA = "0xCC7EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700043C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xCC7F2C", Offset = "0xCC7F2C", VA = "0xCC7F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xCC6E3C", Offset = "0xCC6E3C", VA = "0xCC6E3C")]
		[DebuggerHidden]
		public <ExplodeCo>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xCC788C", Offset = "0xCC788C", VA = "0xCC788C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xCC7890", Offset = "0xCC7890", VA = "0xCC7890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xCC7EEC", Offset = "0xCC7EEC", VA = "0xCC7EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000464")]
	[CompilerGenerated]
	private sealed class <ExplodeBrickCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x1700043D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xCC8330", Offset = "0xCC8330", VA = "0xCC8330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700043E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xCC8378", Offset = "0xCC8378", VA = "0xCC8378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xCC6E64", Offset = "0xCC6E64", VA = "0xCC6E64")]
		[DebuggerHidden]
		public <ExplodeBrickCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xCC7F88", Offset = "0xCC7F88", VA = "0xCC7F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xCC7F8C", Offset = "0xCC7F8C", VA = "0xCC7F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xCC8338", Offset = "0xCC8338", VA = "0xCC8338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000465")]
	[CompilerGenerated]
	private sealed class <FreezeCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Brick <brick>5__2;

		[Token(Token = "0x1700043F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xCC8A20", Offset = "0xCC8A20", VA = "0xCC8A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000440")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xCC8A68", Offset = "0xCC8A68", VA = "0xCC8A68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xCC728C", Offset = "0xCC728C", VA = "0xCC728C")]
		[DebuggerHidden]
		public <FreezeCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xCC83D4", Offset = "0xCC83D4", VA = "0xCC83D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xCC83D8", Offset = "0xCC83D8", VA = "0xCC83D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xCC8A28", Offset = "0xCC8A28", VA = "0xCC8A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000466")]
	[CompilerGenerated]
	private sealed class <FreezeBrickCo>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <m>5__2;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x17000441")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xCC8DB4", Offset = "0xCC8DB4", VA = "0xCC8DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000442")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xCC8DFC", Offset = "0xCC8DFC", VA = "0xCC8DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xCC72B4", Offset = "0xCC72B4", VA = "0xCC72B4")]
		[DebuggerHidden]
		public <FreezeBrickCo>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xCC8AC4", Offset = "0xCC8AC4", VA = "0xCC8AC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xCC8AC8", Offset = "0xCC8AC8", VA = "0xCC8AC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xCC8DBC", Offset = "0xCC8DBC", VA = "0xCC8DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000467")]
	[CompilerGenerated]
	private sealed class <MeltCo>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HexTile[] <tiles>5__2;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__3;

		[Token(Token = "0x17000443")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xCC916C", Offset = "0xCC916C", VA = "0xCC916C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000444")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xCC91B4", Offset = "0xCC91B4", VA = "0xCC91B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xCC734C", Offset = "0xCC734C", VA = "0xCC734C")]
		[DebuggerHidden]
		public <MeltCo>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xCC8E58", Offset = "0xCC8E58", VA = "0xCC8E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xCC8E5C", Offset = "0xCC8E5C", VA = "0xCC8E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xCC9174", Offset = "0xCC9174", VA = "0xCC9174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float duration;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _material;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _RevealID;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static CoroutineHandle? _animateIcciclesCo;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _originalScale;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject _particlesPrefab;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Queue<Brick> _explodeFrontier;

	[Token(Token = "0x4001AB7")]
	private const float _EXPLODE_DELAY = 0.025f;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _exploding;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int _explosionCounter;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Queue<Brick> _freezeFrontier;

	[Token(Token = "0x4001ABB")]
	private const float _FREEZE_DELAY = 0.15f;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static CoroutineHandle? _freezeCo;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool _melting;

	[Token(Token = "0x17000435")]
	public static bool IsActive
	{
		[Token(Token = "0x6001983")]
		[Address(RVA = "0xCC5ADC", Offset = "0xCC5ADC", VA = "0xCC5ADC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000436")]
	public override PowerupType type
	{
		[Token(Token = "0x6001984")]
		[Address(RVA = "0xCC5B2C", Offset = "0xCC5B2C", VA = "0xCC5B2C", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x17000437")]
	public static bool Exploding
	{
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xCC6DE4", Offset = "0xCC6DE4", VA = "0xCC6DE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xCC5B34", Offset = "0xCC5B34", VA = "0xCC5B34")]
	private void ShowIccicles()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0xCC5D38", Offset = "0xCC5D38", VA = "0xCC5D38")]
	private void RemoveIccicles()
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0xCC5B3C", Offset = "0xCC5B3C", VA = "0xCC5B3C")]
	private void AnimateIccicles(bool reverse)
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0xCC5D40", Offset = "0xCC5D40", VA = "0xCC5D40")]
	[IteratorStateMachine(typeof(<AnimateIccicles>d__14))]
	private IEnumerator<float> AnimateIccicles(Ball ball, float duration, bool reverse)
	{
		return null;
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0xCC5E14", Offset = "0xCC5E14", VA = "0xCC5E14", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0xCC6144", Offset = "0xCC6144", VA = "0xCC6144", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0xCC616C", Offset = "0xCC616C", VA = "0xCC616C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0xCC6170", Offset = "0xCC6170", VA = "0xCC6170")]
	private void OnWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0xCC6348", Offset = "0xCC6348", VA = "0xCC6348")]
	private void OnGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0xCC6450", Offset = "0xCC6450", VA = "0xCC6450")]
	public static void OnRemoteFreeze(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0xCC65B0", Offset = "0xCC65B0", VA = "0xCC65B0")]
	public static void OnRemoteExplode(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0xCC68BC", Offset = "0xCC68BC", VA = "0xCC68BC")]
	public static void OnHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0xCC6A3C", Offset = "0xCC6A3C", VA = "0xCC6A3C")]
	private static void Explode(Brick brick, ShotInfo shot)
	{
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0xCC6650", Offset = "0xCC6650", VA = "0xCC6650")]
	private static void StopFreezing()
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0xCC6D54", Offset = "0xCC6D54", VA = "0xCC6D54")]
	[IteratorStateMachine(typeof(<ExplodeCo>d__31))]
	private static IEnumerator<float> ExplodeCo(Brick first, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0xCC682C", Offset = "0xCC682C", VA = "0xCC682C")]
	[IteratorStateMachine(typeof(<ExplodeBrickCo>d__33))]
	private static IEnumerator<float> ExplodeBrickCo(Brick brick, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0xCC6E8C", Offset = "0xCC6E8C", VA = "0xCC6E8C")]
	private static void ScheduleFreeze(Brick brick, bool immediately, ShotInfo shot)
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xCC6BE8", Offset = "0xCC6BE8", VA = "0xCC6BE8")]
	private static void Freeze(Brick brick, ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xCC722C", Offset = "0xCC722C", VA = "0xCC722C")]
	[IteratorStateMachine(typeof(<FreezeCo>d__39))]
	private static IEnumerator<float> FreezeCo()
	{
		return null;
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xCC6FF8", Offset = "0xCC6FF8", VA = "0xCC6FF8")]
	private static void FreezeBrick(Brick brick)
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0xCC652C", Offset = "0xCC652C", VA = "0xCC652C")]
	[IteratorStateMachine(typeof(<FreezeBrickCo>d__41))]
	private static IEnumerator<float> FreezeBrickCo(Brick brick, float duration)
	{
		return null;
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0xCC6294", Offset = "0xCC6294", VA = "0xCC6294")]
	private void Melt()
	{
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0xCC72DC", Offset = "0xCC72DC", VA = "0xCC72DC")]
	[IteratorStateMachine(typeof(<MeltCo>d__44))]
	private IEnumerator<float> MeltCo(float duration)
	{
		return null;
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0xCC7374", Offset = "0xCC7374", VA = "0xCC7374")]
	private void Update()
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0xCC737C", Offset = "0xCC737C", VA = "0xCC737C")]
	public PowerupIceBreaker()
	{
	}
}
[Token(Token = "0x2000468")]
public class PowerupJackpot : BasePowerup
{
	[Token(Token = "0x2000469")]
	[CompilerGenerated]
	private sealed class <updatePointsTextCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupJackpot <>4__this;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__3;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <textTransform>5__4;

		[Token(Token = "0x17000447")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0xCCA03C", Offset = "0xCCA03C", VA = "0xCCA03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000448")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xCCA084", Offset = "0xCCA084", VA = "0xCCA084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xCC94CC", Offset = "0xCC94CC", VA = "0xCC94CC")]
		[DebuggerHidden]
		public <updatePointsTextCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xCC9F10", Offset = "0xCC9F10", VA = "0xCC9F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xCC9F14", Offset = "0xCC9F14", VA = "0xCC9F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xCCA044", Offset = "0xCCA044", VA = "0xCCA044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046A")]
	[CompilerGenerated]
	private sealed class <delayedRemoveCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupJackpot <>4__this;

		[Token(Token = "0x17000449")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xCCA18C", Offset = "0xCCA18C", VA = "0xCCA18C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700044A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xCCA1D4", Offset = "0xCCA1D4", VA = "0xCCA1D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCC9C34", Offset = "0xCC9C34", VA = "0xCC9C34")]
		[DebuggerHidden]
		public <delayedRemoveCo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xCCA0E0", Offset = "0xCCA0E0", VA = "0xCCA0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xCCA0E4", Offset = "0xCCA0E4", VA = "0xCCA0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xCCA194", Offset = "0xCCA194", VA = "0xCCA194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("[Start, End, Step]")]
	[Header("Points params")]
	[Space]
	public Vector3Int pointsRangeArcade;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("[Start, End, Step]")]
	public Vector3Int pointsRangeVersus;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("[Start, End, Step]")]
	public Vector3Int pointsRangeCoOp;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float stepDuration;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool reversed;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve textScaleCurve;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _currentPoints;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TextMeshPro _pointsText;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder _builder;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _format;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _pointUpdateTimer;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _textScale;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _initTime;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private CoroutineHandle _updatePointsTextCo;

	[Token(Token = "0x17000445")]
	public Vector3Int pointsRange
	{
		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xCC9210", Offset = "0xCC9210", VA = "0xCC9210")]
		get
		{
			return default(Vector3Int);
		}
	}

	[Token(Token = "0x17000446")]
	public override PowerupType type
	{
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xCC9328", Offset = "0xCC9328", VA = "0xCC9328", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0xCC9330", Offset = "0xCC9330", VA = "0xCC9330")]
	private void updatePointsText()
	{
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0xCC9458", Offset = "0xCC9458", VA = "0xCC9458")]
	[IteratorStateMachine(typeof(<updatePointsTextCo>d__19))]
	private IEnumerator<float> updatePointsTextCo()
	{
		return null;
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xCC94F4", Offset = "0xCC94F4", VA = "0xCC94F4")]
	private void incrementPoints()
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xCC9580", Offset = "0xCC9580", VA = "0xCC9580")]
	private void claimPoints()
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0xCC9874", Offset = "0xCC9874", VA = "0xCC9874")]
	private void onBallChangeOwnership(PlayerID ownerID)
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0xCC98AC", Offset = "0xCC98AC", VA = "0xCC98AC", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xCC9A54", Offset = "0xCC9A54", VA = "0xCC9A54", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xCC9BC0", Offset = "0xCC9BC0", VA = "0xCC9BC0")]
	[IteratorStateMachine(typeof(<delayedRemoveCo>d__25))]
	private IEnumerator<float> delayedRemoveCo()
	{
		return null;
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xCC9C5C", Offset = "0xCC9C5C", VA = "0xCC9C5C", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xCC9CDC", Offset = "0xCC9CDC", VA = "0xCC9CDC", Slot = "10")]
	protected override void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xCC9CE4", Offset = "0xCC9CE4", VA = "0xCC9CE4", Slot = "11")]
	public override void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xCC9CF0", Offset = "0xCC9CF0", VA = "0xCC9CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xCC9E68", Offset = "0xCC9E68", VA = "0xCC9E68")]
	public PowerupJackpot()
	{
	}
}
[Token(Token = "0x200046B")]
public class PowerupNuke : BasePowerup
{
	[Token(Token = "0x200046D")]
	[CompilerGenerated]
	private sealed class <NukeCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 forward;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PowerupNuke <>4__this;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShotInfo shot;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x1700044C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xCCB544", Offset = "0xCCB544", VA = "0xCCB544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0xCCB58C", Offset = "0xCCB58C", VA = "0xCCB58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xCCAC38", Offset = "0xCCAC38", VA = "0xCCAC38")]
		[DebuggerHidden]
		public <NukeCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xCCB10C", Offset = "0xCCB10C", VA = "0xCCB10C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xCCB110", Offset = "0xCCB110", VA = "0xCCB110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xCCB54C", Offset = "0xCCB54C", VA = "0xCCB54C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Header("Nuke params")]
	[Space]
	private static PowerupNuke _lastInst;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float coneAngle;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 strengthRange;

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SplashDamagePellet pelletPrefab;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Brick> _bricksInRange;

	[Token(Token = "0x1700044B")]
	public override PowerupType type
	{
		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xCCA230", Offset = "0xCCA230", VA = "0xCCA230", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0xCCA238", Offset = "0xCCA238", VA = "0xCCA238")]
	private void getCenterAndForward(out Vector3 center, out Vector3 forward)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0xCCA3E0", Offset = "0xCCA3E0", VA = "0xCCA3E0")]
	private void updateBricksInRangeList(Vector3 center, Vector3 forward)
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0xCCA850", Offset = "0xCCA850", VA = "0xCCA850", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0xCCA940", Offset = "0xCCA940", VA = "0xCCA940", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0xCCA944", Offset = "0xCCA944", VA = "0xCCA944", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0xCCAB84", Offset = "0xCCAB84", VA = "0xCCAB84")]
	[IteratorStateMachine(typeof(<NukeCo>d__12))]
	private IEnumerator<float> NukeCo(Vector3 center, Vector3 forward, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0xCCAC60", Offset = "0xCCAC60", VA = "0xCCAC60")]
	private void Update()
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0xCCAD68", Offset = "0xCCAD68", VA = "0xCCAD68")]
	public PowerupNuke()
	{
	}
}
[Token(Token = "0x200046E")]
public class PowerupSplashDamage : BasePowerup
{
	[Token(Token = "0x200046F")]
	[CompilerGenerated]
	private sealed class <removeDelayed>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupSplashDamage <>4__this;

		[Token(Token = "0x17000451")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xCCC8C4", Offset = "0xCCC8C4", VA = "0xCCC8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000452")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xCCC90C", Offset = "0xCCC90C", VA = "0xCCC90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xCCBEF4", Offset = "0xCCBEF4", VA = "0xCCBEF4")]
		[DebuggerHidden]
		public <removeDelayed>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xCCC844", Offset = "0xCCC844", VA = "0xCCC844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xCCC848", Offset = "0xCCC848", VA = "0xCCC848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xCCC8CC", Offset = "0xCCC8CC", VA = "0xCCC8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Splash Damage params")]
	[Space]
	public float _orbitRadius;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _orbitRadiusRandom;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SplashDamagePellet _damagePelletPrefab;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int _numDamagePelletsSP;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int _numDamagePelletsMP;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _numDamagePelletsPerHitSP;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int _numDamagePelletsPerHitMP;

	[NonSerialized]
	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<SplashDamagePellet> currentDamagePellets;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle _removeDelayedCo;

	[Token(Token = "0x1700044E")]
	private int _numDamagePellets
	{
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xCCB5E8", Offset = "0xCCB5E8", VA = "0xCCB5E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700044F")]
	private int _numDamagePelletsPerHit
	{
		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xCCB614", Offset = "0xCCB614", VA = "0xCCB614")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000450")]
	public override PowerupType type
	{
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xCCB640", Offset = "0xCCB640", VA = "0xCCB640", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0xCCB648", Offset = "0xCCB648", VA = "0xCCB648")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0xCCB654", Offset = "0xCCB654", VA = "0xCCB654")]
	private void RacketHit(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0xCCBE80", Offset = "0xCCBE80", VA = "0xCCBE80")]
	[IteratorStateMachine(typeof(<removeDelayed>d__17))]
	private IEnumerator<float> removeDelayed()
	{
		return null;
	}

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0xCCBF1C", Offset = "0xCCBF1C", VA = "0xCCBF1C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0xCCBFF4", Offset = "0xCCBFF4", VA = "0xCCBFF4", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xCCC328", Offset = "0xCCC328", VA = "0xCCC328", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0xCCC77C", Offset = "0xCCC77C", VA = "0xCCC77C")]
	public PowerupSplashDamage()
	{
	}
}
[Token(Token = "0x2000470")]
public class PowerupSuperFlow : BasePowerup
{
	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PowerupSuperFlow lastInst;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Space]
	[Header("Flat Earth params")]
	public float _plowSpeedCoefficient;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _maxSpinCoefficient;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _spinAmplification;

	[Token(Token = "0x17000453")]
	public static bool isActive
	{
		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xCCC968", Offset = "0xCCC968", VA = "0xCCC968")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000454")]
	public static float plowSpeedCoefficient
	{
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xCCC9E0", Offset = "0xCCC9E0", VA = "0xCCC9E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000455")]
	public static float maxSpinCoefficient
	{
		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xCCCA80", Offset = "0xCCCA80", VA = "0xCCCA80")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000456")]
	public static float spinAmplification
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xCCCB20", Offset = "0xCCCB20", VA = "0xCCCB20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000457")]
	public override PowerupType type
	{
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xCCCBC0", Offset = "0xCCCBC0", VA = "0xCCCBC0", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xCCCBC8", Offset = "0xCCCBC8", VA = "0xCCCBC8", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xCCCD24", Offset = "0xCCCD24", VA = "0xCCCD24", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xCCCD28", Offset = "0xCCCD28", VA = "0xCCCD28", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xCCCFD8", Offset = "0xCCCFD8", VA = "0xCCCFD8")]
	private void onWaveEnded(string name, int id)
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xCCCFE4", Offset = "0xCCCFE4", VA = "0xCCCFE4")]
	public PowerupSuperFlow()
	{
	}
}
[Token(Token = "0x2000471")]
public class PowerupSupersize : BasePowerup
{
	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float duration;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shrinkAfterHitTime;

	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float scale;

	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animationDuration;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float plowMultiplier;

	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _returnedToPlayer;

	[Token(Token = "0x17000458")]
	public override PowerupType type
	{
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xCCD050", Offset = "0xCCD050", VA = "0xCCD050", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x17000459")]
	public static float PlowMultiplier
	{
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xCCD058", Offset = "0xCCD058", VA = "0xCCD058")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700045A")]
	public override Player owningPlayer
	{
		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xCCD1AC", Offset = "0xCCD1AC", VA = "0xCCD1AC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0xCCD1B4", Offset = "0xCCD1B4", VA = "0xCCD1B4", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0xCCD360", Offset = "0xCCD360", VA = "0xCCD360", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0xCCD4E4", Offset = "0xCCD4E4", VA = "0xCCD4E4", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0xCCD4E8", Offset = "0xCCD4E8", VA = "0xCCD4E8")]
	private void OnBallReturnedToPlayer(Player _)
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0xCCD4F4", Offset = "0xCCD4F4", VA = "0xCCD4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0xCCD71C", Offset = "0xCCD71C", VA = "0xCCD71C")]
	public PowerupSupersize()
	{
	}
}
[Token(Token = "0x2000472")]
public enum PowerupType
{
	[Token(Token = "0x4001B25")]
	None,
	[Token(Token = "0x4001B26")]
	SplashDamage,
	[Token(Token = "0x4001B27")]
	Nuke,
	[Token(Token = "0x4001B28")]
	GodMode,
	[Token(Token = "0x4001B29")]
	SuperFlow,
	[Token(Token = "0x4001B2A")]
	BlasterMaze,
	[Token(Token = "0x4001B2B")]
	Jackpot,
	[Token(Token = "0x4001B2C")]
	Hyperspace,
	[Token(Token = "0x4001B2D")]
	IceBreaker,
	[Token(Token = "0x4001B2E")]
	WreckingBall,
	[Token(Token = "0x4001B2F")]
	Supersize
}
[Serializable]
[Token(Token = "0x2000473")]
public class SerializablePowerupType : SerializableEnum<PowerupType>
{
	[Token(Token = "0x6001A17")]
	[Address(RVA = "0xCCD788", Offset = "0xCCD788", VA = "0xCCD788")]
	public SerializablePowerupType()
	{
	}
}
[Token(Token = "0x2000474")]
public class PowerupWreckingBall : BasePowerup
{
	[Token(Token = "0x2000475")]
	public class BrickData
	{
		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialsManager.MaterialPool surfacePool;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialsManager.MaterialPool reflectionPool;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material reflection;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material surface;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float angle;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float shake;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isDirectlyHit;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pos;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CoroutineHandle coroutine;

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xCCE394", Offset = "0xCCE394", VA = "0xCCE394")]
		public BrickData()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xCCE470", Offset = "0xCCE470", VA = "0xCCE470")]
		public void init()
		{
		}
	}

	[Token(Token = "0x2000476")]
	[CompilerGenerated]
	private sealed class <glitterCo>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <glitter>5__2;

		[Token(Token = "0x1700045D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xCCF820", Offset = "0xCCF820", VA = "0xCCF820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xCCF868", Offset = "0xCCF868", VA = "0xCCF868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xCCE530", Offset = "0xCCE530", VA = "0xCCE530")]
		[DebuggerHidden]
		public <glitterCo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xCCF5B4", Offset = "0xCCF5B4", VA = "0xCCF5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xCCF5B8", Offset = "0xCCF5B8", VA = "0xCCF5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xCCF828", Offset = "0xCCF828", VA = "0xCCF828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000477")]
	[CompilerGenerated]
	private sealed class <breakGlassCo>d__36 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrickData data;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <p>5__2;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x1700045F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xCCFC48", Offset = "0xCCFC48", VA = "0xCCFC48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000460")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xCCFC90", Offset = "0xCCFC90", VA = "0xCCFC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xCCE558", Offset = "0xCCE558", VA = "0xCCE558")]
		[DebuggerHidden]
		public <breakGlassCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xCCF8C4", Offset = "0xCCF8C4", VA = "0xCCF8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xCCF8C8", Offset = "0xCCF8C8", VA = "0xCCF8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xCCFC50", Offset = "0xCCFC50", VA = "0xCCFC50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Header("Wrecking ball params")]
	public byte _extraDamage;

	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public byte _extraDamageVersus;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _duration;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _mp_duration;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _ballScale;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _ballVelocityFactorReduction;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _ballGravityAdd;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _ballMinDampedVelocityCoeff;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _actual_duration;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<PowerupWreckingBall> activePowerups;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _AngleID;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _RadiusID;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _OffsetXID;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _OffsetYID;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _FadeID;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int _BreakID;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _pauseTimer;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<Brick, BrickData> _brickData;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static ParticleSystem _glitterPrefab;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _needToBeRemoved;

	[Token(Token = "0x1700045B")]
	public override PowerupType type
	{
		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xCCD7D0", Offset = "0xCCD7D0", VA = "0xCCD7D0", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x1700045C")]
	private static PowerupWreckingBall firstActive
	{
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xCCD7D8", Offset = "0xCCD7D8", VA = "0xCCD7D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0xCCD854", Offset = "0xCCD854", VA = "0xCCD854")]
	public static byte extraDamage(Player p)
	{
		return default(byte);
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0xCCD950", Offset = "0xCCD950", VA = "0xCCD950")]
	public static float ballVelocityFactorReduction(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0xCCD9D0", Offset = "0xCCD9D0", VA = "0xCCD9D0")]
	public static float ballGravityAdd(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0xCCDA50", Offset = "0xCCDA50", VA = "0xCCDA50")]
	public static float ballMinDampedVelocityCoeff(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0xCCDAD4", Offset = "0xCCDAD4", VA = "0xCCDAD4")]
	public static float ballScale(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0xCCDB58", Offset = "0xCCDB58", VA = "0xCCDB58")]
	public static float ballAudioPitch(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0xCCDBC0", Offset = "0xCCDBC0", VA = "0xCCDBC0")]
	public static float SFXGain(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0xCCD8F4", Offset = "0xCCD8F4", VA = "0xCCD8F4")]
	public static bool isActiveFor(Player p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0xCCDC28", Offset = "0xCCDC28", VA = "0xCCDC28")]
	private static void setTextureParams(Material m, float x, float y, float a, float r)
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xCCDE88", Offset = "0xCCDE88", VA = "0xCCDE88")]
	public static void playBreakSound(Vector3 pos)
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xCCDF14", Offset = "0xCCDF14", VA = "0xCCDF14")]
	public static void breakGlass(Brick brick, Vector3 pos, [Optional] BrickData parent)
	{
	}

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0xCCE4AC", Offset = "0xCCE4AC", VA = "0xCCE4AC")]
	[IteratorStateMachine(typeof(<glitterCo>d__35))]
	private static IEnumerator<float> glitterCo(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0xCCE3E0", Offset = "0xCCE3E0", VA = "0xCCE3E0")]
	[IteratorStateMachine(typeof(<breakGlassCo>d__36))]
	private static IEnumerator<float> breakGlassCo(Brick brick, BrickData data)
	{
		return null;
	}

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0xCCE580", Offset = "0xCCE580", VA = "0xCCE580")]
	private static void cleanupBrokenBricks()
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0xCCE884", Offset = "0xCCE884", VA = "0xCCE884")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0xCCE9F4", Offset = "0xCCE9F4", VA = "0xCCE9F4")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0xCCEA30", Offset = "0xCCEA30", VA = "0xCCEA30", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0xCCEA68", Offset = "0xCCEA68", VA = "0xCCEA68", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0xCCEBC4", Offset = "0xCCEBC4", VA = "0xCCEBC4", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0xCCEF9C", Offset = "0xCCEF9C", VA = "0xCCEF9C")]
	private void OnBallReturnedToPlayer(Player p)
	{
	}

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xCCF10C", Offset = "0xCCF10C", VA = "0xCCF10C")]
	private void OnBallChangedOwnership(PlayerID owningPlayerID)
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0xCCF180", Offset = "0xCCF180", VA = "0xCCF180")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0xCCF420", Offset = "0xCCF420", VA = "0xCCF420")]
	public PowerupWreckingBall()
	{
	}
}
[Token(Token = "0x2000478")]
public class SplashDamagePellet : MonoBehaviour
{
	[Token(Token = "0x2000479")]
	private enum PelletState
	{
		[Token(Token = "0x4001B87")]
		OnRacket,
		[Token(Token = "0x4001B88")]
		AttachedToBall,
		[Token(Token = "0x4001B89")]
		FreeRoam,
		[Token(Token = "0x4001B8A")]
		Terminating
	}

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BasePowerup _powerup;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider _sphereCollider;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrailRenderer _trail;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer _renderer;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Player _owningPlayer;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _orbitForceSum;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GradientAlphaKey[] _defaultTrailAlphas;

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _defaultDrag;

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _defaultTrailTime;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _defaultTrailWidth;

	[NonSerialized]
	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int index;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Pellet hit light prefab")]
	public GameObject _pelletHitLightPrefab;

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Explode from Orb")]
	public float _inheritOrbVelocity;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _randomOrbVelocity;

	[Token(Token = "0x4001B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Orbit on Racket")]
	public float _orbitSpringK;

	[Token(Token = "0x4001B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float _orbitPushAwayFromOthers;

	[Token(Token = "0x4001B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float _lookAheadAngle;

	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float _orbitRadius;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _orbitTrailReduction;

	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _orbitTrailReduction_MinSpeed;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _orbitTrailReduction_MaxSpeed;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private PelletState _currentState;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _timeSinceTerminalHit;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _timeSinceLastPelletHitLight;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public ShotInfo _originatedFromShot;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _angleToBall;

	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _startingAngleToBall;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _ballUpVector;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 _ballOriginalImpactPos;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Ball _attachedToBall;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Degrees per second")]
	[Header("Spiral Movement")]
	public float _spiralSpeed;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Radius per distance (range 0-1)\r\nUse spiralMaxRadius to determine overall range")]
	public AnimationCurve _spiralConeRadius;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float _spiralMaxRadius;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float _spiralDragCoeff;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float _terminateFadeDuration;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float _spiralScale;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Insta Use")]
	public float _fromBrickDragCoeff;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float _fromBrickDragDuration;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _timeFromBrick;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _lastTimeScale;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _freeRoamTTL;

	[NonSerialized]
	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool forceDestroyTargets;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 _lastPosition;

	[Token(Token = "0x17000461")]
	public Vector3 position
	{
		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xCCFCEC", Offset = "0xCCFCEC", VA = "0xCCFCEC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000462")]
	public bool isOnRacket
	{
		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xCCFD08", Offset = "0xCCFD08", VA = "0xCCFD08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000463")]
	public bool isOnBall
	{
		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xCCFD18", Offset = "0xCCFD18", VA = "0xCCFD18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000464")]
	public bool isFreeRoam
	{
		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xCCFD28", Offset = "0xCCFD28", VA = "0xCCFD28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000465")]
	public bool isTerminating
	{
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xCCFD38", Offset = "0xCCFD38", VA = "0xCCFD38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000466")]
	public Ball attahcedToBall
	{
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xCCFD48", Offset = "0xCCFD48", VA = "0xCCFD48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0xCCFD50", Offset = "0xCCFD50", VA = "0xCCFD50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0xCCFEF4", Offset = "0xCCFEF4", VA = "0xCCFEF4")]
	private void onBallChangeOwnership(PlayerID ownerID)
	{
	}

	[Token(Token = "0x6001A48")]
	[Address(RVA = "0xCD002C", Offset = "0xCD002C", VA = "0xCD002C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0xCD0188", Offset = "0xCD0188", VA = "0xCD0188")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0xCD0288", Offset = "0xCD0288", VA = "0xCD0288")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0xCD02F0", Offset = "0xCD02F0", VA = "0xCD02F0")]
	public void SetTrailAlpha(float alpha)
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0xCD03C8", Offset = "0xCD03C8", VA = "0xCD03C8")]
	private void init()
	{
	}

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0xCCC570", Offset = "0xCCC570", VA = "0xCCC570")]
	public void InitFromTransform(PowerupSplashDamage powerup, Transform initTransform, float orbitRad)
	{
	}

	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0xCD0438", Offset = "0xCD0438", VA = "0xCD0438")]
	public void InitAndThrowNuke(ShotInfo shot, BasePowerup powerup, Vector3 origin, Vector3 force)
	{
	}

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0xCCBA9C", Offset = "0xCCBA9C", VA = "0xCCBA9C")]
	public void ThrowWithBall(ShotInfo shot, float angle)
	{
	}

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0xCD05D4", Offset = "0xCD05D4", VA = "0xCD05D4")]
	private void BallHitHex(ShotInfo shot, HexTile h)
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0xCCFFF8", Offset = "0xCCFFF8", VA = "0xCCFFF8")]
	private void DetachFromBall()
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xCD0668", Offset = "0xCD0668", VA = "0xCD0668")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xCCC270", Offset = "0xCCC270", VA = "0xCCC270")]
	public void Kill()
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xCD029C", Offset = "0xCD029C", VA = "0xCD029C")]
	private void StartTerminating()
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0xCD1350", Offset = "0xCD1350", VA = "0xCD1350")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0xCD0C88", Offset = "0xCD0C88", VA = "0xCD0C88")]
	private void FixedUpdate_Throw()
	{
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0xCD06BC", Offset = "0xCD06BC", VA = "0xCD06BC")]
	private void FixedUpdate_Orbit()
	{
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0xCD16CC", Offset = "0xCD16CC", VA = "0xCD16CC")]
	public SplashDamagePellet()
	{
	}
}
[Token(Token = "0x200047A")]
public class OfflineDepot<T> where T : new()
{
	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _filepath;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _dataString;

	[Token(Token = "0x17000467")]
	public T data
	{
		[Token(Token = "0x6001A59")]
		[CompilerGenerated]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001A5A")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001A5B")]
	public OfflineDepot(string filename)
	{
	}

	[Token(Token = "0x6001A5C")]
	private void readExisting()
	{
	}

	[Token(Token = "0x6001A5D")]
	public void write()
	{
	}

	[Token(Token = "0x6001A5E")]
	public void clear()
	{
	}

	[Token(Token = "0x6001A5F")]
	private static string scramble(string data)
	{
		return null;
	}

	[Token(Token = "0x6001A60")]
	private static string unscramble(string data)
	{
		return null;
	}
}
[Token(Token = "0x200047B")]
public class PlayerProfile : MonoBehaviour
{
	[Token(Token = "0x200047D")]
	[CompilerGenerated]
	private sealed class <init>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NativePlatform.NativeUser <nativeUser>5__2;

		[Token(Token = "0x17000470")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xCD889C", Offset = "0xCD889C", VA = "0xCD889C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000471")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xCD88E4", Offset = "0xCD88E4", VA = "0xCD88E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xCD198C", Offset = "0xCD198C", VA = "0xCD198C")]
		[DebuggerHidden]
		public <init>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xCD8054", Offset = "0xCD8054", VA = "0xCD8054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xCD8058", Offset = "0xCD8058", VA = "0xCD8058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xCD88A4", Offset = "0xCD88A4", VA = "0xCD88A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[CompilerGenerated]
	private sealed class <TryInitOnlineProfileWhenOnline>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x17000472")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0xCD8D68", Offset = "0xCD8D68", VA = "0xCD8D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000473")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xCD8DB0", Offset = "0xCD8DB0", VA = "0xCD8DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xCD1A28", Offset = "0xCD1A28", VA = "0xCD1A28")]
		[DebuggerHidden]
		public <TryInitOnlineProfileWhenOnline>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xCD8940", Offset = "0xCD8940", VA = "0xCD8940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xCD8944", Offset = "0xCD8944", VA = "0xCD8944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xCD8D70", Offset = "0xCD8D70", VA = "0xCD8D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047F")]
	[CompilerGenerated]
	private sealed class <retrieveCoOpBestScoreFromLeaderboard>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x17000474")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xCD906C", Offset = "0xCD906C", VA = "0xCD906C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000475")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xCD90B4", Offset = "0xCD90B4", VA = "0xCD90B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xCD41BC", Offset = "0xCD41BC", VA = "0xCD41BC")]
		[DebuggerHidden]
		public <retrieveCoOpBestScoreFromLeaderboard>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xCD8E0C", Offset = "0xCD8E0C", VA = "0xCD8E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xCD8E10", Offset = "0xCD8E10", VA = "0xCD8E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xCD9074", Offset = "0xCD9074", VA = "0xCD9074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000480")]
	[CompilerGenerated]
	private sealed class <GetMyCurrentRankCo>d__67 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardManager.LeaderboardContainer leaderboard;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<int> callback;

		[Token(Token = "0x17000476")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xCD91F4", Offset = "0xCD91F4", VA = "0xCD91F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000477")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xCD923C", Offset = "0xCD923C", VA = "0xCD923C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xCD7234", Offset = "0xCD7234", VA = "0xCD7234")]
		[DebuggerHidden]
		public <GetMyCurrentRankCo>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xCD9110", Offset = "0xCD9110", VA = "0xCD9110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xCD9114", Offset = "0xCD9114", VA = "0xCD9114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xCD91FC", Offset = "0xCD91FC", VA = "0xCD91FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000484")]
	[CompilerGenerated]
	private sealed class <IMPORT_AWS_CHINA__ImportChineseAccount>d__76 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RNXDepot.MyDepot<PlayerProfileData> <chineseProfile>5__2;

		[Token(Token = "0x17000478")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xCD95F0", Offset = "0xCD95F0", VA = "0xCD95F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000479")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xCD9638", Offset = "0xCD9638", VA = "0xCD9638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xCD7BD0", Offset = "0xCD7BD0", VA = "0xCD7BD0")]
		[DebuggerHidden]
		public <IMPORT_AWS_CHINA__ImportChineseAccount>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xCD9380", Offset = "0xCD9380", VA = "0xCD9380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xCD9384", Offset = "0xCD9384", VA = "0xCD9384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xCD95F8", Offset = "0xCD95F8", VA = "0xCD95F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000485")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass77_0
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BackendSettings.Region region;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool signInDone;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xCD9694", Offset = "0xCD9694", VA = "0xCD9694")]
		public <>c__DisplayClass77_0()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xCD969C", Offset = "0xCD969C", VA = "0xCD969C")]
		internal void <IMPORT_AWS_CHINA__ReSignIn>b__0(bool success, RnxPlatform.User rnxUser)
		{
		}
	}

	[Token(Token = "0x2000486")]
	[CompilerGenerated]
	private sealed class <IMPORT_AWS_CHINA__ReSignIn>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BackendSettings.Region region;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass77_0 <>8__1;

		[Token(Token = "0x1700047A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xCD9A94", Offset = "0xCD9A94", VA = "0xCD9A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700047B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xCD9ADC", Offset = "0xCD9ADC", VA = "0xCD9ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xCD7C60", Offset = "0xCD7C60", VA = "0xCD7C60")]
		[DebuggerHidden]
		public <IMPORT_AWS_CHINA__ReSignIn>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xCD97D0", Offset = "0xCD97D0", VA = "0xCD97D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xCD97D4", Offset = "0xCD97D4", VA = "0xCD97D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xCD9A9C", Offset = "0xCD9A9C", VA = "0xCD9A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerProfile inst;

	[Token(Token = "0x4001B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OfflineDepot<PlayerProfileData> _myOfflineProfile;

	[Token(Token = "0x4001B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RNXDepot.MyDepot<PlayerProfileData> _myOnlineProfile;

	[Token(Token = "0x4001B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _playerXpAtSessionStart;

	[Token(Token = "0x4001B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _xpEarnedInLastSessionAvailable;

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _xpEarnedInLastSession;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SoloContent.Stage _curStage;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _lastMatchBeatsHighScore;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _numStarsBeforeThisMatch;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _versusSetId;

	[Token(Token = "0x17000468")]
	public static PlayerProfileData myProfileData
	{
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xCD1728", Offset = "0xCD1728", VA = "0xCD1728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000469")]
	public bool initialized
	{
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xCD1828", Offset = "0xCD1828", VA = "0xCD1828")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xCD1830", Offset = "0xCD1830", VA = "0xCD1830")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700046A")]
	public bool onlineInitialized
	{
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xCD183C", Offset = "0xCD183C", VA = "0xCD183C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xCD1844", Offset = "0xCD1844", VA = "0xCD1844")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700046B")]
	public bool xpEarnedInLastSessionAvailable
	{
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xCD1850", Offset = "0xCD1850", VA = "0xCD1850")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700046C")]
	public int xpEarnedInLastSession
	{
		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xCD1858", Offset = "0xCD1858", VA = "0xCD1858")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700046D")]
	public SoloContent.Stage curStage
	{
		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xCD1860", Offset = "0xCD1860", VA = "0xCD1860")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700046E")]
	public bool lastMatchBeatsHighScore
	{
		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xCD1868", Offset = "0xCD1868", VA = "0xCD1868")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700046F")]
	public int numStarsBeforeThisMatch
	{
		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xCD1870", Offset = "0xCD1870", VA = "0xCD1870")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0xCD1878", Offset = "0xCD1878", VA = "0xCD1878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0xCD1918", Offset = "0xCD1918", VA = "0xCD1918")]
	[IteratorStateMachine(typeof(<init>d__30))]
	private IEnumerator<float> init()
	{
		return null;
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xCD19B4", Offset = "0xCD19B4", VA = "0xCD19B4")]
	[IteratorStateMachine(typeof(<TryInitOnlineProfileWhenOnline>d__31))]
	private IEnumerator<float> TryInitOnlineProfileWhenOnline()
	{
		return null;
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xCD1A50", Offset = "0xCD1A50", VA = "0xCD1A50")]
	private void OnOnlineProfileInitialized()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xCD2458", Offset = "0xCD2458", VA = "0xCD2458")]
	private void OnOfflineInitialized()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0xCD22B4", Offset = "0xCD22B4", VA = "0xCD22B4")]
	private void OnOnlineInitialized()
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xCD1E24", Offset = "0xCD1E24", VA = "0xCD1E24")]
	private void DebugOverrideRating(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0xCD2100", Offset = "0xCD2100", VA = "0xCD2100")]
	private void initProfile(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0xCD25B4", Offset = "0xCD25B4", VA = "0xCD25B4")]
	private static void EnsureNumStages(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0xCD277C", Offset = "0xCD277C", VA = "0xCD277C")]
	private static void SetDemoMode(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0xCD279C", Offset = "0xCD279C", VA = "0xCD279C")]
	private static void UnlockAllStagesIfNeeded(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0xCD2950", Offset = "0xCD2950", VA = "0xCD2950")]
	private void InitSetsAndStats(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0xCD3F2C", Offset = "0xCD3F2C", VA = "0xCD3F2C")]
	private void InitStats(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0xCD3C44", Offset = "0xCD3C44", VA = "0xCD3C44")]
	private void fixOldAug2020(PlayerProfileData.Solo profileDataSolo)
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0xCD2AC0", Offset = "0xCD2AC0", VA = "0xCD2AC0")]
	private void calculateCoOpMetricsRetroactively(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0xCD4148", Offset = "0xCD4148", VA = "0xCD4148")]
	[IteratorStateMachine(typeof(<retrieveCoOpBestScoreFromLeaderboard>d__44))]
	private IEnumerator<float> retrieveCoOpBestScoreFromLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0xCD3334", Offset = "0xCD3334", VA = "0xCD3334")]
	private void calcaulteXpRetroactively(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0xCD4078", Offset = "0xCD4078", VA = "0xCD4078")]
	private void initStats(ref GameplayStats stats)
	{
	}

	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0xCD3FF4", Offset = "0xCD3FF4", VA = "0xCD3FF4")]
	private void initStatsEx(ref GameplayStatsEx stats)
	{
	}

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0xCD2158", Offset = "0xCD2158", VA = "0xCD2158")]
	private void sync(bool initial)
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0xCD518C", Offset = "0xCD518C", VA = "0xCD518C")]
	public void saveMyProfile()
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0xCD5230", Offset = "0xCD5230", VA = "0xCD5230")]
	public RNXDepot.FriendDepot<PlayerProfileData> getFriendProfile(string friendUserID)
	{
		return null;
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0xCD5304", Offset = "0xCD5304", VA = "0xCD5304")]
	private int getCurrentGameDuration()
	{
		return default(int);
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xCD53B8", Offset = "0xCD53B8", VA = "0xCD53B8")]
	public void reportArcadeGameResults(ArcadeType arcadeType, PlayerProfileData.Arcade.Type.Result result)
	{
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xCD5664", Offset = "0xCD5664", VA = "0xCD5664")]
	public void reportSoloGameResults(string setId, PlayerProfileData.Solo.Set.Result result)
	{
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0xCD6250", Offset = "0xCD6250", VA = "0xCD6250")]
	private int calcNumSetsLeftToCompleteStage(SoloContent.Stage stage)
	{
		return default(int);
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0xCD5D00", Offset = "0xCD5D00", VA = "0xCD5D00")]
	private void maybeUnlockNextStage()
	{
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0xCD6620", Offset = "0xCD6620", VA = "0xCD6620")]
	private void unlockNextStage()
	{
	}

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0xCD67A0", Offset = "0xCD67A0", VA = "0xCD67A0")]
	public int countCompletedSoloSetsInStage(int stageIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0xCD5E74", Offset = "0xCD5E74", VA = "0xCD5E74")]
	private int countCompletedSoloSets()
	{
		return default(int);
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0xCD69FC", Offset = "0xCD69FC", VA = "0xCD69FC")]
	public void reportVersusGameResults(string setId, GameResolution gameResolution, int myScore)
	{
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0xCD6C10", Offset = "0xCD6C10", VA = "0xCD6C10")]
	public void supplementVersusGameResults()
	{
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0xCD6DE4", Offset = "0xCD6DE4", VA = "0xCD6DE4")]
	public void reportCoOpGameResults(ArcadeType arcadeType, PlayerProfileData.Arcade.Type.Result result)
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0xCD7074", Offset = "0xCD7074", VA = "0xCD7074")]
	public void onGameStart()
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0xCD7080", Offset = "0xCD7080", VA = "0xCD7080")]
	public void onGameEnd()
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xCD2560", Offset = "0xCD2560", VA = "0xCD2560")]
	private void onMyXpSessionStart()
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0xCD70D0", Offset = "0xCD70D0", VA = "0xCD70D0")]
	public void onMyXpSessionEnd()
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0xCD71A4", Offset = "0xCD71A4", VA = "0xCD71A4")]
	[IteratorStateMachine(typeof(<GetMyCurrentRankCo>d__67))]
	private static IEnumerator<float> GetMyCurrentRankCo(LeaderboardManager.LeaderboardContainer leaderboard, Action<int> callback)
	{
		return null;
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0xCD725C", Offset = "0xCD725C", VA = "0xCD725C")]
	public static void getVersusRank(Action<int> callback)
	{
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0xCD72F4", Offset = "0xCD72F4", VA = "0xCD72F4")]
	public static void getCoOpRank(Action<int> callback)
	{
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xCD738C", Offset = "0xCD738C", VA = "0xCD738C")]
	public static void getArcadeRank(Action<int> callback, ArcadeType arcadeType = ArcadeType.Regular)
	{
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xCD24A8", Offset = "0xCD24A8", VA = "0xCD24A8")]
	public static void finalizeProfile(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0xCD7434", Offset = "0xCD7434", VA = "0xCD7434")]
	public void Debug_ResetItem(string itemID)
	{
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0xCD764C", Offset = "0xCD764C", VA = "0xCD764C")]
	public void Debug_EditItem(PlayerProfileData.Summary.ItemStatus itemStat)
	{
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0xCD7864", Offset = "0xCD7864", VA = "0xCD7864")]
	public void Debug_ClearAchievement(string achievementID)
	{
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0xCD7914", Offset = "0xCD7914", VA = "0xCD7914")]
	public void Debug_EditAchievement(PlayerProfileData.Summary.AchievementStatus achStatus)
	{
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0xCD7B5C", Offset = "0xCD7B5C", VA = "0xCD7B5C")]
	[IteratorStateMachine(typeof(<IMPORT_AWS_CHINA__ImportChineseAccount>d__76))]
	private IEnumerator<float> IMPORT_AWS_CHINA__ImportChineseAccount()
	{
		return null;
	}

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0xCD7BF8", Offset = "0xCD7BF8", VA = "0xCD7BF8")]
	[IteratorStateMachine(typeof(<IMPORT_AWS_CHINA__ReSignIn>d__77))]
	private IEnumerator<float> IMPORT_AWS_CHINA__ReSignIn(BackendSettings.Region region)
	{
		return null;
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0xCD7C88", Offset = "0xCD7C88", VA = "0xCD7C88")]
	public PlayerProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x2000487")]
public class PlayerProfileData
{
	[Serializable]
	[Token(Token = "0x2000488")]
	public class Operations
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool sendLog;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xCD9D00", Offset = "0xCD9D00", VA = "0xCD9D00")]
		public Operations()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000489")]
	public class Summary
	{
		[Serializable]
		[Token(Token = "0x200048A")]
		public class MedalAward
		{
			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventId;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializableMedalType medal;

			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xCDA49C", Offset = "0xCDA49C", VA = "0xCDA49C")]
			public MedalAward()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048B")]
		public class AchievementStatus
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string progress;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool unlocked;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool reported;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool unlockedSeen;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool seen;

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xCD790C", Offset = "0xCD790C", VA = "0xCD790C")]
			public AchievementStatus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048C")]
		public class ItemStatus
		{
			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool unlocked;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool unlockedSeen;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool seen;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool equipped;

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xCDAAC8", Offset = "0xCDAAC8", VA = "0xCDAAC8")]
			public ItemStatus()
			{
			}
		}

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializablePlayerLevel rating;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MedalAward> medals;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AchievementStatus> achievements;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ItemStatus> items;

		[Token(Token = "0x1700047F")]
		public SerializablePlayerLevel playerLevel
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xCDA180", Offset = "0xCDA180", VA = "0xCDA180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xCDA188", Offset = "0xCDA188", VA = "0xCDA188")]
		public MedalType? getMedal(string eventId)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xCDA358", Offset = "0xCDA358", VA = "0xCDA358")]
		public void awardMedal(string eventId, MedalType medal)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xCDA520", Offset = "0xCDA520", VA = "0xCDA520")]
		public AchievementStatus GetAchievement(string achievementId)
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xCDA6A4", Offset = "0xCDA6A4", VA = "0xCDA6A4")]
		public AchievementStatus AddAchievement(string achievementId)
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xCDA79C", Offset = "0xCDA79C", VA = "0xCDA79C")]
		public void ResetAchievement(AchievementStatus achievement)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xCDA7F4", Offset = "0xCDA7F4", VA = "0xCDA7F4")]
		public bool RemoveAchievement(AchievementStatus achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xCDA84C", Offset = "0xCDA84C", VA = "0xCDA84C")]
		public ItemStatus GetItem(string itemId)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xCDA9D0", Offset = "0xCDA9D0", VA = "0xCDA9D0")]
		public ItemStatus AddItem(string itemId)
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xCD9D08", Offset = "0xCD9D08", VA = "0xCD9D08")]
		public Summary()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200048D")]
	public class Personal
	{
		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializablePlayerLevel lastSeenRating;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int soloMaxSeenStage;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool soloPendingCelberationAllSetsComplete;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int soloPendingCelberationStageComplete;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool didTutorial;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool enteredSoloOnce;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool demoMode;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool playedDemo;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonthlyChallenge.Time lastSeenMonthlyChallenge;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool seenNewCoOp;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool seenNewLevelEditor;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool openedLevelEditor;

		[Token(Token = "0x17000480")]
		public SerializablePlayerLevel lastSeenPlayerLevel
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xCDAAD0", Offset = "0xCDAAD0", VA = "0xCDAAD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xCDAAD8", Offset = "0xCDAAD8", VA = "0xCDAAD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xCD9E7C", Offset = "0xCD9E7C", VA = "0xCD9E7C")]
		public Personal()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200048E")]
	public class Arcade
	{
		[Serializable]
		[Token(Token = "0x200048F")]
		public class Type
		{
			[Serializable]
			[Token(Token = "0x2000490")]
			public class Result
			{
				[Token(Token = "0x4001BF2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int score;

				[Token(Token = "0x6001AF1")]
				[Address(RVA = "0xCD5640", Offset = "0xCD5640", VA = "0xCD5640")]
				public bool betterThan(Result other)
				{
					return default(bool);
				}

				[Token(Token = "0x6001AF2")]
				[Address(RVA = "0xCD9064", Offset = "0xCD9064", VA = "0xCD9064")]
				public Result()
				{
				}
			}

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string type;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameplayStats stats;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int xp;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int totalTimePlayed;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numGamesPlayed;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Result bestResult;

			[Token(Token = "0x17000484")]
			public int CappedXp
			{
				[Token(Token = "0x6001AEF")]
				[Address(RVA = "0xCD9C14", Offset = "0xCD9C14", VA = "0xCD9C14")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xCDAAE0", Offset = "0xCDAAE0", VA = "0xCDAAE0")]
			public Type()
			{
			}
		}

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalTimePlayed;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numGamesPlayed;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayStats stats;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Type> types;

		[Token(Token = "0x17000481")]
		public int CappedXp
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xCD9CEC", Offset = "0xCD9CEC", VA = "0xCD9CEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000482")]
		public Type Regular
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xCD9C0C", Offset = "0xCD9C0C", VA = "0xCD9C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000483")]
		public Type Nightmare
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xCD9C28", Offset = "0xCD9C28", VA = "0xCD9C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xCD3518", Offset = "0xCD3518", VA = "0xCD3518")]
		public Type getType(ArcadeType arcadeType)
		{
			return null;
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xCD9F08", Offset = "0xCD9F08", VA = "0xCD9F08")]
		public Arcade()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000491")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x2000492")]
		public class Stage
		{
			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool unlocked;

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xCD3510", Offset = "0xCD3510", VA = "0xCD3510")]
			public Stage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000493")]
		public class Set
		{
			[Serializable]
			[Token(Token = "0x2000494")]
			public class Result
			{
				[Token(Token = "0x4001C02")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int progressPercent;

				[Token(Token = "0x4001C03")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float time;

				[Token(Token = "0x6001AF8")]
				[Address(RVA = "0xCDAC44", Offset = "0xCDAC44", VA = "0xCDAC44")]
				public Result()
				{
				}

				[Token(Token = "0x6001AF9")]
				[Address(RVA = "0xCDAC68", Offset = "0xCDAC68", VA = "0xCDAC68")]
				public void Reset()
				{
				}

				[Token(Token = "0x6001AFA")]
				[Address(RVA = "0xCD40FC", Offset = "0xCD40FC", VA = "0xCD40FC")]
				public bool betterThan(Result other)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int xp;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int totalTimePlayed;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numGamesPlayed;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numGamesComplete;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameplayStats stats;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Result bestResult;

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xCDAB58", Offset = "0xCDAB58", VA = "0xCDAB58")]
			public Set(string id)
			{
			}
		}

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalTimePlayed;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numGamesPlayed;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numSetsCompleted;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayStats stats;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Stage> stages;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Set> sets;

		[Token(Token = "0x17000485")]
		public int CappedXp
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xCD9C30", Offset = "0xCD9C30", VA = "0xCD9C30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xCD3778", Offset = "0xCD3778", VA = "0xCD3778")]
		public Set getSet(string setId)
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xCD9F90", Offset = "0xCD9F90", VA = "0xCD9F90")]
		public Solo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000495")]
	public class Custom
	{
		[Serializable]
		[Token(Token = "0x2000496")]
		public class Version1
		{
			[Serializable]
			[Token(Token = "0x2000497")]
			public class Set
			{
				[Token(Token = "0x4001C06")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int num;

				[Token(Token = "0x4001C07")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int version;

				[Token(Token = "0x4001C08")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Solo.Set.Result bestResult;

				[Token(Token = "0x6001AFE")]
				[Address(RVA = "0xCDAD00", Offset = "0xCDAD00", VA = "0xCDAD00")]
				public Set(int num)
				{
				}
			}

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Set> sets;

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xCD6418", Offset = "0xCD6418", VA = "0xCD6418")]
			public Set GetSet(int setNum)
			{
				return null;
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xCDAC78", Offset = "0xCDAC78", VA = "0xCDAC78")]
			public Version1()
			{
			}
		}

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Version1 v1;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xCDA068", Offset = "0xCDA068", VA = "0xCDA068")]
		public Custom()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000498")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x2000499")]
		public class Versus
		{
			[Serializable]
			[Token(Token = "0x200049A")]
			public class Set
			{
				[Token(Token = "0x4001C19")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string id;

				[Token(Token = "0x4001C1A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int xp;

				[Token(Token = "0x4001C1B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int totalTimePlayed;

				[Token(Token = "0x4001C1C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int numGamesPlayed;

				[Token(Token = "0x4001C1D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int numGamesWon;

				[Token(Token = "0x4001C1E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int numGamesLost;

				[Token(Token = "0x4001C1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public int numGamesDrawn;

				[Token(Token = "0x4001C20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public GameplayStats stats;

				[Token(Token = "0x6001B0A")]
				[Address(RVA = "0xCDB538", Offset = "0xCDB538", VA = "0xCDB538")]
				public Set(string id)
				{
				}
			}

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int xp;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int totalTimePlayed;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numGamesPlayed;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numGamesWon;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numGamesLost;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numGamesDrawn;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int skillRating;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int unreportedSkillRating;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float skillRatingDeviation;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float unreportedSkillRatingDeviation;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string seasonLeaderboard;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string seasonType;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameplayStats stats;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Set> sets;

			[Token(Token = "0x17000487")]
			public int CappedXp
			{
				[Token(Token = "0x6001B01")]
				[Address(RVA = "0xCD9C44", Offset = "0xCD9C44", VA = "0xCD9C44")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001B02")]
			[Address(RVA = "0xCDAE34", Offset = "0xCDAE34", VA = "0xCDAE34")]
			public string GetSeasonType()
			{
				return null;
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xCDAE8C", Offset = "0xCDAE8C", VA = "0xCDAE8C")]
			public float GetSkillRating(bool includeUnreported = false)
			{
				return default(float);
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xCDAF5C", Offset = "0xCDAF5C", VA = "0xCDAF5C")]
			public void SetUnreportedSkillRating(float rating)
			{
			}

			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xCDB1AC", Offset = "0xCDB1AC", VA = "0xCDB1AC")]
			public float GetSkillRatingDeviation(bool includeUnreported = false)
			{
				return default(float);
			}

			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xCDB260", Offset = "0xCDB260", VA = "0xCDB260")]
			public void SetUnreportedSkillRatingDeviation(float ratingDeviation)
			{
			}

			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xCD39B8", Offset = "0xCD39B8", VA = "0xCD39B8")]
			public Set getSet(string setId)
			{
				return null;
			}

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xCDB3A8", Offset = "0xCDB3A8", VA = "0xCDB3A8")]
			private Set SetById(string setId)
			{
				return null;
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xCDAD9C", Offset = "0xCDAD9C", VA = "0xCDAD9C")]
			public Versus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200049C")]
		public class CoOp : Arcade
		{
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xCDAE30", Offset = "0xCDAE30", VA = "0xCDAE30")]
			public CoOp()
			{
			}
		}

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Versus ranked;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoOp coOp;

		[Token(Token = "0x17000486")]
		public Versus versus
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xCDAD94", Offset = "0xCDAD94", VA = "0xCDAD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xCDA0D8", Offset = "0xCDA0D8", VA = "0xCDA0D8")]
		public Multiplayer()
		{
		}
	}

	[Token(Token = "0x4001BBE")]
	private const float initBestTime = 5999.9f;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int version;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Operations operations;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Summary summary;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Personal personal;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameplayStatsEx overallStats;

	[Token(Token = "0x4001BC4")]
	private const int XP_CAP_PER_MODE = 50000;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Arcade arcade;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Solo solo;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Custom custom;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Multiplayer multiplayer;

	[Token(Token = "0x1700047C")]
	public int TotalXp
	{
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xCD41E4", Offset = "0xCD41E4", VA = "0xCD41E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700047D")]
	public int TotalCappedXp
	{
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xCD9B38", Offset = "0xCD9B38", VA = "0xCD9B38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700047E")]
	public int OldProfileTotalCappedXp
	{
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xCD9C58", Offset = "0xCD9C58", VA = "0xCD9C58")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xCD1C58", Offset = "0xCD1C58", VA = "0xCD1C58")]
	public PlayerProfileData()
	{
	}
}
[Token(Token = "0x200049D")]
public static class PlayerProfileSync
{
	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0xCD4238", Offset = "0xCD4238", VA = "0xCD4238")]
	public static void sync(PlayerProfileData offlineData, PlayerProfileData onlineData, bool initial)
	{
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0xCDC82C", Offset = "0xCDC82C", VA = "0xCDC82C")]
	private static void mergeGameplayStats(GameplayStats offlineStats, GameplayStats onlineStats)
	{
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0xCDC438", Offset = "0xCDC438", VA = "0xCDC438")]
	private static void mergeBoolMax(ref bool b1, ref bool b2)
	{
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0xCDC270", Offset = "0xCDC270", VA = "0xCDC270")]
	private static void mergeIntMax(ref int i1, ref int i2)
	{
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0xCDB66C", Offset = "0xCDB66C", VA = "0xCDB66C")]
	private static void mergeMedals(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary)
	{
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0xCDB8B8", Offset = "0xCDB8B8", VA = "0xCDB8B8")]
	private static void mergeAchievements(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary)
	{
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0xCDBDB0", Offset = "0xCDBDB0", VA = "0xCDBDB0")]
	private static void mergeItems(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary, bool initial)
	{
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0xCDCF10", Offset = "0xCDCF10", VA = "0xCDCF10")]
	private static void ValidateOnlyOneEqupedItemPreSlot(Dictionary<string, PlayerProfileData.Summary.ItemStatus> offline, Dictionary<string, PlayerProfileData.Summary.ItemStatus> online)
	{
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0xCDC604", Offset = "0xCDC604", VA = "0xCDC604")]
	private static void mergeMonthlyChallengeTime(ref MonthlyChallenge.Time offlineTime, ref MonthlyChallenge.Time onlineTime)
	{
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0xCDD3C4", Offset = "0xCDD3C4", VA = "0xCDD3C4")]
	private static void mergeSoloResults(ref int prog1, ref int prog2, ref float time1, ref float time2)
	{
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0xCDC940", Offset = "0xCDC940", VA = "0xCDC940")]
	private static void mergeSoloSets(PlayerProfileData.Solo.Set set1, PlayerProfileData.Solo.Set set2)
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0xCDCA04", Offset = "0xCDCA04", VA = "0xCDCA04")]
	private static void mergeCustomSets(PlayerProfileData.Custom.Version1.Set set1, PlayerProfileData.Custom.Version1.Set set2)
	{
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0xCDD418", Offset = "0xCDD418", VA = "0xCDD418")]
	private static void mergeFloatMin(ref float f1, ref float f2)
	{
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0xCDCABC", Offset = "0xCDCABC", VA = "0xCDCABC")]
	private static void mergeFloatMax(ref float f1, ref float f2)
	{
	}
}
[Token(Token = "0x200049F")]
public class RNXDepot : MonoBehaviour, ISingleton
{
	[Token(Token = "0x20004A0")]
	public enum State
	{
		[Token(Token = "0x4001C2F")]
		WaitingForData,
		[Token(Token = "0x4001C30")]
		Done,
		[Token(Token = "0x4001C31")]
		Error
	}

	[Token(Token = "0x20004A1")]
	public class MyDepot<T> where T : new()
	{
		[Token(Token = "0x20004A2")]
		[CompilerGenerated]
		private sealed class <DefferedSend>d__23 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MyDepot<T> <>4__this;

			[Token(Token = "0x1700048C")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001B3A")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700048D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B37")]
			[DebuggerHidden]
			public <DefferedSend>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001B38")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B39")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public State state;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _foundOnline;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StatsName _statsName;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _dataString;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CoroutineHandle _defferedSendHandle;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _wantToSend;

		[Token(Token = "0x17000488")]
		public bool isWaitingForData
		{
			[Token(Token = "0x6001B29")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000489")]
		public bool isDone
		{
			[Token(Token = "0x6001B2A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048A")]
		public bool isError
		{
			[Token(Token = "0x6001B2B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048B")]
		public bool foundOnline
		{
			[Token(Token = "0x6001B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B2D")]
		public MyDepot(StatsName statsName)
		{
		}

		[Token(Token = "0x6001B2E")]
		~MyDepot()
		{
		}

		[Token(Token = "0x6001B2F")]
		public void Retry()
		{
		}

		[Token(Token = "0x6001B30")]
		private void onReadRespond(bool success, StatsData statsData)
		{
		}

		[Token(Token = "0x6001B31")]
		private void readExistingFile()
		{
		}

		[Token(Token = "0x6001B32")]
		private void parse()
		{
		}

		[Token(Token = "0x6001B33")]
		private void onWriteRespond(bool success)
		{
		}

		[Token(Token = "0x6001B34")]
		public void write()
		{
		}

		[Token(Token = "0x6001B35")]
		[IteratorStateMachine(typeof(MyDepot<>.<DefferedSend>d__23))]
		private IEnumerator<float> DefferedSend()
		{
			return null;
		}
	}

	[Token(Token = "0x20004A3")]
	public class FriendDepot<T> where T : new()
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public State state;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _foundOnline;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _friendUserID;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StatsName _statsName;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string errorMessage;

		[Token(Token = "0x1700048E")]
		public bool isWaitingForData
		{
			[Token(Token = "0x6001B3D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048F")]
		public bool isComplete
		{
			[Token(Token = "0x6001B3E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000490")]
		public bool isDone
		{
			[Token(Token = "0x6001B3F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000491")]
		public bool isError
		{
			[Token(Token = "0x6001B40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000492")]
		public bool foundOnline
		{
			[Token(Token = "0x6001B41")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B42")]
		public FriendDepot(string friendUserID, StatsName statsName)
		{
		}

		[Token(Token = "0x6001B43")]
		private void onReadRespond(bool success, Dictionary<string, StatsData> statsDataPerUserID)
		{
		}

		[Token(Token = "0x6001B44")]
		private void downloadFile()
		{
		}
	}

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RNXDepot inst;

	[NonSerialized]
	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initialized;

	[Token(Token = "0x4001C2B")]
	private const int CompressionThreshold = 204800;

	[Token(Token = "0x4001C2C")]
	private const string ZipPrefix = "zip:";

	[Token(Token = "0x4001C2D")]
	private const string ZipStreamName = "data.json";

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0xCDD7C0", Offset = "0xCDD7C0", VA = "0xCDD7C0", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0xCDD824", Offset = "0xCDD824", VA = "0xCDD824")]
	protected static string Compress(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0xCDDE78", Offset = "0xCDDE78", VA = "0xCDDE78")]
	protected static string Decompress(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0xCDE2BC", Offset = "0xCDE2BC", VA = "0xCDE2BC")]
	public RNXDepot()
	{
	}
}
[Token(Token = "0x20004A4")]
public class TrackingModeOrigin : MonoBehaviour
{
	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingOriginModeFlags _desiredTrackingOriginMode;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRInputSubsystem> _inputSubsystems;

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0xCDE2C4", Offset = "0xCDE2C4", VA = "0xCDE2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0xCDE44C", Offset = "0xCDE44C", VA = "0xCDE44C")]
	public TrackingModeOrigin()
	{
	}
}
[Token(Token = "0x20004A5")]
[RequireComponent(typeof(LaserPointer))]
public class CoOpPointer : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool show;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float length;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LaserPointer _pointer;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LaserPointer _uiPointer;

	[Token(Token = "0x4001C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _enabled;

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0xCDE4EC", Offset = "0xCDE4EC", VA = "0xCDE4EC")]
	private void UpdateFade()
	{
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0xCDE824", Offset = "0xCDE824", VA = "0xCDE824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0xCDE940", Offset = "0xCDE940", VA = "0xCDE940")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0xCDED80", Offset = "0xCDED80", VA = "0xCDED80")]
	public CoOpPointer()
	{
	}
}
[Token(Token = "0x20004A6")]
public class LaserPointer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004A7")]
	public class MaterialPair
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material p1;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material p2;

		[NonSerialized]
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material current;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xCDFB5C", Offset = "0xCDFB5C", VA = "0xCDFB5C")]
		public MaterialPair()
		{
		}
	}

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damping;

	[Token(Token = "0x4001C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dampingAngle;

	[Token(Token = "0x4001C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialPair[] materialPairs;

	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform glow;

	[NonSerialized]
	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float length;

	[NonSerialized]
	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeMultiplier;

	[NonSerialized]
	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool show;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _parent;

	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _transform;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Player _player;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer[] _lines;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] _originalLength;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _enabled;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _maxOriginalLength;

	[Token(Token = "0x4001C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Quaternion OFFSET_ROT;

	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SmoothFloat _fade;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SmoothFloat _length;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _dir;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SmoothVector3 _endPoint;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _FadeID;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _RemapID;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _visible;

	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _lastLength;

	[Token(Token = "0x17000493")]
	public Ray Ray
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xCDE6D8", Offset = "0xCDE6D8", VA = "0xCDE6D8")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0xCDED90", Offset = "0xCDED90", VA = "0xCDED90")]
	private void InitRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0xCDEF20", Offset = "0xCDEF20", VA = "0xCDEF20")]
	private void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0xCDEBBC", Offset = "0xCDEBBC", VA = "0xCDEBBC")]
	public void Enable()
	{
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0xCDEA44", Offset = "0xCDEA44", VA = "0xCDEA44")]
	public void Disable()
	{
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0xCDF61C", Offset = "0xCDF61C", VA = "0xCDF61C")]
	private void UpdateLength()
	{
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0xCDF4E4", Offset = "0xCDF4E4", VA = "0xCDF4E4")]
	private void SetLength(float wantedLength)
	{
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xCDF2A4", Offset = "0xCDF2A4", VA = "0xCDF2A4")]
	private void UpdateFade()
	{
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0xCDF1E4", Offset = "0xCDF1E4", VA = "0xCDF1E4")]
	private void UpdateEndPoint()
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0xCDF6A8", Offset = "0xCDF6A8", VA = "0xCDF6A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0xCDFA00", Offset = "0xCDFA00", VA = "0xCDFA00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0xCDFA30", Offset = "0xCDFA30", VA = "0xCDFA30")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20004A8")]
public class RacketAnimator : MonoBehaviour
{
	[Token(Token = "0x20004A9")]
	public enum State
	{
		[Token(Token = "0x4001C97")]
		Empty,
		[Token(Token = "0x4001C98")]
		Buildup,
		[Token(Token = "0x4001C99")]
		Idle,
		[Token(Token = "0x4001C9A")]
		Breakdown
	}

	[Token(Token = "0x20004AA")]
	private class RacketBlade
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultPos;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 outwardsDir;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion orientation;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float hit;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float frequency;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 velocity;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion spin;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RacketAnimator _racket;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _timeOffset;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _pulseTime;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _delayTime;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _totalTime;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _buildupStartTime;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _param;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _targetPos;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _initPos;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion _targetRot;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion _initRot;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _targetScale;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _isCenter;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform _parent;

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xCE239C", Offset = "0xCE239C", VA = "0xCE239C")]
		public RacketBlade(RacketAnimator racket, Transform wing, Transform parent, float t, float pulse, float delay, bool center = false)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xCE1A94", Offset = "0xCE1A94", VA = "0xCE1A94")]
		public void init(float linearTime)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xCE2EE8", Offset = "0xCE2EE8", VA = "0xCE2EE8")]
		public void reset()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xCE1164", Offset = "0xCE1164", VA = "0xCE1164")]
		public void updateExplosion(float dt)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xCE04EC", Offset = "0xCE04EC", VA = "0xCE04EC")]
		public bool updateBuildup(float time, float dt, float linearTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xCE0A8C", Offset = "0xCE0A8C", VA = "0xCE0A8C")]
		public void updateIdle(float time, float dt, float linearTime, float pullStrength, float hitStrength, bool updateRotation = true)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004AB")]
	public class RacketBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AC")]
		public class Hit
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float multiplier;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float cooldownSpeed;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float wireMultiplier;

			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xCE4870", Offset = "0xCE4870", VA = "0xCE4870")]
			public Hit()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public class Hover
		{
			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float amplitudeMin;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float amplitudeMax;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float offset;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float wave;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float waveFrequency;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float waveChaos;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve graph;

			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xCE488C", Offset = "0xCE488C", VA = "0xCE488C")]
			public Hover()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AE")]
		public class Noise
		{
			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float multiplier;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float falloff;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve graph;

			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xCE48BC", Offset = "0xCE48BC", VA = "0xCE48BC")]
			public Noise()
			{
			}
		}

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hit hit;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hover hover;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Noise noise;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Pull")]
		public float pullMultiplier;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("Buildup")]
		public float buildupTime;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float buildupMinDelay;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Break")]
		public float breakSpeed;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float breakSpin;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Setup")]
		public float triggerSpeed;

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xCE4724", Offset = "0xCE4724", VA = "0xCE4724")]
		public RacketBehaviour()
		{
		}
	}

	[Token(Token = "0x20004AF")]
	[CompilerGenerated]
	private sealed class <ActivatePointerCo>d__113 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RacketAnimator <>4__this;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x1700049E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xCE4B98", Offset = "0xCE4B98", VA = "0xCE4B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xCE4BE0", Offset = "0xCE4BE0", VA = "0xCE4BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xCE4664", Offset = "0xCE4664", VA = "0xCE4664")]
		[DebuggerHidden]
		public <ActivatePointerCo>d__113(int <>1__state)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xCE48D0", Offset = "0xCE48D0", VA = "0xCE48D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xCE48D4", Offset = "0xCE48D4", VA = "0xCE48D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xCE4BA0", Offset = "0xCE4BA0", VA = "0xCE4BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform _transform;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketBehaviour defaultBehaviour;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform mainCollider;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshCollider _mainCollider;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketModel _model;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform _racketPartsContainer;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _parent;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RacketBlade[] _wings;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RacketBlade _center;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SyncTransform _sync;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _lastTriggerPressValue;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothFloat _triggerPress;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _triggerRestPos;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion _triggerRestRot;

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _triggerPressedPos;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion _triggerPressedRot;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Mobile _mobile;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RacketPointer _uiPointer;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RacketHaptic _haptic;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RacketSling _sling;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private State _desiredState;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private State _state;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _time;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _linearTime;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _dt;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _lastCharge;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _pulsTime;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _delayTime;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _pulseSpeed;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _wantedPulseSpeed;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _lastHitStrength;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool _isPulling;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _pullingStrength;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _lastBreakupTime;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material _wireMaterial;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material _wireGlowMaterial;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _ChargeID;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _TimeID;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _DelayTimeID;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _PulseTimeID;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _MenuGlowMltID;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SkinnedMeshRenderer[] _smrs;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ParticleSystemRenderer[] _psrs;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SkinnedMeshRenderer[] _overrideSmrs;

	[Token(Token = "0x4001C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ParticleSystemRenderer[] _overridePsrs;

	[Token(Token = "0x4001C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _hasFocus;

	[Token(Token = "0x4001C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float _initColliderScale;

	[Token(Token = "0x4001C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private CoOpPointer _coOpPointer;

	[Token(Token = "0x4001C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Coroutine _ActivatePointerCo;

	[Token(Token = "0x17000494")]
	public static RacketAnimator mine
	{
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xCDFB64", Offset = "0xCDFB64", VA = "0xCDFB64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000495")]
	public static RacketAnimator opponent
	{
		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xCDFBD0", Offset = "0xCDFBD0", VA = "0xCDFBD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000496")]
	public static RacketAnimator ballOwner
	{
		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xCDFC3C", Offset = "0xCDFC3C", VA = "0xCDFC3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000497")]
	public Player myPlayer
	{
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xCDFCA4", Offset = "0xCDFCA4", VA = "0xCDFCA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000498")]
	public RacketModel Model
	{
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xCDFEBC", Offset = "0xCDFEBC", VA = "0xCDFEBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xCDFEC4", Offset = "0xCDFEC4", VA = "0xCDFEC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000499")]
	public static Transform RacketPartsContainer
	{
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xCE00F0", Offset = "0xCE00F0", VA = "0xCE00F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049A")]
	public RacketPointer UIPointer
	{
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xCE01EC", Offset = "0xCE01EC", VA = "0xCE01EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049B")]
	public RacketHaptic haptic
	{
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xCE01F4", Offset = "0xCE01F4", VA = "0xCE01F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049C")]
	public RacketSling sling
	{
		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xCE01FC", Offset = "0xCE01FC", VA = "0xCE01FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049D")]
	public State state
	{
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xCE0204", Offset = "0xCE0204", VA = "0xCE0204")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1400003D")]
	public event Action OnModelChanged
	{
		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xCDFD84", Offset = "0xCDFD84", VA = "0xCDFD84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xCDFE20", Offset = "0xCDFE20", VA = "0xCDFE20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0xCE020C", Offset = "0xCE020C", VA = "0xCE020C")]
	public static bool IsTriggerPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0xCE0298", Offset = "0xCE0298", VA = "0xCE0298")]
	private void SetBladesVisibility(bool state)
	{
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0xCE0454", Offset = "0xCE0454", VA = "0xCE0454")]
	private void UpdateBuildup()
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0xCE0868", Offset = "0xCE0868", VA = "0xCE0868")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0xCE0EA4", Offset = "0xCE0EA4", VA = "0xCE0EA4")]
	private void UpdateHit()
	{
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0xCE0F80", Offset = "0xCE0F80", VA = "0xCE0F80")]
	private void UpdateBreakdown()
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0xCE1360", Offset = "0xCE1360", VA = "0xCE1360")]
	private void UpdateDesiredState()
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0xCE1884", Offset = "0xCE1884", VA = "0xCE1884")]
	public bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0xCE1894", Offset = "0xCE1894", VA = "0xCE1894")]
	public bool IsReadyOrBuilding()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0xCE07C4", Offset = "0xCE07C4", VA = "0xCE07C4")]
	private void UpdateZen()
	{
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0xCE18A8", Offset = "0xCE18A8", VA = "0xCE18A8")]
	public void LoadRacket()
	{
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0xCE1938", Offset = "0xCE1938", VA = "0xCE1938")]
	private bool IsBallTooClose()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0xCE1410", Offset = "0xCE1410", VA = "0xCE1410")]
	private void LoadRacketNow()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0xCE1C20", Offset = "0xCE1C20", VA = "0xCE1C20")]
	public void RemoveRacket()
	{
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0xCE1534", Offset = "0xCE1534", VA = "0xCE1534")]
	private void RemoveRacketNow()
	{
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0xCE1CB0", Offset = "0xCE1CB0", VA = "0xCE1CB0")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0xCE1CC4", Offset = "0xCE1CC4", VA = "0xCE1CC4")]
	public void BeginPull()
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0xCE1CD0", Offset = "0xCE1CD0", VA = "0xCE1CD0")]
	public void EndPull()
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0xCE1CD8", Offset = "0xCE1CD8", VA = "0xCE1CD8")]
	public void BallHit(Vector3 pos, Vector3 norm, float strength)
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0xCE1F40", Offset = "0xCE1F40", VA = "0xCE1F40")]
	private void ReplaceMaterialInChildren(ref Material mat)
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0xCE2090", Offset = "0xCE2090", VA = "0xCE2090")]
	public void SetMenuButtonGlow(bool glow_active)
	{
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0xCDFF60", Offset = "0xCDFF60", VA = "0xCDFF60")]
	private void DeinitModel()
	{
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0xCE214C", Offset = "0xCE214C", VA = "0xCE214C")]
	private void InitBlades()
	{
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0xCE2B60", Offset = "0xCE2B60", VA = "0xCE2B60")]
	public void OverrideModel(PlayerModel playerModel, Transform overrideCenter, Transform[] overrideWings, Material smrP1, Material smrP2, Material psrP1, Material psrP2)
	{
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0xCE2FA0", Offset = "0xCE2FA0", VA = "0xCE2FA0")]
	public void UnOverrideModel()
	{
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0xCE3000", Offset = "0xCE3000", VA = "0xCE3000")]
	public void InitModel()
	{
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0xCE3598", Offset = "0xCE3598", VA = "0xCE3598")]
	private void OnHandsSwitched()
	{
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0xCE363C", Offset = "0xCE363C", VA = "0xCE363C")]
	private void OnAppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0xCE397C", Offset = "0xCE397C", VA = "0xCE397C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0xCE3C28", Offset = "0xCE3C28", VA = "0xCE3C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0xCE3C84", Offset = "0xCE3C84", VA = "0xCE3C84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0xCE3D9C", Offset = "0xCE3D9C", VA = "0xCE3D9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0xCE3EB4", Offset = "0xCE3EB4", VA = "0xCE3EB4")]
	private void UpdateColliderScale()
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0xCE2574", Offset = "0xCE2574", VA = "0xCE2574")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0xCE4194", Offset = "0xCE4194", VA = "0xCE4194")]
	private void UpdateCoOpPointer(bool show)
	{
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0xCE42B4", Offset = "0xCE42B4", VA = "0xCE42B4")]
	private void MpBreakRacketIfInFace()
	{
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0xCE4580", Offset = "0xCE4580", VA = "0xCE4580")]
	public void ActivatePointers(bool active)
	{
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0xCE45DC", Offset = "0xCE45DC", VA = "0xCE45DC")]
	[IteratorStateMachine(typeof(<ActivatePointerCo>d__113))]
	private IEnumerator ActivatePointerCo(bool active)
	{
		return null;
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0xCE468C", Offset = "0xCE468C", VA = "0xCE468C")]
	public RacketAnimator()
	{
	}
}
[Token(Token = "0x20004B0")]
public class RacketModeController : MonoBehaviour
{
	[Token(Token = "0x20004B1")]
	private enum Mode
	{
		[Token(Token = "0x4001CD2")]
		None,
		[Token(Token = "0x4001CD3")]
		UI,
		[Token(Token = "0x4001CD4")]
		Racket
	}

	[Token(Token = "0x4001CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RacketModeController inst;

	[Token(Token = "0x4001CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _inGame;

	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _broken;

	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _uiPopUp;

	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Mode _mode;

	[Token(Token = "0x170004A0")]
	public bool inGame
	{
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xCE4C30", Offset = "0xCE4C30", VA = "0xCE4C30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xCE4BE8", Offset = "0xCE4BE8", VA = "0xCE4BE8")]
		set
		{
		}
	}

	[Token(Token = "0x170004A1")]
	public bool broken
	{
		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xCE4C38", Offset = "0xCE4C38", VA = "0xCE4C38")]
		set
		{
		}
	}

	[Token(Token = "0x170004A2")]
	public bool uiPopUp
	{
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xCE4C54", Offset = "0xCE4C54", VA = "0xCE4C54")]
		set
		{
		}
	}

	[Token(Token = "0x170004A3")]
	private Mode mode
	{
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xCE4C70", Offset = "0xCE4C70", VA = "0xCE4C70")]
		set
		{
		}
	}

	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0xCE4D60", Offset = "0xCE4D60", VA = "0xCE4D60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0xCE4DB8", Offset = "0xCE4DB8", VA = "0xCE4DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0xCE4ED8", Offset = "0xCE4ED8", VA = "0xCE4ED8")]
	private void onPopUpPopped(Transform popUpRoot)
	{
	}

	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0xCE4EF4", Offset = "0xCE4EF4", VA = "0xCE4EF4")]
	private void onPopUpUnpopped()
	{
	}

	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0xCE4C04", Offset = "0xCE4C04", VA = "0xCE4C04")]
	private void update()
	{
	}

	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0xCE4F08", Offset = "0xCE4F08", VA = "0xCE4F08")]
	public RacketModeController()
	{
	}
}
[Token(Token = "0x20004B2")]
public class RacketModel : MonoBehaviour
{
	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarSettings.AvatarLabel label;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trigger;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform triggerPressedPose;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform center;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _centerOverride;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] wings;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] _wingsOverride;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer menuButton;

	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer backButton;

	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform handle;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform panel;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject zen;

	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform pointerAnchorUI;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform pointerAnchorCoOp;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshCollider mainCollider;

	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Rigidbody handleRB;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform pendantAnchor;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform yurAnchor;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VRPlugin.Side _currentSide;

	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _MenuTexID;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Material> _backMaterials;

	[Token(Token = "0x170004A4")]
	public Transform Center
	{
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xCE03DC", Offset = "0xCE03DC", VA = "0xCE03DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xCE4F10", Offset = "0xCE4F10", VA = "0xCE4F10")]
		set
		{
		}
	}

	[Token(Token = "0x170004A5")]
	public Transform[] Wings
	{
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xCE1344", Offset = "0xCE1344", VA = "0xCE1344")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xCE4F18", Offset = "0xCE4F18", VA = "0xCE4F18")]
		set
		{
		}
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0xCE4F20", Offset = "0xCE4F20", VA = "0xCE4F20")]
	private void OnHandsSwitched()
	{
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0xCE4FBC", Offset = "0xCE4FBC", VA = "0xCE4FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0xCE5128", Offset = "0xCE5128", VA = "0xCE5128")]
	private void UpdateBackMaterial()
	{
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0xCE52BC", Offset = "0xCE52BC", VA = "0xCE52BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0xCE52C0", Offset = "0xCE52C0", VA = "0xCE52C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0xCE4F7C", Offset = "0xCE4F7C", VA = "0xCE4F7C")]
	public void SetupHand(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0xCE5370", Offset = "0xCE5370", VA = "0xCE5370")]
	public RacketModel()
	{
	}
}
[Token(Token = "0x20004B3")]
[RequireComponent(typeof(LaserPointer))]
public class RacketPointer : MonoBehaviour
{
	[Token(Token = "0x20004B4")]
	[CompilerGenerated]
	private sealed class <raycastCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RacketPointer <>4__this;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ray <ray>5__2;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <maxDist>5__3;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lastDist>5__4;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <n>5__5;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <k>5__6;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__7;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image[] <images>5__8;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <m>5__9;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <j>5__10;

		[Token(Token = "0x170004A7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xCE64D0", Offset = "0xCE64D0", VA = "0xCE64D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xCE6518", Offset = "0xCE6518", VA = "0xCE6518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xCE565C", Offset = "0xCE565C", VA = "0xCE565C")]
		[DebuggerHidden]
		public <raycastCo>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xCE6090", Offset = "0xCE6090", VA = "0xCE6090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xCE6094", Offset = "0xCE6094", VA = "0xCE6094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xCE64D8", Offset = "0xCE64D8", VA = "0xCE64D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxLength;

	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxLengthLE;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _length;

	[Token(Token = "0x4001CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LaserPointer _pointer;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] _corncers;

	[Token(Token = "0x4001CF0")]
	private const string _COROUTINES_TAG = "RacketPointer_Coroutines";

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _enabled;

	[Token(Token = "0x4001CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject[] _canvases;

	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Image[]> _imagesByCanvas;

	[Token(Token = "0x170004A6")]
	public Ray Ray
	{
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xCE53FC", Offset = "0xCE53FC", VA = "0xCE53FC")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0xCE5438", Offset = "0xCE5438", VA = "0xCE5438")]
	private bool finitePlaneRaycast(RectTransform rt, Ray ray, float maxDistance, out float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0xCE55E8", Offset = "0xCE55E8", VA = "0xCE55E8")]
	[IteratorStateMachine(typeof(<raycastCo>d__9))]
	private IEnumerator<float> raycastCo()
	{
		return null;
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0xCE4A8C", Offset = "0xCE4A8C", VA = "0xCE4A8C")]
	public void toggle(bool state)
	{
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0xCE5684", Offset = "0xCE5684", VA = "0xCE5684")]
	private void initImages()
	{
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0xCE5F1C", Offset = "0xCE5F1C", VA = "0xCE5F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0xCE5FB8", Offset = "0xCE5FB8", VA = "0xCE5FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0xCE5FE0", Offset = "0xCE5FE0", VA = "0xCE5FE0")]
	public RacketPointer()
	{
	}
}
[Token(Token = "0x20004B5")]
public class RacketPredictor : MonoBehaviour
{
	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Params")]
	public float elbowSmoothness;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float snapDuration;

	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public bool simulateLostTrackingWithGrip;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool debug;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _lastTrackedHandPos;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _lastTrackedHandRot;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _elbowLocal;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _smoothElbowLocal;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _lastSmoothElbow;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _lastPos;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _lastRot;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _amount;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _timeSinceTrackingReturned;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _isPositionTracked;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _wasPositionTracked;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _initialized;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Matrix4x4 _headMatrix;

	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _hasFocus;

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0xCE6574", Offset = "0xCE6574", VA = "0xCE6574")]
	private void Predict()
	{
	}

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0xCE6DB8", Offset = "0xCE6DB8", VA = "0xCE6DB8")]
	private void OnAppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0xCE6DC4", Offset = "0xCE6DC4", VA = "0xCE6DC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0xCE6E74", Offset = "0xCE6E74", VA = "0xCE6E74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0xCE6F24", Offset = "0xCE6F24", VA = "0xCE6F24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0xCE7028", Offset = "0xCE7028", VA = "0xCE7028")]
	public RacketPredictor()
	{
	}
}
[Token(Token = "0x20004B6")]
public class RacketRigidBody : MonoBehaviour
{
	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float collisionMultiplier;

	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeMultiplier;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxRelativeSpeed;

	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform anchor;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RacketAnimator _racket;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketAnimator _otherRacket;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _timeSinceLastHit;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastPlayerScale;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _initScale;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _initPos;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion _initRot;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _transform;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _racketParent;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshCollider _collider;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _fxPrefab;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isColliding;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _hapticStrength;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _burstMaxSize;

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0xCE7044", Offset = "0xCE7044", VA = "0xCE7044")]
	private Vector3 GetCollisionPoint(Collision collision)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0xCE713C", Offset = "0xCE713C", VA = "0xCE713C")]
	private void HandleCollision(Collision collision)
	{
	}

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0xCE7470", Offset = "0xCE7470", VA = "0xCE7470")]
	private void PlayHitSound(Collision collision)
	{
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0xCE7584", Offset = "0xCE7584", VA = "0xCE7584")]
	private void PlayFX(float strength)
	{
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0xCE7918", Offset = "0xCE7918", VA = "0xCE7918")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0xCE7C7C", Offset = "0xCE7C7C", VA = "0xCE7C7C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0xCE7C80", Offset = "0xCE7C80", VA = "0xCE7C80")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0xCE7C84", Offset = "0xCE7C84", VA = "0xCE7C84")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0xCE7C8C", Offset = "0xCE7C8C", VA = "0xCE7C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0xCE801C", Offset = "0xCE801C", VA = "0xCE801C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0xCE8388", Offset = "0xCE8388", VA = "0xCE8388")]
	public RacketRigidBody()
	{
	}
}
[Token(Token = "0x20004B7")]
public class RacketScore : MonoBehaviour
{
	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh[] _titleTexts;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] _scoreTexts;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lastScore;

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0xCE83F8", Offset = "0xCE83F8", VA = "0xCE83F8")]
	private void updateTitle(string title)
	{
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0xCE8460", Offset = "0xCE8460", VA = "0xCE8460")]
	private void updateScore(string score)
	{
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0xCE84C8", Offset = "0xCE84C8", VA = "0xCE84C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0xCE8664", Offset = "0xCE8664", VA = "0xCE8664")]
	public RacketScore()
	{
	}
}
[Token(Token = "0x20004B8")]
public class RacketSling : MonoBehaviour
{
	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _waitForTriggerRelease;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _pullIsDisabled;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _pulledFromPlow;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Params")]
	public float resistCentrifugalCoeff;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float resistCentrifugalMaxEffect;

	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maintainBallElevation;

	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bringToFrontMinAngle;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bringToFrontMaxAngle;

	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Pull from plow")]
	public float pullKBoostFromPlow;

	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pullFromPlowDampCoeff;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pullKBoostFromPlowDuration;

	[NonSerialized]
	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ballInFrontOfPlayerAmount;

	[NonSerialized]
	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ballTowardsPlayerAmount;

	[NonSerialized]
	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 lastCalculatedPullForce;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpatializedAudio _racketPullLoopSA;

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ball _pulledBall;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pullDuration;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float maxDirectToPlayerAmount;

	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _incrementiveDisableTimer;

	[Token(Token = "0x170004A9")]
	public bool pulledFromPlow
	{
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xCE8674", Offset = "0xCE8674", VA = "0xCE8674")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004AA")]
	public bool pullIsDisabled
	{
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xCE867C", Offset = "0xCE867C", VA = "0xCE867C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004AB")]
	public bool isPulling
	{
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xCE8684", Offset = "0xCE8684", VA = "0xCE8684")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004AC")]
	public bool usedSinceLastRacketShot
	{
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xCE86E4", Offset = "0xCE86E4", VA = "0xCE86E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xCE86EC", Offset = "0xCE86EC", VA = "0xCE86EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001BDD")]
	[Address(RVA = "0xCE86F8", Offset = "0xCE86F8", VA = "0xCE86F8")]
	public float GetSlingDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0xCE8718", Offset = "0xCE8718", VA = "0xCE8718")]
	public bool isPullingBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0xCE8790", Offset = "0xCE8790", VA = "0xCE8790")]
	public bool isActuallyPullingBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0xCE87A4", Offset = "0xCE87A4", VA = "0xCE87A4")]
	public void ApplyBallForces(Ball ball, bool onlyCalcInternals = false)
	{
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0xCE9880", Offset = "0xCE9880", VA = "0xCE9880")]
	public void BallDisabled(Ball ball)
	{
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0xCE997C", Offset = "0xCE997C", VA = "0xCE997C")]
	public void BallHitRacket(Ball ball)
	{
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0xCE9908", Offset = "0xCE9908", VA = "0xCE9908")]
	private void StopPullingBall()
	{
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0xCE9A00", Offset = "0xCE9A00", VA = "0xCE9A00")]
	private bool shouldPullBeDisabled(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0xCE9E7C", Offset = "0xCE9E7C", VA = "0xCE9E7C")]
	private void makeIncrementiveTearDecision()
	{
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0xCE9F64", Offset = "0xCE9F64", VA = "0xCE9F64")]
	private void StartPullingBall(Ball ball)
	{
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0xCEA15C", Offset = "0xCEA15C", VA = "0xCEA15C")]
	private bool CanStartPullBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0xCEA248", Offset = "0xCEA248", VA = "0xCEA248")]
	private bool PullBallRequested()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0xCEA338", Offset = "0xCEA338", VA = "0xCEA338")]
	private bool NeedToStopPullBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0xCEA398", Offset = "0xCEA398", VA = "0xCEA398")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0xCEA52C", Offset = "0xCEA52C", VA = "0xCEA52C")]
	private void UpdatePullSound()
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0xCEA780", Offset = "0xCEA780", VA = "0xCEA780")]
	public RacketSling()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B9")]
public class MonthlyChallenge
{
	[Serializable]
	[Token(Token = "0x20004BA")]
	public struct Time
	{
		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int year;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int month;

		[Token(Token = "0x170004B1")]
		public bool isSet
		{
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xCEAB88", Offset = "0xCEAB88", VA = "0xCEAB88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B2")]
		public bool isMusicChallenge
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xCEA7DC", Offset = "0xCEA7DC", VA = "0xCEA7DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xCEA908", Offset = "0xCEA908", VA = "0xCEA908", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xCEA990", Offset = "0xCEA990", VA = "0xCEA990", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xCEA9B8", Offset = "0xCEA9B8", VA = "0xCEA9B8")]
		public static bool operator ==(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xCEAA24", Offset = "0xCEAA24", VA = "0xCEAA24")]
		public static bool operator !=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xCEAA94", Offset = "0xCEAA94", VA = "0xCEAA94")]
		public static bool operator <(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xCEAAF8", Offset = "0xCEAAF8", VA = "0xCEAAF8")]
		public static bool operator >(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xCEAB28", Offset = "0xCEAB28", VA = "0xCEAB28")]
		public static bool operator <=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xCEAB58", Offset = "0xCEAB58", VA = "0xCEAB58")]
		public static bool operator >=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xCEAAC4", Offset = "0xCEAAC4", VA = "0xCEAAC4")]
		public static int compare(Time time1, Time time2)
		{
			return default(int);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xCEAB98", Offset = "0xCEAB98", VA = "0xCEAB98")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xCEABA0", Offset = "0xCEABA0", VA = "0xCEABA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x20004BB")]
	public class Difficulties
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int waveRange;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xCEAC40", Offset = "0xCEAC40", VA = "0xCEAC40")]
		public Difficulties()
		{
		}
	}

	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Time time;

	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string setId;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Difficulties difficulties;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MonthlyChallenges _parent;

	[Token(Token = "0x170004AD")]
	public MonthlyChallenges parent
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xCEA7A0", Offset = "0xCEA7A0", VA = "0xCEA7A0")]
		set
		{
		}
	}

	[Token(Token = "0x170004AE")]
	public bool isMusicChallenge
	{
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xCEA7A8", Offset = "0xCEA7A8", VA = "0xCEA7A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004AF")]
	public bool readyToPlay
	{
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xCEA810", Offset = "0xCEA810", VA = "0xCEA810")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004B0")]
	public WaveSet set
	{
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xCEA888", Offset = "0xCEA888", VA = "0xCEA888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0xCEA900", Offset = "0xCEA900", VA = "0xCEA900")]
	public MonthlyChallenge()
	{
	}
}
[Serializable]
[Token(Token = "0x20004BC")]
public class MonthlyChallengesData
{
	[Serializable]
	[Token(Token = "0x20004BD")]
	public class Last
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenge.Time time;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xCEAC50", Offset = "0xCEAC50", VA = "0xCEAC50")]
		public Last()
		{
		}
	}

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MonthlyChallenge[] challenges;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Last last;

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0xCEAC48", Offset = "0xCEAC48", VA = "0xCEAC48")]
	public MonthlyChallengesData()
	{
	}
}
[Token(Token = "0x20004BE")]
public class MonthlyChallenges : RemoteConfig<MonthlyChallengesData>, ISingleton
{
	[Token(Token = "0x20004BF")]
	private enum CurrentChallengeState
	{
		[Token(Token = "0x4001D57")]
		NoChallenge,
		[Token(Token = "0x4001D58")]
		Loading,
		[Token(Token = "0x4001D59")]
		ReadyToPlay
	}

	[Token(Token = "0x20004C0")]
	private enum AsyncState
	{
		[Token(Token = "0x4001D5B")]
		Pending,
		[Token(Token = "0x4001D5C")]
		Done,
		[Token(Token = "0x4001D5D")]
		Error
	}

	[Token(Token = "0x20004C1")]
	private class ConcludedChallenge
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MedalType medal;

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xCEE658", Offset = "0xCEE658", VA = "0xCEE658")]
		public ConcludedChallenge()
		{
		}
	}

	[Token(Token = "0x20004C2")]
	[CompilerGenerated]
	private sealed class <StartCo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x170004BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xCEE918", Offset = "0xCEE918", VA = "0xCEE918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xCEE960", Offset = "0xCEE960", VA = "0xCEE960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xCEB630", Offset = "0xCEB630", VA = "0xCEB630")]
		[DebuggerHidden]
		public <StartCo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xCEE660", Offset = "0xCEE660", VA = "0xCEE660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xCEE664", Offset = "0xCEE664", VA = "0xCEE664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xCEE920", Offset = "0xCEE920", VA = "0xCEE920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C3")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool preparingCrate;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xCEE968", Offset = "0xCEE968", VA = "0xCEE968")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xCEE970", Offset = "0xCEE970", VA = "0xCEE970")]
		internal void <LoadWipSetCo>b__0(WaveSet set)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xCEEA38", Offset = "0xCEEA38", VA = "0xCEEA38")]
		internal void <LoadWipSetCo>b__1(string errMsg)
		{
		}
	}

	[Token(Token = "0x20004C4")]
	[CompilerGenerated]
	private sealed class <LoadWipSetCo>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass51_0 <>8__1;

		[Token(Token = "0x170004C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xCEF204", Offset = "0xCEF204", VA = "0xCEF204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xCEF24C", Offset = "0xCEF24C", VA = "0xCEF24C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xCEBE9C", Offset = "0xCEBE9C", VA = "0xCEBE9C")]
		[DebuggerHidden]
		public <LoadWipSetCo>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xCEEACC", Offset = "0xCEEACC", VA = "0xCEEACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xCEEAD0", Offset = "0xCEEAD0", VA = "0xCEEAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xCEF20C", Offset = "0xCEF20C", VA = "0xCEF20C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C5")]
	[CompilerGenerated]
	private sealed class <updateContent>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x170004C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xCEF5B0", Offset = "0xCEF5B0", VA = "0xCEF5B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xCEF5F8", Offset = "0xCEF5F8", VA = "0xCEF5F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xCEC198", Offset = "0xCEC198", VA = "0xCEC198")]
		[DebuggerHidden]
		public <updateContent>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xCEF254", Offset = "0xCEF254", VA = "0xCEF254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xCEF258", Offset = "0xCEF258", VA = "0xCEF258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xCEF5B8", Offset = "0xCEF5B8", VA = "0xCEF5B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C6")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<WaveSet> <>9__2;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> <>9__3;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xCEF600", Offset = "0xCEF600", VA = "0xCEF600")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xCEF608", Offset = "0xCEF608", VA = "0xCEF608")]
		internal void <downloadSet>b__0(DownloadedCrate crate)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xCEFA28", Offset = "0xCEFA28", VA = "0xCEFA28")]
		internal void <downloadSet>b__2(WaveSet unpackedWaveSet)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xCEFAA0", Offset = "0xCEFAA0", VA = "0xCEFAA0")]
		internal void <downloadSet>b__3(string error)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xCEFB64", Offset = "0xCEFB64", VA = "0xCEFB64")]
		internal void <downloadSet>b__1(string error)
		{
		}
	}

	[Token(Token = "0x20004C7")]
	[CompilerGenerated]
	private sealed class <downloadSet>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass58_0 <>8__1;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xCF0024", Offset = "0xCF0024", VA = "0xCF0024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xCF006C", Offset = "0xCF006C", VA = "0xCF006C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xCEC368", Offset = "0xCEC368", VA = "0xCEC368")]
		[DebuggerHidden]
		public <downloadSet>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xCEFC28", Offset = "0xCEFC28", VA = "0xCEFC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xCEFC2C", Offset = "0xCEFC2C", VA = "0xCEFC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xCF002C", Offset = "0xCF002C", VA = "0xCF002C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C8")]
	[CompilerGenerated]
	private sealed class <downloadPastChallenges>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MonthlyChallenge>.Enumerator <>7__wrap1;

		[Token(Token = "0x170004C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xCF03F8", Offset = "0xCF03F8", VA = "0xCF03F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xCF0440", Offset = "0xCF0440", VA = "0xCF0440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xCEC454", Offset = "0xCEC454", VA = "0xCEC454")]
		[DebuggerHidden]
		public <downloadPastChallenges>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xCF0074", Offset = "0xCF0074", VA = "0xCF0074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xCF0090", Offset = "0xCF0090", VA = "0xCF0090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xCF03A8", Offset = "0xCF03A8", VA = "0xCF03A8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xCF0400", Offset = "0xCF0400", VA = "0xCF0400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C9")]
	[CompilerGenerated]
	private sealed class <concludeFinishedChallenges>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MonthlyChallenge>.Enumerator <>7__wrap2;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MonthlyChallenge <challenge>5__4;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <leaderboardName>5__5;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LeaderboardManager.LeaderboardContainer <leaderboard>5__6;

		[Token(Token = "0x170004C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xCF1090", Offset = "0xCF1090", VA = "0xCF1090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xCF10D8", Offset = "0xCF10D8", VA = "0xCF10D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xCEC4F0", Offset = "0xCEC4F0", VA = "0xCEC4F0")]
		[DebuggerHidden]
		public <concludeFinishedChallenges>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xCF0448", Offset = "0xCF0448", VA = "0xCF0448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xCF0474", Offset = "0xCF0474", VA = "0xCF0474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xCF1040", Offset = "0xCF1040", VA = "0xCF1040")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xCF1098", Offset = "0xCF1098", VA = "0xCF1098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string keyFormat;

	[Token(Token = "0x4001D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallenges inst;

	[Token(Token = "0x4001D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MonthlyChallenge> _challenges;

	[Token(Token = "0x4001D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MonthlyChallenge _currentChallenge;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Dictionary<string, WaveSet> _downloadedSets;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CurrentChallengeState _currentChallengeState;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _allChallengesReady;

	[Token(Token = "0x4001D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AsyncState _asyncState;

	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _updateContentCo;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly List<ConcludedChallenge> _concludedChallenges;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _concludingChallenges;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] MONTHS;

	[Token(Token = "0x170004B3")]
	private DebugSettings.MonthlyChallengeDbg debugConfig
	{
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xCEAC58", Offset = "0xCEAC58", VA = "0xCEAC58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004B4")]
	public List<MonthlyChallenge> challenges
	{
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xCEACB8", Offset = "0xCEACB8", VA = "0xCEACB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004B5")]
	public bool ready
	{
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xCEACC0", Offset = "0xCEACC0", VA = "0xCEACC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004B6")]
	public MonthlyChallenge currentChallenge
	{
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xCEAD2C", Offset = "0xCEAD2C", VA = "0xCEAD2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xCEADAC", Offset = "0xCEADAC", VA = "0xCEADAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170004B7")]
	private CurrentChallengeState currentChallengeState
	{
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xCEB220", Offset = "0xCEB220", VA = "0xCEB220")]
		set
		{
		}
	}

	[Token(Token = "0x170004B8")]
	public bool noCurrentChallenge
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xCEB24C", Offset = "0xCEB24C", VA = "0xCEB24C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004B9")]
	public bool currentChallengeIsLoading
	{
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xCEB25C", Offset = "0xCEB25C", VA = "0xCEB25C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004BA")]
	public bool currentChallengeIsReadyToPlay
	{
		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xCEB26C", Offset = "0xCEB26C", VA = "0xCEB26C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004BB")]
	public bool allChallengesReady
	{
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xCEB27C", Offset = "0xCEB27C", VA = "0xCEB27C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004BC")]
	public WaveSet currentSet
	{
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xCEB284", Offset = "0xCEB284", VA = "0xCEB284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004BD")]
	public bool isConcludedChallenges
	{
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xCEC774", Offset = "0xCEC774", VA = "0xCEC774")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004BE")]
	public bool playerDeservesAMedal
	{
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xCEC7D4", Offset = "0xCEC7D4", VA = "0xCEC7D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003E")]
	public event Action currentChallengeStateChanged
	{
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xCEB0E8", Offset = "0xCEB0E8", VA = "0xCEB0E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xCEB184", Offset = "0xCEB184", VA = "0xCEB184")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event Action<MonthlyChallenge> pastChallengeReadyToPlay
	{
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xCEB2E0", Offset = "0xCEB2E0", VA = "0xCEB2E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xCEB390", Offset = "0xCEB390", VA = "0xCEB390")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0xCEA82C", Offset = "0xCEA82C", VA = "0xCEA82C")]
	public bool isChallengeReadyToPlay(MonthlyChallenge challenge)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0xCEA8A4", Offset = "0xCEA8A4", VA = "0xCEA8A4")]
	public WaveSet getSet(MonthlyChallenge challenge)
	{
		return null;
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0xCEB440", Offset = "0xCEB440", VA = "0xCEB440", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0xCEB4A8", Offset = "0xCEB4A8", VA = "0xCEB4A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0xCEAFF8", Offset = "0xCEAFF8", VA = "0xCEAFF8")]
	private void updateCurrentChallengeState(bool forceNotify = false)
	{
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0xCEB59C", Offset = "0xCEB59C", VA = "0xCEB59C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0xCEB5BC", Offset = "0xCEB5BC", VA = "0xCEB5BC")]
	[IteratorStateMachine(typeof(<StartCo>d__47))]
	private IEnumerator StartCo()
	{
		return null;
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0xCEB658", Offset = "0xCEB658", VA = "0xCEB658", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0xCEBDD0", Offset = "0xCEBDD0", VA = "0xCEBDD0")]
	private string GetSetID(MonthlyChallenge.Time time)
	{
		return null;
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0xCEBAD0", Offset = "0xCEBAD0", VA = "0xCEBAD0")]
	[IteratorStateMachine(typeof(<LoadWipSetCo>d__51))]
	private IEnumerator LoadWipSetCo()
	{
		return null;
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0xCEBB44", Offset = "0xCEBB44", VA = "0xCEBB44")]
	private MonthlyChallenge findChallengeByTime(MonthlyChallenge.Time challengeTime)
	{
		return null;
	}

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0xCEBEC4", Offset = "0xCEBEC4", VA = "0xCEBEC4")]
	private MonthlyChallenge findChallengeBySetId(string setId)
	{
		return null;
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0xCEC048", Offset = "0xCEC048", VA = "0xCEC048")]
	private string getChallengeAssetKey(MonthlyChallenge.Time challengeTime)
	{
		return null;
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0xCEC0F8", Offset = "0xCEC0F8", VA = "0xCEC0F8")]
	private void InitMusicChallenge(MonthlyChallenge challenge)
	{
	}

	[Token(Token = "0x6001C1F")]
	[Address(RVA = "0xCEBD5C", Offset = "0xCEBD5C", VA = "0xCEBD5C")]
	[IteratorStateMachine(typeof(<updateContent>d__56))]
	private IEnumerator updateContent()
	{
		return null;
	}

	[Token(Token = "0x6001C20")]
	[Address(RVA = "0xCEC1C0", Offset = "0xCEC1C0", VA = "0xCEC1C0")]
	private void updateIndex(Action onDone, Action<string> onError)
	{
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0xCEC2D8", Offset = "0xCEC2D8", VA = "0xCEC2D8")]
	[IteratorStateMachine(typeof(<downloadSet>d__58))]
	private IEnumerator downloadSet(MonthlyChallenge challenge)
	{
		return null;
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0xCEC390", Offset = "0xCEC390", VA = "0xCEC390")]
	private WaveSet FindOfflineWaveSetCrate(string assetKey)
	{
		return null;
	}

	[Token(Token = "0x6001C23")]
	[Address(RVA = "0xCEC3E0", Offset = "0xCEC3E0", VA = "0xCEC3E0")]
	[IteratorStateMachine(typeof(<downloadPastChallenges>d__60))]
	private IEnumerator downloadPastChallenges()
	{
		return null;
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0xCEAFCC", Offset = "0xCEAFCC", VA = "0xCEAFCC")]
	private void onCurrentChallengeFinished()
	{
	}

	[Token(Token = "0x6001C25")]
	[Address(RVA = "0xCEC47C", Offset = "0xCEC47C", VA = "0xCEC47C")]
	[IteratorStateMachine(typeof(<concludeFinishedChallenges>d__62))]
	private IEnumerator concludeFinishedChallenges()
	{
		return null;
	}

	[Token(Token = "0x6001C26")]
	[Address(RVA = "0xCEC518", Offset = "0xCEC518", VA = "0xCEC518")]
	private bool setIsBeingPlayed(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C27")]
	[Address(RVA = "0xCEC648", Offset = "0xCEC648", VA = "0xCEC648")]
	private bool currentChallengeIsBeingPlayed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C28")]
	[Address(RVA = "0xCEC660", Offset = "0xCEC660", VA = "0xCEC660")]
	private static MedalType determineMedal(int rank, int numStarsEarned)
	{
		return default(MedalType);
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0xCEC944", Offset = "0xCEC944", VA = "0xCEC944")]
	public MedalType rewardConcludedChallenges()
	{
		return default(MedalType);
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0xCECC34", Offset = "0xCECC34", VA = "0xCECC34")]
	public void onPlayerSawMonthlyChallenge()
	{
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0xCECD58", Offset = "0xCECD58", VA = "0xCECD58")]
	public bool isNew()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0xCECE8C", Offset = "0xCECE8C", VA = "0xCECE8C")]
	public bool isMonthlyChallenge(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0xCED0A8", Offset = "0xCED0A8", VA = "0xCED0A8")]
	public void DevOnly_RewrapCrate(DownloadedCrate crate)
	{
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0xCEDF7C", Offset = "0xCEDF7C", VA = "0xCEDF7C")]
	public MonthlyChallenges()
	{
	}
}
[Token(Token = "0x20004CA")]
public class WaveSet : MonoBehaviour
{
	[Token(Token = "0x4001D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4001D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite image;

	[Token(Token = "0x4001D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[ReorderableList]
	private Wave[] _set;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Active sets require full setup (solo.json) or else will spout warnings")]
	public bool isActive;

	[Token(Token = "0x4001D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isTutorial;

	[Token(Token = "0x4001D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int _currentWave;

	[Token(Token = "0x4001D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _completedWave;

	[Token(Token = "0x170004CB")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xCF10E0", Offset = "0xCF10E0", VA = "0xCF10E0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004CC")]
	public Wave[] Waves
	{
		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xCF10E8", Offset = "0xCF10E8", VA = "0xCF10E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xCF10F0", Offset = "0xCF10F0", VA = "0xCF10F0")]
		set
		{
		}
	}

	[Token(Token = "0x170004CD")]
	public int currentWave
	{
		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xCF1144", Offset = "0xCF1144", VA = "0xCF1144")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004CE")]
	public int completeWave
	{
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xCF114C", Offset = "0xCF114C", VA = "0xCF114C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0xCF10F8", Offset = "0xCF10F8", VA = "0xCF10F8")]
	public int GetNumWavesInSet()
	{
		return default(int);
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0xCF1114", Offset = "0xCF1114", VA = "0xCF1114", Slot = "5")]
	public virtual Wave GetWave(int num)
	{
		return null;
	}

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0xCF1154", Offset = "0xCF1154", VA = "0xCF1154")]
	public int GetWavesLeft()
	{
		return default(int);
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0xCF1178", Offset = "0xCF1178", VA = "0xCF1178")]
	public int GetProgressPercent()
	{
		return default(int);
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0xCF128C", Offset = "0xCF128C", VA = "0xCF128C", Slot = "6")]
	public virtual void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0xCF1294", Offset = "0xCF1294", VA = "0xCF1294")]
	public void WaveComplete()
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0xCF12A4", Offset = "0xCF12A4", VA = "0xCF12A4")]
	public void SkipToWaveIndex(int index)
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0xCF12AC", Offset = "0xCF12AC", VA = "0xCF12AC")]
	public void SkipToEnd()
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0xCF12CC", Offset = "0xCF12CC", VA = "0xCF12CC")]
	public Wave GetNextWave()
	{
		return null;
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0xCF1318", Offset = "0xCF1318", VA = "0xCF1318")]
	public bool IsSetOver()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0xCF1340", Offset = "0xCF1340", VA = "0xCF1340")]
	private void Savecsv()
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0xCF174C", Offset = "0xCF174C", VA = "0xCF174C", Slot = "7")]
	[NaughtyAttributes.Button("Calculate stats", EButtonEnableMode.Always)]
	public virtual void calculateStats()
	{
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0xCF1750", Offset = "0xCF1750", VA = "0xCF1750")]
	public WaveSet()
	{
	}
}
[Token(Token = "0x20004CB")]
public class WaveSetFromCrate : WaveSet
{
	[Token(Token = "0x4001D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Rename the .crate file to .bytes to be able to plug it in")]
	public TextAsset crateFile;

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0xCF1760", Offset = "0xCF1760", VA = "0xCF1760")]
	private void LoadSetFromCrate()
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0xCF19A4", Offset = "0xCF19A4", VA = "0xCF19A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0xCF19A8", Offset = "0xCF19A8", VA = "0xCF19A8")]
	public WaveSetFromCrate()
	{
	}
}
[Token(Token = "0x20004CD")]
public class WaveSetGenerated : WaveSet
{
	[Token(Token = "0x4001D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Generate Set")]
	public int generateCount;

	[Token(Token = "0x4001D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int generateStartAt;

	[Token(Token = "0x4001D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int generateStep;

	[Token(Token = "0x4001D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int generateSeed;

	[Token(Token = "0x4001D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ReorderableList]
	[SerializeField]
	private string[] wavePaths;

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0xCF1AEC", Offset = "0xCF1AEC", VA = "0xCF1AEC")]
	private void GenerateSetFromSeed()
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0xCF1C44", Offset = "0xCF1C44", VA = "0xCF1C44")]
	private void LoadGeneratedSetFromPaths()
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0xCF1EC4", Offset = "0xCF1EC4", VA = "0xCF1EC4")]
	private void GenerateSet()
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0xCF1EE4", Offset = "0xCF1EE4", VA = "0xCF1EE4")]
	[NaughtyAttributes.Button("Clear Wave Paths", EButtonEnableMode.Always)]
	public void ClearWavePaths()
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0xCF1EE8", Offset = "0xCF1EE8", VA = "0xCF1EE8", Slot = "6")]
	public override void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0xCF1EF0", Offset = "0xCF1EF0", VA = "0xCF1EF0", Slot = "7")]
	public override void calculateStats()
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0xCF1F58", Offset = "0xCF1F58", VA = "0xCF1F58")]
	public WaveSetGenerated()
	{
	}
}
[Token(Token = "0x20004CE")]
public class WaveSetProxy : WaveSet
{
	[Token(Token = "0x4001D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaveSet proxySet;

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0xCF1F7C", Offset = "0xCF1F7C", VA = "0xCF1F7C")]
	protected void CopyFromProxy()
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0xCF206C", Offset = "0xCF206C", VA = "0xCF206C", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0xCF2070", Offset = "0xCF2070", VA = "0xCF2070")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0xCF2190", Offset = "0xCF2190", VA = "0xCF2190")]
	public WaveSetProxy()
	{
	}
}
[Token(Token = "0x20004CF")]
public class WaveSetRandomized : WaveSet
{
	[Token(Token = "0x4001D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaveSet[] refereceSets;

	[Token(Token = "0x4001D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] _setIndexPerWave;

	[Token(Token = "0x4001D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Wave _clientLastWave;

	[Token(Token = "0x170004CF")]
	public override string DisplayName
	{
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xCF22A4", Offset = "0xCF22A4", VA = "0xCF22A4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0xCF2198", Offset = "0xCF2198", VA = "0xCF2198")]
	private int FindWaveIndex(Wave wave, ref int setIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0xCF24E8", Offset = "0xCF24E8", VA = "0xCF24E8", Slot = "5")]
	public override Wave GetWave(int num)
	{
		return null;
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0xCF267C", Offset = "0xCF267C", VA = "0xCF267C", Slot = "6")]
	public override void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0xCF2698", Offset = "0xCF2698", VA = "0xCF2698")]
	private void SelectWavesFromRefSets()
	{
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0xCF29C8", Offset = "0xCF29C8", VA = "0xCF29C8", Slot = "7")]
	public override void calculateStats()
	{
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0xCF2A30", Offset = "0xCF2A30", VA = "0xCF2A30")]
	public WaveSetRandomized()
	{
	}
}
[Token(Token = "0x20004D0")]
public static class Permissions
{
	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0xCF2A38", Offset = "0xCF2A38", VA = "0xCF2A38")]
	public static bool canRecordAudio()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0xCF2A7C", Offset = "0xCF2A7C", VA = "0xCF2A7C")]
	public static void requestRecordAudio(Action<bool> callback)
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0xCF2AC8", Offset = "0xCF2AC8", VA = "0xCF2AC8")]
	public static bool canReadExternalStorage()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004D1")]
public class ComboCounter : MonoBehaviour
{
	[Token(Token = "0x4001D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _brickHitSinceLastRacket;

	[Token(Token = "0x4001D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numSuccessiveNonEmptyHits;

	[Token(Token = "0x4001D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeRacketTouchedLast;

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0xCF2B0C", Offset = "0xCF2B0C", VA = "0xCF2B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0xCF2B84", Offset = "0xCF2B84", VA = "0xCF2B84")]
	private void NonEmptyBrickHit()
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0xCF2B10", Offset = "0xCF2B10", VA = "0xCF2B10")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001C94")]
	[Address(RVA = "0xCF2C38", Offset = "0xCF2C38", VA = "0xCF2C38")]
	public void PlayerMissedHit()
	{
	}

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0xCF2CA8", Offset = "0xCF2CA8", VA = "0xCF2CA8")]
	public void KeepStreakGoing_WithoutPreviousBrickHit()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0xCF2CAC", Offset = "0xCF2CAC", VA = "0xCF2CAC")]
	public void BallHitTarget()
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0xCF2CB0", Offset = "0xCF2CB0", VA = "0xCF2CB0")]
	public void BallHitRacket()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0xCF2CDC", Offset = "0xCF2CDC", VA = "0xCF2CDC")]
	public void ShotOver()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0xCF2CE0", Offset = "0xCF2CE0", VA = "0xCF2CE0")]
	public void GravitySlingActivated()
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0xCF2CE4", Offset = "0xCF2CE4", VA = "0xCF2CE4")]
	public void BallHitBonus()
	{
	}

	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0xCF2CE8", Offset = "0xCF2CE8", VA = "0xCF2CE8")]
	public void BallHitPowerup()
	{
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0xCF2CEC", Offset = "0xCF2CEC", VA = "0xCF2CEC")]
	public void BallHitBogus()
	{
	}

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0xCF2D5C", Offset = "0xCF2D5C", VA = "0xCF2D5C")]
	public void BallHitEmpty()
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0xCF2DCC", Offset = "0xCF2DCC", VA = "0xCF2DCC")]
	public ComboCounter()
	{
	}
}
[Token(Token = "0x20004D2")]
public class Shield
{
	[Token(Token = "0x20004D3")]
	private struct TileData
	{
		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float dist;

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xCF4594", Offset = "0xCF4594", VA = "0xCF4594")]
		public TileData(HexTile tile, Vector3 origin)
		{
		}
	}

	[Token(Token = "0x20004D4")]
	[CompilerGenerated]
	private sealed class <RebuildCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shield <>4__this;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__2;

		[Token(Token = "0x170004D2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xCF499C", Offset = "0xCF499C", VA = "0xCF499C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xCF49E4", Offset = "0xCF49E4", VA = "0xCF49E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xCF3D68", Offset = "0xCF3D68", VA = "0xCF3D68")]
		[DebuggerHidden]
		public <RebuildCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xCF4660", Offset = "0xCF4660", VA = "0xCF4660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xCF4664", Offset = "0xCF4664", VA = "0xCF4664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xCF49A4", Offset = "0xCF49A4", VA = "0xCF49A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D5")]
	[CompilerGenerated]
	private sealed class <BreakCo>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shield <>4__this;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <maxDist>5__2;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__3;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <particleDuration>5__4;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__5;

		[Token(Token = "0x170004D4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xCF5018", Offset = "0xCF5018", VA = "0xCF5018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xCF5060", Offset = "0xCF5060", VA = "0xCF5060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xCF3F28", Offset = "0xCF3F28", VA = "0xCF3F28")]
		[DebuggerHidden]
		public <BreakCo>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xCF4A40", Offset = "0xCF4A40", VA = "0xCF4A40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xCF4A44", Offset = "0xCF4A44", VA = "0xCF4A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xCF5020", Offset = "0xCF5020", VA = "0xCF5020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D6")]
	[CompilerGenerated]
	private sealed class <OnBallDisconnectedCo>d__38 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerID playerID;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shield <>4__this;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShotInfo <lastOpponentShot>5__2;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint <shotIndex>5__4;

		[Token(Token = "0x170004D6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xCF54F0", Offset = "0xCF54F0", VA = "0xCF54F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xCF5538", Offset = "0xCF5538", VA = "0xCF5538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xCF414C", Offset = "0xCF414C", VA = "0xCF414C")]
		[DebuggerHidden]
		public <OnBallDisconnectedCo>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xCF50BC", Offset = "0xCF50BC", VA = "0xCF50BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xCF50C0", Offset = "0xCF50C0", VA = "0xCF50C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xCF54F8", Offset = "0xCF54F8", VA = "0xCF54F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D9C")]
	private const float MIN_TIME_BROKEN = 0.5f;

	[Token(Token = "0x4001D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static uint counter;

	[Token(Token = "0x4001D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isBroken;

	[Token(Token = "0x4001D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _timeWhenBroken;

	[Token(Token = "0x4001DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Target _target;

	[Token(Token = "0x4001DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _material;

	[Token(Token = "0x4001DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint _ignoreShotIndex;

	[Token(Token = "0x4001DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _RevealID;

	[Token(Token = "0x4001DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _HitTimeID;

	[Token(Token = "0x4001DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _HitPosID;

	[Token(Token = "0x4001DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CoroutineHandle? _rebuildHandle;

	[Token(Token = "0x4001DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle? _breakHandle;

	[Token(Token = "0x4001DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static GameObject _particlesPrefab;

	[Token(Token = "0x4001DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<TileData> _tilesData;

	[Token(Token = "0x4001DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CoroutineHandle? _onBallDisCo;

	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hadDamageThisTurn;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _contactPoint;

	[Token(Token = "0x170004D0")]
	public bool IsBroken
	{
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xCF2DD4", Offset = "0xCF2DD4", VA = "0xCF2DD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xCF2DDC", Offset = "0xCF2DDC", VA = "0xCF2DDC")]
		private set
		{
		}
	}

	[Token(Token = "0x170004D1")]
	public bool targetReceivedAllDamageInOneShieldBreak
	{
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xCF3290", Offset = "0xCF3290", VA = "0xCF3290")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xCF3298", Offset = "0xCF3298", VA = "0xCF3298")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000040")]
	public static event Action<Target> OnBroken
	{
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xCF30A8", Offset = "0xCF30A8", VA = "0xCF30A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xCF319C", Offset = "0xCF319C", VA = "0xCF319C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0xCF32A4", Offset = "0xCF32A4", VA = "0xCF32A4")]
	public static void MaybeAddShield(Target target)
	{
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0xCF3604", Offset = "0xCF3604", VA = "0xCF3604")]
	public Shield(Target target)
	{
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0xCF38F0", Offset = "0xCF38F0", VA = "0xCF38F0")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0xCF3B30", Offset = "0xCF3B30", VA = "0xCF3B30")]
	public bool IsShotIgnored(ShotInfo shot)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0xCF3B54", Offset = "0xCF3B54", VA = "0xCF3B54")]
	public void RemoveFromBrick(Brick brick)
	{
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0xCF3B94", Offset = "0xCF3B94", VA = "0xCF3B94")]
	public void AddToBrick(Brick brick)
	{
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0xCF2F74", Offset = "0xCF2F74", VA = "0xCF2F74")]
	private void Rebuild()
	{
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0xCF3C08", Offset = "0xCF3C08", VA = "0xCF3C08")]
	[IteratorStateMachine(typeof(<RebuildCo>d__28))]
	private IEnumerator<float> RebuildCo(float duration)
	{
		return null;
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0xCF2E00", Offset = "0xCF2E00", VA = "0xCF2E00")]
	private void Break()
	{
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0xCF3D90", Offset = "0xCF3D90", VA = "0xCF3D90")]
	[IteratorStateMachine(typeof(<BreakCo>d__34))]
	private IEnumerator<float> BreakCo()
	{
		return null;
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0xCF3F50", Offset = "0xCF3F50", VA = "0xCF3F50")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0xCF3F7C", Offset = "0xCF3F7C", VA = "0xCF3F7C")]
	private void OnBallChangedOwnership(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0xCF40C8", Offset = "0xCF40C8", VA = "0xCF40C8")]
	[IteratorStateMachine(typeof(<OnBallDisconnectedCo>d__38))]
	private IEnumerator<float> OnBallDisconnectedCo(PlayerID playerID)
	{
		return null;
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0xCF4174", Offset = "0xCF4174", VA = "0xCF4174")]
	public void OnRemoteBreak(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0xCF41BC", Offset = "0xCF41BC", VA = "0xCF41BC")]
	public void OnRemoteRebuild()
	{
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0xCF41D0", Offset = "0xCF41D0", VA = "0xCF41D0")]
	private void ReportBreak(ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0xCF4240", Offset = "0xCF4240", VA = "0xCF4240")]
	private void ReportRebuild()
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0xCF42C4", Offset = "0xCF42C4", VA = "0xCF42C4")]
	public void OnShotMadeContact(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, out bool damageAbsorbed)
	{
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0xCF3C8C", Offset = "0xCF3C8C", VA = "0xCF3C8C")]
	private void PlayRebuildSound()
	{
	}

	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0xCF3E04", Offset = "0xCF3E04", VA = "0xCF3E04")]
	public void PlayBrokenSound(Vector3 pos)
	{
	}
}
[Token(Token = "0x20004D7")]
public class TargetManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004D8")]
	public class SoloStageToArcadeWaves
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject stageRoot;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startDifficulty;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endDifficulty;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int setDifficultyRange;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int waveDifficultyRange;

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xCFC538", Offset = "0xCFC538", VA = "0xCFC538")]
		public SoloStageToArcadeWaves()
		{
		}
	}

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TargetManager inst;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timeBeforeNewTarget;

	[Token(Token = "0x4001DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _timeBetweenTargets;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxTimeToInitEntireWave;

	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _targetAnimationDurationPerHit;

	[Token(Token = "0x4001DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Wave[] _allWaves;

	[Token(Token = "0x4001DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Wave> _arcadeWaves;

	[Token(Token = "0x4001DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Wave> _zenWaves;

	[Token(Token = "0x4001DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Wave _prevWave;

	[Token(Token = "0x4001DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Wave _currentWave;

	[Token(Token = "0x4001DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timeWithoutTarget;

	[Token(Token = "0x4001DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _currentWaveNumber;

	[Token(Token = "0x4001DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Wave> _relevantWaves;

	[Token(Token = "0x4001DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<HexTile> _tempHexList;

	[Token(Token = "0x4001DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform arcadeRoot;

	[Token(Token = "0x4001DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform zenRoot;

	[Token(Token = "0x4001DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject soloSetsRoot;

	[Token(Token = "0x4001DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject multiplayerSetsRoot;

	[Token(Token = "0x4001DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject multiplayerSetsRootMR;

	[Token(Token = "0x4001DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Header("Special sets")]
	private WaveSet feb21ChallengeSet;

	[Token(Token = "0x4001DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private WaveSet may21ChallengeSet;

	[Token(Token = "0x4001DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private WaveSet oct21ChallengeSet;

	[Token(Token = "0x4001DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Populate Arcade With Solo")]
	public SoloStageToArcadeWaves[] soloArcadeDefinitions;

	[Token(Token = "0x4001DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Level Editor Stuff")]
	public LevelBrick levelBrickPrefab;

	[Token(Token = "0x4001DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public WaveSet[] _soloSets;

	[Token(Token = "0x4001DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public WaveSet[] _multiplayerSets;

	[Token(Token = "0x4001DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaveSet _currentSet;

	[Token(Token = "0x4001DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _coOpReady;

	[Token(Token = "0x4001DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform _editorContainer;

	[Token(Token = "0x4001DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<BrickGlow> _glowinBricks;

	[Token(Token = "0x4001DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _lastFrameSkipped;

	[Token(Token = "0x4001DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _waveTimeout;

	[Token(Token = "0x4001DE4")]
	private const int MONTHLY_CHALLENGE_WAVE_MIN_INDEX = 10000;

	[Token(Token = "0x4001DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<Wave, int> _monthlyChallengeIndexes;

	[Token(Token = "0x170004D8")]
	public Wave currentWave
	{
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xCF5594", Offset = "0xCF5594", VA = "0xCF5594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004D9")]
	public bool IsLastWave
	{
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xCF559C", Offset = "0xCF559C", VA = "0xCF559C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004DA")]
	public int CurrentWaveNumber
	{
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xCF5680", Offset = "0xCF5680", VA = "0xCF5680")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004DB")]
	public int CurrentWaveDifficulty
	{
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xCF35DC", Offset = "0xCF35DC", VA = "0xCF35DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004DC")]
	public static bool isCurrentSetTutorial
	{
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xCF647C", Offset = "0xCF647C", VA = "0xCF647C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004DD")]
	public WaveSet currentSet
	{
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xCF6564", Offset = "0xCF6564", VA = "0xCF6564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004DE")]
	public bool coOpReady
	{
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xCF656C", Offset = "0xCF656C", VA = "0xCF656C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004DF")]
	public Transform editorContainer
	{
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xCF6574", Offset = "0xCF6574", VA = "0xCF6574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0xCF5688", Offset = "0xCF5688", VA = "0xCF5688")]
	public int GetWaveDifficulty(int waveNum)
	{
		return default(int);
	}

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0xCF56B0", Offset = "0xCF56B0", VA = "0xCF56B0")]
	public WaveSet GetMusicChallengeSet(MonthlyChallenge.Time time)
	{
		return null;
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0xCF57E4", Offset = "0xCF57E4", VA = "0xCF57E4")]
	public Wave[] GenerateWaveSet(int count, int startAt, int step, int seed)
	{
		return null;
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0xCF6630", Offset = "0xCF6630", VA = "0xCF6630")]
	private void extendWaveRange(Wave wave)
	{
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0xCF666C", Offset = "0xCF666C", VA = "0xCF666C")]
	private void testArcadeWaves()
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0xCF6A48", Offset = "0xCF6A48", VA = "0xCF6A48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0xCF6E38", Offset = "0xCF6E38", VA = "0xCF6E38")]
	private void PopulateSoloSetsInArcade()
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0xCF7ACC", Offset = "0xCF7ACC", VA = "0xCF7ACC")]
	private void verifyWaveIdsUniqueness()
	{
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0xCF85C8", Offset = "0xCF85C8", VA = "0xCF85C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0xCF8334", Offset = "0xCF8334", VA = "0xCF8334")]
	public WaveSet findSoloSet(string setId)
	{
		return null;
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0xCF86F8", Offset = "0xCF86F8", VA = "0xCF86F8")]
	public uint getTargetUniqueID(HexTile tile)
	{
		return default(uint);
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0xCF8728", Offset = "0xCF8728", VA = "0xCF8728")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0xCF874C", Offset = "0xCF874C", VA = "0xCF874C")]
	public void AssignSet(WaveSet set)
	{
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0xCF877C", Offset = "0xCF877C", VA = "0xCF877C")]
	private void ChooseSetWave()
	{
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0xCF8E4C", Offset = "0xCF8E4C", VA = "0xCF8E4C")]
	private string GetFullName(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0xCF8F2C", Offset = "0xCF8F2C", VA = "0xCF8F2C")]
	public Wave FindArcadeWaveByFullPath(string name)
	{
		return null;
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0xCF59A4", Offset = "0xCF59A4", VA = "0xCF59A4")]
	private Wave ChooseRandomArcadeWave(int curDifficulty)
	{
		return null;
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0xCF90CC", Offset = "0xCF90CC", VA = "0xCF90CC")]
	private void ChooseRandomArcadeWave()
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0xCF91B4", Offset = "0xCF91B4", VA = "0xCF91B4")]
	public void loadAllRelevantArenaWaves()
	{
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0xCF890C", Offset = "0xCF890C", VA = "0xCF890C")]
	public void StartNewWave(Wave wave, int waveShift = -1, [Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically, bool noDelay = false)
	{
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0xCF941C", Offset = "0xCF941C", VA = "0xCF941C")]
	public void StartVersusMPSet(float ballEntryPathSpeed, int setOverride = -1)
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0xCF9860", Offset = "0xCF9860", VA = "0xCF9860")]
	public void StartCoOp(float ballEntryPathSpeed)
	{
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0xCF96AC", Offset = "0xCF96AC", VA = "0xCF96AC")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0xCF9DB4", Offset = "0xCF9DB4", VA = "0xCF9DB4")]
	private int compareBrickGlowsByTime(BrickGlow A, BrickGlow B)
	{
		return default(int);
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0xCF9DE8", Offset = "0xCF9DE8", VA = "0xCF9DE8")]
	private void endAllActiveGlowsImmediately()
	{
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0xCF8C60", Offset = "0xCF8C60", VA = "0xCF8C60")]
	private int getWaveIndex(Wave wave)
	{
		return default(int);
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0xCFA264", Offset = "0xCFA264", VA = "0xCFA264")]
	private void HandleIncomingMultiplayerMessages()
	{
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0xCF9BF8", Offset = "0xCF9BF8", VA = "0xCF9BF8")]
	public void ResetWaveProgress()
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0xCFB064", Offset = "0xCFB064", VA = "0xCFB064")]
	public void JumpToWaveInCurrentSet(int index)
	{
	}

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0xCFB1D0", Offset = "0xCFB1D0", VA = "0xCFB1D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0xCFBE6C", Offset = "0xCFBE6C", VA = "0xCFBE6C")]
	private void OnBallReturnedToPlayer(Player _)
	{
	}

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0xCFA9EC", Offset = "0xCFA9EC", VA = "0xCFA9EC")]
	public void CompleteCurrentWave()
	{
	}

	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0xCFC064", Offset = "0xCFC064", VA = "0xCFC064")]
	private int GetMonthlyChallengeWaveHash(MonthlyChallenge challenge, WaveSet set, int waveIndexInSet)
	{
		return default(int);
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0xCFC098", Offset = "0xCFC098", VA = "0xCFC098")]
	private void onPastMonthlyChallengeReadyToPlay(MonthlyChallenge challenge)
	{
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0xCFC3E4", Offset = "0xCFC3E4", VA = "0xCFC3E4")]
	public TargetManager()
	{
	}
}
[Token(Token = "0x20004D9")]
public class Target : IEquatable<Target>, IComparable<Target>
{
	[Token(Token = "0x20004DA")]
	public struct LastDamageInfo
	{
		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SyncHexHits.HexHitInfo hitInfo;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 ballVelocity;
	}

	[Token(Token = "0x20004DB")]
	public struct TileData : IEquatable<TileData>, IComparable<TileData>
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HexTile tile;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xD00A0C", Offset = "0xD00A0C", VA = "0xD00A0C", Slot = "5")]
		public int CompareTo(TileData other)
		{
			return default(int);
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xD00A24", Offset = "0xD00A24", VA = "0xD00A24", Slot = "4")]
		public bool Equals(TileData other)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Type[] ORDER_OF_TARGETS;

	[Token(Token = "0x4001DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int _sortPriority;

	[Token(Token = "0x4001DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected uint _uniqueID;

	[Token(Token = "0x4001DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxDamage;

	[Token(Token = "0x4001DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int futureDamage;

	[Token(Token = "0x4001DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxUVDepthIndex;

	[Token(Token = "0x4001DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool handCraftedShield;

	[Token(Token = "0x4001DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int _currentDamage;

	[Token(Token = "0x4001DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<Target> _updatingTargets;

	[Token(Token = "0x4001DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool _isUpdating;

	[Token(Token = "0x4001DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _reportedOwnDeath;

	[Token(Token = "0x4001DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<HexTile> tiles;

	[Token(Token = "0x4001DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Target> _allTargets;

	[Token(Token = "0x4001DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Target empty;

	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool instant;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isAlive;

	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public readonly bool isAnyTarget;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public readonly bool isMainTarget;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public readonly bool isStaticTarget;

	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public readonly bool isHealingTarget;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public readonly bool isGroupable;

	[Token(Token = "0x4001E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public readonly bool isSnake;

	[Token(Token = "0x4001E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public readonly bool isBonus;

	[Token(Token = "0x4001E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly bool isDowner;

	[Token(Token = "0x4001E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public readonly bool isMinorTarget;

	[Token(Token = "0x4001E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public readonly bool isPortal;

	[Token(Token = "0x4001E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public readonly bool isAnyPowerup;

	[Token(Token = "0x4001E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public readonly bool isEmpty;

	[Token(Token = "0x4001E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public readonly bool isUndamagable;

	[Token(Token = "0x4001E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public readonly bool isScorable;

	[Token(Token = "0x4001E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public readonly bool isRippleable;

	[Token(Token = "0x4001E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly bool isWreckingBallRippleable;

	[Token(Token = "0x4001E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public readonly bool isNegative;

	[Token(Token = "0x4001E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public readonly bool isBoosterSwitch;

	[Token(Token = "0x4001E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public readonly bool isSlider;

	[Token(Token = "0x4001E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static readonly int _MaxHitsID;

	[Token(Token = "0x4001E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly int _HitsSustainedID;

	[Token(Token = "0x4001E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected static readonly int _StepSlopeID;

	[Token(Token = "0x4001E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly int _PanicRateID;

	[Token(Token = "0x4001E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected static readonly int _AudioTexID;

	[Token(Token = "0x4001E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static readonly int _AudioTexVID;

	[Token(Token = "0x4001E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly int _FadeInID;

	[Token(Token = "0x4001E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected static readonly int _PowerupID;

	[Token(Token = "0x4001E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected static readonly int _ActivatedID;

	[Token(Token = "0x4001E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _isScheduled;

	[Token(Token = "0x4001E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3? _center;

	[Token(Token = "0x4001E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LastDamageInfo _lastDamageInfo;

	[Token(Token = "0x4001E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shield shield;

	[Token(Token = "0x4001E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<TileData> _tilesData;

	[Token(Token = "0x170004E0")]
	public uint uniqueID
	{
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xCFC540", Offset = "0xCFC540", VA = "0xCFC540")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170004E1")]
	public int currentDamage
	{
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xCFC548", Offset = "0xCFC548", VA = "0xCFC548")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xCFC550", Offset = "0xCFC550", VA = "0xCFC550")]
		set
		{
		}
	}

	[Token(Token = "0x170004E2")]
	public bool isUpdating
	{
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xCFC5E8", Offset = "0xCFC5E8", VA = "0xCFC5E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xCFC5F0", Offset = "0xCFC5F0", VA = "0xCFC5F0")]
		set
		{
		}
	}

	[Token(Token = "0x170004E3")]
	public virtual float onLoadDelayTime
	{
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xCFCB68", Offset = "0xCFCB68", VA = "0xCFCB68", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170004E4")]
	public virtual Material surfaceMaterial
	{
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xCFCB70", Offset = "0xCFCB70", VA = "0xCFCB70", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004E5")]
	public int expectedDamage
	{
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xCF3BF8", Offset = "0xCF3BF8", VA = "0xCF3BF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004E6")]
	public bool isGlowing
	{
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xCFCBBC", Offset = "0xCFCBBC", VA = "0xCFCBBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004E7")]
	public bool isAlive
	{
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xCFCBCC", Offset = "0xCFCBCC", VA = "0xCFCBCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xCFC5BC", Offset = "0xCFC5BC", VA = "0xCFC5BC")]
		set
		{
		}
	}

	[Token(Token = "0x170004E8")]
	public bool isDestroyed
	{
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xCFCBD4", Offset = "0xCFCBD4", VA = "0xCFCBD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004E9")]
	public bool isOrWillBeDestroyed
	{
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xCF3BE0", Offset = "0xCF3BE0", VA = "0xCF3BE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004EA")]
	public bool isGoingToBeDestroyed
	{
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xCFCBE4", Offset = "0xCFCBE4", VA = "0xCFCBE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004EB")]
	public bool IsInView
	{
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xCFCEF0", Offset = "0xCFCEF0", VA = "0xCFCEF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004EC")]
	public bool isScheduled
	{
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xCFCF50", Offset = "0xCFCF50", VA = "0xCFCF50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xCFCF58", Offset = "0xCFCF58", VA = "0xCFCF58")]
		set
		{
		}
	}

	[Token(Token = "0x170004ED")]
	public bool IsFrozen
	{
		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xCF535C", Offset = "0xCF535C", VA = "0xCF535C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004EE")]
	public virtual Vector3 center
	{
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xCFD0C8", Offset = "0xCFD0C8", VA = "0xCFD0C8", Slot = "9")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170004EF")]
	public LastDamageInfo lastDamageInfo
	{
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xCFDBDC", Offset = "0xCFDBDC", VA = "0xCFDBDC")]
		get
		{
			return default(LastDamageInfo);
		}
	}

	[Token(Token = "0x14000041")]
	public static event Action<Target> targetHit
	{
		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xCFD4B0", Offset = "0xCFD4B0", VA = "0xCFD4B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xCFD5A4", Offset = "0xCFD5A4", VA = "0xCFD5A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event Action<Target> targetDamaged
	{
		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xCFD714", Offset = "0xCFD714", VA = "0xCFD714")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xCFD808", Offset = "0xCFD808", VA = "0xCFD808")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public static event Action<Target> targetHealed
	{
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xCFD978", Offset = "0xCFD978", VA = "0xCFD978")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xCFDA6C", Offset = "0xCFDA6C", VA = "0xCFDA6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000044")]
	public static event Action<ShotInfo, SyncHexHits.HexHitInfo> onActualDealDamageEvent
	{
		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xCFEE1C", Offset = "0xCFEE1C", VA = "0xCFEE1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xCFEF10", Offset = "0xCFEF10", VA = "0xCFEF10")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0xCFC72C", Offset = "0xCFC72C", VA = "0xCFC72C")]
	public void ReportTargetIsDead()
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0xCFC7A8", Offset = "0xCFC7A8", VA = "0xCFC7A8", Slot = "6")]
	public virtual void OnExpectedDamageReportedFromRemotePlayer(int remoteExpectedDamage, IntVector2 hexCoords)
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0xCFCC0C", Offset = "0xCFCC0C", VA = "0xCFCC0C")]
	public bool IsInViewForPlayer(Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0xCFD698", Offset = "0xCFD698", VA = "0xCFD698")]
	protected void OnTargetHit()
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0xCFD8FC", Offset = "0xCFD8FC", VA = "0xCFD8FC")]
	protected void OnTargetDamaged()
	{
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0xCFDB60", Offset = "0xCFDB60", VA = "0xCFDB60")]
	protected void OnTargetHealed()
	{
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0xCFDBEC", Offset = "0xCFDBEC", VA = "0xCFDBEC", Slot = "10")]
	public virtual bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0xCFDBF4", Offset = "0xCFDBF4", VA = "0xCFDBF4")]
	static Target()
	{
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0xCFE280", Offset = "0xCFE280", VA = "0xCFE280")]
	public Target()
	{
	}

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0xCFE774", Offset = "0xCFE774", VA = "0xCFE774")]
	public static Target getTargetByUniqueID(uint uniqueID)
	{
		return null;
	}

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0xCF99EC", Offset = "0xCF99EC", VA = "0xCF99EC")]
	public static void resetTargetsList()
	{
	}

	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0xCFE990", Offset = "0xCFE990", VA = "0xCFE990")]
	public void destroy()
	{
	}

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0xCFBD90", Offset = "0xCFBD90", VA = "0xCFBD90")]
	public static void updateAllUpdatableTargets()
	{
	}

	[Token(Token = "0x6001D20")]
	[Address(RVA = "0xCFE9FC", Offset = "0xCFE9FC", VA = "0xCFE9FC", Slot = "11")]
	public virtual void init()
	{
	}

	[Token(Token = "0x6001D21")]
	[Address(RVA = "0xCFEA5C", Offset = "0xCFEA5C", VA = "0xCFEA5C", Slot = "12")]
	public virtual void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0xCFEAA0", Offset = "0xCFEAA0", VA = "0xCFEAA0", Slot = "13")]
	public virtual void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D23")]
	[Address(RVA = "0xCFEAE8", Offset = "0xCFEAE8", VA = "0xCFEAE8", Slot = "14")]
	public virtual void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D24")]
	[Address(RVA = "0xCFEC74", Offset = "0xCFEC74", VA = "0xCFEC74", Slot = "15")]
	public virtual void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0xCFED3C", Offset = "0xCFED3C", VA = "0xCFED3C", Slot = "16")]
	public virtual void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D28")]
	[Address(RVA = "0xCFF004", Offset = "0xCFF004", VA = "0xCFF004", Slot = "17")]
	public virtual void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D29")]
	[Address(RVA = "0xCFF104", Offset = "0xCFF104", VA = "0xCFF104", Slot = "18")]
	public virtual void onHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0xCFF108", Offset = "0xCFF108", VA = "0xCFF108", Slot = "19")]
	protected virtual void onDamaged()
	{
	}

	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0xCFF10C", Offset = "0xCFF10C", VA = "0xCFF10C", Slot = "20")]
	protected virtual void onDestroyed()
	{
	}

	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0xCFF264", Offset = "0xCFF264", VA = "0xCFF264", Slot = "21")]
	protected virtual void update()
	{
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0xCFF268", Offset = "0xCFF268", VA = "0xCFF268", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0xCFF2E4", Offset = "0xCFF2E4", VA = "0xCFF2E4", Slot = "4")]
	public bool Equals(Target other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0xCFF2F0", Offset = "0xCFF2F0", VA = "0xCFF2F0", Slot = "5")]
	private int System.IComparable<Target>.CompareTo(Target other)
	{
		return default(int);
	}

	[Token(Token = "0x6001D30")]
	[Address(RVA = "0xCFF310", Offset = "0xCFF310", VA = "0xCFF310", Slot = "22")]
	public virtual void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost)
	{
	}

	[Token(Token = "0x6001D31")]
	[Address(RVA = "0xCFF3EC", Offset = "0xCFF3EC", VA = "0xCFF3EC", Slot = "23")]
	public virtual bool canTakeDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D32")]
	[Address(RVA = "0xCFF41C", Offset = "0xCFF41C", VA = "0xCFF41C")]
	private void logScore(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int score, int bossScore)
	{
	}

	[Token(Token = "0x6001D33")]
	[Address(RVA = "0xCFFCA4", Offset = "0xCFFCA4", VA = "0xCFFCA4")]
	public void onDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D34")]
	[Address(RVA = "0xCFFE38", Offset = "0xCFFE38", VA = "0xCFFE38")]
	public void calculateUVDepthIndex()
	{
	}

	[Token(Token = "0x6001D35")]
	[Address(RVA = "0xD00400", Offset = "0xD00400", VA = "0xD00400")]
	public void GetRadialSortedTiles(HexTile firstTile, ref List<HexTile> sortedList)
	{
	}
}
[Token(Token = "0x20004DC")]
public class TargetBonus : Target
{
	[Token(Token = "0x170004F0")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xD00A90", Offset = "0xD00A90", VA = "0xD00A90", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0xD00AE4", Offset = "0xD00AE4", VA = "0xD00AE4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0xD00B60", Offset = "0xD00B60", VA = "0xD00B60", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0xD00B88", Offset = "0xD00B88", VA = "0xD00B88", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0xD00E00", Offset = "0xD00E00", VA = "0xD00E00", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0xD00FE4", Offset = "0xD00FE4", VA = "0xD00FE4", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0xD010A0", Offset = "0xD010A0", VA = "0xD010A0")]
	public TargetBonus()
	{
	}
}
[Token(Token = "0x20004DD")]
public class TargetBoosterSwitch : Target
{
	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool waitingForBallToDisengage;

	[Token(Token = "0x4001E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x170004F1")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xD010F4", Offset = "0xD010F4", VA = "0xD010F4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0xD01210", Offset = "0xD01210", VA = "0xD01210", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0xD012D4", Offset = "0xD012D4", VA = "0xD012D4")]
	public TargetBoosterSwitch()
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0xD01334", Offset = "0xD01334", VA = "0xD01334", Slot = "21")]
	protected override void update()
	{
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0xD01460", Offset = "0xD01460", VA = "0xD01460", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D44")]
	[Address(RVA = "0xD014DC", Offset = "0xD014DC", VA = "0xD014DC", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D45")]
	[Address(RVA = "0xD01504", Offset = "0xD01504", VA = "0xD01504", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D46")]
	[Address(RVA = "0xD018A4", Offset = "0xD018A4", VA = "0xD018A4", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D47")]
	[Address(RVA = "0xD018A8", Offset = "0xD018A8", VA = "0xD018A8", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}
}
[Token(Token = "0x20004DE")]
public class TargetDowner : Target
{
	[Token(Token = "0x170004F2")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xD01964", Offset = "0xD01964", VA = "0xD01964", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D49")]
	[Address(RVA = "0xD019B8", Offset = "0xD019B8", VA = "0xD019B8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D4A")]
	[Address(RVA = "0xD01A34", Offset = "0xD01A34", VA = "0xD01A34", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D4B")]
	[Address(RVA = "0xD01A38", Offset = "0xD01A38", VA = "0xD01A38", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0xD01A60", Offset = "0xD01A60", VA = "0xD01A60", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0xD01C8C", Offset = "0xD01C8C", VA = "0xD01C8C", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0xD01E88", Offset = "0xD01E88", VA = "0xD01E88", Slot = "12")]
	public override void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0xD01EE0", Offset = "0xD01EE0", VA = "0xD01EE0", Slot = "13")]
	public override void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D50")]
	[Address(RVA = "0xD01F5C", Offset = "0xD01F5C", VA = "0xD01F5C", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x6001D51")]
	[Address(RVA = "0xD01850", Offset = "0xD01850", VA = "0xD01850")]
	public TargetDowner()
	{
	}
}
[Token(Token = "0x20004DF")]
public class TargetMain : Target
{
	[Token(Token = "0x20004E0")]
	[CompilerGenerated]
	private sealed class <animateMaxDamageOnPlacement>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetMain <>4__this;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__3;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <slope1>5__4;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <panicRate>5__5;

		[Token(Token = "0x170004F5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xD035B4", Offset = "0xD035B4", VA = "0xD035B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xD035FC", Offset = "0xD035FC", VA = "0xD035FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xD02E40", Offset = "0xD02E40", VA = "0xD02E40")]
		[DebuggerHidden]
		public <animateMaxDamageOnPlacement>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xD032AC", Offset = "0xD032AC", VA = "0xD032AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xD032B0", Offset = "0xD032B0", VA = "0xD032B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xD035BC", Offset = "0xD035BC", VA = "0xD035BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int groupID;

	[Token(Token = "0x4001E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds _onLoadDelay;

	[Token(Token = "0x4001E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected int _materialIndex;

	[Token(Token = "0x4001E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x4001E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _targetDestroyedSoundPlayed;

	[Token(Token = "0x170004F3")]
	public override float onLoadDelayTime
	{
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xD02030", Offset = "0xD02030", VA = "0xD02030", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170004F4")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xD02084", Offset = "0xD02084", VA = "0xD02084", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D54")]
	[Address(RVA = "0xD02218", Offset = "0xD02218", VA = "0xD02218")]
	public TargetMain(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001D55")]
	[Address(RVA = "0xD02290", Offset = "0xD02290", VA = "0xD02290", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D56")]
	[Address(RVA = "0xD0235C", Offset = "0xD0235C", VA = "0xD0235C", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001D57")]
	[Address(RVA = "0xD02808", Offset = "0xD02808", VA = "0xD02808", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D58")]
	[Address(RVA = "0xD02A18", Offset = "0xD02A18", VA = "0xD02A18", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D59")]
	[Address(RVA = "0xD02A40", Offset = "0xD02A40", VA = "0xD02A40", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0xD02A44", Offset = "0xD02A44", VA = "0xD02A44", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0xD02B3C", Offset = "0xD02B3C", VA = "0xD02B3C", Slot = "19")]
	protected override void onDamaged()
	{
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0xD02BD8", Offset = "0xD02BD8", VA = "0xD02BD8", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0xD02548", Offset = "0xD02548", VA = "0xD02548")]
	public void SetupMusicTexture()
	{
	}

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0xD024D4", Offset = "0xD024D4", VA = "0xD024D4")]
	[IteratorStateMachine(typeof(<animateMaxDamageOnPlacement>d__18))]
	public IEnumerator<float> animateMaxDamageOnPlacement()
	{
		return null;
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0xD02E68", Offset = "0xD02E68", VA = "0xD02E68", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0xD03078", Offset = "0xD03078", VA = "0xD03078", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}
}
[Token(Token = "0x20004E1")]
public class TargetMainHealing : TargetMain
{
	[Token(Token = "0x4001E32")]
	private const float _healTime = 1.5f;

	[Token(Token = "0x4001E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _healTimer;

	[Token(Token = "0x4001E34")]
	private const int _numTicks = 5;

	[Token(Token = "0x4001E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _curTick;

	[Token(Token = "0x170004F7")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xD036D0", Offset = "0xD036D0", VA = "0xD036D0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0xD03658", Offset = "0xD03658", VA = "0xD03658")]
	public TargetMainHealing(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0xD03804", Offset = "0xD03804", VA = "0xD03804", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0xD038E0", Offset = "0xD038E0", VA = "0xD038E0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0xD03AF0", Offset = "0xD03AF0", VA = "0xD03AF0", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0xD03B08", Offset = "0xD03B08", VA = "0xD03B08", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0xD03B20", Offset = "0xD03B20", VA = "0xD03B20", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0xD03BBC", Offset = "0xD03BBC", VA = "0xD03BBC")]
	public void RemoteHealingDamageReported(int newDamageCount)
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0xD03CB4", Offset = "0xD03CB4", VA = "0xD03CB4", Slot = "21")]
	protected override void update()
	{
	}
}
[Token(Token = "0x20004E2")]
public class TargetPortal : Target
{
	[Token(Token = "0x20004E3")]
	[CompilerGenerated]
	private sealed class <animateFadeInOnPlacement>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetPortal <>4__this;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__3;

		[Token(Token = "0x170004FA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xD0505C", Offset = "0xD0505C", VA = "0xD0505C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xD050A4", Offset = "0xD050A4", VA = "0xD050A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xD047B4", Offset = "0xD047B4", VA = "0xD047B4")]
		[DebuggerHidden]
		public <animateFadeInOnPlacement>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xD04EFC", Offset = "0xD04EFC", VA = "0xD04EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xD04F00", Offset = "0xD04F00", VA = "0xD04F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xD05064", Offset = "0xD05064", VA = "0xD05064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E4")]
	[CompilerGenerated]
	private sealed class <PlayAnimationCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetPortal <>4__this;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dir;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170004FC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xD05298", Offset = "0xD05298", VA = "0xD05298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xD052E0", Offset = "0xD052E0", VA = "0xD052E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xD04BFC", Offset = "0xD04BFC", VA = "0xD04BFC")]
		[DebuggerHidden]
		public <PlayAnimationCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xD05100", Offset = "0xD05100", VA = "0xD05100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xD05104", Offset = "0xD05104", VA = "0xD05104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xD052A0", Offset = "0xD052A0", VA = "0xD052A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _staticPortalMaterial;

	[Token(Token = "0x4001E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x4001E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _animationCo;

	[Token(Token = "0x4001E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private CoroutineHandle _activatedCo;

	[Token(Token = "0x170004F8")]
	private static Material StaticPortalMaterial
	{
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xD03F88", Offset = "0xD03F88", VA = "0xD03F88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004F9")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xD04178", Offset = "0xD04178", VA = "0xD04178", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D73")]
	[Address(RVA = "0xD041F8", Offset = "0xD041F8", VA = "0xD041F8", Slot = "12")]
	public override void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0xD0423C", Offset = "0xD0423C", VA = "0xD0423C", Slot = "13")]
	public override void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0xD04280", Offset = "0xD04280", VA = "0xD04280")]
	private void PreMaterialAnimation()
	{
	}

	[Token(Token = "0x6001D76")]
	[Address(RVA = "0xD04518", Offset = "0xD04518", VA = "0xD04518")]
	private void PostMaterialAnimation()
	{
	}

	[Token(Token = "0x6001D77")]
	[Address(RVA = "0xD04740", Offset = "0xD04740", VA = "0xD04740")]
	[IteratorStateMachine(typeof(<animateFadeInOnPlacement>d__10))]
	public IEnumerator<float> animateFadeInOnPlacement()
	{
		return null;
	}

	[Token(Token = "0x6001D78")]
	[Address(RVA = "0xD047DC", Offset = "0xD047DC", VA = "0xD047DC")]
	public TargetPortal getExitPortal()
	{
		return null;
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0xD04AFC", Offset = "0xD04AFC", VA = "0xD04AFC", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0xD04B74", Offset = "0xD04B74", VA = "0xD04B74")]
	[IteratorStateMachine(typeof(<PlayAnimationCo>d__15))]
	private IEnumerator<float> PlayAnimationCo(float duration, float dir)
	{
		return null;
	}

	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0xD04C24", Offset = "0xD04C24", VA = "0xD04C24")]
	public void PlayAnimation(float duration, float dir)
	{
	}

	[Token(Token = "0x6001D7C")]
	[Address(RVA = "0xD04CC4", Offset = "0xD04CC4", VA = "0xD04CC4", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001D7D")]
	[Address(RVA = "0xD04E04", Offset = "0xD04E04", VA = "0xD04E04", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0xD04E80", Offset = "0xD04E80", VA = "0xD04E80", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0xD04EA8", Offset = "0xD04EA8", VA = "0xD04EA8")]
	public TargetPortal()
	{
	}
}
[Token(Token = "0x20004E5")]
public class TargetSlider : Target
{
	[Token(Token = "0x20004E6")]
	[CompilerGenerated]
	private sealed class <cooldownCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetSlider <>4__this;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brick brick;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <brightnessID>5__2;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer <r>5__3;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock <mpb>5__4;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__5;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <duratiom>5__6;

		[Token(Token = "0x170004FF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xD05DF4", Offset = "0xD05DF4", VA = "0xD05DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000500")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xD05E3C", Offset = "0xD05E3C", VA = "0xD05E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xD05764", Offset = "0xD05764", VA = "0xD05764")]
		[DebuggerHidden]
		public <cooldownCo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xD057F8", Offset = "0xD057F8", VA = "0xD057F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xD057FC", Offset = "0xD057FC", VA = "0xD057FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xD05DFC", Offset = "0xD05DFC", VA = "0xD05DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TargetSlider slider;

	[Token(Token = "0x4001E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _coolingDown;

	[Token(Token = "0x4001E47")]
	private const float COOLDOWN_TIME = 0.3f;

	[Token(Token = "0x4001E48")]
	private const float FADE_DURATION = 0.3f;

	[Token(Token = "0x4001E49")]
	private const float GLOW_DURATION = 0.8f;

	[Token(Token = "0x4001E4A")]
	private const float GLOW_BRIGHTNESS = 10f;

	[Token(Token = "0x4001E4B")]
	private const int MAX_SLIDES_PER_SHOT = 5;

	[Token(Token = "0x4001E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _lastShotDamage;

	[Token(Token = "0x4001E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _cooldownCo;

	[Token(Token = "0x170004FE")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xD0533C", Offset = "0xD0533C", VA = "0xD0533C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0xD05390", Offset = "0xD05390", VA = "0xD05390")]
	public TargetSlider()
	{
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0xD053F4", Offset = "0xD053F4", VA = "0xD053F4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0xD05470", Offset = "0xD05470", VA = "0xD05470", Slot = "18")]
	public override void onHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0xD0555C", Offset = "0xD0555C", VA = "0xD0555C")]
	public void StartCooldown([Optional] Brick brick)
	{
	}

	[Token(Token = "0x6001D91")]
	[Address(RVA = "0xD05688", Offset = "0xD05688", VA = "0xD05688", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001D92")]
	[Address(RVA = "0xD056F4", Offset = "0xD056F4", VA = "0xD056F4")]
	private void reset()
	{
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0xD055F8", Offset = "0xD055F8", VA = "0xD055F8")]
	[IteratorStateMachine(typeof(<cooldownCo>d__17))]
	private IEnumerator<float> cooldownCo([Optional] Brick brick)
	{
		return null;
	}
}
[Token(Token = "0x20004E7")]
public class TargetSnake : TargetMain
{
	[Token(Token = "0x4001E57")]
	private const float moveEverySeconds = 0.75f;

	[Token(Token = "0x4001E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HexTile originalHead;

	[Token(Token = "0x4001E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _reversed;

	[Token(Token = "0x4001E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool _wantToMoveLeft;

	[Token(Token = "0x4001E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _curMoveEverySeconds;

	[Token(Token = "0x4001E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _timeSinceLastMove;

	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private HexTile _prevTile;

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<IntVector2, Target> _devouredTargets;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<SyncWave.SnakeMove> _receivedMoves;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _relocated;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<HexTile> _validTilesForNextMove;

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<float> _probabilities;

	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HexTile.HexDirection _lastMoveDir;

	[Token(Token = "0x17000501")]
	private bool debugSnakeIssues
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xD05E98", Offset = "0xD05E98", VA = "0xD05E98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000502")]
	public HexTile curHead
	{
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xD05F00", Offset = "0xD05F00", VA = "0xD05F00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000503")]
	public HexTile curTail
	{
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xD05F74", Offset = "0xD05F74", VA = "0xD05F74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000504")]
	public override Vector3 center
	{
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xD05FE8", Offset = "0xD05FE8", VA = "0xD05FE8", Slot = "9")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000505")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xD05FF0", Offset = "0xD05FF0", VA = "0xD05FF0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0xD06044", Offset = "0xD06044", VA = "0xD06044")]
	public TargetSnake(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0xD06228", Offset = "0xD06228", VA = "0xD06228")]
	private void onBallChangeOwnership(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0xD06230", Offset = "0xD06230", VA = "0xD06230", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0xD062E8", Offset = "0xD062E8", VA = "0xD062E8", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0xD069EC", Offset = "0xD069EC", VA = "0xD069EC")]
	public bool isTileActuallyPartOfSnake(HexTile tile)
	{
		return default(bool);
	}

	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0xD063D8", Offset = "0xD063D8", VA = "0xD063D8")]
	public void reorderAndShortenSnake()
	{
	}

	[Token(Token = "0x6001DA6")]
	[Address(RVA = "0xD06A94", Offset = "0xD06A94", VA = "0xD06A94", Slot = "19")]
	protected override void onDamaged()
	{
	}

	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0xD07140", Offset = "0xD07140", VA = "0xD07140")]
	private string coordsListToString(IntVector2[] hexCoords)
	{
		return null;
	}

	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0xD07234", Offset = "0xD07234", VA = "0xD07234")]
	private void HandleRemoteMoves()
	{
	}

	[Token(Token = "0x6001DA9")]
	[Address(RVA = "0xD07B64", Offset = "0xD07B64", VA = "0xD07B64", Slot = "21")]
	protected override void update()
	{
	}

	[Token(Token = "0x6001DAA")]
	[Address(RVA = "0xD0697C", Offset = "0xD0697C", VA = "0xD0697C")]
	private void updateUV()
	{
	}

	[Token(Token = "0x6001DAB")]
	[Address(RVA = "0xD07F74", Offset = "0xD07F74", VA = "0xD07F74")]
	private void moveToTile(HexTile nextTile)
	{
	}

	[Token(Token = "0x6001DAC")]
	[Address(RVA = "0xD08240", Offset = "0xD08240", VA = "0xD08240")]
	private void onMoved()
	{
	}

	[Token(Token = "0x6001DAD")]
	[Address(RVA = "0xD076FC", Offset = "0xD076FC", VA = "0xD076FC")]
	private void relocate(int receivedMoveIndex)
	{
	}

	[Token(Token = "0x6001DAE")]
	[Address(RVA = "0xD074C4", Offset = "0xD074C4", VA = "0xD074C4")]
	private bool canRelocate(int receivedMoveIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0xD07DA8", Offset = "0xD07DA8", VA = "0xD07DA8")]
	private void move()
	{
	}

	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0xD08550", Offset = "0xD08550", VA = "0xD08550")]
	private HexTile getNextTile(HexTile.HexDirection dir1, HexTile.HexDirection dir2 = HexTile.HexDirection.Invalid, HexTile.HexDirection dir3 = HexTile.HexDirection.Invalid, float probability1 = 1f, float probability2 = 1f, float probability3 = 1f)
	{
		return null;
	}

	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0xD0830C", Offset = "0xD0830C", VA = "0xD0830C")]
	private HexTile getNextTile()
	{
		return null;
	}

	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0xD08988", Offset = "0xD08988", VA = "0xD08988")]
	private bool canAdvanceToTile(HexTile nextTile)
	{
		return default(bool);
	}

	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0xD075FC", Offset = "0xD075FC", VA = "0xD075FC")]
	private void reverse()
	{
	}

	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0xD08020", Offset = "0xD08020", VA = "0xD08020")]
	private void addHead(HexTile nextTile)
	{
	}

	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0xD06D68", Offset = "0xD06D68", VA = "0xD06D68")]
	private void removeTail(bool printDebug)
	{
	}

	[Token(Token = "0x6001DB6")]
	[Address(RVA = "0xD08B14", Offset = "0xD08B14", VA = "0xD08B14", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0xD08D24", Offset = "0xD08D24", VA = "0xD08D24", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0xD08D90", Offset = "0xD08D90", VA = "0xD08D90", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0xD08E48", Offset = "0xD08E48", VA = "0xD08E48", Slot = "20")]
	protected override void onDestroyed()
	{
	}
}
[Token(Token = "0x20004E8")]
[DisallowMultipleComponent]
public abstract class Wave : MonoBehaviour
{
	[Token(Token = "0x20004E9")]
	[CompilerGenerated]
	private sealed class <InitTargetsCo>d__43 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Wave <>4__this;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool instant;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <delayScale>5__2;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Target>.Enumerator <>7__wrap2;

		[Token(Token = "0x1700050A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xD0AC34", Offset = "0xD0AC34", VA = "0xD0AC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700050B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xD0AC7C", Offset = "0xD0AC7C", VA = "0xD0AC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xD0A458", Offset = "0xD0A458", VA = "0xD0A458")]
		[DebuggerHidden]
		public <InitTargetsCo>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xD0A70C", Offset = "0xD0A70C", VA = "0xD0A70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xD0A728", Offset = "0xD0A728", VA = "0xD0A728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD0ABE4", Offset = "0xD0ABE4", VA = "0xD0ABE4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD0AC3C", Offset = "0xD0AC3C", VA = "0xD0AC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exclusiveAtThisDifficulty;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minDifficulty;

	[Token(Token = "0x4001E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxDifficulty;

	[Token(Token = "0x4001E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string setWithEquivalentDifficulty;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("0 for default, >1 to allow more time, <1 to allow less")]
	public float timeFactor;

	[Token(Token = "0x4001E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool walledBorders;

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HexTrudeManager.WallType borderWallType;

	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int defaultTargetsHitPoints;

	[NonSerialized]
	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _wavePosShift;

	[NonSerialized]
	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _timeSinceInitialized;

	[NonSerialized]
	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int _numTimesPlayed;

	[NonSerialized]
	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool _playedThisSession;

	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _fullPath;

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool allowHorizontalMirror;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool allowVerticalMirror;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private CoroutineHandle _targetInitCoroutine;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Target> targets;

	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _targetCompletelyInitialized;

	[Token(Token = "0x17000506")]
	public bool FlippedHorizontally
	{
		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD09ED0", Offset = "0xD09ED0", VA = "0xD09ED0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD09ED8", Offset = "0xD09ED8", VA = "0xD09ED8")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x17000507")]
	public bool FlippedVertically
	{
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD09EE4", Offset = "0xD09EE4", VA = "0xD09EE4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD09EEC", Offset = "0xD09EEC", VA = "0xD09EEC")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x17000508")]
	public string FullPath
	{
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD09EF8", Offset = "0xD09EF8", VA = "0xD09EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000509")]
	public bool targetCompletelyInitialized
	{
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xD09F3C", Offset = "0xD09F3C", VA = "0xD09F3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000045")]
	public event Action completelyInitialized
	{
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xD09F8C", Offset = "0xD09F8C", VA = "0xD09F8C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xD0A028", Offset = "0xD0A028", VA = "0xD0A028")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0xD09F44", Offset = "0xD09F44", VA = "0xD09F44")]
	public void setTargetCompletelyInitialized()
	{
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0xD09F70", Offset = "0xD09F70", VA = "0xD09F70")]
	private void onCompletelyInitialized()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0xD0A0C4", Offset = "0xD0A0C4", VA = "0xD0A0C4", Slot = "4")]
	public virtual bool isWaveAchieved()
	{
		return default(bool);
	}

	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0xD0A28C", Offset = "0xD0A28C", VA = "0xD0A28C", Slot = "5")]
	public virtual void onInitialized()
	{
	}

	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0xD0A290", Offset = "0xD0A290", VA = "0xD0A290", Slot = "6")]
	public virtual void validateIntegrity()
	{
	}

	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0xD0A294", Offset = "0xD0A294", VA = "0xD0A294", Slot = "7")]
	public virtual void setupForMultiplayer()
	{
	}

	[Token(Token = "0x6001DC8")]
	protected abstract void GenerateTargets([Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically);

	[Token(Token = "0x6001DC9")]
	protected abstract void GeneratePowerUps();

	[Token(Token = "0x6001DCA")]
	[Address(RVA = "0xD0A298", Offset = "0xD0A298", VA = "0xD0A298", Slot = "10")]
	public virtual void Init(int shift, bool instant = false, [Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically, bool createPowerUps = true)
	{
	}

	[Token(Token = "0x6001DCB")]
	[Address(RVA = "0xD0A450", Offset = "0xD0A450", VA = "0xD0A450")]
	public float GetTimeSinceInit()
	{
		return default(float);
	}

	[Token(Token = "0x6001DCC")]
	[Address(RVA = "0xD0A3C8", Offset = "0xD0A3C8", VA = "0xD0A3C8")]
	[IteratorStateMachine(typeof(<InitTargetsCo>d__43))]
	private IEnumerator<float> InitTargetsCo(bool instant)
	{
		return null;
	}

	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0xD0A480", Offset = "0xD0A480", VA = "0xD0A480", Slot = "11")]
	public virtual void DeInit()
	{
	}

	[Token(Token = "0x6001DCE")]
	[Address(RVA = "0xD0A648", Offset = "0xD0A648", VA = "0xD0A648")]
	protected Wave()
	{
	}
}
[Token(Token = "0x20004EA")]
[ExecuteInEditMode]
public class WaveHandcrafted : Wave
{
	[Token(Token = "0x20004EB")]
	public struct WaveStats
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int numStaticTargets;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int totalStaticTargetsHP;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalStaticTargetsArea;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numSnakes;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalSnakesHP;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numBoosters;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numDowners;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numPortals;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float difficultyEstimation;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float riskFactor;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float numNeededShots;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float timeNeeded;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float timeGiven;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] HEADERS;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] COEFFICIENTS;

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xD0D3C8", Offset = "0xD0D3C8", VA = "0xD0D3C8")]
		public void estimateDifficulty()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xD0D538", Offset = "0xD0D538", VA = "0xD0D538", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xD0D8F8", Offset = "0xD0D8F8", VA = "0xD0D8F8")]
		public string[] getRow()
		{
			return null;
		}
	}

	[Token(Token = "0x20004EC")]
	public enum Positioning
	{
		[Token(Token = "0x4001E9C")]
		Fixed,
		[Token(Token = "0x4001E9D")]
		CenteredInFrontOfPlayer,
		[Token(Token = "0x4001E9E")]
		Random,
		[Token(Token = "0x4001E9F")]
		Custom,
		[Token(Token = "0x4001EA0")]
		FromPreviousWave
	}

	[Token(Token = "0x4001E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Level levelPrefab;

	[Token(Token = "0x4001E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Positioning positioning;

	[Token(Token = "0x4001E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int customShift;

	[Token(Token = "0x4001E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool alignWithGutter;

	[Token(Token = "0x4001E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _lastWavePosShift;

	[Token(Token = "0x4001E84")]
	private const int MAX_STATIC_TARGETS = 128;

	[Token(Token = "0x4001E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int[] staticTargetHitPointses;

	[Token(Token = "0x4001E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SerializablePowerupType[] powerups;

	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SerializablePowerupType[] excludedPowerupTypes;

	[Token(Token = "0x4001E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _shift;

	[Token(Token = "0x4001E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IBrick[] levelBricks;

	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<int> _usedIDs;

	[Token(Token = "0x1700050C")]
	public IBrick[] LevelBricks
	{
		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xD0ACD8", Offset = "0xD0ACD8", VA = "0xD0ACD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0xD0AEFC", Offset = "0xD0AEFC", VA = "0xD0AEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0xD0AD0C", Offset = "0xD0AD0C", VA = "0xD0AD0C")]
	private void findBricks()
	{
	}

	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0xD0AF00", Offset = "0xD0AF00", VA = "0xD0AF00")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0xD0AFC8", Offset = "0xD0AFC8", VA = "0xD0AFC8", Slot = "5")]
	public override void onInitialized()
	{
	}

	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0xD0B0EC", Offset = "0xD0B0EC", VA = "0xD0B0EC")]
	private void determineShift()
	{
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0xD0B2B8", Offset = "0xD0B2B8", VA = "0xD0B2B8")]
	public static int calcPlayerShift(bool alignWithGutter)
	{
		return default(int);
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0xD0B368", Offset = "0xD0B368", VA = "0xD0B368")]
	public static int calcShiftForForwardVector(Vector3 forward, bool alignWithGutter = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0xD0B614", Offset = "0xD0B614", VA = "0xD0B614")]
	private HexTile shiftedHexTile(IBrick levelBrick)
	{
		return null;
	}

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0xD0B788", Offset = "0xD0B788", VA = "0xD0B788")]
	private Target getStaticTargetByGroupID(int groupID)
	{
		return null;
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0xD0B950", Offset = "0xD0B950", VA = "0xD0B950")]
	private Target getSnakeTargetByGroupID(int groupID)
	{
		return null;
	}

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0xD0BB18", Offset = "0xD0BB18", VA = "0xD0BB18")]
	private void calcDistFromTargetForAllHexTiles()
	{
	}

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0xD0BCD0", Offset = "0xD0BCD0", VA = "0xD0BCD0", Slot = "8")]
	protected override void GenerateTargets([Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically)
	{
	}

	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0xD0CBBC", Offset = "0xD0CBBC", VA = "0xD0CBBC")]
	private int getStaticTargetHitPoints(int staticTargetId)
	{
		return default(int);
	}

	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0xD0CBFC", Offset = "0xD0CBFC", VA = "0xD0CBFC")]
	private int getSnakeLength(int snakeId)
	{
		return default(int);
	}

	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0xD0CDD0", Offset = "0xD0CDD0", VA = "0xD0CDD0", Slot = "9")]
	protected override void GeneratePowerUps()
	{
	}

	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0xD0CE94", Offset = "0xD0CE94", VA = "0xD0CE94")]
	public List<int> FindUsedLevelIds()
	{
		return null;
	}

	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0xD0ADB4", Offset = "0xD0ADB4", VA = "0xD0ADB4")]
	public RuntimeBrick[] CreateRuntimeBricks()
	{
		return null;
	}

	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0xD0D2D4", Offset = "0xD0D2D4", VA = "0xD0D2D4")]
	public WaveHandcrafted()
	{
	}
}
[Token(Token = "0x20004ED")]
public static class TimingEx
{
	[Token(Token = "0x20004EE")]
	public delegate bool ConditionAction();

	[Token(Token = "0x20004EF")]
	public delegate IEnumerable<bool> ConditionActionAll();

	[Token(Token = "0x20004F0")]
	[CompilerGenerated]
	private sealed class <_WaitForSecondsRealtime>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x1700050D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xD0EB58", Offset = "0xD0EB58", VA = "0xD0EB58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xD0EBA0", Offset = "0xD0EBA0", VA = "0xD0EBA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD0E0F0", Offset = "0xD0E0F0", VA = "0xD0E0F0")]
		[DebuggerHidden]
		public <_WaitForSecondsRealtime>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD0EAF8", Offset = "0xD0EAF8", VA = "0xD0EAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD0EAFC", Offset = "0xD0EAFC", VA = "0xD0EAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xD0EB60", Offset = "0xD0EB60", VA = "0xD0EB60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0xD0E080", Offset = "0xD0E080", VA = "0xD0E080")]
	[IteratorStateMachine(typeof(<_WaitForSecondsRealtime>d__0))]
	private static IEnumerator<float> _WaitForSecondsRealtime(float delay)
	{
		return null;
	}

	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0xD0E118", Offset = "0xD0E118", VA = "0xD0E118")]
	public static float WaitForSecondsRealtime(float delay)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0xD0E198", Offset = "0xD0E198", VA = "0xD0E198")]
	public static float WaitUntilDone(IEnumerator<float> coroutine)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0xD0E200", Offset = "0xD0E200", VA = "0xD0E200")]
	public static float WaitUntilDone(IEnumerator<float> coroutine, string tag)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0xD0E278", Offset = "0xD0E278", VA = "0xD0E278")]
	public static float WaitUntilDone(IEnumerator<float> coroutine, out CoroutineHandle handle)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0xD0E2F4", Offset = "0xD0E2F4", VA = "0xD0E2F4")]
	public static float WaitUntil(ConditionAction action)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0xD0E3E4", Offset = "0xD0E3E4", VA = "0xD0E3E4")]
	public static float WaitUntilTimeout(ConditionAction action, float timeout)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0xD0E4E4", Offset = "0xD0E4E4", VA = "0xD0E4E4")]
	public static float WaitUntilTimeoutUnscaled(ConditionAction action, float timeout)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF6")]
	public static float AwaitTask<T>(Task<T> task)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0xD0E5E4", Offset = "0xD0E5E4", VA = "0xD0E5E4")]
	public static float AwaitTask(Task task)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0xD0E6D4", Offset = "0xD0E6D4", VA = "0xD0E6D4")]
	public static float WaitUntilAll(ConditionActionAll action)
	{
		return default(float);
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0xD0E7C4", Offset = "0xD0E7C4", VA = "0xD0E7C4")]
	public static float WaitUntil(ConditionAction action, float secondDelay)
	{
		return default(float);
	}
}
[Token(Token = "0x2000500")]
public class AchievementCardUI : MonoBehaviour
{
	[Token(Token = "0x2000501")]
	[CompilerGenerated]
	private sealed class <SeenAfterCo>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AchievementCardUI <>4__this;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Achievement ach;

		[Token(Token = "0x1700051D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xD0FC64", Offset = "0xD0FC64", VA = "0xD0FC64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xD0FCAC", Offset = "0xD0FCAC", VA = "0xD0FCAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xD0FB30", Offset = "0xD0FB30", VA = "0xD0FB30")]
		[DebuggerHidden]
		public <SeenAfterCo>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xD0FB68", Offset = "0xD0FB68", VA = "0xD0FB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xD0FB6C", Offset = "0xD0FB6C", VA = "0xD0FB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xD0FC6C", Offset = "0xD0FC6C", VA = "0xD0FC6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Localize titleText;

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize descriptionText;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocalizeFormatted progressText;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image icon;

	[Token(Token = "0x4001ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIItemTransitions newBadge;

	[Token(Token = "0x4001ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject complete;

	[Token(Token = "0x4001ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject incomplete;

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject completionBar;

	[Token(Token = "0x4001ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material _completionMaterial;

	[Token(Token = "0x4001ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _shaderTimeLeftProp;

	[Token(Token = "0x4001ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private CoroutineHandle _seenAfterCo;

	[Token(Token = "0x4001ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _awaked;

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0xD0F588", Offset = "0xD0F588", VA = "0xD0F588")]
	public void Initialize(Achievement achievement)
	{
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0xD0F92C", Offset = "0xD0F92C", VA = "0xD0F92C")]
	private void ShowNewUnlockBadge(Achievement ach)
	{
	}

	[Token(Token = "0x6001E46")]
	[Address(RVA = "0xD0FAA0", Offset = "0xD0FAA0", VA = "0xD0FAA0")]
	[IteratorStateMachine(typeof(<SeenAfterCo>d__13))]
	private IEnumerator<float> SeenAfterCo(Achievement ach)
	{
		return null;
	}

	[Token(Token = "0x6001E47")]
	[Address(RVA = "0xD0F784", Offset = "0xD0F784", VA = "0xD0F784")]
	private void SetProgressText(Achievement achievement, Achievement.Card card)
	{
	}

	[Token(Token = "0x6001E48")]
	[Address(RVA = "0xD0F6E0", Offset = "0xD0F6E0", VA = "0xD0F6E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E49")]
	[Address(RVA = "0xD0FA58", Offset = "0xD0FA58", VA = "0xD0FA58")]
	private void ToggleComplete(bool cmplt)
	{
	}

	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0xD0FB58", Offset = "0xD0FB58", VA = "0xD0FB58")]
	public AchievementCardUI()
	{
	}
}
[Token(Token = "0x2000502")]
public class AchievementListUI : MonoBehaviour
{
	[Token(Token = "0x2000503")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AchievementListUI <>4__this;

		[Token(Token = "0x1700051F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xD10508", Offset = "0xD10508", VA = "0xD10508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xD10550", Offset = "0xD10550", VA = "0xD10550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xD0FD7C", Offset = "0xD0FD7C", VA = "0xD0FD7C")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xD10420", Offset = "0xD10420", VA = "0xD10420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xD10424", Offset = "0xD10424", VA = "0xD10424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xD10510", Offset = "0xD10510", VA = "0xD10510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIItemTransitions backButton;

	[Token(Token = "0x4001ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image counter;

	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions nextButton;

	[Token(Token = "0x4001EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int cardsPerPage;

	[Token(Token = "0x4001EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentPageIndex;

	[Token(Token = "0x4001EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The cards place holders in the list")]
	public AchievementCardUI[] cards;

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _totalWaves;

	[Token(Token = "0x4001EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _wavesComplete;

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0xD0FD08", Offset = "0xD0FD08", VA = "0xD0FD08")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E52")]
	[Address(RVA = "0xD0FDA4", Offset = "0xD0FDA4", VA = "0xD0FDA4")]
	private void TurnOffCards()
	{
	}

	[Token(Token = "0x6001E53")]
	[Address(RVA = "0xD0FE14", Offset = "0xD0FE14", VA = "0xD0FE14")]
	private void AutoSelectPageIndex(List<Achievement> achievList)
	{
	}

	[Token(Token = "0x6001E54")]
	[Address(RVA = "0xD0FF54", Offset = "0xD0FF54", VA = "0xD0FF54")]
	public void PopulateList(bool autoSelectPage = false)
	{
	}

	[Token(Token = "0x6001E55")]
	[Address(RVA = "0xD100D8", Offset = "0xD100D8", VA = "0xD100D8")]
	private void PopulateList(List<Achievement> achievList, int pageIndex)
	{
	}

	[Token(Token = "0x6001E56")]
	[Address(RVA = "0xD10258", Offset = "0xD10258", VA = "0xD10258")]
	private void UpdatePageUI(int pagesCount)
	{
	}

	[Token(Token = "0x6001E57")]
	[Address(RVA = "0xD10368", Offset = "0xD10368", VA = "0xD10368")]
	public void PageButtonClick(int page)
	{
	}

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0xD1037C", Offset = "0xD1037C", VA = "0xD1037C")]
	public AchievementListUI()
	{
	}
}
[Token(Token = "0x2000505")]
public class AchievementWallText : WallText
{
	[Token(Token = "0x4001EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image icon;

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0xD10634", Offset = "0xD10634", VA = "0xD10634")]
	public void Init(Achievement ach)
	{
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0xD10660", Offset = "0xD10660", VA = "0xD10660")]
	public AchievementWallText()
	{
	}
}
[Token(Token = "0x2000506")]
public class AnnouncerToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001E66")]
	[Address(RVA = "0xD10668", Offset = "0xD10668", VA = "0xD10668", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0xD10670", Offset = "0xD10670", VA = "0xD10670", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0xD106C4", Offset = "0xD106C4", VA = "0xD106C4", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0xD10754", Offset = "0xD10754", VA = "0xD10754", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0xD107BC", Offset = "0xD107BC", VA = "0xD107BC")]
	public AnnouncerToggleSwitch()
	{
	}
}
[Token(Token = "0x2000507")]
public class AntiAliasingKnob : KnobBase
{
	[Serializable]
	[Token(Token = "0x2000508")]
	public struct Texts
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizedString off;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString x2;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString x4;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString x8;
	}

	[Token(Token = "0x4001EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texts texts;

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0xD107C4", Offset = "0xD107C4", VA = "0xD107C4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0xD107CC", Offset = "0xD107CC", VA = "0xD107CC", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0xD107FC", Offset = "0xD107FC", VA = "0xD107FC", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0xD107EC", Offset = "0xD107EC", VA = "0xD107EC")]
	private static float AAModeToAmplitude(AntiAliasing.Mode aaMode)
	{
		return default(float);
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0xD1082C", Offset = "0xD1082C", VA = "0xD1082C")]
	private static AntiAliasing.Mode amplitudeToAAMode(float snappedAmplitude)
	{
		return default(AntiAliasing.Mode);
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0xD10910", Offset = "0xD10910", VA = "0xD10910", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0xD10928", Offset = "0xD10928", VA = "0xD10928", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0xD10A50", Offset = "0xD10A50", VA = "0xD10A50")]
	public AntiAliasingKnob()
	{
	}
}
[Token(Token = "0x2000509")]
public class ArcadeDifficultyMenuItem : MonoBehaviour
{
	[Token(Token = "0x4001EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeType arcadeType;

	[Token(Token = "0x4001EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro bestScoreText;

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0xD10A58", Offset = "0xD10A58", VA = "0xD10A58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0xD10C50", Offset = "0xD10C50", VA = "0xD10C50")]
	public ArcadeDifficultyMenuItem()
	{
	}
}
[Token(Token = "0x200050A")]
public class ArcadeUI : Area
{
	[Token(Token = "0x4001EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup modesTransitionsGroup;

	[Token(Token = "0x4001EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArcadeUI inst;

	[Token(Token = "0x4001EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HorizontalOrbitalLayout modesLayout;

	[Token(Token = "0x4001EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Orbital nightmareOrbital;

	[Token(Token = "0x17000521")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xD10C60", Offset = "0xD10C60", VA = "0xD10C60", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000522")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xD10C68", Offset = "0xD10C68", VA = "0xD10C68", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000523")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xD10C70", Offset = "0xD10C70", VA = "0xD10C70", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000524")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xD10C78", Offset = "0xD10C78", VA = "0xD10C78", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000525")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xD10C80", Offset = "0xD10C80", VA = "0xD10C80", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0xD10C88", Offset = "0xD10C88", VA = "0xD10C88", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0xD10E8C", Offset = "0xD10E8C", VA = "0xD10E8C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0xD11278", Offset = "0xD11278", VA = "0xD11278", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0xD114CC", Offset = "0xD114CC", VA = "0xD114CC", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0xD11524", Offset = "0xD11524", VA = "0xD11524")]
	public void onZenSelected(Transform easyTransform)
	{
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0xD11594", Offset = "0xD11594", VA = "0xD11594")]
	public void onOldSchoolSelected(Transform mediumTransform)
	{
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0xD11604", Offset = "0xD11604", VA = "0xD11604")]
	public void onNightmareSelected(Transform hardTransform)
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0xD11674", Offset = "0xD11674", VA = "0xD11674")]
	private void onShowLeaderboardClicked(ArcadeType arcadeType)
	{
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0xD1189C", Offset = "0xD1189C", VA = "0xD1189C")]
	public void onShowRegularLeaderboard()
	{
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0xD118A4", Offset = "0xD118A4", VA = "0xD118A4")]
	public void onShowNightmareLeaderboard()
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0xD118AC", Offset = "0xD118AC", VA = "0xD118AC")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0xD118CC", Offset = "0xD118CC", VA = "0xD118CC")]
	public ArcadeUI()
	{
	}
}
[Token(Token = "0x200050B")]
[RequireComponent(typeof(UIItemTransitionsGroup))]
public abstract class Area : MonoBehaviour
{
	[Token(Token = "0x200050C")]
	private enum Visibility
	{
		[Token(Token = "0x4001EFB")]
		Hidden,
		[Token(Token = "0x4001EFC")]
		Showing,
		[Token(Token = "0x4001EFD")]
		Shown,
		[Token(Token = "0x4001EFE")]
		Hiding
	}

	[Token(Token = "0x200050D")]
	[CompilerGenerated]
	private sealed class <showCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x1700052E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xD12244", Offset = "0xD12244", VA = "0xD12244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700052F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xD1228C", Offset = "0xD1228C", VA = "0xD1228C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xD11AF4", Offset = "0xD11AF4", VA = "0xD11AF4")]
		[DebuggerHidden]
		public <showCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xD120EC", Offset = "0xD120EC", VA = "0xD120EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xD120F0", Offset = "0xD120F0", VA = "0xD120F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xD1224C", Offset = "0xD1224C", VA = "0xD1224C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050E")]
	[CompilerGenerated]
	private sealed class <hideCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x17000530")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xD1236C", Offset = "0xD1236C", VA = "0xD1236C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000531")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xD123B4", Offset = "0xD123B4", VA = "0xD123B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xD11EC8", Offset = "0xD11EC8", VA = "0xD11EC8")]
		[DebuggerHidden]
		public <hideCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xD122E8", Offset = "0xD122E8", VA = "0xD122E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xD122EC", Offset = "0xD122EC", VA = "0xD122EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xD12374", Offset = "0xD12374", VA = "0xD12374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050F")]
	[CompilerGenerated]
	private sealed class <waitForAllTransitions>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool completely;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool <allNearlyDone>5__2;

		[Token(Token = "0x17000532")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xD1251C", Offset = "0xD1251C", VA = "0xD1251C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000533")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xD12564", Offset = "0xD12564", VA = "0xD12564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xD11F78", Offset = "0xD11F78", VA = "0xD11F78")]
		[DebuggerHidden]
		public <waitForAllTransitions>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xD12410", Offset = "0xD12410", VA = "0xD12410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xD12414", Offset = "0xD12414", VA = "0xD12414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xD12524", Offset = "0xD12524", VA = "0xD12524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x4001EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x4001EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected UIItemTransitions[] _transitions;

	[Token(Token = "0x4001EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Visibility _visibility;

	[Token(Token = "0x4001EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _hideCo;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool _hiddenByPopUp;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ExpandableOrbital[] _expandables;

	[Token(Token = "0x17000526")]
	public bool isShowingOrShown
	{
		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xD118DC", Offset = "0xD118DC", VA = "0xD118DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000527")]
	public bool isShowing
	{
		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xD118F0", Offset = "0xD118F0", VA = "0xD118F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000528")]
	public bool isShown
	{
		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xD11900", Offset = "0xD11900", VA = "0xD11900")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000529")]
	protected abstract bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001E89")]
		get;
	}

	[Token(Token = "0x1700052A")]
	protected abstract bool shouldHandleBack
	{
		[Token(Token = "0x6001E8A")]
		get;
	}

	[Token(Token = "0x1700052B")]
	protected abstract bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001E8B")]
		get;
	}

	[Token(Token = "0x1700052C")]
	protected abstract bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001E8C")]
		get;
	}

	[Token(Token = "0x1700052D")]
	protected abstract bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001E8D")]
		get;
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0xD10CE8", Offset = "0xD10CE8", VA = "0xD10CE8", Slot = "9")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0xD11910", Offset = "0xD11910", VA = "0xD11910", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0xD11954", Offset = "0xD11954", VA = "0xD11954", Slot = "11")]
	public virtual void show()
	{
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0xD11A80", Offset = "0xD11A80", VA = "0xD11A80")]
	[IteratorStateMachine(typeof(<showCo>d__27))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0xD10EB4", Offset = "0xD10EB4", VA = "0xD10EB4", Slot = "12")]
	protected virtual void onShowing()
	{
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0xD11BC8", Offset = "0xD11BC8", VA = "0xD11BC8")]
	private void onPopUpPopped(Transform t)
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0xD11C90", Offset = "0xD11C90", VA = "0xD11C90")]
	private void onPopUpUnpopped()
	{
	}

	[Token(Token = "0x6001E95")]
	[Address(RVA = "0xD11D50", Offset = "0xD11D50", VA = "0xD11D50", Slot = "13")]
	protected virtual void onShown()
	{
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0xD11D54", Offset = "0xD11D54", VA = "0xD11D54", Slot = "14")]
	public virtual void hide(bool byPopUp = false)
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0xD11E54", Offset = "0xD11E54", VA = "0xD11E54")]
	[IteratorStateMachine(typeof(<hideCo>d__33))]
	private IEnumerator<float> hideCo()
	{
		return null;
	}

	[Token(Token = "0x6001E98")]
	[Address(RVA = "0xD11EF0", Offset = "0xD11EF0", VA = "0xD11EF0")]
	[IteratorStateMachine(typeof(<waitForAllTransitions>d__34))]
	public IEnumerator<float> waitForAllTransitions(bool completely)
	{
		return null;
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0xD112FC", Offset = "0xD112FC", VA = "0xD112FC", Slot = "15")]
	protected virtual void onHiding()
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0xD11FA0", Offset = "0xD11FA0", VA = "0xD11FA0", Slot = "16")]
	protected virtual void onHidden()
	{
	}

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0xD11FB4", Offset = "0xD11FB4", VA = "0xD11FB4", Slot = "17")]
	protected virtual void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0xD1201C", Offset = "0xD1201C", VA = "0xD1201C", Slot = "18")]
	protected virtual void onMenuButton()
	{
	}

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0xD12020", Offset = "0xD12020", VA = "0xD12020")]
	public void TriggerBack()
	{
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0xD12030", Offset = "0xD12030", VA = "0xD12030", Slot = "19")]
	protected virtual void onBack()
	{
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0xD11B1C", Offset = "0xD11B1C", VA = "0xD11B1C")]
	private ExpandableOrbital findExpanded()
	{
		return null;
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0xD120E8", Offset = "0xD120E8", VA = "0xD120E8", Slot = "20")]
	protected virtual void onBackHiding()
	{
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0xD118D4", Offset = "0xD118D4", VA = "0xD118D4")]
	protected Area()
	{
	}
}
[Token(Token = "0x2000510")]
public class CancelMPButton : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	private class CancelButtonTimeExceededException : Exception
	{
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xD12940", Offset = "0xD12940", VA = "0xD12940")]
		public CancelButtonTimeExceededException(string message)
		{
		}
	}

	[Token(Token = "0x4001F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchItem _touchItem;

	[Token(Token = "0x4001F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeForExceptionReport;

	[Token(Token = "0x4001F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _reported;

	[Token(Token = "0x4001F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _isDisabled;

	[Token(Token = "0x4001F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeDisabled;

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0xD125C0", Offset = "0xD125C0", VA = "0xD125C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0xD12654", Offset = "0xD12654", VA = "0xD12654")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0xD127BC", Offset = "0xD127BC", VA = "0xD127BC")]
	private void Enable(bool shouldEnable)
	{
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0xD129A8", Offset = "0xD129A8", VA = "0xD129A8")]
	public CancelMPButton()
	{
	}
}
[Token(Token = "0x2000512")]
public class CheatCodeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x2000513")]
	public enum CheatType
	{
		[Token(Token = "0x4001F15")]
		godMode,
		[Token(Token = "0x4001F16")]
		unlockAll
	}

	[Token(Token = "0x4001F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CheatCodeToggleSwitch _godMode;

	[Token(Token = "0x4001F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CheatCodeToggleSwitch _unlockAll;

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CheatType type;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool active;

	[Token(Token = "0x17000534")]
	public static bool godMode
	{
		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xD129B8", Offset = "0xD129B8", VA = "0xD129B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000535")]
	public static bool unlockAll
	{
		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xD12A60", Offset = "0xD12A60", VA = "0xD12A60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0xD12B08", Offset = "0xD12B08", VA = "0xD12B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0xD12B74", Offset = "0xD12B74", VA = "0xD12B74", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0xD12B7C", Offset = "0xD12B7C", VA = "0xD12B7C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0xD12C28", Offset = "0xD12C28", VA = "0xD12C28", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0xD12CC4", Offset = "0xD12CC4", VA = "0xD12CC4")]
	public CheatCodeToggleSwitch()
	{
	}
}
[Token(Token = "0x2000514")]
public class CoModeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4001F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions versusLabel;

	[Token(Token = "0x4001F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions coOpLabel;

	[Token(Token = "0x4001F19")]
	private const string CO_MODE_KEY = "Co-Mode_Toggle_State";

	[Token(Token = "0x4001F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CoMode coMode;

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0xD12CCC", Offset = "0xD12CCC", VA = "0xD12CCC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0xD12CD4", Offset = "0xD12CD4", VA = "0xD12CD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0xD12E00", Offset = "0xD12E00", VA = "0xD12E00", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0xD12E60", Offset = "0xD12E60", VA = "0xD12E60", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0xD12D64", Offset = "0xD12D64", VA = "0xD12D64")]
	private void updateLabels()
	{
	}

	[Token(Token = "0x6001EC5")]
	[Address(RVA = "0xD12F50", Offset = "0xD12F50", VA = "0xD12F50", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001EC6")]
	[Address(RVA = "0xD12FB8", Offset = "0xD12FB8", VA = "0xD12FB8", Slot = "9")]
	protected override bool isOff(bool snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6001EC7")]
	[Address(RVA = "0xD12FC0", Offset = "0xD12FC0", VA = "0xD12FC0")]
	public CoModeToggleSwitch()
	{
	}
}
[Token(Token = "0x2000515")]
public class CustomizationsUI : Area
{
	[Token(Token = "0x4001F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerProfileUI playerProfileUI;

	[Token(Token = "0x4001F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MirrorArea mirrorArea;

	[Token(Token = "0x17000536")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xD13014", Offset = "0xD13014", VA = "0xD13014", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000537")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xD1301C", Offset = "0xD1301C", VA = "0xD1301C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000538")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xD13024", Offset = "0xD13024", VA = "0xD13024", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000539")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xD1302C", Offset = "0xD1302C", VA = "0xD1302C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700053A")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xD13034", Offset = "0xD13034", VA = "0xD13034", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001ECE")]
	[Address(RVA = "0xD1303C", Offset = "0xD1303C", VA = "0xD1303C", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001ECF")]
	[Address(RVA = "0xD13178", Offset = "0xD13178", VA = "0xD13178", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001ED0")]
	[Address(RVA = "0xD131A0", Offset = "0xD131A0", VA = "0xD131A0")]
	public CustomizationsUI()
	{
	}
}
[Token(Token = "0x2000516")]
public class DefaultRacketSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001ED1")]
	[Address(RVA = "0xD131A8", Offset = "0xD131A8", VA = "0xD131A8", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0xD1320C", Offset = "0xD1320C", VA = "0xD1320C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0xD132A4", Offset = "0xD132A4", VA = "0xD132A4", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0xD132E4", Offset = "0xD132E4", VA = "0xD132E4")]
	public DefaultRacketSwitch()
	{
	}
}
[Token(Token = "0x2000517")]
public class DemoLock : MonoBehaviour
{
	[Token(Token = "0x4001F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider blockedCollider;

	[Token(Token = "0x4001F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI highglightText;

	[Token(Token = "0x4001F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _locked;

	[Token(Token = "0x1700053B")]
	public bool locked
	{
		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xD132EC", Offset = "0xD132EC", VA = "0xD132EC")]
		set
		{
		}
	}

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0xD132FC", Offset = "0xD132FC", VA = "0xD132FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0xD13324", Offset = "0xD13324", VA = "0xD13324")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0xD132F8", Offset = "0xD132F8", VA = "0xD132F8")]
	private void onLockedChanged()
	{
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0xD13300", Offset = "0xD13300", VA = "0xD13300")]
	private void updateLock()
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0xD13328", Offset = "0xD13328", VA = "0xD13328")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0xD133C8", Offset = "0xD133C8", VA = "0xD133C8")]
	public void CopyBlockedCollider()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0xD134E4", Offset = "0xD134E4", VA = "0xD134E4")]
	public DemoLock()
	{
	}
}
[Token(Token = "0x2000518")]
public static class DisplayTextFormat
{
	[Token(Token = "0x4001F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0xD134F4", Offset = "0xD134F4", VA = "0xD134F4")]
	public static string formatScore(int score)
	{
		return null;
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0xD10B48", Offset = "0xD10B48", VA = "0xD10B48")]
	public static void formatScore(int score, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0xD13510", Offset = "0xD13510", VA = "0xD13510")]
	public static void formatVersusRating(PlayerProfileData.Multiplayer.Versus versusData, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0xD136F8", Offset = "0xD136F8", VA = "0xD136F8")]
	public static void formatIntCustom(int num, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0xD137F0", Offset = "0xD137F0", VA = "0xD137F0")]
	public static void formatDuration(float seconds, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0xD1386C", Offset = "0xD1386C", VA = "0xD1386C")]
	public static void formatDurationCustom(float seconds, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0xD13A54", Offset = "0xD13A54", VA = "0xD13A54")]
	public static void formatLongDurationCustom(float seconds, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0xD13BE4", Offset = "0xD13BE4", VA = "0xD13BE4")]
	public static void formatDurationAsHours(float seconds, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0xD13E9C", Offset = "0xD13E9C", VA = "0xD13E9C")]
	public static void formatPercent(int percent, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0xD13FC0", Offset = "0xD13FC0", VA = "0xD13FC0")]
	public static void formatRank(int rank, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0xD140C8", Offset = "0xD140C8", VA = "0xD140C8")]
	public static void formatDate(DateTime date, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001EE8")]
	[Address(RVA = "0xD14234", Offset = "0xD14234", VA = "0xD14234")]
	public static void formatDate(DateTime date, TextMeshProUGUI textMesh)
	{
	}
}
[Token(Token = "0x2000519")]
public class DynamicListMenu : MonoBehaviour
{
	[Token(Token = "0x200051A")]
	private class Button
	{
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityAction action;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize localize;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIItemTransitions transitions;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SelectableTouchItem selectable;

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xD14C90", Offset = "0xD14C90", VA = "0xD14C90")]
		public Button()
		{
		}
	}

	[Token(Token = "0x4001F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform window;

	[Token(Token = "0x4001F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform button0;

	[Token(Token = "0x4001F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _windowOrigHeight;

	[Token(Token = "0x4001F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _buttonHeight;

	[Token(Token = "0x4001F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Button> _buttons;

	[Token(Token = "0x4001F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, Button> _cachedButtons;

	[Token(Token = "0x6001EEA")]
	[Address(RVA = "0xD14424", Offset = "0xD14424", VA = "0xD14424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EEB")]
	[Address(RVA = "0xD14538", Offset = "0xD14538", VA = "0xD14538")]
	public void reset()
	{
	}

	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0xD146D0", Offset = "0xD146D0", VA = "0xD146D0")]
	public int addButton(LocalizedString name, UnityAction action, bool enabled)
	{
		return default(int);
	}

	[Token(Token = "0x6001EED")]
	[Address(RVA = "0xD14C98", Offset = "0xD14C98", VA = "0xD14C98")]
	private void enableButton(Button button, bool enable)
	{
	}

	[Token(Token = "0x6001EEE")]
	[Address(RVA = "0xD14D64", Offset = "0xD14D64", VA = "0xD14D64")]
	private void onButtonSelected(int index)
	{
	}

	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0xD14E20", Offset = "0xD14E20", VA = "0xD14E20")]
	public void selectButton(int index, bool selected)
	{
	}

	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0xD14F58", Offset = "0xD14F58", VA = "0xD14F58")]
	public DynamicListMenu()
	{
	}
}
[Token(Token = "0x200051C")]
public class EmptyToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0xD14F80", Offset = "0xD14F80", VA = "0xD14F80", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0xD15020", Offset = "0xD15020", VA = "0xD15020", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0xD15028", Offset = "0xD15028", VA = "0xD15028", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0xD15034", Offset = "0xD15034", VA = "0xD15034", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0xD1509C", Offset = "0xD1509C", VA = "0xD1509C")]
	public void OnUnGrab()
	{
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0xD150B8", Offset = "0xD150B8", VA = "0xD150B8")]
	public EmptyToggleSwitch()
	{
	}
}
[Token(Token = "0x200051D")]
public class EnergyLeaderBoardUI : LeaderBoardUI
{
	[Token(Token = "0x200051E")]
	[CompilerGenerated]
	private sealed class <onDataAvailable>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnergyLeaderBoardUI <>4__this;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <showMeAtBottom>5__2;

		[Token(Token = "0x1700053C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xD15374", Offset = "0xD15374", VA = "0xD15374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xD153BC", Offset = "0xD153BC", VA = "0xD153BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xD15134", Offset = "0xD15134", VA = "0xD15134")]
		[DebuggerHidden]
		public <onDataAvailable>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xD15164", Offset = "0xD15164", VA = "0xD15164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xD15168", Offset = "0xD15168", VA = "0xD15168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xD1537C", Offset = "0xD1537C", VA = "0xD1537C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0xD150C0", Offset = "0xD150C0", VA = "0xD150C0", Slot = "4")]
	[IteratorStateMachine(typeof(<onDataAvailable>d__0))]
	protected override IEnumerator<float> onDataAvailable()
	{
		return null;
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0xD1515C", Offset = "0xD1515C", VA = "0xD1515C")]
	public EnergyLeaderBoardUI()
	{
	}
}
[Token(Token = "0x200051F")]
public class ArcadeLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArcadeLeaderboard inst;

	[Token(Token = "0x4001F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private ArcadeType _arcadeType;

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0xD15418", Offset = "0xD15418", VA = "0xD15418", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0xD11890", Offset = "0xD11890", VA = "0xD11890")]
	public void show(ArcadeType arcadeType, OnBack onBack)
	{
	}

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0xD155B4", Offset = "0xD155B4", VA = "0xD155B4", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0xD15610", Offset = "0xD15610", VA = "0xD15610", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0xD15674", Offset = "0xD15674", VA = "0xD15674")]
	public ArcadeLeaderboard()
	{
	}
}
[Token(Token = "0x2000520")]
[RequireComponent(typeof(UIItemTransitionsGroup))]
public abstract class ExternalLeaderboard : MonoBehaviour
{
	[Token(Token = "0x2000521")]
	public delegate void OnBack();

	[Token(Token = "0x2000522")]
	[CompilerGenerated]
	private sealed class <showCo>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExternalLeaderboard <>4__this;

		[Token(Token = "0x17000543")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xD164F4", Offset = "0xD164F4", VA = "0xD164F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000544")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xD1653C", Offset = "0xD1653C", VA = "0xD1653C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xD158BC", Offset = "0xD158BC", VA = "0xD158BC")]
		[DebuggerHidden]
		public <showCo>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xD15FB0", Offset = "0xD15FB0", VA = "0xD15FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xD15FB4", Offset = "0xD15FB4", VA = "0xD15FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xD164FC", Offset = "0xD164FC", VA = "0xD164FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000523")]
	[CompilerGenerated]
	private sealed class <downloadCo>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExternalLeaderboard <>4__this;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string rnxId2;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int startRank;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int count;

		[Token(Token = "0x17000545")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xD16780", Offset = "0xD16780", VA = "0xD16780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000546")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xD167C8", Offset = "0xD167C8", VA = "0xD167C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xD15988", Offset = "0xD15988", VA = "0xD15988")]
		[DebuggerHidden]
		public <downloadCo>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xD16598", Offset = "0xD16598", VA = "0xD16598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xD1659C", Offset = "0xD1659C", VA = "0xD1659C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xD16788", Offset = "0xD16788", VA = "0xD16788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExternalLeaderboardRow[] rows;

	[Token(Token = "0x4001F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform playerMarker;

	[Token(Token = "0x4001F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions list;

	[Token(Token = "0x4001F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIItemTransitions loading;

	[Token(Token = "0x4001F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _rnxId2;

	[Token(Token = "0x4001F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected OnBack _onBack;

	[Token(Token = "0x4001F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _visible;

	[Token(Token = "0x4001F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x4001F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderboardManager.LeaderboardContainer _leaderboard;

	[Token(Token = "0x4001F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _myRank;

	[Token(Token = "0x4001F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, LeaderboardManager.Entry> _entriesByRank;

	[Token(Token = "0x4001F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x1700053E")]
	public bool visible
	{
		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xD15684", Offset = "0xD15684", VA = "0xD15684")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700053F")]
	private LeaderboardManager.Entry[] entries
	{
		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xD1568C", Offset = "0xD1568C", VA = "0xD1568C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000540")]
	private int numRows
	{
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xD156A8", Offset = "0xD156A8", VA = "0xD156A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000541")]
	protected virtual int numTopRows
	{
		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xD156C4", Offset = "0xD156C4", VA = "0xD156C4", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000542")]
	private int numBottomRows
	{
		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xD156CC", Offset = "0xD156CC", VA = "0xD156CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F0C")]
	protected abstract LeaderboardManager.LeaderboardContainer GetLeaderboard();

	[Token(Token = "0x6001F0D")]
	protected abstract void formatScore(int scoreValue, TextMeshPro textMesh);

	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0xD156F8", Offset = "0xD156F8", VA = "0xD156F8", Slot = "7")]
	protected virtual void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0xD156FC", Offset = "0xD156FC", VA = "0xD156FC", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001F10")]
	[Address(RVA = "0xD15470", Offset = "0xD15470", VA = "0xD15470")]
	protected void _show(string rnxId2, OnBack onBackHandler)
	{
	}

	[Token(Token = "0x6001F11")]
	[Address(RVA = "0xD157C8", Offset = "0xD157C8", VA = "0xD157C8", Slot = "9")]
	protected virtual void _hide()
	{
	}

	[Token(Token = "0x6001F12")]
	[Address(RVA = "0xD112E4", Offset = "0xD112E4", VA = "0xD112E4")]
	public void hide()
	{
	}

	[Token(Token = "0x6001F13")]
	[Address(RVA = "0xD15754", Offset = "0xD15754", VA = "0xD15754")]
	[IteratorStateMachine(typeof(<showCo>d__30))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x6001F14")]
	[Address(RVA = "0xD158E4", Offset = "0xD158E4", VA = "0xD158E4")]
	[IteratorStateMachine(typeof(<downloadCo>d__31))]
	private IEnumerator<float> downloadCo(string rnxId2, int startRank, int count)
	{
		return null;
	}

	[Token(Token = "0x6001F15")]
	[Address(RVA = "0xD159B0", Offset = "0xD159B0", VA = "0xD159B0")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001F16")]
	[Address(RVA = "0xD159E8", Offset = "0xD159E8", VA = "0xD159E8")]
	private void setEntries(int firstRowIndex, int firstRank, int count)
	{
	}

	[Token(Token = "0x6001F17")]
	[Address(RVA = "0xD1567C", Offset = "0xD1567C", VA = "0xD1567C")]
	protected ExternalLeaderboard()
	{
	}
}
[Token(Token = "0x2000524")]
public class ExternalLeaderboardRow : MonoBehaviour
{
	[Token(Token = "0x2000525")]
	public delegate void FormatScore(int scoreValue, TextMeshPro textMesh);

	[Token(Token = "0x2000526")]
	public delegate void FormatReset(TextMeshPro textMesh);

	[Token(Token = "0x4001F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro rank;

	[Token(Token = "0x4001F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro name_;

	[Token(Token = "0x4001F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro name2;

	[Token(Token = "0x4001F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro score;

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0xD16824", Offset = "0xD16824", VA = "0xD16824")]
	private void setName2(string name2Txt)
	{
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0xD16990", Offset = "0xD16990", VA = "0xD16990")]
	public void set(string rankTxt, string nameTxt, string name2Txt, string scoreTxt)
	{
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0xD15CCC", Offset = "0xD15CCC", VA = "0xD15CCC")]
	public void set(int rankNum, string nameTxt, string name2Txt, int scoreValue, FormatScore scoreFormatter)
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0xD15EB8", Offset = "0xD15EB8", VA = "0xD15EB8")]
	public void reset(FormatReset resetFormatter)
	{
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0xD16A18", Offset = "0xD16A18", VA = "0xD16A18")]
	public ExternalLeaderboardRow()
	{
	}
}
[Token(Token = "0x2000527")]
public class LevelEditorLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LocalizeFormatted setName;

	[Token(Token = "0x4001F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorLeaderboard inst;

	[Token(Token = "0x4001F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomSet _customSet;

	[Token(Token = "0x6001F35")]
	[Address(RVA = "0xD16B10", Offset = "0xD16B10", VA = "0xD16B10", Slot = "10")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6001F36")]
	[Address(RVA = "0xD16B68", Offset = "0xD16B68", VA = "0xD16B68", Slot = "11")]
	public virtual void show(CustomSet customSet, OnBack onBack)
	{
	}

	[Token(Token = "0x6001F37")]
	[Address(RVA = "0xD16C0C", Offset = "0xD16C0C", VA = "0xD16C0C", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0xD16C68", Offset = "0xD16C68", VA = "0xD16C68", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F39")]
	[Address(RVA = "0xD16CD8", Offset = "0xD16CD8", VA = "0xD16CD8", Slot = "7")]
	protected override void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0xD16D4C", Offset = "0xD16D4C", VA = "0xD16D4C")]
	public LevelEditorLeaderboard()
	{
	}
}
[Token(Token = "0x2000528")]
public class MPCoOpLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPCoOpLeaderboard inst;

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0xD16D54", Offset = "0xD16D54", VA = "0xD16D54", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0xD16DAC", Offset = "0xD16DAC", VA = "0xD16DAC")]
	public void show(OnBack onBack)
	{
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0xD16DB8", Offset = "0xD16DB8", VA = "0xD16DB8", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0xD16E0C", Offset = "0xD16E0C", VA = "0xD16E0C", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F3F")]
	[Address(RVA = "0xD16E70", Offset = "0xD16E70", VA = "0xD16E70")]
	public MPCoOpLeaderboard()
	{
	}
}
[Token(Token = "0x2000529")]
public class MPVersusLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPVersusLeaderboard inst;

	[Token(Token = "0x4001F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MPVersusLeaderboardTab[] _tabs;

	[Token(Token = "0x4001F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _selectedSeasonIndex;

	[Token(Token = "0x17000547")]
	private int _lastSeasonIndex
	{
		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xD16F08", Offset = "0xD16F08", VA = "0xD16F08")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F40")]
	[Address(RVA = "0xD16E78", Offset = "0xD16E78", VA = "0xD16E78", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001F42")]
	[Address(RVA = "0xD16F64", Offset = "0xD16F64", VA = "0xD16F64")]
	public void show(OnBack onBack, int selectedSeasonIndex = -1)
	{
	}

	[Token(Token = "0x6001F43")]
	[Address(RVA = "0xD17040", Offset = "0xD17040", VA = "0xD17040")]
	private void updateTabs()
	{
	}

	[Token(Token = "0x6001F44")]
	[Address(RVA = "0xD17320", Offset = "0xD17320", VA = "0xD17320")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6001F45")]
	[Address(RVA = "0xD17324", Offset = "0xD17324", VA = "0xD17324", Slot = "9")]
	protected override void _hide()
	{
	}

	[Token(Token = "0x6001F46")]
	[Address(RVA = "0xD173D0", Offset = "0xD173D0", VA = "0xD173D0", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F47")]
	[Address(RVA = "0xD1742C", Offset = "0xD1742C", VA = "0xD1742C", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F48")]
	[Address(RVA = "0xD17538", Offset = "0xD17538", VA = "0xD17538")]
	public void onSeasonClicked(MPVersusLeaderboardTab tab)
	{
	}

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0xD17684", Offset = "0xD17684", VA = "0xD17684")]
	public MPVersusLeaderboard()
	{
	}
}
[Token(Token = "0x200052A")]
public class MPVersusLeaderboardTab : MonoBehaviour
{
	[Token(Token = "0x4001F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeInt localizedName;

	[Token(Token = "0x4001F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalizeFormatted localizedEnded;

	[Token(Token = "0x4001F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject current;

	[Token(Token = "0x4001F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _seasonIndex;

	[Token(Token = "0x17000548")]
	public int seasonIndex
	{
		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xD1768C", Offset = "0xD1768C", VA = "0xD1768C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0xD17694", Offset = "0xD17694", VA = "0xD17694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0xD170D8", Offset = "0xD170D8", VA = "0xD170D8")]
	public void show(int seasonIndex, bool selected)
	{
	}

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0xD176EC", Offset = "0xD176EC", VA = "0xD176EC")]
	private string shortYear(int year)
	{
		return null;
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0xD1780C", Offset = "0xD1780C", VA = "0xD1780C")]
	private string shortMonth(int month)
	{
		return null;
	}

	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0xD172FC", Offset = "0xD172FC", VA = "0xD172FC")]
	public void hide()
	{
	}

	[Token(Token = "0x6001F50")]
	[Address(RVA = "0xD178A8", Offset = "0xD178A8", VA = "0xD178A8")]
	public MPVersusLeaderboardTab()
	{
	}
}
[Token(Token = "0x200052B")]
public class SoloCampaignLeaderboard : SoloLeaderboard
{
	[Token(Token = "0x4001F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image setImage;

	[Token(Token = "0x4001F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LocalizeFormatted setName;

	[Token(Token = "0x4001F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] stars;

	[Token(Token = "0x4001F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro star2RequiredTime;

	[Token(Token = "0x4001F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro star3RequiredTime;

	[Token(Token = "0x4001F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloCampaignLeaderboard inst;

	[Token(Token = "0x4001F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _star2RequiredTimeFormat;

	[Token(Token = "0x4001F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _star3RequiredTimeFormat;

	[Token(Token = "0x6001F51")]
	[Address(RVA = "0xD178B0", Offset = "0xD178B0", VA = "0xD178B0", Slot = "11")]
	public override void InitSingleton()
	{
	}

	[Token(Token = "0x6001F52")]
	[Address(RVA = "0xD1790C", Offset = "0xD1790C", VA = "0xD1790C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F53")]
	[Address(RVA = "0xD179F8", Offset = "0xD179F8", VA = "0xD179F8", Slot = "12")]
	public override void show(string setId, OnBack onBack)
	{
	}

	[Token(Token = "0x6001F54")]
	[Address(RVA = "0xD17ED4", Offset = "0xD17ED4", VA = "0xD17ED4")]
	public SoloCampaignLeaderboard()
	{
	}
}
[Token(Token = "0x200052C")]
public class SoloLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected string _setId;

	[Token(Token = "0x6001F55")]
	[Address(RVA = "0xD17908", Offset = "0xD17908", VA = "0xD17908", Slot = "11")]
	public virtual void InitSingleton()
	{
	}

	[Token(Token = "0x6001F56")]
	[Address(RVA = "0xD17EA4", Offset = "0xD17EA4", VA = "0xD17EA4", Slot = "12")]
	public virtual void show(string setId, OnBack onBack)
	{
	}

	[Token(Token = "0x6001F57")]
	[Address(RVA = "0xD17EE4", Offset = "0xD17EE4", VA = "0xD17EE4", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F58")]
	[Address(RVA = "0xD17F40", Offset = "0xD17F40", VA = "0xD17F40", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F59")]
	[Address(RVA = "0xD17FB0", Offset = "0xD17FB0", VA = "0xD17FB0", Slot = "7")]
	protected override void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0xD17EDC", Offset = "0xD17EDC", VA = "0xD17EDC")]
	public SoloLeaderboard()
	{
	}
}
[Token(Token = "0x200052D")]
public class SoloMonthlyChallengeLeaderboard : SoloLeaderboard
{
	[Token(Token = "0x4001F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] headerTimeObjects;

	[Token(Token = "0x4001F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] headerScoreObjects;

	[Token(Token = "0x4001F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloMonthlyChallengeLeaderboard inst;

	[Token(Token = "0x4001F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SoloMonthlyChallengeLeaderboardTab[] _tabs;

	[Token(Token = "0x4001F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MonthlyChallenge.Time _selectedTime;

	[Token(Token = "0x17000549")]
	protected override int numTopRows
	{
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xD18024", Offset = "0xD18024", VA = "0xD18024", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0xD1802C", Offset = "0xD1802C", VA = "0xD1802C", Slot = "11")]
	public override void InitSingleton()
	{
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0xD180BC", Offset = "0xD180BC", VA = "0xD180BC")]
	public void show(OnBack onBack, [Optional] MonthlyChallenge.Time time)
	{
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0xD1870C", Offset = "0xD1870C", VA = "0xD1870C")]
	public void onChallengeClicked(SoloMonthlyChallengeLeaderboardTab tab)
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0xD18778", Offset = "0xD18778", VA = "0xD18778", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0xD187F4", Offset = "0xD187F4", VA = "0xD187F4", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0xD18884", Offset = "0xD18884", VA = "0xD18884")]
	public SoloMonthlyChallengeLeaderboard()
	{
	}
}
[Token(Token = "0x200052E")]
public class SoloMonthlyChallengeLeaderboardTab : MonoBehaviour
{
	[Token(Token = "0x4001F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro title;

	[Token(Token = "0x4001F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize localizedTitle;

	[Token(Token = "0x4001F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro description;

	[Token(Token = "0x4001F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject localizedDescription;

	[Token(Token = "0x4001F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MonthlyChallenge.Time _time;

	[Token(Token = "0x1700054A")]
	public MonthlyChallenge.Time time
	{
		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xD1888C", Offset = "0xD1888C", VA = "0xD1888C")]
		get
		{
			return default(MonthlyChallenge.Time);
		}
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0xD18894", Offset = "0xD18894", VA = "0xD18894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0xD183EC", Offset = "0xD183EC", VA = "0xD183EC")]
	public void show(MonthlyChallenge challenge, bool selected)
	{
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0xD186E8", Offset = "0xD186E8", VA = "0xD186E8")]
	public void hide()
	{
	}

	[Token(Token = "0x6001F66")]
	[Address(RVA = "0xD188EC", Offset = "0xD188EC", VA = "0xD188EC")]
	public SoloMonthlyChallengeLeaderboardTab()
	{
	}
}
[Token(Token = "0x200052F")]
public class FuseBricks : MonoBehaviour
{
	[Token(Token = "0x6001F67")]
	[Address(RVA = "0xD188F4", Offset = "0xD188F4", VA = "0xD188F4")]
	public void fuse()
	{
	}

	[Token(Token = "0x6001F68")]
	[Address(RVA = "0xD18AEC", Offset = "0xD18AEC", VA = "0xD18AEC")]
	public FuseBricks()
	{
	}
}
[Token(Token = "0x2000530")]
public class GameObjectColorerEx : GameObjectColorer
{
	[Token(Token = "0x4001F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x4001F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextMeshProUGUI _textMeshProUgui;

	[Token(Token = "0x4001F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasTMP;

	[Token(Token = "0x4001F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _hasTMPU;

	[Token(Token = "0x4001F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2Int _coords;

	[Token(Token = "0x4001F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _usingPPO;

	[Token(Token = "0x4001F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector4 _lastColor;

	[Token(Token = "0x4001F74")]
	private const float THRESH = 0.002f;

	[Token(Token = "0x4001F75")]
	private const float THRESH_SQ = 4.0000004E-06f;

	[Token(Token = "0x1700054B")]
	public override bool usingPPO
	{
		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xD18AF4", Offset = "0xD18AF4", VA = "0xD18AF4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0xD18B14", Offset = "0xD18B14", VA = "0xD18B14")]
	public GameObjectColorerEx(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0xD18E54", Offset = "0xD18E54", VA = "0xD18E54")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0xD18F78", Offset = "0xD18F78", VA = "0xD18F78", Slot = "5")]
	public override void enable(bool enabled)
	{
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0xD18FE4", Offset = "0xD18FE4", VA = "0xD18FE4", Slot = "6")]
	public override Color getColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0xD19098", Offset = "0xD19098", VA = "0xD19098", Slot = "7")]
	public override void setColor(Color color)
	{
	}
}
[Token(Token = "0x2000531")]
public class GameOverAchievementsUnlockedButton : MonoBehaviour
{
	[Token(Token = "0x2000532")]
	[CompilerGenerated]
	private sealed class <GoToPlayerProfileCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameOverAchievementsUnlockedButton <>4__this;

		[Token(Token = "0x1700054C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xD19AA8", Offset = "0xD19AA8", VA = "0xD19AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xD19AF0", Offset = "0xD19AF0", VA = "0xD19AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xD19698", Offset = "0xD19698", VA = "0xD19698")]
		[DebuggerHidden]
		public <GoToPlayerProfileCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xD19980", Offset = "0xD19980", VA = "0xD19980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xD19984", Offset = "0xD19984", VA = "0xD19984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xD19AB0", Offset = "0xD19AB0", VA = "0xD19AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Witch player buttons plate this button belongs to")]
	public PlayerID playerId;

	[Token(Token = "0x4001F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _soloUIShouldHide;

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0xD192AC", Offset = "0xD192AC", VA = "0xD192AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0xD19398", Offset = "0xD19398", VA = "0xD19398")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001F71")]
	[Address(RVA = "0xD19624", Offset = "0xD19624", VA = "0xD19624")]
	[IteratorStateMachine(typeof(<GoToPlayerProfileCo>d__4))]
	private IEnumerator<float> GoToPlayerProfileCo()
	{
		return null;
	}

	[Token(Token = "0x6001F72")]
	[Address(RVA = "0xD19408", Offset = "0xD19408", VA = "0xD19408")]
	private void ExitGameOverUI()
	{
	}

	[Token(Token = "0x6001F73")]
	[Address(RVA = "0xD19864", Offset = "0xD19864", VA = "0xD19864")]
	private void ExitGameOverUIAfterCo()
	{
	}

	[Token(Token = "0x6001F74")]
	[Address(RVA = "0xD19978", Offset = "0xD19978", VA = "0xD19978")]
	public GameOverAchievementsUnlockedButton()
	{
	}
}
[Token(Token = "0x2000533")]
public class GameOverArcadeUI : GameOverSinglePlayerUI
{
	[Serializable]
	[Token(Token = "0x2000534")]
	public class General
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xD1B3CC", Offset = "0xD1B3CC", VA = "0xD1B3CC")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000535")]
	public class Score
	{
		[Serializable]
		[Token(Token = "0x2000536")]
		public struct Stars
		{
			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject star1;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIItemTransitions star1Transitions;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro star1RequiredScore;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject star2;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIItemTransitions star2Transitions;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro star2RequiredScore;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject star3;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UIItemTransitions star3Transitions;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TextMeshPro star3RequiredScore;
		}

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizeInt score;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numWavesPlayedTexts;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeDuration[] timePlayedTexts;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject thisIsNotBest;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject thisIsBest;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Stars stars;

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xD1B3DC", Offset = "0xD1B3DC", VA = "0xD1B3DC")]
		public Score()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000537")]
	public class Stats
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro hitAccuracy;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitAccuracyNotApplicable;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeInt maxPointsPerShot;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro maxHitStreak;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro numClutchSaves;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro numBoostsTaken;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizeInt totalDamage;

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xD1B3E4", Offset = "0xD1B3E4", VA = "0xD1B3E4")]
		public Stats()
		{
		}
	}

	[Token(Token = "0x4001F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public General general;

	[Token(Token = "0x4001F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Score score;

	[Token(Token = "0x4001F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Stats stats;

	[Token(Token = "0x4001F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mainMenuButton;

	[Token(Token = "0x4001F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject restartButton;

	[Token(Token = "0x4001F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonsBGRing;

	[Token(Token = "0x4001F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverArcadeUI inst;

	[Token(Token = "0x4001F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _numWavesFormat;

	[Token(Token = "0x4001F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _star1RequiredScoreFormat;

	[Token(Token = "0x4001F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _star2RequiredScoreFormat;

	[Token(Token = "0x4001F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _star3RequiredScoreFormat;

	[Token(Token = "0x4001F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x4001F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x4001F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _numClutchSavesFormat;

	[Token(Token = "0x4001F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _numBoostsTakenFormat;

	[Token(Token = "0x4001F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _builder;

	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0xD19B4C", Offset = "0xD19B4C", VA = "0xD19B4C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0xD19F30", Offset = "0xD19F30", VA = "0xD19F30", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0xD1B2D4", Offset = "0xD1B2D4", VA = "0xD1B2D4")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0xD1B340", Offset = "0xD1B340", VA = "0xD1B340")]
	public GameOverArcadeUI()
	{
	}
}
[Token(Token = "0x2000538")]
public class GameOverMultiplayerCoOpUI : Area
{
	[Serializable]
	[Token(Token = "0x2000539")]
	public class General
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xD1C73C", Offset = "0xD1C73C", VA = "0xD1C73C")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053A")]
	public class Score
	{
		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizeInt score;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numWavesPlayedTexts;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeDuration[] timePlayedTexts;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject loading;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject thisIsNotBest;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject thisIsBest;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xD1C74C", Offset = "0xD1C74C", VA = "0xD1C74C")]
		public Score()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053B")]
	public class PlayerObjects
	{
		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject menu;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem rematchButton;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem addFriendButton;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TouchItem doneButton;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xD1C754", Offset = "0xD1C754", VA = "0xD1C754")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x200053C")]
	[CompilerGenerated]
	private sealed class <showLeaderboardDependentInfo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameOverMultiplayerCoOpUI <>4__this;

		[Token(Token = "0x17000553")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xD1C9AC", Offset = "0xD1C9AC", VA = "0xD1C9AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000554")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xD1C9F4", Offset = "0xD1C9F4", VA = "0xD1C9F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xD1BB08", Offset = "0xD1BB08", VA = "0xD1BB08")]
		[DebuggerHidden]
		public <showLeaderboardDependentInfo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xD1C75C", Offset = "0xD1C75C", VA = "0xD1C75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xD1C760", Offset = "0xD1C760", VA = "0xD1C760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xD1C9B4", Offset = "0xD1C9B4", VA = "0xD1C9B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053D")]
	[CompilerGenerated]
	private sealed class <SayTeamBestDelayed>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000555")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xD1CB0C", Offset = "0xD1CB0C", VA = "0xD1CB0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000556")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xD1CB54", Offset = "0xD1CB54", VA = "0xD1CB54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xD1BB90", Offset = "0xD1BB90", VA = "0xD1BB90")]
		[DebuggerHidden]
		public <SayTeamBestDelayed>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xD1CA50", Offset = "0xD1CA50", VA = "0xD1CA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xD1CA54", Offset = "0xD1CA54", VA = "0xD1CA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xD1CB14", Offset = "0xD1CB14", VA = "0xD1CB14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LeaderBoardUI leaderBoard;

	[Token(Token = "0x4001FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public General general;

	[Token(Token = "0x4001FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Score score;

	[Token(Token = "0x4001FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerObjects player1;

	[Token(Token = "0x4001FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayerObjects player2;

	[Token(Token = "0x4001FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverMultiplayerCoOpUI inst;

	[Token(Token = "0x4001FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _numWavesFormat;

	[Token(Token = "0x4001FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _selectedByCode;

	[Token(Token = "0x4001FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerObjects _opponentObjects;

	[Token(Token = "0x4001FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CoroutineHandle _showLeaderboardDependentInfoCo;

	[Token(Token = "0x1700054E")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xD1B3EC", Offset = "0xD1B3EC", VA = "0xD1B3EC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700054F")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xD1B3F4", Offset = "0xD1B3F4", VA = "0xD1B3F4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000550")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xD1B3FC", Offset = "0xD1B3FC", VA = "0xD1B3FC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000551")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xD1B404", Offset = "0xD1B404", VA = "0xD1B404", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000552")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xD1B40C", Offset = "0xD1B40C", VA = "0xD1B40C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001F88")]
	[Address(RVA = "0xD1B414", Offset = "0xD1B414", VA = "0xD1B414", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F89")]
	[Address(RVA = "0xD1B53C", Offset = "0xD1B53C", VA = "0xD1B53C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0xD1BA94", Offset = "0xD1BA94", VA = "0xD1BA94")]
	[IteratorStateMachine(typeof(<showLeaderboardDependentInfo>d__25))]
	private IEnumerator<float> showLeaderboardDependentInfo()
	{
		return null;
	}

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0xD1BB30", Offset = "0xD1BB30", VA = "0xD1BB30")]
	[IteratorStateMachine(typeof(<SayTeamBestDelayed>d__26))]
	private IEnumerator<float> SayTeamBestDelayed()
	{
		return null;
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0xD1BBB8", Offset = "0xD1BBB8", VA = "0xD1BBB8")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0xD1B9D4", Offset = "0xD1B9D4", VA = "0xD1B9D4")]
	private void initPlayerObjs(PlayerObjects player, bool me)
	{
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0xD1BC24", Offset = "0xD1BC24", VA = "0xD1BC24")]
	private void enableButton(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0xD1BC8C", Offset = "0xD1BC8C", VA = "0xD1BC8C")]
	private void makeButtonInteractive(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001F90")]
	[Address(RVA = "0xD1BCA8", Offset = "0xD1BCA8", VA = "0xD1BCA8")]
	private bool DetermineWhetherCanAddFriend()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F91")]
	[Address(RVA = "0xD1BDF8", Offset = "0xD1BDF8", VA = "0xD1BDF8", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001F92")]
	[Address(RVA = "0xD1BEA8", Offset = "0xD1BEA8", VA = "0xD1BEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F93")]
	[Address(RVA = "0xD1C058", Offset = "0xD1C058", VA = "0xD1C058")]
	private void checkRematch()
	{
	}

	[Token(Token = "0x6001F94")]
	[Address(RVA = "0xD1C24C", Offset = "0xD1C24C", VA = "0xD1C24C")]
	private void doRematch()
	{
	}

	[Token(Token = "0x6001F95")]
	[Address(RVA = "0xD1C36C", Offset = "0xD1C36C", VA = "0xD1C36C")]
	public void onRematchSelected(int playerIdNum)
	{
	}

	[Token(Token = "0x6001F96")]
	[Address(RVA = "0xD1C504", Offset = "0xD1C504", VA = "0xD1C504")]
	private void iWantRematch()
	{
	}

	[Token(Token = "0x6001F97")]
	[Address(RVA = "0xD19768", Offset = "0xD19768", VA = "0xD19768")]
	public void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001F98")]
	[Address(RVA = "0xD1C56C", Offset = "0xD1C56C", VA = "0xD1C56C")]
	public void onAddFriendClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001F99")]
	[Address(RVA = "0xD1C6BC", Offset = "0xD1C6BC", VA = "0xD1C6BC")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0xD1C734", Offset = "0xD1C734", VA = "0xD1C734")]
	public GameOverMultiplayerCoOpUI()
	{
	}
}
[Token(Token = "0x200053E")]
public class GameOverMultiplayerVersusUI : Area
{
	[Serializable]
	[Token(Token = "0x200053F")]
	public class General
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject normalTitle;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject victoryByDefaultTitle;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lostByDefaultTitle;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject phase1;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject phase2;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LeaderBoardUI leaderBoard;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xD1E9C4", Offset = "0xD1E9C4", VA = "0xD1E9C4")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000540")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x2000541")]
		public class Stats
		{
			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro hitAccuracy;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject hitAccuracyNotApplicable;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeInt maxPointsPerShot;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro maxHitStreak;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LocalizeInt totalPoints;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro timeInLead;

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xD1E9DC", Offset = "0xD1E9DC", VA = "0xD1E9DC")]
			public Stats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000542")]
		public class Phase1
		{
			[Serializable]
			[Token(Token = "0x2000543")]
			public class Ranked
			{
				[Token(Token = "0x4001FDF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject menu;

				[Token(Token = "0x4001FE0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TouchItem addFriendButton;

				[Token(Token = "0x4001FE1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TouchItem doneButton;

				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0xD1E9EC", Offset = "0xD1E9EC", VA = "0xD1E9EC")]
				public Ranked()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000544")]
			public class Friendly
			{
				[Token(Token = "0x4001FE2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject menu;

				[Token(Token = "0x4001FE3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TouchItem rematchButton;

				[Token(Token = "0x4001FE4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TouchItem doneButton;

				[Token(Token = "0x6001FCA")]
				[Address(RVA = "0xD1E9F4", Offset = "0xD1E9F4", VA = "0xD1E9F4")]
				public Friendly()
				{
				}
			}

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ranked ranked;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Friendly friendly;

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xD1E9E4", Offset = "0xD1E9E4", VA = "0xD1E9E4")]
			public Phase1()
			{
			}
		}

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject win;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stats stats;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Phase1 phase1;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject phase2Menu;

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xD1E9D4", Offset = "0xD1E9D4", VA = "0xD1E9D4")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x2000545")]
	private struct PlayerFormats
	{
		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string hitAccuracy;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string maxHitStreak;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string timeInLead;
	}

	[Token(Token = "0x4001FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public General general;

	[Token(Token = "0x4001FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerObjects player1;

	[Token(Token = "0x4001FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerObjects player2;

	[Token(Token = "0x4001FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverMultiplayerVersusUI inst;

	[Token(Token = "0x4001FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MultiplayerScoreboardUI _scoreboard;

	[Token(Token = "0x4001FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerFormats _player1Formats;

	[Token(Token = "0x4001FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerFormats _player2Formats;

	[Token(Token = "0x4001FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _imPlayer1;

	[Token(Token = "0x4001FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _imPlayer2;

	[Token(Token = "0x4001FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerObjects _opponentObjects;

	[Token(Token = "0x4001FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _selectedByCode;

	[Token(Token = "0x17000557")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xD1CBB0", Offset = "0xD1CBB0", VA = "0xD1CBB0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000558")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xD1CBB8", Offset = "0xD1CBB8", VA = "0xD1CBB8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000559")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xD1CBC0", Offset = "0xD1CBC0", VA = "0xD1CBC0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700055A")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xD1CBC8", Offset = "0xD1CBC8", VA = "0xD1CBC8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700055B")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xD1CBD0", Offset = "0xD1CBD0", VA = "0xD1CBD0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700055C")]
	private bool isFriendly
	{
		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xD1CBD8", Offset = "0xD1CBD8", VA = "0xD1CBD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700055D")]
	private bool isRanked
	{
		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xD1CC2C", Offset = "0xD1CC2C", VA = "0xD1CC2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0xD1CC80", Offset = "0xD1CC80", VA = "0xD1CC80", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0xD1CDC0", Offset = "0xD1CDC0", VA = "0xD1CDC0")]
	private void getPlayerTextFormats(PlayerObjects.Stats objects, out PlayerFormats formats)
	{
	}

	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0xD1CE60", Offset = "0xD1CE60", VA = "0xD1CE60", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0xD1D0E4", Offset = "0xD1D0E4", VA = "0xD1D0E4")]
	private void initPlayerObjs(PlayerID playerId)
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0xD1D8DC", Offset = "0xD1D8DC", VA = "0xD1D8DC")]
	private bool DetermineWhetherCanAddFriend()
	{
		return default(bool);
	}

	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0xD1DA2C", Offset = "0xD1DA2C", VA = "0xD1DA2C")]
	private void enableButton(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0xD1DA94", Offset = "0xD1DA94", VA = "0xD1DA94")]
	private void makeButtonInteractive(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0xD1DAB0", Offset = "0xD1DAB0", VA = "0xD1DAB0")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0xD1DB1C", Offset = "0xD1DB1C", VA = "0xD1DB1C", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001FBA")]
	[Address(RVA = "0xD1DC00", Offset = "0xD1DC00", VA = "0xD1DC00")]
	private void Update()
	{
	}

	[Token(Token = "0x6001FBB")]
	[Address(RVA = "0xD1DE50", Offset = "0xD1DE50", VA = "0xD1DE50")]
	private void checkRematch()
	{
	}

	[Token(Token = "0x6001FBC")]
	[Address(RVA = "0xD1E3CC", Offset = "0xD1E3CC", VA = "0xD1E3CC")]
	private void doRematch()
	{
	}

	[Token(Token = "0x6001FBD")]
	[Address(RVA = "0xD1E520", Offset = "0xD1E520", VA = "0xD1E520")]
	public void onRematchSelected(int playerIdNum)
	{
	}

	[Token(Token = "0x6001FBE")]
	[Address(RVA = "0xD1E6B8", Offset = "0xD1E6B8", VA = "0xD1E6B8")]
	private void iWantRematch()
	{
	}

	[Token(Token = "0x6001FBF")]
	[Address(RVA = "0xD1E078", Offset = "0xD1E078", VA = "0xD1E078")]
	public void onPhase1DoneClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0xD196C0", Offset = "0xD196C0", VA = "0xD196C0")]
	public void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001FC1")]
	[Address(RVA = "0xD1E720", Offset = "0xD1E720", VA = "0xD1E720")]
	public void onAddFriendClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001FC2")]
	[Address(RVA = "0xD1E870", Offset = "0xD1E870", VA = "0xD1E870")]
	public void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0xD1E944", Offset = "0xD1E944", VA = "0xD1E944")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0xD1E9BC", Offset = "0xD1E9BC", VA = "0xD1E9BC")]
	public GameOverMultiplayerVersusUI()
	{
	}
}
[Token(Token = "0x2000546")]
public class GameOverSinglePlayerUI : MonoBehaviour
{
	[Token(Token = "0x4001FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardUI leaderBoard;

	[Token(Token = "0x4001FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool _shown;

	[Token(Token = "0x4001FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x1700055E")]
	public bool Shown
	{
		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xD1E9FC", Offset = "0xD1E9FC", VA = "0xD1E9FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0xD19D70", Offset = "0xD19D70", VA = "0xD19D70", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0xD1EA04", Offset = "0xD1EA04", VA = "0xD1EA04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0xD1B0AC", Offset = "0xD1B0AC", VA = "0xD1B0AC", Slot = "5")]
	public virtual void show()
	{
	}

	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0xD1EA74", Offset = "0xD1EA74", VA = "0xD1EA74", Slot = "6")]
	public virtual void hide()
	{
	}

	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0xD1EA0C", Offset = "0xD1EA0C", VA = "0xD1EA0C")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0xD1EBC4", Offset = "0xD1EBC4", VA = "0xD1EBC4", Slot = "7")]
	public virtual void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001FD2")]
	[Address(RVA = "0xD1ECA0", Offset = "0xD1ECA0", VA = "0xD1ECA0", Slot = "8")]
	public virtual void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0xD1ECB0", Offset = "0xD1ECB0", VA = "0xD1ECB0", Slot = "9")]
	protected virtual void goBackToMainMenu(bool reportFollowUp = true)
	{
	}

	[Token(Token = "0x6001FD4")]
	[Address(RVA = "0xD1ED80", Offset = "0xD1ED80", VA = "0xD1ED80")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001FD5")]
	[Address(RVA = "0xD1ED84", Offset = "0xD1ED84", VA = "0xD1ED84")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001FD6")]
	[Address(RVA = "0xD1EDF4", Offset = "0xD1EDF4", VA = "0xD1EDF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001FD7")]
	[Address(RVA = "0xD1B348", Offset = "0xD1B348", VA = "0xD1B348")]
	public GameOverSinglePlayerUI()
	{
	}
}
[Token(Token = "0x2000547")]
public class GameOverSoloMonthlyChallengeUI : GameOverSoloUI
{
	[Token(Token = "0x4001FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSoloMonthlyChallengeUI inst;

	[Token(Token = "0x6001FD8")]
	[Address(RVA = "0xD1EEC8", Offset = "0xD1EEC8", VA = "0xD1EEC8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001FD9")]
	[Address(RVA = "0xD1F00C", Offset = "0xD1F00C", VA = "0xD1F00C", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001FDA")]
	[Address(RVA = "0xD20578", Offset = "0xD20578", VA = "0xD20578", Slot = "6")]
	public override void hide()
	{
	}

	[Token(Token = "0x6001FDB")]
	[Address(RVA = "0xD20638", Offset = "0xD20638", VA = "0xD20638", Slot = "10")]
	protected override bool canPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6001FDC")]
	[Address(RVA = "0xD206E8", Offset = "0xD206E8", VA = "0xD206E8")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x6001FDD")]
	[Address(RVA = "0xD20778", Offset = "0xD20778", VA = "0xD20778")]
	public GameOverSoloMonthlyChallengeUI()
	{
	}
}
[Token(Token = "0x2000548")]
public class GameOverSoloNormalUI : GameOverSoloUI
{
	[Token(Token = "0x4001FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSoloNormalUI inst;

	[Token(Token = "0x6001FDE")]
	[Address(RVA = "0xD20788", Offset = "0xD20788", VA = "0xD20788", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001FDF")]
	[Address(RVA = "0xD207E8", Offset = "0xD207E8", VA = "0xD207E8")]
	public void OnBackToEditorClicked()
	{
	}

	[Token(Token = "0x6001FE0")]
	[Address(RVA = "0xD20884", Offset = "0xD20884", VA = "0xD20884")]
	public void OnEditorNextClicked()
	{
	}

	[Token(Token = "0x6001FE1")]
	[Address(RVA = "0xD20954", Offset = "0xD20954", VA = "0xD20954")]
	public void OnEditorVoteSelected()
	{
	}

	[Token(Token = "0x6001FE2")]
	[Address(RVA = "0xD20ABC", Offset = "0xD20ABC", VA = "0xD20ABC")]
	public void OnEditorVoteUnselected()
	{
	}

	[Token(Token = "0x6001FE3")]
	[Address(RVA = "0xD20C24", Offset = "0xD20C24", VA = "0xD20C24")]
	private void OnVoteForMCResponse(bool success, bool changed)
	{
	}

	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0xD20D00", Offset = "0xD20D00", VA = "0xD20D00")]
	public GameOverSoloNormalUI()
	{
	}
}
[Token(Token = "0x2000549")]
public abstract class GameOverSoloUI : GameOverSinglePlayerUI
{
	[Serializable]
	[Token(Token = "0x200054A")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x200054B")]
		public class NormalPanelWithNext
		{
			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image setImageOutline;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image setImage;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro setName;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro setNumber;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject newIndicator;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextMeshPro noNextSetAvailable;

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xD45144", Offset = "0xD45144", VA = "0xD45144")]
			public NormalPanelWithNext()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		public class NormalPanelWithoutNext
		{
			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TouchItem againButton;

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xD4514C", Offset = "0xD4514C", VA = "0xD4514C")]
			public NormalPanelWithoutNext()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054D")]
		public class EditorPanelPublic
		{
			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIItemTransitions voteButton;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions nextButton;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizeFormatted setNumText;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LocalizeFormatted authorNameText;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro nextSetNumber;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizeFormatted nextAuthorName;

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xD45154", Offset = "0xD45154", VA = "0xD45154")]
			public EditorPanelPublic()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054E")]
		public class EditorPanelPrivate
		{
			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xD4515C", Offset = "0xD4515C", VA = "0xD4515C")]
			public EditorPanelPrivate()
			{
			}
		}

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] statsPanels;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIItemTransitions[] leaderboardPanels;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sidePanelsDelay;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NormalPanelWithNext normalPanelWithNext;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NormalPanelWithoutNext normalPanelWithoutNext;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject celebrationsPanel;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EditorPanelPublic editorPanelPublic;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EditorPanelPrivate editorPanelPrivate;

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xD45134", Offset = "0xD45134", VA = "0xD45134")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200054F")]
	public struct Score
	{
		[Serializable]
		[Token(Token = "0x2000550")]
		public struct Incomplete
		{
			[Serializable]
			[Token(Token = "0x2000551")]
			public struct OldBest
			{
				[Token(Token = "0x400201A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;

				[Token(Token = "0x400201B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public TextMeshPro progress;

				[Token(Token = "0x400201C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public LocalizeDuration time;
			}

			[Serializable]
			[Token(Token = "0x2000552")]
			public struct NewBest
			{
				[Token(Token = "0x400201D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;
			}

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizeDuration time;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro progress;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GraphBar progresBar;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OldBest oldBest;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NewBest newBest;
		}

		[Serializable]
		[Token(Token = "0x2000553")]
		public struct Complete
		{
			[Serializable]
			[Token(Token = "0x2000554")]
			public struct OldBest
			{
				[Token(Token = "0x4002022")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;

				[Token(Token = "0x4002023")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public LocalizeDuration time;
			}

			[Serializable]
			[Token(Token = "0x2000555")]
			public struct NewBest
			{
				[Token(Token = "0x4002024")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;
			}

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizeDuration time;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OldBest oldBest;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewBest newBest;
		}

		[Serializable]
		[Token(Token = "0x2000556")]
		public struct Stars
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject star1;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIItemTransitions star1Transitions;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject star2;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions star2Transitions;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizeDuration star2RequiredTime;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject star3;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UIItemTransitions star3Transitions;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizeDuration star3RequiredTime;
		}

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Incomplete incomplete;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Complete complete;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Stars stars;
	}

	[Serializable]
	[Token(Token = "0x2000557")]
	public class Stats
	{
		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro hitAccuracy;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitAccuracyNotApplicable;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeInt maxPointsPerShot;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro maxHitStreak;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro numClutchSaves;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizeInt totalPoints;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro numBoostsTaken;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizeInt totalDamage;

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xD45164", Offset = "0xD45164", VA = "0xD45164")]
		public Stats()
		{
		}
	}

	[Token(Token = "0x2000558")]
	private enum NextAction
	{
		[Token(Token = "0x4002037")]
		None,
		[Token(Token = "0x4002038")]
		PlayNextSet,
		[Token(Token = "0x4002039")]
		StageCompleteCelebration,
		[Token(Token = "0x400203A")]
		AllSetsCompleteCelebration
	}

	[Token(Token = "0x4001FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public General general;

	[Token(Token = "0x4001FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Score score;

	[Token(Token = "0x4001FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Stats stats;

	[Token(Token = "0x4001FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x4001FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x4001FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string _numClutchSavesFormat;

	[Token(Token = "0x4001FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string _numBoostsTakenFormat;

	[Token(Token = "0x4001FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NextAction _nextAction;

	[Token(Token = "0x4001FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string _nextSetId;

	[Token(Token = "0x4001FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected CustomSet _curCustomSetMeta;

	[Token(Token = "0x4001FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected CustomSet _nextCustomSetMeta;

	[Token(Token = "0x1700055F")]
	private SinglePlayerArena arena
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xD20D08", Offset = "0xD20D08", VA = "0xD20D08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001FE6")]
	[Address(RVA = "0xD1EF28", Offset = "0xD1EF28", VA = "0xD1EF28", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0xD1F0CC", Offset = "0xD1F0CC", VA = "0xD1F0CC", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001FE8")]
	[Address(RVA = "0xD21468", Offset = "0xD21468", VA = "0xD21468", Slot = "10")]
	protected virtual bool canPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE9")]
	[Address(RVA = "0xD206EC", Offset = "0xD206EC", VA = "0xD206EC")]
	protected void updateAgainButton()
	{
	}

	[Token(Token = "0x6001FEA")]
	[Address(RVA = "0xD2108C", Offset = "0xD2108C", VA = "0xD2108C")]
	private void showNoNextSetAvailable()
	{
	}

	[Token(Token = "0x6001FEB")]
	[Address(RVA = "0xD211BC", Offset = "0xD211BC", VA = "0xD211BC")]
	private void showNextSet()
	{
	}

	[Token(Token = "0x6001FEC")]
	[Address(RVA = "0xD21470", Offset = "0xD21470", VA = "0xD21470")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001FED")]
	[Address(RVA = "0xD2153C", Offset = "0xD2153C", VA = "0xD2153C")]
	public void onNextClicked()
	{
	}

	[Token(Token = "0x6001FEE")]
	[Address(RVA = "0xD215F0", Offset = "0xD215F0", VA = "0xD215F0")]
	public void onCelebrationDoneClicked()
	{
	}

	[Token(Token = "0x6001FEF")]
	[Address(RVA = "0xD20DA4", Offset = "0xD20DA4", VA = "0xD20DA4")]
	private NextAction determineNextAction(out string nextSetId)
	{
		return default(NextAction);
	}

	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0xD2169C", Offset = "0xD2169C", VA = "0xD2169C", Slot = "7")]
	public override void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0xD20780", Offset = "0xD20780", VA = "0xD20780")]
	protected GameOverSoloUI()
	{
	}
}
[Token(Token = "0x2000559")]
public class GameOverZenUI : GameOverSinglePlayerUI
{
	[Token(Token = "0x400203B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mainMenuButton;

	[Token(Token = "0x400203C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverZenUI inst;

	[Token(Token = "0x6001FFA")]
	[Address(RVA = "0xD4516C", Offset = "0xD4516C", VA = "0xD4516C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6001FFB")]
	[Address(RVA = "0xD451D0", Offset = "0xD451D0", VA = "0xD451D0", Slot = "7")]
	public override void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001FFC")]
	[Address(RVA = "0xD45244", Offset = "0xD45244", VA = "0xD45244", Slot = "9")]
	protected override void goBackToMainMenu(bool reportFollowUp = true)
	{
	}

	[Token(Token = "0x6001FFD")]
	[Address(RVA = "0xD452BC", Offset = "0xD452BC", VA = "0xD452BC")]
	public GameOverZenUI()
	{
	}
}
[Token(Token = "0x200055A")]
public static class GameUIHideHelper
{
	[Token(Token = "0x6001FFE")]
	[Address(RVA = "0xD452C4", Offset = "0xD452C4", VA = "0xD452C4")]
	public static void HideGameOverUIs()
	{
	}
}
[Token(Token = "0x200055B")]
[RequireComponent(typeof(Image))]
public class GraphBar : MonoBehaviour
{
	[Token(Token = "0x400203D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _material;

	[Token(Token = "0x400203E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _nameID;

	[Token(Token = "0x400203F")]
	private const string propertyName = "_Progress";

	[Token(Token = "0x17000560")]
	public float percentage
	{
		[Token(Token = "0x6002000")]
		[Address(RVA = "0xD4556C", Offset = "0xD4556C", VA = "0xD4556C")]
		set
		{
		}
	}

	[Token(Token = "0x6001FFF")]
	[Address(RVA = "0xD45464", Offset = "0xD45464", VA = "0xD45464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002001")]
	[Address(RVA = "0xD45608", Offset = "0xD45608", VA = "0xD45608")]
	public GraphBar()
	{
	}
}
[Token(Token = "0x200055C")]
public class HighScoreTable : MonoBehaviour
{
	[Token(Token = "0x200055D")]
	public class ScoreEntry
	{
		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _score;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xD457A4", Offset = "0xD457A4", VA = "0xD457A4")]
		public ScoreEntry()
		{
		}
	}

	[Token(Token = "0x4002040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighScoreTable inst;

	[Token(Token = "0x4002041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScoreEntry[] _scoreTable;

	[Token(Token = "0x4002042")]
	private const int _numScoreEntries = 5;

	[Token(Token = "0x4002043")]
	private const string _userPrefTableNamePrefix = "user_name_";

	[Token(Token = "0x4002044")]
	private const string _userPrefTableScorePrefix = "user_score_";

	[Token(Token = "0x4002045")]
	private const int _version = 113;

	[Token(Token = "0x4002046")]
	private const string _versionKey = "version";

	[Token(Token = "0x6002002")]
	[Address(RVA = "0xD45610", Offset = "0xD45610", VA = "0xD45610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002003")]
	[Address(RVA = "0xD457AC", Offset = "0xD457AC", VA = "0xD457AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6002004")]
	[Address(RVA = "0xD459CC", Offset = "0xD459CC", VA = "0xD459CC")]
	private void CheckVersion()
	{
	}

	[Token(Token = "0x6002005")]
	[Address(RVA = "0xD45A2C", Offset = "0xD45A2C", VA = "0xD45A2C")]
	public void ClearScores()
	{
	}

	[Token(Token = "0x6002006")]
	[Address(RVA = "0xD457B0", Offset = "0xD457B0", VA = "0xD457B0")]
	public void Load()
	{
	}

	[Token(Token = "0x6002007")]
	[Address(RVA = "0xD45AE4", Offset = "0xD45AE4", VA = "0xD45AE4")]
	public void Save()
	{
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0xD45C24", Offset = "0xD45C24", VA = "0xD45C24")]
	public bool IsHighScore(int score)
	{
		return default(bool);
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0xD45C68", Offset = "0xD45C68", VA = "0xD45C68")]
	public int AddNewHighScoreAndGetRank(int score, string name = "- - -")
	{
		return default(int);
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0xD45E50", Offset = "0xD45E50", VA = "0xD45E50")]
	public void UpdateScoreName(int rank, string newName)
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0xD45F14", Offset = "0xD45F14", VA = "0xD45F14")]
	public ScoreEntry[] GetScoreTable()
	{
		return null;
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0xD45F1C", Offset = "0xD45F1C", VA = "0xD45F1C")]
	public HighScoreTable()
	{
	}
}
[Token(Token = "0x200055E")]
public class HowToPlayUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055F")]
	public class Page
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString title;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite image;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color imageColor;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString[] texts;

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xD47B84", Offset = "0xD47B84", VA = "0xD47B84")]
		public Page()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000560")]
	public class Topic
	{
		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString name;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Page[] pages;

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xD47B8C", Offset = "0xD47B8C", VA = "0xD47B8C")]
		public Topic()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000561")]
	public class Elements
	{
		[Serializable]
		[Token(Token = "0x2000562")]
		public class PageElements
		{
			[Serializable]
			[Token(Token = "0x2000563")]
			public class Paragraphs
			{
				[Token(Token = "0x4002069")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int maxNumParagraphs;

				[Token(Token = "0x400206A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float indent;

				[Token(Token = "0x400206B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Tooltip("Row height when measuring extent of text box")]
				public float measuredRowHeight;

				[Token(Token = "0x400206C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				[Tooltip("Row height when positioning rect transform")]
				public float rowHeight;

				[Token(Token = "0x400206D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float padRowsBetweenParagraphs;

				[Token(Token = "0x600202C")]
				[Address(RVA = "0xD47BAC", Offset = "0xD47BAC", VA = "0xD47BAC")]
				public Paragraphs()
				{
				}
			}

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize title;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image icon;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro text;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Paragraphs paragraphs;

			[Token(Token = "0x600202B")]
			[Address(RVA = "0xD47BA4", Offset = "0xD47BA4", VA = "0xD47BA4")]
			public PageElements()
			{
			}
		}

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PageElements page;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PageButton page1Button;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxNumPages;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TouchItem startOrNextButton;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString startButtonText;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString nextButtonText;

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xD47B94", Offset = "0xD47B94", VA = "0xD47B94")]
		public Elements()
		{
		}
	}

	[Token(Token = "0x2000564")]
	public delegate void OnDone();

	[Token(Token = "0x2000565")]
	private enum Mode
	{
		[Token(Token = "0x400206F")]
		Undefine,
		[Token(Token = "0x4002070")]
		Welcome,
		[Token(Token = "0x4002071")]
		Topic
	}

	[Token(Token = "0x4002049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x400204A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HowToPlayUI inst;

	[Token(Token = "0x400204B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Page welcomePage;

	[Token(Token = "0x400204C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Topic[] topics;

	[Token(Token = "0x400204D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Elements elements;

	[Token(Token = "0x400204E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LocalizeEx _startOrNextButtonLoc;

	[Token(Token = "0x400204F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIItemTransitions _startOrNextButtonTransitions;

	[Token(Token = "0x4002050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DynamicListMenu topicsList;

	[Token(Token = "0x4002051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _shown;

	[Token(Token = "0x4002052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _openedViaOptions;

	[Token(Token = "0x4002053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnDone _onDone;

	[Token(Token = "0x4002054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<TextMeshPro> _textBoxes;

	[Token(Token = "0x4002055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PageButton> _pageButtons;

	[Token(Token = "0x4002056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mode _mode;

	[Token(Token = "0x4002057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _curTopic;

	[Token(Token = "0x4002058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _curPage;

	[Token(Token = "0x17000561")]
	public bool shown
	{
		[Token(Token = "0x600200E")]
		[Address(RVA = "0xD45F24", Offset = "0xD45F24", VA = "0xD45F24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0xD45F2C", Offset = "0xD45F2C", VA = "0xD45F2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0xD46748", Offset = "0xD46748", VA = "0xD46748")]
	private void initTopicsList()
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0xD46120", Offset = "0xD46120", VA = "0xD46120")]
	private void createTextBoxes()
	{
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0xD463D0", Offset = "0xD463D0", VA = "0xD463D0")]
	private void createPageButtons()
	{
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0xD468C4", Offset = "0xD468C4", VA = "0xD468C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0xD46948", Offset = "0xD46948", VA = "0xD46948")]
	public void show(bool openedViaOptions, OnDone onDone)
	{
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0xD46DE0", Offset = "0xD46DE0", VA = "0xD46DE0")]
	private void resetTopicsList()
	{
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0xD46E38", Offset = "0xD46E38", VA = "0xD46E38")]
	private void showWelcome()
	{
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0xD47094", Offset = "0xD47094", VA = "0xD47094")]
	private void chooseTopic(int topic)
	{
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0xD470B4", Offset = "0xD470B4", VA = "0xD470B4")]
	private void showTopic(int topic)
	{
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0xD470C4", Offset = "0xD470C4", VA = "0xD470C4")]
	private void showTopicPage(int page)
	{
	}

	[Token(Token = "0x600201A")]
	[Address(RVA = "0xD471A8", Offset = "0xD471A8", VA = "0xD471A8")]
	private void selectCurrentPageButton()
	{
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0xD472AC", Offset = "0xD472AC", VA = "0xD472AC")]
	private bool isLastPageOfTopic()
	{
		return default(bool);
	}

	[Token(Token = "0x600201C")]
	[Address(RVA = "0xD47274", Offset = "0xD47274", VA = "0xD47274")]
	private bool isLastPage()
	{
		return default(bool);
	}

	[Token(Token = "0x600201D")]
	[Address(RVA = "0xD46F04", Offset = "0xD46F04", VA = "0xD46F04")]
	private void showPage(Page page)
	{
	}

	[Token(Token = "0x600201E")]
	[Address(RVA = "0xD47300", Offset = "0xD47300", VA = "0xD47300")]
	private void showTexts(LocalizedString[] texts)
	{
	}

	[Token(Token = "0x600201F")]
	[Address(RVA = "0xD46FA8", Offset = "0xD46FA8", VA = "0xD46FA8")]
	private void showPageButtons(int numPages)
	{
	}

	[Token(Token = "0x6002020")]
	[Address(RVA = "0xD477E4", Offset = "0xD477E4", VA = "0xD477E4")]
	public void hide(bool byForce = false)
	{
	}

	[Token(Token = "0x6002021")]
	[Address(RVA = "0xD468E0", Offset = "0xD468E0", VA = "0xD468E0")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6002022")]
	[Address(RVA = "0xD479E0", Offset = "0xD479E0", VA = "0xD479E0")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6002023")]
	[Address(RVA = "0xD479E8", Offset = "0xD479E8", VA = "0xD479E8")]
	private void onBack()
	{
	}

	[Token(Token = "0x6002024")]
	[Address(RVA = "0xD479F0", Offset = "0xD479F0", VA = "0xD479F0")]
	private void onTopicsSelected(int topic)
	{
	}

	[Token(Token = "0x6002025")]
	[Address(RVA = "0xD47A00", Offset = "0xD47A00", VA = "0xD47A00")]
	public void onClickNext()
	{
	}

	[Token(Token = "0x6002026")]
	[Address(RVA = "0xD47B28", Offset = "0xD47B28", VA = "0xD47B28")]
	public void onPageSelected(TextMeshPro text)
	{
	}

	[Token(Token = "0x6002027")]
	[Address(RVA = "0xD47B7C", Offset = "0xD47B7C", VA = "0xD47B7C")]
	public HowToPlayUI()
	{
	}
}
[Token(Token = "0x2000567")]
public abstract class KnobBase : MonoBehaviour, Knob.IControlee
{
	[Token(Token = "0x2000568")]
	protected struct FormattedText
	{
		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool localized;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string textOrTerm;

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xD48404", Offset = "0xD48404", VA = "0xD48404")]
		public static FormattedText NewFixed(string text)
		{
			return default(FormattedText);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xD48430", Offset = "0xD48430", VA = "0xD48430")]
		public static FormattedText NewLocalized(LocalizedString locString)
		{
			return default(FormattedText);
		}
	}

	[Token(Token = "0x4002074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Knob knob;

	[Token(Token = "0x4002075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro valueText;

	[Token(Token = "0x4002076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Localize valueLocalizedText;

	[Token(Token = "0x4002077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer amplitudeRenderer;

	[Token(Token = "0x4002078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rotationTarget;

	[Token(Token = "0x4002079")]
	private const string amplitudeProperty = "_Amplitude";

	[Token(Token = "0x400207A")]
	private const string litBrightnessProperty = "_LitBrightness";

	[Token(Token = "0x400207B")]
	private const string colorOffProperty = "_ColorOff";

	[Token(Token = "0x400207C")]
	private const string colorOnProperty = "_ColorOn";

	[Token(Token = "0x400207D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int _amplitudePropId;

	[Token(Token = "0x400207E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _litBrightnessPropId;

	[Token(Token = "0x400207F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _amplitude;

	[Token(Token = "0x4002080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float _snappedAmplitude;

	[Token(Token = "0x4002081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _colorOff;

	[Token(Token = "0x4002082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _colorOn;

	[Token(Token = "0x17000562")]
	protected Material amplitudeMaterial
	{
		[Token(Token = "0x6002033")]
		[Address(RVA = "0xD47D00", Offset = "0xD47D00", VA = "0xD47D00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002034")]
	[Address(RVA = "0xD47D1C", Offset = "0xD47D1C", VA = "0xD47D1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0xD47E18", Offset = "0xD47E18", VA = "0xD47E18", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6002036")]
	public abstract float getAmplitude();

	[Token(Token = "0x6002037")]
	[Address(RVA = "0xD47EE0", Offset = "0xD47EE0", VA = "0xD47EE0", Slot = "8")]
	public virtual void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6002038")]
	[Address(RVA = "0xD4808C", Offset = "0xD4808C", VA = "0xD4808C")]
	public void UpdateAmplitudeText()
	{
	}

	[Token(Token = "0x6002039")]
	[Address(RVA = "0xD48214", Offset = "0xD48214", VA = "0xD48214", Slot = "9")]
	protected virtual bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x600203A")]
	protected abstract FormattedText formatText(float snappedAmplitude);

	[Token(Token = "0x600203B")]
	[Address(RVA = "0xD4821C", Offset = "0xD4821C", VA = "0xD4821C")]
	private void Update()
	{
	}

	[Token(Token = "0x600203C")]
	[Address(RVA = "0xD483FC", Offset = "0xD483FC", VA = "0xD483FC")]
	protected KnobBase()
	{
	}
}
[Token(Token = "0x2000569")]
public class LeaderBoardEntry : MonoBehaviour
{
	[Token(Token = "0x4002085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro rankText;

	[Token(Token = "0x4002086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro nameText;

	[Token(Token = "0x4002087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro name2Text;

	[Token(Token = "0x4002088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro scoreText;

	[Token(Token = "0x4002089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image backgroundImage;

	[Token(Token = "0x600203F")]
	[Address(RVA = "0xD4845C", Offset = "0xD4845C", VA = "0xD4845C")]
	public void reset(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6002040")]
	[Address(RVA = "0xD485CC", Offset = "0xD485CC", VA = "0xD485CC")]
	public void set(int rank, string name, string name2, int score, StringBuilder scoreAltText, Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6002041")]
	[Address(RVA = "0xD489A8", Offset = "0xD489A8", VA = "0xD489A8", Slot = "4")]
	protected virtual void setColors(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6002042")]
	[Address(RVA = "0xD48B18", Offset = "0xD48B18", VA = "0xD48B18")]
	public LeaderBoardEntry()
	{
	}
}
[Token(Token = "0x200056A")]
public class LeaderBoardList : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200056B")]
	public struct Colors
	{
		[Serializable]
		[Token(Token = "0x200056C")]
		public struct EntryColors
		{
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color text;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color background;
		}

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EntryColors even;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntryColors odd;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EntryColors me;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EntryColors meNewHighscore;

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xD48C98", Offset = "0xD48C98", VA = "0xD48C98")]
		public EntryColors getColors(int index, bool me, bool meNewHighscore)
		{
			return default(EntryColors);
		}
	}

	[Token(Token = "0x400208A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardEntry[] entries;

	[Token(Token = "0x400208B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Colors colors;

	[Token(Token = "0x17000563")]
	public LeaderBoardEntry[] SortedEntries
	{
		[Token(Token = "0x6002043")]
		[Address(RVA = "0xD48B20", Offset = "0xD48B20", VA = "0xD48B20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000564")]
	public int numEntries
	{
		[Token(Token = "0x6002044")]
		[Address(RVA = "0xD48B68", Offset = "0xD48B68", VA = "0xD48B68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002045")]
	[Address(RVA = "0xD48B84", Offset = "0xD48B84", VA = "0xD48B84")]
	public void reset()
	{
	}

	[Token(Token = "0x6002046")]
	[Address(RVA = "0xD48CDC", Offset = "0xD48CDC", VA = "0xD48CDC")]
	public void setEntry(int index, int rank, string name, int score, StringBuilder scoreAltText, bool me)
	{
	}

	[Token(Token = "0x6002047")]
	[Address(RVA = "0xD48D08", Offset = "0xD48D08", VA = "0xD48D08")]
	public void setEntry(int index, int rank, string name, string name2, int score, StringBuilder scoreAltText, bool me)
	{
	}

	[Token(Token = "0x6002048")]
	[Address(RVA = "0xD48E64", Offset = "0xD48E64", VA = "0xD48E64")]
	public LeaderBoardList()
	{
	}
}
[Token(Token = "0x200056D")]
public abstract class LeaderBoardUI : MonoBehaviour
{
	[Token(Token = "0x200056E")]
	[CompilerGenerated]
	private sealed class <monitorCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderBoardUI <>4__this;

		[Token(Token = "0x17000565")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0xD49234", Offset = "0xD49234", VA = "0xD49234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000566")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0xD4927C", Offset = "0xD4927C", VA = "0xD4927C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xD490D4", Offset = "0xD490D4", VA = "0xD490D4")]
		[DebuggerHidden]
		public <monitorCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xD49104", Offset = "0xD49104", VA = "0xD49104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xD49108", Offset = "0xD49108", VA = "0xD49108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xD4923C", Offset = "0xD4923C", VA = "0xD4923C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardList list;

	[Token(Token = "0x4002093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LeaderboardManager.LeaderboardContainer _leaderboard;

	[Token(Token = "0x4002094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _coroutineTag;

	[Token(Token = "0x600204A")]
	[Address(RVA = "0xD48E6C", Offset = "0xD48E6C", VA = "0xD48E6C")]
	public void show()
	{
	}

	[Token(Token = "0x600204B")]
	[Address(RVA = "0xD49064", Offset = "0xD49064", VA = "0xD49064")]
	public void hide()
	{
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0xD48FD8", Offset = "0xD48FD8", VA = "0xD48FD8")]
	private void reset()
	{
	}

	[Token(Token = "0x600204D")]
	[Address(RVA = "0xD48FF0", Offset = "0xD48FF0", VA = "0xD48FF0")]
	[IteratorStateMachine(typeof(<monitorCo>d__6))]
	private IEnumerator<float> monitorCo()
	{
		return null;
	}

	[Token(Token = "0x600204E")]
	protected abstract IEnumerator<float> onDataAvailable();

	[Token(Token = "0x600204F")]
	[Address(RVA = "0xD490FC", Offset = "0xD490FC", VA = "0xD490FC")]
	protected LeaderBoardUI()
	{
	}
}
[Token(Token = "0x200056F")]
public class LevelEditorMenuItem : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4002098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x4002099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize title;

	[Token(Token = "0x400209A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorMenuItem inst;

	[Token(Token = "0x400209B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _origTitleTerm;

	[Token(Token = "0x6002056")]
	[Address(RVA = "0xD492D8", Offset = "0xD492D8", VA = "0xD492D8", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6002057")]
	[Address(RVA = "0xD493A0", Offset = "0xD493A0", VA = "0xD493A0")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6002058")]
	[Address(RVA = "0xD493A4", Offset = "0xD493A4", VA = "0xD493A4")]
	public void onShown()
	{
	}

	[Token(Token = "0x6002059")]
	[Address(RVA = "0xD495DC", Offset = "0xD495DC", VA = "0xD495DC")]
	public LevelEditorMenuItem()
	{
	}
}
[Token(Token = "0x2000570")]
public class LostConnectionUI : Area
{
	[Token(Token = "0x2000571")]
	[CompilerGenerated]
	private sealed class <OfflineChangeCo>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool offline;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LostConnectionUI <>4__this;

		[Token(Token = "0x1700056C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0xD49B70", Offset = "0xD49B70", VA = "0xD49B70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600206F")]
			[Address(RVA = "0xD49BB8", Offset = "0xD49BB8", VA = "0xD49BB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xD498F8", Offset = "0xD498F8", VA = "0xD498F8")]
		[DebuggerHidden]
		public <OfflineChangeCo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xD49A04", Offset = "0xD49A04", VA = "0xD49A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xD49A08", Offset = "0xD49A08", VA = "0xD49A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xD49B78", Offset = "0xD49B78", VA = "0xD49B78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400209C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LostConnectionUI inst;

	[Token(Token = "0x400209D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _dontShow;

	[Token(Token = "0x400209E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CoroutineHandle _offlineChangeCo;

	[Token(Token = "0x17000567")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600205A")]
		[Address(RVA = "0xD495E4", Offset = "0xD495E4", VA = "0xD495E4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000568")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600205B")]
		[Address(RVA = "0xD495EC", Offset = "0xD495EC", VA = "0xD495EC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000569")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600205C")]
		[Address(RVA = "0xD495F4", Offset = "0xD495F4", VA = "0xD495F4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700056A")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600205D")]
		[Address(RVA = "0xD495FC", Offset = "0xD495FC", VA = "0xD495FC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700056B")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600205E")]
		[Address(RVA = "0xD49604", Offset = "0xD49604", VA = "0xD49604", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600205F")]
	[Address(RVA = "0xD4960C", Offset = "0xD4960C", VA = "0xD4960C", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6002060")]
	[Address(RVA = "0xD49610", Offset = "0xD49610", VA = "0xD49610", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0xD49614", Offset = "0xD49614", VA = "0xD49614", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002062")]
	[Address(RVA = "0xD49678", Offset = "0xD49678", VA = "0xD49678", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6002063")]
	[Address(RVA = "0xD497D8", Offset = "0xD497D8", VA = "0xD497D8")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0xD497E4", Offset = "0xD497E4", VA = "0xD497E4")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x6002065")]
	[Address(RVA = "0xD497EC", Offset = "0xD497EC", VA = "0xD497EC")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0xD49870", Offset = "0xD49870", VA = "0xD49870")]
	[IteratorStateMachine(typeof(<OfflineChangeCo>d__20))]
	private IEnumerator<float> OfflineChangeCo(bool offline)
	{
		return null;
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0xD49920", Offset = "0xD49920", VA = "0xD49920", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002068")]
	[Address(RVA = "0xD49998", Offset = "0xD49998", VA = "0xD49998", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002069")]
	[Address(RVA = "0xD499FC", Offset = "0xD499FC", VA = "0xD499FC")]
	public LostConnectionUI()
	{
	}
}
[Token(Token = "0x2000572")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	public enum ItemType
	{
		[Token(Token = "0x40020C3")]
		None,
		[Token(Token = "0x40020C4")]
		SoloMenu,
		[Token(Token = "0x40020C5")]
		SoloCampaign,
		[Token(Token = "0x40020C6")]
		MultiplayerVersus,
		[Token(Token = "0x40020C7")]
		Quit
	}

	[Token(Token = "0x2000575")]
	[CompilerGenerated]
	private sealed class <JoinFriendInviteMultiplayerCo>d__59 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x17000574")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xD4ED20", Offset = "0xD4ED20", VA = "0xD4ED20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000575")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0xD4ED68", Offset = "0xD4ED68", VA = "0xD4ED68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xD4C9BC", Offset = "0xD4C9BC", VA = "0xD4C9BC")]
		[DebuggerHidden]
		public <JoinFriendInviteMultiplayerCo>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xD4ECC0", Offset = "0xD4ECC0", VA = "0xD4ECC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xD4ECC4", Offset = "0xD4ECC4", VA = "0xD4ECC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xD4ED28", Offset = "0xD4ED28", VA = "0xD4ED28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000576")]
	[CompilerGenerated]
	private sealed class <InviteFriendMultiplayerCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x17000576")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0xD4EF84", Offset = "0xD4EF84", VA = "0xD4EF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000577")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xD4EFCC", Offset = "0xD4EFCC", VA = "0xD4EFCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xD4CA58", Offset = "0xD4CA58", VA = "0xD4CA58")]
		[DebuggerHidden]
		public <InviteFriendMultiplayerCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xD4EDC4", Offset = "0xD4EDC4", VA = "0xD4EDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xD4EDC8", Offset = "0xD4EDC8", VA = "0xD4EDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xD4EF8C", Offset = "0xD4EF8C", VA = "0xD4EF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000577")]
	[CompilerGenerated]
	private sealed class <FindRankedMultiplayerCo>d__62 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoModes coModes;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x17000578")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0xD4F258", Offset = "0xD4F258", VA = "0xD4F258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000579")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0xD4F2A0", Offset = "0xD4F2A0", VA = "0xD4F2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xD4CBF8", Offset = "0xD4CBF8", VA = "0xD4CBF8")]
		[DebuggerHidden]
		public <FindRankedMultiplayerCo>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xD4F028", Offset = "0xD4F028", VA = "0xD4F028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xD4F02C", Offset = "0xD4F02C", VA = "0xD4F02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xD4F260", Offset = "0xD4F260", VA = "0xD4F260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000578")]
	[CompilerGenerated]
	private sealed class <onAboutToTransitionToArena>d__78 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700057A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0xD4F364", Offset = "0xD4F364", VA = "0xD4F364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0xD4F3AC", Offset = "0xD4F3AC", VA = "0xD4F3AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xD4D4D8", Offset = "0xD4D4D8", VA = "0xD4D4D8")]
		[DebuggerHidden]
		public <onAboutToTransitionToArena>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xD4F2FC", Offset = "0xD4F2FC", VA = "0xD4F2FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xD4F300", Offset = "0xD4F300", VA = "0xD4F300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xD4F36C", Offset = "0xD4F36C", VA = "0xD4F36C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000579")]
	[CompilerGenerated]
	private sealed class <QuitGameCo>d__92 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700057C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xD4F57C", Offset = "0xD4F57C", VA = "0xD4F57C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xD4F5C4", Offset = "0xD4F5C4", VA = "0xD4F5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xD4DAA8", Offset = "0xD4DAA8", VA = "0xD4DAA8")]
		[DebuggerHidden]
		public <QuitGameCo>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xD4F408", Offset = "0xD4F408", VA = "0xD4F408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xD4F40C", Offset = "0xD4F40C", VA = "0xD4F40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xD4F584", Offset = "0xD4F584", VA = "0xD4F584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenu inst;

	[Token(Token = "0x40020A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _menuActive;

	[Token(Token = "0x40020A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _activatedAtLeastOnce;

	[Token(Token = "0x40020A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectsToActivate;

	[Token(Token = "0x40020A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _playerPosition;

	[Token(Token = "0x40020A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _multiplayerStatusUI;

	[Token(Token = "0x40020A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _menuElementsRoot;

	[Token(Token = "0x40020AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] _menuElements;

	[Token(Token = "0x40020AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitions[] _newElements;

	[Token(Token = "0x40020AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _warningSign;

	[Token(Token = "0x40020AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MainMenuItem arcadeMenuItem;

	[Token(Token = "0x40020AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MainMenuItem soloMenuItem;

	[Token(Token = "0x40020AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MainMenuItem multiplayerMenuItem;

	[Token(Token = "0x40020B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MainMenuItem quitMenuItem;

	[Token(Token = "0x40020B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions startHere;

	[Token(Token = "0x40020B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIItemTransitions soloNewIndicator;

	[Token(Token = "0x40020B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIItemTransitions multiplayerNewIndicator;

	[Token(Token = "0x40020B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GraphicRaycaster[] _allMenuRaycasters;

	[Token(Token = "0x40020B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MainMenuItem[] _allMainMenuItems;

	[Token(Token = "0x40020B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TouchItem[] _touchItems;

	[Token(Token = "0x40020B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _activateTime;

	[Token(Token = "0x40020B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _lastMenuActionTime;

	[Token(Token = "0x40020B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _spaceSoundsAreFadingOut;

	[Token(Token = "0x40020BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _mainMenuVisible;

	[NonSerialized]
	[Token(Token = "0x40020BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool _aboutToTransitionToArena;

	[Token(Token = "0x40020BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MainMenuItem _selectedMainMenuItem;

	[Token(Token = "0x40020BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MainMenuItem _multiplayerMenuItem;

	[Token(Token = "0x40020BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TouchItem _multiplayerMenuTouchItem;

	[Token(Token = "0x40020BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ItemType _startAt;

	[Token(Token = "0x40020C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private CoroutineHandle _multiplayerCoroutine;

	[Token(Token = "0x40020C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool _debugStartedOnce;

	[Token(Token = "0x1700056E")]
	public bool isActive
	{
		[Token(Token = "0x6002070")]
		[Address(RVA = "0xD49C14", Offset = "0xD49C14", VA = "0xD49C14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700056F")]
	public float activateTime
	{
		[Token(Token = "0x6002071")]
		[Address(RVA = "0xD49C1C", Offset = "0xD49C1C", VA = "0xD49C1C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000570")]
	private bool transitioningToArena
	{
		[Token(Token = "0x6002072")]
		[Address(RVA = "0xD49C24", Offset = "0xD49C24", VA = "0xD49C24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000571")]
	private bool mainMenuVisible
	{
		[Token(Token = "0x6002073")]
		[Address(RVA = "0xD49C2C", Offset = "0xD49C2C", VA = "0xD49C2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000572")]
	private MainMenuItem selectedMainMenuItem
	{
		[Token(Token = "0x6002074")]
		[Address(RVA = "0xD49C4C", Offset = "0xD49C4C", VA = "0xD49C4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000573")]
	public ItemType startAt
	{
		[Token(Token = "0x6002076")]
		[Address(RVA = "0xD49DD0", Offset = "0xD49DD0", VA = "0xD49DD0")]
		get
		{
			return default(ItemType);
		}
		[Token(Token = "0x6002075")]
		[Address(RVA = "0xD49DC8", Offset = "0xD49DC8", VA = "0xD49DC8")]
		set
		{
		}
	}

	[Token(Token = "0x6002077")]
	[Address(RVA = "0xD49DD8", Offset = "0xD49DD8", VA = "0xD49DD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002078")]
	[Address(RVA = "0xD49FD0", Offset = "0xD49FD0", VA = "0xD49FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6002079")]
	[Address(RVA = "0xD4A034", Offset = "0xD4A034", VA = "0xD4A034")]
	private void debugStart()
	{
	}

	[Token(Token = "0x600207A")]
	[Address(RVA = "0xD4ACB0", Offset = "0xD4ACB0", VA = "0xD4ACB0")]
	public void SetInteractable(bool bInteractable)
	{
	}

	[Token(Token = "0x600207B")]
	[Address(RVA = "0xD4AD64", Offset = "0xD4AD64", VA = "0xD4AD64")]
	public void Activate(bool bActive, bool showInstantly, bool postTutorialActivation = false)
	{
	}

	[Token(Token = "0x600207C")]
	[Address(RVA = "0xD49F20", Offset = "0xD49F20", VA = "0xD49F20")]
	private void onFirstActivation()
	{
	}

	[Token(Token = "0x600207D")]
	[Address(RVA = "0xD4B9D4", Offset = "0xD4B9D4", VA = "0xD4B9D4")]
	private bool canClickNow([Optional] MainMenuItem mainMenuItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600207E")]
	[Address(RVA = "0xD4BB44", Offset = "0xD4BB44", VA = "0xD4BB44")]
	public void QuickSoloButtonClick()
	{
	}

	[Token(Token = "0x600207F")]
	[Address(RVA = "0xD4BF6C", Offset = "0xD4BF6C", VA = "0xD4BF6C")]
	public void QuickCoopButtonClick()
	{
	}

	[Token(Token = "0x6002080")]
	[Address(RVA = "0xD4BD80", Offset = "0xD4BD80", VA = "0xD4BD80")]
	private SoloContent.Set LastUncompletedSet([Optional] SoloContent.Stage stage)
	{
		return null;
	}

	[Token(Token = "0x6002081")]
	[Address(RVA = "0xD4C05C", Offset = "0xD4C05C", VA = "0xD4C05C")]
	private SoloContent.Set FirstNoStarsSet(IEnumerable<SoloContent.Set> sets, int numStars = 0)
	{
		return null;
	}

	[Token(Token = "0x6002082")]
	[Address(RVA = "0xD4C3DC", Offset = "0xD4C3DC", VA = "0xD4C3DC")]
	public void CancelFindOpponentRequest()
	{
	}

	[Token(Token = "0x6002083")]
	[Address(RVA = "0xD4C5A0", Offset = "0xD4C5A0", VA = "0xD4C5A0")]
	public void OnClickedCancelMultiplayer(Button button)
	{
	}

	[Token(Token = "0x6002084")]
	[Address(RVA = "0xD4C828", Offset = "0xD4C828", VA = "0xD4C828")]
	public void OnClickedCancelInviteFriend()
	{
	}

	[Token(Token = "0x6002085")]
	[Address(RVA = "0xD4C948", Offset = "0xD4C948", VA = "0xD4C948")]
	[IteratorStateMachine(typeof(<JoinFriendInviteMultiplayerCo>d__59))]
	private IEnumerator<float> JoinFriendInviteMultiplayerCo()
	{
		return null;
	}

	[Token(Token = "0x6002086")]
	[Address(RVA = "0xD4C9E4", Offset = "0xD4C9E4", VA = "0xD4C9E4")]
	[IteratorStateMachine(typeof(<InviteFriendMultiplayerCo>d__60))]
	private IEnumerator<float> InviteFriendMultiplayerCo()
	{
		return null;
	}

	[Token(Token = "0x6002087")]
	[Address(RVA = "0xD4CA80", Offset = "0xD4CA80", VA = "0xD4CA80")]
	public void onStartingFriendlyMPMatch()
	{
	}

	[Token(Token = "0x6002088")]
	[Address(RVA = "0xD4CB74", Offset = "0xD4CB74", VA = "0xD4CB74")]
	[IteratorStateMachine(typeof(<FindRankedMultiplayerCo>d__62))]
	private IEnumerator<float> FindRankedMultiplayerCo(CoModes coModes)
	{
		return null;
	}

	[Token(Token = "0x6002089")]
	[Address(RVA = "0xD4C440", Offset = "0xD4C440", VA = "0xD4C440")]
	private void exitFindOpponent()
	{
	}

	[Token(Token = "0x600208A")]
	[Address(RVA = "0xD4CC20", Offset = "0xD4CC20", VA = "0xD4CC20")]
	public void OnClickMultiplayer(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x600208B")]
	[Address(RVA = "0xD4CD84", Offset = "0xD4CD84", VA = "0xD4CD84")]
	public void transitionToRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x600208C")]
	[Address(RVA = "0xD4A93C", Offset = "0xD4A93C", VA = "0xD4A93C")]
	private void debugStartPIN(CoMode coMode)
	{
	}

	[Token(Token = "0x600208D")]
	[Address(RVA = "0xD4CE54", Offset = "0xD4CE54", VA = "0xD4CE54")]
	public void transitionToJoinFriendInviteMultiplayer()
	{
	}

	[Token(Token = "0x600208E")]
	[Address(RVA = "0xD4CF78", Offset = "0xD4CF78", VA = "0xD4CF78")]
	public void transitionToInviteFriendMultiplayer()
	{
	}

	[Token(Token = "0x600208F")]
	[Address(RVA = "0xD4D02C", Offset = "0xD4D02C", VA = "0xD4D02C")]
	public void OnClickArcade(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002090")]
	[Address(RVA = "0xD4D0BC", Offset = "0xD4D0BC", VA = "0xD4D0BC")]
	public void onClickPlayZenArcade()
	{
	}

	[Token(Token = "0x6002091")]
	[Address(RVA = "0xD4A200", Offset = "0xD4A200", VA = "0xD4A200")]
	public void onClickPlayRegularArcade()
	{
	}

	[Token(Token = "0x6002092")]
	[Address(RVA = "0xD4A26C", Offset = "0xD4A26C", VA = "0xD4A26C")]
	public void onClickPlayNightmareArcade()
	{
	}

	[Token(Token = "0x6002093")]
	[Address(RVA = "0xD4A564", Offset = "0xD4A564", VA = "0xD4A564")]
	private void debugStartMonthlyChallenge()
	{
	}

	[Token(Token = "0x6002094")]
	[Address(RVA = "0xD4A938", Offset = "0xD4A938", VA = "0xD4A938")]
	private void debugStartRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x6002095")]
	[Address(RVA = "0xD4BFD0", Offset = "0xD4BFD0", VA = "0xD4BFD0")]
	private void StartRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x6002096")]
	[Address(RVA = "0xD4A688", Offset = "0xD4A688", VA = "0xD4A688")]
	public void showMainMenu(bool instantly = false)
	{
	}

	[Token(Token = "0x6002097")]
	[Address(RVA = "0xD4D29C", Offset = "0xD4D29C", VA = "0xD4D29C")]
	public void onOpponentFoundWhileInMainMenu()
	{
	}

	[Token(Token = "0x6002098")]
	[Address(RVA = "0xD4D464", Offset = "0xD4D464", VA = "0xD4D464")]
	[IteratorStateMachine(typeof(<onAboutToTransitionToArena>d__78))]
	private IEnumerator<float> onAboutToTransitionToArena()
	{
		return null;
	}

	[Token(Token = "0x6002099")]
	[Address(RVA = "0xD4B624", Offset = "0xD4B624", VA = "0xD4B624")]
	public void hideMainMenu(bool excludePlayerProfile = false)
	{
	}

	[Token(Token = "0x600209A")]
	[Address(RVA = "0xD4D124", Offset = "0xD4D124", VA = "0xD4D124")]
	private void transitionToArcadeArena(float delay = 1f)
	{
	}

	[Token(Token = "0x600209B")]
	[Address(RVA = "0xD4D1FC", Offset = "0xD4D1FC", VA = "0xD4D1FC")]
	public void transitionToMonthlyChallengeArena()
	{
	}

	[Token(Token = "0x600209C")]
	[Address(RVA = "0xD4D6BC", Offset = "0xD4D6BC", VA = "0xD4D6BC")]
	private void transitionToMusicChallengeArena(float delay = 1f)
	{
	}

	[Token(Token = "0x600209D")]
	[Address(RVA = "0xD4D190", Offset = "0xD4D190", VA = "0xD4D190")]
	private void transitionToNightmareArena(float delay = 1f)
	{
	}

	[Token(Token = "0x600209E")]
	[Address(RVA = "0xD4A2D8", Offset = "0xD4A2D8", VA = "0xD4A2D8")]
	public void transitionToSoloArenaWithArbitrarySet(float delay = 1f)
	{
	}

	[Token(Token = "0x600209F")]
	[Address(RVA = "0xD4BE3C", Offset = "0xD4BE3C", VA = "0xD4BE3C")]
	public void transitionToSoloArena(string setId, float delay = 1f)
	{
	}

	[Token(Token = "0x60020A0")]
	[Address(RVA = "0xD4D500", Offset = "0xD4D500", VA = "0xD4D500")]
	private void transitionToSinglePlayerArena(Arena arena, float delay)
	{
	}

	[Token(Token = "0x60020A1")]
	[Address(RVA = "0xD4AAE8", Offset = "0xD4AAE8", VA = "0xD4AAE8")]
	public void TransitionToEditorArena()
	{
	}

	[Token(Token = "0x60020A2")]
	[Address(RVA = "0xD4D728", Offset = "0xD4D728", VA = "0xD4D728")]
	public void transitionToTutorial(float delay)
	{
	}

	[Token(Token = "0x60020A3")]
	[Address(RVA = "0xD4B93C", Offset = "0xD4B93C", VA = "0xD4B93C")]
	public void OnClickSolo(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x60020A4")]
	[Address(RVA = "0xD4D848", Offset = "0xD4D848", VA = "0xD4D848")]
	public void OnClickMiniProfile()
	{
	}

	[Token(Token = "0x60020A5")]
	[Address(RVA = "0xD4D938", Offset = "0xD4D938", VA = "0xD4D938")]
	public void OnClickQuitGame(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x60020A6")]
	[Address(RVA = "0xD4DA34", Offset = "0xD4DA34", VA = "0xD4DA34")]
	[IteratorStateMachine(typeof(<QuitGameCo>d__92))]
	private IEnumerator<float> QuitGameCo()
	{
		return null;
	}

	[Token(Token = "0x60020A7")]
	[Address(RVA = "0xD4DAD0", Offset = "0xD4DAD0", VA = "0xD4DAD0")]
	private void onPoseRecentered()
	{
	}

	[Token(Token = "0x60020A8")]
	[Address(RVA = "0xD4DBC8", Offset = "0xD4DBC8", VA = "0xD4DBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60020A9")]
	[Address(RVA = "0xD4E554", Offset = "0xD4E554", VA = "0xD4E554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020AA")]
	[Address(RVA = "0xD4E67C", Offset = "0xD4E67C", VA = "0xD4E67C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60020AB")]
	[Address(RVA = "0xD4E7A4", Offset = "0xD4E7A4", VA = "0xD4E7A4")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x60020AC")]
	[Address(RVA = "0xD4E838", Offset = "0xD4E838", VA = "0xD4E838")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60020AD")]
	[Address(RVA = "0xD4E8EC", Offset = "0xD4E8EC", VA = "0xD4E8EC")]
	public void OnClickOptions()
	{
	}

	[Token(Token = "0x60020AE")]
	[Address(RVA = "0xD4E910", Offset = "0xD4E910", VA = "0xD4E910")]
	public void OnClickSettings()
	{
	}

	[Token(Token = "0x60020AF")]
	[Address(RVA = "0xD4E988", Offset = "0xD4E988", VA = "0xD4E988")]
	public void OnClickHowToPlay()
	{
	}

	[Token(Token = "0x60020B0")]
	[Address(RVA = "0xD4E83C", Offset = "0xD4E83C", VA = "0xD4E83C")]
	public void showOptions()
	{
	}

	[Token(Token = "0x60020B1")]
	[Address(RVA = "0xD4E9FC", Offset = "0xD4E9FC", VA = "0xD4E9FC")]
	private void onOptionsHidden()
	{
	}

	[Token(Token = "0x60020B2")]
	[Address(RVA = "0xD49C48", Offset = "0xD49C48", VA = "0xD49C48")]
	private void onMainMenuVisibilityChanged()
	{
	}

	[Token(Token = "0x60020B3")]
	[Address(RVA = "0xD4EA00", Offset = "0xD4EA00", VA = "0xD4EA00")]
	public void updateUIControllerLength()
	{
	}

	[Token(Token = "0x60020B4")]
	[Address(RVA = "0xD4EB70", Offset = "0xD4EB70", VA = "0xD4EB70")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x200057A")]
public class MainMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057B")]
	public abstract class ParamBase
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SmoothTransition _transition;

		[Token(Token = "0x17000584")]
		public SmoothTransition transition
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0xD520FC", Offset = "0xD520FC", VA = "0xD520FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xD52104", Offset = "0xD52104", VA = "0xD52104", Slot = "4")]
		public virtual void init()
		{
		}

		[Token(Token = "0x60020FF")]
		protected abstract MainMenuTransitionModifier findModifier();

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xD52188", Offset = "0xD52188", VA = "0xD52188")]
		protected ParamBase()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200057C")]
	public class ScaleParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		public class Scales
		{
			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float hidden;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float idle;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float highlit;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float selected;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float locked;

			[Token(Token = "0x6002104")]
			[Address(RVA = "0xD5223C", Offset = "0xD5223C", VA = "0xD5223C")]
			public Scales()
			{
			}
		}

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scales scales;

		[NonSerialized]
		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float currentScale;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xD5065C", Offset = "0xD5065C", VA = "0xD5065C")]
		public float getScale(State state)
		{
			return default(float);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xD52190", Offset = "0xD52190", VA = "0xD52190", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xD52234", Offset = "0xD52234", VA = "0xD52234")]
		public ScaleParam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200057E")]
	public class LightParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x200057F")]
		public class Intensities
		{
			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float hidden;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float idle;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float highlit;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float selected;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float locked;

			[Token(Token = "0x6002108")]
			[Address(RVA = "0xD52300", Offset = "0xD52300", VA = "0xD52300")]
			public Intensities()
			{
			}
		}

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light light;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intensities intensities;

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xD508C8", Offset = "0xD508C8", VA = "0xD508C8")]
		public float getIntensity(State state)
		{
			return default(float);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xD52254", Offset = "0xD52254", VA = "0xD52254", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xD522F8", Offset = "0xD522F8", VA = "0xD522F8")]
		public LightParam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000580")]
	public class MaterialParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class Materials
		{
			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material hidden;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material idle;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material highlit;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material selected;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material locked;

			[Token(Token = "0x6002111")]
			[Address(RVA = "0xD524F0", Offset = "0xD524F0", VA = "0xD524F0")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x2000582")]
		public enum Type
		{
			[Token(Token = "0x4002110")]
			Normal,
			[Token(Token = "0x4002111")]
			TextMeshPro,
			[Token(Token = "0x4002112")]
			ParticleSystem
		}

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Materials materials;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type _type;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystemRenderer _particleSystemRenderer;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x17000585")]
		public Type type
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xD52318", Offset = "0xD52318", VA = "0xD52318")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x17000586")]
		public ParticleSystemRenderer particleSystemRenderer
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0xD52320", Offset = "0xD52320", VA = "0xD52320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000587")]
		public TextMeshPro textMeshPro
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0xD52328", Offset = "0xD52328", VA = "0xD52328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xD50BF0", Offset = "0xD50BF0", VA = "0xD50BF0")]
		public Material getMaterial(State state)
		{
			return null;
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xD52330", Offset = "0xD52330", VA = "0xD52330")]
		private void initType()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xD5242C", Offset = "0xD5242C", VA = "0xD5242C", Slot = "4")]
		public override void init()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xD52444", Offset = "0xD52444", VA = "0xD52444", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xD524E8", Offset = "0xD524E8", VA = "0xD524E8")]
		public MaterialParam()
		{
		}
	}

	[Token(Token = "0x2000583")]
	public enum State
	{
		[Token(Token = "0x4002114")]
		Hidden,
		[Token(Token = "0x4002115")]
		Idle,
		[Token(Token = "0x4002116")]
		Highlit,
		[Token(Token = "0x4002117")]
		Selected,
		[Token(Token = "0x4002118")]
		Locked
	}

	[Token(Token = "0x2000584")]
	[CompilerGenerated]
	private sealed class <BindVisibilityForQuickButtonCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenuItem <>4__this;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frames;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool <visible>5__2;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x17000588")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002115")]
			[Address(RVA = "0xD52604", Offset = "0xD52604", VA = "0xD52604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000589")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0xD5264C", Offset = "0xD5264C", VA = "0xD5264C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xD51E20", Offset = "0xD51E20", VA = "0xD51E20")]
		[DebuggerHidden]
		public <BindVisibilityForQuickButtonCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xD524F8", Offset = "0xD524F8", VA = "0xD524F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xD524FC", Offset = "0xD524FC", VA = "0xD524FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xD5260C", Offset = "0xD5260C", VA = "0xD5260C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000585")]
	[CompilerGenerated]
	private sealed class <showTextAtTheSameTimeWithSiblingsCo>d__68 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenuItem <>4__this;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TouchItem <touchItem>5__2;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MainMenuItem <sibling>5__3;

		[Token(Token = "0x1700058A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0xD52844", Offset = "0xD52844", VA = "0xD52844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700058B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0xD5288C", Offset = "0xD5288C", VA = "0xD5288C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xD52044", Offset = "0xD52044", VA = "0xD52044")]
		[DebuggerHidden]
		public <showTextAtTheSameTimeWithSiblingsCo>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xD526A8", Offset = "0xD526A8", VA = "0xD526A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xD526AC", Offset = "0xD526AC", VA = "0xD526AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xD5284C", Offset = "0xD5284C", VA = "0xD5284C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool interactable;

	[Token(Token = "0x40020DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitionsGroup textsTransitionsGroup;

	[Token(Token = "0x40020DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ScaleParam> scaleParams;

	[Token(Token = "0x40020E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LightParam> lightParams;

	[Token(Token = "0x40020E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MaterialParam> materialParams;

	[Token(Token = "0x40020E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MainMenuItemValidator _validator;

	[Token(Token = "0x40020E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> _originalScales;

	[Token(Token = "0x40020E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool lockedInDemo;

	[Token(Token = "0x40020E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject normalDescription;

	[Token(Token = "0x40020E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject demoDescription;

	[Token(Token = "0x40020E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions quickButton;

	[Token(Token = "0x40020E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool hideQuickButtonWhenOffline;

	[Token(Token = "0x40020E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _shown;

	[Token(Token = "0x40020EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool _pointerOver;

	[Token(Token = "0x40020EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool _selected;

	[Token(Token = "0x40020EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private State _desiredState;

	[Token(Token = "0x40020ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _desiredT;

	[Token(Token = "0x40020EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UIItemTransitions _newTransitions;

	[Token(Token = "0x40020F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _allDone;

	[Token(Token = "0x40020F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _allNearlyDone;

	[Token(Token = "0x40020F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _maxDiffToDesired;

	[Token(Token = "0x40020F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _faceColorShaderProp;

	[Token(Token = "0x40020F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UIItemState _quickButtonState;

	[Token(Token = "0x1700057E")]
	private MainMenuItemValidator validator
	{
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xD4F620", Offset = "0xD4F620", VA = "0xD4F620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700057F")]
	private bool shown
	{
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xD4F6DC", Offset = "0xD4F6DC", VA = "0xD4F6DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000580")]
	private bool pointerOver
	{
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xD4F89C", Offset = "0xD4F89C", VA = "0xD4F89C")]
		set
		{
		}
	}

	[Token(Token = "0x17000581")]
	private bool selected
	{
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xD4F940", Offset = "0xD4F940", VA = "0xD4F940")]
		set
		{
		}
	}

	[Token(Token = "0x17000582")]
	public bool transitioning
	{
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xD4F9E4", Offset = "0xD4F9E4", VA = "0xD4F9E4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xD4F9EC", Offset = "0xD4F9EC", VA = "0xD4F9EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000583")]
	public bool transitioningNotNearlyDone
	{
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xD4F9F8", Offset = "0xD4F9F8", VA = "0xD4F9F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60020DF")]
	[Address(RVA = "0xD4FA18", Offset = "0xD4FA18", VA = "0xD4FA18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020E0")]
	[Address(RVA = "0xD4FA80", Offset = "0xD4FA80", VA = "0xD4FA80")]
	private void initScales()
	{
	}

	[Token(Token = "0x60020E1")]
	[Address(RVA = "0xD4FCC4", Offset = "0xD4FCC4", VA = "0xD4FCC4")]
	private void initTransitions()
	{
	}

	[Token(Token = "0x60020E2")]
	[Address(RVA = "0xD5003C", Offset = "0xD5003C", VA = "0xD5003C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020E3")]
	[Address(RVA = "0xD500CC", Offset = "0xD500CC", VA = "0xD500CC")]
	private void updateStateInstantly()
	{
	}

	[Token(Token = "0x60020E4")]
	[Address(RVA = "0xD500F4", Offset = "0xD500F4", VA = "0xD500F4")]
	private void updateScalesInstantly()
	{
	}

	[Token(Token = "0x60020E5")]
	[Address(RVA = "0xD5072C", Offset = "0xD5072C", VA = "0xD5072C")]
	private void updateScales()
	{
	}

	[Token(Token = "0x60020E6")]
	[Address(RVA = "0xD501FC", Offset = "0xD501FC", VA = "0xD501FC")]
	private void updateLightsInstantly()
	{
	}

	[Token(Token = "0x60020E7")]
	[Address(RVA = "0xD50998", Offset = "0xD50998", VA = "0xD50998")]
	private void updateLights()
	{
	}

	[Token(Token = "0x60020E8")]
	[Address(RVA = "0xD5038C", Offset = "0xD5038C", VA = "0xD5038C")]
	private void updateMaterialsInstantly()
	{
	}

	[Token(Token = "0x60020E9")]
	[Address(RVA = "0xD50CC0", Offset = "0xD50CC0", VA = "0xD50CC0")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x60020EA")]
	[Address(RVA = "0xD4B884", Offset = "0xD4B884", VA = "0xD4B884")]
	public void show(bool instantly)
	{
	}

	[Token(Token = "0x60020EB")]
	[Address(RVA = "0xD49DB8", Offset = "0xD49DB8", VA = "0xD49DB8")]
	public void hide()
	{
	}

	[Token(Token = "0x60020EC")]
	[Address(RVA = "0xD510AC", Offset = "0xD510AC", VA = "0xD510AC")]
	public void onPointerEnter()
	{
	}

	[Token(Token = "0x60020ED")]
	[Address(RVA = "0xD510C0", Offset = "0xD510C0", VA = "0xD510C0")]
	public void onPointerExit()
	{
	}

	[Token(Token = "0x60020EE")]
	[Address(RVA = "0xD49DC0", Offset = "0xD49DC0", VA = "0xD49DC0")]
	public void onSelected()
	{
	}

	[Token(Token = "0x60020EF")]
	[Address(RVA = "0xD49DB0", Offset = "0xD49DB0", VA = "0xD49DB0")]
	public void onUnselected()
	{
	}

	[Token(Token = "0x60020F0")]
	[Address(RVA = "0xD4F840", Offset = "0xD4F840", VA = "0xD4F840")]
	private void updateDesiredState()
	{
	}

	[Token(Token = "0x60020F1")]
	[Address(RVA = "0xD510D4", Offset = "0xD510D4", VA = "0xD510D4")]
	private void setDesiredState(State desiredState)
	{
	}

	[Token(Token = "0x60020F2")]
	[Address(RVA = "0xD51D28", Offset = "0xD51D28", VA = "0xD51D28")]
	[IteratorStateMachine(typeof(<BindVisibilityForQuickButtonCo>d__60))]
	private IEnumerator<float> BindVisibilityForQuickButtonCo(int frames = 1)
	{
		return null;
	}

	[Token(Token = "0x60020F3")]
	[Address(RVA = "0xD51294", Offset = "0xD51294", VA = "0xD51294")]
	private float getStateT(State state)
	{
		return default(float);
	}

	[Token(Token = "0x60020F4")]
	[Address(RVA = "0xD513E0", Offset = "0xD513E0", VA = "0xD513E0")]
	private void startTransitions()
	{
	}

	[Token(Token = "0x60020F5")]
	[Address(RVA = "0xD51E48", Offset = "0xD51E48", VA = "0xD51E48")]
	private void Update()
	{
	}

	[Token(Token = "0x60020F6")]
	[Address(RVA = "0xD51F9C", Offset = "0xD51F9C", VA = "0xD51F9C")]
	private void updateObjects()
	{
	}

	[Token(Token = "0x60020F7")]
	[Address(RVA = "0xD51FBC", Offset = "0xD51FBC", VA = "0xD51FBC")]
	private void showTexts()
	{
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0xD5120C", Offset = "0xD5120C", VA = "0xD5120C")]
	private void hideTexts()
	{
	}

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0xD51DAC", Offset = "0xD51DAC", VA = "0xD51DAC")]
	[IteratorStateMachine(typeof(<showTextAtTheSameTimeWithSiblingsCo>d__68))]
	private IEnumerator<float> showTextAtTheSameTimeWithSiblingsCo()
	{
		return null;
	}

	[Token(Token = "0x60020FA")]
	[Address(RVA = "0xD5206C", Offset = "0xD5206C", VA = "0xD5206C")]
	public MainMenuItem()
	{
	}
}
[Token(Token = "0x2000586")]
public class MainMenuItems : MonoBehaviour
{
	[Token(Token = "0x600211E")]
	[Address(RVA = "0xD528E8", Offset = "0xD528E8", VA = "0xD528E8")]
	public void onArcadeClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0xD52940", Offset = "0xD52940", VA = "0xD52940")]
	public void onSoloClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0xD52998", Offset = "0xD52998", VA = "0xD52998")]
	public void onMultiplayerClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002121")]
	[Address(RVA = "0xD529F0", Offset = "0xD529F0", VA = "0xD529F0")]
	public void onQuitClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0xD52A40", Offset = "0xD52A40", VA = "0xD52A40")]
	public void onMiniProfileClicked()
	{
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0xD52A90", Offset = "0xD52A90", VA = "0xD52A90")]
	public void onNewMessageClicked()
	{
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0xD52AE0", Offset = "0xD52AE0", VA = "0xD52AE0")]
	public void onSettingsClicked()
	{
	}

	[Token(Token = "0x6002125")]
	[Address(RVA = "0xD52B30", Offset = "0xD52B30", VA = "0xD52B30")]
	public void onHowToPlayClicked()
	{
	}

	[Token(Token = "0x6002126")]
	[Address(RVA = "0xD52B80", Offset = "0xD52B80", VA = "0xD52B80")]
	public MainMenuItems()
	{
	}
}
[Token(Token = "0x2000587")]
public class MainMenuItemValidator
{
	[Token(Token = "0x4002124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MainMenuItem _target;

	[Token(Token = "0x4002125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<Light> _lights;

	[Token(Token = "0x4002126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<Renderer> _renderers;

	[Token(Token = "0x6002127")]
	[Address(RVA = "0xD4F6AC", Offset = "0xD4F6AC", VA = "0xD4F6AC")]
	public MainMenuItemValidator(MainMenuItem target)
	{
	}

	[Token(Token = "0x6002128")]
	[Address(RVA = "0xD52B88", Offset = "0xD52B88", VA = "0xD52B88")]
	public void validate()
	{
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0xD52BA0", Offset = "0xD52BA0", VA = "0xD52BA0")]
	private void validateLights()
	{
	}

	[Token(Token = "0x600212A")]
	[Address(RVA = "0xD53058", Offset = "0xD53058", VA = "0xD53058")]
	private void onNewLight(MainMenuItem.LightParam lightParam)
	{
	}

	[Token(Token = "0x600212B")]
	[Address(RVA = "0xD52DFC", Offset = "0xD52DFC", VA = "0xD52DFC")]
	private void validateMaterials()
	{
	}

	[Token(Token = "0x600212C")]
	[Address(RVA = "0xD530F8", Offset = "0xD530F8", VA = "0xD530F8")]
	private void onNewRenderer(MainMenuItem.MaterialParam materialParam)
	{
	}
}
[Token(Token = "0x2000588")]
public class MainMenuTransitionModifier : MonoBehaviour
{
	[Token(Token = "0x4002127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedFactor;

	[Token(Token = "0x4002128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool affectsScales;

	[Token(Token = "0x4002129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool affectsLights;

	[Token(Token = "0x400212A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool affectsMaterials;

	[Token(Token = "0x600212D")]
	[Address(RVA = "0xD531DC", Offset = "0xD531DC", VA = "0xD531DC")]
	public MainMenuTransitionModifier()
	{
	}
}
[Token(Token = "0x2000589")]
public class MikeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x600212E")]
	[Address(RVA = "0xD531FC", Offset = "0xD531FC", VA = "0xD531FC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600212F")]
	[Address(RVA = "0xD53204", Offset = "0xD53204", VA = "0xD53204", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6002130")]
	[Address(RVA = "0xD53258", Offset = "0xD53258", VA = "0xD53258", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6002131")]
	[Address(RVA = "0xD5332C", Offset = "0xD5332C", VA = "0xD5332C")]
	private void resetSwitchIfCantUseMike()
	{
	}

	[Token(Token = "0x6002132")]
	[Address(RVA = "0xD533B8", Offset = "0xD533B8", VA = "0xD533B8", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6002133")]
	[Address(RVA = "0xD53420", Offset = "0xD53420", VA = "0xD53420")]
	public MikeToggleSwitch()
	{
	}
}
[Token(Token = "0x200058A")]
public class MiniProfile : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200058B")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x200058C")]
		public class Flakh
		{
			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro playerName;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro xp;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro skillRating;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Localize level;

			[Token(Token = "0x6002147")]
			[Address(RVA = "0xD54AA4", Offset = "0xD54AA4", VA = "0xD54AA4")]
			public Flakh()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058D")]
		public class Medals
		{
			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool show;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject root;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject unrated;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject noob;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject underdog;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject risingStar;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject baller;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject master;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject racketLord;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject ballBuster;

			[Token(Token = "0x6002148")]
			[Address(RVA = "0xD54AAC", Offset = "0xD54AAC", VA = "0xD54AAC")]
			public Medals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058E")]
		public class LastSession
		{
			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizeFormatted earned;

			[Token(Token = "0x6002149")]
			[Address(RVA = "0xD54AB4", Offset = "0xD54AB4", VA = "0xD54AB4")]
			public LastSession()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058F")]
		public class NewLevel
		{
			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600214A")]
			[Address(RVA = "0xD54ABC", Offset = "0xD54ABC", VA = "0xD54ABC")]
			public NewLevel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000590")]
		public class NewItem
		{
			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600214B")]
			[Address(RVA = "0xD54AC4", Offset = "0xD54AC4", VA = "0xD54AC4")]
			public NewItem()
			{
			}
		}

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Flakh flakh;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Medals medals;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LastSession lastSession;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewLevel newLevel;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NewItem newItem;

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xD54A9C", Offset = "0xD54A9C", VA = "0xD54A9C")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x2000591")]
	[CompilerGenerated]
	private sealed class <populateCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x1700058F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xD54D58", Offset = "0xD54D58", VA = "0xD54D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000590")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xD54DA0", Offset = "0xD54DA0", VA = "0xD54DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xD53734", Offset = "0xD53734", VA = "0xD53734")]
		[DebuggerHidden]
		public <populateCo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xD54ACC", Offset = "0xD54ACC", VA = "0xD54ACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xD54AD0", Offset = "0xD54AD0", VA = "0xD54AD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xD54D60", Offset = "0xD54D60", VA = "0xD54D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000593")]
	[CompilerGenerated]
	private sealed class <PlayNewLevelAudioWhenVisibleCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerLevel level;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator<float> <>7__wrap1;

		[Token(Token = "0x17000591")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002158")]
			[Address(RVA = "0xD55278", Offset = "0xD55278", VA = "0xD55278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000592")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215A")]
			[Address(RVA = "0xD552C0", Offset = "0xD552C0", VA = "0xD552C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xD5426C", Offset = "0xD5426C", VA = "0xD5426C")]
		[DebuggerHidden]
		public <PlayNewLevelAudioWhenVisibleCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xD54EB8", Offset = "0xD54EB8", VA = "0xD54EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xD54ED4", Offset = "0xD54ED4", VA = "0xD54ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xD551C8", Offset = "0xD551C8", VA = "0xD551C8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xD55280", Offset = "0xD55280", VA = "0xD55280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000594")]
	[CompilerGenerated]
	private sealed class <WaitSecondAfterVisible>d__19 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniProfile <>4__this;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sec;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float <>3__sec;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIItemTransitions <miniProfileItemTransitions>5__2;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeVisible>5__3;

		[Token(Token = "0x17000593")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0xD5548C", Offset = "0xD5548C", VA = "0xD5548C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000594")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0xD554D4", Offset = "0xD554D4", VA = "0xD554D4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xD54328", Offset = "0xD54328", VA = "0xD54328")]
		[DebuggerHidden]
		public <WaitSecondAfterVisible>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xD5531C", Offset = "0xD5531C", VA = "0xD5531C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xD55320", Offset = "0xD55320", VA = "0xD55320", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xD55494", Offset = "0xD55494", VA = "0xD55494", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xD55530", Offset = "0xD55530", VA = "0xD55530", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xD555E4", Offset = "0xD555E4", VA = "0xD555E4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000596")]
	[CompilerGenerated]
	private sealed class <PlayItemUnlockedAudioWhenVisible>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator<float> <>7__wrap1;

		[Token(Token = "0x17000595")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xD55A18", Offset = "0xD55A18", VA = "0xD55A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000596")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0xD55A60", Offset = "0xD55A60", VA = "0xD55A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xD54990", Offset = "0xD54990", VA = "0xD54990")]
		[DebuggerHidden]
		public <PlayItemUnlockedAudioWhenVisible>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xD55678", Offset = "0xD55678", VA = "0xD55678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xD55694", Offset = "0xD55694", VA = "0xD55694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xD55968", Offset = "0xD55968", VA = "0xD55968")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xD55A20", Offset = "0xD55A20", VA = "0xD55A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400212B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x400212C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Choose Unknown to show local player")]
	public PlayerID playerID;

	[Token(Token = "0x400212D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MiniProfile inst;

	[Token(Token = "0x400212E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _xpFormat;

	[Token(Token = "0x400212F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerLevel _lastSeenPlayerLevelThisSession;

	[Token(Token = "0x4002130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _coroutineTag;

	[Token(Token = "0x4002132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly HashSet<string> _announcedUnseenItemsThisSession;

	[Token(Token = "0x4002133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _playItemUnlockedAudioWhenVisibleCo;

	[Token(Token = "0x1700058C")]
	private bool isShowingLocalPlayer
	{
		[Token(Token = "0x6002134")]
		[Address(RVA = "0xD53428", Offset = "0xD53428", VA = "0xD53428")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700058D")]
	private bool showLastSessionXp
	{
		[Token(Token = "0x6002135")]
		[Address(RVA = "0xD53498", Offset = "0xD53498", VA = "0xD53498")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700058E")]
	public bool MiniProfileHasNewRating
	{
		[Token(Token = "0x600213F")]
		[Address(RVA = "0xD5435C", Offset = "0xD5435C", VA = "0xD5435C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002140")]
		[Address(RVA = "0xD54364", Offset = "0xD54364", VA = "0xD54364")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6002136")]
	[Address(RVA = "0xD534A8", Offset = "0xD534A8", VA = "0xD534A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002137")]
	[Address(RVA = "0xD535F4", Offset = "0xD535F4", VA = "0xD535F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002138")]
	[Address(RVA = "0xD536D8", Offset = "0xD536D8", VA = "0xD536D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002139")]
	[Address(RVA = "0xD53664", Offset = "0xD53664", VA = "0xD53664")]
	[IteratorStateMachine(typeof(<populateCo>d__14))]
	private IEnumerator<float> populateCo()
	{
		return null;
	}

	[Token(Token = "0x600213A")]
	[Address(RVA = "0xD5375C", Offset = "0xD5375C", VA = "0xD5375C")]
	private void reset()
	{
	}

	[Token(Token = "0x600213B")]
	[Address(RVA = "0xD54080", Offset = "0xD54080", VA = "0xD54080")]
	private void populateWithId(string rnxId)
	{
	}

	[Token(Token = "0x600213C")]
	[Address(RVA = "0xD541B4", Offset = "0xD541B4", VA = "0xD541B4")]
	private void populatePlayerName(string name)
	{
	}

	[Token(Token = "0x600213D")]
	[Address(RVA = "0xD541E8", Offset = "0xD541E8", VA = "0xD541E8")]
	[IteratorStateMachine(typeof(<PlayNewLevelAudioWhenVisibleCo>d__18))]
	private IEnumerator<float> PlayNewLevelAudioWhenVisibleCo(PlayerLevel level)
	{
		return null;
	}

	[Token(Token = "0x600213E")]
	[Address(RVA = "0xD54294", Offset = "0xD54294", VA = "0xD54294")]
	[IteratorStateMachine(typeof(<WaitSecondAfterVisible>d__19))]
	private IEnumerable<float> WaitSecondAfterVisible(float sec = 1f)
	{
		return null;
	}

	[Token(Token = "0x6002141")]
	[Address(RVA = "0xD5380C", Offset = "0xD5380C", VA = "0xD5380C")]
	private void populateWithProfileData(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0xD54370", Offset = "0xD54370", VA = "0xD54370")]
	private void AnnounceIfUnseenItems(IReadOnlyCollection<ItemsDefs.ItemDefinition> unseenItems)
	{
	}

	[Token(Token = "0x6002143")]
	[Address(RVA = "0xD5491C", Offset = "0xD5491C", VA = "0xD5491C")]
	[IteratorStateMachine(typeof(<PlayItemUnlockedAudioWhenVisible>d__28))]
	private IEnumerator<float> PlayItemUnlockedAudioWhenVisible()
	{
		return null;
	}

	[Token(Token = "0x6002144")]
	[Address(RVA = "0xD549B8", Offset = "0xD549B8", VA = "0xD549B8")]
	public MiniProfile()
	{
	}
}
[Token(Token = "0x2000597")]
public class MirrorArea : Area
{
	[Token(Token = "0x4002163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerProfileUI profileUI;

	[Token(Token = "0x4002164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CustomizationsUI customizationsUI;

	[Token(Token = "0x4002165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions topPanel;

	[Token(Token = "0x4002166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion _lastProfileRotation;

	[Token(Token = "0x4002167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _lastProfilePosition;

	[Token(Token = "0x17000597")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600216D")]
		[Address(RVA = "0xD55ABC", Offset = "0xD55ABC", VA = "0xD55ABC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000598")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600216E")]
		[Address(RVA = "0xD55AC4", Offset = "0xD55AC4", VA = "0xD55AC4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000599")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600216F")]
		[Address(RVA = "0xD55ACC", Offset = "0xD55ACC", VA = "0xD55ACC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700059A")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002170")]
		[Address(RVA = "0xD55AD4", Offset = "0xD55AD4", VA = "0xD55AD4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700059B")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002171")]
		[Address(RVA = "0xD55ADC", Offset = "0xD55ADC", VA = "0xD55ADC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0xD55AE4", Offset = "0xD55AE4", VA = "0xD55AE4")]
	public void CustomizationsUIState(bool visable)
	{
	}

	[Token(Token = "0x6002173")]
	[Address(RVA = "0xD55BFC", Offset = "0xD55BFC", VA = "0xD55BFC")]
	public MirrorArea()
	{
	}
}
[Token(Token = "0x2000598")]
public class MonthlyChallengeMenuItem : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4002168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro setName;

	[Token(Token = "0x4002169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize setLocalizedName;

	[Token(Token = "0x400216A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x400216B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform SpecialRoot;

	[Token(Token = "0x400216C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallengeMenuItem inst;

	[Token(Token = "0x400216D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x400216E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _usingSpecial;

	[Token(Token = "0x6002174")]
	[Address(RVA = "0xD55C04", Offset = "0xD55C04", VA = "0xD55C04", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6002175")]
	[Address(RVA = "0xD55C94", Offset = "0xD55C94", VA = "0xD55C94")]
	public void onShown()
	{
	}

	[Token(Token = "0x6002176")]
	[Address(RVA = "0xD56224", Offset = "0xD56224", VA = "0xD56224")]
	public void SetSpecialSetName(string specialName, bool state)
	{
	}

	[Token(Token = "0x6002177")]
	[Address(RVA = "0xD56344", Offset = "0xD56344", VA = "0xD56344")]
	public void onHidden()
	{
	}

	[Token(Token = "0x6002178")]
	[Address(RVA = "0xD56400", Offset = "0xD56400", VA = "0xD56400")]
	public void onLeaderboardClicked()
	{
	}

	[Token(Token = "0x6002179")]
	[Address(RVA = "0xD564CC", Offset = "0xD564CC", VA = "0xD564CC")]
	public MonthlyChallengeMenuItem()
	{
	}
}
[Token(Token = "0x2000599")]
public class MusicPlayerUI : MonoBehaviour
{
	[Token(Token = "0x400216F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro trackName;

	[Token(Token = "0x4002170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noTrackPlaying;

	[Token(Token = "0x4002171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicPlayerUI inst;

	[Token(Token = "0x4002172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x4002173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x1700059C")]
	public bool shown
	{
		[Token(Token = "0x600217A")]
		[Address(RVA = "0xD564D4", Offset = "0xD564D4", VA = "0xD564D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0xD564DC", Offset = "0xD564DC", VA = "0xD564DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600217C")]
	[Address(RVA = "0xD566D4", Offset = "0xD566D4", VA = "0xD566D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0xD566D8", Offset = "0xD566D8", VA = "0xD566D8")]
	public void show()
	{
	}

	[Token(Token = "0x600217E")]
	[Address(RVA = "0xD567AC", Offset = "0xD567AC", VA = "0xD567AC")]
	public void hide()
	{
	}

	[Token(Token = "0x600217F")]
	[Address(RVA = "0xD56744", Offset = "0xD56744", VA = "0xD56744")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6002180")]
	[Address(RVA = "0xD56650", Offset = "0xD56650", VA = "0xD56650")]
	public void setTrackName(string name)
	{
	}

	[Token(Token = "0x6002181")]
	[Address(RVA = "0xD56814", Offset = "0xD56814", VA = "0xD56814")]
	public void onNextTrackClicked()
	{
	}

	[Token(Token = "0x6002182")]
	[Address(RVA = "0xD568BC", Offset = "0xD568BC", VA = "0xD568BC")]
	public MusicPlayerUI()
	{
	}
}
[Token(Token = "0x200059A")]
public class AvatarPlayerIDSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4002174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerModel playerModel;

	[Token(Token = "0x6002183")]
	[Address(RVA = "0xD568C4", Offset = "0xD568C4", VA = "0xD568C4", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6002184")]
	[Address(RVA = "0xD568F0", Offset = "0xD568F0", VA = "0xD568F0", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6002185")]
	[Address(RVA = "0xD56A20", Offset = "0xD56A20", VA = "0xD56A20", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6002186")]
	[Address(RVA = "0xD56A60", Offset = "0xD56A60", VA = "0xD56A60")]
	public AvatarPlayerIDSwitch()
	{
	}
}
[Token(Token = "0x200059B")]
[RequireComponent(typeof(Animator))]
public class BoughtAnimationController : MonoBehaviour
{
	[Token(Token = "0x4002175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x14000046")]
	public event Action onBoughtAnimationHalfwayPoint
	{
		[Token(Token = "0x6002188")]
		[Address(RVA = "0xD56AC0", Offset = "0xD56AC0", VA = "0xD56AC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002189")]
		[Address(RVA = "0xD56B5C", Offset = "0xD56B5C", VA = "0xD56B5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6002187")]
	[Address(RVA = "0xD56A68", Offset = "0xD56A68", VA = "0xD56A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600218A")]
	[Address(RVA = "0xD56BF8", Offset = "0xD56BF8", VA = "0xD56BF8")]
	public void BoughtAnimationHalfwayPoint()
	{
	}

	[Token(Token = "0x600218B")]
	[Address(RVA = "0xD56C14", Offset = "0xD56C14", VA = "0xD56C14")]
	public void PlayBoughtAnimation([Optional] Action halfway)
	{
	}

	[Token(Token = "0x600218C")]
	[Address(RVA = "0xD56D7C", Offset = "0xD56D7C", VA = "0xD56D7C")]
	public BoughtAnimationController()
	{
	}
}
[Token(Token = "0x200059D")]
public class CustomizationItemsShelf : SelectableTouchItemGroupDynamic<CustomizationItemUI, ItemsDefs.ItemDefinition>
{
	[Token(Token = "0x4002179")]
	public const int MAX_ITEMS_IN_SHELF = 5;

	[Token(Token = "0x400217A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ItemsDefs.ItemShelf itemsType;

	[Token(Token = "0x600218F")]
	[Address(RVA = "0xD56DC4", Offset = "0xD56DC4", VA = "0xD56DC4", Slot = "8")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6002190")]
	[Address(RVA = "0xD57510", Offset = "0xD57510", VA = "0xD57510")]
	private static void ItemHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x6002191")]
	[Address(RVA = "0xD57668", Offset = "0xD57668", VA = "0xD57668")]
	private static void ItemUnHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x6002192")]
	[Address(RVA = "0xD578E0", Offset = "0xD578E0", VA = "0xD578E0")]
	public CustomizationItemsShelf()
	{
	}
}
[Token(Token = "0x200059F")]
public class CustomizationItemsShelves : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4002180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemsInfoPanel infoPanel;

	[Token(Token = "0x4002181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizationItemsShelf[] shelves;

	[Token(Token = "0x4002182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomizationItemsShelves inst;

	[Token(Token = "0x4002183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CustomizationItemUI[] _allItemsUIs;

	[Token(Token = "0x600219A")]
	[Address(RVA = "0xD57A48", Offset = "0xD57A48", VA = "0xD57A48", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x600219B")]
	[Address(RVA = "0xD57AA0", Offset = "0xD57AA0", VA = "0xD57AA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600219C")]
	[Address(RVA = "0xD57ACC", Offset = "0xD57ACC", VA = "0xD57ACC")]
	public void InitializeShelves()
	{
	}

	[Token(Token = "0x600219D")]
	[Address(RVA = "0xD57E9C", Offset = "0xD57E9C", VA = "0xD57E9C")]
	public void AutoSelectEquipedItems()
	{
	}

	[Token(Token = "0x600219E")]
	[Address(RVA = "0xD57F68", Offset = "0xD57F68", VA = "0xD57F68")]
	private void OnHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x600219F")]
	[Address(RVA = "0xD581AC", Offset = "0xD581AC", VA = "0xD581AC")]
	private void OnUnHighlight(CustomizationItemUI _)
	{
	}

	[Token(Token = "0x60021A0")]
	[Address(RVA = "0xD58230", Offset = "0xD58230", VA = "0xD58230")]
	public CustomizationItemsShelves()
	{
	}
}
[Token(Token = "0x20005A1")]
public class CustomizationItemUI : SelectableDynamicTouchItem<ItemsDefs.ItemDefinition>
{
	[Token(Token = "0x20005A2")]
	[CompilerGenerated]
	private sealed class <PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizationItemUI item;

		[Token(Token = "0x1700059F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0xD599AC", Offset = "0xD599AC", VA = "0xD599AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xD599F4", Offset = "0xD599F4", VA = "0xD599F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xD590E0", Offset = "0xD590E0", VA = "0xD590E0")]
		[DebuggerHidden]
		public <PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xD5971C", Offset = "0xD5971C", VA = "0xD5971C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xD59720", Offset = "0xD59720", VA = "0xD59720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xD599B4", Offset = "0xD599B4", VA = "0xD599B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Customization item game objects")]
	public Image icon;

	[Token(Token = "0x4002188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject newGO;

	[Token(Token = "0x4002189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject unlocked;

	[Token(Token = "0x400218A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject disabledUnequip;

	[Token(Token = "0x400218B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject unequip;

	[Token(Token = "0x400218C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject plate;

	[Token(Token = "0x400218D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject PricePlate;

	[Token(Token = "0x400218E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoughtAnimationController newlyBought;

	[Token(Token = "0x400218F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject boughtSparks;

	[Token(Token = "0x4002190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ItemsDefs.ItemDefinition _item;

	[Token(Token = "0x4002191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _fxCoolDown;

	[Token(Token = "0x4002192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static CoroutineHandle _playFxOnMirrorIfAnchoredWhenItemLoadCo;

	[Token(Token = "0x1700059D")]
	public override ItemsDefs.ItemDefinition Data
	{
		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xD583D8", Offset = "0xD583D8", VA = "0xD583D8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700059E")]
	public UIItemTransitions transitions
	{
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xD583E0", Offset = "0xD583E0", VA = "0xD583E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60021A7")]
	[Address(RVA = "0xD584B4", Offset = "0xD584B4", VA = "0xD584B4", Slot = "9")]
	public override void InitializeItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60021A8")]
	[Address(RVA = "0xD58674", Offset = "0xD58674", VA = "0xD58674")]
	private void ToggleSupportItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60021A9")]
	[Address(RVA = "0xD58920", Offset = "0xD58920", VA = "0xD58920")]
	private void ToggleMustBeEquippedItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60021AA")]
	[Address(RVA = "0xD58AF8", Offset = "0xD58AF8", VA = "0xD58AF8")]
	private void ItemSelected()
	{
	}

	[Token(Token = "0x60021AB")]
	[Address(RVA = "0xD58BA0", Offset = "0xD58BA0", VA = "0xD58BA0")]
	private void EquippeItem()
	{
	}

	[Token(Token = "0x60021AC")]
	[Address(RVA = "0xD58D84", Offset = "0xD58D84", VA = "0xD58D84")]
	private void PlaySound(bool equip)
	{
	}

	[Token(Token = "0x60021AD")]
	[Address(RVA = "0xD58FCC", Offset = "0xD58FCC", VA = "0xD58FCC")]
	private static void PlayFxOnMirrorIfAnchored(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x60021AE")]
	[Address(RVA = "0xD5906C", Offset = "0xD5906C", VA = "0xD5906C")]
	[IteratorStateMachine(typeof(<PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23))]
	private static IEnumerator<float> PlayFxOnMirrorIfAnchoredWhenItemLoad(CustomizationItemUI item)
	{
		return null;
	}

	[Token(Token = "0x60021AF")]
	[Address(RVA = "0xD59108", Offset = "0xD59108", VA = "0xD59108")]
	private void ReSelectItem()
	{
	}

	[Token(Token = "0x60021B0")]
	[Address(RVA = "0xD59114", Offset = "0xD59114", VA = "0xD59114")]
	private void DequippeAndSelectDefault()
	{
	}

	[Token(Token = "0x60021B1")]
	[Address(RVA = "0xD5928C", Offset = "0xD5928C", VA = "0xD5928C")]
	private void DequippeItem()
	{
	}

	[Token(Token = "0x60021B2")]
	[Address(RVA = "0xD59310", Offset = "0xD59310", VA = "0xD59310")]
	private void OnPurchaseTap()
	{
	}

	[Token(Token = "0x60021B3")]
	[Address(RVA = "0xD59680", Offset = "0xD59680", VA = "0xD59680")]
	public CustomizationItemUI()
	{
	}
}
[Token(Token = "0x20005A4")]
public class DefaultItemCardUI : MonoBehaviour
{
	[Token(Token = "0x4002198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeEx title;

	[Token(Token = "0x60021C0")]
	[Address(RVA = "0xD59F20", Offset = "0xD59F20", VA = "0xD59F20")]
	public void Show(ItemsDefs.ItemDefinition itemDef)
	{
	}

	[Token(Token = "0x60021C1")]
	[Address(RVA = "0xD59FAC", Offset = "0xD59FAC", VA = "0xD59FAC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60021C2")]
	[Address(RVA = "0xD59FD0", Offset = "0xD59FD0", VA = "0xD59FD0")]
	public DefaultItemCardUI()
	{
	}
}
[Token(Token = "0x20005A5")]
public class ItemsInfoPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A6")]
	public class CardBgPair
	{
		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementCardUI card;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject BG;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xD5AE28", Offset = "0xD5AE28", VA = "0xD5AE28")]
		public CardBgPair()
		{
		}
	}

	[Token(Token = "0x20005A7")]
	[CompilerGenerated]
	private sealed class <FreezeFor>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemsInfoPanel <>4__this;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x170005A1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xD5AEF4", Offset = "0xD5AEF4", VA = "0xD5AEF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xD5AF3C", Offset = "0xD5AF3C", VA = "0xD5AF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xD5A9E0", Offset = "0xD5A9E0", VA = "0xD5A9E0")]
		[DebuggerHidden]
		public <FreezeFor>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xD5AE30", Offset = "0xD5AE30", VA = "0xD5AE30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xD5AE34", Offset = "0xD5AE34", VA = "0xD5AE34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xD5AEFC", Offset = "0xD5AEFC", VA = "0xD5AEFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A9")]
	[CompilerGenerated]
	private sealed class <UseInstantRotationAfterCo>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float secs;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemsInfoPanel <>4__this;

		[Token(Token = "0x170005A3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xD5B0E4", Offset = "0xD5B0E4", VA = "0xD5B0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0xD5B12C", Offset = "0xD5B12C", VA = "0xD5B12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xD5AC68", Offset = "0xD5AC68", VA = "0xD5AC68")]
		[DebuggerHidden]
		public <UseInstantRotationAfterCo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xD5B028", Offset = "0xD5B028", VA = "0xD5B028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xD5B02C", Offset = "0xD5B02C", VA = "0xD5B02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xD5B0EC", Offset = "0xD5B0EC", VA = "0xD5B0EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ItemsInfoPanel inst;

	[Token(Token = "0x400219A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro title;

	[Token(Token = "0x400219B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject requiredText;

	[Token(Token = "0x400219C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DefaultItemCardUI defaultItem;

	[Token(Token = "0x400219D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PriceItemCardUI priceItem;

	[Token(Token = "0x400219E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject root;

	[Token(Token = "0x400219F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float smoothTime;

	[Token(Token = "0x40021A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float instantRotationTime;

	[Token(Token = "0x40021A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float hideCooldown;

	[Token(Token = "0x40021A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Placement")]
	[Tooltip("one achievement element width")]
	public float width;

	[Token(Token = "0x40021A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("one achievement element hight")]
	public float hight;

	[Token(Token = "0x40021A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minHight;

	[Token(Token = "0x40021A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxHight;

	[Token(Token = "0x40021A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minXOffsetAngle;

	[Token(Token = "0x40021A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxXOffsetAngle;

	[Token(Token = "0x40021A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float YOffsetCompensationAngle;

	[Token(Token = "0x40021A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool _lockInPlace;

	[Token(Token = "0x40021AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Pair of achievement card and the background")]
	public CardBgPair[] pairs;

	[Token(Token = "0x40021AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _wantToHide;

	[Token(Token = "0x40021AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _instantRotation;

	[Token(Token = "0x40021AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomizationItemUI _lastItem;

	[Token(Token = "0x40021AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CoroutineHandle _UseInstantRotationAfterCo;

	[Token(Token = "0x40021AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _initialized;

	[Token(Token = "0x40021B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion _targetRotation;

	[Token(Token = "0x40021B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SmoothQuaternion _smoothRot;

	[Token(Token = "0x60021C3")]
	[Address(RVA = "0xD59FD8", Offset = "0xD59FD8", VA = "0xD59FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021C4")]
	[Address(RVA = "0xD5A0FC", Offset = "0xD5A0FC", VA = "0xD5A0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60021C5")]
	[Address(RVA = "0xD57FC4", Offset = "0xD57FC4", VA = "0xD57FC4")]
	public void Show(CustomizationItemUI itemUI, int index)
	{
	}

	[Token(Token = "0x60021C6")]
	[Address(RVA = "0xD59A50", Offset = "0xD59A50", VA = "0xD59A50")]
	public void ShowTransactionError()
	{
	}

	[Token(Token = "0x60021C7")]
	[Address(RVA = "0xD59604", Offset = "0xD59604", VA = "0xD59604")]
	public void ShowTransactionProcessing()
	{
	}

	[Token(Token = "0x60021C8")]
	[Address(RVA = "0xD5A8F0", Offset = "0xD5A8F0", VA = "0xD5A8F0")]
	[IteratorStateMachine(typeof(<FreezeFor>d__27))]
	private IEnumerator<float> FreezeFor(float secs)
	{
		return null;
	}

	[Token(Token = "0x60021C9")]
	[Address(RVA = "0xD59CB8", Offset = "0xD59CB8", VA = "0xD59CB8")]
	public void ShowPrice(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60021CA")]
	[Address(RVA = "0xD5A3E4", Offset = "0xD5A3E4", VA = "0xD5A3E4")]
	private void ShowRequiredAchievements(ItemsDefs.ItemDefinition def)
	{
	}

	[Token(Token = "0x60021CB")]
	[Address(RVA = "0xD5A120", Offset = "0xD5A120", VA = "0xD5A120")]
	private void ShowDefaultItem(ItemsDefs.ItemDefinition def)
	{
	}

	[Token(Token = "0x60021CC")]
	[Address(RVA = "0xD5A174", Offset = "0xD5A174", VA = "0xD5A174")]
	private void SetAchievemetnsCards([Optional] Achievement[] achs)
	{
	}

	[Token(Token = "0x60021CD")]
	[Address(RVA = "0xD581C4", Offset = "0xD581C4", VA = "0xD581C4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60021CE")]
	[Address(RVA = "0xD5AB48", Offset = "0xD5AB48", VA = "0xD5AB48")]
	private void HideImeddiate()
	{
	}

	[Token(Token = "0x60021CF")]
	[Address(RVA = "0xD5ABE4", Offset = "0xD5ABE4", VA = "0xD5ABE4")]
	[IteratorStateMachine(typeof(<UseInstantRotationAfterCo>d__35))]
	private IEnumerator<float> UseInstantRotationAfterCo(float secs)
	{
		return null;
	}

	[Token(Token = "0x60021D0")]
	[Address(RVA = "0xD5A5BC", Offset = "0xD5A5BC", VA = "0xD5A5BC")]
	private void _SetTargetRotation(CustomizationItemUI itemUI, int numOfRequiredAchievemens, int index)
	{
	}

	[Token(Token = "0x60021D1")]
	[Address(RVA = "0xD5A038", Offset = "0xD5A038", VA = "0xD5A038")]
	private void Init()
	{
	}

	[Token(Token = "0x60021D2")]
	[Address(RVA = "0xD5AC90", Offset = "0xD5AC90", VA = "0xD5AC90")]
	private void Update()
	{
	}

	[Token(Token = "0x60021D3")]
	[Address(RVA = "0xD5A7BC", Offset = "0xD5A7BC", VA = "0xD5A7BC")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60021D4")]
	[Address(RVA = "0xD5AA2C", Offset = "0xD5AA2C", VA = "0xD5AA2C")]
	private void SetCard(Achievement ach, AchievementCardUI card, GameObject bg)
	{
	}

	[Token(Token = "0x60021D5")]
	[Address(RVA = "0xD5ACA0", Offset = "0xD5ACA0", VA = "0xD5ACA0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60021D6")]
	[Address(RVA = "0xD5AE00", Offset = "0xD5AE00", VA = "0xD5AE00")]
	public ItemsInfoPanel()
	{
	}
}
[Token(Token = "0x20005AA")]
public class PriceItemCardUI : MonoBehaviour
{
	[Token(Token = "0x40021BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeFormatted priceFormatted;

	[Token(Token = "0x40021BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject processing;

	[Token(Token = "0x40021C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject error;

	[Token(Token = "0x40021C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject purchased;

	[Token(Token = "0x60021E7")]
	[Address(RVA = "0xD5A244", Offset = "0xD5A244", VA = "0xD5A244")]
	public void Show(ItemsDefs.ItemDefinition itemDef)
	{
	}

	[Token(Token = "0x60021E8")]
	[Address(RVA = "0xD5A974", Offset = "0xD5A974", VA = "0xD5A974")]
	public void ShowProcessing()
	{
	}

	[Token(Token = "0x60021E9")]
	[Address(RVA = "0xD5A884", Offset = "0xD5A884", VA = "0xD5A884")]
	public void ShowError()
	{
	}

	[Token(Token = "0x60021EA")]
	[Address(RVA = "0xD5AA08", Offset = "0xD5AA08", VA = "0xD5AA08")]
	public void Hide()
	{
	}

	[Token(Token = "0x60021EB")]
	[Address(RVA = "0xD5B188", Offset = "0xD5B188", VA = "0xD5B188")]
	public PriceItemCardUI()
	{
	}
}
[Token(Token = "0x20005AB")]
public class SupportItemsShelf : CustomizationItemsShelf
{
	[NonSerialized]
	[Token(Token = "0x40021C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public new ItemsDefs.ItemShelf itemsType;

	[Token(Token = "0x40021C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject supportText;

	[Token(Token = "0x60021EC")]
	[Address(RVA = "0xD5C190", Offset = "0xD5C190", VA = "0xD5C190")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60021ED")]
	[Address(RVA = "0xD5C19C", Offset = "0xD5C19C", VA = "0xD5C19C", Slot = "8")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60021EE")]
	[Address(RVA = "0xD5C30C", Offset = "0xD5C30C", VA = "0xD5C30C")]
	public SupportItemsShelf()
	{
	}
}
[Token(Token = "0x20005AC")]
public class RotateAvatarKnob : KnobBase
{
	[Token(Token = "0x60021EF")]
	[Address(RVA = "0xD5C31C", Offset = "0xD5C31C", VA = "0xD5C31C", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x60021F0")]
	[Address(RVA = "0xD5C3B4", Offset = "0xD5C3B4", VA = "0xD5C3B4", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x60021F1")]
	[Address(RVA = "0xD5C3F8", Offset = "0xD5C3F8", VA = "0xD5C3F8", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x60021F2")]
	[Address(RVA = "0xD5C4C8", Offset = "0xD5C4C8", VA = "0xD5C4C8")]
	public RotateAvatarKnob()
	{
	}
}
[Token(Token = "0x20005AD")]
public static class NewCoOp
{
	[Token(Token = "0x170005A5")]
	public static bool PlayerSeen
	{
		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xD5C4D0", Offset = "0xD5C4D0", VA = "0xD5C4D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xD5C5AC", Offset = "0xD5C5AC", VA = "0xD5C5AC")]
		set
		{
		}
	}
}
[Token(Token = "0x20005AE")]
public static class NewLevelEditor
{
	[Token(Token = "0x170005A6")]
	public static bool PlayerSeenFlakh
	{
		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xD5C6A8", Offset = "0xD5C6A8", VA = "0xD5C6A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xD5C768", Offset = "0xD5C768", VA = "0xD5C768")]
		set
		{
		}
	}

	[Token(Token = "0x170005A7")]
	public static bool PlayerOpenedLE
	{
		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xD5C870", Offset = "0xD5C870", VA = "0xD5C870")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xD5C930", Offset = "0xD5C930", VA = "0xD5C930")]
		set
		{
		}
	}
}
[Token(Token = "0x20005AF")]
public class OptionsUI : MonoBehaviour
{
	[Token(Token = "0x20005B0")]
	public enum Context
	{
		[Token(Token = "0x40021D5")]
		MainMenu,
		[Token(Token = "0x40021D6")]
		Arena,
		[Token(Token = "0x40021D7")]
		Tutorial,
		[Token(Token = "0x40021D8")]
		Editor,
		[Token(Token = "0x40021D9")]
		EditorPlay,
		[Token(Token = "0x40021DA")]
		EditorPublicPlay
	}

	[Token(Token = "0x20005B1")]
	public enum ButtonId
	{
		[Token(Token = "0x40021DC")]
		Settings,
		[Token(Token = "0x40021DD")]
		HowToPlay,
		[Token(Token = "0x40021DE")]
		Restart,
		[Token(Token = "0x40021DF")]
		Leave,
		[Token(Token = "0x40021E0")]
		SkipTutorial,
		[Token(Token = "0x40021E1")]
		Edit,
		[Token(Token = "0x40021E2")]
		Browse
	}

	[Serializable]
	[Token(Token = "0x20005B2")]
	public class SerializableButtonId : SerializableEnum<ButtonId>
	{
		[Token(Token = "0x6002212")]
		[Address(RVA = "0xD5E6CC", Offset = "0xD5E6CC", VA = "0xD5E6CC")]
		public SerializableButtonId()
		{
		}
	}

	[Token(Token = "0x20005B3")]
	public delegate void OnDone();

	[Token(Token = "0x40021C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SerializableButtonId[] mainMenuButtons;

	[Token(Token = "0x40021C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableButtonId[] arenaButtons;

	[Token(Token = "0x40021C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SerializableButtonId[] tutorialButtons;

	[Token(Token = "0x40021C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SerializableButtonId[] editorButtons;

	[Token(Token = "0x40021C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SerializableButtonId[] editorLocalPlayButtons;

	[Token(Token = "0x40021C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SerializableButtonId[] editorPubliclPlayButtons;

	[Token(Token = "0x40021CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DynamicListMenu dynamicListMenu;

	[Token(Token = "0x40021CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OptionsUI inst;

	[Token(Token = "0x40021CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x40021CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _shown;

	[Token(Token = "0x40021CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Context _context;

	[Token(Token = "0x40021CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _canLeaveMatch;

	[Token(Token = "0x40021D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _canRestartGame;

	[Token(Token = "0x40021D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool _canEdit;

	[Token(Token = "0x40021D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<ButtonId, RectTransform> _buttons;

	[Token(Token = "0x40021D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnDone _onDone;

	[Token(Token = "0x170005A8")]
	public bool shown
	{
		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xD5CA38", Offset = "0xD5CA38", VA = "0xD5CA38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60021FA")]
	[Address(RVA = "0xD5CA40", Offset = "0xD5CA40", VA = "0xD5CA40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021FB")]
	[Address(RVA = "0xD5CBAC", Offset = "0xD5CBAC", VA = "0xD5CBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60021FC")]
	[Address(RVA = "0xD5CC30", Offset = "0xD5CC30", VA = "0xD5CC30")]
	public void showMainMenu(OnDone onDone)
	{
	}

	[Token(Token = "0x60021FD")]
	[Address(RVA = "0xD5CFC0", Offset = "0xD5CFC0", VA = "0xD5CFC0")]
	public void showArena(OnDone onDone, bool canLeaveMatch, bool canRestartGame)
	{
	}

	[Token(Token = "0x60021FE")]
	[Address(RVA = "0xD5D100", Offset = "0xD5D100", VA = "0xD5D100")]
	public void showTutorial(OnDone onDone)
	{
	}

	[Token(Token = "0x60021FF")]
	[Address(RVA = "0xD5CC48", Offset = "0xD5CC48", VA = "0xD5CC48")]
	private void show(Context context, OnDone onDone, bool canLeaveMatch, bool canRestartGame, bool canEdit)
	{
	}

	[Token(Token = "0x6002200")]
	[Address(RVA = "0xD5D59C", Offset = "0xD5D59C", VA = "0xD5D59C")]
	public void hide()
	{
	}

	[Token(Token = "0x6002201")]
	[Address(RVA = "0xD5D118", Offset = "0xD5D118", VA = "0xD5D118")]
	private void createButtons()
	{
	}

	[Token(Token = "0x6002202")]
	[Address(RVA = "0xD5D80C", Offset = "0xD5D80C", VA = "0xD5D80C")]
	private void destroyButtons()
	{
	}

	[Token(Token = "0x6002203")]
	[Address(RVA = "0xD5DA54", Offset = "0xD5DA54", VA = "0xD5DA54")]
	public void hideTemporarily()
	{
	}

	[Token(Token = "0x6002204")]
	[Address(RVA = "0xD5DA5C", Offset = "0xD5DA5C", VA = "0xD5DA5C")]
	public void showAgain()
	{
	}

	[Token(Token = "0x6002205")]
	[Address(RVA = "0xD5CBC8", Offset = "0xD5CBC8", VA = "0xD5CBC8")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6002206")]
	[Address(RVA = "0xD5DA64", Offset = "0xD5DA64", VA = "0xD5DA64")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6002207")]
	[Address(RVA = "0xD5DA68", Offset = "0xD5DA68", VA = "0xD5DA68")]
	private void onBack()
	{
	}

	[Token(Token = "0x6002208")]
	[Address(RVA = "0xD5DA6C", Offset = "0xD5DA6C", VA = "0xD5DA6C")]
	public void onClickSettings()
	{
	}

	[Token(Token = "0x6002209")]
	[Address(RVA = "0xD5E164", Offset = "0xD5E164", VA = "0xD5E164")]
	private void onSettingsDone()
	{
	}

	[Token(Token = "0x600220A")]
	[Address(RVA = "0xD5E16C", Offset = "0xD5E16C", VA = "0xD5E16C")]
	public void onClickHowToPlay()
	{
	}

	[Token(Token = "0x600220B")]
	[Address(RVA = "0xD5E22C", Offset = "0xD5E22C", VA = "0xD5E22C")]
	private void onHowToPlayDone()
	{
	}

	[Token(Token = "0x600220C")]
	[Address(RVA = "0xD5E234", Offset = "0xD5E234", VA = "0xD5E234")]
	public void onClickLeaveGame()
	{
	}

	[Token(Token = "0x600220D")]
	[Address(RVA = "0xD5E300", Offset = "0xD5E300", VA = "0xD5E300")]
	public void onClickRestartGame()
	{
	}

	[Token(Token = "0x600220E")]
	[Address(RVA = "0xD5E358", Offset = "0xD5E358", VA = "0xD5E358")]
	public void onClickBackToMainMenu()
	{
	}

	[Token(Token = "0x600220F")]
	[Address(RVA = "0xD5E528", Offset = "0xD5E528", VA = "0xD5E528")]
	private void onClickSkipTutorial()
	{
	}

	[Token(Token = "0x6002210")]
	[Address(RVA = "0xD5E588", Offset = "0xD5E588", VA = "0xD5E588")]
	public void onClickEditOrBrows()
	{
	}

	[Token(Token = "0x6002211")]
	[Address(RVA = "0xD5E6C4", Offset = "0xD5E6C4", VA = "0xD5E6C4")]
	public OptionsUI()
	{
	}
}
[Token(Token = "0x20005B4")]
public class PageButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005B5")]
	public class Backgrounds
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject left;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject middle;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject right;

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xD5E8A4", Offset = "0xD5E8A4", VA = "0xD5E8A4")]
		public Backgrounds()
		{
		}
	}

	[Token(Token = "0x20005B6")]
	public enum Side
	{
		[Token(Token = "0x40021E8")]
		Left,
		[Token(Token = "0x40021E9")]
		Middle,
		[Token(Token = "0x40021EA")]
		Right
	}

	[Token(Token = "0x40021E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Backgrounds backgrounds;

	[Token(Token = "0x6002217")]
	[Address(RVA = "0xD5E820", Offset = "0xD5E820", VA = "0xD5E820")]
	public void setSide(Side side)
	{
	}

	[Token(Token = "0x6002218")]
	[Address(RVA = "0xD5E89C", Offset = "0xD5E89C", VA = "0xD5E89C")]
	public PageButton()
	{
	}
}
[Token(Token = "0x20005B7")]
public class PersonalMusicToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x600221A")]
	[Address(RVA = "0xD5E8AC", Offset = "0xD5E8AC", VA = "0xD5E8AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600221B")]
	[Address(RVA = "0xD5E950", Offset = "0xD5E950", VA = "0xD5E950", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x600221C")]
	[Address(RVA = "0xD5EA0C", Offset = "0xD5EA0C", VA = "0xD5EA0C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x600221D")]
	[Address(RVA = "0xD5ED54", Offset = "0xD5ED54", VA = "0xD5ED54")]
	private void resetSwitchIfCantUsePersonalTracks()
	{
	}

	[Token(Token = "0x600221E")]
	[Address(RVA = "0xD5EDE4", Offset = "0xD5EDE4", VA = "0xD5EDE4", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x600221F")]
	[Address(RVA = "0xD5EE4C", Offset = "0xD5EE4C", VA = "0xD5EE4C")]
	public PersonalMusicToggleSwitch()
	{
	}
}
[Token(Token = "0x20005B8")]
public class PINKnob : KnobBase
{
	[Token(Token = "0x40021EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _digit;

	[Token(Token = "0x170005A9")]
	public int digit
	{
		[Token(Token = "0x6002220")]
		[Address(RVA = "0xD5EE74", Offset = "0xD5EE74", VA = "0xD5EE74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002221")]
		[Address(RVA = "0xD5EE7C", Offset = "0xD5EE7C", VA = "0xD5EE7C")]
		set
		{
		}
	}

	[Token(Token = "0x6002222")]
	[Address(RVA = "0xD5EE94", Offset = "0xD5EE94", VA = "0xD5EE94", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6002223")]
	[Address(RVA = "0xD5EEA8", Offset = "0xD5EEA8", VA = "0xD5EEA8", Slot = "8")]
	public override void onAmplitudeChanged(float _, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6002224")]
	[Address(RVA = "0xD5EFB0", Offset = "0xD5EFB0", VA = "0xD5EFB0", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6002225")]
	[Address(RVA = "0xD5EFD8", Offset = "0xD5EFD8", VA = "0xD5EFD8", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6002226")]
	[Address(RVA = "0xD5F028", Offset = "0xD5F028", VA = "0xD5F028")]
	public PINKnob()
	{
	}
}
[Token(Token = "0x20005B9")]
public class PlayerNamesFlakh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BA")]
	public class PlayerObjects
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI name;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image icon;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject paused;

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xD5F4EC", Offset = "0xD5F4EC", VA = "0xD5F4EC")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x20005BB")]
	[CompilerGenerated]
	private sealed class <showAndHide>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerNamesFlakh <>4__this;

		[Token(Token = "0x170005AA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xD5F6E4", Offset = "0xD5F6E4", VA = "0xD5F6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xD5F72C", Offset = "0xD5F72C", VA = "0xD5F72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xD5F114", Offset = "0xD5F114", VA = "0xD5F114")]
		[DebuggerHidden]
		public <showAndHide>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xD5F4F4", Offset = "0xD5F4F4", VA = "0xD5F4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xD5F4F8", Offset = "0xD5F4F8", VA = "0xD5F4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xD5F6EC", Offset = "0xD5F6EC", VA = "0xD5F6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40021EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float showDelay;

	[Token(Token = "0x40021ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerObjects player1;

	[Token(Token = "0x40021EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerObjects player2;

	[Token(Token = "0x6002227")]
	[Address(RVA = "0xD5F038", Offset = "0xD5F038", VA = "0xD5F038")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002228")]
	[Address(RVA = "0xD5F0A0", Offset = "0xD5F0A0", VA = "0xD5F0A0")]
	[IteratorStateMachine(typeof(<showAndHide>d__5))]
	private IEnumerator<float> showAndHide()
	{
		return null;
	}

	[Token(Token = "0x6002229")]
	[Address(RVA = "0xD5F13C", Offset = "0xD5F13C", VA = "0xD5F13C")]
	private void show()
	{
	}

	[Token(Token = "0x600222A")]
	[Address(RVA = "0xD5F2DC", Offset = "0xD5F2DC", VA = "0xD5F2DC")]
	private void hide()
	{
	}

	[Token(Token = "0x600222B")]
	[Address(RVA = "0xD5F36C", Offset = "0xD5F36C", VA = "0xD5F36C")]
	private void Update()
	{
	}

	[Token(Token = "0x600222C")]
	[Address(RVA = "0xD5F494", Offset = "0xD5F494", VA = "0xD5F494")]
	public PlayerNamesFlakh()
	{
	}
}
[Token(Token = "0x20005BC")]
public class PlayerProfileUI : Area
{
	[Serializable]
	[Token(Token = "0x20005BD")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x20005BE")]
		public class Arcade
		{
			[Serializable]
			[Token(Token = "0x20005BF")]
			public class Main
			{
				[Token(Token = "0x4002211")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] bestScoreTexts;

				[Token(Token = "0x6002253")]
				[Address(RVA = "0xD62680", Offset = "0xD62680", VA = "0xD62680")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005C0")]
			public class Stats
			{
				[Token(Token = "0x4002212")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x4002213")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesPlayed;

				[Token(Token = "0x4002214")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x6002254")]
				[Address(RVA = "0xD62688", Offset = "0xD62688", VA = "0xD62688")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x6002252")]
			[Address(RVA = "0xD62678", Offset = "0xD62678", VA = "0xD62678")]
			public Arcade()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C1")]
		public class Solo
		{
			[Serializable]
			[Token(Token = "0x20005C2")]
			public class Main
			{
				[Token(Token = "0x4002218")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] starsEarnedTexts;

				[Token(Token = "0x4002219")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numPotentialStars;

				[Token(Token = "0x6002256")]
				[Address(RVA = "0xD62698", Offset = "0xD62698", VA = "0xD62698")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005C3")]
			public class Stats
			{
				[Token(Token = "0x400221A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro num1Stars;

				[Token(Token = "0x400221B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro num2Stars;

				[Token(Token = "0x400221C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro num3Stars;

				[Token(Token = "0x400221D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x6002257")]
				[Address(RVA = "0xD626A0", Offset = "0xD626A0", VA = "0xD626A0")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xD62690", Offset = "0xD62690", VA = "0xD62690")]
			public Solo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C4")]
		public class Versus
		{
			[Serializable]
			[Token(Token = "0x20005C5")]
			public class Main
			{
				[Token(Token = "0x4002221")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] skillRatingTexts;

				[Token(Token = "0x6002259")]
				[Address(RVA = "0xD626B0", Offset = "0xD626B0", VA = "0xD626B0")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005C6")]
			public class Stats
			{
				[Token(Token = "0x4002222")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x4002223")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesWon;

				[Token(Token = "0x4002224")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x600225A")]
				[Address(RVA = "0xD626B8", Offset = "0xD626B8", VA = "0xD626B8")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x6002258")]
			[Address(RVA = "0xD626A8", Offset = "0xD626A8", VA = "0xD626A8")]
			public Versus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C7")]
		public class CoOp
		{
			[Serializable]
			[Token(Token = "0x20005C8")]
			public class Main
			{
				[Token(Token = "0x4002228")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] bestScoreTexts;

				[Token(Token = "0x600225C")]
				[Address(RVA = "0xD626C8", Offset = "0xD626C8", VA = "0xD626C8")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005C9")]
			public class Stats
			{
				[Token(Token = "0x4002229")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x400222A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesPlayed;

				[Token(Token = "0x400222B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x600225D")]
				[Address(RVA = "0xD626D0", Offset = "0xD626D0", VA = "0xD626D0")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x600225B")]
			[Address(RVA = "0xD626C0", Offset = "0xD626C0", VA = "0xD626C0")]
			public CoOp()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005CA")]
		public class Level
		{
			[Serializable]
			[Token(Token = "0x20005CB")]
			public class Medals
			{
				[Token(Token = "0x400222F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject unrated;

				[Token(Token = "0x4002230")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GameObject noob;

				[Token(Token = "0x4002231")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GameObject underdog;

				[Token(Token = "0x4002232")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public GameObject risingStar;

				[Token(Token = "0x4002233")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public GameObject baller;

				[Token(Token = "0x4002234")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public GameObject master;

				[Token(Token = "0x4002235")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public GameObject racketLord;

				[Token(Token = "0x4002236")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public GameObject ballBuster;

				[Token(Token = "0x600225F")]
				[Address(RVA = "0xD626E0", Offset = "0xD626E0", VA = "0xD626E0")]
				public Medals()
				{
				}
			}

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro[] xpTexts;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Localize levelName;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Medals medals;

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xD626D8", Offset = "0xD626D8", VA = "0xD626D8")]
			public Level()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005CC")]
		public class ProgressBar
		{
			[Serializable]
			[Token(Token = "0x20005CD")]
			public class Levels
			{
				[Serializable]
				[Token(Token = "0x20005CE")]
				public class LevelObjs
				{
					[Token(Token = "0x4002242")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public UIItemTransitions transitions;

					[Token(Token = "0x4002243")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public TextMeshPro requiredXp;

					[Token(Token = "0x6002262")]
					[Address(RVA = "0xD62700", Offset = "0xD62700", VA = "0xD62700")]
					public LevelObjs()
					{
					}
				}

				[Token(Token = "0x400223B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public LevelObjs noob;

				[Token(Token = "0x400223C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public LevelObjs underdog;

				[Token(Token = "0x400223D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LevelObjs risingStar;

				[Token(Token = "0x400223E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public LevelObjs baller;

				[Token(Token = "0x400223F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public LevelObjs master;

				[Token(Token = "0x4002240")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public LevelObjs racketLord;

				[Token(Token = "0x4002241")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public LevelObjs ballBuster;

				[Token(Token = "0x6002261")]
				[Address(RVA = "0xD626F8", Offset = "0xD626F8", VA = "0xD626F8")]
				public Levels()
				{
				}
			}

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform arrow;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float arrowAnimationLength;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform verticalAxis;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Levels levels;

			[Token(Token = "0x6002260")]
			[Address(RVA = "0xD626E8", Offset = "0xD626E8", VA = "0xD626E8")]
			public ProgressBar()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005CF")]
		public class Stats
		{
			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro totalTimePlayed;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro totalDamage;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro numTargetsDestroyed;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro maxHitStreak;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro maxPointsPerShot;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro hitAccuracy;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextMeshPro avgPointsPerShot;

			[Token(Token = "0x6002263")]
			[Address(RVA = "0xD62708", Offset = "0xD62708", VA = "0xD62708")]
			public Stats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D0")]
		public class Achievements
		{
			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AchievementListUI achievementListUI;

			[Token(Token = "0x6002264")]
			[Address(RVA = "0xD62710", Offset = "0xD62710", VA = "0xD62710")]
			public Achievements()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D1")]
		public class NameAndImage
		{
			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image playerImage;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro playerName;

			[Token(Token = "0x6002265")]
			[Address(RVA = "0xD62718", Offset = "0xD62718", VA = "0xD62718")]
			public NameAndImage()
			{
			}
		}

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Arcade arcade;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arcade arcadeNightmare;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Solo solo;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Versus versus;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CoOp coOp;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Level level;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ProgressBar progressBar;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Stats stats;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Achievements achievements;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIItemTransitions customizationsNewBadge;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NameAndImage nameAndImage;

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xD62670", Offset = "0xD62670", VA = "0xD62670")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x20005D3")]
	[CompilerGenerated]
	private sealed class <WaitForOnlineProfile>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x170005B2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600226C")]
			[Address(RVA = "0xD62944", Offset = "0xD62944", VA = "0xD62944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xD6298C", Offset = "0xD6298C", VA = "0xD6298C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xD5FBD8", Offset = "0xD5FBD8", VA = "0xD5FBD8")]
		[DebuggerHidden]
		public <WaitForOnlineProfile>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xD627EC", Offset = "0xD627EC", VA = "0xD627EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xD627F0", Offset = "0xD627F0", VA = "0xD627F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xD6294C", Offset = "0xD6294C", VA = "0xD6294C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[CompilerGenerated]
	private sealed class <PopulatePlayerNameAndSpriteCo>d__36 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x170005B4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002272")]
			[Address(RVA = "0xD62B90", Offset = "0xD62B90", VA = "0xD62B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xD62BD8", Offset = "0xD62BD8", VA = "0xD62BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xD61FD8", Offset = "0xD61FD8", VA = "0xD61FD8")]
		[DebuggerHidden]
		public <PopulatePlayerNameAndSpriteCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xD629E8", Offset = "0xD629E8", VA = "0xD629E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xD629EC", Offset = "0xD629EC", VA = "0xD629EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xD62B98", Offset = "0xD62B98", VA = "0xD62B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[CompilerGenerated]
	private sealed class <ArrowAnimation>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float relXp;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <tVel>5__4;

		[Token(Token = "0x170005B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xD62DD0", Offset = "0xD62DD0", VA = "0xD62DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0xD62E18", Offset = "0xD62E18", VA = "0xD62E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xD62000", Offset = "0xD62000", VA = "0xD62000")]
		[DebuggerHidden]
		public <ArrowAnimation>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xD62C34", Offset = "0xD62C34", VA = "0xD62C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xD62C38", Offset = "0xD62C38", VA = "0xD62C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xD62DD8", Offset = "0xD62DD8", VA = "0xD62DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40021F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x40021F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CustomizationsUI customizations;

	[Token(Token = "0x40021F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MirrorArea mirrorArea;

	[Token(Token = "0x40021F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerProfileUI inst;

	[Token(Token = "0x40021FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _totalTimePlayedFormat;

	[Token(Token = "0x40021FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x40021FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _maxPointsPerShotFormat;

	[Token(Token = "0x40021FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x40021FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _totalDamageFormat;

	[Token(Token = "0x40021FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _numTargetsDestroyedFormat;

	[Token(Token = "0x4002200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _avgPointsPerShotFormat;

	[Token(Token = "0x4002201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal bool customizationsClick;

	[Token(Token = "0x4002202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private CoroutineHandle _waitForOnlineProfileCo;

	[Token(Token = "0x170005AC")]
	public bool IsAllShowingOrShown
	{
		[Token(Token = "0x6002235")]
		[Address(RVA = "0xD5F788", Offset = "0xD5F788", VA = "0xD5F788")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AD")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002236")]
		[Address(RVA = "0xD5F7D4", Offset = "0xD5F7D4", VA = "0xD5F7D4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AE")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002237")]
		[Address(RVA = "0xD5F7DC", Offset = "0xD5F7DC", VA = "0xD5F7DC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AF")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002238")]
		[Address(RVA = "0xD5F7E4", Offset = "0xD5F7E4", VA = "0xD5F7E4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B0")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002239")]
		[Address(RVA = "0xD5F7EC", Offset = "0xD5F7EC", VA = "0xD5F7EC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B1")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600223A")]
		[Address(RVA = "0xD5F7F4", Offset = "0xD5F7F4", VA = "0xD5F7F4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600223B")]
	[Address(RVA = "0xD5F7FC", Offset = "0xD5F7FC", VA = "0xD5F7FC", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600223C")]
	[Address(RVA = "0xD5FA04", Offset = "0xD5FA04", VA = "0xD5FA04", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600223D")]
	[Address(RVA = "0xD5FA88", Offset = "0xD5FA88", VA = "0xD5FA88")]
	private void PopulateWhenOnlineIsProfileReady()
	{
	}

	[Token(Token = "0x600223E")]
	[Address(RVA = "0xD5FB64", Offset = "0xD5FB64", VA = "0xD5FB64")]
	[IteratorStateMachine(typeof(<WaitForOnlineProfile>d__29))]
	private IEnumerator<float> WaitForOnlineProfile()
	{
		return null;
	}

	[Token(Token = "0x600223F")]
	[Address(RVA = "0xD5FC00", Offset = "0xD5FC00", VA = "0xD5FC00", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6002240")]
	[Address(RVA = "0xD5FCC4", Offset = "0xD5FCC4", VA = "0xD5FCC4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002241")]
	[Address(RVA = "0xD5FDC8", Offset = "0xD5FDC8", VA = "0xD5FDC8")]
	private void populate()
	{
	}

	[Token(Token = "0x6002242")]
	[Address(RVA = "0xD61768", Offset = "0xD61768", VA = "0xD61768")]
	private void PopulateArcade()
	{
	}

	[Token(Token = "0x6002243")]
	[Address(RVA = "0xD61DE4", Offset = "0xD61DE4", VA = "0xD61DE4")]
	private void SetGameModeScoreText(LocalizeFormatted loc, int? score)
	{
	}

	[Token(Token = "0x6002244")]
	[Address(RVA = "0xD5FA20", Offset = "0xD5FA20", VA = "0xD5FA20")]
	public void PopulatePlayerNameAndSprite()
	{
	}

	[Token(Token = "0x6002245")]
	[Address(RVA = "0xD61F64", Offset = "0xD61F64", VA = "0xD61F64")]
	[IteratorStateMachine(typeof(<PopulatePlayerNameAndSpriteCo>d__36))]
	private IEnumerator<float> PopulatePlayerNameAndSpriteCo()
	{
		return null;
	}

	[Token(Token = "0x6002246")]
	[Address(RVA = "0xD61EE0", Offset = "0xD61EE0", VA = "0xD61EE0")]
	[IteratorStateMachine(typeof(<ArrowAnimation>d__37))]
	private IEnumerator ArrowAnimation(float relXp)
	{
		return null;
	}

	[Token(Token = "0x6002247")]
	[Address(RVA = "0xD62028", Offset = "0xD62028", VA = "0xD62028")]
	private void SetArrowPos(float relPos)
	{
	}

	[Token(Token = "0x6002248")]
	[Address(RVA = "0xD620EC", Offset = "0xD620EC", VA = "0xD620EC", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002249")]
	[Address(RVA = "0xD62244", Offset = "0xD62244", VA = "0xD62244", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x600224A")]
	[Address(RVA = "0xD62258", Offset = "0xD62258", VA = "0xD62258")]
	public void OnCustomizeClick()
	{
	}

	[Token(Token = "0x600224B")]
	[Address(RVA = "0xD6235C", Offset = "0xD6235C", VA = "0xD6235C")]
	public void OnAchievementsReloadedAfterProfileOnline()
	{
	}

	[Token(Token = "0x600224C")]
	[Address(RVA = "0xD623D8", Offset = "0xD623D8", VA = "0xD623D8")]
	public PlayerProfileUI()
	{
	}
}
[Token(Token = "0x20005D6")]
public class AvatarCustomizationsPopup : BaseMessagePopup, ISingleton
{
	[Token(Token = "0x400225D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform crown;

	[Token(Token = "0x400225E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float crownRotationSpeed;

	[Token(Token = "0x400225F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool forceShow;

	[Token(Token = "0x4002260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AvatarCustomizationsPopup inst;

	[Token(Token = "0x4002261")]
	private const string popUpSeenByUserKey = "avatar_custom_beta_seen";

	[Token(Token = "0x170005B8")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x600227C")]
		[Address(RVA = "0xD62EE0", Offset = "0xD62EE0", VA = "0xD62EE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600227D")]
		[Address(RVA = "0xD62E94", Offset = "0xD62E94", VA = "0xD62E94")]
		set
		{
		}
	}

	[Token(Token = "0x170005B9")]
	public bool needToShow
	{
		[Token(Token = "0x600227E")]
		[Address(RVA = "0xD62F30", Offset = "0xD62F30", VA = "0xD62F30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600227B")]
	[Address(RVA = "0xD62E20", Offset = "0xD62E20", VA = "0xD62E20", Slot = "22")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x600227F")]
	[Address(RVA = "0xD62F48", Offset = "0xD62F48", VA = "0xD62F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6002280")]
	[Address(RVA = "0xD62F88", Offset = "0xD62F88", VA = "0xD62F88", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x6002281")]
	[Address(RVA = "0xD63014", Offset = "0xD63014", VA = "0xD63014")]
	public AvatarCustomizationsPopup()
	{
	}
}
[Token(Token = "0x20005D7")]
public abstract class BaseMessagePopup : Area
{
	[Token(Token = "0x170005BA")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002282")]
		[Address(RVA = "0xD6302C", Offset = "0xD6302C", VA = "0xD6302C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BB")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002283")]
		[Address(RVA = "0xD63034", Offset = "0xD63034", VA = "0xD63034", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BC")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002284")]
		[Address(RVA = "0xD6303C", Offset = "0xD6303C", VA = "0xD6303C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BD")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002285")]
		[Address(RVA = "0xD63044", Offset = "0xD63044", VA = "0xD63044", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BE")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002286")]
		[Address(RVA = "0xD6304C", Offset = "0xD6304C", VA = "0xD6304C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002287")]
	[Address(RVA = "0xD63054", Offset = "0xD63054", VA = "0xD63054", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002288")]
	[Address(RVA = "0xD62FA4", Offset = "0xD62FA4", VA = "0xD62FA4", Slot = "21")]
	public virtual void onDoneClicked()
	{
	}

	[Token(Token = "0x6002289")]
	[Address(RVA = "0xD6310C", Offset = "0xD6310C", VA = "0xD6310C", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x600228A")]
	[Address(RVA = "0xD63110", Offset = "0xD63110", VA = "0xD63110", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x600228B")]
	[Address(RVA = "0xD63024", Offset = "0xD63024", VA = "0xD63024")]
	protected BaseMessagePopup()
	{
	}
}
[Token(Token = "0x20005D8")]
public class LevelEditorPopup : BaseMessagePopup
{
	[Token(Token = "0x4002262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorPopup inst;

	[Token(Token = "0x170005BF")]
	public bool needToShow
	{
		[Token(Token = "0x600228D")]
		[Address(RVA = "0xD63178", Offset = "0xD63178", VA = "0xD63178")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600228C")]
	[Address(RVA = "0xD63114", Offset = "0xD63114", VA = "0xD63114", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600228E")]
	[Address(RVA = "0xD63190", Offset = "0xD63190", VA = "0xD63190", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x600228F")]
	[Address(RVA = "0xD631AC", Offset = "0xD631AC", VA = "0xD631AC")]
	public LevelEditorPopup()
	{
	}
}
[Token(Token = "0x20005D9")]
public class MonthlyChallengePopup : BaseMessagePopup
{
	[Serializable]
	[Token(Token = "0x20005DA")]
	public class MedalObj
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xD63548", Offset = "0xD63548", VA = "0xD63548")]
		public MedalObj()
		{
		}
	}

	[Token(Token = "0x4002263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<MedalObj> medalObjs;

	[Token(Token = "0x4002264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallengePopup inst;

	[Token(Token = "0x170005C0")]
	private static bool playerIsQualified
	{
		[Token(Token = "0x6002291")]
		[Address(RVA = "0xD63218", Offset = "0xD63218", VA = "0xD63218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C1")]
	public bool needToShow
	{
		[Token(Token = "0x6002292")]
		[Address(RVA = "0xD632AC", Offset = "0xD632AC", VA = "0xD632AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002290")]
	[Address(RVA = "0xD631B4", Offset = "0xD631B4", VA = "0xD631B4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002293")]
	[Address(RVA = "0xD6338C", Offset = "0xD6338C", VA = "0xD6338C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002294")]
	[Address(RVA = "0xD63540", Offset = "0xD63540", VA = "0xD63540")]
	public MonthlyChallengePopup()
	{
	}
}
[Token(Token = "0x20005DB")]
public class MultiplayerSeasonPopup : BaseMessagePopup
{
	[Token(Token = "0x4002267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocalizeFormatted message;

	[Token(Token = "0x4002268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerSeasonPopup inst;

	[Token(Token = "0x6002296")]
	[Address(RVA = "0xD63550", Offset = "0xD63550", VA = "0xD63550", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002297")]
	[Address(RVA = "0xD635B4", Offset = "0xD635B4", VA = "0xD635B4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002298")]
	[Address(RVA = "0xD63644", Offset = "0xD63644", VA = "0xD63644", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x6002299")]
	[Address(RVA = "0xD636A8", Offset = "0xD636A8", VA = "0xD636A8")]
	public MultiplayerSeasonPopup()
	{
	}
}
[Token(Token = "0x20005DC")]
public class MultiplayerUpdateMsgPopup : BaseMessagePopup
{
	[Token(Token = "0x4002269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUpdateMsgPopup inst;

	[Token(Token = "0x600229A")]
	[Address(RVA = "0xD636B0", Offset = "0xD636B0", VA = "0xD636B0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600229B")]
	[Address(RVA = "0xD63714", Offset = "0xD63714", VA = "0xD63714", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x600229C")]
	[Address(RVA = "0xD63778", Offset = "0xD63778", VA = "0xD63778")]
	public MultiplayerUpdateMsgPopup()
	{
	}
}
[Token(Token = "0x20005DD")]
public class NxMessagePopup : BaseMessagePopup
{
	[Token(Token = "0x400226A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NxMessagePopup inst;

	[Token(Token = "0x600229D")]
	[Address(RVA = "0xD63780", Offset = "0xD63780", VA = "0xD63780", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600229E")]
	[Address(RVA = "0xD637E4", Offset = "0xD637E4", VA = "0xD637E4", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x600229F")]
	[Address(RVA = "0xD63848", Offset = "0xD63848", VA = "0xD63848")]
	public NxMessagePopup()
	{
	}
}
[Token(Token = "0x20005DE")]
public class OSTReleasePopup : BaseMessagePopup
{
	[Token(Token = "0x400226B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OSTReleasePopup inst;

	[Token(Token = "0x60022A0")]
	[Address(RVA = "0xD63850", Offset = "0xD63850", VA = "0xD63850", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60022A1")]
	[Address(RVA = "0xD638B4", Offset = "0xD638B4", VA = "0xD638B4", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60022A2")]
	[Address(RVA = "0xD63918", Offset = "0xD63918", VA = "0xD63918")]
	public OSTReleasePopup()
	{
	}
}
[Token(Token = "0x20005DF")]
public class YURMessagePopup : BaseMessagePopup
{
	[Token(Token = "0x400226C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURMessagePopup inst;

	[Token(Token = "0x60022A3")]
	[Address(RVA = "0xD63920", Offset = "0xD63920", VA = "0xD63920", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60022A4")]
	[Address(RVA = "0xD63984", Offset = "0xD63984", VA = "0xD63984", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60022A5")]
	[Address(RVA = "0xD639E8", Offset = "0xD639E8", VA = "0xD639E8")]
	public YURMessagePopup()
	{
	}
}
[Token(Token = "0x20005E0")]
public class RandomizedChild : MonoBehaviour
{
	[Token(Token = "0x60022A6")]
	[Address(RVA = "0xD639F0", Offset = "0xD639F0", VA = "0xD639F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022A7")]
	[Address(RVA = "0xD63A94", Offset = "0xD63A94", VA = "0xD63A94")]
	public RandomizedChild()
	{
	}
}
[Token(Token = "0x20005E1")]
[RequireComponent(typeof(TextMeshPro))]
public class RealWorldTime : MonoBehaviour
{
	[Token(Token = "0x400226D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected StringBuilder _builder;

	[Token(Token = "0x400226E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro _tmp;

	[Token(Token = "0x60022A8")]
	[Address(RVA = "0xD63A9C", Offset = "0xD63A9C", VA = "0xD63A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022A9")]
	[Address(RVA = "0xD63AF4", Offset = "0xD63AF4", VA = "0xD63AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60022AA")]
	[Address(RVA = "0xD63D40", Offset = "0xD63D40", VA = "0xD63D40")]
	public RealWorldTime()
	{
	}
}
[Token(Token = "0x20005E2")]
public class RTT : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E3")]
	public class Item
	{
		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int depth;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int antiAliasing;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float boxSize;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture texture;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool drawRect;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _numItems;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _index;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _size;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _objs;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _aspect;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _root;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _needsRefresh;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isEmpty;

		[Token(Token = "0x170005C2")]
		public Vector2 size
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xD64D14", Offset = "0xD64D14", VA = "0xD64D14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xD645C8", Offset = "0xD645C8", VA = "0xD645C8")]
		public void init()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD6406C", Offset = "0xD6406C", VA = "0xD6406C")]
		public void add(GameObject obj)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xD6421C", Offset = "0xD6421C", VA = "0xD6421C")]
		public void remove(GameObject obj)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xD64BF8", Offset = "0xD64BF8", VA = "0xD64BF8")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xD64338", Offset = "0xD64338", VA = "0xD64338")]
		public void needsRefresh()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xD649B8", Offset = "0xD649B8", VA = "0xD649B8")]
		public void refresh()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xD64D1C", Offset = "0xD64D1C", VA = "0xD64D1C")]
		public void validate()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xD64D40", Offset = "0xD64D40", VA = "0xD64D40")]
		public Item()
		{
		}
	}

	[Token(Token = "0x400226F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RTT inst;

	[Token(Token = "0x4002270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool refreshEveryFrame;

	[Token(Token = "0x4002271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item[] items;

	[Token(Token = "0x4002272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera _camera;

	[Token(Token = "0x4002273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _layerID;

	[Token(Token = "0x4002274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, Item> _items;

	[Token(Token = "0x4002275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _maxItemWidth;

	[Token(Token = "0x60022AB")]
	[Address(RVA = "0xD63DB8", Offset = "0xD63DB8", VA = "0xD63DB8")]
	public static int getItemCodeByName(string name)
	{
		return default(int);
	}

	[Token(Token = "0x60022AC")]
	[Address(RVA = "0xD63DE0", Offset = "0xD63DE0", VA = "0xD63DE0")]
	private Item getItemByName(string itemName)
	{
		return null;
	}

	[Token(Token = "0x60022AD")]
	[Address(RVA = "0xD63E44", Offset = "0xD63E44", VA = "0xD63E44")]
	private void initCamera()
	{
	}

	[Token(Token = "0x60022AE")]
	[Address(RVA = "0xD6404C", Offset = "0xD6404C", VA = "0xD6404C")]
	public void addObject(string itemName, GameObject obj)
	{
	}

	[Token(Token = "0x60022AF")]
	[Address(RVA = "0xD641FC", Offset = "0xD641FC", VA = "0xD641FC")]
	public void removeObject(string itemName, GameObject obj)
	{
	}

	[Token(Token = "0x60022B0")]
	[Address(RVA = "0xD642D0", Offset = "0xD642D0", VA = "0xD642D0")]
	public void refreshItem(int itemCode)
	{
	}

	[Token(Token = "0x60022B1")]
	[Address(RVA = "0xD64344", Offset = "0xD64344", VA = "0xD64344")]
	public void refreshItem(string itemName)
	{
	}

	[Token(Token = "0x60022B2")]
	[Address(RVA = "0xD64364", Offset = "0xD64364", VA = "0xD64364")]
	public RenderTexture getItemTexture(string itemName)
	{
		return null;
	}

	[Token(Token = "0x60022B3")]
	[Address(RVA = "0xD64380", Offset = "0xD64380", VA = "0xD64380")]
	public Vector2 getItemSize(string itemName)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60022B4")]
	[Address(RVA = "0xD6439C", Offset = "0xD6439C", VA = "0xD6439C")]
	public static void removeRTTLayerFromCameraCullingMask(Camera cam)
	{
	}

	[Token(Token = "0x60022B5")]
	[Address(RVA = "0xD64418", Offset = "0xD64418", VA = "0xD64418")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022B6")]
	[Address(RVA = "0xD64854", Offset = "0xD64854", VA = "0xD64854")]
	private void Start()
	{
	}

	[Token(Token = "0x60022B7")]
	[Address(RVA = "0xD64944", Offset = "0xD64944", VA = "0xD64944")]
	private void Update()
	{
	}

	[Token(Token = "0x60022B8")]
	[Address(RVA = "0xD64B9C", Offset = "0xD64B9C", VA = "0xD64B9C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60022B9")]
	[Address(RVA = "0xD64D0C", Offset = "0xD64D0C", VA = "0xD64D0C")]
	public RTT()
	{
	}
}
[Token(Token = "0x20005E4")]
public class SendingLogUI : MonoBehaviour
{
	[Token(Token = "0x4002287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sending;

	[Token(Token = "0x4002288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sent;

	[Token(Token = "0x4002289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocalizeFormatted sentText;

	[Token(Token = "0x400228A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject failed;

	[Token(Token = "0x400228B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x400228C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SendingLogUI inst;

	[Token(Token = "0x400228D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _shown;

	[Token(Token = "0x400228E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _logToken;

	[Token(Token = "0x170005C3")]
	public bool shown
	{
		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xD64D68", Offset = "0xD64D68", VA = "0xD64D68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60022C4")]
	[Address(RVA = "0xD64D70", Offset = "0xD64D70", VA = "0xD64D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022C5")]
	[Address(RVA = "0xD64EDC", Offset = "0xD64EDC", VA = "0xD64EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60022C6")]
	[Address(RVA = "0xD64F4C", Offset = "0xD64F4C", VA = "0xD64F4C")]
	public void show(string logToken)
	{
	}

	[Token(Token = "0x60022C7")]
	[Address(RVA = "0xD653BC", Offset = "0xD653BC", VA = "0xD653BC")]
	public void hide()
	{
	}

	[Token(Token = "0x60022C8")]
	[Address(RVA = "0xD64EE4", Offset = "0xD64EE4", VA = "0xD64EE4")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60022C9")]
	[Address(RVA = "0xD654F4", Offset = "0xD654F4", VA = "0xD654F4")]
	private void onBack()
	{
	}

	[Token(Token = "0x60022CA")]
	[Address(RVA = "0xD654F8", Offset = "0xD654F8", VA = "0xD654F8")]
	public void onCancelClicked()
	{
	}

	[Token(Token = "0x60022CB")]
	[Address(RVA = "0xD654FC", Offset = "0xD654FC", VA = "0xD654FC")]
	public void onSendSucceeded(string logToken)
	{
	}

	[Token(Token = "0x60022CC")]
	[Address(RVA = "0xD655D0", Offset = "0xD655D0", VA = "0xD655D0")]
	public void onSendFailed(string logToken, string error)
	{
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0xD65628", Offset = "0xD65628", VA = "0xD65628")]
	public SendingLogUI()
	{
	}
}
[Token(Token = "0x20005E5")]
public class SettingsChooser : MonoBehaviour
{
	[Token(Token = "0x400228F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SettingsUI quest;

	[Token(Token = "0x4002290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingsUI pc;

	[Token(Token = "0x4002291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SettingsUI psvr;

	[Token(Token = "0x4002292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SendingLogUI sendingLog;

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0xD65630", Offset = "0xD65630", VA = "0xD65630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0xD6575C", Offset = "0xD6575C", VA = "0xD6575C")]
	public SettingsChooser()
	{
	}
}
[Token(Token = "0x20005E6")]
public class SettingsUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E7")]
	public struct MicrophoneSwitches
	{
		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject regular;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject disabled;
	}

	[Serializable]
	[Token(Token = "0x20005E8")]
	public struct Tooltips
	{
		[Serializable]
		[Token(Token = "0x20005E9")]
		public struct MyMusic
		{
			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject defaultTip;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject noPermission;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject unavailableInDemo;
		}

		[Serializable]
		[Token(Token = "0x20005EA")]
		public struct Microphone
		{
			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject noPermission;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject unavailableInDemo;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject disabled;
		}

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MyMusic myMusic;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Microphone microphone;
	}

	[Serializable]
	[Token(Token = "0x20005EB")]
	public struct StreamingCamUI
	{
		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject toggle;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject tooltip;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject disabledToggle;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject disabledTooltip;
	}

	[Token(Token = "0x20005EC")]
	public delegate void OnDone();

	[Token(Token = "0x4002293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MicrophoneSwitches micSwitches;

	[Token(Token = "0x4002294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Tooltips tooltips;

	[Token(Token = "0x4002295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StreamingCamUI streamingCamUI;

	[Token(Token = "0x4002296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The other (included) interactive components will be disabled while send-log pop-up is open")]
	public Transform[] excludedInteractiveComponents;

	[Token(Token = "0x4002297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SettingsUI inst;

	[Token(Token = "0x4002298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> _rootObjects;

	[Token(Token = "0x4002299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly List<MonoBehaviour> _interactiveComponents;

	[Token(Token = "0x400229A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _shown;

	[Token(Token = "0x400229B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _openedViaOptions;

	[Token(Token = "0x400229C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OnDone _onDone;

	[Token(Token = "0x400229D")]
	private const string microphonePermissionDeniedKey = "microphone_permission_denied";

	[Token(Token = "0x400229E")]
	private const string storagePermissionDeniedKey = "storage_permission_denied";

	[Token(Token = "0x400229F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _viewDisabledMicrophoneSwitch;

	[Token(Token = "0x170005C4")]
	public bool shown
	{
		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xD65764", Offset = "0xD65764", VA = "0xD65764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C5")]
	private bool microphonePermissionEverDenied
	{
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xD65DB4", Offset = "0xD65DB4", VA = "0xD65DB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xD65E04", Offset = "0xD65E04", VA = "0xD65E04")]
		set
		{
		}
	}

	[Token(Token = "0x170005C6")]
	private bool storagePermissionEverDenied
	{
		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xD65F74", Offset = "0xD65F74", VA = "0xD65F74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xD65FC4", Offset = "0xD65FC4", VA = "0xD65FC4")]
		set
		{
		}
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0xD6576C", Offset = "0xD6576C", VA = "0xD6576C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022D2")]
	[Address(RVA = "0xD65A8C", Offset = "0xD65A8C", VA = "0xD65A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60022D3")]
	[Address(RVA = "0xD65900", Offset = "0xD65900", VA = "0xD65900")]
	private void findInteractiveComponents()
	{
	}

	[Token(Token = "0x60022D4")]
	[Address(RVA = "0xD65BEC", Offset = "0xD65BEC", VA = "0xD65BEC")]
	private bool isExcludedFromInteractiveComponents(MonoBehaviour component)
	{
		return default(bool);
	}

	[Token(Token = "0x60022D5")]
	[Address(RVA = "0xD5DBF0", Offset = "0xD5DBF0", VA = "0xD5DBF0")]
	public void show(bool openedViaOptions, OnDone onDone)
	{
	}

	[Token(Token = "0x60022D6")]
	[Address(RVA = "0xD5D828", Offset = "0xD5D828", VA = "0xD5D828")]
	public void hide(bool byForce = false)
	{
	}

	[Token(Token = "0x60022D7")]
	[Address(RVA = "0xD65A94", Offset = "0xD65A94", VA = "0xD65A94")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60022D8")]
	[Address(RVA = "0xD65DA4", Offset = "0xD65DA4", VA = "0xD65DA4")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60022D9")]
	[Address(RVA = "0xD65DAC", Offset = "0xD65DAC", VA = "0xD65DAC")]
	private void onBack()
	{
	}

	[Token(Token = "0x60022DC")]
	[Address(RVA = "0xD65E4C", Offset = "0xD65E4C", VA = "0xD65E4C")]
	public void onMicrophonePermissionGranted()
	{
	}

	[Token(Token = "0x60022DD")]
	[Address(RVA = "0xD65E50", Offset = "0xD65E50", VA = "0xD65E50")]
	public void onMicrophonePermissionDenied()
	{
	}

	[Token(Token = "0x60022DE")]
	[Address(RVA = "0xD65C80", Offset = "0xD65C80", VA = "0xD65C80")]
	private void UpdateMicTooltipAndSwitch()
	{
	}

	[Token(Token = "0x60022DF")]
	[Address(RVA = "0xD65F00", Offset = "0xD65F00", VA = "0xD65F00")]
	private void Update()
	{
	}

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0xD6600C", Offset = "0xD6600C", VA = "0xD6600C")]
	public void onStoragePermissionGranted()
	{
	}

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0xD66010", Offset = "0xD66010", VA = "0xD66010")]
	public void onStoragePermissionDenied()
	{
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0xD65D34", Offset = "0xD65D34", VA = "0xD65D34")]
	private void updateMyMusicTooltip()
	{
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0xD6602C", Offset = "0xD6602C", VA = "0xD6602C")]
	public void onSendLogClicked()
	{
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0xD650D8", Offset = "0xD650D8", VA = "0xD650D8")]
	public void makeInteractive(bool interactive)
	{
	}

	[Token(Token = "0x60022E7")]
	[Address(RVA = "0xD660FC", Offset = "0xD660FC", VA = "0xD660FC")]
	public void ViewDisabledMicrophoneSwitch(bool show)
	{
	}

	[Token(Token = "0x60022E8")]
	[Address(RVA = "0xD66108", Offset = "0xD66108", VA = "0xD66108")]
	public SettingsUI()
	{
	}
}
[Token(Token = "0x20005EE")]
public class ShowAtPlayerHeight : MonoBehaviour
{
	[Token(Token = "0x40022B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIPlayerPosition.Level level;

	[Token(Token = "0x60022F1")]
	[Address(RVA = "0xD662A4", Offset = "0xD662A4", VA = "0xD662A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022F2")]
	[Address(RVA = "0xD66360", Offset = "0xD66360", VA = "0xD66360")]
	public ShowAtPlayerHeight()
	{
	}
}
[Token(Token = "0x20005EF")]
public class ShowAtPosition : MonoBehaviour
{
	[Token(Token = "0x40022B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform otherTransform;

	[Token(Token = "0x60022F3")]
	[Address(RVA = "0xD66368", Offset = "0xD66368", VA = "0xD66368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022F4")]
	[Address(RVA = "0xD663E4", Offset = "0xD663E4", VA = "0xD663E4")]
	public ShowAtPosition()
	{
	}
}
[Token(Token = "0x20005F0")]
public class SmoothTransition
{
	[Token(Token = "0x20005F1")]
	public enum State
	{
		[Token(Token = "0x40022BA")]
		NotNearlyDone,
		[Token(Token = "0x40022BB")]
		NearlyDone,
		[Token(Token = "0x40022BC")]
		Done
	}

	[Token(Token = "0x40022B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MainMenuTransitionModifier _modifier;

	[Token(Token = "0x40022B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State _state;

	[Token(Token = "0x40022B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _desiredT;

	[Token(Token = "0x40022B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _currentT;

	[Token(Token = "0x40022B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _smoothTime;

	[Token(Token = "0x40022B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _currentVelocity;

	[Token(Token = "0x40022B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _diffToDesired;

	[Token(Token = "0x170005C7")]
	public bool notNearlyDone
	{
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xD663EC", Offset = "0xD663EC", VA = "0xD663EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C8")]
	public bool nearlyDone
	{
		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xD663FC", Offset = "0xD663FC", VA = "0xD663FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C9")]
	public bool done
	{
		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xD6640C", Offset = "0xD6640C", VA = "0xD6640C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CA")]
	public float diffToDesired
	{
		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xD6641C", Offset = "0xD6641C", VA = "0xD6641C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60022F9")]
	[Address(RVA = "0xD66424", Offset = "0xD66424", VA = "0xD66424")]
	public SmoothTransition(MainMenuTransitionModifier modifier)
	{
	}

	[Token(Token = "0x60022FA")]
	[Address(RVA = "0xD66460", Offset = "0xD66460", VA = "0xD66460")]
	public void start(float desiredT)
	{
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0xD66500", Offset = "0xD66500", VA = "0xD66500")]
	public void updateInstantly()
	{
	}

	[Token(Token = "0x60022FC")]
	[Address(RVA = "0xD66518", Offset = "0xD66518", VA = "0xD66518")]
	public float update()
	{
		return default(float);
	}
}
[Token(Token = "0x20005F2")]
public class SoloCampaignUI : Area
{
	[Serializable]
	[Token(Token = "0x20005F3")]
	public class Stages
	{
		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitionsGroup transitionsGroup;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float stagesBackgroundAnimationDuration;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloStageMenuItem[] stages;

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xD67318", Offset = "0xD67318", VA = "0xD67318")]
		public Stages()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005F4")]
	public class Celebrations
	{
		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitionsGroup transitionsGroup;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] stagesComplete;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject allStagesComplete;

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xD6732C", Offset = "0xD6732C", VA = "0xD6732C")]
		public Celebrations()
		{
		}
	}

	[Token(Token = "0x20005F5")]
	[CompilerGenerated]
	private sealed class <showAllSetsCompleteCelebrationCo>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x170005D0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002319")]
			[Address(RVA = "0xD6747C", Offset = "0xD6747C", VA = "0xD6747C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600231B")]
			[Address(RVA = "0xD674C4", Offset = "0xD674C4", VA = "0xD674C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xD66F14", Offset = "0xD66F14", VA = "0xD66F14")]
		[DebuggerHidden]
		public <showAllSetsCompleteCelebrationCo>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xD67334", Offset = "0xD67334", VA = "0xD67334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xD67338", Offset = "0xD67338", VA = "0xD67338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xD67484", Offset = "0xD67484", VA = "0xD67484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F6")]
	[CompilerGenerated]
	private sealed class <showStageCompleteCelebrationCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int completedStageIndex;

		[Token(Token = "0x170005D2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0xD67670", Offset = "0xD67670", VA = "0xD67670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0xD676B8", Offset = "0xD676B8", VA = "0xD676B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xD66FD0", Offset = "0xD66FD0", VA = "0xD66FD0")]
		[DebuggerHidden]
		public <showStageCompleteCelebrationCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xD67520", Offset = "0xD67520", VA = "0xD67520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xD67524", Offset = "0xD67524", VA = "0xD67524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xD67678", Offset = "0xD67678", VA = "0xD67678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F7")]
	[CompilerGenerated]
	private sealed class <updateStagesBackgroundCo>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <startOffset>5__2;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <endOffset>5__3;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__4;

		[Token(Token = "0x170005D4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0xD678F8", Offset = "0xD678F8", VA = "0xD678F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0xD67940", Offset = "0xD67940", VA = "0xD67940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xD671E0", Offset = "0xD671E0", VA = "0xD671E0")]
		[DebuggerHidden]
		public <updateStagesBackgroundCo>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xD67714", Offset = "0xD67714", VA = "0xD67714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xD67718", Offset = "0xD67718", VA = "0xD67718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xD67900", Offset = "0xD67900", VA = "0xD67900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40022BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Stages stages;

	[Token(Token = "0x40022BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Celebrations celebrations;

	[Token(Token = "0x40022BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloCampaignUI inst;

	[Token(Token = "0x40022C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _selectedStageIndex;

	[Token(Token = "0x40022C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _hexOffsetId;

	[Token(Token = "0x40022C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _desiredBgMaterialHexOffset;

	[Token(Token = "0x40022C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _firstStageSelectionSinceShown;

	[Token(Token = "0x40022C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _updateStagesBackgroundIsRunning;

	[Token(Token = "0x170005CB")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xD66728", Offset = "0xD66728", VA = "0xD66728", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CC")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xD66730", Offset = "0xD66730", VA = "0xD66730", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CD")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xD66738", Offset = "0xD66738", VA = "0xD66738", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CE")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002300")]
		[Address(RVA = "0xD66740", Offset = "0xD66740", VA = "0xD66740", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CF")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002301")]
		[Address(RVA = "0xD66748", Offset = "0xD66748", VA = "0xD66748", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002302")]
	[Address(RVA = "0xD66750", Offset = "0xD66750", VA = "0xD66750", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002303")]
	[Address(RVA = "0xD667E4", Offset = "0xD667E4", VA = "0xD667E4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002304")]
	[Address(RVA = "0xD66D18", Offset = "0xD66D18", VA = "0xD66D18", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002305")]
	[Address(RVA = "0xD66D98", Offset = "0xD66D98", VA = "0xD66D98", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6002306")]
	[Address(RVA = "0xD66964", Offset = "0xD66964", VA = "0xD66964")]
	private void showNormal()
	{
	}

	[Token(Token = "0x6002307")]
	[Address(RVA = "0xD66A60", Offset = "0xD66A60", VA = "0xD66A60")]
	private void selectStage()
	{
	}

	[Token(Token = "0x6002308")]
	[Address(RVA = "0xD66E90", Offset = "0xD66E90", VA = "0xD66E90")]
	[IteratorStateMachine(typeof(<showAllSetsCompleteCelebrationCo>d__26))]
	private IEnumerator<float> showAllSetsCompleteCelebrationCo(float delay)
	{
		return null;
	}

	[Token(Token = "0x6002309")]
	[Address(RVA = "0xD66B30", Offset = "0xD66B30", VA = "0xD66B30")]
	private void showAllSetsCompleteCelebration()
	{
	}

	[Token(Token = "0x600230A")]
	[Address(RVA = "0xD66F3C", Offset = "0xD66F3C", VA = "0xD66F3C")]
	[IteratorStateMachine(typeof(<showStageCompleteCelebrationCo>d__28))]
	private IEnumerator<float> showStageCompleteCelebrationCo(int completedStageIndex, float delay)
	{
		return null;
	}

	[Token(Token = "0x600230B")]
	[Address(RVA = "0xD66C1C", Offset = "0xD66C1C", VA = "0xD66C1C")]
	private void showStageCompleteCelebration(int completedStageIndex)
	{
	}

	[Token(Token = "0x600230C")]
	[Address(RVA = "0xD66FF8", Offset = "0xD66FF8", VA = "0xD66FF8")]
	public void onCelebrationDoneClicked()
	{
	}

	[Token(Token = "0x600230D")]
	[Address(RVA = "0xD66FFC", Offset = "0xD66FFC", VA = "0xD66FFC")]
	public void onStageSelected(SoloStageMenuItem soloStage)
	{
	}

	[Token(Token = "0x600230E")]
	[Address(RVA = "0xD67018", Offset = "0xD67018", VA = "0xD67018")]
	public void onSetSelected(SoloSetMenuItem soloSet)
	{
	}

	[Token(Token = "0x600230F")]
	[Address(RVA = "0xD670B4", Offset = "0xD670B4", VA = "0xD670B4")]
	public void setStageBgHexOffset(float bgMaterialHexOffset)
	{
	}

	[Token(Token = "0x6002310")]
	[Address(RVA = "0xD6716C", Offset = "0xD6716C", VA = "0xD6716C")]
	[IteratorStateMachine(typeof(<updateStagesBackgroundCo>d__34))]
	private IEnumerator<float> updateStagesBackgroundCo()
	{
		return null;
	}

	[Token(Token = "0x6002311")]
	[Address(RVA = "0xD67208", Offset = "0xD67208", VA = "0xD67208")]
	public void showLeaderboard(string setId)
	{
	}

	[Token(Token = "0x6002312")]
	[Address(RVA = "0xD672E0", Offset = "0xD672E0", VA = "0xD672E0")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6002313")]
	[Address(RVA = "0xD67308", Offset = "0xD67308", VA = "0xD67308")]
	public SoloCampaignUI()
	{
	}
}
[Token(Token = "0x20005F8")]
public class SoloMenuUI : Area
{
	[Token(Token = "0x40022DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup transitionsGroup;

	[Token(Token = "0x40022DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloMenuUI inst;

	[Token(Token = "0x170005D6")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002328")]
		[Address(RVA = "0xD6799C", Offset = "0xD6799C", VA = "0xD6799C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D7")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002329")]
		[Address(RVA = "0xD679A4", Offset = "0xD679A4", VA = "0xD679A4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D8")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600232A")]
		[Address(RVA = "0xD679AC", Offset = "0xD679AC", VA = "0xD679AC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D9")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0xD679B4", Offset = "0xD679B4", VA = "0xD679B4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005DA")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600232C")]
		[Address(RVA = "0xD679BC", Offset = "0xD679BC", VA = "0xD679BC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600232D")]
	[Address(RVA = "0xD679C4", Offset = "0xD679C4", VA = "0xD679C4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600232E")]
	[Address(RVA = "0xD67A28", Offset = "0xD67A28", VA = "0xD67A28", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600232F")]
	[Address(RVA = "0xD67C18", Offset = "0xD67C18", VA = "0xD67C18", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002330")]
	[Address(RVA = "0xD67D1C", Offset = "0xD67D1C", VA = "0xD67D1C", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6002331")]
	[Address(RVA = "0xD67DAC", Offset = "0xD67DAC", VA = "0xD67DAC")]
	public void onLevelEditorSelected()
	{
	}

	[Token(Token = "0x6002332")]
	[Address(RVA = "0xD67F8C", Offset = "0xD67F8C", VA = "0xD67F8C")]
	public void onCampaignSelected()
	{
	}

	[Token(Token = "0x6002333")]
	[Address(RVA = "0xD68000", Offset = "0xD68000", VA = "0xD68000")]
	public void onMonthlyChallengeSetSelected()
	{
	}

	[Token(Token = "0x6002334")]
	[Address(RVA = "0xD68144", Offset = "0xD68144", VA = "0xD68144")]
	public void showMonthlyChallengeLeaderboard()
	{
	}

	[Token(Token = "0x6002335")]
	[Address(RVA = "0xD68290", Offset = "0xD68290", VA = "0xD68290")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6002336")]
	[Address(RVA = "0xD682B0", Offset = "0xD682B0", VA = "0xD682B0")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x6002337")]
	[Address(RVA = "0xD68304", Offset = "0xD68304", VA = "0xD68304")]
	public SoloMenuUI()
	{
	}
}
[Token(Token = "0x20005F9")]
public class SoloSetMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FA")]
	public struct Complete
	{
		[Serializable]
		[Token(Token = "0x20005FB")]
		public struct Stars
		{
			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] stars;
		}

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizeDuration bestTimeText;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stars stars;
	}

	[Serializable]
	[Token(Token = "0x20005FC")]
	public struct Incomplete
	{
		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro progressText;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphBar progresBar;
	}

	[Token(Token = "0x20005FD")]
	private enum State
	{
		[Token(Token = "0x40022EC")]
		Unstarted,
		[Token(Token = "0x40022ED")]
		Incomplete,
		[Token(Token = "0x40022EE")]
		Complete
	}

	[Token(Token = "0x40022DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string setId;

	[Token(Token = "0x40022DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro numWavesText;

	[Token(Token = "0x40022DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image image;

	[Token(Token = "0x40022DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public new TextMeshPro name;

	[Token(Token = "0x40022E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro number;

	[Token(Token = "0x40022E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Complete complete;

	[Token(Token = "0x40022E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Incomplete incomplete;

	[Token(Token = "0x6002338")]
	[Address(RVA = "0xD6830C", Offset = "0xD6830C", VA = "0xD6830C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002339")]
	[Address(RVA = "0xD686F4", Offset = "0xD686F4", VA = "0xD686F4")]
	private State determineState(PlayerProfileData.Solo.Set setStats)
	{
		return default(State);
	}

	[Token(Token = "0x600233A")]
	[Address(RVA = "0xD687C8", Offset = "0xD687C8", VA = "0xD687C8")]
	private void showStars(PlayerProfileData.Solo.Set setStats)
	{
	}

	[Token(Token = "0x600233B")]
	[Address(RVA = "0xD6872C", Offset = "0xD6872C", VA = "0xD6872C")]
	private void hideStars()
	{
	}

	[Token(Token = "0x600233C")]
	[Address(RVA = "0xD68900", Offset = "0xD68900", VA = "0xD68900")]
	public void onLeaderboardClicked()
	{
	}

	[Token(Token = "0x600233D")]
	[Address(RVA = "0xD689DC", Offset = "0xD689DC", VA = "0xD689DC")]
	public SoloSetMenuItem()
	{
	}
}
[Token(Token = "0x20005FE")]
public class SoloStageMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FF")]
	public class Progress
	{
		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] setsOff;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] setsOn;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro starsText;

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xD68FC0", Offset = "0xD68FC0", VA = "0xD68FC0")]
		public Progress()
		{
		}
	}

	[Token(Token = "0x40022EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stageIndex;

	[Token(Token = "0x40022F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x40022F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bgMaterialHexOffset;

	[Token(Token = "0x40022F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Progress progress;

	[Token(Token = "0x40022F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _starsTextFormat;

	[Token(Token = "0x600233E")]
	[Address(RVA = "0xD689E4", Offset = "0xD689E4", VA = "0xD689E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600233F")]
	[Address(RVA = "0xD68AC4", Offset = "0xD68AC4", VA = "0xD68AC4")]
	private void onSelected()
	{
	}

	[Token(Token = "0x6002340")]
	[Address(RVA = "0xD68BC0", Offset = "0xD68BC0", VA = "0xD68BC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002341")]
	[Address(RVA = "0xD68F4C", Offset = "0xD68F4C", VA = "0xD68F4C")]
	public void enable(bool enabled)
	{
	}

	[Token(Token = "0x6002342")]
	[Address(RVA = "0xD68FB8", Offset = "0xD68FB8", VA = "0xD68FB8")]
	public SoloStageMenuItem()
	{
	}
}
[Token(Token = "0x2000600")]
public class SoloUI : Area
{
	[Token(Token = "0x40022F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoloMenuUI menu;

	[Token(Token = "0x40022F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoloCampaignUI campaign;

	[Token(Token = "0x40022F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloUI inst;

	[Token(Token = "0x40022FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _startAtCampaign;

	[Token(Token = "0x170005DB")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002344")]
		[Address(RVA = "0xD68FC8", Offset = "0xD68FC8", VA = "0xD68FC8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005DC")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002345")]
		[Address(RVA = "0xD68FD0", Offset = "0xD68FD0", VA = "0xD68FD0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005DD")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002346")]
		[Address(RVA = "0xD68FD8", Offset = "0xD68FD8", VA = "0xD68FD8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005DE")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002347")]
		[Address(RVA = "0xD68FE0", Offset = "0xD68FE0", VA = "0xD68FE0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005DF")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002348")]
		[Address(RVA = "0xD68FE8", Offset = "0xD68FE8", VA = "0xD68FE8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002349")]
	[Address(RVA = "0xD68FF0", Offset = "0xD68FF0", VA = "0xD68FF0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600234A")]
	[Address(RVA = "0xD69054", Offset = "0xD69054", VA = "0xD69054")]
	public void show(bool startAtCampaign)
	{
	}

	[Token(Token = "0x600234B")]
	[Address(RVA = "0xD69098", Offset = "0xD69098", VA = "0xD69098", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600234C")]
	[Address(RVA = "0xD690E8", Offset = "0xD690E8", VA = "0xD690E8", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600234D")]
	[Address(RVA = "0xD691C0", Offset = "0xD691C0", VA = "0xD691C0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600234E")]
	[Address(RVA = "0xD69214", Offset = "0xD69214", VA = "0xD69214")]
	public SoloUI()
	{
	}
}
[Token(Token = "0x2000601")]
public class StartRoom : Area
{
	[Serializable]
	[Token(Token = "0x2000602")]
	public class GotchaButton
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TouchItem button;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject enabledText;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject disableText;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject goOfflineText;

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xD69C04", Offset = "0xD69C04", VA = "0xD69C04")]
		public GotchaButton()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000603")]
	public class LegalObjects
	{
		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TouchItem agreeButton;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem declineButton;

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xD69C0C", Offset = "0xD69C0C", VA = "0xD69C0C")]
		public LegalObjects()
		{
		}
	}

	[Token(Token = "0x2000604")]
	private enum View
	{
		[Token(Token = "0x4002310")]
		LoadingLanguage,
		[Token(Token = "0x4002311")]
		Legal,
		[Token(Token = "0x4002312")]
		Normal
	}

	[Token(Token = "0x2000605")]
	[CompilerGenerated]
	private sealed class <monitorLanguageDownload>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartRoom <>4__this;

		[Token(Token = "0x170005E6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0xD69CE4", Offset = "0xD69CE4", VA = "0xD69CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xD69D2C", Offset = "0xD69D2C", VA = "0xD69D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xD69650", Offset = "0xD69650", VA = "0xD69650")]
		[DebuggerHidden]
		public <monitorLanguageDownload>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xD69C14", Offset = "0xD69C14", VA = "0xD69C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xD69C18", Offset = "0xD69C18", VA = "0xD69C18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xD69CEC", Offset = "0xD69CEC", VA = "0xD69CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000606")]
	[CompilerGenerated]
	private sealed class <startWhenReadyCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartRoom <>4__this;

		[Token(Token = "0x170005E8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xD69EC0", Offset = "0xD69EC0", VA = "0xD69EC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xD69F08", Offset = "0xD69F08", VA = "0xD69F08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xD699B4", Offset = "0xD699B4", VA = "0xD699B4")]
		[DebuggerHidden]
		public <startWhenReadyCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xD69D88", Offset = "0xD69D88", VA = "0xD69D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xD69D8C", Offset = "0xD69D8C", VA = "0xD69D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xD69EC8", Offset = "0xD69EC8", VA = "0xD69EC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40022FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro versionText;

	[Token(Token = "0x40022FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject legalFlakh;

	[Token(Token = "0x40022FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject legalButtonsArm;

	[Token(Token = "0x40022FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject normalFlakh;

	[Token(Token = "0x40022FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gotchaArm;

	[Token(Token = "0x4002300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject legalArm;

	[Token(Token = "0x4002301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject loadingLanguageArm;

	[Token(Token = "0x4002302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI loadingLanguageProgressText;

	[Token(Token = "0x4002303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GotchaButton gotchaButton;

	[Token(Token = "0x4002304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LegalObjects legalObjects;

	[Token(Token = "0x4002305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float legalScrollThreshold;

	[Token(Token = "0x4002306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public KeyCode continueKeyCode;

	[Token(Token = "0x4002307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartRoom inst;

	[Token(Token = "0x4002308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private View _view;

	[Token(Token = "0x170005E0")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600234F")]
		[Address(RVA = "0xD6921C", Offset = "0xD6921C", VA = "0xD6921C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E1")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002350")]
		[Address(RVA = "0xD69224", Offset = "0xD69224", VA = "0xD69224", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E2")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002351")]
		[Address(RVA = "0xD6922C", Offset = "0xD6922C", VA = "0xD6922C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E3")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002352")]
		[Address(RVA = "0xD69234", Offset = "0xD69234", VA = "0xD69234", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E4")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002353")]
		[Address(RVA = "0xD6923C", Offset = "0xD6923C", VA = "0xD6923C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E5")]
	public bool ReadyToExitStartRoom
	{
		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD69960", Offset = "0xD69960", VA = "0xD69960")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0xD69244", Offset = "0xD69244", VA = "0xD69244", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002355")]
	[Address(RVA = "0xD6934C", Offset = "0xD6934C", VA = "0xD6934C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002356")]
	[Address(RVA = "0xD695DC", Offset = "0xD695DC", VA = "0xD695DC")]
	[IteratorStateMachine(typeof(<monitorLanguageDownload>d__29))]
	private IEnumerator<float> monitorLanguageDownload()
	{
		return null;
	}

	[Token(Token = "0x6002357")]
	[Address(RVA = "0xD69678", Offset = "0xD69678", VA = "0xD69678")]
	private void updateView()
	{
	}

	[Token(Token = "0x6002358")]
	[Address(RVA = "0xD692D4", Offset = "0xD692D4", VA = "0xD692D4")]
	private void enableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x6002359")]
	[Address(RVA = "0xD6975C", Offset = "0xD6975C", VA = "0xD6975C", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600235A")]
	[Address(RVA = "0xD69780", Offset = "0xD69780", VA = "0xD69780", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x600235B")]
	[Address(RVA = "0xD697D0", Offset = "0xD697D0", VA = "0xD697D0")]
	public void onLegelAgreed()
	{
	}

	[Token(Token = "0x600235C")]
	[Address(RVA = "0xD697F4", Offset = "0xD697F4", VA = "0xD697F4")]
	public void onLegelDeclined()
	{
	}

	[Token(Token = "0x600235D")]
	[Address(RVA = "0xD6986C", Offset = "0xD6986C", VA = "0xD6986C")]
	public void onGotchaClicked()
	{
	}

	[Token(Token = "0x600235F")]
	[Address(RVA = "0xD698EC", Offset = "0xD698EC", VA = "0xD698EC")]
	[IteratorStateMachine(typeof(<startWhenReadyCo>d__39))]
	private IEnumerator<float> startWhenReadyCo()
	{
		return null;
	}

	[Token(Token = "0x6002360")]
	[Address(RVA = "0xD699DC", Offset = "0xD699DC", VA = "0xD699DC")]
	public void onShowHideLegalClicked()
	{
	}

	[Token(Token = "0x6002361")]
	[Address(RVA = "0xD69A04", Offset = "0xD69A04", VA = "0xD69A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6002362")]
	[Address(RVA = "0xD69BE8", Offset = "0xD69BE8", VA = "0xD69BE8")]
	public StartRoom()
	{
	}
}
[Token(Token = "0x2000607")]
public class StreamCameraToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4002319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x14000047")]
	public static event Action<bool> ValueChange
	{
		[Token(Token = "0x6002372")]
		[Address(RVA = "0xD69F64", Offset = "0xD69F64", VA = "0xD69F64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002373")]
		[Address(RVA = "0xD6A034", Offset = "0xD6A034", VA = "0xD6A034")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6002374")]
	[Address(RVA = "0xD6A104", Offset = "0xD6A104", VA = "0xD6A104", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6002375")]
	[Address(RVA = "0xD6A14C", Offset = "0xD6A14C", VA = "0xD6A14C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6002376")]
	[Address(RVA = "0xD6A274", Offset = "0xD6A274", VA = "0xD6A274", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6002377")]
	[Address(RVA = "0xD6A1E8", Offset = "0xD6A1E8", VA = "0xD6A1E8")]
	public static void setStreamCameraOn(bool on, bool saveChanges = true)
	{
	}

	[Token(Token = "0x6002378")]
	[Address(RVA = "0xD6A368", Offset = "0xD6A368", VA = "0xD6A368")]
	public static void load()
	{
	}

	[Token(Token = "0x6002379")]
	[Address(RVA = "0xD6A2DC", Offset = "0xD6A2DC", VA = "0xD6A2DC")]
	public static void save()
	{
	}

	[Token(Token = "0x600237A")]
	[Address(RVA = "0xD6A374", Offset = "0xD6A374", VA = "0xD6A374")]
	public StreamCameraToggleSwitch()
	{
	}
}
[Token(Token = "0x2000608")]
public class SuperSamplingKnob : KnobBase
{
	[Serializable]
	[Token(Token = "0x2000609")]
	public struct Texts
	{
		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizedString x0_7;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString x1_0;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString x1_2;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString x1_6;
	}

	[Token(Token = "0x400231B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texts texts;

	[Token(Token = "0x600237B")]
	[Address(RVA = "0xD6A388", Offset = "0xD6A388", VA = "0xD6A388", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600237C")]
	[Address(RVA = "0xD6A390", Offset = "0xD6A390", VA = "0xD6A390", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x600237D")]
	[Address(RVA = "0xD6A400", Offset = "0xD6A400", VA = "0xD6A400", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x600237E")]
	[Address(RVA = "0xD6A3F0", Offset = "0xD6A3F0", VA = "0xD6A3F0")]
	private static float SSModeToAmplitude(SuperSampling.Mode ssMode)
	{
		return default(float);
	}

	[Token(Token = "0x600237F")]
	[Address(RVA = "0xD6A4A0", Offset = "0xD6A4A0", VA = "0xD6A4A0")]
	private static SuperSampling.Mode amplitudeToSSMode(float snappedAmplitude)
	{
		return default(SuperSampling.Mode);
	}

	[Token(Token = "0x6002380")]
	[Address(RVA = "0xD6A584", Offset = "0xD6A584", VA = "0xD6A584", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6002381")]
	[Address(RVA = "0xD6A59C", Offset = "0xD6A59C", VA = "0xD6A59C", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6002382")]
	[Address(RVA = "0xD6A6C4", Offset = "0xD6A6C4", VA = "0xD6A6C4")]
	public SuperSamplingKnob()
	{
	}
}
[Token(Token = "0x200060A")]
public class TextRandomizer : MonoBehaviour
{
	[Token(Token = "0x4002320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString[] localizedTexts;

	[Token(Token = "0x4002321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TextMeshPro _tmpText;

	[Token(Token = "0x4002322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI _tmpUguiText;

	[Token(Token = "0x6002383")]
	[Address(RVA = "0xD6A6CC", Offset = "0xD6A6CC", VA = "0xD6A6CC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002384")]
	[Address(RVA = "0xD6A820", Offset = "0xD6A820", VA = "0xD6A820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002385")]
	[Address(RVA = "0xD6A874", Offset = "0xD6A874", VA = "0xD6A874")]
	protected void selectText()
	{
	}

	[Token(Token = "0x6002386")]
	[Address(RVA = "0xD6A958", Offset = "0xD6A958", VA = "0xD6A958")]
	public TextRandomizer()
	{
	}
}
[Token(Token = "0x200060B")]
public class TextRandomizerBackfacing : TextRandomizer
{
	[Token(Token = "0x4002323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isFacing;

	[Token(Token = "0x4002324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x6002387")]
	[Address(RVA = "0xD6A960", Offset = "0xD6A960", VA = "0xD6A960", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002388")]
	[Address(RVA = "0xD6A994", Offset = "0xD6A994", VA = "0xD6A994")]
	private void Update()
	{
	}

	[Token(Token = "0x6002389")]
	[Address(RVA = "0xD6AA94", Offset = "0xD6AA94", VA = "0xD6AA94")]
	public TextRandomizerBackfacing()
	{
	}
}
[Token(Token = "0x200060C")]
public abstract class ToggleSwitchBase : MonoBehaviour, ToggleSwitch.IControlee
{
	[Token(Token = "0x4002325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToggleSwitch toggleSwitch;

	[Token(Token = "0x4002326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationTarget;

	[Token(Token = "0x4002327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offRotation;

	[Token(Token = "0x4002328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float onRotation;

	[Token(Token = "0x4002329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro valueText;

	[Token(Token = "0x400232A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] amplitudeRenderers;

	[Token(Token = "0x400232B")]
	private const string amplitudeProperty = "_Amplitude";

	[Token(Token = "0x400232C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _amplitudePropId;

	[Token(Token = "0x400232D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x600238A")]
	[Address(RVA = "0xD6AAA4", Offset = "0xD6AAA4", VA = "0xD6AAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600238B")]
	[Address(RVA = "0xD5E8B0", Offset = "0xD5E8B0", VA = "0xD5E8B0", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600238C")]
	public abstract bool getAmplitude();

	[Token(Token = "0x600238D")]
	[Address(RVA = "0xD5EB1C", Offset = "0xD5EB1C", VA = "0xD5EB1C", Slot = "8")]
	public virtual void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x600238E")]
	[Address(RVA = "0xD6AB28", Offset = "0xD6AB28", VA = "0xD6AB28", Slot = "9")]
	protected virtual bool isOff(bool snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x600238F")]
	protected abstract string formatText(bool snappedAmplitude);

	[Token(Token = "0x6002390")]
	[Address(RVA = "0xD5EE60", Offset = "0xD5EE60", VA = "0xD5EE60")]
	protected ToggleSwitchBase()
	{
	}
}
[Token(Token = "0x200060D")]
public class TutorialPromptUI : Area
{
	[Serializable]
	[Token(Token = "0x200060E")]
	public class TextList
	{
		[Serializable]
		[Token(Token = "0x200060F")]
		public class MessageContent
		{
			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject _stageTitle;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject _title;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject _content;

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xD6B540", Offset = "0xD6B540", VA = "0xD6B540")]
			public MessageContent()
			{
			}
		}

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Stage I")]
		public MessageContent _welcome;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MessageContent _racketAndBall;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageContent _gravitySling;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MessageContent _powerShot_first;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MessageContent _powerShot_didBefore;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Stage II")]
		public MessageContent _gameRules;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MessageContent _targets;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MessageContent _waves;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MessageContent _energyBar;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MessageContent _boosters;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Stage III")]
		public MessageContent _finishThis;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MessageContent _failed;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<MessageContent> _allTexts;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xD6ABE8", Offset = "0xD6ABE8", VA = "0xD6ABE8")]
		public void FillList()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xD6B538", Offset = "0xD6B538", VA = "0xD6B538")]
		public TextList()
		{
		}
	}

	[Token(Token = "0x400232E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialPromptUI inst;

	[Token(Token = "0x400232F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextList texts;

	[Token(Token = "0x4002330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _annoucerAudioLocation;

	[Token(Token = "0x4002331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public TextList.MessageContent selectedText;

	[Token(Token = "0x4002332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextList.MessageContent nextSelectedText;

	[Token(Token = "0x4002333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioManager.SoundEffect nextSelectedTextAudio;

	[Token(Token = "0x4002334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public AudioManager.SoundEffect selectedTextAudio;

	[Token(Token = "0x170005EA")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002391")]
		[Address(RVA = "0xD6AB34", Offset = "0xD6AB34", VA = "0xD6AB34", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005EB")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002392")]
		[Address(RVA = "0xD6AB3C", Offset = "0xD6AB3C", VA = "0xD6AB3C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005EC")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002393")]
		[Address(RVA = "0xD6AB44", Offset = "0xD6AB44", VA = "0xD6AB44", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005ED")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002394")]
		[Address(RVA = "0xD6AB4C", Offset = "0xD6AB4C", VA = "0xD6AB4C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005EE")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002395")]
		[Address(RVA = "0xD6AB54", Offset = "0xD6AB54", VA = "0xD6AB54", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002396")]
	[Address(RVA = "0xD6AB5C", Offset = "0xD6AB5C", VA = "0xD6AB5C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002397")]
	[Address(RVA = "0xD6B134", Offset = "0xD6B134", VA = "0xD6B134", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6002398")]
	[Address(RVA = "0xD6B138", Offset = "0xD6B138", VA = "0xD6B138")]
	public void SetNextSelectedText(TextList.MessageContent nextText, [Optional] AudioManager.SoundEffect sfx)
	{
	}

	[Token(Token = "0x6002399")]
	[Address(RVA = "0xD6B168", Offset = "0xD6B168", VA = "0xD6B168", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600239A")]
	[Address(RVA = "0xD6B184", Offset = "0xD6B184", VA = "0xD6B184")]
	protected void SwitchTexts()
	{
	}

	[Token(Token = "0x600239B")]
	[Address(RVA = "0xD6B3D0", Offset = "0xD6B3D0", VA = "0xD6B3D0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600239C")]
	[Address(RVA = "0xD6B3D8", Offset = "0xD6B3D8", VA = "0xD6B3D8")]
	public void onClickedOK()
	{
	}

	[Token(Token = "0x600239D")]
	[Address(RVA = "0xD6B45C", Offset = "0xD6B45C", VA = "0xD6B45C")]
	private void Update()
	{
	}

	[Token(Token = "0x600239E")]
	[Address(RVA = "0xD6B530", Offset = "0xD6B530", VA = "0xD6B530")]
	public TutorialPromptUI()
	{
	}
}
[Token(Token = "0x2000610")]
public class UnavailableWhenOffline : MonoBehaviour
{
	[Token(Token = "0x2000611")]
	public enum Type
	{
		[Token(Token = "0x400234D")]
		Undefined,
		[Token(Token = "0x400234E")]
		Leaderboard,
		[Token(Token = "0x400234F")]
		Multiplayer,
		[Token(Token = "0x4002350")]
		MonthlyChallenge
	}

	[Token(Token = "0x2000612")]
	public enum Reason
	{
		[Token(Token = "0x4002352")]
		OK,
		[Token(Token = "0x4002353")]
		Offline,
		[Token(Token = "0x4002354")]
		TempOffline,
		[Token(Token = "0x4002355")]
		UnsupportedMultiplayerVersion
	}

	[Token(Token = "0x2000614")]
	[CompilerGenerated]
	private sealed class <UpdateStateWhenRemoteRNXVersionReadyCo>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnavailableWhenOffline <>4__this;

		[Token(Token = "0x170005EF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xD6C048", Offset = "0xD6C048", VA = "0xD6C048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xD6C090", Offset = "0xD6C090", VA = "0xD6C090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xD6B988", Offset = "0xD6B988", VA = "0xD6B988")]
		[DebuggerHidden]
		public <UpdateStateWhenRemoteRNXVersionReadyCo>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xD6BF18", Offset = "0xD6BF18", VA = "0xD6BF18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xD6BF1C", Offset = "0xD6BF1C", VA = "0xD6BF1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xD6C050", Offset = "0xD6C050", VA = "0xD6C050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000615")]
	[CompilerGenerated]
	private sealed class <HighlightCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnavailableWhenOffline <>4__this;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <maxScale>5__2;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <duration>5__3;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__4;

		[Token(Token = "0x170005F1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xD6C218", Offset = "0xD6C218", VA = "0xD6C218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xD6C260", Offset = "0xD6C260", VA = "0xD6C260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xD6BDC8", Offset = "0xD6BDC8", VA = "0xD6BDC8")]
		[DebuggerHidden]
		public <HighlightCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xD6C0EC", Offset = "0xD6C0EC", VA = "0xD6C0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xD6C0F0", Offset = "0xD6C0F0", VA = "0xD6C0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xD6C220", Offset = "0xD6C220", VA = "0xD6C220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4002346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localize _descriptionLocalize;

	[Token(Token = "0x4002347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _originalDescriptionTerm;

	[Token(Token = "0x4002348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x4002349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _textMeshPro_defaultFontSize;

	[Token(Token = "0x400234A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _forcedState;

	[Token(Token = "0x400234B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _coroutinesTag;

	[Token(Token = "0x60023A2")]
	[Address(RVA = "0xD6B548", Offset = "0xD6B548", VA = "0xD6B548")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023A3")]
	[Address(RVA = "0xD6B6D4", Offset = "0xD6B6D4", VA = "0xD6B6D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60023A4")]
	[Address(RVA = "0xD6B7D4", Offset = "0xD6B7D4", VA = "0xD6B7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60023A5")]
	[Address(RVA = "0xD6B914", Offset = "0xD6B914", VA = "0xD6B914")]
	[IteratorStateMachine(typeof(<UpdateStateWhenRemoteRNXVersionReadyCo>d__10))]
	private IEnumerator<float> UpdateStateWhenRemoteRNXVersionReadyCo()
	{
		return null;
	}

	[Token(Token = "0x60023A6")]
	[Address(RVA = "0xD6B6D8", Offset = "0xD6B6D8", VA = "0xD6B6D8")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x60023A7")]
	[Address(RVA = "0xD6BC74", Offset = "0xD6BC74", VA = "0xD6BC74")]
	public void ForceToggleAvailability(bool available, Reason reason)
	{
	}

	[Token(Token = "0x60023A8")]
	[Address(RVA = "0xD6BC84", Offset = "0xD6BC84", VA = "0xD6BC84")]
	public void ReleaseForcedState()
	{
	}

	[Token(Token = "0x60023A9")]
	[Address(RVA = "0xD6B9B0", Offset = "0xD6B9B0", VA = "0xD6B9B0")]
	private void toggleAvailability(bool available, Reason reason)
	{
	}

	[Token(Token = "0x60023AA")]
	[Address(RVA = "0xD6BC8C", Offset = "0xD6BC8C", VA = "0xD6BC8C")]
	public void HighlightUI()
	{
	}

	[Token(Token = "0x60023AB")]
	[Address(RVA = "0xD6BD54", Offset = "0xD6BD54", VA = "0xD6BD54")]
	[IteratorStateMachine(typeof(<HighlightCo>d__18))]
	private IEnumerator<float> HighlightCo()
	{
		return null;
	}

	[Token(Token = "0x60023AC")]
	[Address(RVA = "0xD67EE4", Offset = "0xD67EE4", VA = "0xD67EE4")]
	public static void HighlightUI(GameObject go)
	{
	}

	[Token(Token = "0x60023AD")]
	[Address(RVA = "0xD6BDF0", Offset = "0xD6BDF0", VA = "0xD6BDF0")]
	public UnavailableWhenOffline()
	{
	}
}
[Token(Token = "0x2000616")]
public class Untanglementer : MonoBehaviour
{
	[Token(Token = "0x4002361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outerRadius;

	[Token(Token = "0x4002362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float innerRadius;

	[Token(Token = "0x4002363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothness;

	[Token(Token = "0x4002364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer spiral;

	[Token(Token = "0x4002365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform innerCircle;

	[Token(Token = "0x4002366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject resetButtonP1;

	[Token(Token = "0x4002367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject resetButtonP2;

	[Token(Token = "0x4002368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _transform;

	[Token(Token = "0x4002369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _camera;

	[Token(Token = "0x400236A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _spiralTransform;

	[Token(Token = "0x400236B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _lastRefDir;

	[Token(Token = "0x400236C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _angleToLastRefDir;

	[Token(Token = "0x400236D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _currentTurnTarget;

	[Token(Token = "0x400236E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _currentTurn;

	[Token(Token = "0x400236F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _currentTurnVelocity;

	[Token(Token = "0x4002370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] _spiralPoints;

	[Token(Token = "0x4002371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color _lastColor;

	[Token(Token = "0x4002372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Image[] _images;

	[Token(Token = "0x4002373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TextMeshPro _text;

	[Token(Token = "0x4002374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x4002375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Quaternion ROTATE_90_X;

	[Token(Token = "0x4002376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Quaternion ROTATE_90_X_INVERSE;

	[Token(Token = "0x60023BE")]
	[Address(RVA = "0xD6C2BC", Offset = "0xD6C2BC", VA = "0xD6C2BC")]
	private void updateColors()
	{
	}

	[Token(Token = "0x60023BF")]
	[Address(RVA = "0xD6C490", Offset = "0xD6C490", VA = "0xD6C490")]
	public void onResetButtonClicked()
	{
	}

	[Token(Token = "0x60023C0")]
	[Address(RVA = "0xD6C4F0", Offset = "0xD6C4F0", VA = "0xD6C4F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023C1")]
	[Address(RVA = "0xD6C514", Offset = "0xD6C514", VA = "0xD6C514")]
	private void Update()
	{
	}

	[Token(Token = "0x60023C2")]
	[Address(RVA = "0xD6CD9C", Offset = "0xD6CD9C", VA = "0xD6CD9C")]
	public Untanglementer()
	{
	}
}
[Token(Token = "0x2000617")]
public class VersusLeaderBoardUI : LeaderBoardUI
{
	[Serializable]
	[Token(Token = "0x2000618")]
	public struct RankDiff
	{
		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject arrowUp;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro arrowUpText;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject arrowDown;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro arrowDownText;
	}

	[Token(Token = "0x2000619")]
	[CompilerGenerated]
	private sealed class <onDataAvailable>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusLeaderBoardUI <>4__this;

		[Token(Token = "0x170005F3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xD6D8F0", Offset = "0xD6D8F0", VA = "0xD6D8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xD6D938", Offset = "0xD6D938", VA = "0xD6D938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xD6CF9C", Offset = "0xD6CF9C", VA = "0xD6CF9C")]
		[DebuggerHidden]
		public <onDataAvailable>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xD6D854", Offset = "0xD6D854", VA = "0xD6D854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xD6D858", Offset = "0xD6D858", VA = "0xD6D858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xD6D8F8", Offset = "0xD6D8F8", VA = "0xD6D8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RankDiff rankDiff;

	[Token(Token = "0x4002378")]
	private const int idlePlayerRowIndex = 5;

	[Token(Token = "0x4002379")]
	private const int initialPlayerRowIndex = 0;

	[Token(Token = "0x400237A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _scoreAltTextFormat;

	[Token(Token = "0x400237B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x400237C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderBoardEntry playerRow;

	[Token(Token = "0x60023C4")]
	[Address(RVA = "0xD6CEAC", Offset = "0xD6CEAC", VA = "0xD6CEAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023C5")]
	[Address(RVA = "0xD6CF28", Offset = "0xD6CF28", VA = "0xD6CF28", Slot = "4")]
	[IteratorStateMachine(typeof(<onDataAvailable>d__8))]
	protected override IEnumerator<float> onDataAvailable()
	{
		return null;
	}

	[Token(Token = "0x60023C6")]
	[Address(RVA = "0xD6CFC4", Offset = "0xD6CFC4", VA = "0xD6CFC4")]
	private void updateListItems(bool first)
	{
	}

	[Token(Token = "0x60023C7")]
	[Address(RVA = "0xD6D67C", Offset = "0xD6D67C", VA = "0xD6D67C")]
	private void showRankDiff()
	{
	}

	[Token(Token = "0x60023C8")]
	[Address(RVA = "0xD6D7C8", Offset = "0xD6D7C8", VA = "0xD6D7C8")]
	public VersusLeaderBoardUI()
	{
	}
}
[Token(Token = "0x200061A")]
public class VolumeKnob : KnobBase
{
	[Token(Token = "0x4002384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LocalizedString offText;

	[Token(Token = "0x4002385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VolumeControl.Group audioGroup;

	[Token(Token = "0x60023D0")]
	[Address(RVA = "0xD6D994", Offset = "0xD6D994", VA = "0xD6D994", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60023D1")]
	[Address(RVA = "0xD6D99C", Offset = "0xD6D99C", VA = "0xD6D99C", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x60023D2")]
	[Address(RVA = "0xD6D9F8", Offset = "0xD6D9F8", VA = "0xD6D9F8", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x60023D3")]
	[Address(RVA = "0xD6DA84", Offset = "0xD6DA84", VA = "0xD6DA84", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x60023D4")]
	[Address(RVA = "0xD6DB74", Offset = "0xD6DB74", VA = "0xD6DB74", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x60023D5")]
	[Address(RVA = "0xD6DCA8", Offset = "0xD6DCA8", VA = "0xD6DCA8")]
	public VolumeKnob()
	{
	}
}
[Token(Token = "0x200061B")]
public class WallText : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	[CompilerGenerated]
	private sealed class <Animate>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WallText <>4__this;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <t>5__2;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <scaleTime>5__3;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <opacityTime>5__4;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <animTime>5__5;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startScale>5__6;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <placedPos>5__7;

		[Token(Token = "0x170005F5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xD6E8B8", Offset = "0xD6E8B8", VA = "0xD6E8B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xD6E900", Offset = "0xD6E900", VA = "0xD6E900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xD6E048", Offset = "0xD6E048", VA = "0xD6E048")]
		[DebuggerHidden]
		public <Animate>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xD6E078", Offset = "0xD6E078", VA = "0xD6E078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xD6E07C", Offset = "0xD6E07C", VA = "0xD6E07C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xD6E8C0", Offset = "0xD6E8C0", VA = "0xD6E8C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4002386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4002387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro _textMesh;

	[Token(Token = "0x4002388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HexTile _placedOnHexTile;

	[Token(Token = "0x4002389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro[] _scoreTexts;

	[Token(Token = "0x400238A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] _nonTextRenderers;

	[Token(Token = "0x400238B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro _streakText;

	[Token(Token = "0x400238C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro _streakPoints;

	[Token(Token = "0x400238D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve _appearScaleCurve;

	[Token(Token = "0x400238E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve _opacityCurve;

	[Token(Token = "0x400238F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve _moveCurve;

	[Token(Token = "0x4002390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _localPosChange;

	[Token(Token = "0x4002391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _rollUpAmount;

	[Token(Token = "0x4002392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _curRollUpAmount;

	[Token(Token = "0x4002393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _curRollUpAmountVel;

	[Token(Token = "0x4002394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3[] _movementVectors;

	[Token(Token = "0x4002395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _myMovementVectorIndex;

	[NonSerialized]
	[Token(Token = "0x4002396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _replacedByAnotherWallText;

	[Token(Token = "0x60023D6")]
	[Address(RVA = "0xD6DCB0", Offset = "0xD6DCB0", VA = "0xD6DCB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023D7")]
	[Address(RVA = "0xD6DE54", Offset = "0xD6DE54", VA = "0xD6DE54")]
	public void AttachToHextile(HexTile attachedHex)
	{
	}

	[Token(Token = "0x60023D8")]
	[Address(RVA = "0xD6DFCC", Offset = "0xD6DFCC", VA = "0xD6DFCC")]
	public void RollUpwards(float amount)
	{
	}

	[Token(Token = "0x60023D9")]
	[Address(RVA = "0xD6DFD4", Offset = "0xD6DFD4", VA = "0xD6DFD4")]
	[IteratorStateMachine(typeof(<Animate>d__20))]
	public IEnumerator<float> Animate()
	{
		return null;
	}

	[Token(Token = "0x60023DA")]
	[Address(RVA = "0xD6E070", Offset = "0xD6E070", VA = "0xD6E070")]
	public WallText()
	{
	}
}
[Token(Token = "0x200061D")]
public class WallTextFactory : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200061E")]
	public class WallTextTriplet
	{
		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject p1;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject p2;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject coOp;

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xD7289C", Offset = "0xD7289C", VA = "0xD7289C")]
		public void Init(int poolSize)
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xD729A0", Offset = "0xD729A0", VA = "0xD729A0")]
		public GameObject GetPrefabByPlayerID(PlayerID id)
		{
			return null;
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xD729EC", Offset = "0xD729EC", VA = "0xD729EC")]
		public WallTextTriplet()
		{
		}
	}

	[Token(Token = "0x40023A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WallTextFactory inst;

	[Token(Token = "0x40023A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Triplets")]
	public WallTextTriplet _scorePrefab;

	[Token(Token = "0x40023A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WallTextTriplet _scoreBigPrefab;

	[Token(Token = "0x40023A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WallTextTriplet _negativeScorePrefab;

	[Token(Token = "0x40023A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WallTextTriplet _shotTotal;

	[Token(Token = "0x40023A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WallTextTriplet _shotTotalBig;

	[Token(Token = "0x40023A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WallTextTriplet _streakPrefab;

	[Token(Token = "0x40023A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WallTextTriplet _gutterChargePrefab;

	[Token(Token = "0x40023A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WallTextTriplet _gutterSuperChargePrefab;

	[Token(Token = "0x40023A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WallTextTriplet _speedUpPrefab;

	[Token(Token = "0x40023AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WallTextTriplet _achievementUnlocked;

	[Token(Token = "0x40023AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Single Player")]
	[SerializeField]
	private GameObject _bonusPrefab;

	[Token(Token = "0x40023AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _downerPrefab;

	[Token(Token = "0x40023AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Total shot params")]
	public int minScoreContributionsForTotalShot;

	[Token(Token = "0x40023AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int minScoreForTotalShotBig;

	[Token(Token = "0x40023AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Streak positioning")]
	public float streakCloseToBall;

	[Token(Token = "0x40023B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float streakSideDirectionLength;

	[Token(Token = "0x40023B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float streakDirectionToSide;

	[Token(Token = "0x40023B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Header("Total shot positioning")]
	public float totalDistFromBall;

	[Token(Token = "0x40023B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StringBuilder _builder;

	[Token(Token = "0x170005F7")]
	public GameObject bonusPrefab
	{
		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xD6E95C", Offset = "0xD6E95C", VA = "0xD6E95C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005F8")]
	public GameObject downerPrefab
	{
		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xD6EAA0", Offset = "0xD6EAA0", VA = "0xD6EAA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60023E3")]
	[Address(RVA = "0xD6EBE4", Offset = "0xD6EBE4", VA = "0xD6EBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023E4")]
	[Address(RVA = "0xD6ED28", Offset = "0xD6ED28", VA = "0xD6ED28")]
	public static WallText CreateAchievementUnlocked(Achievement ach)
	{
		return null;
	}

	[Token(Token = "0x60023E5")]
	[Address(RVA = "0xD6F210", Offset = "0xD6F210", VA = "0xD6F210")]
	public static WallText CreateSpeedUp(float speed, bool tooFast)
	{
		return null;
	}

	[Token(Token = "0x60023E6")]
	[Address(RVA = "0xD6F824", Offset = "0xD6F824", VA = "0xD6F824")]
	public static WallText CreateGutterCharge(Player player, bool superCharge)
	{
		return null;
	}

	[Token(Token = "0x60023E7")]
	[Address(RVA = "0xD6FE10", Offset = "0xD6FE10", VA = "0xD6FE10")]
	private static WallText createAnimatedIcon(HexTile hex, GameObject prefab, float rollUpAmount)
	{
		return null;
	}

	[Token(Token = "0x60023E8")]
	[Address(RVA = "0xD6FFF4", Offset = "0xD6FFF4", VA = "0xD6FFF4")]
	public static WallText CreateDowner(HexTile hex)
	{
		return null;
	}

	[Token(Token = "0x60023E9")]
	[Address(RVA = "0xD70154", Offset = "0xD70154", VA = "0xD70154")]
	public static WallText CreateBonus(HexTile hex)
	{
		return null;
	}

	[Token(Token = "0x60023EA")]
	[Address(RVA = "0xD701FC", Offset = "0xD701FC", VA = "0xD701FC")]
	public static WallText CreateScore(Vector3 pos, Vector3 forward, int score, bool player2)
	{
		return null;
	}

	[Token(Token = "0x60023EB")]
	[Address(RVA = "0xD705E0", Offset = "0xD705E0", VA = "0xD705E0")]
	public static WallText CreateScore(HexTile hex, int score, bool player2)
	{
		return null;
	}

	[Token(Token = "0x60023EC")]
	[Address(RVA = "0xD706F4", Offset = "0xD706F4", VA = "0xD706F4")]
	public static WallText CreateScoreBig(Target target, int score, bool player2, bool oneShot = false, bool doubleBoss = false, bool shielded = false)
	{
		return null;
	}

	[Token(Token = "0x60023ED")]
	[Address(RVA = "0xD71144", Offset = "0xD71144", VA = "0xD71144")]
	public static bool WillTotalShotAppear(ShotInfo shot, out bool isBig)
	{
		return default(bool);
	}

	[Token(Token = "0x60023EE")]
	[Address(RVA = "0xD7120C", Offset = "0xD7120C", VA = "0xD7120C")]
	public static WallText CreateShotTotal(ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x60023EF")]
	[Address(RVA = "0xD6F1B8", Offset = "0xD6F1B8", VA = "0xD6F1B8")]
	private static WallText allocate(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60023F0")]
	[Address(RVA = "0xD71078", Offset = "0xD71078", VA = "0xD71078")]
	private static void setLocalizedText(TextMeshPro tmp, StringBuilder builder)
	{
	}

	[Token(Token = "0x60023F1")]
	[Address(RVA = "0xD71810", Offset = "0xD71810", VA = "0xD71810")]
	public WallTextFactory()
	{
	}
}
[Token(Token = "0x200061F")]
public abstract class VRPlugin : MonoBehaviour
{
	[Token(Token = "0x2000620")]
	public enum Side
	{
		[Token(Token = "0x40023BF")]
		Left,
		[Token(Token = "0x40023C0")]
		Right
	}

	[Token(Token = "0x2000621")]
	public enum PluginLabel
	{
		[Token(Token = "0x40023C2")]
		Unknown,
		[Token(Token = "0x40023C3")]
		Mouse,
		[Token(Token = "0x40023C4")]
		Steam,
		[Token(Token = "0x40023C5")]
		Oculus,
		[Token(Token = "0x40023C6")]
		PSVR,
		[Token(Token = "0x40023C7")]
		Pico,
		[Token(Token = "0x40023C8")]
		iQIYI,
		[Token(Token = "0x40023C9")]
		GSXR
	}

	[Token(Token = "0x40023B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrPluginHierarchy hierarchy;

	[Token(Token = "0x40023B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PluginLabel Label;

	[Token(Token = "0x40023B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal float _frequency;

	[Token(Token = "0x40023BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _model;

	[Token(Token = "0x40023BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _fadeSphere;

	[Token(Token = "0x40023BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _ColorID;

	[Token(Token = "0x40023BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _fadeToBlackInitialized;

	[Token(Token = "0x170005F9")]
	public float Frequency
	{
		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xD729F4", Offset = "0xD729F4", VA = "0xD729F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170005FA")]
	public virtual bool HeadphonesConnected
	{
		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xD729FC", Offset = "0xD729FC", VA = "0xD729FC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005FB")]
	public string Model
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xD72A04", Offset = "0xD72A04", VA = "0xD72A04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60023F8")]
	[Address(RVA = "0xD72A4C", Offset = "0xD72A4C", VA = "0xD72A4C", Slot = "5")]
	protected virtual string GetModel()
	{
		return null;
	}

	[Token(Token = "0x60023F9")]
	[Address(RVA = "0xD72A7C", Offset = "0xD72A7C", VA = "0xD72A7C")]
	private void InitFadeToBlack()
	{
	}

	[Token(Token = "0x60023FA")]
	[Address(RVA = "0xD72DDC", Offset = "0xD72DDC", VA = "0xD72DDC", Slot = "6")]
	public virtual void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x60023FB")]
	[Address(RVA = "0xD72E8C", Offset = "0xD72E8C", VA = "0xD72E8C", Slot = "7")]
	public virtual void ForceOptimizationForOneFrame(bool cpu, bool gpu)
	{
	}

	[Token(Token = "0x60023FC")]
	public abstract void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right);

	[Token(Token = "0x60023FD")]
	[Address(RVA = "0xD72E90", Offset = "0xD72E90", VA = "0xD72E90")]
	protected VRPlugin()
	{
	}
}
[Serializable]
[Token(Token = "0x2000622")]
public class VrPluginHierarchy : MonoBehaviour
{
	[Token(Token = "0x40023CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform root;

	[Token(Token = "0x40023CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x40023CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera cam;

	[Token(Token = "0x40023CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform brainHolder;

	[Token(Token = "0x40023CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handLeft;

	[Token(Token = "0x40023CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform handRight;

	[Token(Token = "0x60023FE")]
	[Address(RVA = "0xD72EA0", Offset = "0xD72EA0", VA = "0xD72EA0")]
	public Transform GetHand(VRPlugin.Side side)
	{
		return null;
	}

	[Token(Token = "0x60023FF")]
	[Address(RVA = "0xD72EB8", Offset = "0xD72EB8", VA = "0xD72EB8")]
	public VrPluginHierarchy()
	{
	}
}
[Token(Token = "0x2000623")]
public class VRPluginManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000624")]
	[CompilerGenerated]
	private sealed class <FadeInCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRPluginManager <>4__this;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000605")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600242A")]
			[Address(RVA = "0xD74A20", Offset = "0xD74A20", VA = "0xD74A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000606")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xD74A68", Offset = "0xD74A68", VA = "0xD74A68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xD73EA8", Offset = "0xD73EA8", VA = "0xD73EA8")]
		[DebuggerHidden]
		public <FadeInCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xD748B8", Offset = "0xD748B8", VA = "0xD748B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xD748BC", Offset = "0xD748BC", VA = "0xD748BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xD74A28", Offset = "0xD74A28", VA = "0xD74A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40023D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRPluginManager inst;

	[Token(Token = "0x40023D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal VRPlugin _plugin;

	[Token(Token = "0x40023D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRPlugin mousePlugin;

	[Token(Token = "0x40023D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrPluginHierarchy mouseHierarchy;

	[Token(Token = "0x40023D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Game Object that contains VrPluginHierarchy")]
	public GameObject hierarchyContainer;

	[Token(Token = "0x40023D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal VrPluginHierarchy hierarchy;

	[Token(Token = "0x40023DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRTrackedController controllerL;

	[Token(Token = "0x40023DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VRTrackedController controllerR;

	[Token(Token = "0x40023DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _hasFocus;

	[Token(Token = "0x40023DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _overrideHandPosition;

	[Token(Token = "0x40023E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _overrideHandAmount;

	[Token(Token = "0x40023E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly List<Transform> _handAttachments;

	[Token(Token = "0x40023E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _canSwitchHands;

	[Token(Token = "0x170005FC")]
	public VRPlugin.PluginLabel Plugin
	{
		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD72EC0", Offset = "0xD72EC0", VA = "0xD72EC0")]
		get
		{
			return default(VRPlugin.PluginLabel);
		}
	}

	[Token(Token = "0x170005FD")]
	public float HmdFrequency
	{
		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD72F40", Offset = "0xD72F40", VA = "0xD72F40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170005FE")]
	public string DeviceModel
	{
		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD72FC4", Offset = "0xD72FC4", VA = "0xD72FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005FF")]
	public bool HeadPhonesConnected
	{
		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD73588", Offset = "0xD73588", VA = "0xD73588")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000600")]
	public VRPlugin.Side ActiveHandSide
	{
		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD737B4", Offset = "0xD737B4", VA = "0xD737B4")]
		[CompilerGenerated]
		get
		{
			return default(VRPlugin.Side);
		}
		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD737BC", Offset = "0xD737BC", VA = "0xD737BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000601")]
	public Transform ActiveHand
	{
		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD737C4", Offset = "0xD737C4", VA = "0xD737C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000602")]
	public Transform OtherHand
	{
		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD737F4", Offset = "0xD737F4", VA = "0xD737F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000603")]
	public VRTrackedController activeController
	{
		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD73830", Offset = "0xD73830", VA = "0xD73830")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000604")]
	public VRTrackedController otherController
	{
		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD7384C", Offset = "0xD7384C", VA = "0xD7384C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000048")]
	public event Action OnNewPoseApplied
	{
		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD73064", Offset = "0xD73064", VA = "0xD73064")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD73100", Offset = "0xD73100", VA = "0xD73100")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event Action<bool> OnAppFocusChanged
	{
		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD7319C", Offset = "0xD7319C", VA = "0xD7319C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD7324C", Offset = "0xD7324C", VA = "0xD7324C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event Action OnHandsSwitched
	{
		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD732FC", Offset = "0xD732FC", VA = "0xD732FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD73398", Offset = "0xD73398", VA = "0xD73398")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event Action OnPoseRecentered
	{
		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD73434", Offset = "0xD73434", VA = "0xD73434")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD734D0", Offset = "0xD734D0", VA = "0xD734D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public static event Action<bool> OnHeadphonesConnectionChange
	{
		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD735A8", Offset = "0xD735A8", VA = "0xD735A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD73678", Offset = "0xD73678", VA = "0xD73678")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600240B")]
	[Address(RVA = "0xD7356C", Offset = "0xD7356C", VA = "0xD7356C")]
	public void PoseRecentered()
	{
	}

	[Token(Token = "0x600240F")]
	[Address(RVA = "0xD73748", Offset = "0xD73748", VA = "0xD73748")]
	public void HeadphonesConnectionChanged(bool connected)
	{
	}

	[Token(Token = "0x6002416")]
	[Address(RVA = "0xD73824", Offset = "0xD73824", VA = "0xD73824")]
	public static VRPlugin.Side OtherSide(VRPlugin.Side side)
	{
		return default(VRPlugin.Side);
	}

	[Token(Token = "0x6002417")]
	[Address(RVA = "0xD73868", Offset = "0xD73868", VA = "0xD73868")]
	public void OverrideHandPosition(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x6002418")]
	[Address(RVA = "0xD73888", Offset = "0xD73888", VA = "0xD73888")]
	public void NewPoseApplied()
	{
	}

	[Token(Token = "0x6002419")]
	[Address(RVA = "0xD73B4C", Offset = "0xD73B4C", VA = "0xD73B4C")]
	public void AppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x600241A")]
	[Address(RVA = "0xD73BFC", Offset = "0xD73BFC", VA = "0xD73BFC")]
	public void AddHandAttachment(Transform t)
	{
	}

	[Token(Token = "0x600241B")]
	[Address(RVA = "0xD73CAC", Offset = "0xD73CAC", VA = "0xD73CAC")]
	private void SwitchHand()
	{
	}

	[Token(Token = "0x600241C")]
	[Address(RVA = "0xD73CC0", Offset = "0xD73CC0", VA = "0xD73CC0")]
	public void ForceSwitchHand()
	{
	}

	[Token(Token = "0x600241D")]
	[Address(RVA = "0xD73D7C", Offset = "0xD73D7C", VA = "0xD73D7C")]
	private void ReEnableSwitchHands()
	{
	}

	[Token(Token = "0x600241E")]
	[Address(RVA = "0xD73D88", Offset = "0xD73D88", VA = "0xD73D88")]
	public void ForceOptimizationForOneFrame(bool cpu, bool gpu)
	{
	}

	[Token(Token = "0x600241F")]
	[Address(RVA = "0xD73DB0", Offset = "0xD73DB0", VA = "0xD73DB0")]
	public static void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x6002420")]
	[Address(RVA = "0xD73E20", Offset = "0xD73E20", VA = "0xD73E20")]
	[IteratorStateMachine(typeof(<FadeInCo>d__60))]
	private IEnumerator<float> FadeInCo(float delay, float duration)
	{
		return null;
	}

	[Token(Token = "0x6002421")]
	[Address(RVA = "0xD73ED0", Offset = "0xD73ED0", VA = "0xD73ED0", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6002422")]
	[Address(RVA = "0xD7402C", Offset = "0xD7402C", VA = "0xD7402C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002423")]
	[Address(RVA = "0xD745D4", Offset = "0xD745D4", VA = "0xD745D4")]
	private void SetCloudDiagnosticsMetaData()
	{
	}

	[Token(Token = "0x6002424")]
	[Address(RVA = "0xD747A8", Offset = "0xD747A8", VA = "0xD747A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002425")]
	[Address(RVA = "0xD74814", Offset = "0xD74814", VA = "0xD74814")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6002426")]
	[Address(RVA = "0xD74820", Offset = "0xD74820", VA = "0xD74820")]
	public VRPluginManager()
	{
	}
}
[Token(Token = "0x2000625")]
public class VRPlugin_Mouse : VRPlugin
{
	[Token(Token = "0x600242D")]
	[Address(RVA = "0xD74AC4", Offset = "0xD74AC4", VA = "0xD74AC4", Slot = "8")]
	public override void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right)
	{
	}

	[Token(Token = "0x600242E")]
	[Address(RVA = "0xD74C28", Offset = "0xD74C28", VA = "0xD74C28")]
	public void Start()
	{
	}

	[Token(Token = "0x600242F")]
	[Address(RVA = "0xD74CB4", Offset = "0xD74CB4", VA = "0xD74CB4")]
	public void Update()
	{
	}

	[Token(Token = "0x6002430")]
	[Address(RVA = "0xD74D04", Offset = "0xD74D04", VA = "0xD74D04")]
	public VRPlugin_Mouse()
	{
	}
}
[Token(Token = "0x2000626")]
public class VRPlugin_Oculus : VRPlugin
{
	[Token(Token = "0x40023E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _headphonesConnected;

	[Token(Token = "0x40023EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool _forceCPUOptimization;

	[Token(Token = "0x40023EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool _forceGPUOptimization;

	[Token(Token = "0x40023EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrPluginHierarchy quest2Hierarchy;

	[Token(Token = "0x40023ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrPluginHierarchy riftAndQuestHierarchy;

	[Token(Token = "0x17000607")]
	public override bool HeadphonesConnected
	{
		[Token(Token = "0x6002432")]
		[Address(RVA = "0xD74DE0", Offset = "0xD74DE0", VA = "0xD74DE0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002431")]
	[Address(RVA = "0xD74D14", Offset = "0xD74D14", VA = "0xD74D14", Slot = "5")]
	protected override string GetModel()
	{
		return null;
	}

	[Token(Token = "0x6002433")]
	[Address(RVA = "0xD74DE8", Offset = "0xD74DE8", VA = "0xD74DE8", Slot = "6")]
	public override void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x6002434")]
	[Address(RVA = "0xD74E70", Offset = "0xD74E70", VA = "0xD74E70", Slot = "7")]
	public override void ForceOptimizationForOneFrame(bool cpu, bool gpu)
	{
	}

	[Token(Token = "0x6002435")]
	[Address(RVA = "0xD74E94", Offset = "0xD74E94", VA = "0xD74E94", Slot = "8")]
	public override void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right)
	{
	}

	[Token(Token = "0x6002436")]
	[Address(RVA = "0xD75104", Offset = "0xD75104", VA = "0xD75104")]
	public static void UseHighestDisplayFrequency()
	{
	}

	[Token(Token = "0x6002437")]
	[Address(RVA = "0xD75324", Offset = "0xD75324", VA = "0xD75324")]
	public static void SetDisplayFrequency(int frequency)
	{
	}

	[Token(Token = "0x6002438")]
	[Address(RVA = "0xD754B8", Offset = "0xD754B8", VA = "0xD754B8")]
	private void OnVrFocusLost()
	{
	}

	[Token(Token = "0x6002439")]
	[Address(RVA = "0xD7550C", Offset = "0xD7550C", VA = "0xD7550C")]
	private void OnVrFocusAcquired()
	{
	}

	[Token(Token = "0x600243A")]
	[Address(RVA = "0xD75560", Offset = "0xD75560", VA = "0xD75560")]
	public void Start()
	{
	}

	[Token(Token = "0x600243B")]
	[Address(RVA = "0xD75824", Offset = "0xD75824", VA = "0xD75824")]
	public void Update()
	{
	}

	[Token(Token = "0x600243C")]
	[Address(RVA = "0xD75960", Offset = "0xD75960", VA = "0xD75960")]
	public VRPlugin_Oculus()
	{
	}
}
[Token(Token = "0x2000628")]
public abstract class VRTrackedController
{
	[Token(Token = "0x2000629")]
	public class Buttons
	{
		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VRTrackedController _parent;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _triggerPressed;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _menuPressed;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _backPressed;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _gripPressed;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _joypadPressed;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _joypadTouched;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _snapTurn;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _musicSkip;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _musicSkipTimer;

		[Token(Token = "0x1700060F")]
		public bool TriggerPressed
		{
			[Token(Token = "0x6002454")]
			[Address(RVA = "0xD75DB4", Offset = "0xD75DB4", VA = "0xD75DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002455")]
			[Address(RVA = "0xD75DBC", Offset = "0xD75DBC", VA = "0xD75DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000610")]
		public bool MenuPressed
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0xD7606C", Offset = "0xD7606C", VA = "0xD7606C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600245B")]
			[Address(RVA = "0xD76074", Offset = "0xD76074", VA = "0xD76074")]
			set
			{
			}
		}

		[Token(Token = "0x17000611")]
		public bool BackPressed
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0xD76408", Offset = "0xD76408", VA = "0xD76408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002461")]
			[Address(RVA = "0xD76410", Offset = "0xD76410", VA = "0xD76410")]
			set
			{
			}
		}

		[Token(Token = "0x17000612")]
		public bool GripPressed
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0xD766C0", Offset = "0xD766C0", VA = "0xD766C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xD766C8", Offset = "0xD766C8", VA = "0xD766C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000613")]
		public bool JoypadPressed
		{
			[Token(Token = "0x600246C")]
			[Address(RVA = "0xD76978", Offset = "0xD76978", VA = "0xD76978")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600246D")]
			[Address(RVA = "0xD76980", Offset = "0xD76980", VA = "0xD76980")]
			set
			{
			}
		}

		[Token(Token = "0x17000614")]
		public bool JoypadTouched
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0xD76C30", Offset = "0xD76C30", VA = "0xD76C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xD76C38", Offset = "0xD76C38", VA = "0xD76C38")]
			set
			{
			}
		}

		[Token(Token = "0x17000615")]
		public int SnapTurn
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0xD76DD8", Offset = "0xD76DD8", VA = "0xD76DD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002477")]
			[Address(RVA = "0xD76DE0", Offset = "0xD76DE0", VA = "0xD76DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000616")]
		public int MusicSkip
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0xD770D0", Offset = "0xD770D0", VA = "0xD770D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600247D")]
			[Address(RVA = "0xD770D8", Offset = "0xD770D8", VA = "0xD770D8")]
			set
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action OnTriggerClicked
		{
			[Token(Token = "0x6002450")]
			[Address(RVA = "0xD74670", Offset = "0xD74670", VA = "0xD74670")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002451")]
			[Address(RVA = "0xD75C7C", Offset = "0xD75C7C", VA = "0xD75C7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action OnTriggerReleased
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0xD7470C", Offset = "0xD7470C", VA = "0xD7470C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0xD75D18", Offset = "0xD75D18", VA = "0xD75D18")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action OnMenuClicked
		{
			[Token(Token = "0x6002456")]
			[Address(RVA = "0xD75DFC", Offset = "0xD75DFC", VA = "0xD75DFC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002457")]
			[Address(RVA = "0xD75E98", Offset = "0xD75E98", VA = "0xD75E98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action OnMenuReleased
		{
			[Token(Token = "0x6002458")]
			[Address(RVA = "0xD75F34", Offset = "0xD75F34", VA = "0xD75F34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002459")]
			[Address(RVA = "0xD75FD0", Offset = "0xD75FD0", VA = "0xD75FD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action OnBackClicked
		{
			[Token(Token = "0x600245C")]
			[Address(RVA = "0xD76198", Offset = "0xD76198", VA = "0xD76198")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600245D")]
			[Address(RVA = "0xD76234", Offset = "0xD76234", VA = "0xD76234")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event Action OnBackReleased
		{
			[Token(Token = "0x600245E")]
			[Address(RVA = "0xD762D0", Offset = "0xD762D0", VA = "0xD762D0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600245F")]
			[Address(RVA = "0xD7636C", Offset = "0xD7636C", VA = "0xD7636C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action OnGripClicked
		{
			[Token(Token = "0x6002462")]
			[Address(RVA = "0xD76450", Offset = "0xD76450", VA = "0xD76450")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002463")]
			[Address(RVA = "0xD764EC", Offset = "0xD764EC", VA = "0xD764EC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Action OnGripReleased
		{
			[Token(Token = "0x6002464")]
			[Address(RVA = "0xD76588", Offset = "0xD76588", VA = "0xD76588")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002465")]
			[Address(RVA = "0xD76624", Offset = "0xD76624", VA = "0xD76624")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action OnJoypadClicked
		{
			[Token(Token = "0x6002468")]
			[Address(RVA = "0xD76708", Offset = "0xD76708", VA = "0xD76708")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002469")]
			[Address(RVA = "0xD767A4", Offset = "0xD767A4", VA = "0xD767A4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action OnJoypadReleased
		{
			[Token(Token = "0x600246A")]
			[Address(RVA = "0xD76840", Offset = "0xD76840", VA = "0xD76840")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600246B")]
			[Address(RVA = "0xD768DC", Offset = "0xD768DC", VA = "0xD768DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action OnJoypadTouchedDown
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0xD769C0", Offset = "0xD769C0", VA = "0xD769C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600246F")]
			[Address(RVA = "0xD76A5C", Offset = "0xD76A5C", VA = "0xD76A5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event Action OnJoypadTouchedUp
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0xD76AF8", Offset = "0xD76AF8", VA = "0xD76AF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002471")]
			[Address(RVA = "0xD76B94", Offset = "0xD76B94", VA = "0xD76B94")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event Action<int> OnSnapTurnRequested
		{
			[Token(Token = "0x6002474")]
			[Address(RVA = "0xD76C78", Offset = "0xD76C78", VA = "0xD76C78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002475")]
			[Address(RVA = "0xD76D28", Offset = "0xD76D28", VA = "0xD76D28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event Action<int> OnMusicSkipRequested
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0xD76E10", Offset = "0xD76E10", VA = "0xD76E10")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002479")]
			[Address(RVA = "0xD76EC0", Offset = "0xD76EC0", VA = "0xD76EC0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action<int> OnMusicSkipRequestedNoDelay
		{
			[Token(Token = "0x600247A")]
			[Address(RVA = "0xD76F70", Offset = "0xD76F70", VA = "0xD76F70")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600247B")]
			[Address(RVA = "0xD77020", Offset = "0xD77020", VA = "0xD77020")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xD75AD4", Offset = "0xD75AD4", VA = "0xD75AD4")]
		public Buttons(VRTrackedController parent)
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xD75C44", Offset = "0xD75C44", VA = "0xD75C44")]
		public void Reset(VRTrackedController panret)
		{
		}
	}

	[Token(Token = "0x200062A")]
	public enum Model
	{
		[Token(Token = "0x400240F")]
		ViveWand,
		[Token(Token = "0x4002410")]
		OculusTouch,
		[Token(Token = "0x4002411")]
		Index,
		[Token(Token = "0x4002412")]
		PS4_Move,
		[Token(Token = "0x4002413")]
		WMR,
		[Token(Token = "0x4002414")]
		Generic
	}

	[Token(Token = "0x40023F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Model model;

	[Token(Token = "0x40023F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VRPlugin.Side side;

	[Token(Token = "0x40023F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Buttons buttons;

	[Token(Token = "0x40023F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _velocity;

	[Token(Token = "0x40023F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _lastPosition;

	[Token(Token = "0x17000608")]
	public abstract Vector3 Position
	{
		[Token(Token = "0x6002441")]
		get;
	}

	[Token(Token = "0x17000609")]
	public abstract Quaternion Rotation
	{
		[Token(Token = "0x6002442")]
		get;
	}

	[Token(Token = "0x1700060A")]
	public abstract Vector3 Forward
	{
		[Token(Token = "0x6002443")]
		get;
	}

	[Token(Token = "0x1700060B")]
	public virtual Vector3 Velocity
	{
		[Token(Token = "0x6002444")]
		[Address(RVA = "0xD75B04", Offset = "0xD75B04", VA = "0xD75B04", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700060C")]
	public virtual float TriggerAxis
	{
		[Token(Token = "0x6002445")]
		[Address(RVA = "0xD75B10", Offset = "0xD75B10", VA = "0xD75B10", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700060D")]
	public virtual Vector2 JoypadAxis
	{
		[Token(Token = "0x6002446")]
		[Address(RVA = "0xD75B3C", Offset = "0xD75B3C", VA = "0xD75B3C", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700060E")]
	public virtual bool IsPositionTracked
	{
		[Token(Token = "0x6002447")]
		[Address(RVA = "0xD75B48", Offset = "0xD75B48", VA = "0xD75B48", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002440")]
	[Address(RVA = "0xD75A38", Offset = "0xD75A38", VA = "0xD75A38")]
	public VRTrackedController(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x6002448")]
	[Address(RVA = "0xD75B50", Offset = "0xD75B50", VA = "0xD75B50", Slot = "11")]
	public virtual void HapticPulse(float strength)
	{
	}

	[Token(Token = "0x6002449")]
	[Address(RVA = "0xD75B54", Offset = "0xD75B54", VA = "0xD75B54", Slot = "12")]
	protected virtual void DetectSnapTurn()
	{
	}

	[Token(Token = "0x600244A")]
	[Address(RVA = "0xD75B58", Offset = "0xD75B58", VA = "0xD75B58", Slot = "13")]
	protected virtual void DetectMusicSkip()
	{
	}

	[Token(Token = "0x600244B")]
	[Address(RVA = "0xD75B5C", Offset = "0xD75B5C", VA = "0xD75B5C", Slot = "14")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600244C")]
	[Address(RVA = "0xD75BFC", Offset = "0xD75BFC", VA = "0xD75BFC", Slot = "15")]
	public virtual void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x600244D")]
	[Address(RVA = "0xD75C00", Offset = "0xD75C00", VA = "0xD75C00", Slot = "16")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x600244E")]
	[Address(RVA = "0xD73D04", Offset = "0xD73D04", VA = "0xD73D04")]
	public static void SwapButtons(VRTrackedController a, VRTrackedController b)
	{
	}
}
[Token(Token = "0x200062B")]
public class VRTrackedController_Mouse : VRTrackedController
{
	[Token(Token = "0x4002415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _joypadAxis;

	[Token(Token = "0x4002416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Transform _transform;

	[Token(Token = "0x17000617")]
	public override Vector3 Position
	{
		[Token(Token = "0x600247F")]
		[Address(RVA = "0xD77184", Offset = "0xD77184", VA = "0xD77184", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000618")]
	public override Quaternion Rotation
	{
		[Token(Token = "0x6002480")]
		[Address(RVA = "0xD771A0", Offset = "0xD771A0", VA = "0xD771A0", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000619")]
	public override Vector3 Forward
	{
		[Token(Token = "0x6002481")]
		[Address(RVA = "0xD771BC", Offset = "0xD771BC", VA = "0xD771BC", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700061A")]
	public override Vector2 JoypadAxis
	{
		[Token(Token = "0x6002482")]
		[Address(RVA = "0xD771D8", Offset = "0xD771D8", VA = "0xD771D8", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6002483")]
	[Address(RVA = "0xD74B98", Offset = "0xD74B98", VA = "0xD74B98")]
	public VRTrackedController_Mouse(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x6002484")]
	[Address(RVA = "0xD771E0", Offset = "0xD771E0", VA = "0xD771E0", Slot = "12")]
	protected override void DetectSnapTurn()
	{
	}

	[Token(Token = "0x6002485")]
	[Address(RVA = "0xD77300", Offset = "0xD77300", VA = "0xD77300", Slot = "13")]
	protected override void DetectMusicSkip()
	{
	}

	[Token(Token = "0x6002486")]
	[Address(RVA = "0xD773D4", Offset = "0xD773D4", VA = "0xD773D4", Slot = "14")]
	public override void Update()
	{
	}
}
[Token(Token = "0x200062C")]
public class VRTrackedController_Oculus : VRTrackedController
{
	[Token(Token = "0x4002417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRInput.Controller _controller;

	[Token(Token = "0x4002418")]
	private const int HAPTIC_FRAMES_THRESH = 2;

	[Token(Token = "0x4002419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _hapticIsActive;

	[Token(Token = "0x400241A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _frameFromLastHaptic;

	[Token(Token = "0x400241B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _snapTurnDisabled;

	[Token(Token = "0x1700061B")]
	public override Vector3 Position
	{
		[Token(Token = "0x6002487")]
		[Address(RVA = "0xD77990", Offset = "0xD77990", VA = "0xD77990", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700061C")]
	public override Quaternion Rotation
	{
		[Token(Token = "0x6002488")]
		[Address(RVA = "0xD77A30", Offset = "0xD77A30", VA = "0xD77A30", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700061D")]
	public override Vector3 Forward
	{
		[Token(Token = "0x6002489")]
		[Address(RVA = "0xD77B60", Offset = "0xD77B60", VA = "0xD77B60", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700061E")]
	public override Vector3 Velocity
	{
		[Token(Token = "0x600248A")]
		[Address(RVA = "0xD77C04", Offset = "0xD77C04", VA = "0xD77C04", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700061F")]
	public override float TriggerAxis
	{
		[Token(Token = "0x600248B")]
		[Address(RVA = "0xD77CA4", Offset = "0xD77CA4", VA = "0xD77CA4", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000620")]
	public override Vector2 JoypadAxis
	{
		[Token(Token = "0x600248C")]
		[Address(RVA = "0xD77D04", Offset = "0xD77D04", VA = "0xD77D04", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000621")]
	public override bool IsPositionTracked
	{
		[Token(Token = "0x600248D")]
		[Address(RVA = "0xD77D64", Offset = "0xD77D64", VA = "0xD77D64", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600248E")]
	[Address(RVA = "0xD750C8", Offset = "0xD750C8", VA = "0xD750C8")]
	public VRTrackedController_Oculus(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x600248F")]
	[Address(RVA = "0xD77DC0", Offset = "0xD77DC0", VA = "0xD77DC0", Slot = "11")]
	public override void HapticPulse(float strength)
	{
	}

	[Token(Token = "0x6002490")]
	[Address(RVA = "0xD77E88", Offset = "0xD77E88", VA = "0xD77E88")]
	public static void DetectSnapTurn(VRTrackedController controller, ref bool snapTurnDisabled)
	{
	}

	[Token(Token = "0x6002491")]
	[Address(RVA = "0xD77FEC", Offset = "0xD77FEC", VA = "0xD77FEC", Slot = "12")]
	protected override void DetectSnapTurn()
	{
	}

	[Token(Token = "0x6002492")]
	[Address(RVA = "0xD77FF4", Offset = "0xD77FF4", VA = "0xD77FF4")]
	public static void DetectMusicSkip(VRTrackedController controller)
	{
	}

	[Token(Token = "0x6002493")]
	[Address(RVA = "0xD780F8", Offset = "0xD780F8", VA = "0xD780F8", Slot = "13")]
	protected override void DetectMusicSkip()
	{
	}

	[Token(Token = "0x6002494")]
	[Address(RVA = "0xD780FC", Offset = "0xD780FC", VA = "0xD780FC", Slot = "14")]
	public override void Update()
	{
	}

	[Token(Token = "0x6002495")]
	[Address(RVA = "0xD78300", Offset = "0xD78300", VA = "0xD78300", Slot = "15")]
	public override void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6002496")]
	[Address(RVA = "0xD783BC", Offset = "0xD783BC", VA = "0xD783BC", Slot = "16")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x200062D")]
public class VRTrackedController_Pico : VRTrackedController_XR
{
	[Token(Token = "0x6002497")]
	[Address(RVA = "0xD783E0", Offset = "0xD783E0", VA = "0xD783E0")]
	public VRTrackedController_Pico(VRPlugin.Side side)
	{
	}
}
[Token(Token = "0x200062E")]
public abstract class VRTrackedController_XR : VRTrackedController
{
	[Token(Token = "0x400241C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected XRNode _hand;

	[Token(Token = "0x400241D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _transform;

	[Token(Token = "0x400241E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _snapTurnDisabled;

	[Token(Token = "0x17000622")]
	public override Vector3 Position
	{
		[Token(Token = "0x6002498")]
		[Address(RVA = "0xD785C8", Offset = "0xD785C8", VA = "0xD785C8", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000623")]
	public override Quaternion Rotation
	{
		[Token(Token = "0x6002499")]
		[Address(RVA = "0xD786A4", Offset = "0xD786A4", VA = "0xD786A4", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000624")]
	public override Vector3 Forward
	{
		[Token(Token = "0x600249A")]
		[Address(RVA = "0xD78788", Offset = "0xD78788", VA = "0xD78788", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000625")]
	public override float TriggerAxis
	{
		[Token(Token = "0x600249B")]
		[Address(RVA = "0xD7882C", Offset = "0xD7882C", VA = "0xD7882C", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000626")]
	public override Vector2 JoypadAxis
	{
		[Token(Token = "0x600249C")]
		[Address(RVA = "0xD788D0", Offset = "0xD788D0", VA = "0xD788D0", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000627")]
	public override bool IsPositionTracked
	{
		[Token(Token = "0x600249D")]
		[Address(RVA = "0xD789A8", Offset = "0xD789A8", VA = "0xD789A8", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600249E")]
	[Address(RVA = "0xD783E4", Offset = "0xD783E4", VA = "0xD783E4")]
	public VRTrackedController_XR(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x600249F")]
	[Address(RVA = "0xD78A3C", Offset = "0xD78A3C", VA = "0xD78A3C")]
	public static void DetectSnapTurn(VRTrackedController controller, ref bool snapTurnDisabled)
	{
	}

	[Token(Token = "0x60024A0")]
	[Address(RVA = "0xD78B24", Offset = "0xD78B24", VA = "0xD78B24", Slot = "12")]
	protected override void DetectSnapTurn()
	{
	}

	[Token(Token = "0x60024A1")]
	[Address(RVA = "0xD78B2C", Offset = "0xD78B2C", VA = "0xD78B2C")]
	public static void DetectMusicSkip(VRTrackedController controller)
	{
	}

	[Token(Token = "0x60024A2")]
	[Address(RVA = "0xD78BB4", Offset = "0xD78BB4", VA = "0xD78BB4", Slot = "13")]
	protected override void DetectMusicSkip()
	{
	}

	[Token(Token = "0x60024A3")]
	[Address(RVA = "0xD78BB8", Offset = "0xD78BB8", VA = "0xD78BB8", Slot = "14")]
	public override void Update()
	{
	}
}
[Token(Token = "0x200062F")]
public class YURManager : MonoBehaviour
{
	[Token(Token = "0x2000631")]
	[CompilerGenerated]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YURManager <>4__this;

		[Token(Token = "0x17000628")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xD7A1A8", Offset = "0xD7A1A8", VA = "0xD7A1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000629")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xD7A1F0", Offset = "0xD7A1F0", VA = "0xD7A1F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xD790D4", Offset = "0xD790D4", VA = "0xD790D4")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xD799D8", Offset = "0xD799D8", VA = "0xD799D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xD799DC", Offset = "0xD799DC", VA = "0xD799DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xD7A1B0", Offset = "0xD7A1B0", VA = "0xD7A1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400241F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject watchPrefab;

	[Token(Token = "0x4002420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject yurWatchHolder;

	[Token(Token = "0x4002421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject circle;

	[Token(Token = "0x4002422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _watch;

	[Token(Token = "0x4002423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YURLeftHand _leftHand;

	[Token(Token = "0x4002424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YURRightHand _rightHand;

	[Token(Token = "0x4002425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YURHMD _hmd;

	[Token(Token = "0x4002426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _beginOnce;

	[Token(Token = "0x60024A4")]
	[Address(RVA = "0xD78E2C", Offset = "0xD78E2C", VA = "0xD78E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60024A5")]
	[Address(RVA = "0xD79060", Offset = "0xD79060", VA = "0xD79060")]
	[IteratorStateMachine(typeof(<Start>d__8))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60024A6")]
	[Address(RVA = "0xD790FC", Offset = "0xD790FC", VA = "0xD790FC")]
	private void BeginOnceWhenYurEnabled()
	{
	}

	[Token(Token = "0x60024A7")]
	[Address(RVA = "0xD79328", Offset = "0xD79328", VA = "0xD79328")]
	private void YURToggleOnSwitched(bool activate)
	{
	}

	[Token(Token = "0x60024A8")]
	[Address(RVA = "0xD7959C", Offset = "0xD7959C", VA = "0xD7959C")]
	private void OnModelChange()
	{
	}

	[Token(Token = "0x60024A9")]
	[Address(RVA = "0xD79650", Offset = "0xD79650", VA = "0xD79650")]
	private void Update()
	{
	}

	[Token(Token = "0x60024AA")]
	[Address(RVA = "0xD79750", Offset = "0xD79750", VA = "0xD79750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60024AB")]
	[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60024AC")]
	[Address(RVA = "0xD79754", Offset = "0xD79754", VA = "0xD79754")]
	private void Close()
	{
	}

	[Token(Token = "0x60024AD")]
	[Address(RVA = "0xD79884", Offset = "0xD79884", VA = "0xD79884")]
	public YURManager()
	{
	}
}
[Token(Token = "0x2000632")]
public class YURToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x400242D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURToggleSwitch inst;

	[Token(Token = "0x400242F")]
	private const string PLAYER_PREFS_KEY = "YURToggleSwitch_Active";

	[Token(Token = "0x1700062A")]
	[HideInInspector]
	public bool Active
	{
		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xD7A1F8", Offset = "0xD7A1F8", VA = "0xD7A1F8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xD7A200", Offset = "0xD7A200", VA = "0xD7A200")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400005C")]
	public event Action<bool> OnSwitched
	{
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xD7A0F8", Offset = "0xD7A0F8", VA = "0xD7A0F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xD7A20C", Offset = "0xD7A20C", VA = "0xD7A20C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60024BC")]
	[Address(RVA = "0xD7A2BC", Offset = "0xD7A2BC", VA = "0xD7A2BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60024BD")]
	[Address(RVA = "0xD7A368", Offset = "0xD7A368", VA = "0xD7A368", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x60024BE")]
	[Address(RVA = "0xD7A370", Offset = "0xD7A370", VA = "0xD7A370", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x60024BF")]
	[Address(RVA = "0xD7A4C0", Offset = "0xD7A4C0", VA = "0xD7A4C0", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x60024C0")]
	[Address(RVA = "0xD7A528", Offset = "0xD7A528", VA = "0xD7A528")]
	public YURToggleSwitch()
	{
	}
}
[Token(Token = "0x2000633")]
public class YURWatchPlacer : MonoBehaviour
{
	[Token(Token = "0x2000634")]
	public enum Place
	{
		[Token(Token = "0x4002433")]
		Anchor,
		[Token(Token = "0x4002434")]
		Wrist
	}

	[Token(Token = "0x4002431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Place place;

	[Token(Token = "0x60024C1")]
	[Address(RVA = "0xD7A530", Offset = "0xD7A530", VA = "0xD7A530")]
	private void Start()
	{
	}

	[Token(Token = "0x60024C2")]
	[Address(RVA = "0xD7A5F8", Offset = "0xD7A5F8", VA = "0xD7A5F8")]
	private void OnModelChange()
	{
	}

	[Token(Token = "0x60024C3")]
	[Address(RVA = "0xD7A74C", Offset = "0xD7A74C", VA = "0xD7A74C")]
	public YURWatchPlacer()
	{
	}
}
namespace UIgak
{
	[Token(Token = "0x2000635")]
	public class Arm : MonoBehaviour, IOrbitalParent, IExpandableOrbitalParent
	{
		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xD7A754", Offset = "0xD7A754", VA = "0xD7A754")]
		public float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xD7A77C", Offset = "0xD7A77C", VA = "0xD7A77C")]
		public void setDirection(float angle)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xD7A82C", Offset = "0xD7A82C", VA = "0xD7A82C")]
		public void setVerticalPosition(float angle)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xD7A8DC", Offset = "0xD7A8DC", VA = "0xD7A8DC", Slot = "4")]
		private void UIgak.IOrbitalParent.onOrbitalSizeChanged()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xD7A9CC", Offset = "0xD7A9CC", VA = "0xD7A9CC", Slot = "5")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xD7AAD8", Offset = "0xD7AAD8", VA = "0xD7AAD8", Slot = "6")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalUnexpanded(HorizontalOrbital orbital)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xD7ABD4", Offset = "0xD7ABD4", VA = "0xD7ABD4")]
		public Arm()
		{
		}
	}
	[Token(Token = "0x2000636")]
	[RequireComponent(typeof(HorizontalOrbital))]
	public class ExpandableOrbital : MonoBehaviour, IClickable
	{
		[Token(Token = "0x2000637")]
		[CompilerGenerated]
		private sealed class <hideExpandableCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x1700062C")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60024E2")]
				[Address(RVA = "0xD7B7B0", Offset = "0xD7B7B0", VA = "0xD7B7B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700062D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E4")]
				[Address(RVA = "0xD7B7F8", Offset = "0xD7B7F8", VA = "0xD7B7F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xD7B0D0", Offset = "0xD7B0D0", VA = "0xD7B0D0")]
			[DebuggerHidden]
			public <hideExpandableCo>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xD7B710", Offset = "0xD7B710", VA = "0xD7B710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xD7B714", Offset = "0xD7B714", VA = "0xD7B714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xD7B7B8", Offset = "0xD7B7B8", VA = "0xD7B7B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000638")]
		[CompilerGenerated]
		private sealed class <showExpandedCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x1700062E")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0xD7B8E4", Offset = "0xD7B8E4", VA = "0xD7B8E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700062F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0xD7B92C", Offset = "0xD7B92C", VA = "0xD7B92C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xD7B170", Offset = "0xD7B170", VA = "0xD7B170")]
			[DebuggerHidden]
			public <showExpandedCo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xD7B854", Offset = "0xD7B854", VA = "0xD7B854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xD7B858", Offset = "0xD7B858", VA = "0xD7B858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xD7B8EC", Offset = "0xD7B8EC", VA = "0xD7B8EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000639")]
		[CompilerGenerated]
		private sealed class <hideExpandedCo>d__21 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x17000630")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60024EE")]
				[Address(RVA = "0xD7BA28", Offset = "0xD7BA28", VA = "0xD7BA28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000631")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F0")]
				[Address(RVA = "0xD7BA70", Offset = "0xD7BA70", VA = "0xD7BA70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xD7B444", Offset = "0xD7B444", VA = "0xD7B444")]
			[DebuggerHidden]
			public <hideExpandedCo>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xD7B988", Offset = "0xD7B988", VA = "0xD7B988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xD7B98C", Offset = "0xD7B98C", VA = "0xD7B98C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xD7BA30", Offset = "0xD7BA30", VA = "0xD7BA30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200063A")]
		[CompilerGenerated]
		private sealed class <showExpandableCo>d__23 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x17000632")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60024F4")]
				[Address(RVA = "0xD7BB5C", Offset = "0xD7BB5C", VA = "0xD7BB5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000633")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F6")]
				[Address(RVA = "0xD7BBA4", Offset = "0xD7BBA4", VA = "0xD7BBA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xD7B4E4", Offset = "0xD7B4E4", VA = "0xD7B4E4")]
			[DebuggerHidden]
			public <showExpandableCo>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xD7BACC", Offset = "0xD7BACC", VA = "0xD7BACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xD7BAD0", Offset = "0xD7BAD0", VA = "0xD7BAD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xD7BB64", Offset = "0xD7BB64", VA = "0xD7BB64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HorizontalOrbital expandedOrbital;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId expandSound;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UISoundPlayer.SoundId unexpandSound;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent expand;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent unexpand;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _expanded;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalOrbital _expandableOrbital;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IExpandableOrbitalParent _parent;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Area _expandableArea;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Area _expandedArea;

		[Token(Token = "0x1700062B")]
		public bool expanded
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0xD7ABDC", Offset = "0xD7ABDC", VA = "0xD7ABDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xD7ABE4", Offset = "0xD7ABE4", VA = "0xD7ABE4")]
			set
			{
			}
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xD7AC08", Offset = "0xD7AC08", VA = "0xD7AC08")]
		private void onExpanded()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xD7AE20", Offset = "0xD7AE20", VA = "0xD7AE20")]
		private void hideExpandable()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xD7AEF8", Offset = "0xD7AEF8", VA = "0xD7AEF8")]
		[IteratorStateMachine(typeof(<hideExpandableCo>d__15))]
		private IEnumerator<float> hideExpandableCo()
		{
			return null;
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xD7AF6C", Offset = "0xD7AF6C", VA = "0xD7AF6C")]
		private void showExpanded()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xD7B0F8", Offset = "0xD7B0F8", VA = "0xD7B0F8")]
		[IteratorStateMachine(typeof(<showExpandedCo>d__17))]
		private IEnumerator<float> showExpandedCo()
		{
			return null;
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xD7B16C", Offset = "0xD7B16C", VA = "0xD7B16C")]
		private void onExpandDone()
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xD7AD14", Offset = "0xD7AD14", VA = "0xD7AD14")]
		private void onUnexpanded()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xD7B198", Offset = "0xD7B198", VA = "0xD7B198")]
		private void hideExpanded()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xD7B270", Offset = "0xD7B270", VA = "0xD7B270")]
		[IteratorStateMachine(typeof(<hideExpandedCo>d__21))]
		private IEnumerator<float> hideExpandedCo()
		{
			return null;
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xD7B2E4", Offset = "0xD7B2E4", VA = "0xD7B2E4")]
		private void showExpandable()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xD7B46C", Offset = "0xD7B46C", VA = "0xD7B46C")]
		[IteratorStateMachine(typeof(<showExpandableCo>d__23))]
		private IEnumerator<float> showExpandableCo()
		{
			return null;
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xD7B4E0", Offset = "0xD7B4E0", VA = "0xD7B4E0")]
		private void onUnexpandDone()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xD7B50C", Offset = "0xD7B50C", VA = "0xD7B50C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xD7B638", Offset = "0xD7B638", VA = "0xD7B638")]
		private void hideExpandedInstantly()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xD7B6CC", Offset = "0xD7B6CC", VA = "0xD7B6CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xD7B6E0", Offset = "0xD7B6E0", VA = "0xD7B6E0", Slot = "4")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xD7B6FC", Offset = "0xD7B6FC", VA = "0xD7B6FC", Slot = "5")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xD7B700", Offset = "0xD7B700", VA = "0xD7B700")]
		public ExpandableOrbital()
		{
		}
	}
	[Token(Token = "0x200063B")]
	[RequireComponent(typeof(OrbitalLayout))]
	public class ExpandableOrbitalLayout : MonoBehaviour, IExpandableOrbitalParent
	{
		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OrbitalLayout _layout;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<HorizontalOrbital> _origOrbitals;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _origDirection;

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xD7BC00", Offset = "0xD7BC00", VA = "0xD7BC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xD7BCE0", Offset = "0xD7BCE0", VA = "0xD7BCE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xD7BE24", Offset = "0xD7BE24", VA = "0xD7BE24", Slot = "4")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xD7C150", Offset = "0xD7C150", VA = "0xD7C150", Slot = "5")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalUnexpanded(HorizontalOrbital orbital)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xD7C2D4", Offset = "0xD7C2D4", VA = "0xD7C2D4")]
		private HorizontalOrbital findExpanded()
		{
			return null;
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xD7C404", Offset = "0xD7C404", VA = "0xD7C404")]
		public ExpandableOrbitalLayout()
		{
		}
	}
	[Token(Token = "0x200063C")]
	public abstract class HorizontalOrbital : MonoBehaviour, IOrbital
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 179.99f)]
		public float horizontalArcDegrees;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldHorizontalArcDegrees;

		[Token(Token = "0x17000634")]
		private GameObject UIgak.IOrbital.gameObject
		{
			[Token(Token = "0x6002500")]
			[Address(RVA = "0xD7C414", Offset = "0xD7C414", VA = "0xD7C414", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xD7C40C", Offset = "0xD7C40C", VA = "0xD7C40C", Slot = "8")]
		public virtual float getHorizontalArcDegrees()
		{
			return default(float);
		}

		[Token(Token = "0x60024FE")]
		public abstract float getDirection();

		[Token(Token = "0x60024FF")]
		public abstract void setDirection(float angle);

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xD7C41C", Offset = "0xD7C41C", VA = "0xD7C41C", Slot = "11")]
		protected virtual void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xD7C43C", Offset = "0xD7C43C", VA = "0xD7C43C", Slot = "12")]
		protected virtual void onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xD7C5F8", Offset = "0xD7C5F8", VA = "0xD7C5F8")]
		protected HorizontalOrbital()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public class HorizontalOrbitalLayout : OrbitalLayout
	{
		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 120f)]
		public float paddingDegrees;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float oldPaddingDegrees;

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xD7C608", Offset = "0xD7C608", VA = "0xD7C608", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xD7C6B8", Offset = "0xD7C6B8", VA = "0xD7C6B8")]
		private void onPaddingChanged()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xD7C6C8", Offset = "0xD7C6C8", VA = "0xD7C6C8", Slot = "16")]
		protected override void update()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xD7CCD0", Offset = "0xD7CCD0", VA = "0xD7CCD0")]
		public void forceUpdate()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xD7CA3C", Offset = "0xD7CA3C", VA = "0xD7CA3C")]
		public float calcTotalArc()
		{
			return default(float);
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xD7CCE0", Offset = "0xD7CCE0", VA = "0xD7CCE0")]
		public HorizontalOrbitalLayout()
		{
		}
	}
	[Token(Token = "0x200063E")]
	public interface IClickable
	{
		[Token(Token = "0x600250A")]
		void onPointerClick();

		[Token(Token = "0x600250B")]
		void onPointerDown();
	}
	[Token(Token = "0x200063F")]
	public interface IDraggable
	{
		[Token(Token = "0x600250C")]
		void updateRotation(Vector3 totalDiff, Vector3 deltaDiff);
	}
	[Token(Token = "0x2000640")]
	public interface IExpandableOrbitalParent
	{
		[Token(Token = "0x600250D")]
		void onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital);

		[Token(Token = "0x600250E")]
		void onOrbitalUnexpanded(HorizontalOrbital orbital);
	}
	[Token(Token = "0x2000641")]
	public interface IInitializableItem<TData>
	{
		[Token(Token = "0x600250F")]
		void InitializeItem(TData data);
	}
	[Token(Token = "0x2000642")]
	public interface IOrbital
	{
		[Token(Token = "0x17000635")]
		GameObject gameObject
		{
			[Token(Token = "0x6002513")]
			get;
		}

		[Token(Token = "0x6002510")]
		float getHorizontalArcDegrees();

		[Token(Token = "0x6002511")]
		float getDirection();

		[Token(Token = "0x6002512")]
		void setDirection(float angle);
	}
	[Token(Token = "0x2000643")]
	public interface IOrbitalControl
	{
		[Token(Token = "0x6002514")]
		void onHorizontalArcDegreesChanged();

		[Token(Token = "0x6002515")]
		void onHeightDegreesChanged();

		[Token(Token = "0x6002516")]
		void onDistanceChanged();
	}
	[Token(Token = "0x2000644")]
	public interface IOrbitalParent
	{
		[Token(Token = "0x6002517")]
		void onOrbitalSizeChanged();
	}
	[Token(Token = "0x2000645")]
	public interface ITouchable
	{
		[Token(Token = "0x17000636")]
		bool interactable
		{
			[Token(Token = "0x6002518")]
			get;
		}

		[Token(Token = "0x6002519")]
		void onPointerEnter(TouchEventData eventData);

		[Token(Token = "0x600251A")]
		void onPointerExit(TouchEventData eventData);

		[Token(Token = "0x600251B")]
		void onPointerDown(TouchEventData eventData);

		[Token(Token = "0x600251C")]
		void onPointerUp(TouchEventData eventData);
	}
	[Token(Token = "0x2000646")]
	[RequireComponent(typeof(Collider))]
	public class Knob : MonoBehaviour, ITouchable
	{
		[Serializable]
		[Token(Token = "0x2000647")]
		public class Rotation
		{
			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float speedFactor;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(-180f, 180f)]
			public float minCCWRotation;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(-180f, 180f)]
			public float maxCCWRotation;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Range(2f, 101f)]
			public int numTicks;

			[Token(Token = "0x1700063C")]
			public float tickAngle
			{
				[Token(Token = "0x6002539")]
				[Address(RVA = "0xD7D8A4", Offset = "0xD7D8A4", VA = "0xD7D8A4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600253A")]
			[Address(RVA = "0xD7E23C", Offset = "0xD7E23C", VA = "0xD7E23C")]
			public Rotation()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000648")]
		public class Feedback
		{
			[Token(Token = "0x2000649")]
			public enum TickSound
			{
				[Token(Token = "0x400246B")]
				None,
				[Token(Token = "0x400246C")]
				Smooth,
				[Token(Token = "0x400246D")]
				Click
			}

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hapticIntensity;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TickSound tickSound;

			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(0f, 1f)]
			public float tickSoundVolume;

			[Token(Token = "0x600253B")]
			[Address(RVA = "0xD7E25C", Offset = "0xD7E25C", VA = "0xD7E25C")]
			public Feedback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064A")]
		public class Snap
		{
			[Serializable]
			[Token(Token = "0x200064B")]
			public class Off
			{
				[Token(Token = "0x4002473")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool snapToOff;

				[Token(Token = "0x4002474")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float extraAngle;

				[Token(Token = "0x4002475")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Range(0f, 1f)]
				public float tickSoundVolume;

				[Token(Token = "0x4002476")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				[Range(100f, 3999f)]
				public ushort hapticIntensity;

				[Token(Token = "0x600253D")]
				[Address(RVA = "0xD7E294", Offset = "0xD7E294", VA = "0xD7E294")]
				public Off()
				{
				}
			}

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool snapToTick;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float flipThreshold;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float stretchFactor;

			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float smoothTime;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Off off;

			[Token(Token = "0x600253C")]
			[Address(RVA = "0xD7E274", Offset = "0xD7E274", VA = "0xD7E274")]
			public Snap()
			{
			}
		}

		[Token(Token = "0x200064C")]
		public interface IControlee
		{
			[Token(Token = "0x600253E")]
			float getAmplitude();

			[Token(Token = "0x600253F")]
			void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation);
		}

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rotation rotation;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Feedback feedback;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Snap snap;

		[Token(Token = "0x4002459")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IControlee _controlee;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool anyGrabbed;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _lastUpDirection;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _currentCcwRotation;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _visualCcwRotation;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _snappedCcwRotation;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _snapSmoothVelocity;

		[Token(Token = "0x17000637")]
		public IControlee controlee
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0xD7CD08", Offset = "0xD7CD08", VA = "0xD7CD08")]
			set
			{
			}
		}

		[Token(Token = "0x17000638")]
		private bool highlighted
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0xD7CD4C", Offset = "0xD7CD4C", VA = "0xD7CD4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000639")]
		private bool grabbed
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0xD7CEDC", Offset = "0xD7CEDC", VA = "0xD7CEDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700063A")]
		private float clampedCcw
		{
			[Token(Token = "0x6002520")]
			[Address(RVA = "0xD7D1F4", Offset = "0xD7D1F4", VA = "0xD7D1F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063B")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0xD7DA98", Offset = "0xD7DA98", VA = "0xD7DA98", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xD7D224", Offset = "0xD7D224", VA = "0xD7D224")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xD7D390", Offset = "0xD7D390", VA = "0xD7D390")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xD7CD48", Offset = "0xD7CD48", VA = "0xD7CD48")]
		private void onControleeSet()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xD7D3A4", Offset = "0xD7D3A4", VA = "0xD7D3A4")]
		public void readAmplitude()
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xD7D664", Offset = "0xD7D664", VA = "0xD7D664")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xD7CD70", Offset = "0xD7CD70", VA = "0xD7CD70")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xD7CE28", Offset = "0xD7CE28", VA = "0xD7CE28")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xD7CF70", Offset = "0xD7CF70", VA = "0xD7CF70")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xD7D0E8", Offset = "0xD7D0E8", VA = "0xD7D0E8")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xD7D73C", Offset = "0xD7D73C", VA = "0xD7D73C")]
		private bool isOff(float ccwRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xD7D7D0", Offset = "0xD7D7D0", VA = "0xD7D7D0")]
		private int leftTickNum()
		{
			return default(int);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xD7D8C0", Offset = "0xD7D8C0", VA = "0xD7D8C0")]
		private float leftTickPos(bool byUserChange)
		{
			return default(float);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xD7D96C", Offset = "0xD7D96C", VA = "0xD7D96C")]
		private int rightTickNum()
		{
			return default(int);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xD7DA40", Offset = "0xD7DA40", VA = "0xD7DA40")]
		private float rightTickPos()
		{
			return default(float);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xD7D48C", Offset = "0xD7D48C", VA = "0xD7D48C")]
		private float snappedCcw(bool byUserChange = true)
		{
			return default(float);
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xD7DAD8", Offset = "0xD7DAD8", VA = "0xD7DAD8", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xD7DAF4", Offset = "0xD7DAF4", VA = "0xD7DAF4", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xD7DB08", Offset = "0xD7DB08", VA = "0xD7DB08", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xD7DB10", Offset = "0xD7DB10", VA = "0xD7DB10", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xD7DB18", Offset = "0xD7DB18", VA = "0xD7DB18")]
		private void Update()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xD7D524", Offset = "0xD7D524", VA = "0xD7D524")]
		private void notifyAmplitudeChange()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xD7E048", Offset = "0xD7E048", VA = "0xD7E048")]
		public void onTick(bool snappedToOrFromOff)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xD7E234", Offset = "0xD7E234", VA = "0xD7E234")]
		public Knob()
		{
		}
	}
	[Token(Token = "0x200064D")]
	public class Orbital : HorizontalOrbital
	{
		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-89.99f, 89.99f)]
		public float heightDegrees;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float oldHeightDegrees;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distance;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float oldDistance;

		[Token(Token = "0x1700063D")]
		private Arm arm
		{
			[Token(Token = "0x6002540")]
			[Address(RVA = "0xD7E2B0", Offset = "0xD7E2B0", VA = "0xD7E2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xD7E314", Offset = "0xD7E314", VA = "0xD7E314", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xD7E6C8", Offset = "0xD7E6C8", VA = "0xD7E6C8", Slot = "9")]
		public override float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xD7E7A4", Offset = "0xD7E7A4", VA = "0xD7E7A4", Slot = "10")]
		public override void setDirection(float angle)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xD7E384", Offset = "0xD7E384", VA = "0xD7E384")]
		private void onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xD7E53C", Offset = "0xD7E53C", VA = "0xD7E53C")]
		private void onDistanceChanged()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xD7E88C", Offset = "0xD7E88C", VA = "0xD7E88C")]
		public Orbital()
		{
		}
	}
	[Token(Token = "0x200064E")]
	[RequireComponent(typeof(BoxCollider))]
	[RequireComponent(typeof(Orbital))]
	public class OrbitalBoxControl : MonoBehaviour, IOrbitalControl
	{
		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 89.99f)]
		public float topArcDegrees;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldTopArcDegrees;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 89.99f)]
		public float bottomArcDegrees;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float oldBottomArcDegrees;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 10f)]
		public float depth;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float oldDepth;

		[Token(Token = "0x4002481")]
		private const float colliderCenterEpsilon = 0.0001f;

		[Token(Token = "0x4002482")]
		private const float colliderSizeEpsilon = 0.0001f;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xD7E8A4", Offset = "0xD7E8A4", VA = "0xD7E8A4", Slot = "4")]
		private void UIgak.IOrbitalControl.onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xD7E9FC", Offset = "0xD7E9FC", VA = "0xD7E9FC", Slot = "5")]
		private void UIgak.IOrbitalControl.onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xD7EA00", Offset = "0xD7EA00", VA = "0xD7EA00", Slot = "6")]
		private void UIgak.IOrbitalControl.onDistanceChanged()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xD7EA04", Offset = "0xD7EA04", VA = "0xD7EA04")]
		private void checkForConfigChanges()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xD7EA60", Offset = "0xD7EA60", VA = "0xD7EA60")]
		private void onTopArcDegreesChanged()
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xD7EA64", Offset = "0xD7EA64", VA = "0xD7EA64")]
		private void onBottomArcDegreesChanged()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xD7EA68", Offset = "0xD7EA68", VA = "0xD7EA68")]
		private void onDepthChanged()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xD7E8A8", Offset = "0xD7E8A8", VA = "0xD7E8A8")]
		private void updateCollider()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xD7EA6C", Offset = "0xD7EA6C", VA = "0xD7EA6C")]
		private void setColliderCenter(Vector3 center)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xD7EBA0", Offset = "0xD7EBA0", VA = "0xD7EBA0")]
		private void setColliderSize(Vector3 size)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xD7ECD4", Offset = "0xD7ECD4", VA = "0xD7ECD4")]
		public OrbitalBoxControl()
		{
		}
	}
	[Token(Token = "0x200064F")]
	public abstract class OrbitalLayout : HorizontalOrbital, IOrbitalParent
	{
		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HorizontalOrbital> orbitals;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<HorizontalOrbital> oldOrbitals;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xD7ECF0", Offset = "0xD7ECF0", VA = "0xD7ECF0", Slot = "9")]
		public override float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xD7ED18", Offset = "0xD7ED18", VA = "0xD7ED18", Slot = "10")]
		public override void setDirection(float angle)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xD7C644", Offset = "0xD7C644", VA = "0xD7C644", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xD7EDD8", Offset = "0xD7EDD8", VA = "0xD7EDD8", Slot = "14")]
		protected virtual bool orbitalsChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xD7EE3C", Offset = "0xD7EE3C", VA = "0xD7EE3C", Slot = "15")]
		protected virtual void copyOrbitals()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xD7EDC8", Offset = "0xD7EDC8", VA = "0xD7EDC8")]
		private void onOrbitalsChanged()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xD7EEC0", Offset = "0xD7EEC0", VA = "0xD7EEC0", Slot = "13")]
		private void UIgak.IOrbitalParent.onOrbitalSizeChanged()
		{
		}

		[Token(Token = "0x6002559")]
		protected abstract void update();

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xD7CCF8", Offset = "0xD7CCF8", VA = "0xD7CCF8")]
		protected OrbitalLayout()
		{
		}
	}
	[Token(Token = "0x2000650")]
	[RequireComponent(typeof(SphereCollider))]
	[RequireComponent(typeof(Orbital))]
	public class OrbitalSphereControl : MonoBehaviour, IOrbitalControl
	{
		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 89.99f)]
		public float radiusDegrees;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldRadiusDegrees;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SphereCollider _collider;

		[Token(Token = "0x4002488")]
		private const float colliderCenterEpsilon = 0.0001f;

		[Token(Token = "0x4002489")]
		private const float colliderRadiusEpsilon = 0.0001f;

		[Token(Token = "0x1700063E")]
		private SphereCollider collider
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xD7EED0", Offset = "0xD7EED0", VA = "0xD7EED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xD7EF78", Offset = "0xD7EF78", VA = "0xD7EF78", Slot = "4")]
		private void UIgak.IOrbitalControl.onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xD7EF7C", Offset = "0xD7EF7C", VA = "0xD7EF7C", Slot = "5")]
		private void UIgak.IOrbitalControl.onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xD7EF80", Offset = "0xD7EF80", VA = "0xD7EF80", Slot = "6")]
		private void UIgak.IOrbitalControl.onDistanceChanged()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xD7F08C", Offset = "0xD7F08C", VA = "0xD7F08C")]
		private void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xD7F0A4", Offset = "0xD7F0A4", VA = "0xD7F0A4")]
		private void onRadiusDegreesChanged()
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xD7EF84", Offset = "0xD7EF84", VA = "0xD7EF84")]
		private void updateCollider()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xD7F0A8", Offset = "0xD7F0A8", VA = "0xD7F0A8")]
		private void setColliderCenter(Vector3 center)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xD7F1B0", Offset = "0xD7F1B0", VA = "0xD7F1B0")]
		private void setColliderRadius(float radius)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xD7F214", Offset = "0xD7F214", VA = "0xD7F214")]
		public OrbitalSphereControl()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class PopUpManager : MonoBehaviour
	{
		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _popUpIsPopped;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _popUpRoot;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PopUpManager inst;

		[Token(Token = "0x1700063F")]
		public bool popUpIsPopped
		{
			[Token(Token = "0x6002565")]
			[Address(RVA = "0xD7F224", Offset = "0xD7F224", VA = "0xD7F224")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000640")]
		public Transform popUpRoot
		{
			[Token(Token = "0x6002566")]
			[Address(RVA = "0xD7F22C", Offset = "0xD7F22C", VA = "0xD7F22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action<Transform> popUpPopped
		{
			[Token(Token = "0x6002567")]
			[Address(RVA = "0xD7F234", Offset = "0xD7F234", VA = "0xD7F234")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002568")]
			[Address(RVA = "0xD7F2E4", Offset = "0xD7F2E4", VA = "0xD7F2E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action popUpUnpopped
		{
			[Token(Token = "0x600256C")]
			[Address(RVA = "0xD7FAB8", Offset = "0xD7FAB8", VA = "0xD7FAB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600256D")]
			[Address(RVA = "0xD7FB54", Offset = "0xD7FB54", VA = "0xD7FB54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xD7F394", Offset = "0xD7F394", VA = "0xD7F394")]
		public void CloseAllPopups()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xD7F3A8", Offset = "0xD7F3A8", VA = "0xD7F3A8")]
		private void ClosePopup(Transform root)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xD7F7F4", Offset = "0xD7F7F4", VA = "0xD7F7F4")]
		public void onPopUpPopped(Transform root)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xD7FBF0", Offset = "0xD7FBF0", VA = "0xD7FBF0")]
		public void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xD7FC74", Offset = "0xD7FC74", VA = "0xD7FC74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xD7FCCC", Offset = "0xD7FCCC", VA = "0xD7FCCC")]
		public PopUpManager()
		{
		}
	}
	[Token(Token = "0x2000652")]
	[RequireComponent(typeof(TouchItem))]
	public class ProgressTouchItem : MonoBehaviour
	{
		[Token(Token = "0x2000653")]
		[CompilerGenerated]
		private sealed class <ProgressCo>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressTouchItem <>4__this;

			[Token(Token = "0x17000641")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600257C")]
				[Address(RVA = "0xD80314", Offset = "0xD80314", VA = "0xD80314", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000642")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257E")]
				[Address(RVA = "0xD8035C", Offset = "0xD8035C", VA = "0xD8035C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0xD80028", Offset = "0xD80028", VA = "0xD80028")]
			[DebuggerHidden]
			public <ProgressCo>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600257A")]
			[Address(RVA = "0xD800CC", Offset = "0xD800CC", VA = "0xD800CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600257B")]
			[Address(RVA = "0xD800D0", Offset = "0xD800D0", VA = "0xD800D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xD8031C", Offset = "0xD8031C", VA = "0xD8031C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float progressTime;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem touchItem;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISoundPlayer.SoundId progressEndSound;

		[NonSerialized]
		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float progress;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent progressEnd;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<float> progressChange;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine progressCo;

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xD7FCD4", Offset = "0xD7FCD4", VA = "0xD7FCD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xD7FE08", Offset = "0xD7FE08", VA = "0xD7FE08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xD7FCD8", Offset = "0xD7FCD8", VA = "0xD7FCD8")]
		private void RegisterEvents()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xD7FE0C", Offset = "0xD7FE0C", VA = "0xD7FE0C")]
		private void UnRegisterEvents()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xD7FF3C", Offset = "0xD7FF3C", VA = "0xD7FF3C")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xD7FFE0", Offset = "0xD7FFE0", VA = "0xD7FFE0")]
		private void OnUnGrab()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xD7FF6C", Offset = "0xD7FF6C", VA = "0xD7FF6C")]
		[IteratorStateMachine(typeof(<ProgressCo>d__13))]
		private IEnumerator ProgressCo()
		{
			return null;
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xD80050", Offset = "0xD80050", VA = "0xD80050")]
		public ProgressTouchItem()
		{
		}
	}
	[Token(Token = "0x2000654")]
	[RequireComponent(typeof(ScrollRect))]
	[RequireComponent(typeof(Collider))]
	public class Scrollable : MonoBehaviour, ITouchable, IDraggable
	{
		[Serializable]
		[Token(Token = "0x2000655")]
		public class Movement
		{
			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pixelsPerDegree;

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xD80A78", Offset = "0xD80A78", VA = "0xD80A78")]
			public Movement()
			{
			}
		}

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Movement movement;

		[Token(Token = "0x400249E")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _highlighted;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _grabbed;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x17000643")]
		private bool highlighted
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0xD80364", Offset = "0xD80364", VA = "0xD80364")]
			set
			{
			}
		}

		[Token(Token = "0x17000644")]
		private bool grabbed
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0xD804F4", Offset = "0xD804F4", VA = "0xD804F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000645")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0xD807B4", Offset = "0xD807B4", VA = "0xD807B4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xD806E4", Offset = "0xD806E4", VA = "0xD806E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xD806EC", Offset = "0xD806EC", VA = "0xD806EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xD80388", Offset = "0xD80388", VA = "0xD80388")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xD80440", Offset = "0xD80440", VA = "0xD80440")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xD80518", Offset = "0xD80518", VA = "0xD80518")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xD80600", Offset = "0xD80600", VA = "0xD80600")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xD807F4", Offset = "0xD807F4", VA = "0xD807F4", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xD80810", Offset = "0xD80810", VA = "0xD80810", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xD80824", Offset = "0xD80824", VA = "0xD80824", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xD80840", Offset = "0xD80840", VA = "0xD80840", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xD80854", Offset = "0xD80854", VA = "0xD80854")]
		private void Awake()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xD809CC", Offset = "0xD809CC", VA = "0xD809CC", Slot = "9")]
		private void UIgak.IDraggable.updateRotation(Vector3 totalDiff, Vector3 deltaDiff)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xD80A70", Offset = "0xD80A70", VA = "0xD80A70")]
		public Scrollable()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class SelectableDynamicTouchItem : SelectableDynamicTouchItem<object>
	{
		[Token(Token = "0x17000646")]
		public override object Data
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xD80A8C", Offset = "0xD80A8C", VA = "0xD80A8C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xD80A94", Offset = "0xD80A94", VA = "0xD80A94", Slot = "9")]
		public override void InitializeItem(object _)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xD80A98", Offset = "0xD80A98", VA = "0xD80A98")]
		public SelectableDynamicTouchItem()
		{
		}
	}
	[Token(Token = "0x2000657")]
	[RequireComponent(typeof(TouchItem))]
	public abstract class SelectableDynamicTouchItem<Tdata> : SelectableTouchItem, IInitializableItem<Tdata>, IClickable
	{
		[Serializable]
		[Token(Token = "0x2000658")]
		public class ScrollEvent : UnityEvent<Vector2>
		{
			[Token(Token = "0x60025A5")]
			public ScrollEvent()
			{
			}
		}

		[Token(Token = "0x2000659")]
		[CompilerGenerated]
		private sealed class <IsScrollAfterCo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectableDynamicTouchItem<Tdata> <>4__this;

			[Token(Token = "0x1700064C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A6")]
			[DebuggerHidden]
			public <IsScrollAfterCo>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60025A7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AA")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065A")]
		[CompilerGenerated]
		private sealed class <ScrollCo>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectableDynamicTouchItem<Tdata> <>4__this;

			[Token(Token = "0x1700064E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025AF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AC")]
			[DebuggerHidden]
			public <ScrollCo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60025AD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Thresholds")]
		public float clickTimeout;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scrollThreshold;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Events")]
		public ScrollEvent scrollEvent;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isScroll;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Canvas _parentCanvas;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit _onDownRaycastHit;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TouchItem _touchItem;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _isScrollAfterCo;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _scrollCo;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _lastScrollPoint;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _deltaScroll;

		[Token(Token = "0x17000647")]
		public abstract Tdata Data
		{
			[Token(Token = "0x6002593")]
			get;
		}

		[Token(Token = "0x17000648")]
		public TouchItem touchItem
		{
			[Token(Token = "0x6002595")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000649")]
		private Canvas _ParentCanvas
		{
			[Token(Token = "0x6002597")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064A")]
		private Vector2 _CurrentCanvasPoint
		{
			[Token(Token = "0x6002598")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700064B")]
		private RaycastHit _CurrentRaycast
		{
			[Token(Token = "0x6002599")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x6002594")]
		public abstract void InitializeItem(Tdata _);

		[Token(Token = "0x6002596")]
		public static Vector2 WorldToCanvas(Canvas canvas, Vector3 world_position)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600259A")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600259B")]
		private void StopPointerCoroutines()
		{
		}

		[Token(Token = "0x600259C")]
		[IteratorStateMachine(typeof(SelectableDynamicTouchItem<>.<IsScrollAfterCo>d__23))]
		private IEnumerator IsScrollAfterCo()
		{
			return null;
		}

		[Token(Token = "0x600259D")]
		[IteratorStateMachine(typeof(SelectableDynamicTouchItem<>.<ScrollCo>d__25))]
		private IEnumerator ScrollCo()
		{
			return null;
		}

		[Token(Token = "0x600259E")]
		private void Scroll()
		{
		}

		[Token(Token = "0x600259F")]
		private void onPointerExit()
		{
		}

		[Token(Token = "0x60025A0")]
		private void onPointerDown()
		{
		}

		[Token(Token = "0x60025A1")]
		private void onPointerUp()
		{
		}

		[Token(Token = "0x60025A2")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60025A3")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60025A4")]
		protected SelectableDynamicTouchItem()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public class SelectableTouchItem : MonoBehaviour, IClickable
	{
		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isToggle;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool startSelected;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool unselectOnEnable;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool unselectOnDisable;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool selectOnPointerDown;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId selectSound;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UISoundPlayer.SoundId unselectSound;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISoundPlayer.SoundId disabledSound;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent select;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent unselect;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _selected;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected UIItemTransitions _transitions;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UISoundPlayer _soundPlayer;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _selectedByUser;

		[Token(Token = "0x17000650")]
		public bool selected
		{
			[Token(Token = "0x60025B3")]
			[Address(RVA = "0xD80B70", Offset = "0xD80B70", VA = "0xD80B70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025B4")]
			[Address(RVA = "0xD80B78", Offset = "0xD80B78", VA = "0xD80B78")]
			set
			{
			}
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xD80AE0", Offset = "0xD80AE0", VA = "0xD80AE0")]
		public void SetSelectNoNotify(bool value)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xD80AEC", Offset = "0xD80AEC", VA = "0xD80AEC")]
		private void SetSelected(bool value, bool notify)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xD80ED4", Offset = "0xD80ED4", VA = "0xD80ED4", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xD8109C", Offset = "0xD8109C", VA = "0xD8109C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xD810B4", Offset = "0xD810B4", VA = "0xD810B4")]
		private void onTransitionsStateChanged()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xD80B84", Offset = "0xD80B84", VA = "0xD80B84")]
		private void onSelected(bool notify = true)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xD80D9C", Offset = "0xD80D9C", VA = "0xD80D9C")]
		private void onUnselected(bool notify = true)
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xD80CC0", Offset = "0xD80CC0", VA = "0xD80CC0")]
		private void onSelectDisabled()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xD810EC", Offset = "0xD810EC", VA = "0xD810EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xD8110C", Offset = "0xD8110C", VA = "0xD8110C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xD811CC", Offset = "0xD811CC", VA = "0xD811CC")]
		protected void Select()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xD81208", Offset = "0xD81208", VA = "0xD81208", Slot = "4")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xD81218", Offset = "0xD81218", VA = "0xD81218", Slot = "5")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xD81228", Offset = "0xD81228", VA = "0xD81228")]
		public SelectableTouchItem()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class SelectableTouchItemGroup : MonoBehaviour
	{
		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SelectableTouchItem[] _items;

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xD81240", Offset = "0xD81240", VA = "0xD81240")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xD813C4", Offset = "0xD813C4", VA = "0xD813C4")]
		private void onItemSelected(SelectableTouchItem selectedItem)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xD8149C", Offset = "0xD8149C", VA = "0xD8149C")]
		public SelectableTouchItemGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200065E")]
	public class ScrollSettings
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool scrollable;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool scrollX;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool scrollY;

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xD814C4", Offset = "0xD814C4", VA = "0xD814C4")]
		public ScrollSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200065F")]
	public class ItemsPoolSettings
	{
		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Dont use dynamic instantiation of the prefab, instead using existing items of the type in the scene")]
		public bool useExistingItems;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Item prefab to instantiate")]
		public GameObject itemPrefab;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The transform of the object to append prefabs children to")]
		public Transform transform;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int initialInstances;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxInstances;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xD814CC", Offset = "0xD814CC", VA = "0xD814CC")]
		public ItemsPoolSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000660")]
	public class SelectableTouchItemGroupDynamic : SelectableTouchItemGroupDynamic<SelectableDynamicTouchItem, object>
	{
		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xD814E0", Offset = "0xD814E0", VA = "0xD814E0")]
		public SelectableTouchItemGroupDynamic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000661")]
	public class SelectableTouchItemGroupDynamic<Titem, Tdata> : MonoBehaviour where Titem : SelectableDynamicTouchItem<Tdata>
	{
		[Token(Token = "0x2000662")]
		public enum GroupSelectBehaviour
		{
			[Token(Token = "0x40024E1")]
			None,
			[Token(Token = "0x40024E2")]
			OneOrNone,
			[Token(Token = "0x40024E3")]
			StrictlyOne
		}

		[Serializable]
		[Token(Token = "0x2000663")]
		public class ItemEvent : UnityEvent<Titem>
		{
			[Token(Token = "0x60025ED")]
			public ItemEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000664")]
		public class ItemsPool
		{
			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ItemsPoolSettings _settings;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _usedInstancesCount;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Stack<Titem> _unusedItems;

			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool _initialized;

			[Token(Token = "0x60025EE")]
			public ItemsPool(ItemsPoolSettings settings)
			{
			}

			[Token(Token = "0x60025EF")]
			public void InitializePool()
			{
			}

			[Token(Token = "0x60025F0")]
			private Titem CreateInstance()
			{
				return null;
			}

			[Token(Token = "0x60025F1")]
			private void ResetGameObject(GameObject itemGo)
			{
			}

			[Token(Token = "0x60025F2")]
			public Titem GetInstance()
			{
				return null;
			}

			[Token(Token = "0x60025F3")]
			public void ReturnInstance(Titem item)
			{
			}
		}

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GroupSelectBehaviour groupSelectBehaviour;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Order the items Actual GameObject transform index by their names")]
		public bool orderItems;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScrollSettings scrollSettings;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Events")]
		public ItemEvent itemHighlight;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemUnHighlight;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemSelected;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemDeselected;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectableDynamicTouchItem<object>.ScrollEvent scrollEvent;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemsPoolSettings settings;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemsPool itemsPool;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Titem> _items;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> highlightEvents;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> unHighlightEvents;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> selectEvents;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> deselectEvents;

		[Token(Token = "0x17000651")]
		public List<Titem> Items
		{
			[Token(Token = "0x60025CA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000652")]
		public Titem highlightedItem
		{
			[Token(Token = "0x60025CB")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000653")]
		public Titem unHighlightedItem
		{
			[Token(Token = "0x60025CD")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025CE")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000654")]
		public Titem selectedItem
		{
			[Token(Token = "0x60025CF")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public Titem deselectedItem
		{
			[Token(Token = "0x60025D1")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025D2")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025D3")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60025D5")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025D6")]
		public void ReSubscribe()
		{
		}

		[Token(Token = "0x60025D7")]
		public Titem AddItem(Tdata data)
		{
			return null;
		}

		[Token(Token = "0x60025D8")]
		public void ClearAndAddItems(IEnumerable<Tdata> data, bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60025D9")]
		public void Clear(bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60025DA")]
		public void AddItems(IEnumerable<Tdata> data)
		{
		}

		[Token(Token = "0x60025DB")]
		public void OrderItems(bool force = false)
		{
		}

		[Token(Token = "0x60025DC")]
		private void AddItemListeners(Titem item)
		{
		}

		[Token(Token = "0x60025DD")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60025DE")]
		public void RemoveAll(Tdata tdata)
		{
		}

		[Token(Token = "0x60025DF")]
		public void RemoveAll(IEnumerable<Titem> items)
		{
		}

		[Token(Token = "0x60025E0")]
		public void RemoveItem(Titem item)
		{
		}

		[Token(Token = "0x60025E1")]
		private void ReturnItems(bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60025E2")]
		public void UnsubscribeItem(Titem item)
		{
		}

		[Token(Token = "0x60025E3")]
		public void UnsubscribeAll()
		{
		}

		[Token(Token = "0x60025E4")]
		public void UnsubscribeAll(IEnumerable<Titem> items)
		{
		}

		[Token(Token = "0x60025E5")]
		public int IndexOf(Titem item)
		{
			return default(int);
		}

		[Token(Token = "0x60025E6")]
		protected virtual void onItemHighligh(Titem highlightedItem)
		{
		}

		[Token(Token = "0x60025E7")]
		protected virtual void onItemUnHighligh(Titem unHighlightedItem)
		{
		}

		[Token(Token = "0x60025E8")]
		protected virtual void onItemSelected(Titem selectedItem)
		{
		}

		[Token(Token = "0x60025E9")]
		private void UnselectAllBut(Titem selectedItem)
		{
		}

		[Token(Token = "0x60025EA")]
		protected virtual void onItemDeselected(Titem deselectedIt)
		{
		}

		[Token(Token = "0x60025EB")]
		private void onItemScroll(Vector2 delta)
		{
		}

		[Token(Token = "0x60025EC")]
		public SelectableTouchItemGroupDynamic()
		{
		}
	}
	[Token(Token = "0x2000668")]
	[RequireComponent(typeof(Collider))]
	public class ToggleSwitch : MonoBehaviour, ITouchable, IDraggable
	{
		[Serializable]
		[Token(Token = "0x2000669")]
		public class Movement
		{
			[Token(Token = "0x200066A")]
			public enum Axis
			{
				[Token(Token = "0x4002502")]
				Vertical,
				[Token(Token = "0x4002503")]
				Horizontal
			}

			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Axis axis;

			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float spanDegrees;

			[Token(Token = "0x6002619")]
			[Address(RVA = "0xD82150", Offset = "0xD82150", VA = "0xD82150")]
			public Movement()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200066B")]
		public class Feedback
		{
			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hapticIntensity;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0f, 1f)]
			public float tickSoundVolume;

			[Token(Token = "0x600261A")]
			[Address(RVA = "0xD82160", Offset = "0xD82160", VA = "0xD82160")]
			public Feedback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200066C")]
		public class Snap
		{
			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float flipThreshold;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stretchFactor;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float smoothTime;

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xD82178", Offset = "0xD82178", VA = "0xD82178")]
			public Snap()
			{
			}
		}

		[Token(Token = "0x200066D")]
		public interface IControlee
		{
			[Token(Token = "0x600261C")]
			bool getAmplitude();

			[Token(Token = "0x600261D")]
			void onAmplitudeChanged(float amplitude, bool snappedAmplitude);
		}

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Movement movement;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Feedback feedback;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Snap snap;

		[Token(Token = "0x40024F6")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IControlee _controlee;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _currentPosition;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _visualPosition;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _snappedPosition;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _snapSmoothVelocity;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider _collider;

		[Token(Token = "0x17000656")]
		public IControlee controlee
		{
			[Token(Token = "0x6002600")]
			[Address(RVA = "0xD81528", Offset = "0xD81528", VA = "0xD81528")]
			set
			{
			}
		}

		[Token(Token = "0x17000657")]
		private bool highlighted
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xD8156C", Offset = "0xD8156C", VA = "0xD8156C")]
			set
			{
			}
		}

		[Token(Token = "0x17000658")]
		private bool grabbed
		{
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xD816FC", Offset = "0xD816FC", VA = "0xD816FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000659")]
		private float clampedPosition
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0xD81920", Offset = "0xD81920", VA = "0xD81920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700065A")]
		private Collider collider
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xD81954", Offset = "0xD81954", VA = "0xD81954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065B")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x600260F")]
			[Address(RVA = "0xD81E20", Offset = "0xD81E20", VA = "0xD81E20", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xD819FC", Offset = "0xD819FC", VA = "0xD819FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xD81B34", Offset = "0xD81B34", VA = "0xD81B34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xD81568", Offset = "0xD81568", VA = "0xD81568")]
		private void onControleeSet()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xD81B48", Offset = "0xD81B48", VA = "0xD81B48")]
		public void readAmplitude()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xD81D58", Offset = "0xD81D58", VA = "0xD81D58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xD81590", Offset = "0xD81590", VA = "0xD81590")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xD81648", Offset = "0xD81648", VA = "0xD81648")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xD81720", Offset = "0xD81720", VA = "0xD81720")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xD8180C", Offset = "0xD8180C", VA = "0xD8180C")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xD81C2C", Offset = "0xD81C2C", VA = "0xD81C2C")]
		private float snappedPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xD81E60", Offset = "0xD81E60", VA = "0xD81E60", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xD81E7C", Offset = "0xD81E7C", VA = "0xD81E7C", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xD81E90", Offset = "0xD81E90", VA = "0xD81E90", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xD81EAC", Offset = "0xD81EAC", VA = "0xD81EAC", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xD81EC0", Offset = "0xD81EC0", VA = "0xD81EC0", Slot = "9")]
		private void UIgak.IDraggable.updateRotation(Vector3 totalDiff, Vector3 deltaDiff)
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xD81C60", Offset = "0xD81C60", VA = "0xD81C60")]
		private void notifyAmplitudeChange()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xD82138", Offset = "0xD82138", VA = "0xD82138")]
		public void onChangedExternally()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xD8206C", Offset = "0xD8206C", VA = "0xD8206C")]
		private void onTick()
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xD82148", Offset = "0xD82148", VA = "0xD82148")]
		public ToggleSwitch()
		{
		}
	}
	[Token(Token = "0x200066E")]
	public struct TouchEventData
	{
		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RaycastHit currentRaycast;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ITouchable pointerEnter;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pressPosition;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public RaycastHit pressRaycast;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ITouchable pointerPress;
	}
	[Token(Token = "0x200066F")]
	[RequireComponent(typeof(Collider))]
	public class TouchItem : MonoBehaviour, ITouchable, ITransitionsGroupMember
	{
		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISoundPlayer.SoundId hoverSound;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UISoundPlayer.SoundId unhoverSound;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId tapSound;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent highlight;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent unhighlight;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent grab;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent ungrab;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent tap;

		[Token(Token = "0x4002518")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _disabledByPopUp;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _disabledByGroup;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIItemTransitions _transitions;

		[NonSerialized]
		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool dontDisableByPopups;

		[Token(Token = "0x1700065C")]
		private bool highlighted
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0xD822D0", Offset = "0xD822D0", VA = "0xD822D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700065D")]
		private bool grabbed
		{
			[Token(Token = "0x6002621")]
			[Address(RVA = "0xD82584", Offset = "0xD82584", VA = "0xD82584")]
			set
			{
			}
		}

		[Token(Token = "0x1700065E")]
		private bool disabledByPopUp
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0xD82698", Offset = "0xD82698", VA = "0xD82698")]
			set
			{
			}
		}

		[Token(Token = "0x1700065F")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0xD82BB0", Offset = "0xD82BB0", VA = "0xD82BB0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action ITouchableOnPointerDown
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0xD82198", Offset = "0xD82198", VA = "0xD82198")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600261F")]
			[Address(RVA = "0xD82234", Offset = "0xD82234", VA = "0xD82234")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xD826B8", Offset = "0xD826B8", VA = "0xD826B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xD82830", Offset = "0xD82830", VA = "0xD82830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xD829FC", Offset = "0xD829FC", VA = "0xD829FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xD822F4", Offset = "0xD822F4", VA = "0xD822F4")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xD8243C", Offset = "0xD8243C", VA = "0xD8243C")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xD825A8", Offset = "0xD825A8", VA = "0xD825A8")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xD82620", Offset = "0xD82620", VA = "0xD82620")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xD826B0", Offset = "0xD826B0", VA = "0xD826B0")]
		private void onDisabledByPopUp()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xD826B4", Offset = "0xD826B4", VA = "0xD826B4")]
		private void onUndisabledByPopUp()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xD82C7C", Offset = "0xD82C7C", VA = "0xD82C7C", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xD82C98", Offset = "0xD82C98", VA = "0xD82C98", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xD82CAC", Offset = "0xD82CAC", VA = "0xD82CAC", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xD82E40", Offset = "0xD82E40", VA = "0xD82E40", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xD82EE8", Offset = "0xD82EE8", VA = "0xD82EE8")]
		private void onTapped()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xD8294C", Offset = "0xD8294C", VA = "0xD8294C")]
		private void updatePopUpState()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xD830D4", Offset = "0xD830D4", VA = "0xD830D4")]
		private void onPopUpPopped(Transform popUpRoot)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xD83138", Offset = "0xD83138", VA = "0xD83138")]
		private void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xD83148", Offset = "0xD83148", VA = "0xD83148", Slot = "9")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xD83158", Offset = "0xD83158", VA = "0xD83158")]
		public TouchItem()
		{
		}
	}
	[Token(Token = "0x2000670")]
	[RequireComponent(typeof(UIItemTransitions))]
	public class BindUITransitions : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000671")]
		public class States : UIItemTransitionStates<bool>
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xD8363C", Offset = "0xD8363C", VA = "0xD8363C")]
			public States()
			{
			}
		}

		[Token(Token = "0x2000672")]
		public enum TargetAttribute
		{
			[Token(Token = "0x4002525")]
			Visible,
			[Token(Token = "0x4002526")]
			Enabled,
			[Token(Token = "0x4002527")]
			Selected,
			[Token(Token = "0x4002528")]
			Highlit
		}

		[Token(Token = "0x2000673")]
		[CompilerGenerated]
		private sealed class <updateTargetsWithOneFrameDelayCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BindUITransitions <>4__this;

			[Token(Token = "0x17000660")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002643")]
				[Address(RVA = "0xD836D4", Offset = "0xD836D4", VA = "0xD836D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000661")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002645")]
				[Address(RVA = "0xD8371C", Offset = "0xD8371C", VA = "0xD8371C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xD835F4", Offset = "0xD835F4", VA = "0xD835F4")]
			[DebuggerHidden]
			public <updateTargetsWithOneFrameDelayCo>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xD83684", Offset = "0xD83684", VA = "0xD83684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xD83688", Offset = "0xD83688", VA = "0xD83688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xD836DC", Offset = "0xD836DC", VA = "0xD836DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States states;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIItemTransitions[] targets;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetAttribute targetAttribute;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool oneFrameDelay;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIItemTransitions _transitions;

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xD83168", Offset = "0xD83168", VA = "0xD83168")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xD831C0", Offset = "0xD831C0", VA = "0xD831C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xD83348", Offset = "0xD83348", VA = "0xD83348")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xD8346C", Offset = "0xD8346C", VA = "0xD8346C")]
		private void onSourceStateChanged()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xD83250", Offset = "0xD83250", VA = "0xD83250")]
		private void updateTargets()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xD83470", Offset = "0xD83470", VA = "0xD83470")]
		[IteratorStateMachine(typeof(<updateTargetsWithOneFrameDelayCo>d__12))]
		private IEnumerator<float> updateTargetsWithOneFrameDelayCo()
		{
			return null;
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xD834E4", Offset = "0xD834E4", VA = "0xD834E4")]
		private void updateTargetsNow()
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xD83634", Offset = "0xD83634", VA = "0xD83634")]
		public BindUITransitions()
		{
		}
	}
	[Token(Token = "0x2000674")]
	[RequireComponent(typeof(UIItemTransitions))]
	public class BindUITransitionsAfter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000675")]
		public enum DelayTendency
		{
			[Token(Token = "0x4002537")]
			In,
			[Token(Token = "0x4002538")]
			Out,
			[Token(Token = "0x4002539")]
			Both
		}

		[Token(Token = "0x2000676")]
		[CompilerGenerated]
		private sealed class <UpdateTargetsAfterDelayCo>d__21 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400253A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400253B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BindUITransitionsAfter <>4__this;

			[Token(Token = "0x17000662")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002656")]
				[Address(RVA = "0xD840C8", Offset = "0xD840C8", VA = "0xD840C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000663")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002658")]
				[Address(RVA = "0xD84110", Offset = "0xD84110", VA = "0xD84110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002653")]
			[Address(RVA = "0xD83FD0", Offset = "0xD83FD0", VA = "0xD83FD0")]
			[DebuggerHidden]
			public <UpdateTargetsAfterDelayCo>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xD84010", Offset = "0xD84010", VA = "0xD84010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0xD84014", Offset = "0xD84014", VA = "0xD84014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xD840D0", Offset = "0xD840D0", VA = "0xD840D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool invertWhileGrabbing;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DelayTendency delayTendency;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Delay in seconds to bind state after")]
		public float delay;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BindUITransitions.States states;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIItemTransitions[] targets;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BindUITransitions.TargetAttribute targetAttribute;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIItemTransitions _transitions;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchItem _touchItem;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isActive;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private CoroutineHandle updateTargetsAfterDelayCo;

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xD83778", Offset = "0xD83778", VA = "0xD83778")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xD83808", Offset = "0xD83808", VA = "0xD83808")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xD83AD8", Offset = "0xD83AD8", VA = "0xD83AD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xD83ADC", Offset = "0xD83ADC", VA = "0xD83ADC")]
		private void UnReggister()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xD83938", Offset = "0xD83938", VA = "0xD83938")]
		private void Reggister()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xD83C7C", Offset = "0xD83C7C", VA = "0xD83C7C")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xD83D40", Offset = "0xD83D40", VA = "0xD83D40")]
		private void OnUnGrab()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xD83D54", Offset = "0xD83D54", VA = "0xD83D54")]
		private void onSourceStateChanged()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xD83C90", Offset = "0xD83C90", VA = "0xD83C90")]
		private void updateTargetByTendency(bool flipActivation = false)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xD83820", Offset = "0xD83820", VA = "0xD83820")]
		private void UpdateTargets()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xD83F5C", Offset = "0xD83F5C", VA = "0xD83F5C")]
		[IteratorStateMachine(typeof(<UpdateTargetsAfterDelayCo>d__21))]
		private IEnumerator<float> UpdateTargetsAfterDelayCo()
		{
			return null;
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xD83D5C", Offset = "0xD83D5C", VA = "0xD83D5C")]
		private void UpdateTargetsNow()
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xD83FF8", Offset = "0xD83FF8", VA = "0xD83FF8")]
		public BindUITransitionsAfter()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public interface ITransitionsGroupMember
	{
		[Token(Token = "0x6002659")]
		void onGroupVisiblityChanged(bool groupVisible);
	}
	[Token(Token = "0x2000678")]
	public class SmoothTransition2D
	{
		[Token(Token = "0x2000679")]
		public enum State
		{
			[Token(Token = "0x4002548")]
			NotNearlyDone,
			[Token(Token = "0x4002549")]
			NearlyDone,
			[Token(Token = "0x400254A")]
			Done
		}

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UIItemTransitionsConfig _config;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIItemTransition _parent;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UIItemState _desiredItemState;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 _desiredT;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _currentT;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _smoothTime;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 _currentVelocity;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _startTime;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timeout;

		[Token(Token = "0x17000664")]
		public bool notNearlyDone
		{
			[Token(Token = "0x600265A")]
			[Address(RVA = "0xD8416C", Offset = "0xD8416C", VA = "0xD8416C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000665")]
		public bool nearlyDone
		{
			[Token(Token = "0x600265B")]
			[Address(RVA = "0xD8417C", Offset = "0xD8417C", VA = "0xD8417C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000666")]
		public bool done
		{
			[Token(Token = "0x600265C")]
			[Address(RVA = "0xD8418C", Offset = "0xD8418C", VA = "0xD8418C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xD8419C", Offset = "0xD8419C", VA = "0xD8419C")]
		public SmoothTransition2D(UIItemTransitionsConfig config, UIItemTransition parent)
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xD841EC", Offset = "0xD841EC", VA = "0xD841EC")]
		public void start(UIItemState desiredState, float timeout = 0f)
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xD84334", Offset = "0xD84334", VA = "0xD84334")]
		public void updateInstantly()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xD84394", Offset = "0xD84394", VA = "0xD84394")]
		public float update()
		{
			return default(float);
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xD84654", Offset = "0xD84654", VA = "0xD84654")]
		private void finishNow()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public class UIItemActivateTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200067B")]
		public class ActiveStates : UIItemTransitionStates<bool>
		{
			[Token(Token = "0x6002668")]
			[Address(RVA = "0xD848D8", Offset = "0xD848D8", VA = "0xD848D8")]
			public ActiveStates()
			{
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xD846D0", Offset = "0xD846D0", VA = "0xD846D0")]
			public ActiveStates(bool activeState)
			{
			}
		}

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ActiveStates activeStates;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _gameObject;

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xD84668", Offset = "0xD84668", VA = "0xD84668")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xD84728", Offset = "0xD84728", VA = "0xD84728", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xD847F8", Offset = "0xD847F8", VA = "0xD847F8", Slot = "5")]
		public override void start(UIItemState desiredState)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xD8483C", Offset = "0xD8483C", VA = "0xD8483C", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xD848B4", Offset = "0xD848B4", VA = "0xD848B4", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xD848B8", Offset = "0xD848B8", VA = "0xD848B8")]
		public UIItemActivateTransition()
		{
		}
	}
	[Token(Token = "0x200067C")]
	public class UIItemColorTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200067D")]
		public class Colors : UIItemTransitionStates<Color>
		{
			[Token(Token = "0x600266F")]
			[Address(RVA = "0xD850FC", Offset = "0xD850FC", VA = "0xD850FC")]
			public Colors()
			{
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xD84A10", Offset = "0xD84A10", VA = "0xD84A10")]
			public Colors(Color color)
			{
			}
		}

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Colors colors;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObjectColorerEx _colorer;

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xD84920", Offset = "0xD84920", VA = "0xD84920")]
		private void Reset()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xD84A88", Offset = "0xD84A88", VA = "0xD84A88", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xD84EF0", Offset = "0xD84EF0", VA = "0xD84EF0", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xD84FF4", Offset = "0xD84FF4", VA = "0xD84FF4", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xD850EC", Offset = "0xD850EC", VA = "0xD850EC")]
		public UIItemColorTransition()
		{
		}
	}
	[Token(Token = "0x200067E")]
	public class UIItemLightTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200067F")]
		public class Intensities : UIItemTransitionStates<float>
		{
			[Token(Token = "0x6002676")]
			[Address(RVA = "0xD85440", Offset = "0xD85440", VA = "0xD85440")]
			public Intensities()
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xD85240", Offset = "0xD85240", VA = "0xD85240")]
			public Intensities(float intensity)
			{
			}
		}

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Intensities intensities;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light _light;

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xD85144", Offset = "0xD85144", VA = "0xD85144")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xD85298", Offset = "0xD85298", VA = "0xD85298", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xD85310", Offset = "0xD85310", VA = "0xD85310", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xD85380", Offset = "0xD85380", VA = "0xD85380", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xD85430", Offset = "0xD85430", VA = "0xD85430")]
		public UIItemLightTransition()
		{
		}
	}
	[Token(Token = "0x2000680")]
	public class UIItemMaterialTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000681")]
		public class Materials : UIItemTransitionStates<Material>
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0xD85C9C", Offset = "0xD85C9C", VA = "0xD85C9C")]
			public Materials()
			{
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xD855E0", Offset = "0xD855E0", VA = "0xD855E0")]
			public Materials(Material material)
			{
			}
		}

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Materials materials;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer _renderer;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystemRenderer _particleSystemRenderer;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaskableGraphic _maskable;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _maskableAnimatingMaterial;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocalizeEx _localizeEx;

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xD85488", Offset = "0xD85488", VA = "0xD85488")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xD84C18", Offset = "0xD84C18", VA = "0xD84C18")]
		public void replaceMaterialsWithPPO()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xD8575C", Offset = "0xD8575C", VA = "0xD8575C", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xD85874", Offset = "0xD85874", VA = "0xD85874", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xD8593C", Offset = "0xD8593C", VA = "0xD8593C", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xD85638", Offset = "0xD85638", VA = "0xD85638")]
		private void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xD85C8C", Offset = "0xD85C8C", VA = "0xD85C8C")]
		public UIItemMaterialTransition()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class UIItemPositionTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000683")]
		public class Positions : UIItemTransitionStates<Vector3>
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0xD85FCC", Offset = "0xD85FCC", VA = "0xD85FCC")]
			public Positions()
			{
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0xD85D54", Offset = "0xD85D54", VA = "0xD85D54")]
			public Positions(Vector3 offset)
			{
			}
		}

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Positions positions;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _origPosition;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _currentOffset;

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xD85CE4", Offset = "0xD85CE4", VA = "0xD85CE4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xD85DC4", Offset = "0xD85DC4", VA = "0xD85DC4", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xD85E28", Offset = "0xD85E28", VA = "0xD85E28", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xD85EB4", Offset = "0xD85EB4", VA = "0xD85EB4", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xD85F88", Offset = "0xD85F88", VA = "0xD85F88", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xD85FBC", Offset = "0xD85FBC", VA = "0xD85FBC")]
		public UIItemPositionTransition()
		{
		}
	}
	[Token(Token = "0x2000684")]
	public class UIItemRotationTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000685")]
		public class Rotations : UIItemTransitionStates<Vector3>
		{
			[Token(Token = "0x600268F")]
			[Address(RVA = "0xD863EC", Offset = "0xD863EC", VA = "0xD863EC")]
			public Rotations()
			{
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xD86084", Offset = "0xD86084", VA = "0xD86084")]
			public Rotations(Vector3 euler)
			{
			}
		}

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rotations rotations;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion _origRotation;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _currentRotation;

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xD86014", Offset = "0xD86014", VA = "0xD86014")]
		private void Reset()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xD860F4", Offset = "0xD860F4", VA = "0xD860F4", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xD86158", Offset = "0xD86158", VA = "0xD86158", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xD86264", Offset = "0xD86264", VA = "0xD86264", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xD863B0", Offset = "0xD863B0", VA = "0xD863B0", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xD863DC", Offset = "0xD863DC", VA = "0xD863DC")]
		public UIItemRotationTransition()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class UIItemScaleTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000687")]
		public class Scales : UIItemTransitionStates<float>
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0xD866D8", Offset = "0xD866D8", VA = "0xD866D8")]
			public Scales()
			{
			}

			[Token(Token = "0x6002698")]
			[Address(RVA = "0xD8649C", Offset = "0xD8649C", VA = "0xD8649C")]
			public Scales(float scale)
			{
			}
		}

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Scales scales;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _origScale;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentScale;

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xD86434", Offset = "0xD86434", VA = "0xD86434")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xD864F4", Offset = "0xD864F4", VA = "0xD864F4", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xD86558", Offset = "0xD86558", VA = "0xD86558", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xD865E4", Offset = "0xD865E4", VA = "0xD865E4", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xD8669C", Offset = "0xD8669C", VA = "0xD8669C", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xD866C8", Offset = "0xD866C8", VA = "0xD866C8")]
		public UIItemScaleTransition()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class UIItemShaderFloatTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000689")]
		public class Values : UIItemTransitionStates<float>
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xD871E4", Offset = "0xD871E4", VA = "0xD871E4")]
			public Values()
			{
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xD8722C", Offset = "0xD8722C", VA = "0xD8722C")]
			public Values(float value)
			{
			}
		}

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string propertyName;

		[NonSerialized]
		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _oldPropertyName;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Values values;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _propertyId;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer _renderer;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _image;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _origSharedMaterial;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _material;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _shouldDestroyMaterial;

		[Token(Token = "0x17000667")]
		public Material material
		{
			[Token(Token = "0x6002699")]
			[Address(RVA = "0xD86720", Offset = "0xD86720", VA = "0xD86720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xD84E88", Offset = "0xD84E88", VA = "0xD84E88")]
		public void replaceMaterialsWithPPO()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xD86728", Offset = "0xD86728", VA = "0xD86728", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xD867F8", Offset = "0xD867F8", VA = "0xD867F8")]
		private void initRenderer(bool debug)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xD86A7C", Offset = "0xD86A7C", VA = "0xD86A7C")]
		private void initImage(bool debug)
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xD86D18", Offset = "0xD86D18", VA = "0xD86D18")]
		private Material getMaterialFromSibling()
		{
			return null;
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xD86E28", Offset = "0xD86E28", VA = "0xD86E28", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xD86F68", Offset = "0xD86F68", VA = "0xD86F68", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xD8706C", Offset = "0xD8706C", VA = "0xD8706C", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xD871D0", Offset = "0xD871D0", VA = "0xD871D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xD87074", Offset = "0xD87074", VA = "0xD87074")]
		private void restoreMaterial()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xD871D4", Offset = "0xD871D4", VA = "0xD871D4")]
		public UIItemShaderFloatTransition()
		{
		}
	}
	[Token(Token = "0x200068A")]
	public enum UIItemState
	{
		[Token(Token = "0x400256D")]
		Hidden,
		[Token(Token = "0x400256E")]
		Idle,
		[Token(Token = "0x400256F")]
		Highlit,
		[Token(Token = "0x4002570")]
		Selected,
		[Token(Token = "0x4002571")]
		DisabledIdle,
		[Token(Token = "0x4002572")]
		DisabledHighlit,
		[Token(Token = "0x4002573")]
		SelectedAndHighlit
	}
	[Token(Token = "0x200068B")]
	public class UIItemTransformAbsoluteTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200068C")]
		public class Matrix
		{
			[Token(Token = "0x4002576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4002577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotation;

			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 scale;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xD87538", Offset = "0xD87538", VA = "0xD87538")]
			public Matrix()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200068D")]
		public class Matrixes : UIItemTransitionStates<Matrix>
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xD875E0", Offset = "0xD875E0", VA = "0xD875E0")]
			public Matrixes()
			{
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xD87628", Offset = "0xD87628", VA = "0xD87628")]
			public Matrixes(Matrix matrix)
			{
			}
		}

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Matrixes matrixes;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xD87284", Offset = "0xD87284", VA = "0xD87284")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xD87288", Offset = "0xD87288", VA = "0xD87288", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xD872B8", Offset = "0xD872B8", VA = "0xD872B8", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xD87368", Offset = "0xD87368", VA = "0xD87368", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xD87528", Offset = "0xD87528", VA = "0xD87528")]
		public UIItemTransformAbsoluteTransition()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public abstract class UIItemTransition : MonoBehaviour
	{
		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speedFactor;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected SmoothTransition2D _transition;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UIItemState _desiredItemState;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _initialized;

		[Token(Token = "0x17000668")]
		public bool initialized
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xD87680", Offset = "0xD87680", VA = "0xD87680")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000669")]
		public bool notNearlyDone
		{
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xD87688", Offset = "0xD87688", VA = "0xD87688")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066A")]
		public bool nearlyDone
		{
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xD876AC", Offset = "0xD876AC", VA = "0xD876AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066B")]
		public bool done
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xD876D0", Offset = "0xD876D0", VA = "0xD876D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xD84758", Offset = "0xD84758", VA = "0xD84758", Slot = "4")]
		public virtual void init(UIItemTransitionsConfig config, bool debug = false)
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xD84818", Offset = "0xD84818", VA = "0xD84818", Slot = "5")]
		public virtual void start(UIItemState desiredState)
		{
		}

		[Token(Token = "0x60026B5")]
		public abstract void updateInstantly();

		[Token(Token = "0x60026B6")]
		public abstract void update();

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xD876F4", Offset = "0xD876F4", VA = "0xD876F4", Slot = "8")]
		public virtual void startDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xD87704", Offset = "0xD87704", VA = "0xD87704", Slot = "9")]
		public virtual void updateDebug(UIItemTransitionsConfig config, UIItemState desiredState)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xD85FB4", Offset = "0xD85FB4", VA = "0xD85FB4", Slot = "10")]
		public virtual void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xD848C8", Offset = "0xD848C8", VA = "0xD848C8")]
		protected UIItemTransition()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class UIItemTransitions : MonoBehaviour, ITransitionsGroupMember
	{
		[Token(Token = "0x2000690")]
		public enum AutoSet
		{
			[Token(Token = "0x4002591")]
			LeaveAlone,
			[Token(Token = "0x4002592")]
			Yes,
			[Token(Token = "0x4002593")]
			No
		}

		[Serializable]
		[Token(Token = "0x2000691")]
		public struct Debugg
		{
			[Token(Token = "0x4002594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Test states in edit mode (destructive)")]
			public bool enable;

			[NonSerialized]
			[Token(Token = "0x4002595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool wasEnabled;

			[Token(Token = "0x4002596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("State to test in edit mode (destructive)")]
			public UIItemState state;

			[Token(Token = "0x4002597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Debug flow in runtime (safe)")]
			public bool printFlow;
		}

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIItemTransitionsConfig config;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoSet startVisible;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AutoSet startDisabled;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] additionalTransitionTrees;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Debugg debug;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disabledByPopups;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _initialized;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _visible;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		private bool _disabled;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _pointerOver;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _selected;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _groupVisible;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UIItemState _desiredState;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _transitioning;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UIItemTransition[] _transitions;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _allDone;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _allNearlyDone;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _disabledByPopUp;

		[Token(Token = "0x1700066C")]
		public bool visible
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xD87740", Offset = "0xD87740", VA = "0xD87740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xD8361C", Offset = "0xD8361C", VA = "0xD8361C")]
			set
			{
			}
		}

		[Token(Token = "0x1700066D")]
		public bool disabled
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xD877D4", Offset = "0xD877D4", VA = "0xD877D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xD83628", Offset = "0xD83628", VA = "0xD83628")]
			set
			{
			}
		}

		[Token(Token = "0x1700066E")]
		public bool pointerOver
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xD877DC", Offset = "0xD877DC", VA = "0xD877DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xD7D724", Offset = "0xD7D724", VA = "0xD7D724")]
			set
			{
			}
		}

		[Token(Token = "0x1700066F")]
		public bool selected
		{
			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xD7D730", Offset = "0xD7D730", VA = "0xD7D730")]
			set
			{
			}
		}

		[Token(Token = "0x17000670")]
		public UIItemState desiredState
		{
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xD877E4", Offset = "0xD877E4", VA = "0xD877E4")]
			get
			{
				return default(UIItemState);
			}
		}

		[Token(Token = "0x17000671")]
		public bool transitioning
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xD877EC", Offset = "0xD877EC", VA = "0xD877EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000672")]
		public bool nearlyDone
		{
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xD877F8", Offset = "0xD877F8", VA = "0xD877F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000673")]
		public bool done
		{
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xD87818", Offset = "0xD87818", VA = "0xD87818")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000674")]
		private bool disabledByPopUp
		{
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xD87828", Offset = "0xD87828", VA = "0xD87828")]
			set
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event Action desiredStateChanged
		{
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xD81000", Offset = "0xD81000", VA = "0xD81000")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xD833D0", Offset = "0xD833D0", VA = "0xD833D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xD8784C", Offset = "0xD8784C", VA = "0xD8784C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xD87850", Offset = "0xD87850", VA = "0xD87850")]
		private void initialize()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xD87958", Offset = "0xD87958", VA = "0xD87958")]
		private UIItemTransition[] findAllTransitions()
		{
			return null;
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xD87BEC", Offset = "0xD87BEC", VA = "0xD87BEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xD87F30", Offset = "0xD87F30", VA = "0xD87F30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xD87D34", Offset = "0xD87D34", VA = "0xD87D34")]
		private void autoSetBool(ref bool b, AutoSet autoSetMode)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xD87E0C", Offset = "0xD87E0C", VA = "0xD87E0C")]
		private void updateStateInstantly()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xD88040", Offset = "0xD88040", VA = "0xD88040")]
		public void showInstantly()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xD88060", Offset = "0xD88060", VA = "0xD88060")]
		public void hideInstantly()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xD87748", Offset = "0xD87748", VA = "0xD87748")]
		private void updateDesiredState()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xD8807C", Offset = "0xD8807C", VA = "0xD8807C")]
		private void setDesiredState(UIItemState desiredState)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xD88194", Offset = "0xD88194", VA = "0xD88194")]
		private void startTransitions()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xD88204", Offset = "0xD88204", VA = "0xD88204")]
		private void Update()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xD88298", Offset = "0xD88298", VA = "0xD88298")]
		private void updateObjects()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xD87E7C", Offset = "0xD87E7C", VA = "0xD87E7C")]
		private void updatePopUpState()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xD88344", Offset = "0xD88344", VA = "0xD88344")]
		private void onPopUpPopped(Transform popUpRoot)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xD883AC", Offset = "0xD883AC", VA = "0xD883AC")]
		private void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xD87844", Offset = "0xD87844", VA = "0xD87844")]
		private void onDisabledByPopUp()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xD87848", Offset = "0xD87848", VA = "0xD87848")]
		private void onUndisabledByPopUp()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xD883C0", Offset = "0xD883C0", VA = "0xD883C0", Slot = "4")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xD883CC", Offset = "0xD883CC", VA = "0xD883CC")]
		public UIItemTransitions()
		{
		}
	}
	[Token(Token = "0x2000692")]
	[CreateAssetMenu(menuName = "Data/UI Item Transitions Configuration", fileName = "UI Item Transitions Configuration")]
	public class UIItemTransitionsConfig : UpdatableData
	{
		[Serializable]
		[Token(Token = "0x2000693")]
		public struct SmoothTimes
		{
			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 hidden;

			[Token(Token = "0x40025A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 idle;

			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 highlit;

			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 selected;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 disabledIdle;

			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 disabledHighlit;

			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 selectedAndHighlit;

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xD89434", Offset = "0xD89434", VA = "0xD89434")]
			public Vector2 getStateT(UIItemState state)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothTimes smoothTimes;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float minSmoothTime;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hideSpeedFactor;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxSpeed;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float nearlyDoneEpsilon;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float doneEpsilon;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float timeout;

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xD893EC", Offset = "0xD893EC", VA = "0xD893EC")]
		public UIItemTransitionsConfig()
		{
		}
	}
	[Token(Token = "0x2000694")]
	public class UIItemTransitionsGroup : MonoBehaviour, ITransitionsGroupMember
	{
		[Token(Token = "0x2000695")]
		public enum AutoSet
		{
			[Token(Token = "0x40025AC")]
			LeaveAlone,
			[Token(Token = "0x40025AD")]
			Yes,
			[Token(Token = "0x40025AE")]
			No
		}

		[Serializable]
		[Token(Token = "0x2000696")]
		public struct Debugg
		{
			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool printTargets;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool printFlow;
		}

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutoSet startVisible;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Debugg debug;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool _visible;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool _groupVisible;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ITransitionsGroupMember> _children;

		[Token(Token = "0x17000675")]
		public bool visible
		{
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0xD89508", Offset = "0xD89508", VA = "0xD89508")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xD89510", Offset = "0xD89510", VA = "0xD89510")]
			set
			{
			}
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xD897B0", Offset = "0xD897B0", VA = "0xD897B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xD8982C", Offset = "0xD8982C", VA = "0xD8982C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xD89850", Offset = "0xD89850", VA = "0xD89850")]
		private void detectChildren()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xD89B40", Offset = "0xD89B40", VA = "0xD89B40")]
		private void autoSetBool(ref bool b, AutoSet autoSetMode)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xD8952C", Offset = "0xD8952C", VA = "0xD8952C")]
		private void onVisibleChanged()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xD89C18", Offset = "0xD89C18", VA = "0xD89C18", Slot = "4")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xD89C30", Offset = "0xD89C30", VA = "0xD89C30")]
		public UIItemTransitionsGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000697")]
	public class UIItemTransitionStates<T>
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T hidden;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T idle;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T highlit;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T selected;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T disabledIdle;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T disabledHighlit;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T selectedAndHighlit;

		[Token(Token = "0x60026E9")]
		public T getByState(UIItemState state)
		{
			return (T)null;
		}

		[Token(Token = "0x60026EA")]
		public UIItemTransitionStates()
		{
		}

		[Token(Token = "0x60026EB")]
		public UIItemTransitionStates(T value)
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class UiController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000699")]
		public struct BackButton
		{
			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material p1AvailableMaterial;

			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material p1UnavailableMaterial;

			[Token(Token = "0x40025D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material p2AvailableMaterial;

			[Token(Token = "0x40025D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material p2UnavailableMaterial;
		}

		[Token(Token = "0x200069A")]
		public enum LengthMode
		{
			[Token(Token = "0x40025D4")]
			StartRoom,
			[Token(Token = "0x40025D5")]
			MainMenu,
			[Token(Token = "0x40025D6")]
			Area,
			[Token(Token = "0x40025D7")]
			PlayerProfile,
			[Token(Token = "0x40025D8")]
			Tutorial,
			[Token(Token = "0x40025D9")]
			LevelEditor
		}

		[Token(Token = "0x200069B")]
		public delegate void OnBack();

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackButton backButton;

		[Token(Token = "0x40025BA")]
		private const int maxHits = 20;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _length;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private LengthMode _lengthMode;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ListStack<OnBack> _onBackHandlers;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerID _myPlayerId;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UiController inst;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit[] _hits;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _position;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private RaycastHit _currentRaycast;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ITouchable _enteredTouchable;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _pressPosition;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RaycastHit _pressRaycast;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _pressTime;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _lastPressDuration;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ITouchable _pressedTouchable;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IDraggable _pressedDraggable;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion _firstPressedRotation;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion _lastPressedRotation;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ITouchable _capturingTouchable;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RacketPointer _pointer;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _inTouchablePointerUp;

		[Token(Token = "0x17000676")]
		public LengthMode lengthMode
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xD89C40", Offset = "0xD89C40", VA = "0xD89C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000677")]
		public PlayerID myPlayerId
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xD89DCC", Offset = "0xD89DCC", VA = "0xD89DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000678")]
		public RaycastHit CurrentRaycast
		{
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xD89ED0", Offset = "0xD89ED0", VA = "0xD89ED0")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x17000679")]
		private ITouchable enteredTouchable
		{
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xD89EE8", Offset = "0xD89EE8", VA = "0xD89EE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700067A")]
		public float lastPressDuration
		{
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xD8A464", Offset = "0xD8A464", VA = "0xD8A464")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700067B")]
		private ITouchable pressedTouchable
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xD8A46C", Offset = "0xD8A46C", VA = "0xD8A46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700067C")]
		private IDraggable pressedDraggable
		{
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xD8A9E0", Offset = "0xD8A9E0", VA = "0xD8A9E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		private ITouchable capturingTouchable
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xD8AA88", Offset = "0xD8AA88", VA = "0xD8AA88")]
			set
			{
			}
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xD89C58", Offset = "0xD89C58", VA = "0xD89C58")]
		private void onLengthModeChanged()
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xD8AAAC", Offset = "0xD8AAAC", VA = "0xD8AAAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xD8AB9C", Offset = "0xD8AB9C", VA = "0xD8AB9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xD8AD64", Offset = "0xD8AD64", VA = "0xD8AD64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xD8AF70", Offset = "0xD8AF70", VA = "0xD8AF70")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xD8B2B8", Offset = "0xD8B2B8", VA = "0xD8B2B8")]
		private bool raycast(Ray ray, out RaycastHit hitInfo, float maxDistance = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xD8B4EC", Offset = "0xD8B4EC", VA = "0xD8B4EC")]
		private void updateDrag(Ray ray)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xD8B874", Offset = "0xD8B874", VA = "0xD8B874")]
		private void onTriggerClicked()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xD8B87C", Offset = "0xD8B87C", VA = "0xD8B87C")]
		private void onTriggerUnclicked()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xD8B884", Offset = "0xD8B884", VA = "0xD8B884")]
		public void handleBack(OnBack onBackHandler)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xD8B8DC", Offset = "0xD8B8DC", VA = "0xD8B8DC")]
		public void unhandleBack(OnBack onBackHandler)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xD89DE0", Offset = "0xD89DE0", VA = "0xD89DE0")]
		private void onMyPlayerIdChanged()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xD8AD60", Offset = "0xD8AD60", VA = "0xD8AD60")]
		private void updateBackMaterial()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xD89DE4", Offset = "0xD89DE4", VA = "0xD89DE4")]
		private void updateOpponentBackMaterial()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xD8BA24", Offset = "0xD8BA24", VA = "0xD8BA24")]
		private void onBackClicked()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xD8A1FC", Offset = "0xD8A1FC", VA = "0xD8A1FC")]
		private void onTouchableEnter()
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xD89F48", Offset = "0xD89F48", VA = "0xD89F48")]
		private void onTouchableExit()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xD8A6CC", Offset = "0xD8A6CC", VA = "0xD8A6CC")]
		private void onTouchablePointerDown()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xD8A4CC", Offset = "0xD8A4CC", VA = "0xD8A4CC")]
		private void onTouchablePointerUp()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xD8AA30", Offset = "0xD8AA30", VA = "0xD8AA30")]
		private void onDraggablePointerDown()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xD8AA2C", Offset = "0xD8AA2C", VA = "0xD8AA2C")]
		private void onDraggablePointerUp()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xD8AAA8", Offset = "0xD8AAA8", VA = "0xD8AAA8")]
		private void onTouchableCapture()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xD8AAA4", Offset = "0xD8AAA4", VA = "0xD8AAA4")]
		private void onTouchableUncapture()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xD8BAB0", Offset = "0xD8BAB0", VA = "0xD8BAB0")]
		private TouchEventData createEventData()
		{
			return default(TouchEventData);
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xD8BB64", Offset = "0xD8BB64", VA = "0xD8BB64")]
		public void onGameOverShown()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xD8BB68", Offset = "0xD8BB68", VA = "0xD8BB68")]
		public void onGameOverHidden()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xD8BB6C", Offset = "0xD8BB6C", VA = "0xD8BB6C")]
		public bool capture(ITouchable touchable)
		{
			return default(bool);
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xD8BC38", Offset = "0xD8BC38", VA = "0xD8BC38")]
		public void releaseCapture(ITouchable touchable)
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xD8BCDC", Offset = "0xD8BCDC", VA = "0xD8BCDC")]
		public UiController()
		{
		}
	}
	[Token(Token = "0x200069C")]
	public class UISoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x200069D")]
		public enum SoundId
		{
			[Token(Token = "0x40025DC")]
			None,
			[Token(Token = "0x40025DD")]
			Hover,
			[Token(Token = "0x40025DE")]
			Select,
			[Token(Token = "0x40025DF")]
			SelectOk,
			[Token(Token = "0x40025E0")]
			SelectDisabled,
			[Token(Token = "0x40025E1")]
			PlayAgain,
			[Token(Token = "0x40025E2")]
			Back,
			[Token(Token = "0x40025E3")]
			LeSelect
		}

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Play sound at far distance (configurable by 'Far Sound Distance')")]
		public bool distant;

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xD8BE1C", Offset = "0xD8BE1C", VA = "0xD8BE1C")]
		public void playHover()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xD8C1D0", Offset = "0xD8C1D0", VA = "0xD8C1D0")]
		public void playSelect()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xD8C1D8", Offset = "0xD8C1D8", VA = "0xD8C1D8")]
		public void playSelectOk()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xD8C1E0", Offset = "0xD8C1E0", VA = "0xD8C1E0")]
		public void playSelectDisabled()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xD8C1E8", Offset = "0xD8C1E8", VA = "0xD8C1E8")]
		public void playPlayAgain()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xD8C1F0", Offset = "0xD8C1F0", VA = "0xD8C1F0")]
		public void playBack()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xD8BE24", Offset = "0xD8BE24", VA = "0xD8BE24")]
		public void play(SoundId soundId)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xD8C1F8", Offset = "0xD8C1F8", VA = "0xD8C1F8")]
		private AudioManager.SoundEffect idToSfx(SoundId soundId)
		{
			return null;
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xD8C404", Offset = "0xD8C404", VA = "0xD8C404")]
		public UISoundPlayer()
		{
		}
	}
}
namespace UI
{
	[Token(Token = "0x200069E")]
	[RequireComponent(typeof(UnavailableWhenOffline))]
	public class UnavailableWhenLobbyistDisconnected : MonoBehaviour
	{
		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnavailableWhenOffline _unavailableWhenOffline;

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xD8C40C", Offset = "0xD8C40C", VA = "0xD8C40C")]
		private void Start()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xD8C4D8", Offset = "0xD8C4D8", VA = "0xD8C4D8")]
		private void OnServerConnectionStateChanged(bool connected)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xD8C50C", Offset = "0xD8C50C", VA = "0xD8C50C")]
		public UnavailableWhenLobbyistDisconnected()
		{
		}
	}
}
namespace Native
{
	[Token(Token = "0x200069F")]
	public class SelfDisableOnNativePlatform : MonoBehaviour
	{
		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NativePlatformType platformType;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool tryDestroySelf;

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xD8C514", Offset = "0xD8C514", VA = "0xD8C514")]
		private void SelfDisable()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xD8C760", Offset = "0xD8C760", VA = "0xD8C760")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xD8C764", Offset = "0xD8C764", VA = "0xD8C764")]
		private void Start()
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xD8C768", Offset = "0xD8C768", VA = "0xD8C768")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xD8C76C", Offset = "0xD8C76C", VA = "0xD8C76C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xD8C770", Offset = "0xD8C770", VA = "0xD8C770")]
		public SelfDisableOnNativePlatform()
		{
		}
	}
}
namespace Lobbyist
{
	[Token(Token = "0x20006A0")]
	public enum PlatformType : uint
	{
		[Token(Token = "0x40025E8")]
		None,
		[Token(Token = "0x40025E9")]
		Steam,
		[Token(Token = "0x40025EA")]
		OculusHome,
		[Token(Token = "0x40025EB")]
		Viveport,
		[Token(Token = "0x40025EC")]
		Pico,
		[Token(Token = "0x40025ED")]
		NetVios,
		[Token(Token = "0x40025EE")]
		PlayStation,
		[Token(Token = "0x40025EF")]
		Qiyu,
		[Token(Token = "0x40025F0")]
		ChinaMobile
	}
	[Token(Token = "0x20006A1")]
	public static class PlatformTypeHelper
	{
		[Token(Token = "0x6002727")]
		[Address(RVA = "0xD8C778", Offset = "0xD8C778", VA = "0xD8C778")]
		public static NativePlatformType PlatformType2NativePlatformType(PlatformType platform)
		{
			return default(NativePlatformType);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xD8C7FC", Offset = "0xD8C7FC", VA = "0xD8C7FC")]
		public static PlatformType NativePlatformType2PlatformType(NativePlatformType platform)
		{
			return default(PlatformType);
		}
	}
	[Token(Token = "0x20006A2")]
	public enum QueueType
	{
		[Token(Token = "0x40025F2")]
		None,
		[Token(Token = "0x40025F3")]
		Ranked,
		[Token(Token = "0x40025F4")]
		Invite,
		[Token(Token = "0x40025F5")]
		PIN
	}
	[Token(Token = "0x20006A3")]
	public class BytesQueue
	{
		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] _buffer;

		[Token(Token = "0x1700067E")]
		public byte[] buffer
		{
			[Token(Token = "0x600272A")]
			[Address(RVA = "0xD8C8F8", Offset = "0xD8C8F8", VA = "0xD8C8F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067F")]
		public int numBytes
		{
			[Token(Token = "0x600272B")]
			[Address(RVA = "0xD8C900", Offset = "0xD8C900", VA = "0xD8C900")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600272C")]
			[Address(RVA = "0xD8C908", Offset = "0xD8C908", VA = "0xD8C908")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000680")]
		public int size
		{
			[Token(Token = "0x600272D")]
			[Address(RVA = "0xD8C910", Offset = "0xD8C910", VA = "0xD8C910")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xD8C880", Offset = "0xD8C880", VA = "0xD8C880")]
		public BytesQueue(int size)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xD8C92C", Offset = "0xD8C92C", VA = "0xD8C92C")]
		public void Consume(int numBytesConsumed)
		{
		}
	}
	[Token(Token = "0x20006A4")]
	public enum FailConnectionReason
	{
		[Token(Token = "0x40025F9")]
		None,
		[Token(Token = "0x40025FA")]
		HostDisconnected,
		[Token(Token = "0x40025FB")]
		ClientDisconnected,
		[Token(Token = "0x40025FC")]
		NoConnectivity,
		[Token(Token = "0x40025FD")]
		Timeout
	}
	[Token(Token = "0x20006A5")]
	public class LobbyistClient : MonoBehaviour
	{
		[Token(Token = "0x20006A6")]
		public enum ServerConnectionState
		{
			[Token(Token = "0x4002620")]
			Disconnected,
			[Token(Token = "0x4002621")]
			Connecting,
			[Token(Token = "0x4002622")]
			Connected
		}

		[Token(Token = "0x20006A7")]
		public class PlayerIntentParams
		{
			[Token(Token = "0x20006A8")]
			public struct Ranked
			{
				[Token(Token = "0x4002626")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public CoModes coModes;
			}

			[Token(Token = "0x20006A9")]
			public struct Invite
			{
				[Token(Token = "0x4002627")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string friendID;

				[Token(Token = "0x4002628")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public CoMode coMode;
			}

			[Token(Token = "0x20006AA")]
			public struct PIN_
			{
				[Token(Token = "0x4002629")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string pin;

				[Token(Token = "0x400262A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public CoMode coMode;
			}

			[Token(Token = "0x4002623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ranked ranked;

			[Token(Token = "0x4002624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Invite invite;

			[Token(Token = "0x4002625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PIN_ PIN;

			[Token(Token = "0x600279B")]
			[Address(RVA = "0xD943C4", Offset = "0xD943C4", VA = "0xD943C4")]
			public PlayerIntentParams()
			{
			}
		}

		[Token(Token = "0x20006AB")]
		public enum State
		{
			[Token(Token = "0x400262C")]
			None,
			[Token(Token = "0x400262D")]
			Idle,
			[Token(Token = "0x400262E")]
			Queued,
			[Token(Token = "0x400262F")]
			Connecting,
			[Token(Token = "0x4002630")]
			Connected
		}

		[Token(Token = "0x20006AC")]
		public struct Connecting
		{
			[Token(Token = "0x20006AD")]
			public enum Source
			{
				[Token(Token = "0x4002639")]
				Queue,
				[Token(Token = "0x400263A")]
				Invited
			}

			[Token(Token = "0x20006AE")]
			public enum Phase
			{
				[Token(Token = "0x400263C")]
				ICE,
				[Token(Token = "0x400263D")]
				Acceptance
			}

			[Token(Token = "0x4002631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string matchId;

			[Token(Token = "0x4002632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Source source;

			[Token(Token = "0x4002633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string otherPlayerID;

			[Token(Token = "0x4002634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CoMode coMode;

			[Token(Token = "0x4002635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isHost;

			[Token(Token = "0x4002636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformType platform;

			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Phase phase;

			[Token(Token = "0x17000693")]
			public bool sourceIsQueue
			{
				[Token(Token = "0x600279D")]
				[Address(RVA = "0xD943CC", Offset = "0xD943CC", VA = "0xD943CC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000694")]
			public bool sourceIsInvited
			{
				[Token(Token = "0x600279E")]
				[Address(RVA = "0xD93F30", Offset = "0xD93F30", VA = "0xD93F30")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0xD921C8", Offset = "0xD921C8", VA = "0xD921C8")]
			public static Source DeserializeSource(string sourceStr)
			{
				return default(Source);
			}
		}

		[Token(Token = "0x20006AF")]
		public delegate void OnEstablishedDelegate(LobbyistClient client, AgentType type, object data);

		[StructLayout(3)]
		[Token(Token = "0x20006B0")]
		[CompilerGenerated]
		private struct <Ping>d__112 : IAsyncStateMachine
		{
			[Token(Token = "0x400263E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400263F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool, long)> <>t__builder;

			[Token(Token = "0x4002640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x4002641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<(bool, long)> <>u__1;

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xD945D4", Offset = "0xD945D4", VA = "0xD945D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xD948EC", Offset = "0xD948EC", VA = "0xD948EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006B1")]
		[CompilerGenerated]
		private sealed class <PingCoroutine>d__115 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x4002645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Task<(bool, long)> <pingTask>5__2;

			[Token(Token = "0x17000695")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60027A8")]
				[Address(RVA = "0xD94B28", Offset = "0xD94B28", VA = "0xD94B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000696")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027AA")]
				[Address(RVA = "0xD94B70", Offset = "0xD94B70", VA = "0xD94B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xD91078", Offset = "0xD91078", VA = "0xD91078")]
			[DebuggerHidden]
			public <PingCoroutine>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0xD94944", Offset = "0xD94944", VA = "0xD94944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xD94948", Offset = "0xD94948", VA = "0xD94948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xD94B30", Offset = "0xD94B30", VA = "0xD94B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[CompilerGenerated]
		private sealed class <WaitForWelcome>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <waitTime>5__2;

			[Token(Token = "0x17000697")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027AE")]
				[Address(RVA = "0xD94C8C", Offset = "0xD94C8C", VA = "0xD94C8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000698")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B0")]
				[Address(RVA = "0xD94CD4", Offset = "0xD94CD4", VA = "0xD94CD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0xD914A4", Offset = "0xD914A4", VA = "0xD914A4")]
			[DebuggerHidden]
			public <WaitForWelcome>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xD94BCC", Offset = "0xD94BCC", VA = "0xD94BCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xD94BD0", Offset = "0xD94BD0", VA = "0xD94BD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xD94C94", Offset = "0xD94C94", VA = "0xD94C94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool usePing;

		[Token(Token = "0x40025FF")]
		private const float HELLO_TIMEOUT = 10f;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private ServerConnectionState _serverConnectionState;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly PlayerIntentParams _playerIntentParams;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private State _state;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Connecting _connecting;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _timeInQueue;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private LobbyistClientAPI _clientAPI;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string _playerID;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PlatformType _platform;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private string _multiplayer_version;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float PING_INTERVAL;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private CoroutineHandle _pingCoroutine;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _waitingForWelcome;

		[Token(Token = "0x17000681")]
		public ServerConnectionState serverConnectionState
		{
			[Token(Token = "0x600272F")]
			[Address(RVA = "0xD8CA1C", Offset = "0xD8CA1C", VA = "0xD8CA1C")]
			get
			{
				return default(ServerConnectionState);
			}
		}

		[Token(Token = "0x17000682")]
		public bool isDisconnectedFromServer
		{
			[Token(Token = "0x6002730")]
			[Address(RVA = "0xD8CA24", Offset = "0xD8CA24", VA = "0xD8CA24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000683")]
		public bool isConnectingToServer
		{
			[Token(Token = "0x6002731")]
			[Address(RVA = "0xD8CA34", Offset = "0xD8CA34", VA = "0xD8CA34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000684")]
		public bool isConnectedToServer
		{
			[Token(Token = "0x6002732")]
			[Address(RVA = "0xD8CA44", Offset = "0xD8CA44", VA = "0xD8CA44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000685")]
		public QueueType playerIntent
		{
			[Token(Token = "0x600273C")]
			[Address(RVA = "0xD8CFF4", Offset = "0xD8CFF4", VA = "0xD8CFF4")]
			[CompilerGenerated]
			get
			{
				return default(QueueType);
			}
			[Token(Token = "0x600273D")]
			[Address(RVA = "0xD8CFFC", Offset = "0xD8CFFC", VA = "0xD8CFFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000686")]
		public PlayerIntentParams PlayerIntent
		{
			[Token(Token = "0x600273E")]
			[Address(RVA = "0xD8D004", Offset = "0xD8D004", VA = "0xD8D004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000687")]
		public State state
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0xD8D00C", Offset = "0xD8D00C", VA = "0xD8D00C")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6002740")]
			[Address(RVA = "0xD8D014", Offset = "0xD8D014", VA = "0xD8D014")]
			private set
			{
			}
		}

		[Token(Token = "0x17000688")]
		public bool isIdle
		{
			[Token(Token = "0x6002741")]
			[Address(RVA = "0xD8D160", Offset = "0xD8D160", VA = "0xD8D160")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000689")]
		public bool isQueued
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0xD8D170", Offset = "0xD8D170", VA = "0xD8D170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068A")]
		public bool isConnecting
		{
			[Token(Token = "0x6002743")]
			[Address(RVA = "0xD8D180", Offset = "0xD8D180", VA = "0xD8D180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068B")]
		public bool isConnected
		{
			[Token(Token = "0x6002744")]
			[Address(RVA = "0xD8D190", Offset = "0xD8D190", VA = "0xD8D190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068C")]
		public Connecting connecting
		{
			[Token(Token = "0x6002747")]
			[Address(RVA = "0xD8D300", Offset = "0xD8D300", VA = "0xD8D300")]
			get
			{
				return default(Connecting);
			}
		}

		[Token(Token = "0x1700068D")]
		public bool isHost
		{
			[Token(Token = "0x6002748")]
			[Address(RVA = "0xD8D314", Offset = "0xD8D314", VA = "0xD8D314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068E")]
		public bool isICEPhase
		{
			[Token(Token = "0x6002749")]
			[Address(RVA = "0xD8D3E8", Offset = "0xD8D3E8", VA = "0xD8D3E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700068F")]
		public bool isAcceptancePhase
		{
			[Token(Token = "0x600274A")]
			[Address(RVA = "0xD8D3F8", Offset = "0xD8D3F8", VA = "0xD8D3F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000690")]
		public float timeInQueue
		{
			[Token(Token = "0x6002765")]
			[Address(RVA = "0xD8E548", Offset = "0xD8E548", VA = "0xD8E548")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000691")]
		public LobbyistClientAPI API
		{
			[Token(Token = "0x6002766")]
			[Address(RVA = "0xD8E550", Offset = "0xD8E550", VA = "0xD8E550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000692")]
		public string playerID
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0xD8E558", Offset = "0xD8E558", VA = "0xD8E558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<LobbyistClient> onConnectedToServer
		{
			[Token(Token = "0x6002733")]
			[Address(RVA = "0xD8CA54", Offset = "0xD8CA54", VA = "0xD8CA54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002734")]
			[Address(RVA = "0xD8CB04", Offset = "0xD8CB04", VA = "0xD8CB04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event Action<LobbyistClient, string> onConnectionToServerFailed
		{
			[Token(Token = "0x6002735")]
			[Address(RVA = "0xD8CBB4", Offset = "0xD8CBB4", VA = "0xD8CBB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002736")]
			[Address(RVA = "0xD8CC64", Offset = "0xD8CC64", VA = "0xD8CC64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event Action<LobbyistClient, string> onDisconnectedFromServer
		{
			[Token(Token = "0x6002737")]
			[Address(RVA = "0xD8CD14", Offset = "0xD8CD14", VA = "0xD8CD14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002738")]
			[Address(RVA = "0xD8CDC4", Offset = "0xD8CDC4", VA = "0xD8CDC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event Action<LobbyistClient> onQueue
		{
			[Token(Token = "0x6002739")]
			[Address(RVA = "0xD8CE74", Offset = "0xD8CE74", VA = "0xD8CE74")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600273A")]
			[Address(RVA = "0xD8CF24", Offset = "0xD8CF24", VA = "0xD8CF24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event Action<LobbyistClient> onQueueFailed
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0xD8D1A0", Offset = "0xD8D1A0", VA = "0xD8D1A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002746")]
			[Address(RVA = "0xD8D250", Offset = "0xD8D250", VA = "0xD8D250")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action<LobbyistClient> onConnecting
		{
			[Token(Token = "0x600274B")]
			[Address(RVA = "0xD8D408", Offset = "0xD8D408", VA = "0xD8D408")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600274C")]
			[Address(RVA = "0xD8D4B8", Offset = "0xD8D4B8", VA = "0xD8D4B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event Action<LobbyistClient, string[]> onRxHostAddresses
		{
			[Token(Token = "0x600274D")]
			[Address(RVA = "0xD8D568", Offset = "0xD8D568", VA = "0xD8D568")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600274E")]
			[Address(RVA = "0xD8D618", Offset = "0xD8D618", VA = "0xD8D618")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event Action<LobbyistClient, ReflexiveAddress[]> onRxReflexiveAddress
		{
			[Token(Token = "0x600274F")]
			[Address(RVA = "0xD8D6C8", Offset = "0xD8D6C8", VA = "0xD8D6C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002750")]
			[Address(RVA = "0xD8D778", Offset = "0xD8D778", VA = "0xD8D778")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action<LobbyistClient, string[]> onRxRelayedAddresses
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0xD8D828", Offset = "0xD8D828", VA = "0xD8D828")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002752")]
			[Address(RVA = "0xD8D8D8", Offset = "0xD8D8D8", VA = "0xD8D8D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event OnEstablishedDelegate onRxSuccessfulTest
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0xD8D988", Offset = "0xD8D988", VA = "0xD8D988")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002754")]
			[Address(RVA = "0xD8DA24", Offset = "0xD8DA24", VA = "0xD8DA24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event Action<LobbyistClient, AgentType> onRxTestsDone
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0xD8DAC0", Offset = "0xD8DAC0", VA = "0xD8DAC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002756")]
			[Address(RVA = "0xD8DB70", Offset = "0xD8DB70", VA = "0xD8DB70")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event OnEstablishedDelegate onUdpUtpChosenAddress
		{
			[Token(Token = "0x6002757")]
			[Address(RVA = "0xD8DC20", Offset = "0xD8DC20", VA = "0xD8DC20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002758")]
			[Address(RVA = "0xD8DCBC", Offset = "0xD8DCBC", VA = "0xD8DCBC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event OnEstablishedDelegate onEndIce
		{
			[Token(Token = "0x6002759")]
			[Address(RVA = "0xD8DD58", Offset = "0xD8DD58", VA = "0xD8DD58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275A")]
			[Address(RVA = "0xD8DDF4", Offset = "0xD8DDF4", VA = "0xD8DDF4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event OnEstablishedDelegate onEstablished
		{
			[Token(Token = "0x600275B")]
			[Address(RVA = "0xD8DE90", Offset = "0xD8DE90", VA = "0xD8DE90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275C")]
			[Address(RVA = "0xD8DF2C", Offset = "0xD8DF2C", VA = "0xD8DF2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event Action<LobbyistClient> onMatchAccepted
		{
			[Token(Token = "0x600275D")]
			[Address(RVA = "0xD8DFC8", Offset = "0xD8DFC8", VA = "0xD8DFC8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275E")]
			[Address(RVA = "0xD8E078", Offset = "0xD8E078", VA = "0xD8E078")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event Action<LobbyistClient> onMatchConnected
		{
			[Token(Token = "0x600275F")]
			[Address(RVA = "0xD8E128", Offset = "0xD8E128", VA = "0xD8E128")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002760")]
			[Address(RVA = "0xD8E1D8", Offset = "0xD8E1D8", VA = "0xD8E1D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event Action<LobbyistClient, FailConnectionReason> onMatchDisconnected
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0xD8E288", Offset = "0xD8E288", VA = "0xD8E288")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002762")]
			[Address(RVA = "0xD8E338", Offset = "0xD8E338", VA = "0xD8E338")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event Action<string> onRxPSNMatchId
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0xD8E3E8", Offset = "0xD8E3E8", VA = "0xD8E3E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002764")]
			[Address(RVA = "0xD8E498", Offset = "0xD8E498", VA = "0xD8E498")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xD8CFD4", Offset = "0xD8CFD4", VA = "0xD8CFD4")]
		private void OnQueue()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xD8E560", Offset = "0xD8E560", VA = "0xD8E560")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xD8FB08", Offset = "0xD8FB08", VA = "0xD8FB08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xD90EF0", Offset = "0xD90EF0", VA = "0xD90EF0")]
		[AsyncStateMachine(typeof(<Ping>d__112))]
		public Task<(bool, long)> Ping()
		{
			return null;
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xD91004", Offset = "0xD91004", VA = "0xD91004")]
		[IteratorStateMachine(typeof(<PingCoroutine>d__115))]
		private IEnumerator<float> PingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xD910A0", Offset = "0xD910A0", VA = "0xD910A0")]
		public void Connect(string host, int port, string multiplayer_version, string playerID, PlatformType platform = PlatformType.None)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xD912F8", Offset = "0xD912F8", VA = "0xD912F8")]
		private void OnConnectedToServer()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xD91430", Offset = "0xD91430", VA = "0xD91430")]
		[IteratorStateMachine(typeof(<WaitForWelcome>d__119))]
		private IEnumerator WaitForWelcome()
		{
			return null;
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xD914CC", Offset = "0xD914CC", VA = "0xD914CC")]
		private void OnConnectionToServerFailed(string reason)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xD91610", Offset = "0xD91610", VA = "0xD91610")]
		private void OnDisconnectedFromServer(string reason)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xD91614", Offset = "0xD91614", VA = "0xD91614")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xD914D0", Offset = "0xD914D0", VA = "0xD914D0")]
		private void OnDisconnected(string reason)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xD9169C", Offset = "0xD9169C", VA = "0xD9169C")]
		private void OnWelcomeTimeout()
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xD91740", Offset = "0xD91740", VA = "0xD91740")]
		private void OnWelcomed()
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xD917DC", Offset = "0xD917DC", VA = "0xD917DC")]
		private void OnUnwelcomed(string reason)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xD918D8", Offset = "0xD918D8", VA = "0xD918D8")]
		private void OnBye(string reason)
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xD919D0", Offset = "0xD919D0", VA = "0xD919D0")]
		public void QueueForRanked(float rating, float ratingDev, CoModes coModes)
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xD91B30", Offset = "0xD91B30", VA = "0xD91B30")]
		public void InviteFriend(string friendId, CoMode coMode)
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xD91C98", Offset = "0xD91C98", VA = "0xD91C98")]
		public void QueueForPIN(string pin, CoMode coMode)
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xD91E00", Offset = "0xD91E00", VA = "0xD91E00")]
		private void Update()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xD91E38", Offset = "0xD91E38", VA = "0xD91E38")]
		public void CancelQueue()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xD91EC8", Offset = "0xD91EC8", VA = "0xD91EC8")]
		private void OnQueueFailed()
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xD91F04", Offset = "0xD91F04", VA = "0xD91F04")]
		private void OnConnecting(OnConnecting msg)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xD922B4", Offset = "0xD922B4", VA = "0xD922B4")]
		public void SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xD92424", Offset = "0xD92424", VA = "0xD92424")]
		private void OnRxHostAddresses(HostAddresses msg)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xD9244C", Offset = "0xD9244C", VA = "0xD9244C")]
		public void SendReflexiveAddresses(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xD9260C", Offset = "0xD9260C", VA = "0xD9260C")]
		private void OnRxReflexiveAddress(ReflexiveAddresses msg)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xD92634", Offset = "0xD92634", VA = "0xD92634")]
		public void SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xD927A4", Offset = "0xD927A4", VA = "0xD927A4")]
		private void OnRxRelayedAddresses(RelayedAddresses msg)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xD927CC", Offset = "0xD927CC", VA = "0xD927CC")]
		public void SendSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xD92958", Offset = "0xD92958", VA = "0xD92958")]
		public void SendTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xD92A68", Offset = "0xD92A68", VA = "0xD92A68")]
		private void OnRxSuccessfulTest(SuccessfulTest msg)
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xD92BBC", Offset = "0xD92BBC", VA = "0xD92BBC")]
		private void OnRxTestsDone(TestsDone msg)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xD92D00", Offset = "0xD92D00", VA = "0xD92D00")]
		public void SendNoConnectivity()
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0xD92EB8", Offset = "0xD92EB8", VA = "0xD92EB8")]
		public void SendIceTimeout()
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xD9306C", Offset = "0xD9306C", VA = "0xD9306C")]
		public void SendUdpUtpChosenAddress(AgentType type, object data)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0xD932C4", Offset = "0xD932C4", VA = "0xD932C4")]
		public void SendEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xD93524", Offset = "0xD93524", VA = "0xD93524")]
		public void SendEndIce(AgentType type, object data)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xD93738", Offset = "0xD93738", VA = "0xD93738")]
		public void SendBlockedUsers(string[] blockedRnxIds)
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0xD93828", Offset = "0xD93828", VA = "0xD93828")]
		public void SendPSNMatchId(string matchId)
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0xD93918", Offset = "0xD93918", VA = "0xD93918")]
		private void OnRxPSNMatchId(string matchId)
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0xD93934", Offset = "0xD93934", VA = "0xD93934")]
		private void OnUdpUtpChosenAddress(string type, object data)
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0xD93A80", Offset = "0xD93A80", VA = "0xD93A80")]
		private void OnEndIce(string type, object data)
		{
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0xD93BD4", Offset = "0xD93BD4", VA = "0xD93BD4")]
		private void OnEstablished(string type, object data)
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0xD93D28", Offset = "0xD93D28", VA = "0xD93D28")]
		public void AcceptMatch()
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0xD93DA8", Offset = "0xD93DA8", VA = "0xD93DA8")]
		private void OnMatchAccepted()
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0xD93DC8", Offset = "0xD93DC8", VA = "0xD93DC8")]
		public void DeclineMatch()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xD93FB0", Offset = "0xD93FB0", VA = "0xD93FB0")]
		private void OnMatchConnected()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0xD93FE8", Offset = "0xD93FE8", VA = "0xD93FE8")]
		public void DisconnectMatch()
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0xD94180", Offset = "0xD94180", VA = "0xD94180")]
		private void OnMatchDisconnected(bool is_queued, string reason)
		{
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0xD942A8", Offset = "0xD942A8", VA = "0xD942A8")]
		public void SendDebugClearBlacklist(string playerId)
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xD94348", Offset = "0xD94348", VA = "0xD94348")]
		public LobbyistClient()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class LobbyistClientAPI : MonoBehaviour
	{
		[Token(Token = "0x20006B4")]
		private enum TCPConnectionState
		{
			[Token(Token = "0x4002670")]
			Disconnected,
			[Token(Token = "0x4002671")]
			Connecting,
			[Token(Token = "0x4002672")]
			Connected
		}

		[Token(Token = "0x20006B5")]
		public delegate void OnEstablishedDelegate(string type, object data);

		[Token(Token = "0x20006B6")]
		public delegate void OnMatchDisconnectedDelegate(bool isQueued, string reason);

		[Token(Token = "0x20006B7")]
		public delegate string ToJson(object obj);

		[Token(Token = "0x20006B8")]
		[CompilerGenerated]
		private sealed class <ConnectCo>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string host;

			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int port;

			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IAsyncResult <tcpConnectResult>5__2;

			[Token(Token = "0x4002679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <waitTime>5__3;

			[Token(Token = "0x1700069A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002823")]
				[Address(RVA = "0xD96D4C", Offset = "0xD96D4C", VA = "0xD96D4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002825")]
				[Address(RVA = "0xD96D94", Offset = "0xD96D94", VA = "0xD96D94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002820")]
			[Address(RVA = "0xD94D8C", Offset = "0xD94D8C", VA = "0xD94D8C")]
			[DebuggerHidden]
			public <ConnectCo>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0xD96928", Offset = "0xD96928", VA = "0xD96928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0xD9692C", Offset = "0xD9692C", VA = "0xD9692C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0xD96D54", Offset = "0xD96D54", VA = "0xD96D54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B9")]
		[CompilerGenerated]
		private struct <Ping>d__94 : IAsyncStateMachine
		{
			[Token(Token = "0x400267A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400267B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool, long)> <>t__builder;

			[Token(Token = "0x400267C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x400267D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002826")]
			[Address(RVA = "0xD96D9C", Offset = "0xD96D9C", VA = "0xD96D9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002827")]
			[Address(RVA = "0xD970F0", Offset = "0xD970F0", VA = "0xD970F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006BA")]
		[CompilerGenerated]
		private sealed class <WaitForPongTimeOut>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400267E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400267F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x1700069C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282B")]
				[Address(RVA = "0xD97218", Offset = "0xD97218", VA = "0xD97218", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282D")]
				[Address(RVA = "0xD97260", Offset = "0xD97260", VA = "0xD97260", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0xD96364", Offset = "0xD96364", VA = "0xD96364")]
			[DebuggerHidden]
			public <WaitForPongTimeOut>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0xD97148", Offset = "0xD97148", VA = "0xD97148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0xD9714C", Offset = "0xD9714C", VA = "0xD9714C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0xD97220", Offset = "0xD97220", VA = "0xD97220", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TcpClient _tcpClient;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkStream _tcpStream;

		[Token(Token = "0x400264C")]
		private const int RX_BUFFER_SIZE = 8192;

		[Token(Token = "0x400264D")]
		private const int TX_BUFFER_SIZE = 8192;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BytesQueue _rx_buffer;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BytesQueue _tx_buffer;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _playerID;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _playerIDShort;

		[Token(Token = "0x4002652")]
		private const int PROTOCOL_VERSION = 3;

		[Token(Token = "0x4002653")]
		private const int HEADER_SIZE = 2;

		[Token(Token = "0x4002654")]
		private const float TCP_CONNECTION_TIMEOUT = 10f;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TCPConnectionState _tcpConnectionState;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ToJson _toEmptyJson;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] SPACE_SEPARATOR;

		[Token(Token = "0x400266C")]
		private const float PongTimeout = 1f;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TaskCompletionSource<bool> _pongTask;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly Stopwatch _pongTimer;

		[Token(Token = "0x17000699")]
		private bool isConnectedToServer
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xD94CDC", Offset = "0xD94CDC", VA = "0xD94CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000073")]
		public event Action onConnectedToServer
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xD8EC40", Offset = "0xD8EC40", VA = "0xD8EC40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xD901E4", Offset = "0xD901E4", VA = "0xD901E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event Action<string> onConnectionToServerFailed
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xD8ECDC", Offset = "0xD8ECDC", VA = "0xD8ECDC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xD90280", Offset = "0xD90280", VA = "0xD90280")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event Action<string> onDisconnectedFromServer
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xD8ED8C", Offset = "0xD8ED8C", VA = "0xD8ED8C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xD90330", Offset = "0xD90330", VA = "0xD90330")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event Action onWelcomed
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xD8EE3C", Offset = "0xD8EE3C", VA = "0xD8EE3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xD903E0", Offset = "0xD903E0", VA = "0xD903E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event Action<string> onUnwelcomed
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xD8EED8", Offset = "0xD8EED8", VA = "0xD8EED8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xD9047C", Offset = "0xD9047C", VA = "0xD9047C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event Action<string> onBye
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xD8EF88", Offset = "0xD8EF88", VA = "0xD8EF88")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xD9052C", Offset = "0xD9052C", VA = "0xD9052C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event Action onQueueFailed
		{
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xD8F038", Offset = "0xD8F038", VA = "0xD8F038")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xD905DC", Offset = "0xD905DC", VA = "0xD905DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event Action<OnConnecting> onConnecting
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xD8F0D4", Offset = "0xD8F0D4", VA = "0xD8F0D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xD90678", Offset = "0xD90678", VA = "0xD90678")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event Action<HostAddresses> onRxHostAddresses
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xD8F184", Offset = "0xD8F184", VA = "0xD8F184")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xD90728", Offset = "0xD90728", VA = "0xD90728")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public event Action<ReflexiveAddresses> onRxReflexiveAddress
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xD8F234", Offset = "0xD8F234", VA = "0xD8F234")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xD907D8", Offset = "0xD907D8", VA = "0xD907D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event Action<RelayedAddresses> onRxRelayedAddresses
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xD8F2E4", Offset = "0xD8F2E4", VA = "0xD8F2E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xD90888", Offset = "0xD90888", VA = "0xD90888")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event Action<SuccessfulTest> onRxSuccessfulTest
		{
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xD8F394", Offset = "0xD8F394", VA = "0xD8F394")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xD90938", Offset = "0xD90938", VA = "0xD90938")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event Action<TestsDone> onRxTestsDone
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xD8F444", Offset = "0xD8F444", VA = "0xD8F444")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xD909E8", Offset = "0xD909E8", VA = "0xD909E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event OnEstablishedDelegate onUdpUtpChosenAddress
		{
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xD8F678", Offset = "0xD8F678", VA = "0xD8F678")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xD90B34", Offset = "0xD90B34", VA = "0xD90B34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event OnEstablishedDelegate onEndIce
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xD8F714", Offset = "0xD8F714", VA = "0xD8F714")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xD90BD0", Offset = "0xD90BD0", VA = "0xD90BD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event OnEstablishedDelegate onEstablished
		{
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xD8F5DC", Offset = "0xD8F5DC", VA = "0xD8F5DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xD90A98", Offset = "0xD90A98", VA = "0xD90A98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event Action onMatchAccepted
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xD8F7B0", Offset = "0xD8F7B0", VA = "0xD8F7B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0xD90C6C", Offset = "0xD90C6C", VA = "0xD90C6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event Action onMatchConnected
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xD8F84C", Offset = "0xD8F84C", VA = "0xD8F84C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0xD90D08", Offset = "0xD90D08", VA = "0xD90D08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public event OnMatchDisconnectedDelegate onMatchDisconnected
		{
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xD8F9BC", Offset = "0xD8F9BC", VA = "0xD8F9BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xD90DA4", Offset = "0xD90DA4", VA = "0xD90DA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event Action<string> onRxPSNMatchId
		{
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xD8FA58", Offset = "0xD8FA58", VA = "0xD8FA58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0xD90E40", Offset = "0xD90E40", VA = "0xD90E40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xD94CEC", Offset = "0xD94CEC", VA = "0xD94CEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xD911EC", Offset = "0xD911EC", VA = "0xD911EC")]
		public void Connect(string host, int port)
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xD94CF4", Offset = "0xD94CF4", VA = "0xD94CF4")]
		[IteratorStateMachine(typeof(<ConnectCo>d__79))]
		private IEnumerator ConnectCo(string host, int port)
		{
			return null;
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xD94DB4", Offset = "0xD94DB4", VA = "0xD94DB4")]
		private void Send(Lobbyist.Messages.Message msg, [Optional] ToJson toJson)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xD95268", Offset = "0xD95268", VA = "0xD95268")]
		private void Update()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xD9526C", Offset = "0xD9526C", VA = "0xD9526C")]
		private void ReadMessages()
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xD9618C", Offset = "0xD9618C", VA = "0xD9618C")]
		private void _Disconnect()
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xD91674", Offset = "0xD91674", VA = "0xD91674")]
		public void Disconnect(string reason)
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xD95218", Offset = "0xD95218", VA = "0xD95218")]
		private void OnFailedToSend()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xD961F8", Offset = "0xD961F8", VA = "0xD961F8")]
		private void OnDisconnected(string reason)
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xD962EC", Offset = "0xD962EC", VA = "0xD962EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xD947D8", Offset = "0xD947D8", VA = "0xD947D8")]
		[AsyncStateMachine(typeof(<Ping>d__94))]
		public Task<(bool, long)> Ping()
		{
			return null;
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xD962F0", Offset = "0xD962F0", VA = "0xD962F0")]
		[IteratorStateMachine(typeof(<WaitForPongTimeOut>d__95))]
		private IEnumerator WaitForPongTimeOut()
		{
			return null;
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0xD9638C", Offset = "0xD9638C", VA = "0xD9638C")]
		private void Pong()
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xD95ED8", Offset = "0xD95ED8", VA = "0xD95ED8")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xD95EDC", Offset = "0xD95EDC", VA = "0xD95EDC")]
		private void OnPong()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xD9133C", Offset = "0xD9133C", VA = "0xD9133C")]
		public void SendHello(string playerID, string multiplayer_version, PlatformType platform = PlatformType.None, int protocolVersion = 3)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xD95F80", Offset = "0xD95F80", VA = "0xD95F80")]
		private void OnRxWelcome(Welcome msg)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xD95F9C", Offset = "0xD95F9C", VA = "0xD95F9C")]
		private void OnRxUnwelcome(Unwelcome msg)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xD95FB8", Offset = "0xD95FB8", VA = "0xD95FB8")]
		private void OnRxBye(Bye msg)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xD91A60", Offset = "0xD91A60", VA = "0xD91A60")]
		public void SendQueueRanked(float rating, float ratingDev, CoModes coModes)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xD91BC0", Offset = "0xD91BC0", VA = "0xD91BC0")]
		public void SendQueueInvite(string friendId, CoMode coMode)
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xD91D28", Offset = "0xD91D28", VA = "0xD91D28")]
		public void SendQueuePIN(string pin, CoMode coMode)
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xD91E60", Offset = "0xD91E60", VA = "0xD91E60")]
		public void SendCancelQueue()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xD95FD4", Offset = "0xD95FD4", VA = "0xD95FD4")]
		private void OnRxOnQueueFailed(OnQueueFailed msg)
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xD95FF0", Offset = "0xD95FF0", VA = "0xD95FF0")]
		public void OnRxOnConnecting(OnConnecting msg)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xD9239C", Offset = "0xD9239C", VA = "0xD9239C")]
		public void SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xD96038", Offset = "0xD96038", VA = "0xD96038")]
		private void OnRxHostAddresses(HostAddresses msg)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xD92534", Offset = "0xD92534", VA = "0xD92534")]
		public void SendReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xD96054", Offset = "0xD96054", VA = "0xD96054")]
		private void OnRxReflexiveAddress(ReflexiveAddresses msg)
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xD9271C", Offset = "0xD9271C", VA = "0xD9271C")]
		public void SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xD96070", Offset = "0xD96070", VA = "0xD96070")]
		private void OnRxRelayedAddresses(RelayedAddresses msg)
		{
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xD9285C", Offset = "0xD9285C", VA = "0xD9285C")]
		public void SendSuccessfulTest(string type, object data)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xD929E0", Offset = "0xD929E0", VA = "0xD929E0")]
		public void SendTestsDone(string type)
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xD9608C", Offset = "0xD9608C", VA = "0xD9608C")]
		private void OnRxSuccessfulTest(SuccessfulTest msg)
		{
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xD960A8", Offset = "0xD960A8", VA = "0xD960A8")]
		private void OnRxTestsDone(TestsDone msg)
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xD92E48", Offset = "0xD92E48", VA = "0xD92E48")]
		public void SendNoConnectivity(bool isQueued)
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xD93000", Offset = "0xD93000", VA = "0xD93000")]
		public void SendIceTimeout(bool isQueued)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xD931C8", Offset = "0xD931C8", VA = "0xD931C8")]
		public void SendUdpUtpChosenAddress(string type, object data)
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xD93428", Offset = "0xD93428", VA = "0xD93428")]
		public void SendEstablished(string connectionType, object data)
		{
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0xD9363C", Offset = "0xD9363C", VA = "0xD9363C")]
		public void SendIceEnd(string connectionType, object data)
		{
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xD935D4", Offset = "0xD935D4", VA = "0xD935D4")]
		public void SendIceEnd()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xD93750", Offset = "0xD93750", VA = "0xD93750")]
		public void SendBlockedUsers(string[] blockedRnxIds)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0xD93840", Offset = "0xD93840", VA = "0xD93840")]
		public void SendPSNMatchId(string matchId)
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0xD960C4", Offset = "0xD960C4", VA = "0xD960C4")]
		private void OnRxUdpUtpChosenAddress(UdpUtpChosenAddress msg)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0xD960E0", Offset = "0xD960E0", VA = "0xD960E0")]
		private void OnRxUdpUtpEndIce(EndIce msg)
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0xD960FC", Offset = "0xD960FC", VA = "0xD960FC")]
		private void OnRxEstablished(Established msg)
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0xD93D40", Offset = "0xD93D40", VA = "0xD93D40")]
		public void SendAcceptMatch()
		{
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0xD96118", Offset = "0xD96118", VA = "0xD96118")]
		private void OnRxOnMatchAccepted(OnMatchAccepted msg)
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0xD93F40", Offset = "0xD93F40", VA = "0xD93F40")]
		public void SendDeclineMatch(bool isQueued)
		{
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0xD94118", Offset = "0xD94118", VA = "0xD94118")]
		public void SendDisconnect()
		{
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0xD96548", Offset = "0xD96548", VA = "0xD96548")]
		public void SendUdpUtpAnalytic(string matchId, UdpUtpResultStatus result)
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0xD96134", Offset = "0xD96134", VA = "0xD96134")]
		private void OnRxOnConnected(OnConnected msg)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xD96150", Offset = "0xD96150", VA = "0xD96150")]
		private void OnRxOnDisconnected(OnDisconnected msg)
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0xD96170", Offset = "0xD96170", VA = "0xD96170")]
		private void OnRxPSNMatchId(PSNMatchId msg)
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xD942C0", Offset = "0xD942C0", VA = "0xD942C0")]
		public void SendDebugClearBlacklist(string playerID)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0xD96624", Offset = "0xD96624", VA = "0xD96624")]
		public LobbyistClientAPI()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[CreateAssetMenu(menuName = "Data/Lobbyist/Lobbyist Client Config")]
	public class LobbyistClientConfig : ScriptableObject
	{
		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string host;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int port;

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xD97320", Offset = "0xD97320", VA = "0xD97320")]
		public LobbyistClientConfig()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	[CreateAssetMenu(menuName = "Data/Lobbyist/STUN Server Config")]
	public class StunServerConfig : ScriptableObject
	{
		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string host;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int port;

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xD97328", Offset = "0xD97328", VA = "0xD97328")]
		public StunServerConfig()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	public enum UdpUtpResultStatus
	{
		[Token(Token = "0x4002688")]
		Failed,
		[Token(Token = "0x4002689")]
		Connected
	}
}
namespace Lobbyist.Messages
{
	[Token(Token = "0x20006BF")]
	public interface Message
	{
	}
	[Token(Token = "0x20006C0")]
	public struct Ping : Message
	{
	}
	[Token(Token = "0x20006C1")]
	public struct Pong : Message
	{
	}
	[Token(Token = "0x20006C2")]
	public struct Hello : Message
	{
		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int version;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string playerID;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nativePlatform;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string multiplayer_version;

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xD963F4", Offset = "0xD963F4", VA = "0xD963F4")]
		public Hello(int version, string playerID, PlatformType platform, string multiplayer_version)
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public struct Welcome : Message
	{
	}
	[Token(Token = "0x20006C4")]
	public struct Unwelcome : Message
	{
		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string reason;
	}
	[Token(Token = "0x20006C5")]
	public struct Bye : Message
	{
		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string reason;
	}
	[Token(Token = "0x20006C6")]
	public struct QueueRanked : Message
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rating;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ratingDev;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coModes;

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xD964AC", Offset = "0xD964AC", VA = "0xD964AC")]
		public QueueRanked(float rating, float ratingDev, string coModes)
		{
		}
	}
	[Token(Token = "0x20006C7")]
	public struct QueueInvite : Message
	{
		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerID;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coMode;

		[Token(Token = "0x6002835")]
		[Address(RVA = "0xD964B8", Offset = "0xD964B8", VA = "0xD964B8")]
		public QueueInvite(string playerID, string coMode)
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public struct QueuePIN : Message
	{
		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string pin;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coMode;

		[Token(Token = "0x6002836")]
		[Address(RVA = "0xD964E8", Offset = "0xD964E8", VA = "0xD964E8")]
		public QueuePIN(string pin, string coMode)
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public struct CancelQueue : Message
	{
	}
	[Token(Token = "0x20006CA")]
	public struct OnQueueFailed : Message
	{
	}
	[Token(Token = "0x20006CB")]
	public struct OnConnecting : Message
	{
		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string match_id;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string source;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerID;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string coMode;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isHost;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nativePlatform;
	}
	[Token(Token = "0x20006CC")]
	public struct HostAddresses : Message
	{
		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] addresses;

		[Token(Token = "0x6002837")]
		[Address(RVA = "0xD97330", Offset = "0xD97330", VA = "0xD97330")]
		public HostAddresses(string[] addresses)
		{
		}
	}
	[Token(Token = "0x20006CD")]
	public struct ReflexiveAddress
	{
		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string reflexive;

		[Token(Token = "0x6002838")]
		[Address(RVA = "0xD97338", Offset = "0xD97338", VA = "0xD97338")]
		public ReflexiveAddress(string host, string reflexive)
		{
		}
	}
	[Token(Token = "0x20006CE")]
	public struct ReflexiveAddresses : Message
	{
		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReflexiveAddress[] addresses;
	}
	[Token(Token = "0x20006CF")]
	public struct RelayedAddresses : Message
	{
		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] addresses;

		[Token(Token = "0x6002839")]
		[Address(RVA = "0xD97368", Offset = "0xD97368", VA = "0xD97368")]
		public RelayedAddresses(string[] addresses)
		{
		}
	}
	[Token(Token = "0x20006D0")]
	public struct SuccessfulTest : Message
	{
		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006D1")]
	public struct TestsDone : Message
	{
		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;
	}
	[Token(Token = "0x20006D2")]
	public struct NoConnectivity : Message
	{
		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x600283A")]
		[Address(RVA = "0xD97370", Offset = "0xD97370", VA = "0xD97370")]
		public NoConnectivity(bool isQueued)
		{
		}
	}
	[Token(Token = "0x20006D3")]
	public struct IceTimeout : Message
	{
		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;
	}
	[Token(Token = "0x20006D4")]
	public struct UdpUtpChosenAddress : Message
	{
		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006D5")]
	public struct EndIce : Message
	{
		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006D6")]
	public struct Established : Message
	{
		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xD96518", Offset = "0xD96518", VA = "0xD96518")]
		public Established(string type, object data)
		{
		}
	}
	[Token(Token = "0x20006D7")]
	public struct AcceptMatch : Message
	{
	}
	[Token(Token = "0x20006D8")]
	public struct DeclineMatch : Message
	{
		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xD9737C", Offset = "0xD9737C", VA = "0xD9737C")]
		public DeclineMatch(bool isQueued)
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public struct OnMatchAccepted : Message
	{
	}
	[Token(Token = "0x20006DA")]
	public struct OnConnected : Message
	{
	}
	[Token(Token = "0x20006DB")]
	public struct Disconnect : Message
	{
	}
	[Token(Token = "0x20006DC")]
	public struct OnDisconnected : Message
	{
		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string reason;

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xD97388", Offset = "0xD97388", VA = "0xD97388")]
		public OnDisconnected(bool isQueued, string reason)
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public struct UdpUtpAnalytic : Message
	{
		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string match_id;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string result;
	}
	[Token(Token = "0x20006DE")]
	public struct BlockedUsers : Message
	{
		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] blockedRnxIds;

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xD9739C", Offset = "0xD9739C", VA = "0xD9739C")]
		public BlockedUsers(string[] blockedRnxIds)
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public struct PSNMatchId : Message
	{
		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string matchId;

		[Token(Token = "0x600283F")]
		[Address(RVA = "0xD973A4", Offset = "0xD973A4", VA = "0xD973A4")]
		public PSNMatchId(string matchId)
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public struct DebugClearBlacklist : Message
	{
		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerID;

		[Token(Token = "0x6002840")]
		[Address(RVA = "0xD973AC", Offset = "0xD973AC", VA = "0xD973AC")]
		public DebugClearBlacklist(string playerID)
		{
		}
	}
}
namespace Multiplayer
{
	[Token(Token = "0x20006E1")]
	internal class LobbyistAsSignalingServer : ISignalingServer
	{
		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LobbyistClient _client;

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xD973B4", Offset = "0xD973B4", VA = "0xD973B4")]
		public LobbyistAsSignalingServer(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0xD973E4", Offset = "0xD973E4", VA = "0xD973E4", Slot = "4")]
		private void Multiplayer.ICE.ISignalingServer.SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xD973FC", Offset = "0xD973FC", VA = "0xD973FC", Slot = "5")]
		private void Multiplayer.ICE.ISignalingServer.SendReflexiveAddresses(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xD97414", Offset = "0xD97414", VA = "0xD97414", Slot = "6")]
		private void Multiplayer.ICE.ISignalingServer.SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xD9742C", Offset = "0xD9742C", VA = "0xD9742C", Slot = "13")]
		private void Multiplayer.ICE.ISignalingServer.SendSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xD97444", Offset = "0xD97444", VA = "0xD97444", Slot = "14")]
		private void Multiplayer.ICE.ISignalingServer.SendTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xD9745C", Offset = "0xD9745C", VA = "0xD9745C", Slot = "7")]
		private void Multiplayer.ICE.ISignalingServer.SendNoConnectivity()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xD97474", Offset = "0xD97474", VA = "0xD97474", Slot = "8")]
		public void SendIceTimeout()
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xD9748C", Offset = "0xD9748C", VA = "0xD9748C", Slot = "9")]
		private void Multiplayer.ICE.ISignalingServer.SendUdpUtpChosenAddress(AgentType type, object data)
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xD974A4", Offset = "0xD974A4", VA = "0xD974A4", Slot = "10")]
		private void Multiplayer.ICE.ISignalingServer.SendEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xD974BC", Offset = "0xD974BC", VA = "0xD974BC", Slot = "11")]
		private void Multiplayer.ICE.ISignalingServer.SendEndIce(AgentType type, object data)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xD974D4", Offset = "0xD974D4", VA = "0xD974D4", Slot = "15")]
		public void SendUdpUtpStatus(UdpUtpResultStatus result)
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[Flags]
	public enum ConnectionsType
	{
		[Token(Token = "0x40026B7")]
		None = 0,
		[Token(Token = "0x40026B8")]
		UtpUdp = 1,
		[Token(Token = "0x40026B9")]
		Relay = 2,
		[Token(Token = "0x40026BA")]
		NativeP2P = 4,
		[Token(Token = "0x40026BB")]
		RelayQos = 8
	}
	[Token(Token = "0x20006E3")]
	public static class ConnectionsTypeHelper
	{
		[Token(Token = "0x600284D")]
		[Address(RVA = "0xD97588", Offset = "0xD97588", VA = "0xD97588")]
		public static ConnectionsType[] AllFlags()
		{
			return null;
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xD976B4", Offset = "0xD976B4", VA = "0xD976B4")]
		public static IEnumerable<ConnectionsType> EnumerateFlags(ConnectionsType value)
		{
			return null;
		}
	}
}
namespace Multiplayer.ICE
{
	[Token(Token = "0x20006E5")]
	public class ICEProcess : MonoBehaviour
	{
		[Token(Token = "0x20006E6")]
		public enum ICEConnectionState
		{
			[Token(Token = "0x40026CF")]
			None,
			[Token(Token = "0x40026D0")]
			Connecting,
			[Token(Token = "0x40026D1")]
			FirstConnected,
			[Token(Token = "0x40026D2")]
			BetterConnected,
			[Token(Token = "0x40026D3")]
			Timeout,
			[Token(Token = "0x40026D4")]
			Failed
		}

		[Token(Token = "0x20006E7")]
		public delegate void OnConnectedDelegate(ICEProcess ice, NodeStatus status);

		[Token(Token = "0x20006E8")]
		public delegate void OnBetterConnectedDelegate(ICEProcess ice, NodeStatus status);

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ICESettings iceSettings;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISignalingServer _signalingServer;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly HashSet<IceAgent> _iceAgents;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly IceAgent[] _iceAgentsBuffer;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NodeStatus _firstNode;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NodeStatus _betterNode;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<NodeStatus> _nodesStatuses;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Stopwatch _stopwatch;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _agentsTypeCount;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Type, IceAgentAttribute> _agentTypeToAgentTypeEnum;

		[Token(Token = "0x1700069E")]
		public bool IsHost
		{
			[Token(Token = "0x6002852")]
			[Address(RVA = "0xD977B4", Offset = "0xD977B4", VA = "0xD977B4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002851")]
			[Address(RVA = "0xD977A8", Offset = "0xD977A8", VA = "0xD977A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700069F")]
		public ICEConnectionState ConnectionState
		{
			[Token(Token = "0x6002854")]
			[Address(RVA = "0xD977C4", Offset = "0xD977C4", VA = "0xD977C4")]
			[CompilerGenerated]
			get
			{
				return default(ICEConnectionState);
			}
			[Token(Token = "0x6002853")]
			[Address(RVA = "0xD977BC", Offset = "0xD977BC", VA = "0xD977BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A0")]
		public bool DidTimedOut
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0xD977D8", Offset = "0xD977D8", VA = "0xD977D8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002855")]
			[Address(RVA = "0xD977CC", Offset = "0xD977CC", VA = "0xD977CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A1")]
		public bool FirstConnected
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0xD977E0", Offset = "0xD977E0", VA = "0xD977E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A2")]
		public bool Initialized
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0xD97BC0", Offset = "0xD97BC0", VA = "0xD97BC0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600285F")]
			[Address(RVA = "0xD97BC8", Offset = "0xD97BC8", VA = "0xD97BC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		private Span<IceAgent> IceAgentsBuffer
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0xD97BD4", Offset = "0xD97BD4", VA = "0xD97BD4")]
			get
			{
				return default(Span<IceAgent>);
			}
		}

		[Token(Token = "0x170006A4")]
		public IEnumerable<NodeStatus> NodeStatuses
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xD9A6B4", Offset = "0xD9A6B4", VA = "0xD9A6B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A5")]
		private bool HaveAtLeastOneNodeFromEachAgent
		{
			[Token(Token = "0x600287A")]
			[Address(RVA = "0xD9BB94", Offset = "0xD9BB94", VA = "0xD9BB94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A6")]
		private bool AllStatusesDone
		{
			[Token(Token = "0x600287B")]
			[Address(RVA = "0xD9BC38", Offset = "0xD9BC38", VA = "0xD9BC38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000087")]
		public event OnConnectedDelegate OnFirstConnected
		{
			[Token(Token = "0x6002858")]
			[Address(RVA = "0xD977F0", Offset = "0xD977F0", VA = "0xD977F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002859")]
			[Address(RVA = "0xD9788C", Offset = "0xD9788C", VA = "0xD9788C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event OnBetterConnectedDelegate OnBetterConnected
		{
			[Token(Token = "0x600285A")]
			[Address(RVA = "0xD97928", Offset = "0xD97928", VA = "0xD97928")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600285B")]
			[Address(RVA = "0xD979C4", Offset = "0xD979C4", VA = "0xD979C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event Action<ICEProcess> OnConnectionFailed
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0xD97A60", Offset = "0xD97A60", VA = "0xD97A60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600285D")]
			[Address(RVA = "0xD97B10", Offset = "0xD97B10", VA = "0xD97B10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xD97E0C", Offset = "0xD97E0C", VA = "0xD97E0C")]
		private bool ChooseFirstNode()
		{
			return default(bool);
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0xD98010", Offset = "0xD98010", VA = "0xD98010")]
		public void CloseFirstNode()
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xD98054", Offset = "0xD98054", VA = "0xD98054")]
		private void ChooseBetterNode(NodeStatus status)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xD98188", Offset = "0xD98188", VA = "0xD98188")]
		private void CloseBetterNode()
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xD981B8", Offset = "0xD981B8", VA = "0xD981B8")]
		private void CloseNonConnectedStatuses()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xD98040", Offset = "0xD98040", VA = "0xD98040")]
		private void CloseStatus(NodeStatus stat)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xD98534", Offset = "0xD98534", VA = "0xD98534")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xD98758", Offset = "0xD98758", VA = "0xD98758")]
		private void DisposeAgents()
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xD98A40", Offset = "0xD98A40", VA = "0xD98A40")]
		private void DisposeAgent(IceAgent agent)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0xD98328", Offset = "0xD98328", VA = "0xD98328")]
		private void CloseNode(P2PNode node)
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xD9944C", Offset = "0xD9944C", VA = "0xD9944C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xD994D0", Offset = "0xD994D0", VA = "0xD994D0")]
		public void Initialize(ISignalingServer signalingServer, bool supportNativeP2P = false)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0xD99D1C", Offset = "0xD99D1C", VA = "0xD99D1C")]
		private void CleanStaleAgents()
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0xD99E68", Offset = "0xD99E68", VA = "0xD99E68")]
		private void CleanStaleP2PNodes()
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0xD9A1B0", Offset = "0xD9A1B0", VA = "0xD9A1B0")]
		public void Establish(bool isHost)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xD9A6BC", Offset = "0xD9A6BC", VA = "0xD9A6BC")]
		private void OnNodeInitStatus(NodeStatus status)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0xD9A7B0", Offset = "0xD9A7B0", VA = "0xD9A7B0")]
		private void OnTimeOut(ICEConnectionState prevState)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xD9ABD8", Offset = "0xD9ABD8", VA = "0xD9ABD8")]
		private void OnNodeConnectionFailed(IceAgent agent, NodeStatus status)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xD9AEE0", Offset = "0xD9AEE0", VA = "0xD9AEE0")]
		private void OnNodeConnected(NodeStatus status)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xD9AF64", Offset = "0xD9AF64", VA = "0xD9AF64")]
		private void Update()
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0xD97FFC", Offset = "0xD97FFC", VA = "0xD97FFC")]
		[CanBeNull]
		private NodeStatus BestAgentStatus(bool first = false)
		{
			return null;
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xD9B24C", Offset = "0xD9B24C", VA = "0xD9B24C")]
		private NodeStatus StatusOfBestConnectedClient()
		{
			return null;
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xD9B388", Offset = "0xD9B388", VA = "0xD9B388")]
		private NodeStatus ConcludeStatusOfBestConnectedHost(bool first)
		{
			return null;
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0xD9AE18", Offset = "0xD9AE18", VA = "0xD9AE18")]
		private void ConcludeFailOrSuccess()
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0xD9B624", Offset = "0xD9B624", VA = "0xD9B624")]
		private void ConcludeFailOrSuccessHost()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xD9BB44", Offset = "0xD9BB44", VA = "0xD9BB44")]
		private void ConcludeFailOrSuccessClient()
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0xD9BD3C", Offset = "0xD9BD3C", VA = "0xD9BD3C")]
		private void FailIceIfNoConnection()
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xD9A94C", Offset = "0xD9A94C", VA = "0xD9A94C")]
		private void FailIce()
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xD9BE40", Offset = "0xD9BE40", VA = "0xD9BE40")]
		private void SuccessIce([NotNull] NodeStatus statusOfBestConnected)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xD9BEE0", Offset = "0xD9BEE0", VA = "0xD9BEE0")]
		public void OnEndIce(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xD9C29C", Offset = "0xD9C29C", VA = "0xD9C29C")]
		public void OnUdpUtpChosenAddress(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xD9C554", Offset = "0xD9C554", VA = "0xD9C554")]
		public void OnEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xD9C5E0", Offset = "0xD9C5E0", VA = "0xD9C5E0")]
		private void OnEstablishedBroadcast(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xD9C8D8", Offset = "0xD9C8D8", VA = "0xD9C8D8")]
		public void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xD9CA14", Offset = "0xD9CA14", VA = "0xD9CA14")]
		public void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xD9CB50", Offset = "0xD9CB50", VA = "0xD9CB50")]
		public void OnRxSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xD9CE08", Offset = "0xD9CE08", VA = "0xD9CE08")]
		public void OnRxTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0xD9CFF4", Offset = "0xD9CFF4", VA = "0xD9CFF4")]
		public void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0xD9D130", Offset = "0xD9D130", VA = "0xD9D130")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0xD9D134", Offset = "0xD9D134", VA = "0xD9D134")]
		private Type[] GetIceAgentTypes()
		{
			return null;
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0xD9D26C", Offset = "0xD9D26C", VA = "0xD9D26C")]
		public static IceAgentAttribute GetIceCustomAttribute([NotNull] Type iceAgentType)
		{
			return null;
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0xD99AAC", Offset = "0xD99AAC", VA = "0xD99AAC")]
		private HashSet<Type> GetUsedAgentsTypes(ConnectionsType connectionsType)
		{
			return null;
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0xD9862C", Offset = "0xD9862C", VA = "0xD9862C")]
		private void DebugLog(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0xD98914", Offset = "0xD98914", VA = "0xD98914")]
		private void DebugLogWarning(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0xD99320", Offset = "0xD99320", VA = "0xD99320")]
		private void DebugLogError(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0xD9D49C", Offset = "0xD9D49C", VA = "0xD9D49C")]
		public ICEProcess()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class NodeStatus
	{
		[Token(Token = "0x20006ED")]
		public enum NodeStatusState
		{
			[Token(Token = "0x40026E4")]
			None,
			[Token(Token = "0x40026E5")]
			Testing,
			[Token(Token = "0x40026E6")]
			Connected,
			[Token(Token = "0x40026E7")]
			Fail
		}

		[Token(Token = "0x20006EE")]
		public class EstablishMessage
		{
			[Token(Token = "0x40026E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AgentType type;

			[Token(Token = "0x40026E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object data;

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xD9DF8C", Offset = "0xD9DF8C", VA = "0xD9DF8C")]
			public EstablishMessage()
			{
			}
		}

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NodeStatusState state;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IceAgent agent;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P2PNode p2PNode;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NodeAnalyzeReport report;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EstablishMessage establishMessage;

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0xD9DDE8", Offset = "0xD9DDE8", VA = "0xD9DDE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0xD9DF84", Offset = "0xD9DF84", VA = "0xD9DF84")]
		public NodeStatus()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	public interface ISignalingServer
	{
		[Token(Token = "0x60028AB")]
		void SendHostAddresses(string[] addresses);

		[Token(Token = "0x60028AC")]
		void SendReflexiveAddresses(ReflexiveAddress[] addresses);

		[Token(Token = "0x60028AD")]
		void SendRelayedAddresses(string[] addresses);

		[Token(Token = "0x60028AE")]
		void SendNoConnectivity();

		[Token(Token = "0x60028AF")]
		void SendIceTimeout();

		[Token(Token = "0x60028B0")]
		void SendUdpUtpChosenAddress(AgentType type, object data);

		[Token(Token = "0x60028B1")]
		void SendEstablished(AgentType type, object data);

		[Token(Token = "0x60028B2")]
		void SendEndIce(AgentType type, object data);

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0xD9DF94", Offset = "0xD9DF94", VA = "0xD9DF94", Slot = "8")]
		void SendEndIce()
		{
		}

		[Token(Token = "0x60028B4")]
		void SendSuccessfulTest(AgentType type, object data);

		[Token(Token = "0x60028B5")]
		void SendTestsDone(AgentType type);

		[Token(Token = "0x60028B6")]
		void SendUdpUtpStatus(UdpUtpResultStatus result);
	}
}
namespace Multiplayer.ICE.Agents
{
	[Token(Token = "0x20006F0")]
	public enum AgentType
	{
		[Token(Token = "0x40026EB")]
		None = 0,
		[Token(Token = "0x40026EC")]
		UtpUdp = 1,
		[Token(Token = "0x40026ED")]
		UnityRelay = 101,
		[Token(Token = "0x40026EE")]
		UnityQosRelay = 102,
		[Token(Token = "0x40026EF")]
		NativeP2P = 201
	}
	[Token(Token = "0x20006F1")]
	public abstract class IceAgent : MonoBehaviour, IDisposable
	{
		[Token(Token = "0x20006F2")]
		public delegate void OnNodeConnectedDelegate(NodeStatus arguments);

		[Token(Token = "0x20006F3")]
		public abstract class EstablishData
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xD9F2E0", Offset = "0xD9F2E0", VA = "0xD9F2E0")]
			protected EstablishData()
			{
			}
		}

		[Token(Token = "0x20006F5")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x4002704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IceAgent <>4__this;

			[Token(Token = "0x4002705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public P2PNode node;

			[Token(Token = "0x4002706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long[] rxTimes;

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xD9F3A0", Offset = "0xD9F3A0", VA = "0xD9F3A0")]
			public <>c__DisplayClass67_0()
			{
			}
		}

		[Token(Token = "0x20006F7")]
		[CompilerGenerated]
		private sealed class <AnalyzeNodeCo>d__67 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400270A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400270B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IceAgent <>4__this;

			[Token(Token = "0x400270C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public P2PNode node;

			[Token(Token = "0x400270D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass67_0 <>8__1;

			[Token(Token = "0x400270E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<NodeAnalyzeReport> onDisqualified;

			[Token(Token = "0x400270F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<NodeAnalyzeReport> onDone;

			[Token(Token = "0x4002710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private long[] <txTimes>5__2;

			[Token(Token = "0x4002711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <p>5__3;

			[Token(Token = "0x170006AD")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0xD9FECC", Offset = "0xD9FECC", VA = "0xD9FECC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0xD9FF14", Offset = "0xD9FF14", VA = "0xD9FF14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xD9F084", Offset = "0xD9F084", VA = "0xD9F084")]
			[DebuggerHidden]
			public <AnalyzeNodeCo>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xD9F504", Offset = "0xD9F504", VA = "0xD9F504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xD9F508", Offset = "0xD9F508", VA = "0xD9F508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xD9FED4", Offset = "0xD9FED4", VA = "0xD9FED4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<P2PNode, NodeStatus> _p2pToStaus;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoroutineHandle _analyzeAndConcludeCo;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ICEProcess _iceProcess;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ISignalingServer _signalingServer;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ICESettings _iceSettings;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly Stopwatch _stopwatch;

		[Token(Token = "0x40026FB")]
		private const string COLON_SEPARATOR = ":";

		[Token(Token = "0x40026FC")]
		private const string STUN_REQUEST_HEADER = "stun-req";

		[Token(Token = "0x40026FD")]
		private const string STUN_RESPONSE_HEADER = "stun-res";

		[Token(Token = "0x40026FE")]
		protected const string STUN_UBIK_ID = "Ubik";

		[Token(Token = "0x170006A7")]
		public bool ImplementsHost
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xD9A5B8", Offset = "0xD9A5B8", VA = "0xD9A5B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A8")]
		public bool ImplementsClient
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xD9A4BC", Offset = "0xD9A4BC", VA = "0xD9A4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A9")]
		public abstract Type EstablishType
		{
			[Token(Token = "0x60028C8")]
			get;
		}

		[Token(Token = "0x170006AA")]
		public virtual Type TestData
		{
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0xD9E7EC", Offset = "0xD9E7EC", VA = "0xD9E7EC", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AB")]
		public IceAgentAttribute AgentAttribute
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xD9C234", Offset = "0xD9C234", VA = "0xD9C234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AC")]
		public bool Disposed
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0xD9E814", Offset = "0xD9E814", VA = "0xD9E814")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xD9E81C", Offset = "0xD9E81C", VA = "0xD9E81C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event Action<IceAgent, NodeStatus> onNodeConnectionFailed
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xD9A0BC", Offset = "0xD9A0BC", VA = "0xD9A0BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0xD99270", Offset = "0xD99270", VA = "0xD99270")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event OnNodeConnectedDelegate onNodeConnected
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xD9A020", Offset = "0xD9A020", VA = "0xD9A020")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xD991D4", Offset = "0xD991D4", VA = "0xD991D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event Action<NodeStatus> onNodeInitStatus
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xD99F70", Offset = "0xD99F70", VA = "0xD99F70")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xD98FE8", Offset = "0xD98FE8", VA = "0xD98FE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0xD9E034", Offset = "0xD9E034", VA = "0xD9E034")]
		protected NodeStatus InitNodeStatus([NotNull] P2PNode node, [Optional][CanBeNull] EstablishData establishData)
		{
			return null;
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xD9E1E0", Offset = "0xD9E1E0", VA = "0xD9E1E0")]
		protected void SetEstablishedDataOnNode([NotNull] P2PNode node, EstablishData establishData)
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0xD9E224", Offset = "0xD9E224", VA = "0xD9E224")]
		public NodeStatus StatusOfNode(P2PNode node)
		{
			return null;
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0xD9E27C", Offset = "0xD9E27C", VA = "0xD9E27C", Slot = "5")]
		protected virtual void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xD9E2C0", Offset = "0xD9E2C0", VA = "0xD9E2C0", Slot = "6")]
		protected virtual void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0xD9E308", Offset = "0xD9E308", VA = "0xD9E308", Slot = "7")]
		protected virtual void OnAgentConnectionFailed()
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0xD9E3D0", Offset = "0xD9E3D0", VA = "0xD9E3D0")]
		protected void StartAnalyzeNode(P2PNode node, [Optional] Action<P2PNode> onDone, [Optional] Action<P2PNode> onDisqualified)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xD9E640", Offset = "0xD9E640", VA = "0xD9E640", Slot = "8")]
		protected virtual void OnAnalyzeNodeDisqualified(P2PNode node)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0xD9E7E0", Offset = "0xD9E7E0", VA = "0xD9E7E0", Slot = "9")]
		protected virtual void OnAnalyzeNodeDone(P2PNode node)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xD9E150", Offset = "0xD9E150", VA = "0xD9E150")]
		protected NodeStatus.EstablishMessage EstablishMessageOfData(EstablishData establishData)
		{
			return null;
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xD9A16C", Offset = "0xD9A16C", VA = "0xD9A16C")]
		public void InjectDependencies(ICEProcess iceProcess, ISignalingServer signalingServer, ICESettings iceSettings)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0xD9E7F4", Offset = "0xD9E7F4", VA = "0xD9E7F4", Slot = "12")]
		public virtual void WarmUp()
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xD9E7F8", Offset = "0xD9E7F8", VA = "0xD9E7F8", Slot = "13")]
		public virtual void EstablishConnection()
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xD9E828", Offset = "0xD9E828", VA = "0xD9E828", Slot = "14")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xD9E8E4", Offset = "0xD9E8E4", VA = "0xD9E8E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xD9E934", Offset = "0xD9E934", VA = "0xD9E934")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xD9E944", Offset = "0xD9E944", VA = "0xD9E944")]
		private static string stun_req_msg(string id)
		{
			return null;
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xD9E990", Offset = "0xD9E990", VA = "0xD9E990")]
		private static string stun_res_msg(string id)
		{
			return null;
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xD9E9DC", Offset = "0xD9E9DC", VA = "0xD9E9DC")]
		protected static void SendStunRequest(P2PNode node, string id)
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xD9EADC", Offset = "0xD9EADC", VA = "0xD9EADC")]
		protected void SendStunResponse(P2PNode node, string id)
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0xD9EBDC", Offset = "0xD9EBDC", VA = "0xD9EBDC", Slot = "15")]
		public virtual void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0xD9EBE0", Offset = "0xD9EBE0", VA = "0xD9EBE0", Slot = "16")]
		public virtual void OnEstablished(object data)
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0xD9EBE4", Offset = "0xD9EBE4", VA = "0xD9EBE4", Slot = "17")]
		public virtual void OnEndIce([CanBeNull] object data)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xD9EBE8", Offset = "0xD9EBE8", VA = "0xD9EBE8", Slot = "18")]
		public virtual void OnRxSuccessfulTest(object data)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0xD9EBEC", Offset = "0xD9EBEC", VA = "0xD9EBEC", Slot = "19")]
		public virtual void OnRxTestsDone()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0xD9EBF0", Offset = "0xD9EBF0", VA = "0xD9EBF0", Slot = "20")]
		public virtual void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0xD9EBF4", Offset = "0xD9EBF4", VA = "0xD9EBF4", Slot = "21")]
		public virtual void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0xD9EBF8", Offset = "0xD9EBF8", VA = "0xD9EBF8", Slot = "22")]
		public virtual void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0xD9EBFC", Offset = "0xD9EBFC", VA = "0xD9EBFC")]
		public static ConnectionsType AgentTypeToConnectionsType(AgentType agentType)
		{
			return default(ConnectionsType);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0xD9ECBC", Offset = "0xD9ECBC", VA = "0xD9ECBC")]
		public static AgentType ConnectionsTypeToAgentType(ConnectionsType connectionsType)
		{
			return default(AgentType);
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0xD9ED60", Offset = "0xD9ED60", VA = "0xD9ED60")]
		protected void OnRxDataFromNode(P2PNode node, byte[] data, long[] rxTimes)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0xD9E580", Offset = "0xD9E580", VA = "0xD9E580")]
		[IteratorStateMachine(typeof(<AnalyzeNodeCo>d__67))]
		private IEnumerator<float> AnalyzeNodeCo(P2PNode node, Action<NodeAnalyzeReport> onDone, [Optional] Action<NodeAnalyzeReport> onDisqualified)
		{
			return null;
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0xD9E6B0", Offset = "0xD9E6B0", VA = "0xD9E6B0")]
		protected void DebugLog(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0xD9F0AC", Offset = "0xD9F0AC", VA = "0xD9F0AC")]
		protected void DebugLogWarning(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0xD9EF54", Offset = "0xD9EF54", VA = "0xD9EF54")]
		protected void DebugLogError(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xD9F1DC", Offset = "0xD9F1DC", VA = "0xD9F1DC")]
		protected IceAgent()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentAttribute : Attribute
	{
		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AgentType agentType;

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0xD9FF70", Offset = "0xD9FF70", VA = "0xD9FF70")]
		public IceAgentAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006F9")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentHostAttribute : IceAgentAttribute
	{
		[Token(Token = "0x60028FC")]
		[Address(RVA = "0xD9FF98", Offset = "0xD9FF98", VA = "0xD9FF98")]
		public IceAgentHostAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006FA")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentClientAttribute : IceAgentAttribute
	{
		[Token(Token = "0x60028FD")]
		[Address(RVA = "0xD9FFC0", Offset = "0xD9FFC0", VA = "0xD9FFC0")]
		public IceAgentClientAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class ICEAgentsList : MonoBehaviour
	{
		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IceAgent[] iceAgents;

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xD9FFE8", Offset = "0xD9FFE8", VA = "0xD9FFE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0xDA01C8", Offset = "0xDA01C8", VA = "0xDA01C8")]
		public ICEAgentsList()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	public abstract class NativePeerToPeerAgent : IceAgent
	{
		[Token(Token = "0x20006FE")]
		public class NativePeerToPeerEstablishData : EstablishData
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0xDA05A4", Offset = "0xDA05A4", VA = "0xDA05A4")]
			public NativePeerToPeerEstablishData()
			{
			}
		}

		[Token(Token = "0x2000700")]
		[CompilerGenerated]
		private sealed class <EstablishCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400271B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400271C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400271D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NativePeerToPeerAgent <>4__this;

			[Token(Token = "0x170006B0")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002912")]
				[Address(RVA = "0xDA0A90", Offset = "0xDA0A90", VA = "0xDA0A90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002914")]
				[Address(RVA = "0xDA0AD8", Offset = "0xDA0AD8", VA = "0xDA0AD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0xDA0750", Offset = "0xDA0750", VA = "0xDA0750")]
			[DebuggerHidden]
			public <EstablishCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002910")]
			[Address(RVA = "0xDA084C", Offset = "0xDA084C", VA = "0xDA084C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0xDA0850", Offset = "0xDA0850", VA = "0xDA0850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0xDA0A98", Offset = "0xDA0A98", VA = "0xDA0A98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected NativePeerToPeer _nativePeerToPeer;

		[Token(Token = "0x4002717")]
		protected const string CLIENT_CONNECTED_MESSAGE = "client-connected";

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CoroutineHandle _establishCo;

		[Token(Token = "0x170006AF")]
		public override Type EstablishType
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0xDA02C4", Offset = "0xDA02C4", VA = "0xDA02C4", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xDA0330", Offset = "0xDA0330", VA = "0xDA0330", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0xDA0448", Offset = "0xDA0448", VA = "0xDA0448")]
		private bool CanUseNativePlatformP2P()
		{
			return default(bool);
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xDA0620", Offset = "0xDA0620", VA = "0xDA0620", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0xDA05AC", Offset = "0xDA05AC", VA = "0xDA05AC")]
		[IteratorStateMachine(typeof(<EstablishCo>d__9))]
		private IEnumerator<float> EstablishCo()
		{
			return null;
		}

		[Token(Token = "0x6002908")]
		protected abstract void NativePeerToPeerOnConnected();

		[Token(Token = "0x6002909")]
		[Address(RVA = "0xDA0778", Offset = "0xDA0778", VA = "0xDA0778")]
		private void NativePeerToPeerOnFailedToConnect()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xDA0788", Offset = "0xDA0788", VA = "0xDA0788")]
		protected NativePeerToPeerAgent()
		{
		}
	}
	[Token(Token = "0x2000701")]
	[IceAgentClient(AgentType.NativeP2P)]
	public class NativePeerToPeerAgentClient : NativePeerToPeerAgent
	{
		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _connected;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action<byte[]> _stunResponderAction;

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xDA0B34", Offset = "0xDA0B34", VA = "0xDA0B34", Slot = "23")]
		protected override void NativePeerToPeerOnConnected()
		{
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xDA0C54", Offset = "0xDA0C54", VA = "0xDA0C54", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0xDA0C8C", Offset = "0xDA0C8C", VA = "0xDA0C8C", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xDA0D34", Offset = "0xDA0D34", VA = "0xDA0D34")]
		public NativePeerToPeerAgentClient()
		{
		}
	}
	[Token(Token = "0x2000702")]
	[IceAgentHost(AgentType.NativeP2P)]
	public class NativePeerToPeerAgentHost : NativePeerToPeerAgent
	{
		[Token(Token = "0x2000703")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool gotClientConnectedMessage;

			[Token(Token = "0x600291E")]
			[Address(RVA = "0xDA0EE8", Offset = "0xDA0EE8", VA = "0xDA0EE8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002920")]
			[Address(RVA = "0xDA0F70", Offset = "0xDA0F70", VA = "0xDA0F70")]
			internal bool <AnalyzeAfter>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000704")]
		[CompilerGenerated]
		private sealed class <AnalyzeAfter>d__3 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NativePeerToPeerAgentHost <>4__this;

			[Token(Token = "0x4002726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4002727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass3_0 <>8__1;

			[Token(Token = "0x170006B2")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002924")]
				[Address(RVA = "0xDA1194", Offset = "0xDA1194", VA = "0xDA1194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002926")]
				[Address(RVA = "0xDA11DC", Offset = "0xDA11DC", VA = "0xDA11DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002921")]
			[Address(RVA = "0xDA0E50", Offset = "0xDA0E50", VA = "0xDA0E50")]
			[DebuggerHidden]
			public <AnalyzeAfter>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002922")]
			[Address(RVA = "0xDA0F78", Offset = "0xDA0F78", VA = "0xDA0F78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002923")]
			[Address(RVA = "0xDA0F7C", Offset = "0xDA0F7C", VA = "0xDA0F7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002925")]
			[Address(RVA = "0xDA119C", Offset = "0xDA119C", VA = "0xDA119C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002720")]
		private const float WAIT_BEFORE_ANALYZE = 0.3f;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private CoroutineHandle _analyzeAfterCo;

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xDA0D54", Offset = "0xDA0D54", VA = "0xDA0D54", Slot = "23")]
		protected override void NativePeerToPeerOnConnected()
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xDA0DCC", Offset = "0xDA0DCC", VA = "0xDA0DCC")]
		[IteratorStateMachine(typeof(<AnalyzeAfter>d__3))]
		private IEnumerator<float> AnalyzeAfter(float seconds)
		{
			return null;
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xDA0E78", Offset = "0xDA0E78", VA = "0xDA0E78", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xDA0EE0", Offset = "0xDA0EE0", VA = "0xDA0EE0")]
		public NativePeerToPeerAgentHost()
		{
		}
	}
	[Token(Token = "0x2000705")]
	public class NodeAnalyzeReport
	{
		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint avgPingMs;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float dropRate;

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xDA1238", Offset = "0xDA1238", VA = "0xDA1238")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xDA123C", Offset = "0xDA123C", VA = "0xDA123C")]
		public bool IsBetterThan(NodeAnalyzeReport report)
		{
			return default(bool);
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xDA125C", Offset = "0xDA125C", VA = "0xDA125C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xDA1318", Offset = "0xDA1318", VA = "0xDA1318")]
		public NodeAnalyzeReport()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public abstract class UnityRelayIceAgent : IceAgent
	{
		[Token(Token = "0x2000707")]
		public class UnityRelayEstablishData : EstablishData
		{
			[Token(Token = "0x400272A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string joinCode;

			[Token(Token = "0x600292D")]
			[Address(RVA = "0xDA1394", Offset = "0xDA1394", VA = "0xDA1394")]
			public UnityRelayEstablishData()
			{
			}
		}

		[Token(Token = "0x170006B4")]
		public override Type EstablishType
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0xDA1320", Offset = "0xDA1320", VA = "0xDA1320", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xDA138C", Offset = "0xDA138C", VA = "0xDA138C")]
		protected UnityRelayIceAgent()
		{
		}
	}
	[Token(Token = "0x2000708")]
	[IceAgentClient(AgentType.UnityRelay)]
	public sealed class UnityRelayIceAgentClient : UnityRelayIceAgent
	{
		[Token(Token = "0x2000709")]
		private class SuppressedException : Exception
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0xDA1F18", Offset = "0xDA1F18", VA = "0xDA1F18")]
			public SuppressedException()
			{
			}

			[Token(Token = "0x6002939")]
			[Address(RVA = "0xDA1F70", Offset = "0xDA1F70", VA = "0xDA1F70")]
			public SuppressedException(string message)
			{
			}
		}

		[Token(Token = "0x200070A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400272D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityRelayIceAgentClient <>4__this;

			[Token(Token = "0x400272E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x600293A")]
			[Address(RVA = "0xDA1FD8", Offset = "0xDA1FD8", VA = "0xDA1FD8")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200070B")]
		[CompilerGenerated]
		private struct <JoinClient>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x400272F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayIceAgentClient <>4__this;

			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string relayJoinCode;

			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <errored>5__2;

			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600293C")]
			[Address(RVA = "0xDA200C", Offset = "0xDA200C", VA = "0xDA200C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0xDA2720", Offset = "0xDA2720", VA = "0xDA2720", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<RelayUtpClient> _testingClients;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly HashSet<Action<byte[]>> _relayReceiveDataListeners;

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xDA139C", Offset = "0xDA139C", VA = "0xDA139C", Slot = "22")]
		public override void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xDA13A0", Offset = "0xDA13A0", VA = "0xDA13A0")]
		private void JoinRelays(string[] relayedAddresses)
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0xDA1508", Offset = "0xDA1508", VA = "0xDA1508")]
		[AsyncStateMachine(typeof(<JoinClient>d__5))]
		private void JoinClient(RelayUtpClient relayClient, string relayJoinCode)
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xDA15F8", Offset = "0xDA15F8", VA = "0xDA15F8", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xDA1820", Offset = "0xDA1820", VA = "0xDA1820", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xDA1AB4", Offset = "0xDA1AB4", VA = "0xDA1AB4")]
		private void FailAllConnections()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xDA1C34", Offset = "0xDA1C34", VA = "0xDA1C34", Slot = "6")]
		protected override void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0xDA1E14", Offset = "0xDA1E14", VA = "0xDA1E14", Slot = "5")]
		protected override void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xDA1C60", Offset = "0xDA1C60", VA = "0xDA1C60")]
		private void RemoveListenersFromNode(P2PNode p2PNode)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xDA1E40", Offset = "0xDA1E40", VA = "0xDA1E40")]
		public UnityRelayIceAgentClient()
		{
		}
	}
	[Token(Token = "0x200070E")]
	[IceAgentHost(AgentType.UnityRelay)]
	public sealed class UnityRelayIceAgentHost : UnityRelayIceAgent
	{
		[StructLayout(3)]
		[Token(Token = "0x2000712")]
		[CompilerGenerated]
		private struct <CreateRelays>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4002749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400274A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400274B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayIceAgentHost <>4__this;

			[Token(Token = "0x400274C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<List<string>> <>u__1;

			[Token(Token = "0x600294E")]
			[Address(RVA = "0xDA37B4", Offset = "0xDA37B4", VA = "0xDA37B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0xDA3E88", Offset = "0xDA3E88", VA = "0xDA3E88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<string> _regions;

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xDA2794", Offset = "0xDA2794", VA = "0xDA2794", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xDA27B0", Offset = "0xDA27B0", VA = "0xDA27B0")]
		private void CreateRelaysAsync()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xDA27D0", Offset = "0xDA27D0", VA = "0xDA27D0")]
		[AsyncStateMachine(typeof(<CreateRelays>d__3))]
		private Task CreateRelays()
		{
			return null;
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xDA28BC", Offset = "0xDA28BC", VA = "0xDA28BC")]
		private void SendRelayAddress(RelayUtpHost relayUtpHost)
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xDA29F0", Offset = "0xDA29F0", VA = "0xDA29F0", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xDA2A6C", Offset = "0xDA2A6C", VA = "0xDA2A6C")]
		public UnityRelayIceAgentHost()
		{
		}
	}
	[Token(Token = "0x2000713")]
	[IceAgent(AgentType.UnityQosRelay)]
	public class UnityRelayQosIceAgent : IceAgent
	{
		[Token(Token = "0x2000714")]
		public class UnityRelayEstablishData : EstablishData
		{
			[Token(Token = "0x4002753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string joinCode;

			[Token(Token = "0x6002965")]
			[Address(RVA = "0xDA4648", Offset = "0xDA4648", VA = "0xDA4648")]
			public UnityRelayEstablishData()
			{
			}
		}

		[Token(Token = "0x2000715")]
		private class SuppressedException : Exception
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xDA542C", Offset = "0xDA542C", VA = "0xDA542C")]
			public SuppressedException(string message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000716")]
		[CompilerGenerated]
		private struct <AllocateQosRelay>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4002756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private long <ms>5__2;

			[Token(Token = "0x4002758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <chosenRegion>5__3;

			[Token(Token = "0x4002759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400275A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6002967")]
			[Address(RVA = "0xDA5494", Offset = "0xDA5494", VA = "0xDA5494", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002968")]
			[Address(RVA = "0xDA59C4", Offset = "0xDA59C4", VA = "0xDA59C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000717")]
		[CompilerGenerated]
		private struct <JoinClient>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x400275B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400275C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400275D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x400275E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string joinCode;

			[Token(Token = "0x400275F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x4002760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <errored>5__2;

			[Token(Token = "0x4002761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002969")]
			[Address(RVA = "0xDA5A1C", Offset = "0xDA5A1C", VA = "0xDA5A1C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600296A")]
			[Address(RVA = "0xDA60BC", Offset = "0xDA60BC", VA = "0xDA60BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000718")]
		[CompilerGenerated]
		private struct <EstablishClient>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4002762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x600296B")]
			[Address(RVA = "0xDA6114", Offset = "0xDA6114", VA = "0xDA6114", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600296C")]
			[Address(RVA = "0xDA64B0", Offset = "0xDA64B0", VA = "0xDA64B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000719")]
		[CompilerGenerated]
		private struct <JoinClientAndServeAsStunResponder>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4002766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x400276A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string relayJoinCode;

			[Token(Token = "0x400276B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x600296D")]
			[Address(RVA = "0xDA64BC", Offset = "0xDA64BC", VA = "0xDA64BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600296E")]
			[Address(RVA = "0xDA66CC", Offset = "0xDA66CC", VA = "0xDA66CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200071B")]
		[CompilerGenerated]
		private struct <EstablishHost>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x400276E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400276F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x4002772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002971")]
			[Address(RVA = "0xDA6704", Offset = "0xDA6704", VA = "0xDA6704", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002972")]
			[Address(RVA = "0xDA6B50", Offset = "0xDA6B50", VA = "0xDA6B50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200071C")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RelayUtpHost relayHost;

			[Token(Token = "0x4002775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool analyzeStarted;

			[Token(Token = "0x6002973")]
			[Address(RVA = "0xDA6B5C", Offset = "0xDA6B5C", VA = "0xDA6B5C")]
			public <>c__DisplayClass27_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200071D")]
		[CompilerGenerated]
		private struct <TestRelayHostWhenClientConnected>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x4002779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RelayUtpHost relayHost;

			[Token(Token = "0x400277A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass27_0 <>8__1;

			[Token(Token = "0x400277B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002975")]
			[Address(RVA = "0xDA6C30", Offset = "0xDA6C30", VA = "0xDA6C30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002976")]
			[Address(RVA = "0xDA709C", Offset = "0xDA709C", VA = "0xDA709C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200071E")]
		[CompilerGenerated]
		private struct <JoinClientAndAnalyze>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x400277C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400277D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400277E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x400277F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x4002780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string joinCode;

			[Token(Token = "0x4002781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002977")]
			[Address(RVA = "0xDA70A8", Offset = "0xDA70A8", VA = "0xDA70A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002978")]
			[Address(RVA = "0xDA72C4", Offset = "0xDA72C4", VA = "0xDA72C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400274D")]
		private const int MAX_CONNECTIONS = 2;

		[Token(Token = "0x400274E")]
		private const float ALLOCATION_TIMEOUT = 10f;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RelayUtpHost _relayUtpHost;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RelayUtpClient _relayUtpClient;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Task<string> _allocateQosRelayTask;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Action<byte[]>> _relayReceiveDataListeners;

		[Token(Token = "0x170006B5")]
		public override Type EstablishType
		{
			[Token(Token = "0x6002951")]
			[Address(RVA = "0xDA3F2C", Offset = "0xDA3F2C", VA = "0xDA3F2C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xDA3E94", Offset = "0xDA3E94", VA = "0xDA3E94")]
		private RelayUtpBase RelayOfJoinCode(string relayJoinCode)
		{
			return null;
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xDA3F98", Offset = "0xDA3F98", VA = "0xDA3F98", Slot = "12")]
		public override void WarmUp()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xDA4164", Offset = "0xDA4164", VA = "0xDA4164", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xDA4054", Offset = "0xDA4054", VA = "0xDA4054")]
		[AsyncStateMachine(typeof(<AllocateQosRelay>d__11))]
		private Task<string> AllocateQosRelay()
		{
			return null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xDA4410", Offset = "0xDA4410", VA = "0xDA4410")]
		[AsyncStateMachine(typeof(<JoinClient>d__13))]
		private Task<bool> JoinClient(RelayUtpClient relayClient, string joinCode)
		{
			return null;
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xDA4558", Offset = "0xDA4558", VA = "0xDA4558", Slot = "22")]
		public override void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xDA4828", Offset = "0xDA4828", VA = "0xDA4828", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xDA4358", Offset = "0xDA4358", VA = "0xDA4358")]
		[AsyncStateMachine(typeof(<EstablishClient>d__16))]
		private void EstablishClient()
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xDA473C", Offset = "0xDA473C", VA = "0xDA473C")]
		[AsyncStateMachine(typeof(<JoinClientAndServeAsStunResponder>d__17))]
		private void JoinClientAndServeAsStunResponder(RelayUtpClient relayClient, string relayJoinCode)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xDA48B4", Offset = "0xDA48B4", VA = "0xDA48B4")]
		private void ServeAsStunResponder(P2PNode node)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xDA4AB8", Offset = "0xDA4AB8", VA = "0xDA4AB8", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xDA4C20", Offset = "0xDA4C20", VA = "0xDA4C20", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xDA5064", Offset = "0xDA5064", VA = "0xDA5064")]
		private void FailAllConnections()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xDA5094", Offset = "0xDA5094", VA = "0xDA5094", Slot = "6")]
		protected override void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xDA5274", Offset = "0xDA5274", VA = "0xDA5274", Slot = "5")]
		protected override void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xDA50C0", Offset = "0xDA50C0", VA = "0xDA50C0")]
		private void RemoveListenersFromNode(P2PNode p2PNode)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xDA42A4", Offset = "0xDA42A4", VA = "0xDA42A4")]
		[AsyncStateMachine(typeof(<EstablishHost>d__26))]
		private void EstablishHost()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xDA52A0", Offset = "0xDA52A0", VA = "0xDA52A0")]
		[AsyncStateMachine(typeof(<TestRelayHostWhenClientConnected>d__27))]
		private Task TestRelayHostWhenClientConnected(RelayUtpHost relayHost)
		{
			return null;
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xDA4650", Offset = "0xDA4650", VA = "0xDA4650")]
		[AsyncStateMachine(typeof(<JoinClientAndAnalyze>d__28))]
		private void JoinClientAndAnalyze(RelayUtpClient relayClient, string joinCode)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xDA53A0", Offset = "0xDA53A0", VA = "0xDA53A0")]
		public UnityRelayQosIceAgent()
		{
		}
	}
	[Token(Token = "0x200071F")]
	public abstract class UtpUdpIceAgent : IceAgent
	{
		[Token(Token = "0x2000720")]
		protected class CandidateTestStatus
		{
			[Token(Token = "0x2000721")]
			public enum TestsStatus
			{
				[Token(Token = "0x400278C")]
				None,
				[Token(Token = "0x400278D")]
				Testing,
				[Token(Token = "0x400278E")]
				Success,
				[Token(Token = "0x400278F")]
				Fail
			}

			[Token(Token = "0x4002787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IPEndPoint local;

			[Token(Token = "0x4002788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint remote;

			[Token(Token = "0x4002789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TestsStatus status;

			[Token(Token = "0x400278A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NodeAnalyzeReport analyzeReport;

			[Token(Token = "0x170006B8")]
			public bool IsClientTest
			{
				[Token(Token = "0x600298E")]
				[Address(RVA = "0xDA8998", Offset = "0xDA8998", VA = "0xDA8998")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600298F")]
				[Address(RVA = "0xDA89A0", Offset = "0xDA89A0", VA = "0xDA89A0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x170006B9")]
			public bool Done
			{
				[Token(Token = "0x6002990")]
				[Address(RVA = "0xDA89AC", Offset = "0xDA89AC", VA = "0xDA89AC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002991")]
			[Address(RVA = "0xDA7358", Offset = "0xDA7358", VA = "0xDA7358")]
			public static CandidateTestStatus NewTestingStatus(IPEndPoint local, IPEndPoint remote, bool isClientTest)
			{
				return null;
			}

			[Token(Token = "0x6002992")]
			[Address(RVA = "0xDA89C8", Offset = "0xDA89C8", VA = "0xDA89C8", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6002993")]
			[Address(RVA = "0xDA89C0", Offset = "0xDA89C0", VA = "0xDA89C0")]
			public CandidateTestStatus()
			{
			}
		}

		[Token(Token = "0x2000722")]
		public class UtpUdpEstablishData : EstablishData
		{
			[Token(Token = "0x4002790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string local;

			[Token(Token = "0x4002791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string remote;

			[Token(Token = "0x4002792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool clientIsHost;

			[Token(Token = "0x6002994")]
			[Address(RVA = "0xDA8B44", Offset = "0xDA8B44", VA = "0xDA8B44")]
			public UtpUdpEstablishData()
			{
			}
		}

		[Token(Token = "0x2000723")]
		protected class UtpUdpTestResultData
		{
			[Token(Token = "0x4002793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UtpUdpEstablishData establishData;

			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NodeAnalyzeReport analyzeReport;

			[Token(Token = "0x6002995")]
			[Address(RVA = "0xDA8B4C", Offset = "0xDA8B4C", VA = "0xDA8B4C")]
			public UtpUdpTestResultData()
			{
			}
		}

		[Token(Token = "0x2000726")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400279F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int addressesResponses;

			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ReflexiveAddress> addresses;

			[Token(Token = "0x40027A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgent <>4__this;

			[Token(Token = "0x60029A2")]
			[Address(RVA = "0xDA8E98", Offset = "0xDA8E98", VA = "0xDA8E98")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60029A4")]
			[Address(RVA = "0xDA8EB0", Offset = "0xDA8EB0", VA = "0xDA8EB0")]
			internal bool <DetectReflexiveAddressesCo>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000728")]
		[CompilerGenerated]
		private sealed class <DetectReflexiveAddressesCo>d__20 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40027A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgent <>4__this;

			[Token(Token = "0x40027A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass20_0 <>8__1;

			[Token(Token = "0x170006BA")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60029AB")]
				[Address(RVA = "0xDA9624", Offset = "0xDA9624", VA = "0xDA9624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029AD")]
				[Address(RVA = "0xDA966C", Offset = "0xDA966C", VA = "0xDA966C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029A8")]
			[Address(RVA = "0xDA8298", Offset = "0xDA8298", VA = "0xDA8298")]
			[DebuggerHidden]
			public <DetectReflexiveAddressesCo>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60029A9")]
			[Address(RVA = "0xDA9070", Offset = "0xDA9070", VA = "0xDA9070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029AA")]
			[Address(RVA = "0xDA9074", Offset = "0xDA9074", VA = "0xDA9074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xDA962C", Offset = "0xDA962C", VA = "0xDA962C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002782")]
		protected const float IP_COOLDOWN = 1f;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly List<IceCandidate> _candidates;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected readonly HashSet<CandidateTestStatus> _candidateTestStatus;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CoroutineHandle _detectReflexiveAddressesCo;

		[Token(Token = "0x170006B6")]
		public override Type EstablishType
		{
			[Token(Token = "0x600297F")]
			[Address(RVA = "0xDA77B8", Offset = "0xDA77B8", VA = "0xDA77B8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B7")]
		public override Type TestData
		{
			[Token(Token = "0x6002980")]
			[Address(RVA = "0xDA7824", Offset = "0xDA7824", VA = "0xDA7824", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xDA72D0", Offset = "0xDA72D0", VA = "0xDA72D0")]
		private CandidateTestStatus AddNewCandidateStatus(IPEndPoint local, IPEndPoint remote, bool isClientsTest)
		{
			return null;
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xDA73F8", Offset = "0xDA73F8", VA = "0xDA73F8")]
		protected CandidateTestStatus AddNewCandidateStatusHost(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xDA7400", Offset = "0xDA7400", VA = "0xDA7400")]
		protected CandidateTestStatus AddNewCandidateStatusClient(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xDA7408", Offset = "0xDA7408", VA = "0xDA7408")]
		protected CandidateTestStatus StatusOfPair((IPEndPoint host, IPEndPoint remote) pair)
		{
			return null;
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xDA74FC", Offset = "0xDA74FC", VA = "0xDA74FC", Slot = "23")]
		protected virtual bool AllTestsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xDA7600", Offset = "0xDA7600", VA = "0xDA7600")]
		protected void CleanupUnusedCandidates()
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xDA7890", Offset = "0xDA7890", VA = "0xDA7890", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xDA7D84", Offset = "0xDA7D84", VA = "0xDA7D84")]
		private static IEnumerable<IPAddress> GetHostAddresses()
		{
			return null;
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xDA790C", Offset = "0xDA790C", VA = "0xDA790C")]
		private bool CreateUdpCandidates()
		{
			return default(bool);
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xDA8224", Offset = "0xDA8224", VA = "0xDA8224")]
		[IteratorStateMachine(typeof(<DetectReflexiveAddressesCo>d__20))]
		private IEnumerator<float> DetectReflexiveAddressesCo()
		{
			return null;
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xDA82C0", Offset = "0xDA82C0", VA = "0xDA82C0")]
		protected IPEndPoint GetCandidateHostAddress(IPEndPoint address)
		{
			return null;
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xDA7ADC", Offset = "0xDA7ADC", VA = "0xDA7ADC")]
		private void SendHostIpAddresses()
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0xDA8490", Offset = "0xDA8490", VA = "0xDA8490", Slot = "21")]
		public override void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xDA852C", Offset = "0xDA852C", VA = "0xDA852C")]
		private bool RemoteHostAddressMatchesOwn(IPEndPoint remoteHostAddress)
		{
			return default(bool);
		}

		[Token(Token = "0x6002989")]
		protected abstract void AddRemoteHostAddress(IPEndPoint hostAddress);

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xDA8618", Offset = "0xDA8618", VA = "0xDA8618", Slot = "20")]
		public override void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x600298B")]
		protected abstract void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress);

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xDA86BC", Offset = "0xDA86BC", VA = "0xDA86BC", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0xDA88C0", Offset = "0xDA88C0", VA = "0xDA88C0")]
		protected UtpUdpIceAgent()
		{
		}
	}
	[Token(Token = "0x200072A")]
	[IceAgentClient(AgentType.UtpUdp)]
	public class UtpUdpIceAgentClient : UtpUdpIceAgent
	{
		[Token(Token = "0x200072D")]
		[CompilerGenerated]
		private sealed class <OnBestStatusClientCo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgentClient <>4__this;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint local;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IPEndPoint remote;

			[Token(Token = "0x170006BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C6")]
				[Address(RVA = "0xDAA700", Offset = "0xDAA700", VA = "0xDAA700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C8")]
				[Address(RVA = "0xDAA748", Offset = "0xDAA748", VA = "0xDAA748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C3")]
			[Address(RVA = "0xDAA478", Offset = "0xDAA478", VA = "0xDAA478")]
			[DebuggerHidden]
			public <OnBestStatusClientCo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0xDAA5E8", Offset = "0xDAA5E8", VA = "0xDAA5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C5")]
			[Address(RVA = "0xDAA5EC", Offset = "0xDAA5EC", VA = "0xDAA5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C7")]
			[Address(RVA = "0xDAA708", Offset = "0xDAA708", VA = "0xDAA708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200072E")]
		[CompilerGenerated]
		private sealed class <OnBestStatusHostCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgentClient <>4__this;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint local;

			[Token(Token = "0x170006BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029CC")]
				[Address(RVA = "0xDAAA00", Offset = "0xDAAA00", VA = "0xDAAA00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CE")]
				[Address(RVA = "0xDAAA48", Offset = "0xDAAA48", VA = "0xDAAA48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C9")]
			[Address(RVA = "0xDAA4A0", Offset = "0xDAA4A0", VA = "0xDAA4A0")]
			[DebuggerHidden]
			public <OnBestStatusHostCo>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xDAA750", Offset = "0xDAA750", VA = "0xDAA750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029CB")]
			[Address(RVA = "0xDAA754", Offset = "0xDAA754", VA = "0xDAA754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CD")]
			[Address(RVA = "0xDAAA08", Offset = "0xDAAA08", VA = "0xDAAA08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UdpUtpBase _udpUtpNode;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _reflexiveAddressMessageArrived;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _concludeDoneTestsCount;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _utpConnected;

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xDA96EC", Offset = "0xDA96EC", VA = "0xDA96EC", Slot = "24")]
		protected override void AddRemoteHostAddress(IPEndPoint hostAddress)
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0xDA9950", Offset = "0xDA9950", VA = "0xDA9950", Slot = "20")]
		public override void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xDA995C", Offset = "0xDA995C", VA = "0xDA995C", Slot = "25")]
		protected override void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xDA9BC0", Offset = "0xDA9BC0", VA = "0xDA9BC0")]
		private void OnTestConnectivityResult(CandidateTestStatus stat, NodeAnalyzeReport report, bool success)
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xDA9F4C", Offset = "0xDA9F4C", VA = "0xDA9F4C", Slot = "23")]
		protected override bool AllTestsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xDA9D88", Offset = "0xDA9D88", VA = "0xDA9D88")]
		private void ConcludeDoneTests()
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0xDA9F78", Offset = "0xDA9F78", VA = "0xDA9F78", Slot = "15")]
		public override void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0xDAA3D4", Offset = "0xDAA3D4", VA = "0xDAA3D4")]
		[IteratorStateMachine(typeof(<OnBestStatusClientCo>d__10))]
		private IEnumerator OnBestStatusClientCo(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xDAA344", Offset = "0xDAA344", VA = "0xDAA344")]
		[IteratorStateMachine(typeof(<OnBestStatusHostCo>d__11))]
		private IEnumerator OnBestStatusHostCo(IPEndPoint local)
		{
			return null;
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xDAA4C8", Offset = "0xDAA4C8", VA = "0xDAA4C8")]
		private void OnUtpNodeDisconnected()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xDAA4D8", Offset = "0xDAA4D8", VA = "0xDAA4D8")]
		private void OnUtpNodeConnected()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xDAA4E4", Offset = "0xDAA4E4", VA = "0xDAA4E4", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xDAA55C", Offset = "0xDAA55C", VA = "0xDAA55C", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xDAA574", Offset = "0xDAA574", VA = "0xDAA574", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xDAA594", Offset = "0xDAA594", VA = "0xDAA594")]
		public UtpUdpIceAgentClient()
		{
		}
	}
	[Token(Token = "0x200072F")]
	[IceAgentHost(AgentType.UtpUdp)]
	public class UtpUdpIceAgentHost : UtpUdpIceAgent
	{
		[Token(Token = "0x2000733")]
		[CompilerGenerated]
		private sealed class <OnBestStatusClientCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40027C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgentHost <>4__this;

			[Token(Token = "0x40027C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint localHostAddress;

			[Token(Token = "0x40027CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint remoteReflexiveAddress;

			[Token(Token = "0x170006C0")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60029EA")]
				[Address(RVA = "0xDAC288", Offset = "0xDAC288", VA = "0xDAC288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029EC")]
				[Address(RVA = "0xDAC2D0", Offset = "0xDAC2D0", VA = "0xDAC2D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029E7")]
			[Address(RVA = "0xDABE90", Offset = "0xDABE90", VA = "0xDABE90")]
			[DebuggerHidden]
			public <OnBestStatusClientCo>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xDAC0B4", Offset = "0xDAC0B4", VA = "0xDAC0B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029E9")]
			[Address(RVA = "0xDAC0B8", Offset = "0xDAC0B8", VA = "0xDAC0B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029EB")]
			[Address(RVA = "0xDAC290", Offset = "0xDAC290", VA = "0xDAC290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000734")]
		[CompilerGenerated]
		private sealed class <OnBestStatusHostCo>d__16 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40027CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgentHost <>4__this;

			[Token(Token = "0x40027CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint localHostAddress;

			[Token(Token = "0x40027CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UtpUdpEstablishData data;

			[Token(Token = "0x170006C2")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60029F0")]
				[Address(RVA = "0xDAC5A8", Offset = "0xDAC5A8", VA = "0xDAC5A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F2")]
				[Address(RVA = "0xDAC5F0", Offset = "0xDAC5F0", VA = "0xDAC5F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029ED")]
			[Address(RVA = "0xDABEB8", Offset = "0xDABEB8", VA = "0xDABEB8")]
			[DebuggerHidden]
			public <OnBestStatusHostCo>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xDAC32C", Offset = "0xDAC32C", VA = "0xDAC32C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xDAC330", Offset = "0xDAC330", VA = "0xDAC330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xDAC5B0", Offset = "0xDAC5B0", VA = "0xDAC5B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UdpUtpBase _udpUtpNode;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _clientTestsDone;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _clientAsUtpHostReady;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private CoroutineHandle _onBestStatusClientCo;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CoroutineHandle _onBestStatusHostCo;

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xDAAA50", Offset = "0xDAAA50", VA = "0xDAAA50", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xDAAAC8", Offset = "0xDAAAC8", VA = "0xDAAAC8", Slot = "21")]
		public override void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xDAAAF8", Offset = "0xDAAAF8", VA = "0xDAAAF8", Slot = "24")]
		protected override void AddRemoteHostAddress(IPEndPoint hostAddress)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xDAAD5C", Offset = "0xDAAD5C", VA = "0xDAAD5C", Slot = "25")]
		protected override void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xDAAFD8", Offset = "0xDAAFD8", VA = "0xDAAFD8")]
		private void OnTestConnectivityResult(CandidateTestStatus stat, bool success, NodeAnalyzeReport report)
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xDAB428", Offset = "0xDAB428", VA = "0xDAB428", Slot = "18")]
		public override void OnRxSuccessfulTest(object data)
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xDAB570", Offset = "0xDAB570", VA = "0xDAB570", Slot = "19")]
		public override void OnRxTestsDone()
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0xDAB030", Offset = "0xDAB030", VA = "0xDAB030")]
		private void ConcludeTestsDone()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xDAB6C4", Offset = "0xDAB6C4", VA = "0xDAB6C4")]
		private void OnBestStatus(CandidateTestStatus bestStatus)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xDABE84", Offset = "0xDABE84", VA = "0xDABE84", Slot = "15")]
		public override void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xDABD3C", Offset = "0xDABD3C", VA = "0xDABD3C")]
		[IteratorStateMachine(typeof(<OnBestStatusClientCo>d__14))]
		private IEnumerator<float> OnBestStatusClientCo(IPEndPoint localHostAddress, IPEndPoint remoteReflexiveAddress)
		{
			return null;
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xDABDE0", Offset = "0xDABDE0", VA = "0xDABDE0")]
		[IteratorStateMachine(typeof(<OnBestStatusHostCo>d__16))]
		private IEnumerator<float> OnBestStatusHostCo(IPEndPoint localHostAddress, UtpUdpEstablishData data)
		{
			return null;
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xDABC54", Offset = "0xDABC54", VA = "0xDABC54")]
		private void OnUtpNodeDisconnected()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xDABEE0", Offset = "0xDABEE0", VA = "0xDABEE0")]
		private void OnUtpNodeConnected()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xDABF9C", Offset = "0xDABF9C", VA = "0xDABF9C")]
		public UtpUdpIceAgentHost()
		{
		}
	}
}
namespace Multiplayer.Tests
{
	[Token(Token = "0x2000735")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceInviteEachOtherTest")]
	public class AcceptanceInviteEachOtherTest : LobbyistTest
	{
		[Token(Token = "0x170006C4")]
		public override string title
		{
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0xDAC64C", Offset = "0xDAC64C", VA = "0xDAC64C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C5")]
		public override float timeout
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xDAC68C", Offset = "0xDAC68C", VA = "0xDAC68C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xDAC694", Offset = "0xDAC694", VA = "0xDAC694", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0xDAC724", Offset = "0xDAC724", VA = "0xDAC724", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xDAC7FC", Offset = "0xDAC7FC", VA = "0xDAC7FC", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0xDAC8A0", Offset = "0xDAC8A0", VA = "0xDAC8A0", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0xDAC93C", Offset = "0xDAC93C", VA = "0xDAC93C")]
		public AcceptanceInviteEachOtherTest()
		{
		}
	}
	[Token(Token = "0x2000736")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceInviteTest")]
	public class AcceptanceInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006C6")]
		public override string title
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xDAC95C", Offset = "0xDAC95C", VA = "0xDAC95C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C7")]
		public override float timeout
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0xDAC99C", Offset = "0xDAC99C", VA = "0xDAC99C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xDAC9A4", Offset = "0xDAC9A4", VA = "0xDAC9A4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xDAC9E0", Offset = "0xDAC9E0", VA = "0xDAC9E0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xDACA6C", Offset = "0xDACA6C", VA = "0xDACA6C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0xDACB10", Offset = "0xDACB10", VA = "0xDACB10", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0xDACBAC", Offset = "0xDACBAC", VA = "0xDACBAC")]
		public AcceptanceInviteTest()
		{
		}
	}
	[Token(Token = "0x2000737")]
	[AddComponentMenu("Multiplayer/Tests/AcceptancePINTest")]
	public class AcceptancePINTest : LobbyistTest
	{
		[Token(Token = "0x170006C8")]
		public override string title
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0xDACBBC", Offset = "0xDACBBC", VA = "0xDACBBC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C9")]
		public override float timeout
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0xDACBFC", Offset = "0xDACBFC", VA = "0xDACBFC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xDACC04", Offset = "0xDACC04", VA = "0xDACC04", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xDACC40", Offset = "0xDACC40", VA = "0xDACC40", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xDACCE4", Offset = "0xDACCE4", VA = "0xDACCE4", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0xDACD88", Offset = "0xDACD88", VA = "0xDACD88", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0xDACE24", Offset = "0xDACE24", VA = "0xDACE24")]
		public AcceptancePINTest()
		{
		}
	}
	[Token(Token = "0x2000738")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceRankedTest")]
	public class AcceptanceRankedTest : LobbyistTest
	{
		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _clientConnected;

		[Token(Token = "0x170006CA")]
		public override string title
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0xDACE34", Offset = "0xDACE34", VA = "0xDACE34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006CB")]
		public override float timeout
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0xDACE74", Offset = "0xDACE74", VA = "0xDACE74", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0xDACE7C", Offset = "0xDACE7C", VA = "0xDACE7C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xDACEB8", Offset = "0xDACEB8", VA = "0xDACEB8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0xDACF68", Offset = "0xDACF68", VA = "0xDACF68", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xDACF6C", Offset = "0xDACF6C", VA = "0xDACF6C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0xDAD010", Offset = "0xDAD010", VA = "0xDAD010", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xDAD0AC", Offset = "0xDAD0AC", VA = "0xDAD0AC")]
		public AcceptanceRankedTest()
		{
		}
	}
	[Token(Token = "0x2000739")]
	[AddComponentMenu("Multiplayer/Tests/ShouldNotConnectSecondTimeBlackListedTest")]
	public class ShouldNotConnectSecondTimeBlackListedTest : LobbyistTest
	{
		[Token(Token = "0x200073A")]
		[CompilerGenerated]
		private sealed class <ClearBlackList>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShouldNotConnectSecondTimeBlackListedTest <>4__this;

			[Token(Token = "0x170006CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A1C")]
				[Address(RVA = "0xDAD9B8", Offset = "0xDAD9B8", VA = "0xDAD9B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A1E")]
				[Address(RVA = "0xDADA00", Offset = "0xDADA00", VA = "0xDADA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A19")]
			[Address(RVA = "0xDAD45C", Offset = "0xDAD45C", VA = "0xDAD45C")]
			[DebuggerHidden]
			public <ClearBlackList>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xDAD850", Offset = "0xDAD850", VA = "0xDAD850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0xDAD854", Offset = "0xDAD854", VA = "0xDAD854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0xDAD9C0", Offset = "0xDAD9C0", VA = "0xDAD9C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027D1")]
		private const float MAX_ICE_DURATION = 5f;

		[Token(Token = "0x40027D2")]
		private const float CLEAR_BLACKLIST_AFTER = 5f;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _simulateNoConnectivity;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDuration;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _client1Connecting;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _client2Connecting;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _secondQueue;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _shouldBeBlackList;

		[Token(Token = "0x170006CC")]
		public override string title
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0xDAD0BC", Offset = "0xDAD0BC", VA = "0xDAD0BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006CD")]
		public override float timeout
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0xDAD0FC", Offset = "0xDAD0FC", VA = "0xDAD0FC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0xDAD104", Offset = "0xDAD104", VA = "0xDAD104", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xDAD1D4", Offset = "0xDAD1D4", VA = "0xDAD1D4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0xDAD284", Offset = "0xDAD284", VA = "0xDAD284", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xDAD3E8", Offset = "0xDAD3E8", VA = "0xDAD3E8")]
		[IteratorStateMachine(typeof(<ClearBlackList>d__15))]
		private IEnumerator ClearBlackList()
		{
			return null;
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xDAD484", Offset = "0xDAD484", VA = "0xDAD484", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xDAD504", Offset = "0xDAD504", VA = "0xDAD504", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xDAD840", Offset = "0xDAD840", VA = "0xDAD840")]
		public ShouldNotConnectSecondTimeBlackListedTest()
		{
		}
	}
	[Token(Token = "0x200073B")]
	[AddComponentMenu("Multiplayer/Tests/CancelInviteTest")]
	public class CancelInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006D0")]
		public override string title
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0xDADA08", Offset = "0xDADA08", VA = "0xDADA08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0xDADA48", Offset = "0xDADA48", VA = "0xDADA48", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xDADA84", Offset = "0xDADA84", VA = "0xDADA84", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xDADB30", Offset = "0xDADB30", VA = "0xDADB30", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0xDADBE4", Offset = "0xDADBE4", VA = "0xDADBE4", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0xDADC0C", Offset = "0xDADC0C", VA = "0xDADC0C")]
		public CancelInviteTest()
		{
		}
	}
	[Token(Token = "0x200073C")]
	[AddComponentMenu("Multiplayer/Tests/CancelPINTest")]
	public class CancelPINTest : LobbyistTest
	{
		[Token(Token = "0x170006D1")]
		public override string title
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xDADC1C", Offset = "0xDADC1C", VA = "0xDADC1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D2")]
		public override float timeout
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0xDADD68", Offset = "0xDADD68", VA = "0xDADD68", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0xDADC5C", Offset = "0xDADC5C", VA = "0xDADC5C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xDADC98", Offset = "0xDADC98", VA = "0xDADC98", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xDADD70", Offset = "0xDADD70", VA = "0xDADD70", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xDADE24", Offset = "0xDADE24", VA = "0xDADE24", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0xDADEC8", Offset = "0xDADEC8", VA = "0xDADEC8")]
		public CancelPINTest()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[AddComponentMenu("Multiplayer/Tests/CancelRankedLateTest")]
	public class CancelRankedLateTest : LobbyistTest
	{
		[Token(Token = "0x170006D3")]
		public override string title
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xDADED8", Offset = "0xDADED8", VA = "0xDADED8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xDADF18", Offset = "0xDADF18", VA = "0xDADF18", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xDADF54", Offset = "0xDADF54", VA = "0xDADF54", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xDAE010", Offset = "0xDAE010", VA = "0xDAE010", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xDAE0E0", Offset = "0xDAE0E0", VA = "0xDAE0E0", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xDAE0EC", Offset = "0xDAE0EC", VA = "0xDAE0EC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xDAE168", Offset = "0xDAE168", VA = "0xDAE168")]
		public CancelRankedLateTest()
		{
		}
	}
	[Token(Token = "0x200073E")]
	[AddComponentMenu("Multiplayer/Tests/CancelRankedTest")]
	public class CancelRankedTest : LobbyistTest
	{
		[Token(Token = "0x170006D4")]
		public override string title
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0xDAE178", Offset = "0xDAE178", VA = "0xDAE178", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D5")]
		public override float timeout
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xDAE2D0", Offset = "0xDAE2D0", VA = "0xDAE2D0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xDAE1B8", Offset = "0xDAE1B8", VA = "0xDAE1B8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xDAE1F4", Offset = "0xDAE1F4", VA = "0xDAE1F4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xDAE2D8", Offset = "0xDAE2D8", VA = "0xDAE2D8", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0xDAE4E0", Offset = "0xDAE4E0", VA = "0xDAE4E0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xDAE594", Offset = "0xDAE594", VA = "0xDAE594", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xDAE614", Offset = "0xDAE614", VA = "0xDAE614")]
		public CancelRankedTest()
		{
		}
	}
	[Token(Token = "0x200073F")]
	[AddComponentMenu("Multiplayer/Tests/DeclineRankedAfterAcceptTest")]
	public class DeclineRankedAfterAcceptTest : LobbyistTest
	{
		[Token(Token = "0x170006D6")]
		public override string title
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0xDAE624", Offset = "0xDAE624", VA = "0xDAE624", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xDAE664", Offset = "0xDAE664", VA = "0xDAE664", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xDAE6A0", Offset = "0xDAE6A0", VA = "0xDAE6A0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0xDAE750", Offset = "0xDAE750", VA = "0xDAE750", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xDAE804", Offset = "0xDAE804", VA = "0xDAE804", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xDAE81C", Offset = "0xDAE81C", VA = "0xDAE81C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xDAE828", Offset = "0xDAE828", VA = "0xDAE828", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0xDAE8A4", Offset = "0xDAE8A4", VA = "0xDAE8A4")]
		public DeclineRankedAfterAcceptTest()
		{
		}
	}
	[Token(Token = "0x2000740")]
	[AddComponentMenu("Multiplayer/Tests/DeclineRankedBeforeAcceptTest")]
	public class DeclineRankedBeforeAcceptTest : LobbyistTest
	{
		[Token(Token = "0x170006D7")]
		public override string title
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0xDAE8B4", Offset = "0xDAE8B4", VA = "0xDAE8B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0xDAE8F4", Offset = "0xDAE8F4", VA = "0xDAE8F4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xDAE930", Offset = "0xDAE930", VA = "0xDAE930", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0xDAE9E0", Offset = "0xDAE9E0", VA = "0xDAE9E0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0xDAEA94", Offset = "0xDAEA94", VA = "0xDAEA94", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0xDAEAA0", Offset = "0xDAEAA0", VA = "0xDAEAA0", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xDAEAAC", Offset = "0xDAEAAC", VA = "0xDAEAAC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0xDAEB28", Offset = "0xDAEB28", VA = "0xDAEB28")]
		public DeclineRankedBeforeAcceptTest()
		{
		}
	}
	[Token(Token = "0x2000741")]
	[AddComponentMenu("Multiplayer/Tests/DisconnectedTest")]
	public class DisconnectedTest : LobbyistTest
	{
		[Token(Token = "0x170006D8")]
		public override string title
		{
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0xDAEB38", Offset = "0xDAEB38", VA = "0xDAEB38", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D9")]
		public override float timeout
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xDAEB78", Offset = "0xDAEB78", VA = "0xDAEB78", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xDAEB80", Offset = "0xDAEB80", VA = "0xDAEB80", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0xDAEBBC", Offset = "0xDAEBBC", VA = "0xDAEBBC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xDAEC6C", Offset = "0xDAEC6C", VA = "0xDAEC6C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0xDAECF0", Offset = "0xDAECF0", VA = "0xDAECF0", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0xDAEEB4", Offset = "0xDAEEB4", VA = "0xDAEEB4", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0xDAEEDC", Offset = "0xDAEEDC", VA = "0xDAEEDC")]
		public DisconnectedTest()
		{
		}
	}
	[Token(Token = "0x2000742")]
	[AddComponentMenu("Multiplayer/Tests/DisconnectTest")]
	public class DisconnectTest : LobbyistTest
	{
		[Token(Token = "0x170006DA")]
		public override string title
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0xDAEEEC", Offset = "0xDAEEEC", VA = "0xDAEEEC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DB")]
		public override float timeout
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xDAEF2C", Offset = "0xDAEF2C", VA = "0xDAEF2C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0xDAEF34", Offset = "0xDAEF34", VA = "0xDAEF34", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0xDAEF70", Offset = "0xDAEF70", VA = "0xDAEF70", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xDAF020", Offset = "0xDAF020", VA = "0xDAF020", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0xDAF024", Offset = "0xDAF024", VA = "0xDAF024", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xDAF0D8", Offset = "0xDAF0D8", VA = "0xDAF0D8", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0xDAF100", Offset = "0xDAF100", VA = "0xDAF100")]
		public DisconnectTest()
		{
		}
	}
	[Token(Token = "0x2000743")]
	[AddComponentMenu("Multiplayer/Tests/ICEEndOnNoConnectivityPINTest")]
	public class ICEEndOnNoConnectivityPINTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006DC")]
		public override string title
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0xDAF110", Offset = "0xDAF110", VA = "0xDAF110", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0xDAF150", Offset = "0xDAF150", VA = "0xDAF150", Slot = "25")]
		protected override void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xDAF234", Offset = "0xDAF234", VA = "0xDAF234", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xDAF368", Offset = "0xDAF368", VA = "0xDAF368", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xDAF36C", Offset = "0xDAF36C", VA = "0xDAF36C")]
		public ICEEndOnNoConnectivityPINTest()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityInviteTest")]
	public class ICEShouldFailOnNoConnectivityInviteTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006DD")]
		public override string title
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xDAF38C", Offset = "0xDAF38C", VA = "0xDAF38C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xDAF3CC", Offset = "0xDAF3CC", VA = "0xDAF3CC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0xDAF460", Offset = "0xDAF460", VA = "0xDAF460")]
		public ICEShouldFailOnNoConnectivityInviteTest()
		{
		}
	}
	[Token(Token = "0x2000745")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityPINTest")]
	public class ICEShouldFailOnNoConnectivityPINTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006DE")]
		public override string title
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0xDAF470", Offset = "0xDAF470", VA = "0xDAF470", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xDAF4B0", Offset = "0xDAF4B0", VA = "0xDAF4B0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xDAF55C", Offset = "0xDAF55C", VA = "0xDAF55C")]
		public ICEShouldFailOnNoConnectivityPINTest()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityRankedTest")]
	public class ICEShouldFailOnNoConnectivityRankedTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006DF")]
		public override string title
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xDAF56C", Offset = "0xDAF56C", VA = "0xDAF56C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0xDAF5AC", Offset = "0xDAF5AC", VA = "0xDAF5AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xDAF664", Offset = "0xDAF664", VA = "0xDAF664")]
		public ICEShouldFailOnNoConnectivityRankedTest()
		{
		}
	}
	[Token(Token = "0x2000747")]
	public abstract class LobbyistTestICEShouldFailOnNoConnectivity : LobbyistTest
	{
		[Token(Token = "0x40027DC")]
		private const float MAX_ICE_DURATION = 12f;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _simulateNoConnectivity;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDuration;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _firstClientConnected;

		[Token(Token = "0x170006E0")]
		public override float timeout
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0xDAF674", Offset = "0xDAF674", VA = "0xDAF674", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xDAF67C", Offset = "0xDAF67C", VA = "0xDAF67C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xDAF2E0", Offset = "0xDAF2E0", VA = "0xDAF2E0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xDAF748", Offset = "0xDAF748", VA = "0xDAF748", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xDAF790", Offset = "0xDAF790", VA = "0xDAF790", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0xDAF7BC", Offset = "0xDAF7BC", VA = "0xDAF7BC", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xDAF37C", Offset = "0xDAF37C", VA = "0xDAF37C")]
		protected LobbyistTestICEShouldFailOnNoConnectivity()
		{
		}
	}
	[Token(Token = "0x2000748")]
	[AddComponentMenu("Multiplayer/Tests/ICEBetterConnectionTest")]
	public class ICEBetterConnectionTest : LobbyistTest
	{
		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _anyNewConnectionIsBetterBefore;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _firstClientConnected;

		[Token(Token = "0x170006E1")]
		public override string title
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0xDAF844", Offset = "0xDAF844", VA = "0xDAF844", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E2")]
		public override float timeout
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xDAF884", Offset = "0xDAF884", VA = "0xDAF884", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xDAF8E0", Offset = "0xDAF8E0", VA = "0xDAF8E0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xDAF98C", Offset = "0xDAF98C", VA = "0xDAF98C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xDAFA30", Offset = "0xDAFA30", VA = "0xDAFA30", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xDAFA90", Offset = "0xDAFA90", VA = "0xDAFA90", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xDAFAD4", Offset = "0xDAFAD4", VA = "0xDAFAD4", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xDAFB4C", Offset = "0xDAFB4C", VA = "0xDAFB4C")]
		public ICEBetterConnectionTest()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientShouldSendAtleastOneSuccessfulTestTest")]
	public class ICEClientShouldSendAtleastOneSuccessfulTestTest : LobbyistTest
	{
		[Token(Token = "0x170006E3")]
		public override string title
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xDAFB5C", Offset = "0xDAFB5C", VA = "0xDAFB5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E4")]
		public override float timeout
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0xDAFB9C", Offset = "0xDAFB9C", VA = "0xDAFB9C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xDAFBF8", Offset = "0xDAFBF8", VA = "0xDAFBF8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xDAFC34", Offset = "0xDAFC34", VA = "0xDAFC34", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xDAFCE4", Offset = "0xDAFCE4", VA = "0xDAFCE4", Slot = "23")]
		protected override void OnRxSuccessfulTest(LobbyistClient client, ICEProcess ice, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xDAFCF0", Offset = "0xDAFCF0", VA = "0xDAFCF0", Slot = "24")]
		protected override void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xDAFCFC", Offset = "0xDAFCFC", VA = "0xDAFCFC", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xDAFD08", Offset = "0xDAFD08", VA = "0xDAFD08", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xDAFD14", Offset = "0xDAFD14", VA = "0xDAFD14", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0xDAFD20", Offset = "0xDAFD20", VA = "0xDAFD20")]
		public ICEClientShouldSendAtleastOneSuccessfulTestTest()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientShouldSendTestsDoneTest")]
	public class ICEClientShouldSendTestsDoneTest : LobbyistTest
	{
		[Token(Token = "0x170006E5")]
		public override string title
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xDAFD30", Offset = "0xDAFD30", VA = "0xDAFD30", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E6")]
		public override float timeout
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xDAFD70", Offset = "0xDAFD70", VA = "0xDAFD70", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xDAFDCC", Offset = "0xDAFDCC", VA = "0xDAFDCC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xDAFE08", Offset = "0xDAFE08", VA = "0xDAFE08", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xDAFEB8", Offset = "0xDAFEB8", VA = "0xDAFEB8", Slot = "24")]
		protected override void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xDAFEC4", Offset = "0xDAFEC4", VA = "0xDAFEC4", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xDAFED0", Offset = "0xDAFED0", VA = "0xDAFED0", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xDAFEDC", Offset = "0xDAFEDC", VA = "0xDAFEDC", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xDAFEE8", Offset = "0xDAFEE8", VA = "0xDAFEE8", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xDAFEF4", Offset = "0xDAFEF4", VA = "0xDAFEF4", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xDAFF00", Offset = "0xDAFF00", VA = "0xDAFF00")]
		public ICEClientShouldSendTestsDoneTest()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientUtpUdpGameClientAsClientTest")]
	public class ICEClientUtpUdpGameClientAsClientTest : LobbyistTest
	{
		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceUtpHost;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly bool[] _clientsConnected;

		[Token(Token = "0x170006E7")]
		public override string title
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0xDAFF10", Offset = "0xDAFF10", VA = "0xDAFF10", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E8")]
		public override float timeout
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0xDAFF50", Offset = "0xDAFF50", VA = "0xDAFF50", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xDAFFAC", Offset = "0xDAFFAC", VA = "0xDAFFAC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xDB0074", Offset = "0xDB0074", VA = "0xDB0074", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xDB0118", Offset = "0xDB0118", VA = "0xDB0118", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xDB020C", Offset = "0xDB020C", VA = "0xDB020C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xDB0294", Offset = "0xDB0294", VA = "0xDB0294")]
		public ICEClientUtpUdpGameClientAsClientTest()
		{
		}
	}
	[Token(Token = "0x200074C")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientUtpUdpGameClientAsHostTest")]
	public class ICEClientUtpUdpGameClientAsHostTest : LobbyistTest
	{
		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceUtpHost;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x170006E9")]
		public override string title
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0xDB0300", Offset = "0xDB0300", VA = "0xDB0300", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EA")]
		public override float timeout
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0xDB0340", Offset = "0xDB0340", VA = "0xDB0340", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xDB039C", Offset = "0xDB039C", VA = "0xDB039C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xDB0464", Offset = "0xDB0464", VA = "0xDB0464", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xDB0508", Offset = "0xDB0508", VA = "0xDB0508", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xDB0514", Offset = "0xDB0514", VA = "0xDB0514", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xDB059C", Offset = "0xDB059C", VA = "0xDB059C")]
		public ICEClientUtpUdpGameClientAsHostTest()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[AddComponentMenu("Multiplayer/Tests/ICEEndIceTest")]
	public class ICEEndIceTest : LobbyistTest
	{
		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _iceEnded;

		[Token(Token = "0x170006EB")]
		public override string title
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xDB05AC", Offset = "0xDB05AC", VA = "0xDB05AC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EC")]
		public override float timeout
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xDB05EC", Offset = "0xDB05EC", VA = "0xDB05EC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0xDB0648", Offset = "0xDB0648", VA = "0xDB0648", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0xDB0684", Offset = "0xDB0684", VA = "0xDB0684", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xDB0734", Offset = "0xDB0734", VA = "0xDB0734", Slot = "25")]
		protected override void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xDB0780", Offset = "0xDB0780", VA = "0xDB0780", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0xDB07B4", Offset = "0xDB07B4", VA = "0xDB07B4")]
		public ICEEndIceTest()
		{
		}
	}
	[Token(Token = "0x200074E")]
	[AddComponentMenu("Multiplayer/Tests/ICEHostSkipEstablish")]
	public class ICEHostSkipEstablish : LobbyistTest
	{
		[Token(Token = "0x40027E8")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _clientExtraTimeBefore;

		[Token(Token = "0x170006ED")]
		public override string title
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xDB07C4", Offset = "0xDB07C4", VA = "0xDB07C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EE")]
		public override float timeout
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0xDB0804", Offset = "0xDB0804", VA = "0xDB0804", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0xDB080C", Offset = "0xDB080C", VA = "0xDB080C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xDB08C0", Offset = "0xDB08C0", VA = "0xDB08C0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xDB0970", Offset = "0xDB0970", VA = "0xDB0970", Slot = "19")]
		protected override void OnQueue(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xDB0C54", Offset = "0xDB0C54", VA = "0xDB0C54", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0xDB0CD4", Offset = "0xDB0CD4", VA = "0xDB0CD4", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0xDB0CE0", Offset = "0xDB0CE0", VA = "0xDB0CE0", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0xDB0D00", Offset = "0xDB0D00", VA = "0xDB0D00", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0xDB0D80", Offset = "0xDB0D80", VA = "0xDB0D80")]
		public ICEHostSkipEstablish()
		{
		}
	}
	[Token(Token = "0x200074F")]
	[AddComponentMenu("Multiplayer/Tests/ICEHostStopRespondingTest")]
	public class ICEHostStopRespondingTest : LobbyistTest
	{
		[Token(Token = "0x2000750")]
		[CompilerGenerated]
		private sealed class <DisposeIceOfHostAfterCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float s;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ICEHostStopRespondingTest <>4__this;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x170006F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ABA")]
				[Address(RVA = "0xDB13B4", Offset = "0xDB13B4", VA = "0xDB13B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ABC")]
				[Address(RVA = "0xDB13FC", Offset = "0xDB13FC", VA = "0xDB13FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0xDB106C", Offset = "0xDB106C", VA = "0xDB106C")]
			[DebuggerHidden]
			public <DisposeIceOfHostAfterCo>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0xDB1158", Offset = "0xDB1158", VA = "0xDB1158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0xDB115C", Offset = "0xDB115C", VA = "0xDB115C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0xDB13BC", Offset = "0xDB13BC", VA = "0xDB13BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027EB")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _clientExtraIceDurationBefore;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _matchConnecting;

		[Token(Token = "0x170006EF")]
		public override string title
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0xDB0D90", Offset = "0xDB0D90", VA = "0xDB0D90", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F0")]
		public override float timeout
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0xDB0DD0", Offset = "0xDB0DD0", VA = "0xDB0DD0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0xDB0DD8", Offset = "0xDB0DD8", VA = "0xDB0DD8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xDB0E90", Offset = "0xDB0E90", VA = "0xDB0E90", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0xDB0FE0", Offset = "0xDB0FE0", VA = "0xDB0FE0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0xDB0F5C", Offset = "0xDB0F5C", VA = "0xDB0F5C")]
		[IteratorStateMachine(typeof(<DisposeIceOfHostAfterCo>d__11))]
		private IEnumerator DisposeIceOfHostAfterCo(float s)
		{
			return null;
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0xDB1094", Offset = "0xDB1094", VA = "0xDB1094", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0xDB10A0", Offset = "0xDB10A0", VA = "0xDB10A0", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0xDB10C0", Offset = "0xDB10C0", VA = "0xDB10C0", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0xDB1140", Offset = "0xDB1140", VA = "0xDB1140")]
		public ICEHostStopRespondingTest()
		{
		}
	}
	[Token(Token = "0x2000751")]
	[AddComponentMenu("Multiplayer/Tests/ICEInviteTest")]
	public class ICEInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006F3")]
		public override string title
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0xDB1404", Offset = "0xDB1404", VA = "0xDB1404", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F4")]
		public override float timeout
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0xDB1444", Offset = "0xDB1444", VA = "0xDB1444", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0xDB144C", Offset = "0xDB144C", VA = "0xDB144C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xDB1488", Offset = "0xDB1488", VA = "0xDB1488", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xDB1514", Offset = "0xDB1514", VA = "0xDB1514", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xDB1608", Offset = "0xDB1608", VA = "0xDB1608", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xDB16A4", Offset = "0xDB16A4", VA = "0xDB16A4")]
		public ICEInviteTest()
		{
		}
	}
	[Token(Token = "0x2000752")]
	[AddComponentMenu("Multiplayer/Tests/ICEPINTest")]
	public class ICEPINTest : LobbyistTest
	{
		[Token(Token = "0x170006F5")]
		public override string title
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0xDB16B4", Offset = "0xDB16B4", VA = "0xDB16B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F6")]
		public override float timeout
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0xDB16F4", Offset = "0xDB16F4", VA = "0xDB16F4", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xDB16FC", Offset = "0xDB16FC", VA = "0xDB16FC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xDB1738", Offset = "0xDB1738", VA = "0xDB1738", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xDB17E8", Offset = "0xDB17E8", VA = "0xDB17E8", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xDB189C", Offset = "0xDB189C", VA = "0xDB189C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xDB18C4", Offset = "0xDB18C4", VA = "0xDB18C4")]
		public ICEPINTest()
		{
		}
	}
	[Token(Token = "0x2000753")]
	[AddComponentMenu("Multiplayer/Tests/ICERankedTest")]
	public class ICERankedTest : LobbyistTest
	{
		[Token(Token = "0x170006F7")]
		public override string title
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0xDB18D4", Offset = "0xDB18D4", VA = "0xDB18D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F8")]
		public override float timeout
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0xDB1914", Offset = "0xDB1914", VA = "0xDB1914", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xDB191C", Offset = "0xDB191C", VA = "0xDB191C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0xDB1958", Offset = "0xDB1958", VA = "0xDB1958", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xDB1A08", Offset = "0xDB1A08", VA = "0xDB1A08", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xDB1AFC", Offset = "0xDB1AFC", VA = "0xDB1AFC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xDB1B98", Offset = "0xDB1B98", VA = "0xDB1B98")]
		public ICERankedTest()
		{
		}
	}
	[Token(Token = "0x2000754")]
	[AddComponentMenu("Multiplayer/Tests/ICERankedWhenBackToQueueTest")]
	public class ICERankedWhenBackToQueueTest : LobbyistTest
	{
		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _firstConnection;

		[Token(Token = "0x170006F9")]
		public override string title
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xDB1BA8", Offset = "0xDB1BA8", VA = "0xDB1BA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006FA")]
		public override float timeout
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0xDB1BE8", Offset = "0xDB1BE8", VA = "0xDB1BE8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xDB1BF0", Offset = "0xDB1BF0", VA = "0xDB1BF0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xDB1C2C", Offset = "0xDB1C2C", VA = "0xDB1C2C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xDB1CDC", Offset = "0xDB1CDC", VA = "0xDB1CDC", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xDB1E0C", Offset = "0xDB1E0C", VA = "0xDB1E0C", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0xDB1E10", Offset = "0xDB1E10", VA = "0xDB1E10", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xDB1F68", Offset = "0xDB1F68", VA = "0xDB1F68", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xDB2004", Offset = "0xDB2004", VA = "0xDB2004")]
		public ICERankedWhenBackToQueueTest()
		{
		}
	}
	[Token(Token = "0x2000755")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosClientAsHostTest")]
	public class ICERelayQosClientAsHostTest : LobbyistTest
	{
		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceRelayHost;

		[Token(Token = "0x170006FB")]
		public override string title
		{
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0xDB2014", Offset = "0xDB2014", VA = "0xDB2014", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006FC")]
		public override float timeout
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xDB2054", Offset = "0xDB2054", VA = "0xDB2054", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xDB20B0", Offset = "0xDB20B0", VA = "0xDB20B0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0xDB2178", Offset = "0xDB2178", VA = "0xDB2178", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xDB221C", Offset = "0xDB221C", VA = "0xDB221C", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xDB2228", Offset = "0xDB2228", VA = "0xDB2228", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xDB2234", Offset = "0xDB2234", VA = "0xDB2234", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xDB2240", Offset = "0xDB2240", VA = "0xDB2240", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xDB22C8", Offset = "0xDB22C8", VA = "0xDB22C8")]
		public ICERelayQosClientAsHostTest()
		{
		}
	}
	[Token(Token = "0x2000756")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosHostAsHostTest")]
	public class ICERelayQosHostAsHostTest : LobbyistTest
	{
		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceRelayHost;

		[Token(Token = "0x170006FD")]
		public override string title
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xDB22D8", Offset = "0xDB22D8", VA = "0xDB22D8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006FE")]
		public override float timeout
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0xDB2318", Offset = "0xDB2318", VA = "0xDB2318", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xDB2374", Offset = "0xDB2374", VA = "0xDB2374", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xDB243C", Offset = "0xDB243C", VA = "0xDB243C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xDB24E0", Offset = "0xDB24E0", VA = "0xDB24E0", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xDB24EC", Offset = "0xDB24EC", VA = "0xDB24EC", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xDB24F8", Offset = "0xDB24F8", VA = "0xDB24F8", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xDB2504", Offset = "0xDB2504", VA = "0xDB2504", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xDB258C", Offset = "0xDB258C", VA = "0xDB258C")]
		public ICERelayQosHostAsHostTest()
		{
		}
	}
	[Token(Token = "0x2000757")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosTest")]
	public class ICERelayQosTest : LobbyistTest
	{
		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x170006FF")]
		public override string title
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0xDB259C", Offset = "0xDB259C", VA = "0xDB259C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000700")]
		public override float timeout
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0xDB25DC", Offset = "0xDB25DC", VA = "0xDB25DC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xDB2638", Offset = "0xDB2638", VA = "0xDB2638", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xDB26D0", Offset = "0xDB26D0", VA = "0xDB26D0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xDB2774", Offset = "0xDB2774", VA = "0xDB2774", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xDB2780", Offset = "0xDB2780", VA = "0xDB2780", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xDB278C", Offset = "0xDB278C", VA = "0xDB278C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xDB2798", Offset = "0xDB2798", VA = "0xDB2798", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xDB2808", Offset = "0xDB2808", VA = "0xDB2808")]
		public ICERelayQosTest()
		{
		}
	}
	[Token(Token = "0x2000758")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnFastTimeoutTest")]
	public class ICEShouldFailOnFastTimeoutTest : LobbyistTest
	{
		[Token(Token = "0x40027FA")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _simulateNoConnectivityBefore;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _firstClientUIceFail;

		[Token(Token = "0x17000701")]
		public override string title
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xDB2818", Offset = "0xDB2818", VA = "0xDB2818", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000702")]
		public override float timeout
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0xDB2858", Offset = "0xDB2858", VA = "0xDB2858", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xDB2860", Offset = "0xDB2860", VA = "0xDB2860", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xDB2930", Offset = "0xDB2930", VA = "0xDB2930", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xDB29D4", Offset = "0xDB29D4", VA = "0xDB29D4", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0xDB2A0C", Offset = "0xDB2A0C", VA = "0xDB2A0C", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xDB2A18", Offset = "0xDB2A18", VA = "0xDB2A18", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xDB2AA0", Offset = "0xDB2AA0", VA = "0xDB2AA0")]
		public ICEShouldFailOnFastTimeoutTest()
		{
		}
	}
	[Token(Token = "0x2000759")]
	[AddComponentMenu("Multiplayer/Tests/ICETransportTest")]
	public class ICETransportTest : LobbyistTest
	{
		[Token(Token = "0x17000703")]
		public override string title
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0xDB2AB0", Offset = "0xDB2AB0", VA = "0xDB2AB0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000704")]
		public override float timeout
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xDB2AF0", Offset = "0xDB2AF0", VA = "0xDB2AF0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xDB2AF8", Offset = "0xDB2AF8", VA = "0xDB2AF8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0xDB2B34", Offset = "0xDB2B34", VA = "0xDB2B34", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xDB2BC0", Offset = "0xDB2BC0", VA = "0xDB2BC0", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xDB2EAC", Offset = "0xDB2EAC", VA = "0xDB2EAC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0xDB2F48", Offset = "0xDB2F48", VA = "0xDB2F48")]
		public ICETransportTest()
		{
		}
	}
	[Token(Token = "0x200075A")]
	[AddComponentMenu("Multiplayer/Tests/ICEUtpUdpWithoutReflexiveTest")]
	public class ICEUtpUdpWithoutReflexiveTest : LobbyistTest
	{
		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.UdpAddressesToUse _udpAddressesToUse;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x17000705")]
		public override string title
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0xDB2FA4", Offset = "0xDB2FA4", VA = "0xDB2FA4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0xDB2FE4", Offset = "0xDB2FE4", VA = "0xDB2FE4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0xDB30AC", Offset = "0xDB30AC", VA = "0xDB30AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0xDB315C", Offset = "0xDB315C", VA = "0xDB315C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0xDB3220", Offset = "0xDB3220", VA = "0xDB3220", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0xDB32A8", Offset = "0xDB32A8", VA = "0xDB32A8")]
		public ICEUtpUdpWithoutReflexiveTest()
		{
		}
	}
	[Token(Token = "0x200075B")]
	public abstract class LobbyistTest : Test
	{
		[Token(Token = "0x200075D")]
		[CompilerGenerated]
		private sealed class <DefferFrame>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000708")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3F")]
				[Address(RVA = "0xDB5504", Offset = "0xDB5504", VA = "0xDB5504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000709")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B41")]
				[Address(RVA = "0xDB554C", Offset = "0xDB554C", VA = "0xDB554C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xDB3ED0", Offset = "0xDB3ED0", VA = "0xDB3ED0")]
			[DebuggerHidden]
			public <DefferFrame>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xDB5494", Offset = "0xDB5494", VA = "0xDB5494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xDB5498", Offset = "0xDB5498", VA = "0xDB5498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xDB550C", Offset = "0xDB550C", VA = "0xDB550C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _initialized;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<LobbyistClient> _clients;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<LobbyistClient, ICEProcess> _iceProcesses;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<LobbyistClient, P2PNode> _p2pNodes;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _allConnected;

		[Token(Token = "0x17000706")]
		protected LobbyistTestsConfig config
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0xDB32B8", Offset = "0xDB32B8", VA = "0xDB32B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000707")]
		public override float timeout
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xDB3300", Offset = "0xDB3300", VA = "0xDB3300", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0xDB3308", Offset = "0xDB3308", VA = "0xDB3308")]
		private void Init()
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0xDAC6D0", Offset = "0xDAC6D0", VA = "0xDAC6D0")]
		protected void AllocateClients(int numClients, bool createNew = false)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0xDB3438", Offset = "0xDB3438", VA = "0xDB3438")]
		protected void AllocateClient(int index, [Optional] string multiplayer_version, bool createNew = false)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0xDB34E4", Offset = "0xDB34E4", VA = "0xDB34E4")]
		protected void AllocateClient(string host, int port, string playerID, [Optional] string multiplayer_version, bool createNew = false)
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0xDB3EA8", Offset = "0xDB3EA8", VA = "0xDB3EA8", Slot = "11")]
		protected virtual void ClientConnect(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0xDB3E34", Offset = "0xDB3E34", VA = "0xDB3E34")]
		[IteratorStateMachine(typeof(<DefferFrame>d__14))]
		private IEnumerator DefferFrame(Action action)
		{
			return null;
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0xDB3EF8", Offset = "0xDB3EF8", VA = "0xDB3EF8")]
		private void UnhookClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0xDB43C0", Offset = "0xDB43C0", VA = "0xDB43C0", Slot = "12")]
		protected virtual void RecycleClients()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0xDB45AC", Offset = "0xDB45AC", VA = "0xDB45AC")]
		protected void RecycleClient(int i)
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xDAED90", Offset = "0xDAED90", VA = "0xDAED90")]
		protected void DestroyClient(int i)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0xDB49CC", Offset = "0xDB49CC", VA = "0xDB49CC", Slot = "13")]
		protected virtual void onConnectionToServerFailed(LobbyistClient client, string reason)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xDB49D8", Offset = "0xDB49D8", VA = "0xDB49D8", Slot = "14")]
		protected virtual void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0xDB4B58", Offset = "0xDB4B58", VA = "0xDB4B58", Slot = "15")]
		protected virtual void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0xDB4BC0", Offset = "0xDB4BC0", VA = "0xDB4BC0", Slot = "16")]
		protected virtual void OnDisconnectedFromServer(LobbyistClient client, string reason)
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0xDB4BCC", Offset = "0xDB4BCC", VA = "0xDB4BCC", Slot = "17")]
		protected virtual void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0xDB0FFC", Offset = "0xDB0FFC", VA = "0xDB0FFC", Slot = "18")]
		protected virtual void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0xDB4BD8", Offset = "0xDB4BD8", VA = "0xDB4BD8", Slot = "19")]
		protected virtual void OnQueue(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xDB0A20", Offset = "0xDB0A20", VA = "0xDB0A20")]
		protected void SetupICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xDAEC70", Offset = "0xDAEC70", VA = "0xDAEC70")]
		protected void EstablishICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xDAE2DC", Offset = "0xDAE2DC", VA = "0xDAE2DC")]
		protected void CleanICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0xDB46EC", Offset = "0xDB46EC", VA = "0xDB46EC")]
		protected void CleanUdpUtp(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xDB4BDC", Offset = "0xDB4BDC", VA = "0xDB4BDC")]
		private LobbyistClient FindClientByIce(ICEProcess ice)
		{
			return null;
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xDB4E4C", Offset = "0xDB4E4C", VA = "0xDB4E4C")]
		private void OnICEConnectionFailed(ICEProcess ice)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xDAFA70", Offset = "0xDAFA70", VA = "0xDAFA70", Slot = "20")]
		protected virtual void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xDB4E74", Offset = "0xDB4E74", VA = "0xDB4E74")]
		private void OnFirstIceConnected(ICEProcess ice, NodeStatus status)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xDB4F0C", Offset = "0xDB4F0C", VA = "0xDB4F0C")]
		private void OnICEBetterConnected(ICEProcess ice, NodeStatus status)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0xDAF7B8", Offset = "0xDAF7B8", VA = "0xDAF7B8", Slot = "21")]
		protected virtual void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0xDB4F4C", Offset = "0xDB4F4C", VA = "0xDB4F4C", Slot = "22")]
		protected virtual void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xDB4FB0", Offset = "0xDB4FB0", VA = "0xDB4FB0")]
		private void OnRxHostAddresses(LobbyistClient client, string[] addresses)
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0xDB5038", Offset = "0xDB5038", VA = "0xDB5038")]
		private void OnRxReflexiveAddress(LobbyistClient client, ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0xDB50C0", Offset = "0xDB50C0", VA = "0xDB50C0")]
		private void OnRxRelayedAddresses(LobbyistClient client, string[] addresses)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0xDB5148", Offset = "0xDB5148", VA = "0xDB5148")]
		private void OnRxSuccessfulTest(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0xDB5228", Offset = "0xDB5228", VA = "0xDB5228", Slot = "23")]
		protected virtual void OnRxSuccessfulTest(LobbyistClient client, ICEProcess ice, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0xDB522C", Offset = "0xDB522C", VA = "0xDB522C")]
		private void OnRxTestsDone(LobbyistClient client, AgentType type)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0xDB52D4", Offset = "0xDB52D4", VA = "0xDB52D4", Slot = "24")]
		protected virtual void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0xDB52D8", Offset = "0xDB52D8", VA = "0xDB52D8")]
		private void OnUdpUtpChosenAddress(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0xDB5370", Offset = "0xDB5370", VA = "0xDB5370")]
		private void OnEstablished(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0xDB5408", Offset = "0xDB5408", VA = "0xDB5408")]
		private void OnEndIce(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0xDAF19C", Offset = "0xDAF19C", VA = "0xDAF19C", Slot = "25")]
		protected virtual void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0xDB5460", Offset = "0xDB5460", VA = "0xDB5460", Slot = "26")]
		protected virtual void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0xDB5464", Offset = "0xDB5464", VA = "0xDB5464", Slot = "27")]
		protected virtual void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0xDB1EBC", Offset = "0xDB1EBC", VA = "0xDB1EBC", Slot = "28")]
		protected virtual void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0xDAD64C", Offset = "0xDAD64C", VA = "0xDAD64C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0xDAC94C", Offset = "0xDAC94C", VA = "0xDAC94C")]
		protected LobbyistTest()
		{
		}
	}
	[Token(Token = "0x2000760")]
	public class LobbyistTestsPool : MonoBehaviour
	{
		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reuseClients;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float chanceOfNoReuse;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LobbyistTestsPool inst;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, LobbyistClient> _recycledClientsByPlayerID;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _container;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _clientId;

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xDB5680", Offset = "0xDB5680", VA = "0xDB5680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xDB3C5C", Offset = "0xDB3C5C", VA = "0xDB3C5C")]
		public LobbyistClient AllocateClient(string playerID, bool createNew)
		{
			return null;
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xDB47E8", Offset = "0xDB47E8", VA = "0xDB47E8")]
		public void RecycleClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xDB492C", Offset = "0xDB492C", VA = "0xDB492C")]
		public void DestroyClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xDB5750", Offset = "0xDB5750", VA = "0xDB5750")]
		public void OnTestingDone()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xDB5914", Offset = "0xDB5914", VA = "0xDB5914")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xDB595C", Offset = "0xDB595C", VA = "0xDB595C")]
		public LobbyistTestsPool()
		{
		}
	}
	[Token(Token = "0x2000761")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenOnlyCoOpTest")]
	public class MatchMakingAnyWhenOnlyCoOpTest : LobbyistTest
	{
		[Token(Token = "0x1700070A")]
		public override string title
		{
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xDB5978", Offset = "0xDB5978", VA = "0xDB5978", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xDB59B8", Offset = "0xDB59B8", VA = "0xDB59B8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xDB59F4", Offset = "0xDB59F4", VA = "0xDB59F4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xDB5A98", Offset = "0xDB5A98", VA = "0xDB5A98", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xDB5B3C", Offset = "0xDB5B3C", VA = "0xDB5B3C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xDB5BD8", Offset = "0xDB5BD8", VA = "0xDB5BD8")]
		public MatchMakingAnyWhenOnlyCoOpTest()
		{
		}
	}
	[Token(Token = "0x2000762")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenVersusIsFairTest")]
	public class MatchMakingAnyWhenVersusIsFairTest : LobbyistTest
	{
		[Token(Token = "0x1700070B")]
		public override string title
		{
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xDB5BE8", Offset = "0xDB5BE8", VA = "0xDB5BE8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xDB5C28", Offset = "0xDB5C28", VA = "0xDB5C28", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0xDB5C64", Offset = "0xDB5C64", VA = "0xDB5C64", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0xDB5D48", Offset = "0xDB5D48", VA = "0xDB5D48", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xDB5DEC", Offset = "0xDB5DEC", VA = "0xDB5DEC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xDB5EA8", Offset = "0xDB5EA8", VA = "0xDB5EA8")]
		public MatchMakingAnyWhenVersusIsFairTest()
		{
		}
	}
	[Token(Token = "0x2000763")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenVersusIsUnfairTest")]
	public class MatchMakingAnyWhenVersusIsUnfairTest : LobbyistTest
	{
		[Token(Token = "0x1700070C")]
		public override string title
		{
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xDB5EB8", Offset = "0xDB5EB8", VA = "0xDB5EB8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xDB5EF8", Offset = "0xDB5EF8", VA = "0xDB5EF8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xDB5F34", Offset = "0xDB5F34", VA = "0xDB5F34", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0xDB6018", Offset = "0xDB6018", VA = "0xDB6018", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0xDB60BC", Offset = "0xDB60BC", VA = "0xDB60BC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xDB6178", Offset = "0xDB6178", VA = "0xDB6178")]
		public MatchMakingAnyWhenVersusIsUnfairTest()
		{
		}
	}
	[Token(Token = "0x2000764")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingBarelyFairTest")]
	public class MatchMakingBarelyFairTest : LobbyistTest
	{
		[Token(Token = "0x1700070D")]
		public override string title
		{
			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xDB6188", Offset = "0xDB6188", VA = "0xDB6188", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0xDB61C8", Offset = "0xDB61C8", VA = "0xDB61C8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0xDB6204", Offset = "0xDB6204", VA = "0xDB6204", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0xDB62AC", Offset = "0xDB62AC", VA = "0xDB62AC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0xDB6350", Offset = "0xDB6350", VA = "0xDB6350", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xDB63EC", Offset = "0xDB63EC", VA = "0xDB63EC")]
		public MatchMakingBarelyFairTest()
		{
		}
	}
	[Token(Token = "0x2000765")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingDontMatchBlockedUsersTest")]
	public class MatchMakingDontMatchBlockedUsersTest : LobbyistTest
	{
		[Token(Token = "0x1700070E")]
		public override string title
		{
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xDB63FC", Offset = "0xDB63FC", VA = "0xDB63FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xDB643C", Offset = "0xDB643C", VA = "0xDB643C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xDB6478", Offset = "0xDB6478", VA = "0xDB6478", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xDB66B8", Offset = "0xDB66B8", VA = "0xDB66B8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0xDB675C", Offset = "0xDB675C", VA = "0xDB675C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xDB6818", Offset = "0xDB6818", VA = "0xDB6818")]
		public MatchMakingDontMatchBlockedUsersTest()
		{
		}
	}
	[Token(Token = "0x2000766")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingPickFiftyPercentWinProbabilityTest")]
	public class MatchMakingPickFiftyPercentWinProbabilityTest : LobbyistTest
	{
		[Token(Token = "0x1700070F")]
		public override string title
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xDB6828", Offset = "0xDB6828", VA = "0xDB6828", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000710")]
		public override float timeout
		{
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xDB69BC", Offset = "0xDB69BC", VA = "0xDB69BC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xDB6868", Offset = "0xDB6868", VA = "0xDB6868", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0xDB68A4", Offset = "0xDB68A4", VA = "0xDB68A4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0xDB69C4", Offset = "0xDB69C4", VA = "0xDB69C4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xDB6A68", Offset = "0xDB6A68", VA = "0xDB6A68", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xDB6B44", Offset = "0xDB6B44", VA = "0xDB6B44")]
		public MatchMakingPickFiftyPercentWinProbabilityTest()
		{
		}
	}
	[Token(Token = "0x2000767")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingSeniorityTest")]
	public class MatchMakingSeniorityTest : LobbyistTest
	{
		[Token(Token = "0x17000711")]
		public override string title
		{
			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xDB6B54", Offset = "0xDB6B54", VA = "0xDB6B54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xDB6B94", Offset = "0xDB6B94", VA = "0xDB6B94", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xDB6BD0", Offset = "0xDB6BD0", VA = "0xDB6BD0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0xDB6CD0", Offset = "0xDB6CD0", VA = "0xDB6CD0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xDB6E8C", Offset = "0xDB6E8C", VA = "0xDB6E8C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xDB6F10", Offset = "0xDB6F10", VA = "0xDB6F10", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xDB6FCC", Offset = "0xDB6FCC", VA = "0xDB6FCC")]
		public MatchMakingSeniorityTest()
		{
		}
	}
	[Token(Token = "0x2000768")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingUnfairTest")]
	public class MatchMakingUnfairTest : LobbyistTest
	{
		[Token(Token = "0x17000712")]
		public override string title
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xDB6FDC", Offset = "0xDB6FDC", VA = "0xDB6FDC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000713")]
		public override float timeout
		{
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xDB7100", Offset = "0xDB7100", VA = "0xDB7100", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xDB701C", Offset = "0xDB701C", VA = "0xDB701C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0xDB7058", Offset = "0xDB7058", VA = "0xDB7058", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0xDB7108", Offset = "0xDB7108", VA = "0xDB7108", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xDB7114", Offset = "0xDB7114", VA = "0xDB7114", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0xDB71B4", Offset = "0xDB71B4", VA = "0xDB71B4")]
		public MatchMakingUnfairTest()
		{
		}
	}
	[Token(Token = "0x2000769")]
	[AddComponentMenu("Multiplayer/Tests/NativePlatformIsTheSameOnConnectingTest")]
	public class NativePlatformIsTheSameOnConnectingTest : LobbyistTest
	{
		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _oneClientAlreadyConnected;

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xDB71C4", Offset = "0xDB71C4", VA = "0xDB71C4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xDB7204", Offset = "0xDB7204", VA = "0xDB7204", Slot = "11")]
		protected override void ClientConnect(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xDB73CC", Offset = "0xDB73CC", VA = "0xDB73CC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xDB7470", Offset = "0xDB7470", VA = "0xDB7470", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xDB7570", Offset = "0xDB7570", VA = "0xDB7570")]
		public NativePlatformIsTheSameOnConnectingTest()
		{
		}
	}
	[Token(Token = "0x200076A")]
	[AddComponentMenu("Multiplayer/Tests/BusyWhenInvitedTest")]
	public class BusyWhenInvitedTest : LobbyistTest
	{
		[Token(Token = "0x17000714")]
		public override string title
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xDB7580", Offset = "0xDB7580", VA = "0xDB7580", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xDB75C0", Offset = "0xDB75C0", VA = "0xDB75C0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0xDB75FC", Offset = "0xDB75FC", VA = "0xDB75FC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0xDB76E0", Offset = "0xDB76E0", VA = "0xDB76E0", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xDB7794", Offset = "0xDB7794", VA = "0xDB7794", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xDB7848", Offset = "0xDB7848", VA = "0xDB7848", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0xDB78E4", Offset = "0xDB78E4", VA = "0xDB78E4")]
		public BusyWhenInvitedTest()
		{
		}
	}
	[Token(Token = "0x200076B")]
	[AddComponentMenu("Multiplayer/Tests/BusyWhenInvitingTest")]
	public class BusyWhenInvitingTest : LobbyistTest
	{
		[Token(Token = "0x17000715")]
		public override string title
		{
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xDB78F4", Offset = "0xDB78F4", VA = "0xDB78F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0xDB7934", Offset = "0xDB7934", VA = "0xDB7934", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xDB7970", Offset = "0xDB7970", VA = "0xDB7970", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0xDB7A54", Offset = "0xDB7A54", VA = "0xDB7A54", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0xDB7B08", Offset = "0xDB7B08", VA = "0xDB7B08", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0xDB7BBC", Offset = "0xDB7BBC", VA = "0xDB7BBC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0xDB7C58", Offset = "0xDB7C58", VA = "0xDB7C58")]
		public BusyWhenInvitingTest()
		{
		}
	}
	[Token(Token = "0x200076C")]
	[AddComponentMenu("Multiplayer/Tests/InviteBlocked")]
	public class InviteBlocked : LobbyistTest
	{
		[Token(Token = "0x17000716")]
		public override string title
		{
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xDB7C68", Offset = "0xDB7C68", VA = "0xDB7C68", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xDB7CA8", Offset = "0xDB7CA8", VA = "0xDB7CA8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xDB7CE4", Offset = "0xDB7CE4", VA = "0xDB7CE4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xDB7E3C", Offset = "0xDB7E3C", VA = "0xDB7E3C", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0xDB7E48", Offset = "0xDB7E48", VA = "0xDB7E48", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xDB7E54", Offset = "0xDB7E54", VA = "0xDB7E54", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0xDB7EF0", Offset = "0xDB7EF0", VA = "0xDB7EF0")]
		public InviteBlocked()
		{
		}
	}
	[Token(Token = "0x200076D")]
	[AddComponentMenu("Multiplayer/Tests/InviteCoOpTest")]
	public class InviteCoOpTest : LobbyistTest
	{
		[Token(Token = "0x17000717")]
		public override string title
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xDB7F00", Offset = "0xDB7F00", VA = "0xDB7F00", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xDB7F40", Offset = "0xDB7F40", VA = "0xDB7F40", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xDB7F7C", Offset = "0xDB7F7C", VA = "0xDB7F7C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0xDB8008", Offset = "0xDB8008", VA = "0xDB8008", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0xDB80AC", Offset = "0xDB80AC", VA = "0xDB80AC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0xDB8148", Offset = "0xDB8148", VA = "0xDB8148")]
		public InviteCoOpTest()
		{
		}
	}
	[Token(Token = "0x200076E")]
	[AddComponentMenu("Multiplayer/Tests/InviteEachOtherDifferentTest")]
	public class InviteEachOtherDifferentTest : LobbyistTest
	{
		[Token(Token = "0x17000718")]
		public override string title
		{
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xDB8158", Offset = "0xDB8158", VA = "0xDB8158", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xDB8198", Offset = "0xDB8198", VA = "0xDB8198", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xDB81D4", Offset = "0xDB81D4", VA = "0xDB81D4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xDB82B8", Offset = "0xDB82B8", VA = "0xDB82B8", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xDB836C", Offset = "0xDB836C", VA = "0xDB836C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0xDB8410", Offset = "0xDB8410", VA = "0xDB8410", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xDB84AC", Offset = "0xDB84AC", VA = "0xDB84AC")]
		public InviteEachOtherDifferentTest()
		{
		}
	}
	[Token(Token = "0x200076F")]
	[AddComponentMenu("Multiplayer/Tests/InviteEachOtherSameTest")]
	public class InviteEachOtherSameTest : LobbyistTest
	{
		[Token(Token = "0x17000719")]
		public override string title
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xDB84BC", Offset = "0xDB84BC", VA = "0xDB84BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xDB84FC", Offset = "0xDB84FC", VA = "0xDB84FC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xDB850C", Offset = "0xDB850C", VA = "0xDB850C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xDB85E4", Offset = "0xDB85E4", VA = "0xDB85E4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xDB8688", Offset = "0xDB8688", VA = "0xDB8688", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xDB8724", Offset = "0xDB8724", VA = "0xDB8724")]
		public InviteEachOtherSameTest()
		{
		}
	}
	[Token(Token = "0x2000770")]
	[AddComponentMenu("Multiplayer/Tests/InviteVersusTest")]
	public class InviteVersusTest : LobbyistTest
	{
		[Token(Token = "0x1700071A")]
		public override string title
		{
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xDB872C", Offset = "0xDB872C", VA = "0xDB872C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xDB876C", Offset = "0xDB876C", VA = "0xDB876C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xDB877C", Offset = "0xDB877C", VA = "0xDB877C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xDB8808", Offset = "0xDB8808", VA = "0xDB8808", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xDB88AC", Offset = "0xDB88AC", VA = "0xDB88AC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xDB8948", Offset = "0xDB8948", VA = "0xDB8948")]
		public InviteVersusTest()
		{
		}
	}
	[Token(Token = "0x2000771")]
	[AddComponentMenu("Multiplayer/Tests/BusyInPINQueueTest")]
	public class BusyInPINQueueTest : LobbyistTest
	{
		[Token(Token = "0x1700071B")]
		public override string title
		{
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0xDB8950", Offset = "0xDB8950", VA = "0xDB8950", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xDB8990", Offset = "0xDB8990", VA = "0xDB8990", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xDB89A0", Offset = "0xDB89A0", VA = "0xDB89A0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xDB8A74", Offset = "0xDB8A74", VA = "0xDB8A74", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xDB8B28", Offset = "0xDB8B28", VA = "0xDB8B28", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xDB8B34", Offset = "0xDB8B34", VA = "0xDB8B34", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xDB8BB0", Offset = "0xDB8BB0", VA = "0xDB8BB0")]
		public BusyInPINQueueTest()
		{
		}
	}
	[Token(Token = "0x2000772")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINCoOpTest")]
	public class QueuePINCoOpTest : LobbyistTest
	{
		[Token(Token = "0x1700071C")]
		public override string title
		{
			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0xDB8BB8", Offset = "0xDB8BB8", VA = "0xDB8BB8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xDB8BF8", Offset = "0xDB8BF8", VA = "0xDB8BF8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xDB8C08", Offset = "0xDB8C08", VA = "0xDB8C08", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xDB8CAC", Offset = "0xDB8CAC", VA = "0xDB8CAC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xDB8D50", Offset = "0xDB8D50", VA = "0xDB8D50", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xDB8DEC", Offset = "0xDB8DEC", VA = "0xDB8DEC")]
		public QueuePINCoOpTest()
		{
		}
	}
	[Token(Token = "0x2000773")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINDifferentCoModeTest")]
	public class QueuePINDifferentCoModeTest : LobbyistTest
	{
		[Token(Token = "0x1700071D")]
		public override string title
		{
			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xDB8DF4", Offset = "0xDB8DF4", VA = "0xDB8DF4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700071E")]
		public override float timeout
		{
			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xDB8EE8", Offset = "0xDB8EE8", VA = "0xDB8EE8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xDB8E34", Offset = "0xDB8E34", VA = "0xDB8E34", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xDB8E44", Offset = "0xDB8E44", VA = "0xDB8E44", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xDB8EF0", Offset = "0xDB8EF0", VA = "0xDB8EF0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xDB8EFC", Offset = "0xDB8EFC", VA = "0xDB8EFC", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xDB8F9C", Offset = "0xDB8F9C", VA = "0xDB8F9C")]
		public QueuePINDifferentCoModeTest()
		{
		}
	}
	[Token(Token = "0x2000774")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINDifferentPINTest")]
	public class QueuePINDifferentPINTest : LobbyistTest
	{
		[Token(Token = "0x1700071F")]
		public override string title
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xDB8FA4", Offset = "0xDB8FA4", VA = "0xDB8FA4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000720")]
		public override float timeout
		{
			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xDB90AC", Offset = "0xDB90AC", VA = "0xDB90AC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xDB8FE4", Offset = "0xDB8FE4", VA = "0xDB8FE4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xDB8FF4", Offset = "0xDB8FF4", VA = "0xDB8FF4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xDB90B4", Offset = "0xDB90B4", VA = "0xDB90B4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xDB90C0", Offset = "0xDB90C0", VA = "0xDB90C0", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xDB9160", Offset = "0xDB9160", VA = "0xDB9160")]
		public QueuePINDifferentPINTest()
		{
		}
	}
	[Token(Token = "0x2000775")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINVersusTest")]
	public class QueuePINVersusTest : LobbyistTest
	{
		[Token(Token = "0x17000721")]
		public override string title
		{
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xDB9168", Offset = "0xDB9168", VA = "0xDB9168", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xDB91A8", Offset = "0xDB91A8", VA = "0xDB91A8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xDB91B8", Offset = "0xDB91B8", VA = "0xDB91B8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xDB925C", Offset = "0xDB925C", VA = "0xDB925C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xDB9300", Offset = "0xDB9300", VA = "0xDB9300", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xDB939C", Offset = "0xDB939C", VA = "0xDB939C")]
		public QueuePINVersusTest()
		{
		}
	}
	[Token(Token = "0x2000776")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINWhenInvitedTest")]
	public class QueuePINWhenInvitedTest : LobbyistTest
	{
		[Token(Token = "0x17000722")]
		public override string title
		{
			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xDB93A4", Offset = "0xDB93A4", VA = "0xDB93A4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xDB93E4", Offset = "0xDB93E4", VA = "0xDB93E4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xDB93F4", Offset = "0xDB93F4", VA = "0xDB93F4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xDB94C8", Offset = "0xDB94C8", VA = "0xDB94C8", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xDB957C", Offset = "0xDB957C", VA = "0xDB957C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xDB9620", Offset = "0xDB9620", VA = "0xDB9620", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xDB96BC", Offset = "0xDB96BC", VA = "0xDB96BC")]
		public QueuePINWhenInvitedTest()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedAnyTest")]
	public class QueueRankedAnyTest : LobbyistTest
	{
		[Token(Token = "0x17000723")]
		public override string title
		{
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xDB96C4", Offset = "0xDB96C4", VA = "0xDB96C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xDB9704", Offset = "0xDB9704", VA = "0xDB9704", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xDB9714", Offset = "0xDB9714", VA = "0xDB9714", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xDB97C4", Offset = "0xDB97C4", VA = "0xDB97C4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xDB9868", Offset = "0xDB9868", VA = "0xDB9868", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xDB9904", Offset = "0xDB9904", VA = "0xDB9904")]
		public QueueRankedAnyTest()
		{
		}
	}
	[Token(Token = "0x2000778")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedBackToQueueAfterIceTimeout")]
	public class QueueRankedBackToQueueAfterIceTimeout : LobbyistTest
	{
		[Token(Token = "0x4002814")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _simulateNoConnectivityBefore;

		[Token(Token = "0x17000724")]
		public override string title
		{
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xDB990C", Offset = "0xDB990C", VA = "0xDB990C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000725")]
		public override float timeout
		{
			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xDB994C", Offset = "0xDB994C", VA = "0xDB994C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0xDB9954", Offset = "0xDB9954", VA = "0xDB9954", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xDB9A08", Offset = "0xDB9A08", VA = "0xDB9A08", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0xDB9AB8", Offset = "0xDB9AB8", VA = "0xDB9AB8", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0xDB9B5C", Offset = "0xDB9B5C", VA = "0xDB9B5C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0xDB9B80", Offset = "0xDB9B80", VA = "0xDB9B80", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xDB9CDC", Offset = "0xDB9CDC", VA = "0xDB9CDC")]
		public QueueRankedBackToQueueAfterIceTimeout()
		{
		}
	}
	[Token(Token = "0x2000779")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedCoOpTest")]
	public class QueueRankedCoOpTest : LobbyistTest
	{
		[Token(Token = "0x17000726")]
		public override string title
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xDB9CE4", Offset = "0xDB9CE4", VA = "0xDB9CE4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xDB9D24", Offset = "0xDB9D24", VA = "0xDB9D24", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0xDB9D34", Offset = "0xDB9D34", VA = "0xDB9D34", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0xDB9DE4", Offset = "0xDB9DE4", VA = "0xDB9DE4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xDB9E88", Offset = "0xDB9E88", VA = "0xDB9E88", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0xDB9F24", Offset = "0xDB9F24", VA = "0xDB9F24")]
		public QueueRankedCoOpTest()
		{
		}
	}
	[Token(Token = "0x200077A")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedLateSuspendTest")]
	public class QueueRankedLateSuspendTest : LobbyistTest
	{
		[Token(Token = "0x17000727")]
		public override string title
		{
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xDB9F2C", Offset = "0xDB9F2C", VA = "0xDB9F2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000728")]
		public override float timeout
		{
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xDB9F6C", Offset = "0xDB9F6C", VA = "0xDB9F6C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0xDB9F74", Offset = "0xDB9F74", VA = "0xDB9F74", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xDB9F84", Offset = "0xDB9F84", VA = "0xDB9F84", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xDBA08C", Offset = "0xDBA08C", VA = "0xDBA08C", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xDBA140", Offset = "0xDBA140", VA = "0xDBA140", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xDBA1A8", Offset = "0xDBA1A8", VA = "0xDBA1A8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0xDBA350", Offset = "0xDBA350", VA = "0xDBA350", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0xDBA288", Offset = "0xDBA288", VA = "0xDBA288")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xDBA354", Offset = "0xDBA354", VA = "0xDBA354", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xDBA3F0", Offset = "0xDBA3F0", VA = "0xDBA3F0")]
		public QueueRankedLateSuspendTest()
		{
		}
	}
	[Token(Token = "0x200077B")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedSuspendTest")]
	public class QueueRankedSuspendTest : LobbyistTest
	{
		[Token(Token = "0x17000729")]
		public override string title
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xDBA3F8", Offset = "0xDBA3F8", VA = "0xDBA3F8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072A")]
		public override float timeout
		{
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xDBA438", Offset = "0xDBA438", VA = "0xDBA438", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xDBA440", Offset = "0xDBA440", VA = "0xDBA440", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0xDBA450", Offset = "0xDBA450", VA = "0xDBA450", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0xDBA564", Offset = "0xDBA564", VA = "0xDBA564", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xDBA618", Offset = "0xDBA618", VA = "0xDBA618", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0xDBA680", Offset = "0xDBA680", VA = "0xDBA680", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xDBA828", Offset = "0xDBA828", VA = "0xDBA828", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xDBA760", Offset = "0xDBA760", VA = "0xDBA760")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xDBA82C", Offset = "0xDBA82C", VA = "0xDBA82C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xDBA8C8", Offset = "0xDBA8C8", VA = "0xDBA8C8")]
		public QueueRankedSuspendTest()
		{
		}
	}
	[Token(Token = "0x200077C")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedVersionTest")]
	public class QueueRankedVersionTest : LobbyistTest
	{
		[Token(Token = "0x1700072B")]
		public override string title
		{
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xDBA8D0", Offset = "0xDBA8D0", VA = "0xDBA8D0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072C")]
		public override float timeout
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xDBAA70", Offset = "0xDBAA70", VA = "0xDBAA70", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0xDBA910", Offset = "0xDBA910", VA = "0xDBA910", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xDBA9C0", Offset = "0xDBA9C0", VA = "0xDBA9C0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0xDBAA78", Offset = "0xDBAA78", VA = "0xDBAA78", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0xDBAA84", Offset = "0xDBAA84", VA = "0xDBAA84", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0xDBAB14", Offset = "0xDBAB14", VA = "0xDBAB14", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xDBAB58", Offset = "0xDBAB58", VA = "0xDBAB58")]
		public QueueRankedVersionTest()
		{
		}
	}
	[Token(Token = "0x200077D")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedVersusTest")]
	public class QueueRankedVersusTest : LobbyistTest
	{
		[Token(Token = "0x1700072D")]
		public override string title
		{
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xDBAB60", Offset = "0xDBAB60", VA = "0xDBAB60", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xDBABA0", Offset = "0xDBABA0", VA = "0xDBABA0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0xDBABB0", Offset = "0xDBABB0", VA = "0xDBABB0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xDBAC60", Offset = "0xDBAC60", VA = "0xDBAC60", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0xDBAD04", Offset = "0xDBAD04", VA = "0xDBAD04", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0xDBADA0", Offset = "0xDBADA0", VA = "0xDBADA0")]
		public QueueRankedVersusTest()
		{
		}
	}
	[Token(Token = "0x200077E")]
	[AddComponentMenu("Multiplayer/Tests/CanSignInWithTheSameId")]
	public class CanSignInWithTheSameId : LobbyistTest
	{
		[Token(Token = "0x1700072E")]
		public override string title
		{
			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xDBADA8", Offset = "0xDBADA8", VA = "0xDBADA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0xDBADE8", Offset = "0xDBADE8", VA = "0xDBADE8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0xDBADFC", Offset = "0xDBADFC", VA = "0xDBADFC", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0xDBAF88", Offset = "0xDBAF88", VA = "0xDBAF88")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0xDBB02C", Offset = "0xDBB02C", VA = "0xDBB02C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0xDBB070", Offset = "0xDBB070", VA = "0xDBB070")]
		public CanSignInWithTheSameId()
		{
		}
	}
	[Token(Token = "0x200077F")]
	[AddComponentMenu("Multiplayer/Tests/QueueForPinSameId")]
	public class QueueForPinSameId : LobbyistTest
	{
		[Token(Token = "0x1700072F")]
		public override string title
		{
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xDBB078", Offset = "0xDBB078", VA = "0xDBB078", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0xDBB0B8", Offset = "0xDBB0B8", VA = "0xDBB0B8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0xDBB1B4", Offset = "0xDBB1B4", VA = "0xDBB1B4", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0xDBB20C", Offset = "0xDBB20C", VA = "0xDBB20C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0xDBB218", Offset = "0xDBB218", VA = "0xDBB218", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0xDBB25C", Offset = "0xDBB25C", VA = "0xDBB25C")]
		public QueueForPinSameId()
		{
		}
	}
	[Token(Token = "0x2000780")]
	[AddComponentMenu("Multiplayer/Tests/RankedQueueFailForOlderPlayerWithSameId")]
	public class RankedQueueFailForOlderPlayerWithSameId : LobbyistTest
	{
		[Token(Token = "0x17000730")]
		public override string title
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xDBB264", Offset = "0xDBB264", VA = "0xDBB264", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0xDBB2A4", Offset = "0xDBB2A4", VA = "0xDBB2A4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0xDBB338", Offset = "0xDBB338", VA = "0xDBB338", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0xDBB4F0", Offset = "0xDBB4F0", VA = "0xDBB4F0", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0xDBB560", Offset = "0xDBB560", VA = "0xDBB560", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0xDBB56C", Offset = "0xDBB56C", VA = "0xDBB56C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0xDBB5B0", Offset = "0xDBB5B0", VA = "0xDBB5B0")]
		public RankedQueueFailForOlderPlayerWithSameId()
		{
		}
	}
	[Token(Token = "0x2000781")]
	[AddComponentMenu("Multiplayer/Tests/SignInTest")]
	public class SignInTest : LobbyistTest
	{
		[Token(Token = "0x17000731")]
		public override string title
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xDBB5B8", Offset = "0xDBB5B8", VA = "0xDBB5B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0xDBB5F8", Offset = "0xDBB5F8", VA = "0xDBB5F8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xDBB608", Offset = "0xDBB608", VA = "0xDBB608", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0xDBB630", Offset = "0xDBB630", VA = "0xDBB630")]
		public SignInTest()
		{
		}
	}
	[Token(Token = "0x2000782")]
	[AddComponentMenu("Multiplayer/Tests/WrongVersionTest")]
	public class WrongVersionTest : LobbyistTest
	{
		[Token(Token = "0x17000732")]
		public override string title
		{
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xDBB638", Offset = "0xDBB638", VA = "0xDBB638", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0xDBB678", Offset = "0xDBB678", VA = "0xDBB678", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xDBB854", Offset = "0xDBB854", VA = "0xDBB854")]
		public WrongVersionTest()
		{
		}
	}
}
namespace Multiplayer.Data
{
	[Serializable]
	[Token(Token = "0x2000784")]
	public struct Address
	{
		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;
	}
	[Token(Token = "0x2000785")]
	public enum CoMode
	{
		[Token(Token = "0x400281C")]
		Undefined,
		[Token(Token = "0x400281D")]
		Versus,
		[Token(Token = "0x400281E")]
		CoOp
	}
	[Token(Token = "0x2000786")]
	public enum CoModes
	{
		[Token(Token = "0x4002820")]
		Undefined,
		[Token(Token = "0x4002821")]
		Versus,
		[Token(Token = "0x4002822")]
		CoOp,
		[Token(Token = "0x4002823")]
		VersusOrCoOp
	}
	[Token(Token = "0x2000787")]
	public class CoModesHelper
	{
		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<CoModes, string> _coModesNames;

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xDBB9BC", Offset = "0xDBB9BC", VA = "0xDBB9BC")]
		public static CoModes CombineBools(bool versus, bool coOp)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xDBB9DC", Offset = "0xDBB9DC", VA = "0xDBB9DC")]
		public static CoModes Pluralize(CoMode coMode)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xDBBAA8", Offset = "0xDBBAA8", VA = "0xDBBAA8")]
		public static CoMode Singularize(CoModes coModes)
		{
			return default(CoMode);
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xDBBBD8", Offset = "0xDBBBD8", VA = "0xDBBBD8")]
		public static string SerializeCoModes(CoModes coModes)
		{
			return null;
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0xDBBC58", Offset = "0xDBBC58", VA = "0xDBBC58")]
		public static CoModes DeserializeCoModes(string coModesString)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xDBBE60", Offset = "0xDBBE60", VA = "0xDBBE60")]
		public static string SerializeCoMode(CoMode coMode)
		{
			return null;
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xDBBEB8", Offset = "0xDBBEB8", VA = "0xDBBEB8")]
		public static CoMode DeserializeCoMode(string coModeString)
		{
			return default(CoMode);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xDBBF10", Offset = "0xDBBF10", VA = "0xDBBF10")]
		public static bool DoCoModesMatch(CoModes coModes1, CoModes coModes2, out CoModes commonCoModes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xDBBF4C", Offset = "0xDBBF4C", VA = "0xDBBF4C")]
		public CoModesHelper()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public enum GameResolution
	{
		[Token(Token = "0x4002827")]
		Undefined,
		[Token(Token = "0x4002828")]
		Victory,
		[Token(Token = "0x4002829")]
		Defeat,
		[Token(Token = "0x400282A")]
		Draw
	}
	[Token(Token = "0x200078A")]
	public enum PlayerID : byte
	{
		[Token(Token = "0x400282C")]
		Unknown,
		[Token(Token = "0x400282D")]
		Player1,
		[Token(Token = "0x400282E")]
		Player2
	}
}
namespace Level_Editor.UI
{
	[Token(Token = "0x200078B")]
	public class BrushTypeDataHolder : MonoBehaviour
	{
		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrushType brushType;

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xDBC0D0", Offset = "0xDBC0D0", VA = "0xDBC0D0")]
		public BrushTypeDataHolder()
		{
		}
	}
}
namespace WaveSetPackages
{
	[Token(Token = "0x200078C")]
	internal struct PackedWaveSet
	{
		[Token(Token = "0x4002830")]
		public const string waveSetFilename = "waveset.json";

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;
	}
	[Token(Token = "0x200078D")]
	internal struct PackedWave
	{
		[Serializable]
		[Token(Token = "0x200078E")]
		public struct ArcadePlacement
		{
			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool exclusiveAtThisDifficulty;

			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int minDifficulty;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int maxDifficulty;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string setWithEquivalentDifficulty;
		}

		[Serializable]
		[Token(Token = "0x200078F")]
		public struct ArenaAlignment
		{
			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WaveHandcrafted.Positioning positioning;

			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int customShift;

			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool alignWithGutter;

			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool allowHorizontalMirror;

			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool allowVerticalMirror;
		}

		[Serializable]
		[Token(Token = "0x2000790")]
		public struct TargetsDamage
		{
			[Token(Token = "0x4002848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int defaultTargetsHitPoints;

			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] staticTargetHitPointses;
		}

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<int, string> waveFilename;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, string> levelFilename;

		[Token(Token = "0x4002835")]
		public const string levelFilenameFormat = "";

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool walledBorders;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string borderWallType;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeFactor;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadePlacement arcadePlacement;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArenaAlignment arenaAlignment;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TargetsDamage targetsDamage;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SerializablePowerupType[] powerups;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SerializablePowerupType[] excludedPowerupTypes;
	}
	[Token(Token = "0x2000792")]
	internal struct PackedLevel
	{
		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<BrickType, string> nonTargetTypeStrings;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<BrickType, char> targetTypeChars;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<HexTrudeManager.WallType, char> wallTypeChars;

		[Token(Token = "0x400284E")]
		public const string FORCE_FIELD = "#";
	}
}
namespace RNX
{
	[Token(Token = "0x2000793")]
	[CreateAssetMenu(menuName = "Data/Audio Settings")]
	public class AudioSettings : UpdatableData
	{
		[Token(Token = "0x2000794")]
		public enum Spatializer
		{
			[Token(Token = "0x4002854")]
			Nx,
			[Token(Token = "0x4002855")]
			Oculus,
			[Token(Token = "0x4002856")]
			Pico,
			[Token(Token = "0x4002857")]
			None
		}

		[Serializable]
		[Token(Token = "0x2000795")]
		public class DecibelConversion
		{
			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float logBase;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("The dB for 50% volume")]
			public float halfVolumeDecibels;

			[Token(Token = "0x17000734")]
			public float factor
			{
				[Token(Token = "0x6002C48")]
				[Address(RVA = "0xDBC67C", Offset = "0xDBC67C", VA = "0xDBC67C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0xDBC6E4", Offset = "0xDBC6E4", VA = "0xDBC6E4")]
			public DecibelConversion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000796")]
		public class Keys
		{
			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string musicVolume;

			[Token(Token = "0x400285B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string soundEffectsVolume;

			[Token(Token = "0x400285C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string voiceChatVolume;

			[Token(Token = "0x400285D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string mikeOn;

			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string announcerOn;

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0xDBC6F8", Offset = "0xDBC6F8", VA = "0xDBC6F8")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Spatializer _spatialized;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float picoGainDbCompensation;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DecibelConversion decibelConversion;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Keys keys;

		[Token(Token = "0x17000733")]
		public Spatializer spatializer
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xDBC664", Offset = "0xDBC664", VA = "0xDBC664")]
			get
			{
				return default(Spatializer);
			}
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xDBC66C", Offset = "0xDBC66C", VA = "0xDBC66C")]
		public void SetSpatializer(Spatializer value)
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xDBC674", Offset = "0xDBC674", VA = "0xDBC674")]
		public AudioSettings()
		{
		}
	}
}
namespace RacketNx.AsyncUtils
{
	[Token(Token = "0x2000797")]
	public static class TaskExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x2000798")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__0<TResult> : IAsyncStateMachine
		{
			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TResult> <>t__builder;

			[Token(Token = "0x4002861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeout;

			[Token(Token = "0x4002862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<TResult> task;

			[Token(Token = "0x4002863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TResult> <>u__1;

			[Token(Token = "0x6002C4F")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C50")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000799")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4002864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeout;

			[Token(Token = "0x4002867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task task;

			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xDBC9E8", Offset = "0xDBC9E8", VA = "0xDBC9E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xDBCBB4", Offset = "0xDBCBB4", VA = "0xDBCBB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200079A")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__2<TResult> : IAsyncStateMachine
		{
			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TResult> <>t__builder;

			[Token(Token = "0x400286B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<TResult> task;

			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TimeSpan timeout;

			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CancellationTokenSource <timeoutCancellationTokenSource>5__2;

			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TResult> <>u__2;

			[Token(Token = "0x6002C53")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C54")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200079B")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task task;

			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TimeSpan timeout;

			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationTokenSource <timeoutCancellationTokenSource>5__2;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xDBCBC0", Offset = "0xDBCBC0", VA = "0xDBCBC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0xDBD1D0", Offset = "0xDBD1D0", VA = "0xDBD1D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6002C4B")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__0<>))]
		public static Task<TResult> TimeoutAfter<TResult>(this Task<TResult> task, float timeout)
		{
			return null;
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xDBC7F0", Offset = "0xDBC7F0", VA = "0xDBC7F0")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__1))]
		public static Task TimeoutAfter(this Task task, float timeout)
		{
			return null;
		}

		[Token(Token = "0x6002C4D")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__2<>))]
		public static Task<TResult> TimeoutAfter<TResult>(this Task<TResult> task, TimeSpan timeout)
		{
			return null;
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0xDBC8F0", Offset = "0xDBC8F0", VA = "0xDBC8F0")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__3))]
		public static Task TimeoutAfter(this Task task, TimeSpan timeout)
		{
			return null;
		}
	}
}
namespace RacketNx.Logger
{
	[Token(Token = "0x200079C")]
	public class RemoteLogger : MonoBehaviour
	{
		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RemoteLogger inst;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly HashSet<string> reservedKeywords;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JsonPacker _jsonPacker;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _messagesFilePath;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QueueEx<string> _messagesToSend;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<string> _messagesBeingSent;

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0xDBD1DC", Offset = "0xDBD1DC", VA = "0xDBD1DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0xDBD4C8", Offset = "0xDBD4C8", VA = "0xDBD4C8")]
		private void LoadQueueFromFile()
		{
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0xDBD9E0", Offset = "0xDBD9E0", VA = "0xDBD9E0")]
		private void SaveQueueToFile()
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0xDBD9E4", Offset = "0xDBD9E4", VA = "0xDBD9E4")]
		public static void Log(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xDBE018", Offset = "0xDBE018", VA = "0xDBE018")]
		public static void LogWarning(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xDBE14C", Offset = "0xDBE14C", VA = "0xDBE14C")]
		public static void LogError(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xDBDB18", Offset = "0xDBDB18", VA = "0xDBDB18")]
		private void LogInternal(string msg, string logLevel, string[] args)
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xDBD544", Offset = "0xDBD544", VA = "0xDBD544")]
		private void SendQueue()
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xDBE454", Offset = "0xDBE454", VA = "0xDBE454")]
		private void SendMessage(string message)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0xDBE828", Offset = "0xDBE828", VA = "0xDBE828")]
		public RemoteLogger()
		{
		}
	}
}
namespace RacketNx.AnalyticsNetwork
{
	[Token(Token = "0x200079E")]
	internal class JsonPacker
	{
		[Token(Token = "0x200079F")]
		private enum State
		{
			[Token(Token = "0x4002883")]
			Initialized,
			[Token(Token = "0x4002884")]
			Updated,
			[Token(Token = "0x4002885")]
			Terminated
		}

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _stringBuilder;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State _state;

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xDBD44C", Offset = "0xDBD44C", VA = "0xDBD44C")]
		public JsonPacker()
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xDBE280", Offset = "0xDBE280", VA = "0xDBE280")]
		public void Init()
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0xDBE2F0", Offset = "0xDBE2F0", VA = "0xDBE2F0")]
		public void Update(string key, string value)
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xDBECEC", Offset = "0xDBECEC", VA = "0xDBECEC")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xDBEDA4", Offset = "0xDBEDA4", VA = "0xDBEDA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20007A0")]
	public static class Utils
	{
		[Token(Token = "0x20007A1")]
		public delegate void RequestDoneHandler(string error, byte[] responseData);

		[Token(Token = "0x20007A2")]
		[CompilerGenerated]
		private sealed class <sendRequestCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityWebRequest www;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RequestDoneHandler callback;

			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long expectedResponseCode;

			[Token(Token = "0x17000735")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002C74")]
				[Address(RVA = "0xDBF5A4", Offset = "0xDBF5A4", VA = "0xDBF5A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000736")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C76")]
				[Address(RVA = "0xDBF5EC", Offset = "0xDBF5EC", VA = "0xDBF5EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xDBEFF0", Offset = "0xDBEFF0", VA = "0xDBEFF0")]
			[DebuggerHidden]
			public <sendRequestCo>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xDBF060", Offset = "0xDBF060", VA = "0xDBF060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xDBF064", Offset = "0xDBF064", VA = "0xDBF064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xDBF5AC", Offset = "0xDBF5AC", VA = "0xDBF5AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xDBEDDC", Offset = "0xDBEDDC", VA = "0xDBEDDC")]
		public static UnityWebRequest createPostRequest(string url, byte[] body)
		{
			return null;
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0xDBE678", Offset = "0xDBE678", VA = "0xDBE678")]
		public static UnityWebRequest createPostRequest(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xDBE7A8", Offset = "0xDBE7A8", VA = "0xDBE7A8")]
		public static void sendRequest(MonoBehaviour surrogate, UnityWebRequest www, long expectedResponseCode, RequestDoneHandler callback)
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xDBEF58", Offset = "0xDBEF58", VA = "0xDBEF58")]
		[IteratorStateMachine(typeof(<sendRequestCo>d__4))]
		private static IEnumerator<float> sendRequestCo(UnityWebRequest www, long expectedResponseCode, RequestDoneHandler callback)
		{
			return null;
		}
	}
}
namespace POpusCodec
{
	[Token(Token = "0x20007A3")]
	public class OpusDecoder : IDisposable
	{
		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x400288C")]
		private const int MaxFrameSize = 5760;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _previousPacketInvalid;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _channelCount;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bandwidth? _previousPacketBandwidth;

		[Token(Token = "0x17000737")]
		public Bandwidth? PreviousPacketBandwidth
		{
			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xDBF648", Offset = "0xDBF648", VA = "0xDBF648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0xDBF650", Offset = "0xDBF650", VA = "0xDBF650")]
		public OpusDecoder(SamplingRate outputSamplingRateHz, Channels numChannels)
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xDBF9D0", Offset = "0xDBF9D0", VA = "0xDBF9D0")]
		public int DecodePacketLost(short[] decodedData, int decodedDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xDBFB44", Offset = "0xDBFB44", VA = "0xDBFB44")]
		public int DecodePacketLostFloat(float[] decodedData, int decodedDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xDBFCB8", Offset = "0xDBFCB8", VA = "0xDBFCB8")]
		public int DecodePacket(short[] decodedData, int decodedDataSize, byte[] packetData, int packetDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xDBFE18", Offset = "0xDBFE18", VA = "0xDBFE18")]
		public int DecodePacketFloat(float[] decodedData, int decodedDataSize, byte[] packetData, int packetDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xDBFEF4", Offset = "0xDBFEF4", VA = "0xDBFEF4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class OpusEncoder : IDisposable
	{
		[Token(Token = "0x4002890")]
		public const int BitrateMax = -1;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameSizePerChannel;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SamplingRate _inputSamplingRate;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Channels _inputChannels;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Delay _encoderDelay;

		[Token(Token = "0x17000738")]
		public SamplingRate InputSamplingRate
		{
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xDBFFC0", Offset = "0xDBFFC0", VA = "0xDBFFC0")]
			get
			{
				return default(SamplingRate);
			}
		}

		[Token(Token = "0x17000739")]
		public Channels InputChannels
		{
			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xDBFFC8", Offset = "0xDBFFC8", VA = "0xDBFFC8")]
			get
			{
				return default(Channels);
			}
		}

		[Token(Token = "0x1700073A")]
		public Delay EncoderDelay
		{
			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xDC00E4", Offset = "0xDC00E4", VA = "0xDC00E4")]
			get
			{
				return default(Delay);
			}
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xDBFFD0", Offset = "0xDBFFD0", VA = "0xDBFFD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700073B")]
		public int FrameSizePerChannel
		{
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xDC00EC", Offset = "0xDC00EC", VA = "0xDC00EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700073C")]
		public int Bitrate
		{
			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xDC00F4", Offset = "0xDC00F4", VA = "0xDC00F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xDC01D4", Offset = "0xDC01D4", VA = "0xDC01D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700073D")]
		public Bandwidth MaxBandwidth
		{
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xDC02AC", Offset = "0xDC02AC", VA = "0xDC02AC")]
			get
			{
				return default(Bandwidth);
			}
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xDC02B8", Offset = "0xDC02B8", VA = "0xDC02B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700073E")]
		public Complexity Complexity
		{
			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xDC02C8", Offset = "0xDC02C8", VA = "0xDC02C8")]
			get
			{
				return default(Complexity);
			}
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0xDC02D4", Offset = "0xDC02D4", VA = "0xDC02D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700073F")]
		public int ExpectedPacketLossPercentage
		{
			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xDC02E4", Offset = "0xDC02E4", VA = "0xDC02E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xDC02F0", Offset = "0xDC02F0", VA = "0xDC02F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000740")]
		public SignalHint SignalHint
		{
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xDC0300", Offset = "0xDC0300", VA = "0xDC0300")]
			get
			{
				return default(SignalHint);
			}
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xDC030C", Offset = "0xDC030C", VA = "0xDC030C")]
			set
			{
			}
		}

		[Token(Token = "0x17000741")]
		public ForceChannels ForceChannels
		{
			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0xDC031C", Offset = "0xDC031C", VA = "0xDC031C")]
			get
			{
				return default(ForceChannels);
			}
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0xDC0328", Offset = "0xDC0328", VA = "0xDC0328")]
			set
			{
			}
		}

		[Token(Token = "0x17000742")]
		public bool UseInbandFEC
		{
			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xDC0338", Offset = "0xDC0338", VA = "0xDC0338")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xDC0358", Offset = "0xDC0358", VA = "0xDC0358")]
			set
			{
			}
		}

		[Token(Token = "0x17000743")]
		public bool UseUnconstrainedVBR
		{
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xDC0368", Offset = "0xDC0368", VA = "0xDC0368")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xDC0388", Offset = "0xDC0388", VA = "0xDC0388")]
			set
			{
			}
		}

		[Token(Token = "0x17000744")]
		public bool DtxEnabled
		{
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xDC039C", Offset = "0xDC039C", VA = "0xDC039C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xDC03BC", Offset = "0xDC03BC", VA = "0xDC03BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0xDC03CC", Offset = "0xDC03CC", VA = "0xDC03CC")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels)
		{
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0xDC068C", Offset = "0xDC068C", VA = "0xDC068C")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate)
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0xDC0698", Offset = "0xDC0698", VA = "0xDC0698")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate, OpusApplicationType applicationType)
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0xDC03E0", Offset = "0xDC03E0", VA = "0xDC03E0")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate, OpusApplicationType applicationType, Delay encoderDelay)
		{
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xDC07F8", Offset = "0xDC07F8", VA = "0xDC07F8")]
		public int Encode(byte[] encodedData, short[] pcmSamples)
		{
			return default(int);
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xDC0928", Offset = "0xDC0928", VA = "0xDC0928")]
		public int Encode(byte[] encodedData, float[] pcmSamples)
		{
			return default(int);
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xDC0A58", Offset = "0xDC0A58", VA = "0xDC0A58", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class OpusException : Exception
	{
		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private OpusStatusCode _statusCode;

		[Token(Token = "0x17000745")]
		public OpusStatusCode StatusCode
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xDC0B24", Offset = "0xDC0B24", VA = "0xDC0B24")]
			get
			{
				return default(OpusStatusCode);
			}
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xDBF95C", Offset = "0xDBF95C", VA = "0xDBF95C")]
		public OpusException(OpusStatusCode statusCode, string message)
		{
		}
	}
	[Token(Token = "0x20007A6")]
	internal class Wrapper
	{
		[PreserveSig]
		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xDC0B2C", Offset = "0xDC0B2C", VA = "0xDC0B2C")]
		private static extern int opus_encoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xDC0BA4", Offset = "0xDC0BA4", VA = "0xDC0BA4")]
		private static extern OpusStatusCode opus_encoder_init(IntPtr st, SamplingRate Fs, Channels channels, OpusApplicationType application);

		[PreserveSig]
		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xDC0C40", Offset = "0xDC0C40", VA = "0xDC0C40")]
		public static extern string opus_get_version_string();

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xDC06A0", Offset = "0xDC06A0", VA = "0xDC06A0")]
		public static IntPtr opus_encoder_create(SamplingRate Fs, Channels channels, OpusApplicationType application)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xDC0DC8", Offset = "0xDC0DC8", VA = "0xDC0DC8")]
		private static extern int opus_encode(IntPtr st, short[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xDC0830", Offset = "0xDC0830", VA = "0xDC0830")]
		public static int opusEncode(IntPtr st, short[] pcm, int frame_size, byte[] data, int max_data_bytes)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xDC0E84", Offset = "0xDC0E84", VA = "0xDC0E84")]
		private static extern int opus_encode_float(IntPtr st, float[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xDC0960", Offset = "0xDC0960", VA = "0xDC0960")]
		public static int opusEncode(IntPtr st, float[] pcm, int frame_size, byte[] data, int max_data_bytes)
		{
			return default(int);
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0xDC0ACC", Offset = "0xDC0ACC", VA = "0xDC0ACC")]
		public static void opus_encoder_destroy(IntPtr st)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0xDC0F40", Offset = "0xDC0F40", VA = "0xDC0F40")]
		private static extern int opus_encoder_ctl(IntPtr st, OpusCtlSetRequest request, int value);

		[PreserveSig]
		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xDC0FD0", Offset = "0xDC0FD0", VA = "0xDC0FD0")]
		private static extern int opus_encoder_ctl(IntPtr st, OpusCtlGetRequest request, ref int value);

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0xDC0100", Offset = "0xDC0100", VA = "0xDC0100")]
		public static int get_opus_encoder_ctl(IntPtr st, OpusCtlGetRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xDC01E4", Offset = "0xDC01E4", VA = "0xDC01E4")]
		public static void set_opus_encoder_ctl(IntPtr st, OpusCtlSetRequest request, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xDC1064", Offset = "0xDC1064", VA = "0xDC1064")]
		private static extern int opus_decoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xDC10DC", Offset = "0xDC10DC", VA = "0xDC10DC")]
		private static extern OpusStatusCode opus_decoder_init(IntPtr st, SamplingRate Fs, Channels channels);

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0xDBF80C", Offset = "0xDBF80C", VA = "0xDBF80C")]
		public static IntPtr opus_decoder_create(SamplingRate Fs, Channels channels)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0xDBFF68", Offset = "0xDBFF68", VA = "0xDBFF68")]
		public static void opus_decoder_destroy(IntPtr st)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0xDC1170", Offset = "0xDC1170", VA = "0xDC1170")]
		private static extern int opus_decode(IntPtr st, byte[] data, int len, short[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0xDC1234", Offset = "0xDC1234", VA = "0xDC1234")]
		private static extern int opus_decode_float(IntPtr st, byte[] data, int len, float[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0xDC12F8", Offset = "0xDC12F8", VA = "0xDC12F8")]
		private static extern int opus_decode(IntPtr st, IntPtr data, int len, short[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0xDC13B4", Offset = "0xDC13B4", VA = "0xDC13B4")]
		private static extern int opus_decode_float(IntPtr st, IntPtr data, int len, float[] pcm, int frame_size, int decode_fec);

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0xDBF9FC", Offset = "0xDBF9FC", VA = "0xDBF9FC")]
		public static int opusDecode(IntPtr st, byte[] data, int len, short[] pcm, int frame_size, int decode_fec, int channels)
		{
			return default(int);
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0xDBFB70", Offset = "0xDBFB70", VA = "0xDBFB70")]
		public static int opusDecode(IntPtr st, byte[] data, int len, float[] pcm, int frame_size, int decode_fec, int channels)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xDBFD94", Offset = "0xDBFD94", VA = "0xDBFD94")]
		public static extern int opus_packet_get_bandwidth(byte[] data);

		[PreserveSig]
		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xDC1470", Offset = "0xDC1470", VA = "0xDC1470")]
		public static extern int opus_packet_get_nb_channels(byte[] data);

		[PreserveSig]
		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xDC14F4", Offset = "0xDC14F4", VA = "0xDC14F4")]
		private static extern string opus_strerror(OpusStatusCode error);

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xDC0CC4", Offset = "0xDC0CC4", VA = "0xDC0CC4")]
		private static void HandleStatusCode(OpusStatusCode statusCode)
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xDC1584", Offset = "0xDC1584", VA = "0xDC1584")]
		public Wrapper()
		{
		}
	}
}
namespace POpusCodec.Enums
{
	[Token(Token = "0x20007A7")]
	public enum Bandwidth
	{
		[Token(Token = "0x4002898")]
		Narrowband = 1101,
		[Token(Token = "0x4002899")]
		Mediumband,
		[Token(Token = "0x400289A")]
		Wideband,
		[Token(Token = "0x400289B")]
		SuperWideband,
		[Token(Token = "0x400289C")]
		Fullband
	}
	[Token(Token = "0x20007A8")]
	public enum Channels
	{
		[Token(Token = "0x400289E")]
		Mono = 1,
		[Token(Token = "0x400289F")]
		Stereo
	}
	[Token(Token = "0x20007A9")]
	public enum Complexity
	{
		[Token(Token = "0x40028A1")]
		Complexity0,
		[Token(Token = "0x40028A2")]
		Complexity1,
		[Token(Token = "0x40028A3")]
		Complexity2,
		[Token(Token = "0x40028A4")]
		Complexity3,
		[Token(Token = "0x40028A5")]
		Complexity4,
		[Token(Token = "0x40028A6")]
		Complexity5,
		[Token(Token = "0x40028A7")]
		Complexity6,
		[Token(Token = "0x40028A8")]
		Complexity7,
		[Token(Token = "0x40028A9")]
		Complexity8,
		[Token(Token = "0x40028AA")]
		Complexity9,
		[Token(Token = "0x40028AB")]
		Complexity10
	}
	[Token(Token = "0x20007AA")]
	public enum Delay
	{
		[Token(Token = "0x40028AD")]
		Delay2dot5ms = 5,
		[Token(Token = "0x40028AE")]
		Delay5ms = 10,
		[Token(Token = "0x40028AF")]
		Delay10ms = 20,
		[Token(Token = "0x40028B0")]
		Delay20ms = 40,
		[Token(Token = "0x40028B1")]
		Delay40ms = 80,
		[Token(Token = "0x40028B2")]
		Delay60ms = 120
	}
	[Token(Token = "0x20007AB")]
	public enum ForceChannels
	{
		[Token(Token = "0x40028B4")]
		NoForce = -1000,
		[Token(Token = "0x40028B5")]
		Mono = 1,
		[Token(Token = "0x40028B6")]
		Stereo = 2
	}
	[Token(Token = "0x20007AC")]
	public enum OpusApplicationType
	{
		[Token(Token = "0x40028B8")]
		Voip = 2048,
		[Token(Token = "0x40028B9")]
		Audio = 2049,
		[Token(Token = "0x40028BA")]
		RestrictedLowDelay = 2051
	}
	[Token(Token = "0x20007AD")]
	internal enum OpusCtlGetRequest
	{
		[Token(Token = "0x40028BC")]
		Application = 4001,
		[Token(Token = "0x40028BD")]
		Bitrate = 4003,
		[Token(Token = "0x40028BE")]
		MaxBandwidth = 4005,
		[Token(Token = "0x40028BF")]
		VBR = 4007,
		[Token(Token = "0x40028C0")]
		Bandwidth = 4009,
		[Token(Token = "0x40028C1")]
		Complexity = 4011,
		[Token(Token = "0x40028C2")]
		InbandFec = 4013,
		[Token(Token = "0x40028C3")]
		PacketLossPercentage = 4015,
		[Token(Token = "0x40028C4")]
		Dtx = 4017,
		[Token(Token = "0x40028C5")]
		VBRConstraint = 4021,
		[Token(Token = "0x40028C6")]
		ForceChannels = 4023,
		[Token(Token = "0x40028C7")]
		Signal = 4025,
		[Token(Token = "0x40028C8")]
		LookAhead = 4027,
		[Token(Token = "0x40028C9")]
		SampleRate = 4029,
		[Token(Token = "0x40028CA")]
		FinalRange = 4031,
		[Token(Token = "0x40028CB")]
		Pitch = 4033,
		[Token(Token = "0x40028CC")]
		Gain = 4035,
		[Token(Token = "0x40028CD")]
		LsbDepth = 4037
	}
	[Token(Token = "0x20007AE")]
	internal enum OpusCtlSetRequest
	{
		[Token(Token = "0x40028CF")]
		Application = 4000,
		[Token(Token = "0x40028D0")]
		Bitrate = 4002,
		[Token(Token = "0x40028D1")]
		MaxBandwidth = 4004,
		[Token(Token = "0x40028D2")]
		VBR = 4006,
		[Token(Token = "0x40028D3")]
		Bandwidth = 4008,
		[Token(Token = "0x40028D4")]
		Complexity = 4010,
		[Token(Token = "0x40028D5")]
		InbandFec = 4012,
		[Token(Token = "0x40028D6")]
		PacketLossPercentage = 4014,
		[Token(Token = "0x40028D7")]
		Dtx = 4016,
		[Token(Token = "0x40028D8")]
		VBRConstraint = 4020,
		[Token(Token = "0x40028D9")]
		ForceChannels = 4022,
		[Token(Token = "0x40028DA")]
		Signal = 4024,
		[Token(Token = "0x40028DB")]
		Gain = 4034,
		[Token(Token = "0x40028DC")]
		LsbDepth = 4036
	}
	[Token(Token = "0x20007AF")]
	public enum OpusStatusCode
	{
		[Token(Token = "0x40028DE")]
		OK = 0,
		[Token(Token = "0x40028DF")]
		BadArguments = -1,
		[Token(Token = "0x40028E0")]
		BufferTooSmall = -2,
		[Token(Token = "0x40028E1")]
		InternalError = -3,
		[Token(Token = "0x40028E2")]
		InvalidPacket = -4,
		[Token(Token = "0x40028E3")]
		Unimplemented = -5,
		[Token(Token = "0x40028E4")]
		InvalidState = -6,
		[Token(Token = "0x40028E5")]
		AllocFail = -7
	}
	[Token(Token = "0x20007B0")]
	public enum SamplingRate
	{
		[Token(Token = "0x40028E7")]
		Sampling08000 = 8000,
		[Token(Token = "0x40028E8")]
		Sampling12000 = 12000,
		[Token(Token = "0x40028E9")]
		Sampling16000 = 16000,
		[Token(Token = "0x40028EA")]
		Sampling24000 = 24000,
		[Token(Token = "0x40028EB")]
		Sampling48000 = 48000
	}
	[Token(Token = "0x20007B1")]
	public enum SignalHint
	{
		[Token(Token = "0x40028ED")]
		Auto = -1000,
		[Token(Token = "0x40028EE")]
		Voice = 3001,
		[Token(Token = "0x40028EF")]
		Music = 3002
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20007B2")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0xDC158C", Offset = "0xDC158C", VA = "0xDC158C")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xDC169C", Offset = "0xDC169C", VA = "0xDC169C")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0xDC16A4", Offset = "0xDC16A4", VA = "0xDC16A4")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xDC1774", Offset = "0xDC1774", VA = "0xDC1774")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0xDC17B4", Offset = "0xDC17B4", VA = "0xDC17B4")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0xDC16E4", Offset = "0xDC16E4", VA = "0xDC16E4")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0xDC17F4", Offset = "0xDC17F4", VA = "0xDC17F4")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TermsPopup("")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0xDC17FC", Offset = "0xDC17FC", VA = "0xDC17FC")]
		public void Start()
		{
		}

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0xDC1B24", Offset = "0xDC1B24", VA = "0xDC1B24")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0xDC1B2C", Offset = "0xDC1B2C", VA = "0xDC1B2C", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xDC1BEC", Offset = "0xDC1BEC", VA = "0xDC1BEC")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xDC1BF4", Offset = "0xDC1BF4", VA = "0xDC1BF4")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xDC2134", Offset = "0xDC2134", VA = "0xDC2134")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xDC23DC", Offset = "0xDC23DC", VA = "0xDC23DC")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xDC2468", Offset = "0xDC2468", VA = "0xDC2468")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xDC2208", Offset = "0xDC2208", VA = "0xDC2208")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0xDC26DC", Offset = "0xDC26DC", VA = "0xDC26DC")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xDC2954", Offset = "0xDC2954", VA = "0xDC2954")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xDC295C", Offset = "0xDC295C", VA = "0xDC295C")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xDC2964", Offset = "0xDC2964", VA = "0xDC2964")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0xDC296C", Offset = "0xDC296C", VA = "0xDC296C")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x20007B7")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xDC29F8", Offset = "0xDC29F8", VA = "0xDC29F8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0xDC2AF4", Offset = "0xDC2AF4", VA = "0xDC2AF4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xDC2B54", Offset = "0xDC2B54", VA = "0xDC2B54", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0xDC2B5C", Offset = "0xDC2B5C", VA = "0xDC2B5C")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0xDC2B64", Offset = "0xDC2B64", VA = "0xDC2B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xDC2BB4", Offset = "0xDC2BB4", VA = "0xDC2BB4")]
		private void test()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xDC2C78", Offset = "0xDC2C78", VA = "0xDC2C78")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20007BA")]
		public enum eFileType
		{
			[Token(Token = "0x40028F8")]
			Raw,
			[Token(Token = "0x40028F9")]
			Persistent,
			[Token(Token = "0x40028FA")]
			Temporal,
			[Token(Token = "0x40028FB")]
			Streaming
		}

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0xDC2C80", Offset = "0xDC2C80", VA = "0xDC2C80")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xDC2D50", Offset = "0xDC2D50", VA = "0xDC2D50")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0xDC2E18", Offset = "0xDC2E18", VA = "0xDC2E18")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0xDC2ED0", Offset = "0xDC2ED0", VA = "0xDC2ED0")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0xDC2F88", Offset = "0xDC2F88", VA = "0xDC2F88")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0xDC3038", Offset = "0xDC3038", VA = "0xDC3038")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0xDC30E8", Offset = "0xDC30E8", VA = "0xDC30E8")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xDC31C8", Offset = "0xDC31C8", VA = "0xDC31C8")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0xDC3298", Offset = "0xDC3298", VA = "0xDC3298")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xDC3368", Offset = "0xDC3368", VA = "0xDC3368")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007BB")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xDC343C", Offset = "0xDC343C", VA = "0xDC343C", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xDC36D8", Offset = "0xDC36D8", VA = "0xDC36D8", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0xDC3914", Offset = "0xDC3914", VA = "0xDC3914", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xDC3B14", Offset = "0xDC3B14", VA = "0xDC3B14", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0xDC3B1C", Offset = "0xDC3B1C", VA = "0xDC3B1C", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xDC3B28", Offset = "0xDC3B28", VA = "0xDC3B28", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xDC3B30", Offset = "0xDC3B30", VA = "0xDC3B30")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xDC3BC8", Offset = "0xDC3BC8", VA = "0xDC3BC8", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0xDC3D5C", Offset = "0xDC3D5C", VA = "0xDC3D5C", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xDC3EE4", Offset = "0xDC3EE4", VA = "0xDC3EE4", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xDC4060", Offset = "0xDC4060", VA = "0xDC4060", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xDC41DC", Offset = "0xDC41DC", VA = "0xDC41DC")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0xDC2D48", Offset = "0xDC2D48", VA = "0xDC2D48")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xDC41E4", Offset = "0xDC41E4", VA = "0xDC41E4", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6002CEE")]
		[Address(RVA = "0xDC47D0", Offset = "0xDC47D0", VA = "0xDC47D0", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0xDC482C", Offset = "0xDC482C", VA = "0xDC482C", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0xDC48D4", Offset = "0xDC48D4", VA = "0xDC48D4")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0xDC48DC", Offset = "0xDC48DC", VA = "0xDC48DC")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0xDC4900", Offset = "0xDC4900", VA = "0xDC4900")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0xDC4AEC", Offset = "0xDC4AEC", VA = "0xDC4AEC")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0xDC4E0C", Offset = "0xDC4E0C", VA = "0xDC4E0C")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xDC4C0C", Offset = "0xDC4C0C", VA = "0xDC4C0C")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xDC5224", Offset = "0xDC5224", VA = "0xDC5224")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007BF")]
	public class EventCallback
	{
		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0xDC54D8", Offset = "0xDC54D8", VA = "0xDC54D8")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xDC553C", Offset = "0xDC553C", VA = "0xDC553C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0xDC55C0", Offset = "0xDC55C0", VA = "0xDC55C0")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20007C0")]
	public enum ePluralType
	{
		[Token(Token = "0x4002902")]
		Zero,
		[Token(Token = "0x4002903")]
		One,
		[Token(Token = "0x4002904")]
		Two,
		[Token(Token = "0x4002905")]
		Few,
		[Token(Token = "0x4002906")]
		Many,
		[Token(Token = "0x4002907")]
		Plural
	}
	[Token(Token = "0x20007C1")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20007C2")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4002909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xDC5620", Offset = "0xDC5620", VA = "0xDC5620")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xDC5A1C", Offset = "0xDC5A1C", VA = "0xDC5A1C")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xDC58D4", Offset = "0xDC58D4", VA = "0xDC58D4")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0xDC5FA8", Offset = "0xDC5FA8", VA = "0xDC5FA8")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xDC60F0", Offset = "0xDC60F0", VA = "0xDC60F0")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0xDC61C0", Offset = "0xDC61C0", VA = "0xDC61C0")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0xDC6344", Offset = "0xDC6344", VA = "0xDC6344")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0xDC6540", Offset = "0xDC6540", VA = "0xDC6540")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xDC683C", Offset = "0xDC683C", VA = "0xDC683C")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xDC6A68", Offset = "0xDC6A68", VA = "0xDC6A68")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xDC6C28", Offset = "0xDC6C28", VA = "0xDC6C28")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xDC6E08", Offset = "0xDC6E08", VA = "0xDC6E08")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xDC6FB8", Offset = "0xDC6FB8", VA = "0xDC6FB8")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xDC7658", Offset = "0xDC7658", VA = "0xDC7658")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0xDC7640", Offset = "0xDC7640", VA = "0xDC7640")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007C3")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20007C4")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20007C5")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20007C7")]
		[CompilerGenerated]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000746")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D34")]
				[Address(RVA = "0xDD33D0", Offset = "0xDD33D0", VA = "0xDD33D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000747")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D36")]
				[Address(RVA = "0xDD3418", Offset = "0xDD3418", VA = "0xDD3418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xDD1130", Offset = "0xDD1130", VA = "0xDD1130")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xDD323C", Offset = "0xDD323C", VA = "0xDD323C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xDD3240", Offset = "0xDD3240", VA = "0xDD3240", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xDD33D8", Offset = "0xDD33D8", VA = "0xDD33D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0xDCF94C", Offset = "0xDCF94C", VA = "0xDCF94C")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0xDCFB84", Offset = "0xDCFB84", VA = "0xDCFB84")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0xDD02DC", Offset = "0xDD02DC", VA = "0xDD02DC")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xDD0248", Offset = "0xDD0248", VA = "0xDD0248")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0xDD0A28", Offset = "0xDD0A28", VA = "0xDD0A28")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0xDD0AA4", Offset = "0xDD0AA4", VA = "0xDD0AA4")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xDD0908", Offset = "0xDD0908", VA = "0xDD0908")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xDD10D0", Offset = "0xDD10D0", VA = "0xDD10D0")]
		[IteratorStateMachine(typeof(<WaitForTranslations>d__11))]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0xDD1158", Offset = "0xDD1158", VA = "0xDD1158")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xDD18C4", Offset = "0xDD18C4", VA = "0xDD18C4")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0xDD1978", Offset = "0xDD1978", VA = "0xDD1978")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0xDCFEF8", Offset = "0xDCFEF8", VA = "0xDCFEF8")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0xDD1B80", Offset = "0xDD1B80", VA = "0xDD1B80")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0xDD0430", Offset = "0xDD0430", VA = "0xDD0430")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0xDD2620", Offset = "0xDD2620", VA = "0xDD2620")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0xDD1644", Offset = "0xDD1644", VA = "0xDD1644")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0xDD1DD0", Offset = "0xDD1DD0", VA = "0xDD1DD0")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0xDD1F8C", Offset = "0xDD1F8C", VA = "0xDD1F8C")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xDD1E64", Offset = "0xDD1E64", VA = "0xDD1E64")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0xDD2720", Offset = "0xDD2720", VA = "0xDD2720")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0xDD1814", Offset = "0xDD1814", VA = "0xDD1814")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0xDD2070", Offset = "0xDD2070", VA = "0xDD2070")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0xDD07F0", Offset = "0xDD07F0", VA = "0xDD07F0")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xDD27E4", Offset = "0xDD27E4", VA = "0xDD27E4")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xDD2A98", Offset = "0xDD2A98", VA = "0xDD2A98")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0xDD2E00", Offset = "0xDD2E00", VA = "0xDD2E00")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0xDD101C", Offset = "0xDD101C", VA = "0xDD101C")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20007C8")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20007C9")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20007CA")]
		public enum eJobState
		{
			[Token(Token = "0x400291D")]
			Running,
			[Token(Token = "0x400291E")]
			Succeeded,
			[Token(Token = "0x400291F")]
			Failed
		}

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0xDD3420", Offset = "0xDD3420", VA = "0xDD3420", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0xDD3428", Offset = "0xDD3428", VA = "0xDD3428", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xDD342C", Offset = "0xDD342C", VA = "0xDD342C")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xDD3434", Offset = "0xDD3434", VA = "0xDD3434", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0xDD3460", Offset = "0xDD3460", VA = "0xDD3460")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20007CC")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xDD3468", Offset = "0xDD3468", VA = "0xDD3468")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0xDD351C", Offset = "0xDD351C", VA = "0xDD351C")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xDD3654", Offset = "0xDD3654", VA = "0xDD3654", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0xDD3700", Offset = "0xDD3700", VA = "0xDD3700")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0xDD0748", Offset = "0xDD0748", VA = "0xDD0748")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xDD39C4", Offset = "0xDD39C4", VA = "0xDD39C4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0xDD3BD8", Offset = "0xDD3BD8", VA = "0xDD3BD8", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20007CE")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xDD3818", Offset = "0xDD3818", VA = "0xDD3818")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0xDD3C38", Offset = "0xDD3C38", VA = "0xDD3C38", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xDD3CD4", Offset = "0xDD3CD4", VA = "0xDD3CD4")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xDD3DBC", Offset = "0xDD3DBC", VA = "0xDD3DBC")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xDD3E10", Offset = "0xDD3E10", VA = "0xDD3E10")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0xDD41F4", Offset = "0xDD41F4", VA = "0xDD41F4")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xDD45C8", Offset = "0xDD45C8", VA = "0xDD45C8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0xDD4674", Offset = "0xDD4674", VA = "0xDD4674")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xDD47A8", Offset = "0xDD47A8", VA = "0xDD47A8")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20007D1")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4002939")]
		DISABLED = 1,
		[Token(Token = "0x400293A")]
		KEEP_LOADED = 2,
		[Token(Token = "0x400293B")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20007D2")]
	public class LanguageData
	{
		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0xDD4E94", Offset = "0xDD4E94", VA = "0xDD4E94")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0xDD4EA4", Offset = "0xDD4EA4", VA = "0xDD4EA4")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0xDD4EC0", Offset = "0xDD4EC0", VA = "0xDD4EC0")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xDD4ED0", Offset = "0xDD4ED0", VA = "0xDD4ED0")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xDD4EE0", Offset = "0xDD4EE0", VA = "0xDD4EE0")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0xDD4EFC", Offset = "0xDD4EFC", VA = "0xDD4EFC")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0xDD4F18", Offset = "0xDD4F18", VA = "0xDD4F18")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20007D3")]
	[AddComponentMenu("I2/Localization/Source")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20007D4")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x17000748")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xDD4F20", Offset = "0xDD4F20", VA = "0xDD4F20", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xDD4F28", Offset = "0xDD4F28", VA = "0xDD4F28", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0xDD4F30", Offset = "0xDD4F30", VA = "0xDD4F30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xDD4FCC", Offset = "0xDD4FCC", VA = "0xDD4FCC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0xDD5068", Offset = "0xDD5068", VA = "0xDD5068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0xDD5108", Offset = "0xDD5108", VA = "0xDD5108")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0xDD517C", Offset = "0xDD517C", VA = "0xDD517C")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0xDD526C", Offset = "0xDD526C", VA = "0xDD526C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0xDD5278", Offset = "0xDD5278", VA = "0xDD5278", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0xDD59FC", Offset = "0xDD59FC", VA = "0xDD59FC")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20007D5")]
	[CreateAssetMenu(fileName = "I2Languages", menuName = "I2 Localization/LanguageSource", order = 1)]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x17000749")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0xDD5D88", Offset = "0xDD5D88", VA = "0xDD5D88", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xDD5D90", Offset = "0xDD5D90", VA = "0xDD5D90", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xDD5D98", Offset = "0xDD5D98", VA = "0xDD5D98")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public interface ILanguageSource
	{
		[Token(Token = "0x1700074A")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6002D69")]
			get;
			[Token(Token = "0x6002D6A")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20007D7")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20007D8")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4002972")]
			Empty,
			[Token(Token = "0x4002973")]
			Fallback,
			[Token(Token = "0x4002974")]
			ShowWarning,
			[Token(Token = "0x4002975")]
			ShowTerm
		}

		[Token(Token = "0x20007D9")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4002977")]
			Never,
			[Token(Token = "0x4002978")]
			OnlyInDevice,
			[Token(Token = "0x4002979")]
			EditorAndDevice
		}

		[Token(Token = "0x20007DA")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x400297B")]
			Always,
			[Token(Token = "0x400297C")]
			Never,
			[Token(Token = "0x400297D")]
			Daily,
			[Token(Token = "0x400297E")]
			Weekly,
			[Token(Token = "0x400297F")]
			Monthly,
			[Token(Token = "0x4002980")]
			OnlyOnce,
			[Token(Token = "0x4002981")]
			EveryOtherDay
		}

		[Token(Token = "0x20007DB")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4002983")]
			Manual,
			[Token(Token = "0x4002984")]
			OnSceneLoaded,
			[Token(Token = "0x4002985")]
			AsSoonAsDownloaded
		}

		[Token(Token = "0x20007DD")]
		[CompilerGenerated]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700074C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DC5")]
				[Address(RVA = "0xDDE860", Offset = "0xDDE860", VA = "0xDDE860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DC7")]
				[Address(RVA = "0xDDE8A8", Offset = "0xDDE8A8", VA = "0xDDE8A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xDDBE64", Offset = "0xDDBE64", VA = "0xDDBE64")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0xDDE570", Offset = "0xDDE570", VA = "0xDDE570", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0xDDE574", Offset = "0xDDE574", VA = "0xDDE574", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xDDE868", Offset = "0xDDE868", VA = "0xDDE868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x1700074B")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xDD5E08", Offset = "0xDD5E08", VA = "0xDD5E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008E")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xDD5960", Offset = "0xDD5960", VA = "0xDD5960")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xDD5E84", Offset = "0xDD5E84", VA = "0xDD5E84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xDD5098", Offset = "0xDD5098", VA = "0xDD5098")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0xDD5128", Offset = "0xDD5128", VA = "0xDD5128")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xDD6938", Offset = "0xDD6938", VA = "0xDD6938")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0xDD6EA0", Offset = "0xDD6EA0", VA = "0xDD6EA0")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xDD6FA8", Offset = "0xDD6FA8", VA = "0xDD6FA8")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0xDD708C", Offset = "0xDD708C", VA = "0xDD708C")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xDD7094", Offset = "0xDD7094", VA = "0xDD7094")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xDD6484", Offset = "0xDD6484", VA = "0xDD6484")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xDD7098", Offset = "0xDD7098", VA = "0xDD7098")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0xDD716C", Offset = "0xDD716C", VA = "0xDD716C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0xDD71C4", Offset = "0xDD71C4", VA = "0xDD71C4")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xDD72B0", Offset = "0xDD72B0", VA = "0xDD72B0")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xDD79DC", Offset = "0xDD79DC", VA = "0xDD79DC")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0xDD7C38", Offset = "0xDD7C38", VA = "0xDD7C38")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0xDD7D04", Offset = "0xDD7D04", VA = "0xDD7D04")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0xDD823C", Offset = "0xDD823C", VA = "0xDD823C")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0xDD8B88", Offset = "0xDD8B88", VA = "0xDD8B88")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xDD8A24", Offset = "0xDD8A24", VA = "0xDD8A24")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xDD8DE8", Offset = "0xDD8DE8", VA = "0xDD8DE8")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0xDD8F64", Offset = "0xDD8F64", VA = "0xDD8F64")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0xDD9128", Offset = "0xDD9128", VA = "0xDD9128")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0xDD9604", Offset = "0xDD9604", VA = "0xDD9604")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0xDDA41C", Offset = "0xDDA41C", VA = "0xDDA41C")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0xDD9768", Offset = "0xDD9768", VA = "0xDD9768")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0xDDA6A0", Offset = "0xDDA6A0", VA = "0xDDA6A0")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0xDDAA48", Offset = "0xDDAA48", VA = "0xDDAA48")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0xDDAC90", Offset = "0xDDAC90", VA = "0xDDAC90")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0xDDAEBC", Offset = "0xDDAEBC", VA = "0xDDAEBC")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0xDDB07C", Offset = "0xDDB07C", VA = "0xDDB07C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0xDDB4B0", Offset = "0xDDB4B0", VA = "0xDDB4B0")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0xDDBB6C", Offset = "0xDDBB6C", VA = "0xDDBB6C")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0xDDB2F0", Offset = "0xDDB2F0", VA = "0xDDB2F0")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0xDDBDDC", Offset = "0xDDBDDC", VA = "0xDDBDDC")]
		[IteratorStateMachine(typeof(<Import_Google_Coroutine>d__65))]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0xDDBE8C", Offset = "0xDDBE8C", VA = "0xDDBE8C")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002D90")]
		[Address(RVA = "0xDDBF38", Offset = "0xDDBF38", VA = "0xDDBF38")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0xDDC098", Offset = "0xDDC098", VA = "0xDDC098")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0xDDC20C", Offset = "0xDDC20C", VA = "0xDDC20C")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0xDDB540", Offset = "0xDDB540", VA = "0xDDB540")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0xDD6A98", Offset = "0xDD6A98", VA = "0xDD6A98")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0xDDC460", Offset = "0xDDC460", VA = "0xDDC460")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0xDDC4F0", Offset = "0xDDC4F0", VA = "0xDDC4F0")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0xDDA730", Offset = "0xDDA730", VA = "0xDDA730")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0xDDC2A4", Offset = "0xDDC2A4", VA = "0xDDC2A4")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0xDDC594", Offset = "0xDDC594", VA = "0xDDC594")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0xDDC620", Offset = "0xDDC620", VA = "0xDDC620")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0xDDC6B8", Offset = "0xDDC6B8", VA = "0xDDC6B8")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0xDDC730", Offset = "0xDDC730", VA = "0xDDC730")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0xDDC92C", Offset = "0xDDC92C", VA = "0xDDC92C")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0xDDCBFC", Offset = "0xDDCBFC", VA = "0xDDCBFC")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xDDCD74", Offset = "0xDDCD74", VA = "0xDDCD74")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0xDDCF6C", Offset = "0xDDCF6C", VA = "0xDDCF6C")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xDDCFF8", Offset = "0xDDCFF8", VA = "0xDDCFF8")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0xDDD094", Offset = "0xDDD094", VA = "0xDDD094")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xDDD0A4", Offset = "0xDDD0A4", VA = "0xDDD0A4")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0xDDD2EC", Offset = "0xDDD2EC", VA = "0xDDD2EC")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xDDD6B8", Offset = "0xDDD6B8", VA = "0xDDD6B8")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0xDDD450", Offset = "0xDDD450", VA = "0xDDD450")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xDDAB78", Offset = "0xDDAB78", VA = "0xDDAB78")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0xDDAAE0", Offset = "0xDDAAE0", VA = "0xDDAAE0")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xDD933C", Offset = "0xDD933C", VA = "0xDD933C")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0xDDD804", Offset = "0xDDD804", VA = "0xDDD804")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xDDD73C", Offset = "0xDDD73C", VA = "0xDDD73C")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0xDDD8B0", Offset = "0xDDD8B0", VA = "0xDDD8B0")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xDD617C", Offset = "0xDD617C", VA = "0xDD617C")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0xDDD9C8", Offset = "0xDDD9C8", VA = "0xDDD9C8")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0xDDDA6C", Offset = "0xDDDA6C", VA = "0xDDDA6C")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0xDD7FB8", Offset = "0xDD7FB8", VA = "0xDD7FB8")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xDDDCC4", Offset = "0xDDDCC4", VA = "0xDDDCC4")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0xDD6C48", Offset = "0xDD6C48", VA = "0xDD6C48")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xDDDF20", Offset = "0xDDDF20", VA = "0xDDDF20")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xDDDF3C", Offset = "0xDDDF3C", VA = "0xDDDF3C")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xDDDCD0", Offset = "0xDDDCD0", VA = "0xDDDCD0")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0xDDE18C", Offset = "0xDDE18C", VA = "0xDDE18C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0xDDA8A4", Offset = "0xDDA8A4", VA = "0xDDA8A4")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0xDD56C0", Offset = "0xDD56C0", VA = "0xDD56C0")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20007DE")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4002993")]
		None,
		[Token(Token = "0x4002994")]
		Replace,
		[Token(Token = "0x4002995")]
		Merge,
		[Token(Token = "0x4002996")]
		AddNewTerms
	}
	[Token(Token = "0x20007DF")]
	public class LocalizationReader
	{
		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0xDDE8B0", Offset = "0xDDE8B0", VA = "0xDDE8B0")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0xDDEB1C", Offset = "0xDDEB1C", VA = "0xDDEB1C")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0xDDEFA4", Offset = "0xDDEFA4", VA = "0xDDEFA4")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0xDD9640", Offset = "0xDD9640", VA = "0xDD9640")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0xDDF1C4", Offset = "0xDDF1C4", VA = "0xDDF1C4")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0xDDF3B0", Offset = "0xDDF3B0", VA = "0xDDF3B0")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0xDDA454", Offset = "0xDDA454", VA = "0xDDA454")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0xDDEEFC", Offset = "0xDDEEFC", VA = "0xDDEEFC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0xDDF53C", Offset = "0xDDF53C", VA = "0xDDF53C")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0xDDEE54", Offset = "0xDDEE54", VA = "0xDDEE54")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0xDDF634", Offset = "0xDDF634", VA = "0xDDF634")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	[AddComponentMenu("I2/Localization/I2 Localize")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20007E1")]
		public enum TermModification
		{
			[Token(Token = "0x40029B7")]
			DontModify,
			[Token(Token = "0x40029B8")]
			ToUpper,
			[Token(Token = "0x40029B9")]
			ToLower,
			[Token(Token = "0x40029BA")]
			ToUpperFirst,
			[Token(Token = "0x40029BB")]
			ToTitle
		}

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x1700074E")]
		public string Term
		{
			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0xDDF63C", Offset = "0xDDF63C", VA = "0xDDF63C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0xDDF644", Offset = "0xDDF644", VA = "0xDDF644")]
			set
			{
			}
		}

		[Token(Token = "0x1700074F")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0xDDF69C", Offset = "0xDDF69C", VA = "0xDDF69C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xDDF6A4", Offset = "0xDDF6A4", VA = "0xDDF6A4")]
			set
			{
			}
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0xDDF728", Offset = "0xDDF728", VA = "0xDDF728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0xDE0848", Offset = "0xDE0848", VA = "0xDE0848")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0xDE0850", Offset = "0xDE0850", VA = "0xDE0850")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0xDDFF74", Offset = "0xDDFF74", VA = "0xDDFF74")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0xDDFAC4", Offset = "0xDDFAC4", VA = "0xDDFAC4")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0xDE0898", Offset = "0xDE0898", VA = "0xDE0898")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0xDE10A0", Offset = "0xDE10A0", VA = "0xDE10A0")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0xDE1168", Offset = "0xDE1168", VA = "0xDE1168")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0xDDF648", Offset = "0xDDF648", VA = "0xDDF648")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0xDDF6B0", Offset = "0xDDF6B0", VA = "0xDDF6B0")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6002DE1")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0xDDF75C", Offset = "0xDDF75C", VA = "0xDDF75C")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002DE3")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002DE4")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0xDE11B8", Offset = "0xDE11B8", VA = "0xDE11B8")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6002DE6")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0xDE12C8", Offset = "0xDE12C8", VA = "0xDE12C8")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0xDE134C", Offset = "0xDE134C", VA = "0xDE134C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0xDE1438", Offset = "0xDE1438", VA = "0xDE1438")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0xDE155C", Offset = "0xDE155C", VA = "0xDE155C")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20007E3")]
	[AddComponentMenu("I2/Localization/Localize Dropdown")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0xDE194C", Offset = "0xDE194C", VA = "0xDE194C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0xDE1C84", Offset = "0xDE1C84", VA = "0xDE1C84")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0xDE1DFC", Offset = "0xDE1DFC", VA = "0xDE1DFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0xDE1B98", Offset = "0xDE1B98", VA = "0xDE1B98")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0xDE1E54", Offset = "0xDE1E54", VA = "0xDE1E54")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0xDE20B8", Offset = "0xDE20B8", VA = "0xDE20B8")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0xDE2630", Offset = "0xDE2630", VA = "0xDE2630")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xDE23E4", Offset = "0xDE23E4", VA = "0xDE23E4")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0xDE2950", Offset = "0xDE2950", VA = "0xDE2950")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x20007E4")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20007E5")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20007E6")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20007EC")]
		[CompilerGenerated]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000755")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E54")]
				[Address(RVA = "0xDE8274", Offset = "0xDE8274", VA = "0xDE8274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000756")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E56")]
				[Address(RVA = "0xDE82BC", Offset = "0xDE82BC", VA = "0xDE82BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E51")]
			[Address(RVA = "0xDE5E94", Offset = "0xDE5E94", VA = "0xDE5E94")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xDE81B0", Offset = "0xDE81B0", VA = "0xDE81B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xDE81B4", Offset = "0xDE81B4", VA = "0xDE81B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xDE827C", Offset = "0xDE827C", VA = "0xDE827C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007EE")]
		[CompilerGenerated]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000757")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E5C")]
				[Address(RVA = "0xDE83B4", Offset = "0xDE83B4", VA = "0xDE83B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000758")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E5E")]
				[Address(RVA = "0xDE83FC", Offset = "0xDE83FC", VA = "0xDE83FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xDE7074", Offset = "0xDE7074", VA = "0xDE7074")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xDE82EC", Offset = "0xDE82EC", VA = "0xDE82EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xDE82F0", Offset = "0xDE82F0", VA = "0xDE82F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xDE83BC", Offset = "0xDE83BC", VA = "0xDE83BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x17000750")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0xDDB020", Offset = "0xDDB020", VA = "0xDDB020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0xDE148C", Offset = "0xDE148C", VA = "0xDE148C")]
			set
			{
			}
		}

		[Token(Token = "0x17000751")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xDE3760", Offset = "0xDE3760", VA = "0xDE3760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xDE37BC", Offset = "0xDE37BC", VA = "0xDE37BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000752")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6002E02")]
			[Address(RVA = "0xDE3A4C", Offset = "0xDE3A4C", VA = "0xDE3A4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xDE3BC0", Offset = "0xDE3BC0", VA = "0xDE3BC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000753")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6002E04")]
			[Address(RVA = "0xDE3D80", Offset = "0xDE3D80", VA = "0xDE3D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E05")]
			[Address(RVA = "0xDE3E50", Offset = "0xDE3E50", VA = "0xDE3E50")]
			set
			{
			}
		}

		[Token(Token = "0x17000754")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6002E06")]
			[Address(RVA = "0xDE3F54", Offset = "0xDE3F54", VA = "0xDE3F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008F")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xDE1ABC", Offset = "0xDE1ABC", VA = "0xDE1ABC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xDE1D20", Offset = "0xDE1D20", VA = "0xDE1D20")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xDCFE34", Offset = "0xDCFE34", VA = "0xDCFE34")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0xDE3010", Offset = "0xDE3010", VA = "0xDE3010")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0xDDC29C", Offset = "0xDDC29C", VA = "0xDDC29C")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0xDCF9F0", Offset = "0xDCF9F0", VA = "0xDCF9F0")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0xDE3564", Offset = "0xDE3564", VA = "0xDE3564")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0xDE3FAC", Offset = "0xDE3FAC", VA = "0xDE3FAC")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0xDE419C", Offset = "0xDE419C", VA = "0xDE419C")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0xDE40A0", Offset = "0xDE40A0", VA = "0xDE40A0")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xDE2C3C", Offset = "0xDE2C3C", VA = "0xDE2C3C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0xDE42CC", Offset = "0xDE42CC", VA = "0xDE42CC")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0xDE3050", Offset = "0xDE3050", VA = "0xDE3050")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0xDE33AC", Offset = "0xDE33AC", VA = "0xDE33AC")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xDE3884", Offset = "0xDE3884", VA = "0xDE3884")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0xDE4484", Offset = "0xDE4484", VA = "0xDE4484")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xDE4704", Offset = "0xDE4704", VA = "0xDE4704")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0xDE4958", Offset = "0xDE4958", VA = "0xDE4958")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xDE4A4C", Offset = "0xDE4A4C", VA = "0xDE4A4C")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0xDE4B74", Offset = "0xDE4B74", VA = "0xDE4B74")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0xDE29D8", Offset = "0xDE29D8", VA = "0xDE29D8")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0xDE4C6C", Offset = "0xDE4C6C", VA = "0xDE4C6C")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0xDE0AE8", Offset = "0xDE0AE8", VA = "0xDE0AE8")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0xDE5280", Offset = "0xDE5280", VA = "0xDE5280")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0xDE4E60", Offset = "0xDE4E60", VA = "0xDE4E60")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0xDE54D0", Offset = "0xDE54D0", VA = "0xDE54D0")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xDE5760", Offset = "0xDE5760", VA = "0xDE5760")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0xDE1044", Offset = "0xDE1044", VA = "0xDE1044")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xDE0BD8", Offset = "0xDE0BD8", VA = "0xDE0BD8")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0xDE5924", Offset = "0xDE5924", VA = "0xDE5924")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0xDE4118", Offset = "0xDE4118", VA = "0xDE4118")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0xDE2BB8", Offset = "0xDE2BB8", VA = "0xDE2BB8")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xDE59C0", Offset = "0xDE59C0", VA = "0xDE59C0")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xDE5C68", Offset = "0xDE5C68", VA = "0xDE5C68")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xDE5AC8", Offset = "0xDE5AC8", VA = "0xDE5AC8")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xDD5F20", Offset = "0xDD5F20", VA = "0xDD5F20")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xDE5DFC", Offset = "0xDE5DFC", VA = "0xDE5DFC")]
		[IteratorStateMachine(typeof(<Delayed_Import_Google>d__59))]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0xDD68B8", Offset = "0xDD68B8", VA = "0xDD68B8")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xDE5EBC", Offset = "0xDE5EBC", VA = "0xDE5EBC")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0xDE5F40", Offset = "0xDE5F40", VA = "0xDE5F40")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0xDE60E4", Offset = "0xDE60E4", VA = "0xDE60E4")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0xDE6214", Offset = "0xDE6214", VA = "0xDE6214")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0xDE4230", Offset = "0xDE4230", VA = "0xDE4230")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0xDE62F0", Offset = "0xDE62F0", VA = "0xDE62F0")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xDE6770", Offset = "0xDE6770", VA = "0xDE6770")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0xDE0A34", Offset = "0xDE0A34", VA = "0xDE0A34")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0xDE6C10", Offset = "0xDE6C10", VA = "0xDE6C10")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0xDE6A28", Offset = "0xDE6A28", VA = "0xDE6A28")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E33")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E34")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0xDE6CAC", Offset = "0xDE6CAC", VA = "0xDE6CAC")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0xDD67EC", Offset = "0xDD67EC", VA = "0xDD67EC")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xDE7014", Offset = "0xDE7014", VA = "0xDE7014")]
		[IteratorStateMachine(typeof(<Coroutine_LocalizeAll>d__84))]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0xDE6E9C", Offset = "0xDE6E9C", VA = "0xDE6E9C")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0xDE709C", Offset = "0xDE709C", VA = "0xDE709C")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0xDE71C4", Offset = "0xDE71C4", VA = "0xDE71C4")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0xDE7408", Offset = "0xDE7408", VA = "0xDE7408")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0xDE5378", Offset = "0xDE5378", VA = "0xDE5378")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x20007EF")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6002E5F")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6002E60")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6002E61")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6002E62")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6002E63")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6002E64")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6002E65")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6002E66")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0xDE9404", Offset = "0xDE9404", VA = "0xDE9404")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6002E68")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E69")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6002E6A")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6002E6B")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6002E6C")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0xDE940C", Offset = "0xDE940C", VA = "0xDE940C")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6002E6E")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002E6F")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6002E70")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6002E71")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E72")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002E73")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0xDE9414", Offset = "0xDE9414", VA = "0xDE9414")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0xDE9418", Offset = "0xDE9418", VA = "0xDE9418")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0xDE94E0", Offset = "0xDE94E0", VA = "0xDE94E0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0xDE94E8", Offset = "0xDE94E8", VA = "0xDE94E8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0xDE94F0", Offset = "0xDE94F0", VA = "0xDE94F0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0xDE94F8", Offset = "0xDE94F8", VA = "0xDE94F8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xDE9500", Offset = "0xDE9500", VA = "0xDE9500", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0xDE9508", Offset = "0xDE9508", VA = "0xDE9508", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0xDE9624", Offset = "0xDE9624", VA = "0xDE9624", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0xDE9BB8", Offset = "0xDE9BB8", VA = "0xDE9BB8")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0xDE9E20", Offset = "0xDE9E20", VA = "0xDE9E20")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0xDE9AD8", Offset = "0xDE9AD8", VA = "0xDE9AD8")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0xDE9D20", Offset = "0xDE9D20", VA = "0xDE9D20")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0xDEA0C4", Offset = "0xDEA0C4", VA = "0xDEA0C4")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0xDEA120", Offset = "0xDEA120", VA = "0xDEA120")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0xDEA124", Offset = "0xDEA124", VA = "0xDEA124")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0xDEA1EC", Offset = "0xDEA1EC", VA = "0xDEA1EC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0xDEA1F4", Offset = "0xDEA1F4", VA = "0xDEA1F4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0xDEA1FC", Offset = "0xDEA1FC", VA = "0xDEA1FC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0xDEA204", Offset = "0xDEA204", VA = "0xDEA204", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0xDEA20C", Offset = "0xDEA20C", VA = "0xDEA20C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0xDEA214", Offset = "0xDEA214", VA = "0xDEA214", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xDEA330", Offset = "0xDEA330", VA = "0xDEA330", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xDEA7E4", Offset = "0xDEA7E4", VA = "0xDEA7E4")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x20007F6")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0xDEA840", Offset = "0xDEA840", VA = "0xDEA840")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0xDEA844", Offset = "0xDEA844", VA = "0xDEA844")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xDEA90C", Offset = "0xDEA90C", VA = "0xDEA90C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0xDEA914", Offset = "0xDEA914", VA = "0xDEA914", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xDEA91C", Offset = "0xDEA91C", VA = "0xDEA91C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0xDEA924", Offset = "0xDEA924", VA = "0xDEA924", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xDEA92C", Offset = "0xDEA92C", VA = "0xDEA92C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0xDEA934", Offset = "0xDEA934", VA = "0xDEA934", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0xDEAA1C", Offset = "0xDEAA1C", VA = "0xDEAA1C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0xDEAB8C", Offset = "0xDEAB8C", VA = "0xDEAB8C")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6002E96")]
		[Address(RVA = "0xDEABD4", Offset = "0xDEABD4", VA = "0xDEABD4", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0xDEAC08", Offset = "0xDEAC08", VA = "0xDEAC08")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002E98")]
		[Address(RVA = "0xDEAC50", Offset = "0xDEAC50", VA = "0xDEAC50")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0xDEAC54", Offset = "0xDEAC54", VA = "0xDEAC54")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0xDEAD04", Offset = "0xDEAD04", VA = "0xDEAD04", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0xDEAD38", Offset = "0xDEAD38", VA = "0xDEAD38", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0xDEAD40", Offset = "0xDEAD40", VA = "0xDEAD40", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0xDEAD48", Offset = "0xDEAD48", VA = "0xDEAD48", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0xDEAD50", Offset = "0xDEAD50", VA = "0xDEAD50", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9F")]
		[Address(RVA = "0xDEAD58", Offset = "0xDEAD58", VA = "0xDEAD58", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0xDEAD60", Offset = "0xDEAD60", VA = "0xDEAD60", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0xDEADAC", Offset = "0xDEADAC", VA = "0xDEADAC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0xDEAEEC", Offset = "0xDEAEEC", VA = "0xDEAEEC")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0xDEAF34", Offset = "0xDEAF34", VA = "0xDEAF34")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xDEAF38", Offset = "0xDEAF38", VA = "0xDEAF38")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0xDEB000", Offset = "0xDEB000", VA = "0xDEB000", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0xDEB008", Offset = "0xDEB008", VA = "0xDEB008", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0xDEB010", Offset = "0xDEB010", VA = "0xDEB010", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xDEB018", Offset = "0xDEB018", VA = "0xDEB018", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0xDEB020", Offset = "0xDEB020", VA = "0xDEB020", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0xDEB028", Offset = "0xDEB028", VA = "0xDEB028", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0xDEB220", Offset = "0xDEB220", VA = "0xDEB220", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0xDEB3EC", Offset = "0xDEB3EC", VA = "0xDEB3EC")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xDEB434", Offset = "0xDEB434", VA = "0xDEB434", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xDEB43C", Offset = "0xDEB43C", VA = "0xDEB43C")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0xDEB484", Offset = "0xDEB484", VA = "0xDEB484")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xDEB488", Offset = "0xDEB488", VA = "0xDEB488")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0xDEB538", Offset = "0xDEB538", VA = "0xDEB538", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xDEB540", Offset = "0xDEB540", VA = "0xDEB540", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xDEB548", Offset = "0xDEB548", VA = "0xDEB548", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xDEB550", Offset = "0xDEB550", VA = "0xDEB550", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0xDEB558", Offset = "0xDEB558", VA = "0xDEB558", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xDEB560", Offset = "0xDEB560", VA = "0xDEB560", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0xDEB568", Offset = "0xDEB568", VA = "0xDEB568", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xDEB5B4", Offset = "0xDEB5B4", VA = "0xDEB5B4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xDEB7B8", Offset = "0xDEB7B8", VA = "0xDEB7B8")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xDEB96C", Offset = "0xDEB96C", VA = "0xDEB96C")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0xDEB9B4", Offset = "0xDEB9B4", VA = "0xDEB9B4")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xDEB9B8", Offset = "0xDEB9B8", VA = "0xDEB9B8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0xDEBA80", Offset = "0xDEBA80", VA = "0xDEBA80", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xDEBA88", Offset = "0xDEBA88", VA = "0xDEBA88", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xDEBA90", Offset = "0xDEBA90", VA = "0xDEBA90", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xDEBA98", Offset = "0xDEBA98", VA = "0xDEBA98", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0xDEBAA0", Offset = "0xDEBAA0", VA = "0xDEBAA0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC2")]
		[Address(RVA = "0xDEBAA8", Offset = "0xDEBAA8", VA = "0xDEBAA8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EC3")]
		[Address(RVA = "0xDEBB94", Offset = "0xDEBB94", VA = "0xDEBB94", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EC4")]
		[Address(RVA = "0xDEBC90", Offset = "0xDEBC90", VA = "0xDEBC90")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x20007FD")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0xDEBCD8", Offset = "0xDEBCD8", VA = "0xDEBCD8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0xDEBCDC", Offset = "0xDEBCDC", VA = "0xDEBCDC")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xDEBDA4", Offset = "0xDEBDA4", VA = "0xDEBDA4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xDEBDAC", Offset = "0xDEBDAC", VA = "0xDEBDAC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0xDEBDB4", Offset = "0xDEBDB4", VA = "0xDEBDB4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0xDEBDBC", Offset = "0xDEBDBC", VA = "0xDEBDBC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0xDEBDC4", Offset = "0xDEBDC4", VA = "0xDEBDC4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0xDEBDCC", Offset = "0xDEBDCC", VA = "0xDEBDCC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0xDEBEF0", Offset = "0xDEBEF0", VA = "0xDEBEF0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xDEC14C", Offset = "0xDEC14C", VA = "0xDEC14C")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xDEC1A4", Offset = "0xDEC1A4", VA = "0xDEC1A4")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xDEC1A8", Offset = "0xDEC1A8", VA = "0xDEC1A8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0xDEC270", Offset = "0xDEC270", VA = "0xDEC270", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xDEC278", Offset = "0xDEC278", VA = "0xDEC278", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xDEC280", Offset = "0xDEC280", VA = "0xDEC280", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0xDEC288", Offset = "0xDEC288", VA = "0xDEC288", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xDEC308", Offset = "0xDEC308", VA = "0xDEC308", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xDEC310", Offset = "0xDEC310", VA = "0xDEC310", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xDEC4AC", Offset = "0xDEC4AC", VA = "0xDEC4AC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0xDEC59C", Offset = "0xDEC59C", VA = "0xDEC59C")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0xDEC5E4", Offset = "0xDEC5E4", VA = "0xDEC5E4")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0xDEC5E8", Offset = "0xDEC5E8", VA = "0xDEC5E8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0xDEC6B0", Offset = "0xDEC6B0", VA = "0xDEC6B0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0xDEC6B8", Offset = "0xDEC6B8", VA = "0xDEC6B8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0xDEC6C0", Offset = "0xDEC6C0", VA = "0xDEC6C0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0xDEC6C8", Offset = "0xDEC6C8", VA = "0xDEC6C8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0xDEC6D0", Offset = "0xDEC6D0", VA = "0xDEC6D0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0xDEC6D8", Offset = "0xDEC6D8", VA = "0xDEC6D8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0xDEC7C8", Offset = "0xDEC7C8", VA = "0xDEC7C8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0xDEC8B8", Offset = "0xDEC8B8", VA = "0xDEC8B8")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000800")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0xDEC900", Offset = "0xDEC900", VA = "0xDEC900")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0xDEC904", Offset = "0xDEC904", VA = "0xDEC904")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0xDEC9CC", Offset = "0xDEC9CC", VA = "0xDEC9CC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0xDEC9D4", Offset = "0xDEC9D4", VA = "0xDEC9D4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0xDEC9DC", Offset = "0xDEC9DC", VA = "0xDEC9DC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0xDEC9E4", Offset = "0xDEC9E4", VA = "0xDEC9E4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0xDEC9EC", Offset = "0xDEC9EC", VA = "0xDEC9EC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0xDEC9F4", Offset = "0xDEC9F4", VA = "0xDEC9F4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0xDECB20", Offset = "0xDECB20", VA = "0xDECB20", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0xDECDC8", Offset = "0xDECDC8", VA = "0xDECDC8")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0xDECE80", Offset = "0xDECE80", VA = "0xDECE80")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000801")]
	public enum eTermType
	{
		[Token(Token = "0x40029F6")]
		Text,
		[Token(Token = "0x40029F7")]
		Font,
		[Token(Token = "0x40029F8")]
		Texture,
		[Token(Token = "0x40029F9")]
		AudioClip,
		[Token(Token = "0x40029FA")]
		GameObject,
		[Token(Token = "0x40029FB")]
		Sprite,
		[Token(Token = "0x40029FC")]
		Material,
		[Token(Token = "0x40029FD")]
		Child,
		[Token(Token = "0x40029FE")]
		Mesh,
		[Token(Token = "0x40029FF")]
		TextMeshPFont,
		[Token(Token = "0x4002A00")]
		Object
	}
	[Token(Token = "0x2000802")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4002A02")]
		Normal = 1,
		[Token(Token = "0x4002A03")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x2000803")]
	public class TermData
	{
		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0xDECED8", Offset = "0xDECED8", VA = "0xDECED8")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0xDECFEC", Offset = "0xDECFEC", VA = "0xDECFEC")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0xDED0D0", Offset = "0xDED0D0", VA = "0xDED0D0")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0xDED124", Offset = "0xDED124", VA = "0xDED124")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0xDED2C4", Offset = "0xDED2C4", VA = "0xDED2C4")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0xDED2F8", Offset = "0xDED2F8", VA = "0xDED2F8")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0xDED4F4", Offset = "0xDED4F4", VA = "0xDED4F4")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0xDED57C", Offset = "0xDED57C", VA = "0xDED57C")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0xDED644", Offset = "0xDED644", VA = "0xDED644")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0xDED72C", Offset = "0xDED72C", VA = "0xDED72C")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x2000804")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x17000759")]
		public string Filter
		{
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0xDED824", Offset = "0xDED824", VA = "0xDED824")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0xDED82C", Offset = "0xDED82C", VA = "0xDED82C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0xDED7F4", Offset = "0xDED7F4", VA = "0xDED7F4")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x2000805")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0xDED834", Offset = "0xDED834", VA = "0xDED834")]
		public void Start()
		{
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0xDED888", Offset = "0xDED888", VA = "0xDED888")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x2000806")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x1700075A")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0xDED890", Offset = "0xDED890", VA = "0xDED890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0xDED9E0", Offset = "0xDED9E0", VA = "0xDED9E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0xDEDA64", Offset = "0xDEDA64", VA = "0xDEDA64")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0xDEDA88", Offset = "0xDEDA88", VA = "0xDEDA88")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x2000807")]
	[AddComponentMenu("I2/Localization/I2 Localize Callback")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0xDEDA90", Offset = "0xDEDA90", VA = "0xDEDA90")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0xDEDB68", Offset = "0xDEDB68", VA = "0xDEDB68")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0xDEDC0C", Offset = "0xDEDC0C", VA = "0xDEDC0C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0xDEDC28", Offset = "0xDEDC28", VA = "0xDEDC28")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x2000808")]
	public class HindiFixer
	{
		[Token(Token = "0x6002F05")]
		[Address(RVA = "0xDEDC9C", Offset = "0xDEDC9C", VA = "0xDEDC9C")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0xDEE0A8", Offset = "0xDEE0A8", VA = "0xDEE0A8")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x200080A")]
	public static class I2Utils
	{
		[Token(Token = "0x4002A0F")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4002A10")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4002A11")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0xDEA008", Offset = "0xDEA008", VA = "0xDEA008")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0xDEE134", Offset = "0xDEE134", VA = "0xDEE134")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xDEE35C", Offset = "0xDEE35C", VA = "0xDEE35C")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0xDEE404", Offset = "0xDEE404", VA = "0xDEE404")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0xDEE6A8", Offset = "0xDEE6A8", VA = "0xDEE6A8")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0xDEE37C", Offset = "0xDEE37C", VA = "0xDEE37C")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0xDEE82C", Offset = "0xDEE82C", VA = "0xDEE82C")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0xDEEAC0", Offset = "0xDEEAC0", VA = "0xDEEAC0")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0xDEEAC8", Offset = "0xDEEAC8", VA = "0xDEEAC8")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0xDEEB98", Offset = "0xDEEB98", VA = "0xDEEB98")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0xDEEBF8", Offset = "0xDEEBF8", VA = "0xDEEBF8")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0xDEED34", Offset = "0xDEED34", VA = "0xDEED34")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F16")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0xDEEE58", Offset = "0xDEEE58", VA = "0xDEEE58")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0xDEEF04", Offset = "0xDEEF04", VA = "0xDEEF04")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x200080C")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6002F1C")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x200080D")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x200080E")]
		public struct ParamValue
		{
			[Token(Token = "0x4002A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4002A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0xDEEF9C", Offset = "0xDEEF9C", VA = "0xDEEF9C", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0xDEF060", Offset = "0xDEF060", VA = "0xDEF060")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0xDEF240", Offset = "0xDEF240", VA = "0xDEF240")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0xDEF2F8", Offset = "0xDEF2F8", VA = "0xDEF2F8", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0xDEF308", Offset = "0xDEF308", VA = "0xDEF308")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0xDEF438", Offset = "0xDEF438", VA = "0xDEF438")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0xDEF4B8", Offset = "0xDEF4B8", VA = "0xDEF4B8")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200080F")]
	public struct LocalizedString
	{
		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0xDEF540", Offset = "0xDEF540", VA = "0xDEF540")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0xDEF604", Offset = "0xDEF604", VA = "0xDEF604")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0xDEF640", Offset = "0xDEF640", VA = "0xDEF640")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0xDEF544", Offset = "0xDEF544", VA = "0xDEF544", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000810")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6002F28")]
		[Address(RVA = "0xDEF694", Offset = "0xDEF694", VA = "0xDEF694", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0xDEF7C4", Offset = "0xDEF7C4", VA = "0xDEF7C4", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0xDEF844", Offset = "0xDEF844", VA = "0xDEF844", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0xDEF84C", Offset = "0xDEF84C", VA = "0xDEF84C")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000811")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6002F2C")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x2000812")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x1700075B")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0xDEF854", Offset = "0xDEF854", VA = "0xDEF854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0xDEFC30", Offset = "0xDEFC30", VA = "0xDEFC30")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002F2F")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0xDEFCEC", Offset = "0xDEFCEC", VA = "0xDEFCEC")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0xDEFE10", Offset = "0xDEFE10", VA = "0xDEFE10")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F32")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002F33")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0xDEFC88", Offset = "0xDEFC88", VA = "0xDEFC88")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0xDEFE70", Offset = "0xDEFE70", VA = "0xDEFE70")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x2000813")]
	public class RTLFixer
	{
		[Token(Token = "0x6002F36")]
		[Address(RVA = "0xDEFFAC", Offset = "0xDEFFAC", VA = "0xDEFFAC")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0xDF0234", Offset = "0xDF0234", VA = "0xDF0234")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0xDEFFB8", Offset = "0xDEFFB8", VA = "0xDEFFB8")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0xDF143C", Offset = "0xDF143C", VA = "0xDF143C")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x2000814")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4002A22")]
		Hamza = 65152,
		[Token(Token = "0x4002A23")]
		Alef = 65165,
		[Token(Token = "0x4002A24")]
		AlefHamza = 65155,
		[Token(Token = "0x4002A25")]
		WawHamza = 65157,
		[Token(Token = "0x4002A26")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4002A27")]
		AlefMaksora = 64508,
		[Token(Token = "0x4002A28")]
		HamzaNabera = 65161,
		[Token(Token = "0x4002A29")]
		Ba = 65167,
		[Token(Token = "0x4002A2A")]
		Ta = 65173,
		[Token(Token = "0x4002A2B")]
		Tha2 = 65177,
		[Token(Token = "0x4002A2C")]
		Jeem = 65181,
		[Token(Token = "0x4002A2D")]
		H7aa = 65185,
		[Token(Token = "0x4002A2E")]
		Khaa2 = 65189,
		[Token(Token = "0x4002A2F")]
		Dal = 65193,
		[Token(Token = "0x4002A30")]
		Thal = 65195,
		[Token(Token = "0x4002A31")]
		Ra2 = 65197,
		[Token(Token = "0x4002A32")]
		Zeen = 65199,
		[Token(Token = "0x4002A33")]
		Seen = 65201,
		[Token(Token = "0x4002A34")]
		Sheen = 65205,
		[Token(Token = "0x4002A35")]
		S9a = 65209,
		[Token(Token = "0x4002A36")]
		Dha = 65213,
		[Token(Token = "0x4002A37")]
		T6a = 65217,
		[Token(Token = "0x4002A38")]
		T6ha = 65221,
		[Token(Token = "0x4002A39")]
		Ain = 65225,
		[Token(Token = "0x4002A3A")]
		Gain = 65229,
		[Token(Token = "0x4002A3B")]
		Fa = 65233,
		[Token(Token = "0x4002A3C")]
		Gaf = 65237,
		[Token(Token = "0x4002A3D")]
		Kaf = 65241,
		[Token(Token = "0x4002A3E")]
		Lam = 65245,
		[Token(Token = "0x4002A3F")]
		Meem = 65249,
		[Token(Token = "0x4002A40")]
		Noon = 65253,
		[Token(Token = "0x4002A41")]
		Ha = 65257,
		[Token(Token = "0x4002A42")]
		Waw = 65261,
		[Token(Token = "0x4002A43")]
		Ya = 65265,
		[Token(Token = "0x4002A44")]
		AlefMad = 65153,
		[Token(Token = "0x4002A45")]
		TaMarboota = 65171,
		[Token(Token = "0x4002A46")]
		PersianPe = 64342,
		[Token(Token = "0x4002A47")]
		PersianChe = 64378,
		[Token(Token = "0x4002A48")]
		PersianZe = 64394,
		[Token(Token = "0x4002A49")]
		PersianGaf = 64402,
		[Token(Token = "0x4002A4A")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x2000815")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4002A4C")]
		Hamza = 1569,
		[Token(Token = "0x4002A4D")]
		Alef = 1575,
		[Token(Token = "0x4002A4E")]
		AlefHamza = 1571,
		[Token(Token = "0x4002A4F")]
		WawHamza = 1572,
		[Token(Token = "0x4002A50")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4002A51")]
		AlefMagsora = 1609,
		[Token(Token = "0x4002A52")]
		HamzaNabera = 1574,
		[Token(Token = "0x4002A53")]
		Ba = 1576,
		[Token(Token = "0x4002A54")]
		Ta = 1578,
		[Token(Token = "0x4002A55")]
		Tha2 = 1579,
		[Token(Token = "0x4002A56")]
		Jeem = 1580,
		[Token(Token = "0x4002A57")]
		H7aa = 1581,
		[Token(Token = "0x4002A58")]
		Khaa2 = 1582,
		[Token(Token = "0x4002A59")]
		Dal = 1583,
		[Token(Token = "0x4002A5A")]
		Thal = 1584,
		[Token(Token = "0x4002A5B")]
		Ra2 = 1585,
		[Token(Token = "0x4002A5C")]
		Zeen = 1586,
		[Token(Token = "0x4002A5D")]
		Seen = 1587,
		[Token(Token = "0x4002A5E")]
		Sheen = 1588,
		[Token(Token = "0x4002A5F")]
		S9a = 1589,
		[Token(Token = "0x4002A60")]
		Dha = 1590,
		[Token(Token = "0x4002A61")]
		T6a = 1591,
		[Token(Token = "0x4002A62")]
		T6ha = 1592,
		[Token(Token = "0x4002A63")]
		Ain = 1593,
		[Token(Token = "0x4002A64")]
		Gain = 1594,
		[Token(Token = "0x4002A65")]
		Fa = 1601,
		[Token(Token = "0x4002A66")]
		Gaf = 1602,
		[Token(Token = "0x4002A67")]
		Kaf = 1603,
		[Token(Token = "0x4002A68")]
		Lam = 1604,
		[Token(Token = "0x4002A69")]
		Meem = 1605,
		[Token(Token = "0x4002A6A")]
		Noon = 1606,
		[Token(Token = "0x4002A6B")]
		Ha = 1607,
		[Token(Token = "0x4002A6C")]
		Waw = 1608,
		[Token(Token = "0x4002A6D")]
		Ya = 1610,
		[Token(Token = "0x4002A6E")]
		AlefMad = 1570,
		[Token(Token = "0x4002A6F")]
		TaMarboota = 1577,
		[Token(Token = "0x4002A70")]
		PersianPe = 1662,
		[Token(Token = "0x4002A71")]
		PersianChe = 1670,
		[Token(Token = "0x4002A72")]
		PersianZe = 1688,
		[Token(Token = "0x4002A73")]
		PersianGaf = 1711,
		[Token(Token = "0x4002A74")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x2000816")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0xDF1444", Offset = "0xDF1444", VA = "0xDF1444")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x2000817")]
	internal class ArabicTable
	{
		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x1700075C")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0xDF2D04", Offset = "0xDF2D04", VA = "0xDF2D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0xDF1470", Offset = "0xDF1470", VA = "0xDF1470")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0xDF2D88", Offset = "0xDF2D88", VA = "0xDF2D88")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000818")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0xDF2F1C", Offset = "0xDF2F1C", VA = "0xDF2F1C")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000819")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0xDF2F4C", Offset = "0xDF2F4C", VA = "0xDF2F4C")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0xDF347C", Offset = "0xDF347C", VA = "0xDF347C")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0xDF0434", Offset = "0xDF0434", VA = "0xDF0434")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0xDF36A4", Offset = "0xDF36A4", VA = "0xDF36A4")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0xDF3C74", Offset = "0xDF3C74", VA = "0xDF3C74")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0xDF3B30", Offset = "0xDF3B30", VA = "0xDF3B30")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0xDF3800", Offset = "0xDF3800", VA = "0xDF3800")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0xDF3F60", Offset = "0xDF3F60", VA = "0xDF3F60")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x200081A")]
	[AddComponentMenu("I2/Localization/SetLanguage Button")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0xDF3FB4", Offset = "0xDF3FB4", VA = "0xDF3FB4")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0xDF3FB8", Offset = "0xDF3FB8", VA = "0xDF3FB8")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0xDF4050", Offset = "0xDF4050", VA = "0xDF4050")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200081B")]
	[AddComponentMenu("I2/Localization/SetLanguage Dropdown")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0xDF4058", Offset = "0xDF4058", VA = "0xDF4058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0xDF42B0", Offset = "0xDF42B0", VA = "0xDF42B0")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0xDF439C", Offset = "0xDF439C", VA = "0xDF439C")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x200081C")]
	public class StringObfucator
	{
		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0xDF43A4", Offset = "0xDF43A4", VA = "0xDF43A4")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0xDF4698", Offset = "0xDF4698", VA = "0xDF4698")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0xDF4614", Offset = "0xDF4614", VA = "0xDF4614")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0xDF4770", Offset = "0xDF4770", VA = "0xDF4770")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0xDF447C", Offset = "0xDF447C", VA = "0xDF447C")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0xDF47FC", Offset = "0xDF47FC", VA = "0xDF47FC")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x200081D")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4002A80")]
		Array = 1,
		[Token(Token = "0x4002A81")]
		Class,
		[Token(Token = "0x4002A82")]
		Value,
		[Token(Token = "0x4002A83")]
		IntValue,
		[Token(Token = "0x4002A84")]
		DoubleValue,
		[Token(Token = "0x4002A85")]
		BoolValue,
		[Token(Token = "0x4002A86")]
		FloatValue
	}
	[Token(Token = "0x200081E")]
	public class JSONNode
	{
		[Token(Token = "0x200081F")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000769")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002F89")]
				[Address(RVA = "0xDF693C", Offset = "0xDF693C", VA = "0xDF693C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700076A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F8B")]
				[Address(RVA = "0xDF6984", Offset = "0xDF6984", VA = "0xDF6984", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0xDF49D0", Offset = "0xDF49D0", VA = "0xDF49D0")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002F87")]
			[Address(RVA = "0xDF6920", Offset = "0xDF6920", VA = "0xDF6920", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0xDF6924", Offset = "0xDF6924", VA = "0xDF6924", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0xDF6944", Offset = "0xDF6944", VA = "0xDF6944", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0xDF698C", Offset = "0xDF698C", VA = "0xDF698C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F8D")]
			[Address(RVA = "0xDF6A24", Offset = "0xDF6A24", VA = "0xDF6A24", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000820")]
		[CompilerGenerated]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700076B")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002F93")]
				[Address(RVA = "0xDF7090", Offset = "0xDF7090", VA = "0xDF7090", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700076C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F95")]
				[Address(RVA = "0xDF70D8", Offset = "0xDF70D8", VA = "0xDF70D8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0xDF4A88", Offset = "0xDF4A88", VA = "0xDF4A88")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0xDF6A28", Offset = "0xDF6A28", VA = "0xDF6A28", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F90")]
			[Address(RVA = "0xDF6AE0", Offset = "0xDF6AE0", VA = "0xDF6AE0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F91")]
			[Address(RVA = "0xDF6FE0", Offset = "0xDF6FE0", VA = "0xDF6FE0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002F92")]
			[Address(RVA = "0xDF6F30", Offset = "0xDF6F30", VA = "0xDF6F30")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002F94")]
			[Address(RVA = "0xDF7098", Offset = "0xDF7098", VA = "0xDF7098", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F96")]
			[Address(RVA = "0xDF70E0", Offset = "0xDF70E0", VA = "0xDF70E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F97")]
			[Address(RVA = "0xDF718C", Offset = "0xDF718C", VA = "0xDF718C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x1700075D")]
		public virtual JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0xDF4884", Offset = "0xDF4884", VA = "0xDF4884", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F57")]
			[Address(RVA = "0xDF488C", Offset = "0xDF488C", VA = "0xDF488C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700075E")]
		public virtual JSONNode this[string aKey]
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0xDF4890", Offset = "0xDF4890", VA = "0xDF4890", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F59")]
			[Address(RVA = "0xDF4898", Offset = "0xDF4898", VA = "0xDF4898", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700075F")]
		public virtual string Value
		{
			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0xDF489C", Offset = "0xDF489C", VA = "0xDF489C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0xDF48DC", Offset = "0xDF48DC", VA = "0xDF48DC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000760")]
		public virtual int Count
		{
			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0xDF48E0", Offset = "0xDF48E0", VA = "0xDF48E0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000761")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002F61")]
			[Address(RVA = "0xDF4960", Offset = "0xDF4960", VA = "0xDF4960", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000762")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6002F62")]
			[Address(RVA = "0xDF4A04", Offset = "0xDF4A04", VA = "0xDF4A04")]
			[IteratorStateMachine(typeof(<get_DeepChilds>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000763")]
		public virtual int AsInt
		{
			[Token(Token = "0x6002F65")]
			[Address(RVA = "0xDF4B3C", Offset = "0xDF4B3C", VA = "0xDF4B3C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002F66")]
			[Address(RVA = "0xDF4B70", Offset = "0xDF4B70", VA = "0xDF4B70", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000764")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6002F67")]
			[Address(RVA = "0xDF4BAC", Offset = "0xDF4BAC", VA = "0xDF4BAC", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xDF4BE4", Offset = "0xDF4BE4", VA = "0xDF4BE4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000765")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6002F69")]
			[Address(RVA = "0xDF4C20", Offset = "0xDF4C20", VA = "0xDF4C20", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0xDF4C58", Offset = "0xDF4C58", VA = "0xDF4C58", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000766")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0xDF4C94", Offset = "0xDF4C94", VA = "0xDF4C94", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0xDF4D4C", Offset = "0xDF4D4C", VA = "0xDF4D4C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000767")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0xDF4DC4", Offset = "0xDF4DC4", VA = "0xDF4DC4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000768")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0xDF4E3C", Offset = "0xDF4E3C", VA = "0xDF4E3C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0xDF4880", Offset = "0xDF4880", VA = "0xDF4880", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0xDF48E8", Offset = "0xDF48E8", VA = "0xDF48E8", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0xDF4948", Offset = "0xDF4948", VA = "0xDF4948", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0xDF4950", Offset = "0xDF4950", VA = "0xDF4950", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0xDF4958", Offset = "0xDF4958", VA = "0xDF4958", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0xDF4ABC", Offset = "0xDF4ABC", VA = "0xDF4ABC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0xDF4AFC", Offset = "0xDF4AFC", VA = "0xDF4AFC", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0xDF4EB4", Offset = "0xDF4EB4", VA = "0xDF4EB4")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0xDF4F54", Offset = "0xDF4F54", VA = "0xDF4F54")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0xDF4F90", Offset = "0xDF4F90", VA = "0xDF4F90")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0xDF5018", Offset = "0xDF5018", VA = "0xDF5018")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0xDF5030", Offset = "0xDF5030", VA = "0xDF5030", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0xDF503C", Offset = "0xDF503C", VA = "0xDF503C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0xDF5044", Offset = "0xDF5044", VA = "0xDF5044")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0xDF5210", Offset = "0xDF5210", VA = "0xDF5210")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0xDF5AA8", Offset = "0xDF5AA8", VA = "0xDF5AA8", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0xDF5AAC", Offset = "0xDF5AAC", VA = "0xDF5AAC")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0xDF5B2C", Offset = "0xDF5B2C", VA = "0xDF5B2C")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0xDF5B7C", Offset = "0xDF5B7C", VA = "0xDF5B7C")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0xDF5BCC", Offset = "0xDF5BCC", VA = "0xDF5BCC")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0xDF5C1C", Offset = "0xDF5C1C", VA = "0xDF5C1C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0xDF5DEC", Offset = "0xDF5DEC", VA = "0xDF5DEC")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0xDF5FEC", Offset = "0xDF5FEC", VA = "0xDF5FEC")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0xDF6464", Offset = "0xDF6464", VA = "0xDF6464")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0xDF64B4", Offset = "0xDF64B4", VA = "0xDF64B4")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0xDF6504", Offset = "0xDF6504", VA = "0xDF6504")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0xDF6554", Offset = "0xDF6554", VA = "0xDF6554")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0xDF66E8", Offset = "0xDF66E8", VA = "0xDF66E8")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0xDF6864", Offset = "0xDF6864", VA = "0xDF6864")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0xDF6918", Offset = "0xDF6918", VA = "0xDF6918")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000821")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000822")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000771")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002FAA")]
				[Address(RVA = "0xDF7F88", Offset = "0xDF7F88", VA = "0xDF7F88", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000772")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FAC")]
				[Address(RVA = "0xDF7FD0", Offset = "0xDF7FD0", VA = "0xDF7FD0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0xDF7730", Offset = "0xDF7730", VA = "0xDF7730")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0xDF7D74", Offset = "0xDF7D74", VA = "0xDF7D74", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0xDF7D90", Offset = "0xDF7D90", VA = "0xDF7D90", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0xDF7F38", Offset = "0xDF7F38", VA = "0xDF7F38")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0xDF7F90", Offset = "0xDF7F90", VA = "0xDF7F90", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0xDF7FD8", Offset = "0xDF7FD8", VA = "0xDF7FD8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0xDF8084", Offset = "0xDF8084", VA = "0xDF8084", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000823")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000773")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FB3")]
				[Address(RVA = "0xDF829C", Offset = "0xDF829C", VA = "0xDF829C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000774")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FB5")]
				[Address(RVA = "0xDF82E4", Offset = "0xDF82E4", VA = "0xDF82E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0xDF77D8", Offset = "0xDF77D8", VA = "0xDF77D8")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0xDF8088", Offset = "0xDF8088", VA = "0xDF8088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0xDF80A4", Offset = "0xDF80A4", VA = "0xDF80A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0xDF824C", Offset = "0xDF824C", VA = "0xDF824C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0xDF82A4", Offset = "0xDF82A4", VA = "0xDF82A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x1700076D")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002F98")]
			[Address(RVA = "0xDF7190", Offset = "0xDF7190", VA = "0xDF7190", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F99")]
			[Address(RVA = "0xDF7280", Offset = "0xDF7280", VA = "0xDF7280", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700076E")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0xDF7390", Offset = "0xDF7390", VA = "0xDF7390", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0xDF73F0", Offset = "0xDF73F0", VA = "0xDF73F0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700076F")]
		public override int Count
		{
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0xDF74A0", Offset = "0xDF74A0", VA = "0xDF74A0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000770")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0xDF76AC", Offset = "0xDF76AC", VA = "0xDF76AC", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0xDF74E8", Offset = "0xDF74E8", VA = "0xDF74E8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0xDF7598", Offset = "0xDF7598", VA = "0xDF7598", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0xDF764C", Offset = "0xDF764C", VA = "0xDF764C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0xDF7764", Offset = "0xDF7764", VA = "0xDF7764", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__14))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0xDF7800", Offset = "0xDF7800", VA = "0xDF7800", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0xDF7A18", Offset = "0xDF7A18", VA = "0xDF7A18", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0xDF7C98", Offset = "0xDF7C98", VA = "0xDF7C98", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0xDF5A20", Offset = "0xDF5A20", VA = "0xDF5A20")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000824")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000826")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000779")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002FCB")]
				[Address(RVA = "0xDF9A00", Offset = "0xDF9A00", VA = "0xDF9A00", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700077A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FCD")]
				[Address(RVA = "0xDF9A48", Offset = "0xDF9A48", VA = "0xDF9A48", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0xDF8B9C", Offset = "0xDF8B9C", VA = "0xDF8B9C")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0xDF97D8", Offset = "0xDF97D8", VA = "0xDF97D8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0xDF97F4", Offset = "0xDF97F4", VA = "0xDF97F4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0xDF99B0", Offset = "0xDF99B0", VA = "0xDF99B0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0xDF9A08", Offset = "0xDF9A08", VA = "0xDF9A08", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0xDF9A50", Offset = "0xDF9A50", VA = "0xDF9A50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0xDF9AFC", Offset = "0xDF9AFC", VA = "0xDF9AFC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000827")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700077B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FD4")]
				[Address(RVA = "0xDF9D50", Offset = "0xDF9D50", VA = "0xDF9D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700077C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FD6")]
				[Address(RVA = "0xDF9D98", Offset = "0xDF9D98", VA = "0xDF9D98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xDF8C44", Offset = "0xDF8C44", VA = "0xDF8C44")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0xDF9B00", Offset = "0xDF9B00", VA = "0xDF9B00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0xDF9B1C", Offset = "0xDF9B1C", VA = "0xDF9B1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0xDF9D00", Offset = "0xDF9D00", VA = "0xDF9D00")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0xDF9D58", Offset = "0xDF9D58", VA = "0xDF9D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000775")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0xDF82EC", Offset = "0xDF82EC", VA = "0xDF82EC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0xDF83F4", Offset = "0xDF83F4", VA = "0xDF83F4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000776")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0xDF84C0", Offset = "0xDF84C0", VA = "0xDF84C0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0xDF8560", Offset = "0xDF8560", VA = "0xDF8560", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000777")]
		public override int Count
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0xDF863C", Offset = "0xDF863C", VA = "0xDF863C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000778")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002FBF")]
			[Address(RVA = "0xDF8B18", Offset = "0xDF8B18", VA = "0xDF8B18", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__14))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0xDF868C", Offset = "0xDF868C", VA = "0xDF868C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0xDF87A0", Offset = "0xDF87A0", VA = "0xDF87A0", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0xDF8864", Offset = "0xDF8864", VA = "0xDF8864", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0xDF8940", Offset = "0xDF8940", VA = "0xDF8940", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0xDF8BD0", Offset = "0xDF8BD0", VA = "0xDF8BD0", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__15))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0xDF8C6C", Offset = "0xDF8C6C", VA = "0xDF8C6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0xDF90B0", Offset = "0xDF90B0", VA = "0xDF90B0", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0xDF9574", Offset = "0xDF9574", VA = "0xDF9574", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0xDF592C", Offset = "0xDF592C", VA = "0xDF592C")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000828")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x1700077D")]
		public override string Value
		{
			[Token(Token = "0x6002FD7")]
			[Address(RVA = "0xDF9DA0", Offset = "0xDF9DA0", VA = "0xDF9DA0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0xDF9DA8", Offset = "0xDF9DA8", VA = "0xDF9DA8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0xDF4F24", Offset = "0xDF4F24", VA = "0xDF4F24")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0xDF642C", Offset = "0xDF642C", VA = "0xDF642C")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0xDF63BC", Offset = "0xDF63BC", VA = "0xDF63BC")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0xDF63F4", Offset = "0xDF63F4", VA = "0xDF63F4")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0xDF6384", Offset = "0xDF6384", VA = "0xDF6384")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0xDF9DB0", Offset = "0xDF9DB0", VA = "0xDF9DB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0xDF9E08", Offset = "0xDF9E08", VA = "0xDF9E08", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0xDF9E60", Offset = "0xDF9E60", VA = "0xDF9E60", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000829")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700077E")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0xDFA190", Offset = "0xDFA190", VA = "0xDFA190", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FE5")]
			[Address(RVA = "0xDFA1F0", Offset = "0xDFA1F0", VA = "0xDFA1F0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700077F")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0xDFA270", Offset = "0xDFA270", VA = "0xDFA270", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FE7")]
			[Address(RVA = "0xDFA2E0", Offset = "0xDFA2E0", VA = "0xDFA2E0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000780")]
		public override int AsInt
		{
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0xDFA540", Offset = "0xDFA540", VA = "0xDFA540", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0xDFA5C4", Offset = "0xDFA5C4", VA = "0xDFA5C4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000781")]
		public override float AsFloat
		{
			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0xDFA64C", Offset = "0xDFA64C", VA = "0xDFA64C", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0xDFA6D0", Offset = "0xDFA6D0", VA = "0xDFA6D0", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000782")]
		public override double AsDouble
		{
			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0xDFA758", Offset = "0xDFA758", VA = "0xDFA758", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0xDFA7DC", Offset = "0xDFA7DC", VA = "0xDFA7DC", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000783")]
		public override bool AsBool
		{
			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0xDFA864", Offset = "0xDFA864", VA = "0xDFA864", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002FF7")]
			[Address(RVA = "0xDFA8E8", Offset = "0xDFA8E8", VA = "0xDFA8E8", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000784")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002FF8")]
			[Address(RVA = "0xDFA970", Offset = "0xDFA970", VA = "0xDFA970", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000785")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6002FF9")]
			[Address(RVA = "0xDFA9D8", Offset = "0xDFA9D8", VA = "0xDFA9D8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0xDF7240", Offset = "0xDF7240", VA = "0xDF7240")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0xDF83B0", Offset = "0xDF83B0", VA = "0xDF83B0")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0xDFA130", Offset = "0xDFA130", VA = "0xDFA130")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0xDFA368", Offset = "0xDFA368", VA = "0xDFA368", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0xDFA3E8", Offset = "0xDFA3E8", VA = "0xDFA3E8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0xDFA470", Offset = "0xDFA470", VA = "0xDFA470")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0xDFA488", Offset = "0xDFA488", VA = "0xDFA488")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0xDFA4A0", Offset = "0xDFA4A0", VA = "0xDFA4A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0xDFA4B8", Offset = "0xDFA4B8", VA = "0xDFA4B8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0xDFA4C0", Offset = "0xDFA4C0", VA = "0xDFA4C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0xDFA500", Offset = "0xDFA500", VA = "0xDFA500", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x200082A")]
	public static class JSON
	{
		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0xDFAA40", Offset = "0xDFAA40", VA = "0xDFAA40")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
