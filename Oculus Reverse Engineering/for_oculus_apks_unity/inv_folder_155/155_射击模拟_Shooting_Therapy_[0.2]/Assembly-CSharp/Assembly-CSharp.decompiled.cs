using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BulletDestroy : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x58D51C", Offset = "0x58D51C", VA = "0x58D51C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x58D5A8", Offset = "0x58D5A8", VA = "0x58D5A8")]
	public BulletDestroy()
	{
	}
}
[Token(Token = "0x2000003")]
public class CaseDestroy : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x58D5B8", Offset = "0x58D5B8", VA = "0x58D5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x58D644", Offset = "0x58D644", VA = "0x58D644")]
	public CaseDestroy()
	{
	}
}
[Token(Token = "0x2000004")]
public class Center : MonoBehaviour
{
	[Token(Token = "0x6000005")]
	[Address(RVA = "0x58D654", Offset = "0x58D654", VA = "0x58D654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x58D658", Offset = "0x58D658", VA = "0x58D658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x58D65C", Offset = "0x58D65C", VA = "0x58D65C")]
	public Center()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413B20", Offset = "0x413B20")]
public class CenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 CenterOfMass2;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool Awake;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody r;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x58D664", Offset = "0x58D664", VA = "0x58D664")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x58D6C4", Offset = "0x58D6C4", VA = "0x58D6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x58D728", Offset = "0x58D728", VA = "0x58D728")]
	private void onDrawGizmos()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x58D888", Offset = "0x58D888", VA = "0x58D888")]
	public CenterOfMass()
	{
	}
}
[Token(Token = "0x2000006")]
public class BreakFruit : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parts;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform breakable;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x58CAD4", Offset = "0x58CAD4", VA = "0x58CAD4")]
	public void Run()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x58D0D4", Offset = "0x58D0D4", VA = "0x58D0D4")]
	public BreakFruit()
	{
	}
}
[Token(Token = "0x2000007")]
public class QuitOnEsc : MonoBehaviour
{
	[Token(Token = "0x600000E")]
	[Address(RVA = "0x5E9450", Offset = "0x5E9450", VA = "0x5E9450")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x5E947C", Offset = "0x5E947C", VA = "0x5E947C")]
	public QuitOnEsc()
	{
	}
}
[Token(Token = "0x2000008")]
public class RespawnFruit : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocityY;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float width;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxTimeRespawn;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] Fruits;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x5EA078", Offset = "0x5EA078", VA = "0x5EA078")]
	public void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x5EA43C", Offset = "0x5EA43C", VA = "0x5EA43C")]
	public RespawnFruit()
	{
	}
}
[Token(Token = "0x2000009")]
public class RespawnFruit2D : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocityY;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float width;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxTimeRespawn;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] Fruits;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x5EA458", Offset = "0x5EA458", VA = "0x5EA458")]
	public void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x5EA7B0", Offset = "0x5EA7B0", VA = "0x5EA7B0")]
	public RespawnFruit2D()
	{
	}
}
[Token(Token = "0x200000A")]
public class ShootFruit : MonoBehaviour
{
	[Token(Token = "0x6000014")]
	[Address(RVA = "0x5EC378", Offset = "0x5EC378", VA = "0x5EC378")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x5EC548", Offset = "0x5EC548", VA = "0x5EC548")]
	public ShootFruit()
	{
	}
}
[Token(Token = "0x200000B")]
public class ClickButton : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawn;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x58ECAC", Offset = "0x58ECAC", VA = "0x58ECAC")]
	public void Biscuit()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x58ED20", Offset = "0x58ED20", VA = "0x58ED20")]
	public ClickButton()
	{
	}
}
[Token(Token = "0x200000C")]
public class SimpleShoot : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject casingPrefab;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleFlashPrefab;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform barrelLocation;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform casingExitLocation;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float shotPower;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x5EC878", Offset = "0x5EC878", VA = "0x5EC878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x5EC804", Offset = "0x5EC804", VA = "0x5EC804")]
	public void TriggerShoot()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x5EC924", Offset = "0x5EC924", VA = "0x5EC924")]
	private void Shoot()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x5ECB18", Offset = "0x5ECB18", VA = "0x5ECB18")]
	private void CasingRelease()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x5ECDD0", Offset = "0x5ECDD0", VA = "0x5ECDD0")]
	public SimpleShoot()
	{
	}
}
[Token(Token = "0x200000D")]
public class UDPPacketIO
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private UdpClient Sender;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UdpClient Receiver;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool socketsOpen;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string remoteHostName;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int remotePort;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int localPort;

	[Token(Token = "0x17000001")]
	public string RemoteHostName
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x5F4234", Offset = "0x5F4234", VA = "0x5F4234")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x5F423C", Offset = "0x5F423C", VA = "0x5F423C")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public int RemotePort
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x5F4244", Offset = "0x5F4244", VA = "0x5F4244")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x5F424C", Offset = "0x5F424C", VA = "0x5F424C")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public int LocalPort
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x5F4254", Offset = "0x5F4254", VA = "0x5F4254")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x5F425C", Offset = "0x5F425C", VA = "0x5F425C")]
		set
		{
		}
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x5F3C70", Offset = "0x5F3C70", VA = "0x5F3C70")]
	public UDPPacketIO(string hostIP, int remotePort, int localPort)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x5F3CC0", Offset = "0x5F3CC0", VA = "0x5F3CC0", Slot = "1")]
	~UDPPacketIO()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x5F3E14", Offset = "0x5F3E14", VA = "0x5F3E14")]
	public bool Open()
	{
		return default(bool);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x5F3DC0", Offset = "0x5F3DC0", VA = "0x5F3DC0")]
	public void Close()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x5F4074", Offset = "0x5F4074", VA = "0x5F4074")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x5F4078", Offset = "0x5F4078", VA = "0x5F4078")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x5F4080", Offset = "0x5F4080", VA = "0x5F4080")]
	public void SendPacket(byte[] packet, int length)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x5F40F4", Offset = "0x5F40F4", VA = "0x5F40F4")]
	public int ReceivePacket(byte[] buffer)
	{
		return default(int);
	}
}
[Token(Token = "0x200000E")]
public class OscMessage
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string address;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList values;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x6546D4", Offset = "0x6546D4", VA = "0x6546D4")]
	public OscMessage()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x654748", Offset = "0x654748", VA = "0x654748", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x6549E4", Offset = "0x6549E4", VA = "0x6549E4")]
	public int GetInt(int index)
	{
		return default(int);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x654C40", Offset = "0x654C40", VA = "0x654C40")]
	public float GetFloat(int index)
	{
		return default(float);
	}
}
[Token(Token = "0x200000F")]
public delegate void OscMessageHandler(OscMessage oscM);
[Token(Token = "0x2000010")]
public class OSC : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int inPort;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string outIP;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int outPort;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UDPPacketIO OscPacketIO;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Thread ReadThread;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ReaderRunning;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OscMessageHandler AllMessageHandler;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Hashtable AddressTable;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ArrayList messagesReceived;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private object ReadThreadLock;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private byte[] buffer;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool paused;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x795380", Offset = "0x795380", VA = "0x795380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x79551C", Offset = "0x79551C", VA = "0x79551C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x7955C4", Offset = "0x7955C4", VA = "0x7955C4")]
	public void SetAddressHandler(string key, OscMessageHandler ah)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x7956E8", Offset = "0x7956E8", VA = "0x7956E8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x79576C", Offset = "0x79576C", VA = "0x79576C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x795520", Offset = "0x795520", VA = "0x795520")]
	public void Close()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x795DC8", Offset = "0x795DC8", VA = "0x795DC8")]
	private void Read()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x796098", Offset = "0x796098", VA = "0x796098")]
	public void Send(OscMessage oscMessage)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x796138", Offset = "0x796138", VA = "0x796138")]
	public void Send(ArrayList oms)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x796600", Offset = "0x796600", VA = "0x796600")]
	public void SetAllMessageHandler(OscMessageHandler amh)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x796608", Offset = "0x796608", VA = "0x796608")]
	public static OscMessage StringToOscMessage(string message)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x796018", Offset = "0x796018", VA = "0x796018")]
	public static ArrayList PacketToOscMessages(byte[] packet, int length)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x7961C8", Offset = "0x7961C8", VA = "0x7961C8")]
	public static int OscMessagesToPacket(ArrayList messages, byte[] packet, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x79612C", Offset = "0x79612C", VA = "0x79612C")]
	public static int OscMessageToPacket(OscMessage oscM, byte[] packet, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x796E9C", Offset = "0x796E9C", VA = "0x796E9C")]
	private static int OscMessageToPacket(OscMessage oscM, byte[] packet, int start, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x796D30", Offset = "0x796D30", VA = "0x796D30")]
	private static int ExtractMessages(ArrayList messages, byte[] packet, int start, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x7976A0", Offset = "0x7976A0", VA = "0x7976A0")]
	private static int ExtractMessage(ArrayList messages, byte[] packet, int start, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x797A5C", Offset = "0x797A5C", VA = "0x797A5C")]
	private static string ExtractString(byte[] packet, int start, int length)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x797B2C", Offset = "0x797B2C", VA = "0x797B2C")]
	private static string Dump(byte[] packet, int start, int length)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x797548", Offset = "0x797548", VA = "0x797548")]
	private static int InsertString(string s, byte[] packet, int start, int length)
	{
		return default(int);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x797678", Offset = "0x797678", VA = "0x797678")]
	private static int PadSize(int rawSize)
	{
		return default(int);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x797C4C", Offset = "0x797C4C", VA = "0x797C4C")]
	public OSC()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x413B84", Offset = "0x413B84")]
public class FastList<T>
{
	[Token(Token = "0x2000207")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4150EC", Offset = "0x4150EC")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000A4")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000D68")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D65")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D66")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D67")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D69")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000004")]
	public int Count
	{
		[Token(Token = "0x600004B")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600004C")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public T Item
	{
		[Token(Token = "0x600004D")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600004E")]
		set
		{
		}
	}

	[Token(Token = "0x6000049")]
	public FastList()
	{
	}

	[Token(Token = "0x600004A")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600004F")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000050")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000051")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000052")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000053")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000054")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000055")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000057")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000058")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000059")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600005A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600005C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600005D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41A60C", Offset = "0x41A60C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600005F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000060")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000061")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000062")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000012")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x592F88", Offset = "0x592F88", VA = "0x592F88")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000013")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x592F54", Offset = "0x592F54", VA = "0x592F54")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000014")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x5E57A0", Offset = "0x5E57A0", VA = "0x5E57A0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x5E590C", Offset = "0x5E590C", VA = "0x5E590C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x5E5CB0", Offset = "0x5E5CB0", VA = "0x5E5CB0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x5E5F0C", Offset = "0x5E5F0C", VA = "0x5E5F0C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x5E5F3C", Offset = "0x5E5F3C", VA = "0x5E5F3C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000015")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x5E9250", Offset = "0x5E9250", VA = "0x5E9250")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x5E92DC", Offset = "0x5E92DC", VA = "0x5E92DC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x5E9448", Offset = "0x5E9448", VA = "0x5E9448")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000016")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000006")]
	public bool IsVisible
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x5923C8", Offset = "0x5923C8", VA = "0x5923C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x5923D0", Offset = "0x5923D0", VA = "0x5923D0")]
		set
		{
		}
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x5924F8", Offset = "0x5924F8", VA = "0x5924F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x592714", Offset = "0x592714", VA = "0x592714")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x59271C", Offset = "0x59271C", VA = "0x59271C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000017")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x5E9E24", Offset = "0x5E9E24", VA = "0x5E9E24")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020A")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A59C", Offset = "0x41A59C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A5B4", Offset = "0x41A5B4")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A5CC", Offset = "0x41A5CC")]
		public float LatencyWeight;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A5E4", Offset = "0x41A5E4")]
		public int MaxSamples;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x5E9E2C", Offset = "0x5E9E2C", VA = "0x5E9E2C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x5E9FDC", Offset = "0x5E9FDC", VA = "0x5E9FDC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x5E9484", Offset = "0x5E9484", VA = "0x5E9484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x5E95BC", Offset = "0x5E95BC", VA = "0x5E95BC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x5E993C", Offset = "0x5E993C", VA = "0x5E993C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x5E9894", Offset = "0x5E9894", VA = "0x5E9894")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x5E9B98", Offset = "0x5E9B98", VA = "0x5E9B98")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x5E9F38", Offset = "0x5E9F38", VA = "0x5E9F38")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000018")]
public class P2PManager
{
	[Token(Token = "0x200020B")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400082B")]
		Update = 1
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x5E74F8", Offset = "0x5E74F8", VA = "0x5E74F8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x5E75B8", Offset = "0x5E75B8", VA = "0x5E75B8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x5E7828", Offset = "0x5E7828", VA = "0x5E7828")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x5E7970", Offset = "0x5E7970", VA = "0x5E7970")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x5E7AC0", Offset = "0x5E7AC0", VA = "0x5E7AC0")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x5E7D98", Offset = "0x5E7D98", VA = "0x5E7D98")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x5E8188", Offset = "0x5E8188", VA = "0x5E8188")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x5E8424", Offset = "0x5E8424", VA = "0x5E8424")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x5E7F58", Offset = "0x5E7F58", VA = "0x5E7F58")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x5E8354", Offset = "0x5E8354", VA = "0x5E8354")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x5E8040", Offset = "0x5E8040", VA = "0x5E8040")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x5E8644", Offset = "0x5E8644", VA = "0x5E8644")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x5E7FA0", Offset = "0x5E7FA0", VA = "0x5E7FA0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x5E8398", Offset = "0x5E8398", VA = "0x5E8398")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x5E80E8", Offset = "0x5E80E8", VA = "0x5E80E8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x5E86D0", Offset = "0x5E86D0", VA = "0x5E86D0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000019")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x5E8770", Offset = "0x5E8770", VA = "0x5E8770", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x5E8B08", Offset = "0x5E8B08", VA = "0x5E8B08", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x5E8B2C", Offset = "0x5E8B2C", VA = "0x5E8B2C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x5E8EF4", Offset = "0x5E8EF4", VA = "0x5E8EF4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x5E9094", Offset = "0x5E9094", VA = "0x5E9094")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x5E9114", Offset = "0x5E9114", VA = "0x5E9114")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x5E9168", Offset = "0x5E9168", VA = "0x5E9168")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200001A")]
public class RemotePlayer
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x5EA070", Offset = "0x5EA070", VA = "0x5EA070")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200001B")]
public class RoomManager
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x5EA7CC", Offset = "0x5EA7CC", VA = "0x5EA7CC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x5EA898", Offset = "0x5EA898", VA = "0x5EA898")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x5EAAA0", Offset = "0x5EAAA0", VA = "0x5EAAA0")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x5EABAC", Offset = "0x5EABAC", VA = "0x5EABAC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x5EAC60", Offset = "0x5EAC60", VA = "0x5EAC60")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x5EB1CC", Offset = "0x5EB1CC", VA = "0x5EB1CC")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x5EAAD0", Offset = "0x5EAAD0", VA = "0x5EAAD0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x5EB254", Offset = "0x5EB254", VA = "0x5EB254")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x5EB92C", Offset = "0x5EB92C", VA = "0x5EB92C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x5EBC48", Offset = "0x5EBC48", VA = "0x5EBC48")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x5EB544", Offset = "0x5EB544", VA = "0x5EB544")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200001C")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200020C")]
	public enum State
	{
		[Token(Token = "0x400082D")]
		INITIALIZING,
		[Token(Token = "0x400082E")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400082F")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000830")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000831")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000832")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000833")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000834")]
		SHUTDOWN
	}

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000007")]
	public static State CurrentState
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x5EE374", Offset = "0x5EE374", VA = "0x5EE374")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000008")]
	public static ulong MyID
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x5E7694", Offset = "0x5E7694", VA = "0x5E7694")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000009")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x5EE3E8", Offset = "0x5EE3E8", VA = "0x5EE3E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x5E8B50", Offset = "0x5E8B50", VA = "0x5E8B50", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x5E87B0", Offset = "0x5E87B0", VA = "0x5E87B0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x5ED0D8", Offset = "0x5ED0D8", VA = "0x5ED0D8")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x5E8B28", Offset = "0x5E8B28", VA = "0x5E8B28", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x5ED234", Offset = "0x5ED234", VA = "0x5ED234")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x5ED328", Offset = "0x5ED328", VA = "0x5ED328")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x5EDA7C", Offset = "0x5EDA7C", VA = "0x5EDA7C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x5EDF78", Offset = "0x5EDF78", VA = "0x5EDF78")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x5EE140", Offset = "0x5EE140", VA = "0x5EE140")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x5EE304", Offset = "0x5EE304", VA = "0x5EE304")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x5ECF64", Offset = "0x5ECF64", VA = "0x5ECF64")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x5EA9F0", Offset = "0x5EA9F0", VA = "0x5EA9F0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x5EAD84", Offset = "0x5EAD84", VA = "0x5EAD84")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x5EE4FC", Offset = "0x5EE4FC", VA = "0x5EE4FC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x5EB0E4", Offset = "0x5EB0E4", VA = "0x5EB0E4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x5EBCC0", Offset = "0x5EBCC0", VA = "0x5EBCC0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x5EC058", Offset = "0x5EC058", VA = "0x5EC058")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x5EC128", Offset = "0x5EC128", VA = "0x5EC128")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x5E776C", Offset = "0x5E776C", VA = "0x5E776C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x5EBDE4", Offset = "0x5EBDE4", VA = "0x5EBDE4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x5EBE70", Offset = "0x5EBE70", VA = "0x5EBE70")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x5EE67C", Offset = "0x5EE67C", VA = "0x5EE67C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x5EE934", Offset = "0x5EE934", VA = "0x5EE934")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x5ECEDC", Offset = "0x5ECEDC", VA = "0x5ECEDC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x41A670", Offset = "0x41A670")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x5E78A8", Offset = "0x5E78A8", VA = "0x5E78A8")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x5E91D4", Offset = "0x5E91D4", VA = "0x5E91D4")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200001D")]
public class VoipManager
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x5ED018", Offset = "0x5ED018", VA = "0x5ED018")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x5EE858", Offset = "0x5EE858", VA = "0x5EE858")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x5EE284", Offset = "0x5EE284", VA = "0x5EE284")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x5F4EFC", Offset = "0x5F4EFC", VA = "0x5F4EFC")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x5F504C", Offset = "0x5F504C", VA = "0x5F504C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200001E")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x592044", Offset = "0x592044", VA = "0x592044")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x5920C4", Offset = "0x5920C4", VA = "0x5920C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x592240", Offset = "0x592240", VA = "0x592240")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x5922A4", Offset = "0x5922A4", VA = "0x5922A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x592100", Offset = "0x592100", VA = "0x592100")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x592360", Offset = "0x592360", VA = "0x592360")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x5923C0", Offset = "0x5923C0", VA = "0x5923C0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class AvatarLayer
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x58BC64", Offset = "0x58BC64", VA = "0x58BC64")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x5E875C", Offset = "0x5E875C", VA = "0x5E875C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x658DE0", Offset = "0x658DE0", VA = "0x658DE0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200020E")]
	public enum HandType
	{
		[Token(Token = "0x4000837")]
		Right,
		[Token(Token = "0x4000838")]
		Left,
		[Token(Token = "0x4000839")]
		Max
	}

	[Token(Token = "0x200020F")]
	public enum HandJoint
	{
		[Token(Token = "0x400083B")]
		HandBase,
		[Token(Token = "0x400083C")]
		IndexBase,
		[Token(Token = "0x400083D")]
		IndexTip,
		[Token(Token = "0x400083E")]
		ThumbBase,
		[Token(Token = "0x400083F")]
		ThumbTip,
		[Token(Token = "0x4000840")]
		Max
	}

	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4150FC", Offset = "0x4150FC")]
	private sealed class <WaitForMouthAudioSource>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x65B2C0", Offset = "0x65B2C0", VA = "0x65B2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x65B328", Offset = "0x65B328", VA = "0x65B328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x65ACAC", Offset = "0x65ACAC", VA = "0x65ACAC")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x65B124", Offset = "0x65B124", VA = "0x65B124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x65B128", Offset = "0x65B128", VA = "0x65B128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x65B2C8", Offset = "0x65B2C8", VA = "0x65B2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4153C0", Offset = "0x4153C0")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4153F8", Offset = "0x4153F8")]
	public bool EnableBody;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x415430", Offset = "0x415430")]
	public bool RecordPackets;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x415468", Offset = "0x415468")]
	public bool StartWithControllers;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4154A0", Offset = "0x4154A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4154A0", Offset = "0x4154A0")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415510", Offset = "0x415510")]
	private bool CombineMeshes;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415548", Offset = "0x415548")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x415580", Offset = "0x415580")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4155B8", Offset = "0x4155B8")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4155F0", Offset = "0x4155F0")]
	public bool EnableLaughter;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int renderPartCount;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000B5")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000B7")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000B8")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000B9")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000BA")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000BB")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x6552A4", Offset = "0x6552A4", VA = "0x6552A4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x6556BC", Offset = "0x6556BC", VA = "0x6556BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x655748", Offset = "0x655748", VA = "0x655748")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x6557B4", Offset = "0x6557B4", VA = "0x6557B4")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x6558DC", Offset = "0x6558DC", VA = "0x6558DC")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x6559C0", Offset = "0x6559C0", VA = "0x6559C0")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x655AA0", Offset = "0x655AA0", VA = "0x655AA0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x655C88", Offset = "0x655C88", VA = "0x655C88")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x655D50", Offset = "0x655D50", VA = "0x655D50")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x655DD4", Offset = "0x655DD4", VA = "0x655DD4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x655EBC", Offset = "0x655EBC", VA = "0x655EBC")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x655F48", Offset = "0x655F48", VA = "0x655F48")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x656064", Offset = "0x656064", VA = "0x656064")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x6560C4", Offset = "0x6560C4", VA = "0x6560C4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000D5")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x656548", Offset = "0x656548", VA = "0x656548")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x6568A8", Offset = "0x6568A8", VA = "0x6568A8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x656A50", Offset = "0x656A50", VA = "0x656A50")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x656D18", Offset = "0x656D18", VA = "0x656D18")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x656E04", Offset = "0x656E04", VA = "0x656E04")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x657408", Offset = "0x657408", VA = "0x657408")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x657788", Offset = "0x657788", VA = "0x657788")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x6581B4", Offset = "0x6581B4", VA = "0x6581B4")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x658208", Offset = "0x658208", VA = "0x658208")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x65707C", Offset = "0x65707C", VA = "0x65707C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x657118", Offset = "0x657118", VA = "0x657118")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x658238", Offset = "0x658238", VA = "0x658238")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x657AFC", Offset = "0x657AFC", VA = "0x657AFC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x65847C", Offset = "0x65847C", VA = "0x65847C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x6582A0", Offset = "0x6582A0", VA = "0x6582A0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x658F4C", Offset = "0x658F4C", VA = "0x658F4C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x659350", Offset = "0x659350", VA = "0x659350")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x6596D8", Offset = "0x6596D8", VA = "0x6596D8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x659818", Offset = "0x659818", VA = "0x659818")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x6599D0", Offset = "0x6599D0", VA = "0x6599D0")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x657CB0", Offset = "0x657CB0", VA = "0x657CB0")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x659AA8", Offset = "0x659AA8", VA = "0x659AA8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x657B0C", Offset = "0x657B0C", VA = "0x657B0C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x659BCC", Offset = "0x659BCC", VA = "0x659BCC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x65A1D4", Offset = "0x65A1D4", VA = "0x65A1D4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x65A694", Offset = "0x65A694", VA = "0x65A694")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x65A70C", Offset = "0x65A70C", VA = "0x65A70C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x65A788", Offset = "0x65A788", VA = "0x65A788")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x658048", Offset = "0x658048", VA = "0x658048")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x659C94", Offset = "0x659C94", VA = "0x659C94")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x65AC30", Offset = "0x65AC30", VA = "0x65AC30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41A6D4", Offset = "0x41A6D4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x65ACD8", Offset = "0x65ACD8", VA = "0x65ACD8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x65AAD4", Offset = "0x65AAD4", VA = "0x65AAD4")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x65ADA0", Offset = "0x65ADA0", VA = "0x65ADA0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x65AE8C", Offset = "0x65AE8C", VA = "0x65AE8C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x65A858", Offset = "0x65A858", VA = "0x65A858")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x65AF78", Offset = "0x65AF78", VA = "0x65AF78")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x65B330", Offset = "0x65B330", VA = "0x65B330")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x65B3EC", Offset = "0x65B3EC", VA = "0x65B3EC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x65C6F4", Offset = "0x65C6F4", VA = "0x65C6F4")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x65C298", Offset = "0x65C298", VA = "0x65C298")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x65C030", Offset = "0x65C030", VA = "0x65C030")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x65C10C", Offset = "0x65C10C", VA = "0x65C10C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x65C958", Offset = "0x65C958", VA = "0x65C958")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000D8")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x65CF18", Offset = "0x65CF18", VA = "0x65CF18")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x65D190", Offset = "0x65D190", VA = "0x65D190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x65D5A4", Offset = "0x65D5A4", VA = "0x65D5A4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x65957C", Offset = "0x65957C", VA = "0x65957C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x65D6B8", Offset = "0x65D6B8", VA = "0x65D6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x65D7E0", Offset = "0x65D7E0", VA = "0x65D7E0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x65D844", Offset = "0x65D844", VA = "0x65D844")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x65D2B8", Offset = "0x65D2B8", VA = "0x65D2B8")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x65D84C", Offset = "0x65D84C", VA = "0x65D84C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x65D8AC", Offset = "0x65D8AC", VA = "0x65D8AC")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x65E090", Offset = "0x65E090", VA = "0x65E090")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x65D608", Offset = "0x65D608", VA = "0x65D608")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000028")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000211")]
	public enum PacketMode
	{
		[Token(Token = "0x4000845")]
		SDK,
		[Token(Token = "0x4000846")]
		Unity
	}

	[Token(Token = "0x2000212")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x65F7B4", Offset = "0x65F7B4", VA = "0x65F7B4")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000213")]
	public struct PoseFrame
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x658A28", Offset = "0x658A28", VA = "0x658A28")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x65F658", Offset = "0x65F658", VA = "0x65F658")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000110")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x65F668", Offset = "0x65F668", VA = "0x65F668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x6571B4", Offset = "0x6571B4", VA = "0x6571B4")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x65F708", Offset = "0x65F708", VA = "0x65F708")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x65F7A4", Offset = "0x65F7A4", VA = "0x65F7A4")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x65F910", Offset = "0x65F910", VA = "0x65F910")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x65FA78", Offset = "0x65FA78", VA = "0x65FA78")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x65FAE4", Offset = "0x65FAE4", VA = "0x65FAE4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x65FC50", Offset = "0x65FC50", VA = "0x65FC50")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x65FFF4", Offset = "0x65FFF4", VA = "0x65FFF4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x6602C0", Offset = "0x6602C0", VA = "0x6602C0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x6602EC", Offset = "0x6602EC", VA = "0x6602EC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	public enum TextureType
	{
		[Token(Token = "0x4000857")]
		DiffuseTextures,
		[Token(Token = "0x4000858")]
		NormalMaps,
		[Token(Token = "0x4000859")]
		RoughnessMaps,
		[Token(Token = "0x400085A")]
		Count
	}

	[Token(Token = "0x2000215")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000216")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000217")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000218")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x661BA4", Offset = "0x661BA4", VA = "0x661BA4")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41510C", Offset = "0x41510C")]
	private sealed class <RunLoadingAnimation>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x66255C", Offset = "0x66255C", VA = "0x66255C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x6625C4", Offset = "0x6625C4", VA = "0x6625C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x6619B8", Offset = "0x6619B8", VA = "0x6619B8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x661EE0", Offset = "0x661EE0", VA = "0x661EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x661EE4", Offset = "0x661EE4", VA = "0x661EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x662564", Offset = "0x662564", VA = "0x662564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400010C")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400010D")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400010E")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400010F")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x66039C", Offset = "0x66039C", VA = "0x66039C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x660550", Offset = "0x660550", VA = "0x660550")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x660590", Offset = "0x660590", VA = "0x660590")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x660CE0", Offset = "0x660CE0", VA = "0x660CE0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x660D4C", Offset = "0x660D4C", VA = "0x660D4C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x660624", Offset = "0x660624", VA = "0x660624")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x660DA0", Offset = "0x660DA0", VA = "0x660DA0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x660A40", Offset = "0x660A40", VA = "0x660A40")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x660E90", Offset = "0x660E90", VA = "0x660E90")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x661108", Offset = "0x661108", VA = "0x661108")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x661204", Offset = "0x661204", VA = "0x661204")]
	public void ValidateTextures()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x660C48", Offset = "0x660C48", VA = "0x660C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41A738", Offset = "0x41A738")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x6619E4", Offset = "0x6619E4", VA = "0x6619E4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000A")]
	public float Duration
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x658868", Offset = "0x658868", VA = "0x658868")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000B")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x6589A4", Offset = "0x6589A4", VA = "0x6589A4")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x658E64", Offset = "0x658E64", VA = "0x658E64")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x6586F8", Offset = "0x6586F8", VA = "0x6586F8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x6625CC", Offset = "0x6625CC", VA = "0x6625CC")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x6588D4", Offset = "0x6588D4", VA = "0x6588D4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x6626F4", Offset = "0x6626F4", VA = "0x6626F4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x6628FC", Offset = "0x6628FC", VA = "0x6628FC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x662B54", Offset = "0x662B54", VA = "0x662B54")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200002D")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000133")]
	[Address(RVA = "0x58C06C", Offset = "0x58C06C", VA = "0x58C06C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x58C180", Offset = "0x58C180", VA = "0x58C180")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x58C32C", Offset = "0x58C32C", VA = "0x58C32C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x58C1F0", Offset = "0x58C1F0", VA = "0x58C1F0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x58C284", Offset = "0x58C284", VA = "0x58C284")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002E")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000138")]
	[Address(RVA = "0x58BC6C", Offset = "0x58BC6C", VA = "0x58BC6C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x58C010", Offset = "0x58C010", VA = "0x58C010")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x58BE0C", Offset = "0x58BE0C", VA = "0x58BE0C")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x58BE84", Offset = "0x58BE84", VA = "0x58BE84")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x58BF20", Offset = "0x58BF20", VA = "0x58BF20")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000117")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000118")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x662D44", Offset = "0x662D44", VA = "0x662D44")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x662DD0", Offset = "0x662DD0", VA = "0x662DD0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x662DEC", Offset = "0x662DEC", VA = "0x662DEC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x662F98", Offset = "0x662F98", VA = "0x662F98")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x66317C", Offset = "0x66317C", VA = "0x66317C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x66320C", Offset = "0x66320C", VA = "0x66320C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x6632F0", Offset = "0x6632F0", VA = "0x6632F0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x6634EC", Offset = "0x6634EC", VA = "0x6634EC")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x663878", Offset = "0x663878", VA = "0x663878")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x663970", Offset = "0x663970", VA = "0x663970")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000031")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000121")]
	Body = 1,
	[Token(Token = "0x4000122")]
	Hands = 2,
	[Token(Token = "0x4000123")]
	Base = 4,
	[Token(Token = "0x4000124")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000125")]
	Expressive = 0x20,
	[Token(Token = "0x4000126")]
	All = -1
}
[Token(Token = "0x2000032")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000128")]
	AvatarSpecification,
	[Token(Token = "0x4000129")]
	AssetLoaded,
	[Token(Token = "0x400012A")]
	Count
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000035")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000130")]
	Mesh,
	[Token(Token = "0x4000131")]
	Texture,
	[Token(Token = "0x4000132")]
	Pose,
	[Token(Token = "0x4000133")]
	Material,
	[Token(Token = "0x4000134")]
	CombinedMesh,
	[Token(Token = "0x4000135")]
	PBSMaterial,
	[Token(Token = "0x4000136")]
	FailedLoad,
	[Token(Token = "0x4000137")]
	Count
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400016C")]
	RGB24,
	[Token(Token = "0x400016D")]
	DXT1,
	[Token(Token = "0x400016E")]
	DXT5,
	[Token(Token = "0x400016F")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000170")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000171")]
	Count
}
[Token(Token = "0x200003C")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200003D")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000179")]
	SkinnedMeshRender,
	[Token(Token = "0x400017A")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400017B")]
	ProjectorRender,
	[Token(Token = "0x400017C")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400017D")]
	Count
}
[Token(Token = "0x200003E")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400017F")]
	Unknown,
	[Token(Token = "0x4000180")]
	Default,
	[Token(Token = "0x4000181")]
	Verbose,
	[Token(Token = "0x4000182")]
	Debug,
	[Token(Token = "0x4000183")]
	Info,
	[Token(Token = "0x4000184")]
	Warn,
	[Token(Token = "0x4000185")]
	Error,
	[Token(Token = "0x4000186")]
	Fatal,
	[Token(Token = "0x4000187")]
	Silent
}
[Token(Token = "0x200003F")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000040")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400018C")]
	One = 1,
	[Token(Token = "0x400018D")]
	Two = 2,
	[Token(Token = "0x400018E")]
	Three = 4,
	[Token(Token = "0x400018F")]
	Joystick = 8
}
[Token(Token = "0x2000041")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000191")]
	One = 1,
	[Token(Token = "0x4000192")]
	Two = 2,
	[Token(Token = "0x4000193")]
	Joystick = 4,
	[Token(Token = "0x4000194")]
	ThumbRest = 8,
	[Token(Token = "0x4000195")]
	Index = 0x10,
	[Token(Token = "0x4000196")]
	Pointing = 0x40,
	[Token(Token = "0x4000197")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000042")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000044")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004A")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001B7")]
	Add,
	[Token(Token = "0x40001B8")]
	Multiply,
	[Token(Token = "0x40001B9")]
	Count
}
[Token(Token = "0x200004B")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001BB")]
	Color,
	[Token(Token = "0x40001BC")]
	Texture,
	[Token(Token = "0x40001BD")]
	TextureSingleChannel,
	[Token(Token = "0x40001BE")]
	Parallax,
	[Token(Token = "0x40001BF")]
	Count
}
[Token(Token = "0x200004C")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001C1")]
	None,
	[Token(Token = "0x40001C2")]
	Positional,
	[Token(Token = "0x40001C3")]
	ViewReflection,
	[Token(Token = "0x40001C4")]
	Fresnel,
	[Token(Token = "0x40001C5")]
	Pulse,
	[Token(Token = "0x40001C6")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001C8")]
	Touch,
	[Token(Token = "0x40001C9")]
	Malibu,
	[Token(Token = "0x40001CA")]
	Go,
	[Token(Token = "0x40001CB")]
	Quest,
	[Token(Token = "0x40001CC")]
	Count
}
[Token(Token = "0x200004E")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001CE")]
	Lowest = 1,
	[Token(Token = "0x40001CF")]
	Medium = 3,
	[Token(Token = "0x40001D0")]
	Highest = 5
}
[Token(Token = "0x200004F")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001D2")]
	Unknown = -1,
	[Token(Token = "0x40001D3")]
	One,
	[Token(Token = "0x40001D4")]
	Two
}
[Token(Token = "0x2000050")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC5F6D0", Offset = "0xC5F6D0", VA = "0xC5F6D0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x484E58", Offset = "0x484E58", VA = "0x484E58", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x484E60", Offset = "0x484E60", VA = "0x484E60", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC5FA04", Offset = "0xC5FA04", VA = "0xC5FA04")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x48509C", Offset = "0x48509C", VA = "0x48509C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x4850A4", Offset = "0x4850A4", VA = "0x4850A4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000052")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xC5ED00", Offset = "0xC5ED00", VA = "0xC5ED00")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x484BB8", Offset = "0x484BB8", VA = "0x484BB8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x484BC0", Offset = "0x484BC0", VA = "0x484BC0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000053")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xC5FF30", Offset = "0xC5FF30", VA = "0xC5FF30")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x485958", Offset = "0x485958", VA = "0x485958", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x485960", Offset = "0x485960", VA = "0x485960", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x65B338", Offset = "0x65B338", VA = "0x65B338")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000056")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000209")]
	FirstPerson = 1,
	[Token(Token = "0x400020A")]
	ThirdPerson = 2,
	[Token(Token = "0x400020B")]
	SelfOccluding = 4
}
[Token(Token = "0x2000057")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005B")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000221")]
	Default,
	[Token(Token = "0x4000222")]
	GripSphere,
	[Token(Token = "0x4000223")]
	GripCube,
	[Token(Token = "0x4000224")]
	Count
}
[Token(Token = "0x200005C")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000226")]
	Body,
	[Token(Token = "0x4000227")]
	Clothing,
	[Token(Token = "0x4000228")]
	Eyewear,
	[Token(Token = "0x4000229")]
	Hair,
	[Token(Token = "0x400022A")]
	Beard,
	[Token(Token = "0x400022B")]
	Count
}
[Token(Token = "0x200005D")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005E")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000060")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000061")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000235")]
	AvatarHead,
	[Token(Token = "0x4000236")]
	AvatarHand,
	[Token(Token = "0x4000237")]
	Object,
	[Token(Token = "0x4000238")]
	ObjectStatic,
	[Token(Token = "0x4000239")]
	Count
}
[Token(Token = "0x2000062")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000063")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long worldPosition;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long type;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000065")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000066")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000245")]
	Point,
	[Token(Token = "0x4000246")]
	Direction,
	[Token(Token = "0x4000247")]
	Spot,
	[Token(Token = "0x4000248")]
	Count
}
[Token(Token = "0x2000067")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000068")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200006A")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006B")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400025E")]
	None = 0u,
	[Token(Token = "0x400025F")]
	GazeTarget = 1u,
	[Token(Token = "0x4000260")]
	Any = uint.MaxValue
}
[Token(Token = "0x200006C")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200006E")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200006F")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000070")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000071")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200021A")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x469A44", Offset = "0x469A44", VA = "0x469A44")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000275")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ovrAvatarDebugContext debugContext;

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x5E199C", Offset = "0x5E199C", VA = "0x5E199C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x5E1B50", Offset = "0x5E1B50", VA = "0x5E1B50")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x5E1DD8", Offset = "0x5E1DD8", VA = "0x5E1DD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x5E1E4C", Offset = "0x5E1E4C", VA = "0x5E1E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x5E2CB0", Offset = "0x5E2CB0", VA = "0x5E2CB0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x5E2D08", Offset = "0x5E2D08", VA = "0x5E2D08")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x5E2D60", Offset = "0x5E2D60", VA = "0x5E2D60")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x5E2DC8", Offset = "0x5E2DC8", VA = "0x5E2DC8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x5E2E30", Offset = "0x5E2E30", VA = "0x5E2E30")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x5E24D0", Offset = "0x5E24D0", VA = "0x5E24D0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x5E2F10", Offset = "0x5E2F10", VA = "0x5E2F10")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x5E302C", Offset = "0x5E302C", VA = "0x5E302C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x5E310C", Offset = "0x5E310C", VA = "0x5E310C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x5E318C", Offset = "0x5E318C", VA = "0x5E318C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x5E1D8C", Offset = "0x5E1D8C", VA = "0x5E1D8C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x5E3264", Offset = "0x5E3264", VA = "0x5E3264")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x5E32E8", Offset = "0x5E32E8", VA = "0x5E32E8")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000D")]
	public static string AppID
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x5E3224", Offset = "0x5E3224", VA = "0x5E3224")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x5E34A8", Offset = "0x5E34A8", VA = "0x5E34A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static string MobileAppID
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x5E3244", Offset = "0x5E3244", VA = "0x5E3244")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x5E34D8", Offset = "0x5E34D8", VA = "0x5E34D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x5E337C", Offset = "0x5E337C", VA = "0x5E337C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x5E3508", Offset = "0x5E3508", VA = "0x5E3508")]
		set
		{
		}
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x5E3560", Offset = "0x5E3560", VA = "0x5E3560")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x5E4F84", Offset = "0x5E4F84", VA = "0x5E4F84")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x5E5268", Offset = "0x5E5268", VA = "0x5E5268")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x5E5100", Offset = "0x5E5100", VA = "0x5E5100")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x5E5498", Offset = "0x5E5498", VA = "0x5E5498")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000074")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x5E54A0", Offset = "0x5E54A0", VA = "0x5E54A0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x5E55F4", Offset = "0x5E55F4", VA = "0x5E55F4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x5E5798", Offset = "0x5E5798", VA = "0x5E5798")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000075")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000285")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000286")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000287")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x5E35D0", Offset = "0x5E35D0", VA = "0x5E35D0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x5E450C", Offset = "0x5E450C", VA = "0x5E450C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x5E472C", Offset = "0x5E472C", VA = "0x5E472C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x5E3C30", Offset = "0x5E3C30", VA = "0x5E3C30")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x5E3A00", Offset = "0x5E3A00", VA = "0x5E3A00")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x5E3B14", Offset = "0x5E3B14", VA = "0x5E3B14")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x5E4F7C", Offset = "0x5E4F7C", VA = "0x5E4F7C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021B")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200021C")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x469B00", Offset = "0x469B00", VA = "0x469B00")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200021D")]
	public struct TextureSet
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x469BD4", Offset = "0x469BD4", VA = "0x469BD4")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41511C", Offset = "0x41511C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x5E72AC", Offset = "0x5E72AC", VA = "0x5E72AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x5E7314", Offset = "0x5E7314", VA = "0x5E7314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x5E6BEC", Offset = "0x5E6BEC", VA = "0x5E6BEC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x5E6D94", Offset = "0x5E6D94", VA = "0x5E6D94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x5E6D98", Offset = "0x5E6D98", VA = "0x5E6D98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x5E72B4", Offset = "0x5E72B4", VA = "0x5E72B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400028B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400028C")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400028F")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000290")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000291")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000292")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000293")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000294")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000295")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x5E5FF4", Offset = "0x5E5FF4", VA = "0x5E5FF4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x5E6448", Offset = "0x5E6448", VA = "0x5E6448")]
	public void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x5E6650", Offset = "0x5E6650", VA = "0x5E6650")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x5E66A0", Offset = "0x5E66A0", VA = "0x5E66A0")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x5E65C0", Offset = "0x5E65C0", VA = "0x5E65C0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x5E68AC", Offset = "0x5E68AC", VA = "0x5E68AC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x5E6A94", Offset = "0x5E6A94", VA = "0x5E6A94")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x5E6B3C", Offset = "0x5E6B3C", VA = "0x5E6B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41A83C", Offset = "0x41A83C")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x5E2EC4", Offset = "0x5E2EC4", VA = "0x5E2EC4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x5E6C18", Offset = "0x5E6C18", VA = "0x5E6C18")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x5E731C", Offset = "0x5E731C", VA = "0x5E731C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x5E7488", Offset = "0x5E7488", VA = "0x5E7488")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000078")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600019A")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x59203C", Offset = "0x59203C", VA = "0x59203C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000079")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415648", Offset = "0x415648")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415680", Offset = "0x415680")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4156B8", Offset = "0x4156B8")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x59477C", Offset = "0x59477C", VA = "0x59477C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x594780", Offset = "0x594780", VA = "0x594780")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x594800", Offset = "0x594800", VA = "0x594800")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x5949EC", Offset = "0x5949EC", VA = "0x5949EC")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200007A")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x594A1C", Offset = "0x594A1C", VA = "0x594A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x594B20", Offset = "0x594B20", VA = "0x594B20")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x594BF4", Offset = "0x594BF4", VA = "0x594BF4")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x594E80", Offset = "0x594E80", VA = "0x594E80")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x594ED0", Offset = "0x594ED0", VA = "0x594ED0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200007B")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000010")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x7A5B08", Offset = "0x7A5B08", VA = "0x7A5B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x7A5DC8", Offset = "0x7A5DC8", VA = "0x7A5DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x7A5F0C", Offset = "0x7A5F0C", VA = "0x7A5F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x7A5E40", Offset = "0x7A5E40", VA = "0x7A5E40")]
	public void Init()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x7A3CB0", Offset = "0x7A3CB0", VA = "0x7A3CB0")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x7A6094", Offset = "0x7A6094", VA = "0x7A6094")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x7A3C48", Offset = "0x7A3C48", VA = "0x7A3C48")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x7A3D30", Offset = "0x7A3D30", VA = "0x7A3D30")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x7A5FA4", Offset = "0x7A5FA4", VA = "0x7A5FA4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x7A6134", Offset = "0x7A6134", VA = "0x7A6134")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x7A6170", Offset = "0x7A6170", VA = "0x7A6170")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x7A6364", Offset = "0x7A6364", VA = "0x7A6364")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x7A6180", Offset = "0x7A6180", VA = "0x7A6180")]
	private void Display()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x7A6414", Offset = "0x7A6414", VA = "0x7A6414")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200007C")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x7A8BC8", Offset = "0x7A8BC8", VA = "0x7A8BC8")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200007D")]
public static class OVRTouchpad
{
	[Token(Token = "0x200021F")]
	public enum TouchEvent
	{
		[Token(Token = "0x400088D")]
		SingleTap,
		[Token(Token = "0x400088E")]
		DoubleTap,
		[Token(Token = "0x400088F")]
		Left,
		[Token(Token = "0x4000890")]
		Right,
		[Token(Token = "0x4000891")]
		Up,
		[Token(Token = "0x4000892")]
		Down
	}

	[Token(Token = "0x2000220")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x7A28A0", Offset = "0x7A28A0", VA = "0x7A28A0")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x7AC388", Offset = "0x7AC388", VA = "0x7AC388")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x7AC6A8", Offset = "0x7AC6A8", VA = "0x7AC6A8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x7AC4F8", Offset = "0x7AC4F8", VA = "0x7AC4F8")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x7A3790", Offset = "0x7A3790", VA = "0x7A3790")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200007E")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x7AC768", Offset = "0x7AC768", VA = "0x7AC768")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x7AC7E4", Offset = "0x7AC7E4", VA = "0x7AC7E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x7AC87C", Offset = "0x7AC87C", VA = "0x7AC87C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x7AC8D8", Offset = "0x7AC8D8", VA = "0x7AC8D8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7AC93C", Offset = "0x7AC93C", VA = "0x7AC93C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x7AC940", Offset = "0x7AC940", VA = "0x7AC940")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000221")]
	public enum Result
	{
		[Token(Token = "0x4000894")]
		Success = 0,
		[Token(Token = "0x4000895")]
		Unknown = -2200,
		[Token(Token = "0x4000896")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000897")]
		InvalidParam = -2202,
		[Token(Token = "0x4000898")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000899")]
		MissingDLL = -2204,
		[Token(Token = "0x400089A")]
		BadVersion = -2205,
		[Token(Token = "0x400089B")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000222")]
	public enum AudioDataType
	{
		[Token(Token = "0x400089D")]
		S16_Mono,
		[Token(Token = "0x400089E")]
		S16_Stereo,
		[Token(Token = "0x400089F")]
		F32_Mono,
		[Token(Token = "0x40008A0")]
		F32_Stereo
	}

	[Token(Token = "0x2000223")]
	public enum Viseme
	{
		[Token(Token = "0x40008A2")]
		sil,
		[Token(Token = "0x40008A3")]
		PP,
		[Token(Token = "0x40008A4")]
		FF,
		[Token(Token = "0x40008A5")]
		TH,
		[Token(Token = "0x40008A6")]
		DD,
		[Token(Token = "0x40008A7")]
		kk,
		[Token(Token = "0x40008A8")]
		CH,
		[Token(Token = "0x40008A9")]
		SS,
		[Token(Token = "0x40008AA")]
		nn,
		[Token(Token = "0x40008AB")]
		RR,
		[Token(Token = "0x40008AC")]
		aa,
		[Token(Token = "0x40008AD")]
		E,
		[Token(Token = "0x40008AE")]
		ih,
		[Token(Token = "0x40008AF")]
		oh,
		[Token(Token = "0x40008B0")]
		ou
	}

	[Token(Token = "0x2000224")]
	public enum Signals
	{
		[Token(Token = "0x40008B2")]
		VisemeOn,
		[Token(Token = "0x40008B3")]
		VisemeOff,
		[Token(Token = "0x40008B4")]
		VisemeAmount,
		[Token(Token = "0x40008B5")]
		VisemeSmoothing,
		[Token(Token = "0x40008B6")]
		LaughterAmount
	}

	[Token(Token = "0x2000225")]
	public enum ContextProviders
	{
		[Token(Token = "0x40008B8")]
		Original,
		[Token(Token = "0x40008B9")]
		Enhanced,
		[Token(Token = "0x40008BA")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000226")]
	public class Frame
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x7A34EC", Offset = "0x7A34EC", VA = "0x7A34EC")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x7A3544", Offset = "0x7A3544", VA = "0x7A3544")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x7A35D4", Offset = "0x7A35D4", VA = "0x7A35D4")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002AF")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x7A1E64", Offset = "0x7A1E64", VA = "0x7A1E64")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x7A1EF4", Offset = "0x7A1EF4", VA = "0x7A1EF4")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x7A1F64", Offset = "0x7A1F64", VA = "0x7A1F64")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x7A1FF8", Offset = "0x7A1FF8", VA = "0x7A1FF8")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x7A20A0", Offset = "0x7A20A0", VA = "0x7A20A0")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x7A216C", Offset = "0x7A216C", VA = "0x7A216C")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x7A21EC", Offset = "0x7A21EC", VA = "0x7A21EC")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x7A226C", Offset = "0x7A226C", VA = "0x7A226C")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x7A2314", Offset = "0x7A2314", VA = "0x7A2314")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x7A241C", Offset = "0x7A241C", VA = "0x7A241C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x7A28A4", Offset = "0x7A28A4", VA = "0x7A28A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x7A2768", Offset = "0x7A2768", VA = "0x7A2768")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x7A2984", Offset = "0x7A2984", VA = "0x7A2984")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x7A2A98", Offset = "0x7A2A98", VA = "0x7A2A98")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x7A2B08", Offset = "0x7A2B08", VA = "0x7A2B08")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x7A2B70", Offset = "0x7A2B70", VA = "0x7A2B70")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x7A2C94", Offset = "0x7A2C94", VA = "0x7A2C94")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x7A2DCC", Offset = "0x7A2DCC", VA = "0x7A2DCC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x7A2EAC", Offset = "0x7A2EAC", VA = "0x7A2EAC")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x7A2F8C", Offset = "0x7A2F8C", VA = "0x7A2F8C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x7A3090", Offset = "0x7A3090", VA = "0x7A3090")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x7A3234", Offset = "0x7A3234", VA = "0x7A3234")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x7A33D0", Offset = "0x7A33D0", VA = "0x7A33D0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413C2C", Offset = "0x413C2C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4156F0", Offset = "0x4156F0")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415728", Offset = "0x415728")]
	public bool enableTouchInput;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415760", Offset = "0x415760")]
	public bool audioLoopback;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415798", Offset = "0x415798")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4157D0", Offset = "0x4157D0")]
	public bool showVisemes;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415808", Offset = "0x415808")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415840", Offset = "0x415840")]
	public bool skipAudioSource;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415878", Offset = "0x415878")]
	public float gain;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x7A3668", Offset = "0x7A3668", VA = "0x7A3668")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x7A3864", Offset = "0x7A3864", VA = "0x7A3864")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x7A3DB0", Offset = "0x7A3DB0", VA = "0x7A3DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x7A405C", Offset = "0x7A405C", VA = "0x7A405C")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x7A40C0", Offset = "0x7A40C0", VA = "0x7A40C0")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x7A412C", Offset = "0x7A412C", VA = "0x7A412C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x7A42D0", Offset = "0x7A42D0", VA = "0x7A42D0")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x7A4474", Offset = "0x7A4474", VA = "0x7A4474")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x7A45A8", Offset = "0x7A45A8", VA = "0x7A45A8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x7A3DF4", Offset = "0x7A3DF4", VA = "0x7A3DF4")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x7A3B74", Offset = "0x7A3B74", VA = "0x7A3B74")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x7A45B8", Offset = "0x7A45B8", VA = "0x7A45B8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x7A46E4", Offset = "0x7A46E4", VA = "0x7A46E4")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413C90", Offset = "0x413C90")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4158B0", Offset = "0x4158B0")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4158E8", Offset = "0x4158E8")]
	public bool enableAcceleration;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000011")]
	public int Smoothing
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x7A4870", Offset = "0x7A4870", VA = "0x7A4870")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x7A4784", Offset = "0x7A4784", VA = "0x7A4784")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public uint Context
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x7A4878", Offset = "0x7A4878", VA = "0x7A4878")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000013")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x7A4880", Offset = "0x7A4880", VA = "0x7A4880")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x7A4888", Offset = "0x7A4888", VA = "0x7A4888")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x7A4A30", Offset = "0x7A4A30", VA = "0x7A4A30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x7A4B54", Offset = "0x7A4B54", VA = "0x7A4B54")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x7A4B5C", Offset = "0x7A4B5C", VA = "0x7A4B5C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x7A4C50", Offset = "0x7A4C50", VA = "0x7A4C50")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x7A4D18", Offset = "0x7A4D18", VA = "0x7A4D18")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x7A4708", Offset = "0x7A4708", VA = "0x7A4708")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413CF4", Offset = "0x413CF4")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415920", Offset = "0x415920")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x7A4D90", Offset = "0x7A4D90", VA = "0x7A4D90")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x7A4F00", Offset = "0x7A4F00", VA = "0x7A4F00")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000083")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415958", Offset = "0x415958")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415990", Offset = "0x415990")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4159C8", Offset = "0x4159C8")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415A00", Offset = "0x415A00")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415A38", Offset = "0x415A38")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415A70", Offset = "0x415A70")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x415AA8", Offset = "0x415AA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415AA8", Offset = "0x415AA8")]
	public float laughterThreshold;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x415AFC", Offset = "0x415AFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415AFC", Offset = "0x415AFC")]
	public float laughterMultiplier;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x415B50", Offset = "0x415B50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415B50", Offset = "0x415B50")]
	public int smoothAmount;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x7A4F04", Offset = "0x7A4F04", VA = "0x7A4F04")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x7A5058", Offset = "0x7A5058", VA = "0x7A5058")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x7A5308", Offset = "0x7A5308", VA = "0x7A5308")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x7A5164", Offset = "0x7A5164", VA = "0x7A5164")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x7A5218", Offset = "0x7A5218", VA = "0x7A5218")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x7A53D8", Offset = "0x7A53D8", VA = "0x7A53D8")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x7A549C", Offset = "0x7A549C", VA = "0x7A549C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x7A5504", Offset = "0x7A5504", VA = "0x7A5504")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000084")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415BA8", Offset = "0x415BA8")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x415BA8", Offset = "0x415BA8")]
	public Texture[] Textures;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x415DD8", Offset = "0x415DD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415DD8", Offset = "0x415DD8")]
	public int smoothAmount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x7A5614", Offset = "0x7A5614", VA = "0x7A5614")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x7A5778", Offset = "0x7A5778", VA = "0x7A5778")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x7A5920", Offset = "0x7A5920", VA = "0x7A5920")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x7A5A44", Offset = "0x7A5A44", VA = "0x7A5A44")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413D58", Offset = "0x413D58")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	public enum micActivation
	{
		[Token(Token = "0x40008C0")]
		HoldToSpeak,
		[Token(Token = "0x40008C1")]
		PushToSpeak,
		[Token(Token = "0x40008C2")]
		ConstantSpeak
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415E30", Offset = "0x415E30")]
	public AudioSource audioSource;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415E68", Offset = "0x415E68")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415EA0", Offset = "0x415EA0")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x415ED8", Offset = "0x415ED8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415ED8", Offset = "0x415ED8")]
	private float micInputVolume;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415F40", Offset = "0x415F40")]
	private int micFrequency;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415F8C", Offset = "0x415F8C")]
	public micActivation micControl;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415FC4", Offset = "0x415FC4")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x415FFC", Offset = "0x415FFC")]
	public string selectedDevice;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000014")]
	public float MicFrequency
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x7A6494", Offset = "0x7A6494", VA = "0x7A6494")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x7A64A0", Offset = "0x7A64A0", VA = "0x7A64A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x7A652C", Offset = "0x7A652C", VA = "0x7A652C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x7A65F4", Offset = "0x7A65F4", VA = "0x7A65F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x7A6640", Offset = "0x7A6640", VA = "0x7A6640")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x7A6790", Offset = "0x7A6790", VA = "0x7A6790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x7A6BC8", Offset = "0x7A6BC8", VA = "0x7A6BC8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x7A6BDC", Offset = "0x7A6BDC", VA = "0x7A6BDC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x7A6BF4", Offset = "0x7A6BF4", VA = "0x7A6BF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x7A6BF8", Offset = "0x7A6BF8", VA = "0x7A6BF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x7A6C70", Offset = "0x7A6C70", VA = "0x7A6C70")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x7A66D4", Offset = "0x7A66D4", VA = "0x7A66D4")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x7A6A34", Offset = "0x7A6A34", VA = "0x7A6A34")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x7A68EC", Offset = "0x7A68EC", VA = "0x7A68EC")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x7A6E68", Offset = "0x7A6E68", VA = "0x7A6E68")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x7A6E70", Offset = "0x7A6E70", VA = "0x7A6E70")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000086")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x7A4E5C", Offset = "0x7A4E5C", VA = "0x7A4E5C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x7A6EA0", Offset = "0x7A6EA0", VA = "0x7A6EA0")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000087")]
public class BufferedAudioStream
{
	[Token(Token = "0x40002E3")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40002E7")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40002E8")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40002E9")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40002EA")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x58D0DC", Offset = "0x58D0DC", VA = "0x58D0DC")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x58D208", Offset = "0x58D208", VA = "0x58D208")]
	public void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x58D1B8", Offset = "0x58D1B8", VA = "0x58D1B8")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x58D3E0", Offset = "0x58D3E0", VA = "0x58D3E0")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000088")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000228")]
	public delegate void OnClick();

	[Token(Token = "0x2000229")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200022A")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200022B")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41512C", Offset = "0x41512C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x58FE9C", Offset = "0x58FE9C", VA = "0x58FE9C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x5908B0", Offset = "0x5908B0", VA = "0x5908B0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41513C", Offset = "0x41513C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x59011C", Offset = "0x59011C", VA = "0x59011C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x590AD4", Offset = "0x590AD4", VA = "0x590AD4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41514C", Offset = "0x41514C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x590354", Offset = "0x590354", VA = "0x590354")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x590D58", Offset = "0x590D58", VA = "0x590D58")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41515C", Offset = "0x41515C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x590508", Offset = "0x590508", VA = "0x590508")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x591130", Offset = "0x591130", VA = "0x591130")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41516C", Offset = "0x41516C")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x59077C", Offset = "0x59077C", VA = "0x59077C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x591150", Offset = "0x591150", VA = "0x591150")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002ED")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002EE")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002EF")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool manuallyResizeContentPanels;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002FD")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002FE")]
	private const float marginH = 16f;

	[Token(Token = "0x40002FF")]
	private const float marginV = 16f;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x58ED28", Offset = "0x58ED28", VA = "0x58ED28")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x58F1E8", Offset = "0x58F1E8", VA = "0x58F1E8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x58F7C8", Offset = "0x58F7C8", VA = "0x58F7C8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x58F574", Offset = "0x58F574", VA = "0x58F574")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x58F970", Offset = "0x58F970", VA = "0x58F970")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x58FC68", Offset = "0x58FC68", VA = "0x58FC68")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x58FEA4", Offset = "0x58FEA4", VA = "0x58FEA4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x58FF88", Offset = "0x58FF88", VA = "0x58FF88")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x590124", Offset = "0x590124", VA = "0x590124")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x5901C0", Offset = "0x5901C0", VA = "0x5901C0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x59035C", Offset = "0x59035C", VA = "0x59035C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x590510", Offset = "0x590510", VA = "0x590510")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x590784", Offset = "0x590784", VA = "0x590784")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x590834", Offset = "0x590834", VA = "0x590834")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000089")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x592DAC", Offset = "0x592DAC", VA = "0x592DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x592E48", Offset = "0x592E48", VA = "0x592E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x592F10", Offset = "0x592F10", VA = "0x592F10")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x592F4C", Offset = "0x592F4C", VA = "0x592F4C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008A")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000231")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40008CC")]
		On,
		[Token(Token = "0x40008CD")]
		Off,
		[Token(Token = "0x40008CE")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000015")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x592FD8", Offset = "0x592FD8", VA = "0x592FD8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x58F1A4", Offset = "0x58F1A4", VA = "0x58F1A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x592FE0", Offset = "0x592FE0", VA = "0x592FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x593040", Offset = "0x593040", VA = "0x593040")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x5930D4", Offset = "0x5930D4", VA = "0x5930D4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x5930F0", Offset = "0x5930F0", VA = "0x5930F0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x593144", Offset = "0x593144", VA = "0x593144")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x5933A0", Offset = "0x5933A0", VA = "0x5933A0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x5934B4", Offset = "0x5934B4", VA = "0x5934B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x593548", Offset = "0x593548", VA = "0x593548")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008B")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x58C380", Offset = "0x58C380", VA = "0x58C380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x58C62C", Offset = "0x58C62C", VA = "0x58C62C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x58CACC", Offset = "0x58CACC", VA = "0x58CACC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200008C")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x592730", Offset = "0x592730", VA = "0x592730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x5927C0", Offset = "0x5927C0", VA = "0x5927C0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x592A10", Offset = "0x592A10", VA = "0x592A10")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200008D")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000016")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x592ABC", Offset = "0x592ABC", VA = "0x592ABC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x58C588", Offset = "0x58C588", VA = "0x58C588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8A0", Offset = "0x41A8A0")]
		add
		{
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x592A18", Offset = "0x592A18", VA = "0x592A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8B0", Offset = "0x41A8B0")]
		remove
		{
		}
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x592AC8", Offset = "0x592AC8", VA = "0x592AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x592C20", Offset = "0x592C20", VA = "0x592C20")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x592D94", Offset = "0x592D94", VA = "0x592D94")]
	private void Recentered()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x592D9C", Offset = "0x592D9C", VA = "0x592D9C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413DBC", Offset = "0x413DBC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413DBC", Offset = "0x413DBC")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416104", Offset = "0x416104")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41613C", Offset = "0x41613C")]
	public float CurrentDistance;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416174", Offset = "0x416174")]
	public bool EnableFadeout;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4161AC", Offset = "0x4161AC")]
	public bool EnableCollision;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4161E4", Offset = "0x4161E4")]
	public bool DynamicHeight;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41621C", Offset = "0x41621C")]
	public float MaxFade;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416254", Offset = "0x416254")]
	public float FadeMinDistance;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41628C", Offset = "0x41628C")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPlayerController _playerController;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x58D890", Offset = "0x58D890", VA = "0x58D890")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x58D968", Offset = "0x58D968", VA = "0x58D968")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x58D9EC", Offset = "0x58D9EC", VA = "0x58D9EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x58DA30", Offset = "0x58DA30", VA = "0x58DA30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x58DA74", Offset = "0x58DA74", VA = "0x58DA74")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x58DDAC", Offset = "0x58DDAC", VA = "0x58DDAC")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x200008F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController CharacterController;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRPlayerController PlayerController;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x594EE0", Offset = "0x594EE0", VA = "0x594EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x595054", Offset = "0x595054", VA = "0x595054")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000090")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000232")]
	public enum States
	{
		[Token(Token = "0x40008D0")]
		Ready,
		[Token(Token = "0x40008D1")]
		Aim,
		[Token(Token = "0x40008D2")]
		CancelAim,
		[Token(Token = "0x40008D3")]
		PreTeleport,
		[Token(Token = "0x40008D4")]
		CancelTeleport,
		[Token(Token = "0x40008D5")]
		Teleporting,
		[Token(Token = "0x40008D6")]
		PostTeleport
	}

	[Token(Token = "0x2000233")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40008D8")]
		None,
		[Token(Token = "0x40008D9")]
		Aim,
		[Token(Token = "0x40008DA")]
		PreTeleport,
		[Token(Token = "0x40008DB")]
		Teleport
	}

	[Token(Token = "0x2000234")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40008DD")]
		Point,
		[Token(Token = "0x40008DE")]
		Sphere,
		[Token(Token = "0x40008DF")]
		Capsule
	}

	[Token(Token = "0x2000235")]
	public class AimData
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A5FC", Offset = "0x41A5FC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000AC")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x598420", Offset = "0x598420", VA = "0x598420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B9D4", Offset = "0x41B9D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x598428", Offset = "0x598428", VA = "0x598428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B9E4", Offset = "0x41B9E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x5983A4", Offset = "0x5983A4", VA = "0x5983A4")]
		public AimData()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x598430", Offset = "0x598430", VA = "0x598430")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41517C", Offset = "0x41517C")]
	private sealed class <ReadyStateCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x5981E4", Offset = "0x5981E4", VA = "0x5981E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x59824C", Offset = "0x59824C", VA = "0x59824C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x59664C", Offset = "0x59664C", VA = "0x59664C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x5980DC", Offset = "0x5980DC", VA = "0x5980DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x5980E0", Offset = "0x5980E0", VA = "0x5980E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x5981EC", Offset = "0x5981EC", VA = "0x5981EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41518C", Offset = "0x41518C")]
	private sealed class <AimStateCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x597B68", Offset = "0x597B68", VA = "0x597B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x597BD0", Offset = "0x597BD0", VA = "0x597BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x596B40", Offset = "0x596B40", VA = "0x596B40")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x597A18", Offset = "0x597A18", VA = "0x597A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x597A1C", Offset = "0x597A1C", VA = "0x597A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x597B70", Offset = "0x597B70", VA = "0x597B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41519C", Offset = "0x41519C")]
	private sealed class <CancelAimStateCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x597C88", Offset = "0x597C88", VA = "0x597C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x597CF0", Offset = "0x597CF0", VA = "0x597CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x596D30", Offset = "0x596D30", VA = "0x596D30")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x597BD8", Offset = "0x597BD8", VA = "0x597BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x597BDC", Offset = "0x597BDC", VA = "0x597BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x597C90", Offset = "0x597C90", VA = "0x597C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151AC", Offset = "0x4151AC")]
	private sealed class <PreTeleportStateCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x59806C", Offset = "0x59806C", VA = "0x59806C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x5980D4", Offset = "0x5980D4", VA = "0x5980D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x596F20", Offset = "0x596F20", VA = "0x596F20")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x597F88", Offset = "0x597F88", VA = "0x597F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x597F8C", Offset = "0x597F8C", VA = "0x597F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x598074", Offset = "0x598074", VA = "0x598074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151BC", Offset = "0x4151BC")]
	private sealed class <CancelTeleportStateCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x597DA8", Offset = "0x597DA8", VA = "0x597DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x597E10", Offset = "0x597E10", VA = "0x597E10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x597110", Offset = "0x597110", VA = "0x597110")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x597CF8", Offset = "0x597CF8", VA = "0x597CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x597CFC", Offset = "0x597CFC", VA = "0x597CFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x597DB0", Offset = "0x597DB0", VA = "0x597DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151CC", Offset = "0x4151CC")]
	private sealed class <TeleportingStateCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x598334", Offset = "0x598334", VA = "0x598334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x59839C", Offset = "0x59839C", VA = "0x59839C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x597300", Offset = "0x597300", VA = "0x597300")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x598254", Offset = "0x598254", VA = "0x598254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x598258", Offset = "0x598258", VA = "0x598258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x59833C", Offset = "0x59833C", VA = "0x59833C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151DC", Offset = "0x4151DC")]
	private sealed class <PostTeleportStateCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x597F18", Offset = "0x597F18", VA = "0x597F18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x597F80", Offset = "0x597F80", VA = "0x597F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x5974F0", Offset = "0x5974F0", VA = "0x5974F0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x597E18", Offset = "0x597E18", VA = "0x597E18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x597E1C", Offset = "0x597E1C", VA = "0x597E1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x597F20", Offset = "0x597F20", VA = "0x597F20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4162C4", Offset = "0x4162C4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4162FC", Offset = "0x4162FC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416334", Offset = "0x416334")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41636C", Offset = "0x41636C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4163A4", Offset = "0x4163A4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4163DC", Offset = "0x4163DC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416414", Offset = "0x416414")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41644C", Offset = "0x41644C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x416484", Offset = "0x416484")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416494", Offset = "0x416494")]
	public TeleportDestination TeleportDestinationPrefab;

	[NonSerialized]
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4164DC", Offset = "0x4164DC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4164EC", Offset = "0x4164EC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416524", Offset = "0x416524")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41655C", Offset = "0x41655C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416594", Offset = "0x416594")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000017")]
	public States CurrentState
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x595B48", Offset = "0x595B48", VA = "0x595B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8C0", Offset = "0x41A8C0")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x595B50", Offset = "0x595B50", VA = "0x595B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8D0", Offset = "0x41A8D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x595D80", Offset = "0x595D80", VA = "0x595D80")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000019")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x595DA8", Offset = "0x595DA8", VA = "0x595DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A900", Offset = "0x41A900")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x595DB0", Offset = "0x595DB0", VA = "0x595DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A910", Offset = "0x41A910")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x595B58", Offset = "0x595B58", VA = "0x595B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8E0", Offset = "0x41A8E0")]
		add
		{
		}
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x595BFC", Offset = "0x595BFC", VA = "0x595BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A8F0", Offset = "0x41A8F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x596504", Offset = "0x596504", VA = "0x596504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A958", Offset = "0x41A958")]
		add
		{
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x5965A8", Offset = "0x5965A8", VA = "0x5965A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A968", Offset = "0x41A968")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x596678", Offset = "0x596678", VA = "0x596678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A9DC", Offset = "0x41A9DC")]
		add
		{
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x59671C", Offset = "0x59671C", VA = "0x59671C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A9EC", Offset = "0x41A9EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x5967C0", Offset = "0x5967C0", VA = "0x5967C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41A9FC", Offset = "0x41A9FC")]
		add
		{
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x596864", Offset = "0x596864", VA = "0x596864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AA0C", Offset = "0x41AA0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x59697C", Offset = "0x59697C", VA = "0x59697C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AA1C", Offset = "0x41AA1C")]
		add
		{
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x596A20", Offset = "0x596A20", VA = "0x596A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AA2C", Offset = "0x41AA2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x596B6C", Offset = "0x596B6C", VA = "0x596B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AAA0", Offset = "0x41AAA0")]
		add
		{
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x596C10", Offset = "0x596C10", VA = "0x596C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AAB0", Offset = "0x41AAB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x596D5C", Offset = "0x596D5C", VA = "0x596D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AB24", Offset = "0x41AB24")]
		add
		{
		}
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x596E00", Offset = "0x596E00", VA = "0x596E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AB34", Offset = "0x41AB34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x596F4C", Offset = "0x596F4C", VA = "0x596F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41ABA8", Offset = "0x41ABA8")]
		add
		{
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x596FF0", Offset = "0x596FF0", VA = "0x596FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41ABB8", Offset = "0x41ABB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x59713C", Offset = "0x59713C", VA = "0x59713C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AC2C", Offset = "0x41AC2C")]
		add
		{
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x5971E0", Offset = "0x5971E0", VA = "0x5971E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AC3C", Offset = "0x41AC3C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x59732C", Offset = "0x59732C", VA = "0x59732C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41ACB0", Offset = "0x41ACB0")]
		add
		{
		}
		[Token(Token = "0x6000270")]
		[Address(RVA = "0x5973D0", Offset = "0x5973D0", VA = "0x5973D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41ACC0", Offset = "0x41ACC0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x59751C", Offset = "0x59751C", VA = "0x59751C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD34", Offset = "0x41AD34")]
		add
		{
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x5975C0", Offset = "0x5975C0", VA = "0x5975C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD44", Offset = "0x41AD44")]
		remove
		{
		}
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x595788", Offset = "0x595788", VA = "0x595788")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x5957AC", Offset = "0x5957AC", VA = "0x5957AC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x595CA0", Offset = "0x595CA0", VA = "0x595CA0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x595DB8", Offset = "0x595DB8", VA = "0x595DB8")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x596134", Offset = "0x596134", VA = "0x596134")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41A920", Offset = "0x41A920")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x5961EC", Offset = "0x5961EC", VA = "0x5961EC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x5962C8", Offset = "0x5962C8", VA = "0x5962C8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x5962E4", Offset = "0x5962E4", VA = "0x5962E4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x5963AC", Offset = "0x5963AC", VA = "0x5963AC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x5963F0", Offset = "0x5963F0", VA = "0x5963F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x596458", Offset = "0x596458", VA = "0x596458", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x596488", Offset = "0x596488", VA = "0x596488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41A978", Offset = "0x41A978")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x596908", Offset = "0x596908", VA = "0x596908")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x596AC4", Offset = "0x596AC4", VA = "0x596AC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AA3C", Offset = "0x41AA3C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x596CB4", Offset = "0x596CB4", VA = "0x596CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AAC0", Offset = "0x41AAC0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x596EA4", Offset = "0x596EA4", VA = "0x596EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AB44", Offset = "0x41AB44")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x597094", Offset = "0x597094", VA = "0x597094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41ABC8", Offset = "0x41ABC8")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x597284", Offset = "0x597284", VA = "0x597284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AC4C", Offset = "0x41AC4C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x597474", Offset = "0x597474", VA = "0x597474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41ACD0", Offset = "0x41ACD0")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x597664", Offset = "0x597664", VA = "0x597664")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x5977C4", Offset = "0x5977C4", VA = "0x5977C4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x5977F8", Offset = "0x5977F8", VA = "0x5977F8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x5978C0", Offset = "0x5978C0", VA = "0x5978C0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x597A08", Offset = "0x597A08", VA = "0x597A08")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000279")]
	[Address(RVA = "0x5EF90C", Offset = "0x5EF90C", VA = "0x5EF90C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x5EF9B0", Offset = "0x5EF9B0", VA = "0x5EF9B0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600027B")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x5EFAA4", Offset = "0x5EFAA4", VA = "0x5EFAA4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41666C", Offset = "0x41666C")]
	public float Range;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x5EFAB4", Offset = "0x5EFAB4", VA = "0x5EFAB4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x5EFC10", Offset = "0x5EFC10", VA = "0x5EFC10")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4166A4", Offset = "0x4166A4")]
	public float Range;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4166DC", Offset = "0x4166DC")]
	public float MinimumElevation;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416714", Offset = "0x416714")]
	public float Gravity;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41674C", Offset = "0x41674C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41674C", Offset = "0x41674C")]
	public float AimVelocity;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4167A8", Offset = "0x4167A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4167A8", Offset = "0x4167A8")]
	public float AimStep;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x5EFC20", Offset = "0x5EFC20", VA = "0x5EFC20", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x5EFE6C", Offset = "0x5EFE6C", VA = "0x5EFE6C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416800", Offset = "0x416800")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x5EFE80", Offset = "0x5EFE80", VA = "0x5EFE80")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x5EFF84", Offset = "0x5EFF84", VA = "0x5EFF84")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x5EFFB4", Offset = "0x5EFFB4", VA = "0x5EFFB4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x5EFFE4", Offset = "0x5EFFE4", VA = "0x5EFFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x5F008C", Offset = "0x5F008C", VA = "0x5F008C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x5F00F8", Offset = "0x5F00F8", VA = "0x5F00F8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x5F0160", Offset = "0x5F0160", VA = "0x5F0160")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x416838", Offset = "0x416838")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416848", Offset = "0x416848")]
	public Transform PositionIndicator;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416880", Offset = "0x416880")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4168B8", Offset = "0x4168B8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001A")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x5F027C", Offset = "0x5F027C", VA = "0x5F027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD54", Offset = "0x41AD54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x5F0284", Offset = "0x5F0284", VA = "0x5F0284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD64", Offset = "0x41AD64")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x5F043C", Offset = "0x5F043C", VA = "0x5F043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD74", Offset = "0x41AD74")]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x5F04E0", Offset = "0x5F04E0", VA = "0x5F04E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AD84", Offset = "0x41AD84")]
		remove
		{
		}
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x5F0290", Offset = "0x5F0290", VA = "0x5F0290")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x5F0320", Offset = "0x5F0320", VA = "0x5F0320")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x5F03F8", Offset = "0x5F03F8", VA = "0x5F03F8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x5F0438", Offset = "0x5F0438", VA = "0x5F0438")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x5F0584", Offset = "0x5F0584", VA = "0x5F0584")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x5F05EC", Offset = "0x5F05EC", VA = "0x5F05EC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x5F060C", Offset = "0x5F060C", VA = "0x5F060C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000096")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151EC", Offset = "0x4151EC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x5F0D24", Offset = "0x5F0D24", VA = "0x5F0D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x5F0D8C", Offset = "0x5F0D8C", VA = "0x5F0D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x5F0A4C", Offset = "0x5F0A4C", VA = "0x5F0A4C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x5F0C88", Offset = "0x5F0C88", VA = "0x5F0C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x5F0C8C", Offset = "0x5F0C8C", VA = "0x5F0C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x5F0D2C", Offset = "0x5F0D2C", VA = "0x5F0D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4151FC", Offset = "0x4151FC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x5F0C18", Offset = "0x5F0C18", VA = "0x5F0C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x5F0C80", Offset = "0x5F0C80", VA = "0x5F0C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x5F0AF4", Offset = "0x5F0AF4", VA = "0x5F0AF4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x5F0B78", Offset = "0x5F0B78", VA = "0x5F0B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x5F0B7C", Offset = "0x5F0B7C", VA = "0x5F0B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x5F0C20", Offset = "0x5F0C20", VA = "0x5F0C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x5F07EC", Offset = "0x5F07EC", VA = "0x5F07EC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x5F08AC", Offset = "0x5F08AC", VA = "0x5F08AC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x5F090C", Offset = "0x5F090C", VA = "0x5F090C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x5F09D0", Offset = "0x5F09D0", VA = "0x5F09D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AD94", Offset = "0x41AD94")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x5F0A78", Offset = "0x5F0A78", VA = "0x5F0A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41ADF8", Offset = "0x41ADF8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000299")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x5F0B20", Offset = "0x5F0B20", VA = "0x5F0B20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AE5C", Offset = "0x41AE5C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x5F0B4C", Offset = "0x5F0B4C", VA = "0x5F0B4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AE6C", Offset = "0x41AE6C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200023F")]
	public enum InputModes
	{
		[Token(Token = "0x4000901")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000902")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000903")]
		ThumbstickTeleport,
		[Token(Token = "0x4000904")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000240")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000906")]
		A,
		[Token(Token = "0x4000907")]
		B,
		[Token(Token = "0x4000908")]
		LeftTrigger,
		[Token(Token = "0x4000909")]
		LeftThumbstick,
		[Token(Token = "0x400090A")]
		RightTrigger,
		[Token(Token = "0x400090B")]
		RightThumbstick,
		[Token(Token = "0x400090C")]
		X,
		[Token(Token = "0x400090D")]
		Y
	}

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416900", Offset = "0x416900")]
	public OvrAvatar Avatar;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416938", Offset = "0x416938")]
	public InputModes InputMode;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416970", Offset = "0x416970")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4169A8", Offset = "0x4169A8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4169E0", Offset = "0x4169E0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x5F0D94", Offset = "0x5F0D94", VA = "0x5F0D94")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x5F0E8C", Offset = "0x5F0E8C", VA = "0x5F0E8C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x5F1430", Offset = "0x5F1430", VA = "0x5F1430", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x5F1508", Offset = "0x5F1508", VA = "0x5F1508")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x416A18", Offset = "0x416A18")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416A28", Offset = "0x416A28")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416A60", Offset = "0x416A60")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416A98", Offset = "0x416A98")]
	public bool FastTeleport;

	[Token(Token = "0x1700001B")]
	public Transform Pointer
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x5F15D0", Offset = "0x5F15D0", VA = "0x5F15D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AE7C", Offset = "0x41AE7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x5F15D8", Offset = "0x5F15D8", VA = "0x5F15D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AE8C", Offset = "0x41AE8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x5F12D4", Offset = "0x5F12D4", VA = "0x5F12D4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x5F15E0", Offset = "0x5F15E0", VA = "0x5F15E0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x5F15CC", Offset = "0x5F15CC", VA = "0x5F15CC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000099")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000241")]
	public enum OrientationModes
	{
		[Token(Token = "0x400090F")]
		HeadRelative,
		[Token(Token = "0x4000910")]
		ForwardFacing
	}

	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41520C", Offset = "0x41520C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x5F1AA8", Offset = "0x5F1AA8", VA = "0x5F1AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x5F1B10", Offset = "0x5F1B10", VA = "0x5F1B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x5F1878", Offset = "0x5F1878", VA = "0x5F1878")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x5F19F4", Offset = "0x5F19F4", VA = "0x5F19F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x5F19F8", Offset = "0x5F19F8", VA = "0x5F19F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x5F1AB0", Offset = "0x5F1AB0", VA = "0x5F1AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x5F1698", Offset = "0x5F1698", VA = "0x5F1698")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x5F1760", Offset = "0x5F1760", VA = "0x5F1760")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x5F1768", Offset = "0x5F1768", VA = "0x5F1768", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x5F17B4", Offset = "0x5F17B4", VA = "0x5F17B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x5F17FC", Offset = "0x5F17FC", VA = "0x5F17FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AE9C", Offset = "0x41AE9C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002AB")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x5F18A4", Offset = "0x5F18A4", VA = "0x5F18A4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x5F19C8", Offset = "0x5F19C8", VA = "0x5F19C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AF00", Offset = "0x41AF00")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x5F1B18", Offset = "0x5F1B18", VA = "0x5F1B18", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x5F1B1C", Offset = "0x5F1B1C", VA = "0x5F1B1C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x5F1B98", Offset = "0x5F1B98", VA = "0x5F1B98")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416AD0", Offset = "0x416AD0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416B08", Offset = "0x416B08")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416B40", Offset = "0x416B40")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416B78", Offset = "0x416B78")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x5F1B9C", Offset = "0x5F1B9C", VA = "0x5F1B9C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x5F1C0C", Offset = "0x5F1C0C", VA = "0x5F1C0C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x5F2084", Offset = "0x5F2084", VA = "0x5F2084")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416BB0", Offset = "0x416BB0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416BE8", Offset = "0x416BE8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416C20", Offset = "0x416C20")]
	public float RotateStickThreshold;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x5F2088", Offset = "0x5F2088", VA = "0x5F2088", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x5F20CC", Offset = "0x5F20CC", VA = "0x5F20CC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x5F253C", Offset = "0x5F253C", VA = "0x5F253C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x5F254C", Offset = "0x5F254C", VA = "0x5F254C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x5F2550", Offset = "0x5F2550", VA = "0x5F2550")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x5F2558", Offset = "0x5F2558", VA = "0x5F2558")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x5F2640", Offset = "0x5F2640", VA = "0x5F2640")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x5F2668", Offset = "0x5F2668", VA = "0x5F2668")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200009E")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x416C58", Offset = "0x416C58")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700001C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x5F2680", Offset = "0x5F2680", VA = "0x5F2680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AF10", Offset = "0x41AF10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x5F2688", Offset = "0x5F2688", VA = "0x5F2688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AF20", Offset = "0x41AF20")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x5EF940", Offset = "0x5EF940", VA = "0x5EF940", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x5EFA70", Offset = "0x5EFA70", VA = "0x5EFA70", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x5F2690", Offset = "0x5F2690", VA = "0x5F2690")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41AF30", Offset = "0x41AF30")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x5F00EC", Offset = "0x5F00EC", VA = "0x5F00EC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x5F0158", Offset = "0x5F0158", VA = "0x5F0158", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x5EFAAC", Offset = "0x5EFAAC", VA = "0x5EFAAC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41521C", Offset = "0x41521C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x5F2D2C", Offset = "0x5F2D2C", VA = "0x5F2D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x5F2D94", Offset = "0x5F2D94", VA = "0x5F2D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x5F290C", Offset = "0x5F290C", VA = "0x5F290C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x5F2AB4", Offset = "0x5F2AB4", VA = "0x5F2AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x5F2AB8", Offset = "0x5F2AB8", VA = "0x5F2AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x5F2D34", Offset = "0x5F2D34", VA = "0x5F2D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416C68", Offset = "0x416C68")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x5F2758", Offset = "0x5F2758", VA = "0x5F2758")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x5F283C", Offset = "0x5F283C", VA = "0x5F283C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x5F2868", Offset = "0x5F2868", VA = "0x5F2868", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x5F2890", Offset = "0x5F2890", VA = "0x5F2890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41AF68", Offset = "0x41AF68")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x5F2938", Offset = "0x5F2938", VA = "0x5F2938", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002C9")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x5F2954", Offset = "0x5F2954", VA = "0x5F2954", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x5F2A88", Offset = "0x5F2A88", VA = "0x5F2A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41AFCC", Offset = "0x41AFCC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x5F2D9C", Offset = "0x5F2D9C", VA = "0x5F2D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x5F2E04", Offset = "0x5F2E04", VA = "0x5F2E04", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x5F2F88", Offset = "0x5F2F88", VA = "0x5F2F88", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x5F3078", Offset = "0x5F3078", VA = "0x5F3078")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41AFDC", Offset = "0x41AFDC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x5F307C", Offset = "0x5F307C", VA = "0x5F307C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416CA0", Offset = "0x416CA0")]
	public float LOSOffset;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416CD8", Offset = "0x416CD8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x5F3088", Offset = "0x5F3088", VA = "0x5F3088", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x5F32B8", Offset = "0x5F32B8", VA = "0x5F32B8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x5F32C4", Offset = "0x5F32C4", VA = "0x5F32C4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x5F3448", Offset = "0x5F3448", VA = "0x5F3448")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x5F344C", Offset = "0x5F344C", VA = "0x5F344C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x5F34E4", Offset = "0x5F34E4", VA = "0x5F34E4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D7")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x5F3578", Offset = "0x5F3578", VA = "0x5F3578")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41522C", Offset = "0x41522C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x5F3904", Offset = "0x5F3904", VA = "0x5F3904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x5F396C", Offset = "0x5F396C", VA = "0x5F396C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x5F3628", Offset = "0x5F3628", VA = "0x5F3628")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x5F37F8", Offset = "0x5F37F8", VA = "0x5F37F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x5F37FC", Offset = "0x5F37FC", VA = "0x5F37FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x5F390C", Offset = "0x5F390C", VA = "0x5F390C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416D10", Offset = "0x416D10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x416D10", Offset = "0x416D10")]
	public float TransitionDuration;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416D68", Offset = "0x416D68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x416D68", Offset = "0x416D68")]
	public float TeleportDelay;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416DBC", Offset = "0x416DBC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x5F3580", Offset = "0x5F3580", VA = "0x5F3580", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x5F35AC", Offset = "0x5F35AC", VA = "0x5F35AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B014", Offset = "0x41B014")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x5F3654", Offset = "0x5F3654", VA = "0x5F3654")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x5F3974", Offset = "0x5F3974", VA = "0x5F3974", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x5F3990", Offset = "0x5F3990", VA = "0x5F3990")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41523C", Offset = "0x41523C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x5F3C00", Offset = "0x5F3C00", VA = "0x5F3C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x5F3C68", Offset = "0x5F3C68", VA = "0x5F3C68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x5F3A40", Offset = "0x5F3A40", VA = "0x5F3A40")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x5F3AC0", Offset = "0x5F3AC0", VA = "0x5F3AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x5F3AC4", Offset = "0x5F3AC4", VA = "0x5F3AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x5F3C08", Offset = "0x5F3C08", VA = "0x5F3C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416DF4", Offset = "0x416DF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x416DF4", Offset = "0x416DF4")]
	public float TransitionDuration;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x5F3998", Offset = "0x5F3998", VA = "0x5F3998", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x5F39C4", Offset = "0x5F39C4", VA = "0x5F39C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B078", Offset = "0x41B078")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x5F3A6C", Offset = "0x5F3A6C", VA = "0x5F3A6C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000A7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x1700001D")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x599D68", Offset = "0x599D68", VA = "0x599D68")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001E")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x599F94", Offset = "0x599F94", VA = "0x599F94")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001F")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x598CA4", Offset = "0x598CA4", VA = "0x598CA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x599900", Offset = "0x599900", VA = "0x599900")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x5996A8", Offset = "0x5996A8", VA = "0x5996A8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x5990D0", Offset = "0x5990D0", VA = "0x5990D0")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x5991E8", Offset = "0x5991E8", VA = "0x5991E8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x599560", Offset = "0x599560", VA = "0x599560")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x599A6C", Offset = "0x599A6C", VA = "0x599A6C")]
	public static void SetLooping(bool looping)
	{
	}
}
[Token(Token = "0x20000A8")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000246")]
	public enum VideoShape
	{
		[Token(Token = "0x4000923")]
		_360,
		[Token(Token = "0x4000924")]
		_180,
		[Token(Token = "0x4000925")]
		Quad
	}

	[Token(Token = "0x2000247")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000927")]
		Mono,
		[Token(Token = "0x4000928")]
		TopBottom,
		[Token(Token = "0x4000929")]
		LeftRight
	}

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41524C", Offset = "0x41524C")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x599CF8", Offset = "0x599CF8", VA = "0x599CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x599D60", Offset = "0x599D60", VA = "0x599D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x598DD0", Offset = "0x598DD0", VA = "0x598DD0")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x599B68", Offset = "0x599B68", VA = "0x599B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x599B6C", Offset = "0x599B6C", VA = "0x599B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x599D00", Offset = "0x599D00", VA = "0x599D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41525C", Offset = "0x41525C")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x599078", Offset = "0x599078", VA = "0x599078")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x599860", Offset = "0x599860", VA = "0x599860")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x416E5C", Offset = "0x416E5C")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x17000020")]
	public bool isPlaying
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x5988B8", Offset = "0x5988B8", VA = "0x5988B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B0DC", Offset = "0x41B0DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x5988C0", Offset = "0x5988C0", VA = "0x5988C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B0EC", Offset = "0x41B0EC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x5988CC", Offset = "0x5988CC", VA = "0x5988CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x598CEC", Offset = "0x598CEC", VA = "0x598CEC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x598D54", Offset = "0x598D54", VA = "0x598D54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B0FC", Offset = "0x41B0FC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x598DFC", Offset = "0x598DFC", VA = "0x598DFC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x599080", Offset = "0x599080", VA = "0x599080")]
	public void Play()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x59919C", Offset = "0x59919C", VA = "0x59919C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x5992B4", Offset = "0x5992B4", VA = "0x5992B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x599520", Offset = "0x599520", VA = "0x599520")]
	public void Rewind()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x59965C", Offset = "0x59965C", VA = "0x59965C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x599774", Offset = "0x599774", VA = "0x599774")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x599858", Offset = "0x599858", VA = "0x599858")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413E48", Offset = "0x413E48")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200024A")]
	private enum CubeFace
	{
		[Token(Token = "0x4000931")]
		Right,
		[Token(Token = "0x4000932")]
		Left,
		[Token(Token = "0x4000933")]
		Top,
		[Token(Token = "0x4000934")]
		Bottom,
		[Token(Token = "0x4000935")]
		Front,
		[Token(Token = "0x4000936")]
		Back,
		[Token(Token = "0x4000937")]
		COUNT
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x7A8BFC", Offset = "0x7A8BFC", VA = "0x7A8BFC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x7A8D98", Offset = "0x7A8D98", VA = "0x7A8D98")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x7A8F54", Offset = "0x7A8F54", VA = "0x7A8F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x7A942C", Offset = "0x7A942C", VA = "0x7A942C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x7A9720", Offset = "0x7A9720", VA = "0x7A9720")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x7AA97C", Offset = "0x7AA97C", VA = "0x7AA97C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x7AA9DC", Offset = "0x7AA9DC", VA = "0x7AA9DC")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x7A9AA0", Offset = "0x7A9AA0", VA = "0x7A9AA0")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x7AAAC4", Offset = "0x7AAAC4", VA = "0x7AAAC4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x7AACB0", Offset = "0x7AACB0", VA = "0x7AACB0")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x7A9F58", Offset = "0x7A9F58", VA = "0x7A9F58")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x7AA280", Offset = "0x7AA280", VA = "0x7AA280")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x7AA5D8", Offset = "0x7AA5D8", VA = "0x7AA5D8")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x7AAE64", Offset = "0x7AAE64", VA = "0x7AAE64")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000AA")]
public static class VectorUtil
{
	[Token(Token = "0x6000306")]
	[Address(RVA = "0x5F4278", Offset = "0x5F4278", VA = "0x5F4278")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000AB")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x591530", Offset = "0x591530", VA = "0x591530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x591988", Offset = "0x591988", VA = "0x591988")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x591A40", Offset = "0x591A40", VA = "0x591A40")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x591C94", Offset = "0x591C94", VA = "0x591C94")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x591D7C", Offset = "0x591D7C", VA = "0x591D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x591E58", Offset = "0x591E58", VA = "0x591E58")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x591EC4", Offset = "0x591EC4", VA = "0x591EC4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x591ECC", Offset = "0x591ECC", VA = "0x591ECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B170", Offset = "0x41B170")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x591F28", Offset = "0x591F28", VA = "0x591F28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B180", Offset = "0x41B180")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x591F84", Offset = "0x591F84", VA = "0x591F84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B190", Offset = "0x41B190")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x591FE0", Offset = "0x591FE0", VA = "0x591FE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B1A0", Offset = "0x41B1A0")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x416E6C", Offset = "0x416E6C")]
	public int SubdivisionsU;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x416E88", Offset = "0x416E88")]
	public int SubdivisionsV;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x58E1B0", Offset = "0x58E1B0", VA = "0x58E1B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x58ECA4", Offset = "0x58ECA4", VA = "0x58ECA4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000AD")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000021")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x59505C", Offset = "0x59505C", VA = "0x59505C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x5950B4", Offset = "0x5950B4", VA = "0x5950B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x595454", Offset = "0x595454", VA = "0x595454")]
	public void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x595530", Offset = "0x595530", VA = "0x595530")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B1B0", Offset = "0x41B1B0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000318")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600031A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600031B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600031C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600031D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600031E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600031F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x595598", Offset = "0x595598", VA = "0x595598")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x5955D4", Offset = "0x5955D4", VA = "0x5955D4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x595648", Offset = "0x595648", VA = "0x595648")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x5957D0", Offset = "0x5957D0", VA = "0x5957D0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x5958A4", Offset = "0x5958A4", VA = "0x5958A4")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x595330", Offset = "0x595330", VA = "0x595330")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x595994", Offset = "0x595994", VA = "0x595994")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x595A2C", Offset = "0x595A2C", VA = "0x595A2C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x595B40", Offset = "0x595B40", VA = "0x595B40")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000AE")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41526C", Offset = "0x41526C")]
	private sealed class <ShowOverlayAndLoad>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMenu <>4__this;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x5EF89C", Offset = "0x5EF89C", VA = "0x5EF89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x5EF904", Offset = "0x5EF904", VA = "0x5EF904", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x5EF324", Offset = "0x5EF324", VA = "0x5EF324")]
		[DebuggerHidden]
		public <ShowOverlayAndLoad>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x5EF628", Offset = "0x5EF628", VA = "0x5EF628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x5EF62C", Offset = "0x5EF62C", VA = "0x5EF62C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x5EF8A4", Offset = "0x5EF8A4", VA = "0x5EF8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x5EEE70", Offset = "0x5EEE70", VA = "0x5EEE70")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x5EF204", Offset = "0x5EF204", VA = "0x5EF204")]
	private void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x5EF28C", Offset = "0x5EF28C", VA = "0x5EF28C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B1E8", Offset = "0x41B1E8")]
	private IEnumerator ShowOverlayAndLoad(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x5EF350", Offset = "0x5EF350", VA = "0x5EF350")]
	private void LoadAvatarGrab()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x5EF3A0", Offset = "0x5EF3A0", VA = "0x5EF3A0")]
	private void LoadCustomControllers()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x5EF3F0", Offset = "0x5EF3F0", VA = "0x5EF3F0")]
	private void LoadCustomHands()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x5EF440", Offset = "0x5EF440", VA = "0x5EF440")]
	private void LoadDebugUI()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x5EF490", Offset = "0x5EF490", VA = "0x5EF490")]
	private void LoadDistanceGrab()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x5EF4E0", Offset = "0x5EF4E0", VA = "0x5EF4E0")]
	private void LoadGuardianBoundarySystem()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x5EF530", Offset = "0x5EF530", VA = "0x5EF530")]
	private void LoadLocomotion()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x5EF580", Offset = "0x5EF580", VA = "0x5EF580")]
	private void LoadMixedRealityCapture()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x5EF5D0", Offset = "0x5EF5D0", VA = "0x5EF5D0")]
	private void LoadOVROverlay()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x5EF620", Offset = "0x5EF620", VA = "0x5EF620")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x413EDC", Offset = "0x413EDC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum RotationAxes
	{
		[Token(Token = "0x400093E")]
		MouseXAndY,
		[Token(Token = "0x400093F")]
		MouseX,
		[Token(Token = "0x4000940")]
		MouseY
	}

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x598578", Offset = "0x598578", VA = "0x598578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x5987D8", Offset = "0x5987D8", VA = "0x5987D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x598898", Offset = "0x598898", VA = "0x598898")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000942")]
		Uninitialized = -1,
		[Token(Token = "0x4000943")]
		NotEnabled,
		[Token(Token = "0x4000944")]
		Success,
		[Token(Token = "0x4000945")]
		StreamError,
		[Token(Token = "0x4000946")]
		ProcessError,
		[Token(Token = "0x4000947")]
		MaxStatValue
	}

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000022")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x59A178", Offset = "0x59A178", VA = "0x59A178")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x59A180", Offset = "0x59A180", VA = "0x59A180")]
		set
		{
		}
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x59A18C", Offset = "0x59A18C", VA = "0x59A18C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x59A3A8", Offset = "0x59A3A8", VA = "0x59A3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x59A604", Offset = "0x59A604", VA = "0x59A604")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	private enum Parameters
	{
		[Token(Token = "0x4000949")]
		P_GAIN,
		[Token(Token = "0x400094A")]
		P_USEINVSQR,
		[Token(Token = "0x400094B")]
		P_NEAR,
		[Token(Token = "0x400094C")]
		P_FAR,
		[Token(Token = "0x400094D")]
		P_RADIUS,
		[Token(Token = "0x400094E")]
		P_DISABLE_RFL,
		[Token(Token = "0x400094F")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000950")]
		P_AMBISTAT,
		[Token(Token = "0x4000951")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000952")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000953")]
		P_SENDLEVEL,
		[Token(Token = "0x4000954")]
		P_NUM
	}

	[Token(Token = "0x40003D9")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000023")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x59A860", Offset = "0x59A860", VA = "0x59A860")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x59A868", Offset = "0x59A868", VA = "0x59A868")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float Gain
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x59A874", Offset = "0x59A874", VA = "0x59A874")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x59A87C", Offset = "0x59A87C", VA = "0x59A87C")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x59A900", Offset = "0x59A900", VA = "0x59A900")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x59A908", Offset = "0x59A908", VA = "0x59A908")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public float Near
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x59A914", Offset = "0x59A914", VA = "0x59A914")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x59A91C", Offset = "0x59A91C", VA = "0x59A91C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float Far
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x59A9A4", Offset = "0x59A9A4", VA = "0x59A9A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x59A9AC", Offset = "0x59A9AC", VA = "0x59A9AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x59AA34", Offset = "0x59AA34", VA = "0x59AA34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x59AA3C", Offset = "0x59AA3C", VA = "0x59AA3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float ReverbSend
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x59AAC4", Offset = "0x59AAC4", VA = "0x59AAC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x59AACC", Offset = "0x59AACC", VA = "0x59AACC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool EnableRfl
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x59AB54", Offset = "0x59AB54", VA = "0x59AB54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x59AB5C", Offset = "0x59AB5C", VA = "0x59AB5C")]
		set
		{
		}
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x59A688", Offset = "0x59A688", VA = "0x59A688")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x41B24C", Offset = "0x41B24C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000340")]
	[Address(RVA = "0x59A780", Offset = "0x59A780", VA = "0x59A780")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x59AB68", Offset = "0x59AB68", VA = "0x59AB68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x59ACDC", Offset = "0x59ACDC", VA = "0x59ACDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x59ACE0", Offset = "0x59ACE0", VA = "0x59ACE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x59ABD4", Offset = "0x59ABD4", VA = "0x59ABD4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x59ADA8", Offset = "0x59ADA8", VA = "0x59ADA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x59B210", Offset = "0x59B210", VA = "0x59B210")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000357")]
	[Address(RVA = "0x59A700", Offset = "0x59A700", VA = "0x59A700")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x59B2F4", Offset = "0x59B2F4", VA = "0x59B2F4")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003E4")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40003E6")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x59B314", Offset = "0x59B314", VA = "0x59B314")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x59B320", Offset = "0x59B320", VA = "0x59B320")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600035C")]
	[Address(RVA = "0x59B3D8", Offset = "0x59B3D8", VA = "0x59B3D8")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600035D")]
	[Address(RVA = "0x59B358", Offset = "0x59B358", VA = "0x59B358")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x59B458", Offset = "0x59B458", VA = "0x59B458")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000250")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40003ED")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700002B")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x59DEF8", Offset = "0x59DEF8", VA = "0x59DEF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public string filePath
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x59DF84", Offset = "0x59DF84", VA = "0x59DF84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x59DFFC", Offset = "0x59DFFC", VA = "0x59DFFC")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x59E144", Offset = "0x59E144", VA = "0x59E144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x59E148", Offset = "0x59E148", VA = "0x59E148")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x59E6A8", Offset = "0x59E6A8", VA = "0x59E6A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x59EA40", Offset = "0x59EA40", VA = "0x59EA40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x59EB9C", Offset = "0x59EB9C", VA = "0x59EB9C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x59F2F0", Offset = "0x59F2F0", VA = "0x59F2F0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x59F32C", Offset = "0x59F32C", VA = "0x59F32C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x5A0BA0", Offset = "0x5A0BA0", VA = "0x5A0BA0")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x5A0A78", Offset = "0x5A0A78", VA = "0x5A0A78")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x59E4E0", Offset = "0x59E4E0", VA = "0x59E4E0")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x59E314", Offset = "0x59E314", VA = "0x59E314")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x5A11B4", Offset = "0x5A11B4", VA = "0x5A11B4")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x5A15F0", Offset = "0x5A15F0", VA = "0x5A15F0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B4")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000251")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400095B")]
		Int8,
		[Token(Token = "0x400095C")]
		UInt8,
		[Token(Token = "0x400095D")]
		Int16,
		[Token(Token = "0x400095E")]
		UInt16,
		[Token(Token = "0x400095F")]
		Int32,
		[Token(Token = "0x4000960")]
		UInt32,
		[Token(Token = "0x4000961")]
		Int64,
		[Token(Token = "0x4000962")]
		UInt64,
		[Token(Token = "0x4000963")]
		Float16,
		[Token(Token = "0x4000964")]
		Float32,
		[Token(Token = "0x4000965")]
		Float64
	}

	[Token(Token = "0x2000252")]
	public class ClientType
	{
		[Token(Token = "0x4000966")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000967")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000968")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000969")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400096A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400096B")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400096C")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400096D")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400096E")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400096F")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000970")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000971")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000972")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x59B918", Offset = "0x59B918", VA = "0x59B918")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000253")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000E09")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000E0A")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000E0B")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000E0C")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E0D")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000E0E")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E0F")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E10")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E11")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E12")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E13")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E14")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000E15")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E16")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E17")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000254")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000973")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000CB")]
		private IntPtr context
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x59C590", Offset = "0x59C590", VA = "0x59C590")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x59C5F4", Offset = "0x59C5F4", VA = "0x59C5F4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x59C684", Offset = "0x59C684", VA = "0x59C684")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x59C714", Offset = "0x59C714", VA = "0x59C714", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x59C738", Offset = "0x59C738", VA = "0x59C738")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x59C7C8", Offset = "0x59C7C8", VA = "0x59C7C8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x59C7EC", Offset = "0x59C7EC", VA = "0x59C7EC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x59C878", Offset = "0x59C878", VA = "0x59C878", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x59C89C", Offset = "0x59C89C", VA = "0x59C89C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x59C91C", Offset = "0x59C91C", VA = "0x59C91C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x59C924", Offset = "0x59C924", VA = "0x59C924")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x59CA44", Offset = "0x59CA44", VA = "0x59CA44", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x59CB3C", Offset = "0x59CB3C", VA = "0x59CB3C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x59CBD4", Offset = "0x59CBD4", VA = "0x59CBD4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x59CBE0", Offset = "0x59CBE0", VA = "0x59CBE0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x59CD14", Offset = "0x59CD14", VA = "0x59CD14", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x59CD20", Offset = "0x59CD20", VA = "0x59CD20")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x59CDCC", Offset = "0x59CDCC", VA = "0x59CDCC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x59CDD8", Offset = "0x59CDD8", VA = "0x59CDD8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x59CE84", Offset = "0x59CE84", VA = "0x59CE84", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x59CE90", Offset = "0x59CE90", VA = "0x59CE90")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x59CF3C", Offset = "0x59CF3C", VA = "0x59CF3C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x59CF48", Offset = "0x59CF48", VA = "0x59CF48")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x59CFD4", Offset = "0x59CFD4", VA = "0x59CFD4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x59CFF8", Offset = "0x59CFF8", VA = "0x59CFF8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x59D078", Offset = "0x59D078", VA = "0x59D078", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x59D080", Offset = "0x59D080", VA = "0x59D080")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x59D128", Offset = "0x59D128", VA = "0x59D128", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x59D134", Offset = "0x59D134", VA = "0x59D134")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x59D1DC", Offset = "0x59D1DC", VA = "0x59D1DC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x59D1EC", Offset = "0x59D1EC", VA = "0x59D1EC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x59D27C", Offset = "0x59D27C", VA = "0x59D27C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x59B8C4", Offset = "0x59B8C4", VA = "0x59B8C4")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000255")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000975")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000CC")]
		private IntPtr context
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x59D288", Offset = "0x59D288", VA = "0x59D288")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x59B70C", Offset = "0x59B70C", VA = "0x59B70C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x59D2EC", Offset = "0x59D2EC", VA = "0x59D2EC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x59D37C", Offset = "0x59D37C", VA = "0x59D37C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x59D3A0", Offset = "0x59D3A0", VA = "0x59D3A0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x59D430", Offset = "0x59D430", VA = "0x59D430", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x59D454", Offset = "0x59D454", VA = "0x59D454")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x59D4E4", Offset = "0x59D4E4", VA = "0x59D4E4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x59D508", Offset = "0x59D508", VA = "0x59D508")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x59D588", Offset = "0x59D588", VA = "0x59D588", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x59D590", Offset = "0x59D590", VA = "0x59D590")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x59D6B0", Offset = "0x59D6B0", VA = "0x59D6B0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x59D7A8", Offset = "0x59D7A8", VA = "0x59D7A8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x59D840", Offset = "0x59D840", VA = "0x59D840", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x59D84C", Offset = "0x59D84C", VA = "0x59D84C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x59D980", Offset = "0x59D980", VA = "0x59D980", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x59D98C", Offset = "0x59D98C", VA = "0x59D98C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x59DA38", Offset = "0x59DA38", VA = "0x59DA38", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x59DA44", Offset = "0x59DA44", VA = "0x59DA44")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x59DAF0", Offset = "0x59DAF0", VA = "0x59DAF0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x59DAFC", Offset = "0x59DAFC", VA = "0x59DAFC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x59DBA8", Offset = "0x59DBA8", VA = "0x59DBA8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x59DBB4", Offset = "0x59DBB4", VA = "0x59DBB4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x59DC44", Offset = "0x59DC44", VA = "0x59DC44", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x59DC68", Offset = "0x59DC68", VA = "0x59DC68")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x59DCE8", Offset = "0x59DCE8", VA = "0x59DCE8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x59DCF0", Offset = "0x59DCF0", VA = "0x59DCF0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x59DD98", Offset = "0x59DD98", VA = "0x59DD98", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x59DDA4", Offset = "0x59DDA4", VA = "0x59DDA4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x59DE4C", Offset = "0x59DE4C", VA = "0x59DE4C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x59DE5C", Offset = "0x59DE5C", VA = "0x59DE5C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x59DEEC", Offset = "0x59DEEC", VA = "0x59DEEC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x59B79C", Offset = "0x59B79C", VA = "0x59B79C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000256")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000977")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000CD")]
		private IntPtr context
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x59B920", Offset = "0x59B920", VA = "0x59B920")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x59B7E8", Offset = "0x59B7E8", VA = "0x59B7E8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x59B984", Offset = "0x59B984", VA = "0x59B984")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x59BA14", Offset = "0x59BA14", VA = "0x59BA14", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x59BA38", Offset = "0x59BA38", VA = "0x59BA38")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x59BAC8", Offset = "0x59BAC8", VA = "0x59BAC8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x59BAEC", Offset = "0x59BAEC", VA = "0x59BAEC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x59BB7C", Offset = "0x59BB7C", VA = "0x59BB7C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x59BBA0", Offset = "0x59BBA0", VA = "0x59BBA0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x59BC20", Offset = "0x59BC20", VA = "0x59BC20", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x59BC28", Offset = "0x59BC28", VA = "0x59BC28")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x59BD48", Offset = "0x59BD48", VA = "0x59BD48", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x59BE40", Offset = "0x59BE40", VA = "0x59BE40")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x59BED8", Offset = "0x59BED8", VA = "0x59BED8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x59BEE4", Offset = "0x59BEE4", VA = "0x59BEE4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x59C018", Offset = "0x59C018", VA = "0x59C018", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x59C024", Offset = "0x59C024", VA = "0x59C024")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x59C0D0", Offset = "0x59C0D0", VA = "0x59C0D0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x59C0DC", Offset = "0x59C0DC", VA = "0x59C0DC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x59C188", Offset = "0x59C188", VA = "0x59C188", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x59C194", Offset = "0x59C194", VA = "0x59C194")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x59C240", Offset = "0x59C240", VA = "0x59C240", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x59C24C", Offset = "0x59C24C", VA = "0x59C24C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x59C2DC", Offset = "0x59C2DC", VA = "0x59C2DC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x59C300", Offset = "0x59C300", VA = "0x59C300")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x59C380", Offset = "0x59C380", VA = "0x59C380", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x59C388", Offset = "0x59C388", VA = "0x59C388")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x59C430", Offset = "0x59C430", VA = "0x59C430", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x59C43C", Offset = "0x59C43C", VA = "0x59C43C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x59C4E4", Offset = "0x59C4E4", VA = "0x59C4E4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x59C4F4", Offset = "0x59C4F4", VA = "0x59C4F4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x59C584", Offset = "0x59C584", VA = "0x59C584", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x59B878", Offset = "0x59B878", VA = "0x59B878")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700002D")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x59B468", Offset = "0x59B468", VA = "0x59B468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x59B4E4", Offset = "0x59B4E4", VA = "0x59B4E4")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x59B910", Offset = "0x59B910", VA = "0x59B910")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B5")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public enum Preset
	{
		[Token(Token = "0x400097A")]
		Custom,
		[Token(Token = "0x400097B")]
		AcousticTile,
		[Token(Token = "0x400097C")]
		Brick,
		[Token(Token = "0x400097D")]
		BrickPainted,
		[Token(Token = "0x400097E")]
		Carpet,
		[Token(Token = "0x400097F")]
		CarpetHeavy,
		[Token(Token = "0x4000980")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000981")]
		CeramicTile,
		[Token(Token = "0x4000982")]
		Concrete,
		[Token(Token = "0x4000983")]
		ConcreteRough,
		[Token(Token = "0x4000984")]
		ConcreteBlock,
		[Token(Token = "0x4000985")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000986")]
		Curtain,
		[Token(Token = "0x4000987")]
		Foliage,
		[Token(Token = "0x4000988")]
		Glass,
		[Token(Token = "0x4000989")]
		GlassHeavy,
		[Token(Token = "0x400098A")]
		Grass,
		[Token(Token = "0x400098B")]
		Gravel,
		[Token(Token = "0x400098C")]
		GypsumBoard,
		[Token(Token = "0x400098D")]
		PlasterOnBrick,
		[Token(Token = "0x400098E")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400098F")]
		Soil,
		[Token(Token = "0x4000990")]
		SoundProof,
		[Token(Token = "0x4000991")]
		Snow,
		[Token(Token = "0x4000992")]
		Steel,
		[Token(Token = "0x4000993")]
		Water,
		[Token(Token = "0x4000994")]
		WoodThin,
		[Token(Token = "0x4000995")]
		WoodThick,
		[Token(Token = "0x4000996")]
		WoodFloor,
		[Token(Token = "0x4000997")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000258")]
	public sealed class Point
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x794418", Offset = "0x794418", VA = "0x794418")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x794450", Offset = "0x794450", VA = "0x794450")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x7944C0", Offset = "0x7944C0", VA = "0x7944C0")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x41527C", Offset = "0x41527C")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4153A0", Offset = "0x4153A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x7949B0", Offset = "0x7949B0", VA = "0x7949B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x7949B8", Offset = "0x7949B8", VA = "0x7949B8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x7949D0", Offset = "0x7949D0", VA = "0x7949D0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000CE")]
		public float Item
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x7944F8", Offset = "0x7944F8", VA = "0x7944F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x7948C4", Offset = "0x7948C4", VA = "0x7948C4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416F34", Offset = "0x416F34")]
	public Spectrum absorption;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416F6C", Offset = "0x416F6C")]
	public Spectrum transmission;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x416FA4", Offset = "0x416FA4")]
	public Spectrum scattering;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700002E")]
	public Preset preset
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x5A16D4", Offset = "0x5A16D4", VA = "0x5A16D4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x5A16DC", Offset = "0x5A16DC", VA = "0x5A16DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x5A1704", Offset = "0x5A1704", VA = "0x5A1704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x5A1048", Offset = "0x5A1048", VA = "0x5A1048")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x5A1CE8", Offset = "0x5A1CE8", VA = "0x5A1CE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x5A1CEC", Offset = "0x5A1CEC", VA = "0x5A1CEC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x5A1708", Offset = "0x5A1708", VA = "0x5A1708")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x5A08E4", Offset = "0x5A08E4", VA = "0x5A08E4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x5A1DD0", Offset = "0x5A1DD0", VA = "0x5A1DD0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x5A2290", Offset = "0x5A2290", VA = "0x5A2290")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x5A2754", Offset = "0x5A2754", VA = "0x5A2754")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x5A2C14", Offset = "0x5A2C14", VA = "0x5A2C14")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x5A30E8", Offset = "0x5A30E8", VA = "0x5A30E8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x5A35A8", Offset = "0x5A35A8", VA = "0x5A35A8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x5A3A68", Offset = "0x5A3A68", VA = "0x5A3A68")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x5A3F30", Offset = "0x5A3F30", VA = "0x5A3F30")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x5A43F8", Offset = "0x5A43F8", VA = "0x5A43F8")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x5A48C4", Offset = "0x5A48C4", VA = "0x5A48C4")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x5A4D8C", Offset = "0x5A4D8C", VA = "0x5A4D8C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x5A525C", Offset = "0x5A525C", VA = "0x5A525C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x5A571C", Offset = "0x5A571C", VA = "0x5A571C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x5A5BF0", Offset = "0x5A5BF0", VA = "0x5A5BF0")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x5A60A0", Offset = "0x5A60A0", VA = "0x5A60A0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x5A655C", Offset = "0x5A655C", VA = "0x5A655C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x5A6904", Offset = "0x5A6904", VA = "0x5A6904")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x5A6CA4", Offset = "0x5A6CA4", VA = "0x5A6CA4")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x5A7174", Offset = "0x5A7174", VA = "0x5A7174")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x5A7640", Offset = "0x5A7640", VA = "0x5A7640")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x5A7B04", Offset = "0x5A7B04", VA = "0x5A7B04")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x5A7EB0", Offset = "0x5A7EB0", VA = "0x5A7EB0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x5A8034", Offset = "0x5A8034", VA = "0x5A8034")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x5A83D0", Offset = "0x5A83D0", VA = "0x5A83D0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x5A8880", Offset = "0x5A8880", VA = "0x5A8880")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x5A8D44", Offset = "0x5A8D44", VA = "0x5A8D44")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x5A91FC", Offset = "0x5A91FC", VA = "0x5A91FC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x5A96BC", Offset = "0x5A96BC", VA = "0x5A96BC")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x5A9B84", Offset = "0x5A9B84", VA = "0x5A9B84")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x5AA048", Offset = "0x5AA048", VA = "0x5AA048")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x7949E8", Offset = "0x7949E8", VA = "0x7949E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x794ABC", Offset = "0x794ABC", VA = "0x794ABC")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B7")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700002F")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x795090", Offset = "0x795090", VA = "0x795090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x7951BC", Offset = "0x7951BC", VA = "0x7951BC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003F8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600039D")]
	[Address(RVA = "0x7951CC", Offset = "0x7951CC", VA = "0x7951CC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x795264", Offset = "0x795264", VA = "0x795264")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x795370", Offset = "0x795370", VA = "0x795370")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x795374", Offset = "0x795374", VA = "0x795374")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x795378", Offset = "0x795378", VA = "0x795378")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B9")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200025A")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000408")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400040E")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x6523A8", Offset = "0x6523A8", VA = "0x6523A8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x6523E0", Offset = "0x6523E0", VA = "0x6523E0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x6525B0", Offset = "0x6525B0", VA = "0x6525B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x652680", Offset = "0x652680", VA = "0x652680")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x652774", Offset = "0x652774", VA = "0x652774")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x6530DC", Offset = "0x6530DC", VA = "0x6530DC")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x652664", Offset = "0x652664", VA = "0x652664")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x6526E4", Offset = "0x6526E4", VA = "0x6526E4")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x652E44", Offset = "0x652E44", VA = "0x652E44")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x652EC4", Offset = "0x652EC4", VA = "0x652EC4")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x652F4C", Offset = "0x652F4C", VA = "0x652F4C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x652FD4", Offset = "0x652FD4", VA = "0x652FD4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x653054", Offset = "0x653054", VA = "0x653054")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x653F50", Offset = "0x653F50", VA = "0x653F50")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x653FF8", Offset = "0x653FF8", VA = "0x653FF8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x6540A0", Offset = "0x6540A0", VA = "0x6540A0")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000BA")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000BB")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x794ACC", Offset = "0x794ACC", VA = "0x794ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x794AD0", Offset = "0x794AD0", VA = "0x794AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x794AD4", Offset = "0x794AD4", VA = "0x794AD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x794C3C", Offset = "0x794C3C", VA = "0x794C3C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x794B20", Offset = "0x794B20", VA = "0x794B20")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x794BB0", Offset = "0x794BB0", VA = "0x794BB0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x794C88", Offset = "0x794C88", VA = "0x794C88")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x794D20", Offset = "0x794D20", VA = "0x794D20")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x794E90", Offset = "0x794E90", VA = "0x794E90")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x795000", Offset = "0x795000", VA = "0x795000")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000BC")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x5F4418", Offset = "0x5F4418", VA = "0x5F4418")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x5F4610", Offset = "0x5F4610", VA = "0x5F4610")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x5F49FC", Offset = "0x5F49FC", VA = "0x5F49FC")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x5F4AF4", Offset = "0x5F4AF4", VA = "0x5F4AF4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x5F48CC", Offset = "0x5F48CC", VA = "0x5F48CC")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x5F4E90", Offset = "0x5F4E90", VA = "0x5F4E90")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000BD")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60003C4")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x5F454C", Offset = "0x5F454C", VA = "0x5F454C")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x5F4EF4", Offset = "0x5F4EF4", VA = "0x5F4EF4")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x20000BE")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000030")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x7A1370", Offset = "0x7A1370", VA = "0x7A1370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x7A1630", Offset = "0x7A1630", VA = "0x7A1630")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x7A1774", Offset = "0x7A1774", VA = "0x7A1774")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x7A16A8", Offset = "0x7A16A8", VA = "0x7A16A8")]
	public void Init()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x7A1874", Offset = "0x7A1874", VA = "0x7A1874")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x7A19E4", Offset = "0x7A19E4", VA = "0x7A19E4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x7A180C", Offset = "0x7A180C", VA = "0x7A180C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x7A1AC0", Offset = "0x7A1AC0", VA = "0x7A1AC0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x7A18F4", Offset = "0x7A18F4", VA = "0x7A18F4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x7A1A84", Offset = "0x7A1A84", VA = "0x7A1A84")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x7A1B40", Offset = "0x7A1B40", VA = "0x7A1B40")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x7A1D34", Offset = "0x7A1D34", VA = "0x7A1D34")]
	private void Prune()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x7A1B50", Offset = "0x7A1B50", VA = "0x7A1B50")]
	private void Display()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x7A1DE4", Offset = "0x7A1DE4", VA = "0x7A1DE4")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x20000BF")]
public delegate void OVRCallback();
[Token(Token = "0x20000C0")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x20000C1")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x20000C2")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x20000C3")]
internal static class OVRMessenger
{
	[Token(Token = "0x200025B")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x7A7D08", Offset = "0x7A7D08", VA = "0x7A7D08")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x200025C")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x7A7920", Offset = "0x7A7920", VA = "0x7A7920")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x7A6F1C", Offset = "0x7A6F1C", VA = "0x7A6F1C")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x7A6FA0", Offset = "0x7A6FA0", VA = "0x7A6FA0")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x7A7390", Offset = "0x7A7390", VA = "0x7A7390")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x7A76EC", Offset = "0x7A76EC", VA = "0x7A76EC")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x7A7998", Offset = "0x7A7998", VA = "0x7A7998")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x7A7BB4", Offset = "0x7A7BB4", VA = "0x7A7BB4")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x7A7C84", Offset = "0x7A7C84", VA = "0x7A7C84")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x7A7C88", Offset = "0x7A7C88", VA = "0x7A7C88")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x7A7D80", Offset = "0x7A7D80", VA = "0x7A7D80")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60003EF")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60003F0")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60003F1")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x7A7E84", Offset = "0x7A7E84", VA = "0x7A7E84")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60003F3")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60003F4")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60003F5")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x7A7F90", Offset = "0x7A7F90", VA = "0x7A7F90")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x60003F7")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x60003F8")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x60003F9")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x20000C4")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x598494", Offset = "0x598494", VA = "0x598494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x598510", Offset = "0x598510", VA = "0x598510")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x598570", Offset = "0x598570", VA = "0x598570")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413F14", Offset = "0x413F14")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public enum micActivation
	{
		[Token(Token = "0x400099D")]
		HoldToSpeak,
		[Token(Token = "0x400099E")]
		PushToSpeak,
		[Token(Token = "0x400099F")]
		ConstantSpeak
	}

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x17000031")]
	public float Sensitivity
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x7A818C", Offset = "0x7A818C", VA = "0x7A818C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x7A8194", Offset = "0x7A8194", VA = "0x7A8194")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float SourceVolume
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x7A821C", Offset = "0x7A821C", VA = "0x7A821C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x7A8224", Offset = "0x7A8224", VA = "0x7A8224")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float MicFrequency
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x7A82AC", Offset = "0x7A82AC", VA = "0x7A82AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x7A82B8", Offset = "0x7A82B8", VA = "0x7A82B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x7A8344", Offset = "0x7A8344", VA = "0x7A8344")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x7A840C", Offset = "0x7A840C", VA = "0x7A840C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x7A8580", Offset = "0x7A8580", VA = "0x7A8580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x7A8904", Offset = "0x7A8904", VA = "0x7A8904")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x7A8918", Offset = "0x7A8918", VA = "0x7A8918")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x7A892C", Offset = "0x7A892C", VA = "0x7A892C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x7A8930", Offset = "0x7A8930", VA = "0x7A8930")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x7A89A8", Offset = "0x7A89A8", VA = "0x7A89A8")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x7A84C4", Offset = "0x7A84C4", VA = "0x7A84C4")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x7A8880", Offset = "0x7A8880", VA = "0x7A8880")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x7A874C", Offset = "0x7A874C", VA = "0x7A874C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x7A8878", Offset = "0x7A8878", VA = "0x7A8878")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x7A8BA0", Offset = "0x7A8BA0", VA = "0x7A8BA0")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x20000C6")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x200025E")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x40009A1")]
		Unknown = -2250,
		[Token(Token = "0x40009A2")]
		CannotCreateContext = -2251,
		[Token(Token = "0x40009A3")]
		InvalidParam = -2252,
		[Token(Token = "0x40009A4")]
		BadSampleRate = -2253,
		[Token(Token = "0x40009A5")]
		MissingDLL = -2254,
		[Token(Token = "0x40009A6")]
		BadVersion = -2255,
		[Token(Token = "0x40009A7")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x200025F")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x40009A9")]
		None
	}

	[Token(Token = "0x4000433")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000434")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000411")]
	[Address(RVA = "0x7AC948", Offset = "0x7AC948", VA = "0x7AC948")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000412")]
	[Address(RVA = "0x7AC9D8", Offset = "0x7AC9D8", VA = "0x7AC9D8")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000413")]
	[Address(RVA = "0x7ACA48", Offset = "0x7ACA48", VA = "0x7ACA48")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000414")]
	[Address(RVA = "0x7ACAE0", Offset = "0x7ACAE0", VA = "0x7ACAE0")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000415")]
	[Address(RVA = "0x7ACB60", Offset = "0x7ACB60", VA = "0x7ACB60")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000416")]
	[Address(RVA = "0x7ACBE0", Offset = "0x7ACBE0", VA = "0x7ACBE0")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x7ACC78", Offset = "0x7ACC78", VA = "0x7ACC78")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000418")]
	[Address(RVA = "0x7ACD18", Offset = "0x7ACD18", VA = "0x7ACD18")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000419")]
	[Address(RVA = "0x7ACDB8", Offset = "0x7ACDB8", VA = "0x7ACDB8")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x7ACE48", Offset = "0x7ACE48", VA = "0x7ACE48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x7AD1D4", Offset = "0x7AD1D4", VA = "0x7AD1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x7AD1D8", Offset = "0x7AD1D8", VA = "0x7AD1D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x7AD1DC", Offset = "0x7AD1DC", VA = "0x7AD1DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x7AD2E8", Offset = "0x7AD2E8", VA = "0x7AD2E8")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x7AD350", Offset = "0x7AD350", VA = "0x7AD350")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x7AD430", Offset = "0x7AD430", VA = "0x7AD430")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x7AD510", Offset = "0x7AD510", VA = "0x7AD510")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x7AD60C", Offset = "0x7AD60C", VA = "0x7AD60C")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x7AD6F8", Offset = "0x7AD6F8", VA = "0x7AD6F8")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x7AD7E4", Offset = "0x7AD7E4", VA = "0x7AD7E4")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x7AD8C8", Offset = "0x7AD8C8", VA = "0x7AD8C8")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x413F78", Offset = "0x413F78")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x40009AB")]
		MixInputAudio,
		[Token(Token = "0x40009AC")]
		PitchInputAudio,
		[Token(Token = "0x40009AD")]
		SetBands,
		[Token(Token = "0x40009AE")]
		FormantCorrection,
		[Token(Token = "0x40009AF")]
		Carrier1_TrackPitch,
		[Token(Token = "0x40009B0")]
		Carrier1_Type,
		[Token(Token = "0x40009B1")]
		Carrier1_Gain,
		[Token(Token = "0x40009B2")]
		Carrier1_Frequency,
		[Token(Token = "0x40009B3")]
		Carrier1_Note,
		[Token(Token = "0x40009B4")]
		Carrier1_PulseWidth,
		[Token(Token = "0x40009B5")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x40009B6")]
		Carrier2_TrackPitch,
		[Token(Token = "0x40009B7")]
		Carrier2_Type,
		[Token(Token = "0x40009B8")]
		Carrier2_Gain,
		[Token(Token = "0x40009B9")]
		Carrier2_Frequency,
		[Token(Token = "0x40009BA")]
		Carrier2_Note,
		[Token(Token = "0x40009BB")]
		Carrier2_PulseWidth,
		[Token(Token = "0x40009BC")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x40009BD")]
		Count
	}

	[Token(Token = "0x2000261")]
	public struct VMPreset
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x7AD934", Offset = "0x7AD934", VA = "0x7AD934")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x7AD9FC", Offset = "0x7AD9FC", VA = "0x7AD9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x7ADF94", Offset = "0x7ADF94", VA = "0x7ADF94")]
	private void Update()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x7AE1F4", Offset = "0x7AE1F4", VA = "0x7AE1F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x7AE318", Offset = "0x7AE318", VA = "0x7AE318")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x7AE548", Offset = "0x7AE548", VA = "0x7AE548")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x7AE648", Offset = "0x7AE648", VA = "0x7AE648")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x7AE918", Offset = "0x7AE918", VA = "0x7AE918")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x7AE934", Offset = "0x7AE934", VA = "0x7AE934")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x7AE98C", Offset = "0x7AE98C", VA = "0x7AE98C")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x7AEA30", Offset = "0x7AEA30", VA = "0x7AEA30")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x7AE158", Offset = "0x7AE158", VA = "0x7AE158")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x7ADBE0", Offset = "0x7ADBE0", VA = "0x7ADBE0")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x7AEB10", Offset = "0x7AEB10", VA = "0x7AEB10")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x20000C8")]
public class Shooting : MonoBehaviour
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SimpleShoot simpleShoot;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRGrabbable ovrGrabbable;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button shootingButton;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip shootingAudio;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x5EC550", Offset = "0x5EC550", VA = "0x5EC550")]
	private void Start()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x5EC5D4", Offset = "0x5EC5D4", VA = "0x5EC5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x5EC870", Offset = "0x5EC870", VA = "0x5EC870")]
	public Shooting()
	{
	}
}
[Token(Token = "0x20000C9")]
public class Slowtime : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float fixedDeltaTime;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x5ECDE0", Offset = "0x5ECDE0", VA = "0x5ECDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x5ECE08", Offset = "0x5ECE08", VA = "0x5ECE08")]
	private void Update()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x5ECED4", Offset = "0x5ECED4", VA = "0x5ECED4")]
	public Slowtime()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x5EEDA4", Offset = "0x5EEDA4", VA = "0x5EEDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x5EEE68", Offset = "0x5EEE68", VA = "0x5EEE68")]
	public Spin()
	{
	}
}
[Token(Token = "0x20000CB")]
public class skyboxspace_demo_v1 : MonoBehaviour
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] skyBoxMaterial;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] sunPosition;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int skyBoxLength;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentSkyBoxIndex;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string topText;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float counter;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int frames;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fps;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle whiteStyle;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GUIStyle blackStyle;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sun;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xC603A0", Offset = "0xC603A0", VA = "0xC603A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xC60460", Offset = "0xC60460", VA = "0xC60460")]
	private void Update()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xC605C4", Offset = "0xC605C4", VA = "0xC605C4", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xC60814", Offset = "0xC60814", VA = "0xC60814")]
	private static void DrawText(string text, TextAnchor anchor, int offsetX = 15, int offsetY = 15)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xC60D14", Offset = "0xC60D14", VA = "0xC60D14")]
	public skyboxspace_demo_v1()
	{
	}
}
[Token(Token = "0x20000CC")]
public class skyboxspace_mouselook_v1 : MonoBehaviour
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 clampInDegrees;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 sensitivity;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 smoothing;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 targetDirection;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 targetCharacterDirection;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject characterBody;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xC60D1C", Offset = "0xC60D1C", VA = "0xC60D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC60E94", Offset = "0xC60E94", VA = "0xC60E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC6145C", Offset = "0xC6145C", VA = "0xC6145C")]
	public skyboxspace_mouselook_v1()
	{
	}
}
[Token(Token = "0x20000CD")]
public class VRRenderScale : MonoBehaviour
{
	[Token(Token = "0x6000445")]
	[Address(RVA = "0x5F4264", Offset = "0x5F4264", VA = "0x5F4264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x5F4270", Offset = "0x5F4270", VA = "0x5F4270")]
	public VRRenderScale()
	{
	}
}
[Token(Token = "0x20000CE")]
public class VibrationManager : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VibrationManager singleton;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x5F430C", Offset = "0x5F430C", VA = "0x5F430C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x5EC708", Offset = "0x5EC708", VA = "0x5EC708")]
	public void TriggerVibration(AudioClip vibrationAudio, OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x5F4410", Offset = "0x5F4410", VA = "0x5F4410")]
	public VibrationManager()
	{
	}
}
[Token(Token = "0x20000CF")]
public class LeaderBoardSample : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	private enum gameState
	{
		[Token(Token = "0x40009D3")]
		waiting,
		[Token(Token = "0x40009D4")]
		running,
		[Token(Token = "0x40009D5")]
		enterscore,
		[Token(Token = "0x40009D6")]
		leaderboard
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int totalScore;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playerName;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string code;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private gameState gs;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private dreamloLeaderBoard dl;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private dreamloPromoCode pc;

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x593558", Offset = "0x593558", VA = "0x593558")]
	private void Start()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x5935B0", Offset = "0x5935B0", VA = "0x5935B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x593668", Offset = "0x593668", VA = "0x593668")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x594704", Offset = "0x594704", VA = "0x594704")]
	public LeaderBoardSample()
	{
	}
}
[Token(Token = "0x20000D0")]
public class dreamloLeaderBoard : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	public struct Score
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerName;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int score;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int seconds;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string shortText;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string dateString;
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4152B4", Offset = "0x4152B4")]
	private sealed class <GetRequest>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x5F69C4", Offset = "0x5F69C4", VA = "0x5F69C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x5F6A2C", Offset = "0x5F6A2C", VA = "0x5F6A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x5F6054", Offset = "0x5F6054", VA = "0x5F6054")]
		[DebuggerHidden]
		public <GetRequest>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x5F6798", Offset = "0x5F6798", VA = "0x5F6798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x5F6874", Offset = "0x5F6874", VA = "0x5F6874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x5F67B4", Offset = "0x5F67B4", VA = "0x5F67B4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x5F69CC", Offset = "0x5F69CC", VA = "0x5F69CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4152C4", Offset = "0x4152C4")]
	private sealed class <>c
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Score> <>9__18_0;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Score> <>9__19_0;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x5F676C", Offset = "0x5F676C", VA = "0x5F676C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x5F6774", Offset = "0x5F6774", VA = "0x5F6774")]
		internal int <ToListLowToHigh>b__18_0(Score x, Score y)
		{
			return default(int);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x5F6788", Offset = "0x5F6788", VA = "0x5F6788")]
		internal int <ToListHighToLow>b__19_0(Score x, Score y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IUpgradedAndGotSSL;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string privateCode;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string publicCode;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string highScores;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x5F5414", Offset = "0x5F5414", VA = "0x5F5414")]
	private void Start()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x5F54C0", Offset = "0x5F54C0", VA = "0x5F54C0")]
	public static dreamloLeaderBoard GetSceneDreamloLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x5F55A4", Offset = "0x5F55A4", VA = "0x5F55A4")]
	public void AddScore(string playerName, int totalScore)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x5F57EC", Offset = "0x5F57EC", VA = "0x5F57EC")]
	public void AddScore(string playerName, int totalScore, int totalSeconds)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x5F5AB4", Offset = "0x5F5AB4", VA = "0x5F5AB4")]
	public void AddScore(string playerName, int totalScore, int totalSeconds, string shortText)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x5F55A8", Offset = "0x5F55A8", VA = "0x5F55A8")]
	private void AddScoreWithPipe(string playerName, int totalScore)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x5F57F0", Offset = "0x5F57F0", VA = "0x5F57F0")]
	private void AddScoreWithPipe(string playerName, int totalScore, int totalSeconds)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x5F5AB8", Offset = "0x5F5AB8", VA = "0x5F5AB8")]
	private void AddScoreWithPipe(string playerName, int totalScore, int totalSeconds, string shortText)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x5F5F18", Offset = "0x5F5F18", VA = "0x5F5F18")]
	private void GetScores()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x5F5FA4", Offset = "0x5F5FA4", VA = "0x5F5FA4")]
	private void GetSingleScore(string playerName)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x5F5E80", Offset = "0x5F5E80", VA = "0x5F5E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B260", Offset = "0x41B260")]
	private IEnumerator GetRequest(string url)
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x5F6080", Offset = "0x5F6080", VA = "0x5F6080")]
	public string[] ToStringArray()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x5F6140", Offset = "0x5F6140", VA = "0x5F6140")]
	public List<Score> ToListLowToHigh()
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x5F64E0", Offset = "0x5F64E0", VA = "0x5F64E0")]
	public List<Score> ToListHighToLow()
	{
		return null;
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x5F629C", Offset = "0x5F629C", VA = "0x5F629C")]
	public Score[] ToScoreArray()
	{
		return null;
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x5F5DFC", Offset = "0x5F5DFC", VA = "0x5F5DFC")]
	private string Clean(string s)
	{
		return null;
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x5F663C", Offset = "0x5F663C", VA = "0x5F663C")]
	private int CheckInt(string s)
	{
		return default(int);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x5F666C", Offset = "0x5F666C", VA = "0x5F666C")]
	public dreamloLeaderBoard()
	{
	}
}
[Token(Token = "0x20000D1")]
public class dreamloPromoCode : MonoBehaviour
{
	[Token(Token = "0x2000266")]
	public enum State
	{
		[Token(Token = "0x40009E5")]
		None,
		[Token(Token = "0x40009E6")]
		WaitingForResponse,
		[Token(Token = "0x40009E7")]
		ERROR,
		[Token(Token = "0x40009E8")]
		OK
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4152D4", Offset = "0x4152D4")]
	private sealed class <WebService>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public dreamloPromoCode <>4__this;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x5F71B0", Offset = "0x5F71B0", VA = "0x5F71B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x5F7218", Offset = "0x5F7218", VA = "0x5F7218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x5F6CB0", Offset = "0x5F6CB0", VA = "0x5F6CB0")]
		[DebuggerHidden]
		public <WebService>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x5F6D74", Offset = "0x5F6D74", VA = "0x5F6D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x5F6E50", Offset = "0x5F6E50", VA = "0x5F6E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x5F6D90", Offset = "0x5F6D90", VA = "0x5F6D90")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x5F71B8", Offset = "0x5F71B8", VA = "0x5F71B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string publicCode;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string value;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string error;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public State state;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x5F6A34", Offset = "0x5F6A34", VA = "0x5F6A34")]
	public static dreamloPromoCode GetSceneDreamloPromoCode()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x5F6B18", Offset = "0x5F6B18", VA = "0x5F6B18")]
	public void RedeemCode(string code)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x5F6C18", Offset = "0x5F6C18", VA = "0x5F6C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B2C4", Offset = "0x41B2C4")]
	private IEnumerator WebService(string url)
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x5F6CDC", Offset = "0x5F6CDC", VA = "0x5F6CDC")]
	public dreamloPromoCode()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000D2")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000034")]
		public bool Highlight
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0x64DE74", Offset = "0x64DE74", VA = "0x64DE74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000465")]
			[Address(RVA = "0x64DE7C", Offset = "0x64DE7C", VA = "0x64DE7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x64DE88", Offset = "0x64DE88", VA = "0x64DE88")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x64E054", Offset = "0x64E054", VA = "0x64E054", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x64E07C", Offset = "0x64E07C", VA = "0x64E07C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x64E0A4", Offset = "0x64E0A4", VA = "0x64E0A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x64DF54", Offset = "0x64DF54", VA = "0x64DF54")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x64E334", Offset = "0x64E334", VA = "0x64E334")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000035")]
		public bool InRange
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x64E420", Offset = "0x64E420", VA = "0x64E420")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x64E428", Offset = "0x64E428", VA = "0x64E428")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public bool Targeted
		{
			[Token(Token = "0x600046F")]
			[Address(RVA = "0x64E5DC", Offset = "0x64E5DC", VA = "0x64E5DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000470")]
			[Address(RVA = "0x64E5E4", Offset = "0x64E5E4", VA = "0x64E5E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x64E5F0", Offset = "0x64E5F0", VA = "0x64E5F0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x64E434", Offset = "0x64E434", VA = "0x64E434")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x64E814", Offset = "0x64E814", VA = "0x64E814")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x64E8F4", Offset = "0x64E8F4", VA = "0x64E8F4")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x64E9B8", Offset = "0x64E9B8", VA = "0x64E9B8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x413FDC", Offset = "0x413FDC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_player;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000037")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0x64E9C0", Offset = "0x64E9C0", VA = "0x64E9C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x64E9C8", Offset = "0x64E9C8", VA = "0x64E9C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x64E9E4", Offset = "0x64E9E4", VA = "0x64E9E4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x64EB80", Offset = "0x64EB80", VA = "0x64EB80")]
		private void Update()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x64F528", Offset = "0x64F528", VA = "0x64F528", Slot = "6")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x64FB38", Offset = "0x64FB38", VA = "0x64FB38", Slot = "7")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x65011C", Offset = "0x65011C", VA = "0x65011C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x64EE60", Offset = "0x64EE60", VA = "0x64EE60")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x6501F8", Offset = "0x6501F8", VA = "0x6501F8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x650688", Offset = "0x650688", VA = "0x650688", Slot = "8")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x6506A0", Offset = "0x6506A0", VA = "0x6506A0", Slot = "9")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x6506A8", Offset = "0x6506A8", VA = "0x6506A8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x650944", Offset = "0x650944", VA = "0x650944")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x6509F4", Offset = "0x6509F4", VA = "0x6509F4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x650AA0", Offset = "0x650AA0", VA = "0x650AA0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000268")]
		public enum CrosshairState
		{
			[Token(Token = "0x40009EF")]
			Disabled,
			[Token(Token = "0x40009F0")]
			Enabled,
			[Token(Token = "0x40009F1")]
			Targeted
		}

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x650AA8", Offset = "0x650AA8", VA = "0x650AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x64E778", Offset = "0x64E778", VA = "0x64E778")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x650B18", Offset = "0x650B18", VA = "0x650B18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x650B60", Offset = "0x650B60", VA = "0x650B60")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0x6522BC", Offset = "0x6522BC", VA = "0x6522BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x652388", Offset = "0x652388", VA = "0x652388")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x652394", Offset = "0x652394", VA = "0x652394")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x6523A0", Offset = "0x6523A0", VA = "0x6523A0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool museSpherecast;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000038")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0x6506C8", Offset = "0x6506C8", VA = "0x6506C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048E")]
			[Address(RVA = "0x6506D0", Offset = "0x6506D0", VA = "0x6506D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0x650758", Offset = "0x650758", VA = "0x650758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000490")]
			[Address(RVA = "0x650760", Offset = "0x650760", VA = "0x650760")]
			set
			{
			}
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x6507CC", Offset = "0x6507CC", VA = "0x6507CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x65091C", Offset = "0x65091C", VA = "0x65091C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x65092C", Offset = "0x65092C", VA = "0x65092C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x65093C", Offset = "0x65093C", VA = "0x65093C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40004A2")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40004A3")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40004A4")]
		EUDT_None,
		[Token(Token = "0x40004A5")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000DA")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4152E4", Offset = "0x4152E4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E9B")]
				[Address(RVA = "0x65224C", Offset = "0x65224C", VA = "0x65224C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0x6522B4", Offset = "0x6522B4", VA = "0x6522B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x6518A0", Offset = "0x6518A0", VA = "0x6518A0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x651FE4", Offset = "0x651FE4", VA = "0x651FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x651FE8", Offset = "0x651FE8", VA = "0x651FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x652254", Offset = "0x652254", VA = "0x652254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40004A7")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40004A8")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40004A9")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4170FC", Offset = "0x4170FC")]
		public GameObject mainCamera;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x417134", Offset = "0x417134")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x650B68", Offset = "0x650B68", VA = "0x650B68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x6513A4", Offset = "0x6513A4", VA = "0x6513A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x6514E4", Offset = "0x6514E4", VA = "0x6514E4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x651618", Offset = "0x651618", VA = "0x651618")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x65174C", Offset = "0x65174C", VA = "0x65174C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x6514B8", Offset = "0x6514B8", VA = "0x6514B8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x651824", Offset = "0x651824", VA = "0x651824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B328", Offset = "0x41B328")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x6518CC", Offset = "0x6518CC", VA = "0x6518CC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x650EEC", Offset = "0x650EEC", VA = "0x650EEC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x6519F4", Offset = "0x6519F4", VA = "0x6519F4")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x651900", Offset = "0x651900", VA = "0x651900")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x651D90", Offset = "0x651D90", VA = "0x651D90")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x651E6C", Offset = "0x651E6C", VA = "0x651E6C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x651EF4", Offset = "0x651EF4", VA = "0x651EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B38C", Offset = "0x41B38C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x651F44", Offset = "0x651F44", VA = "0x651F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B39C", Offset = "0x41B39C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x651F94", Offset = "0x651F94", VA = "0x651F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B3AC", Offset = "0x41B3AC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x415040", Offset = "0x415040")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4152F4", Offset = "0x4152F4")]
		private sealed class <>c
		{
			[Token(Token = "0x40009F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x7AC018", Offset = "0x7AC018", VA = "0x7AC018")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x7AC020", Offset = "0x7AC020", VA = "0x7AC020")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004BE")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40004BF")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40004C0")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40004C1")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40004C2")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40004C3")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40004C4")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40004C5")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40004C6")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40004C7")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40004C8")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x7AB2FC", Offset = "0x7AB2FC", VA = "0x7AB2FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x7AB35C", Offset = "0x7AB35C", VA = "0x7AB35C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x7AB784", Offset = "0x7AB784", VA = "0x7AB784")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x7AB890", Offset = "0x7AB890", VA = "0x7AB890")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x7ABBC8", Offset = "0x7ABBC8", VA = "0x7ABBC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x7ABD30", Offset = "0x7ABD30", VA = "0x7ABD30")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x7ABE7C", Offset = "0x7ABE7C", VA = "0x7ABE7C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x7AB92C", Offset = "0x7AB92C", VA = "0x7AB92C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x7AB9CC", Offset = "0x7AB9CC", VA = "0x7AB9CC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x7AB5D8", Offset = "0x7AB5D8", VA = "0x7AB5D8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x7ABF98", Offset = "0x7ABF98", VA = "0x7ABF98")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public enum HandPoseId
	{
		[Token(Token = "0x40004DB")]
		Default,
		[Token(Token = "0x40004DC")]
		Generic,
		[Token(Token = "0x40004DD")]
		PingPongBall,
		[Token(Token = "0x40004DE")]
		Controller
	}
	[Token(Token = "0x20000DD")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700003A")]
		public bool AllowPointing
		{
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0x7AC04C", Offset = "0x7AC04C", VA = "0x7AC04C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003B")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x7AC054", Offset = "0x7AC054", VA = "0x7AC054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003C")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0x7AC05C", Offset = "0x7AC05C", VA = "0x7AC05C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x7AC064", Offset = "0x7AC064", VA = "0x7AC064")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x7AC06C", Offset = "0x7AC06C", VA = "0x7AC06C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x7AC2E0", Offset = "0x7AC2E0", VA = "0x7AC2E0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x7AC33C", Offset = "0x7AC33C", VA = "0x7AC33C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x7AC380", Offset = "0x7AC380", VA = "0x7AC380")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000DF")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40004E6")]
		TRIANGLES,
		[Token(Token = "0x40004E7")]
		QUADS
	}
	[Token(Token = "0x20000E0")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40004E9")]
		ABSORPTION,
		[Token(Token = "0x40004EA")]
		TRANSMISSION,
		[Token(Token = "0x40004EB")]
		SCATTERING
	}
	[Token(Token = "0x20000E1")]
	public struct MeshGroup
	{
		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000E2")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x84E758", Offset = "0x84E758", VA = "0x84E758")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x84E840", Offset = "0x84E840", VA = "0x84E840")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x84E948", Offset = "0x84E948", VA = "0x84E948")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x84EA50", Offset = "0x84EA50", VA = "0x84EA50")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x84EAA0", Offset = "0x84EAA0", VA = "0x84EAA0", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40004F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4171EC", Offset = "0x4171EC")]
		Unknown,
		[Token(Token = "0x40004F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417224", Offset = "0x417224")]
		Object,
		[Token(Token = "0x40004F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41725C", Offset = "0x41725C")]
		User
	}
	[Token(Token = "0x20000E4")]
	public enum AchievementType
	{
		[Token(Token = "0x40004F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417294", Offset = "0x417294")]
		Unknown,
		[Token(Token = "0x40004F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4172CC", Offset = "0x4172CC")]
		Simple,
		[Token(Token = "0x40004F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417304", Offset = "0x417304")]
		Bitfield,
		[Token(Token = "0x40004F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41733C", Offset = "0x41733C")]
		Count
	}
	[Token(Token = "0x20000E5")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x84FCF0", Offset = "0x84FCF0", VA = "0x84FCF0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x84FE3C", Offset = "0x84FE3C", VA = "0x84FE3C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x84FFBC", Offset = "0x84FFBC", VA = "0x84FFBC")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x8504E4", Offset = "0x8504E4", VA = "0x8504E4")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x8505CC", Offset = "0x8505CC", VA = "0x8505CC")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x85028C", Offset = "0x85028C", VA = "0x85028C")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x8506F0", Offset = "0x8506F0", VA = "0x8506F0", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class CAPI
	{
		[Token(Token = "0x200026B")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x46A454", Offset = "0x46A454", VA = "0x46A454")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x46A498", Offset = "0x46A498", VA = "0x46A498")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x46A4E0", Offset = "0x46A4E0", VA = "0x46A4E0")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x200026C")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x46A5EC", Offset = "0x46A5EC", VA = "0x46A5EC")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x200026D")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x200026E")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x415304", Offset = "0x415304")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40004FB")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40004FD")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x851DD8", Offset = "0x851DD8", VA = "0x851DD8")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x851F98", Offset = "0x851F98", VA = "0x851F98")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x852488", Offset = "0x852488", VA = "0x852488")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x852544", Offset = "0x852544", VA = "0x852544")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x85284C", Offset = "0x85284C", VA = "0x85284C")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x852964", Offset = "0x852964", VA = "0x852964")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x8529F0", Offset = "0x8529F0", VA = "0x8529F0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x852A60", Offset = "0x852A60", VA = "0x852A60")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x852B44", Offset = "0x852B44", VA = "0x852B44")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x852BE8", Offset = "0x852BE8", VA = "0x852BE8")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x84FDA0", Offset = "0x84FDA0", VA = "0x84FDA0")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x852D58", Offset = "0x852D58", VA = "0x852D58")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x84FF24", Offset = "0x84FF24", VA = "0x84FF24")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x852DD8", Offset = "0x852DD8", VA = "0x852DD8")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x852E84", Offset = "0x852E84", VA = "0x852E84")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x852F68", Offset = "0x852F68", VA = "0x852F68")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x853014", Offset = "0x853014", VA = "0x853014")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x8530C0", Offset = "0x8530C0", VA = "0x8530C0")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x853168", Offset = "0x853168", VA = "0x853168")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x853204", Offset = "0x853204", VA = "0x853204")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x853264", Offset = "0x853264", VA = "0x853264")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x8532D8", Offset = "0x8532D8", VA = "0x8532D8")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x85334C", Offset = "0x85334C", VA = "0x85334C")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x8533CC", Offset = "0x8533CC", VA = "0x8533CC")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x85344C", Offset = "0x85344C", VA = "0x85344C")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x8534C0", Offset = "0x8534C0", VA = "0x8534C0")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x853540", Offset = "0x853540", VA = "0x853540")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x8535B4", Offset = "0x8535B4", VA = "0x8535B4")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x853634", Offset = "0x853634", VA = "0x853634")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x8536D4", Offset = "0x8536D4", VA = "0x8536D4")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x853748", Offset = "0x853748", VA = "0x853748")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x8537C8", Offset = "0x8537C8", VA = "0x8537C8")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x853848", Offset = "0x853848", VA = "0x853848")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x8538C8", Offset = "0x8538C8", VA = "0x8538C8")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x84FAD0", Offset = "0x84FAD0", VA = "0x84FAD0")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x853938", Offset = "0x853938", VA = "0x853938")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x8539A8", Offset = "0x8539A8", VA = "0x8539A8")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x853A2C", Offset = "0x853A2C", VA = "0x853A2C")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x853AC0", Offset = "0x853AC0", VA = "0x853AC0")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x853DC4", Offset = "0x853DC4", VA = "0x853DC4")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x8503F8", Offset = "0x8503F8", VA = "0x8503F8")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x853E64", Offset = "0x853E64", VA = "0x853E64")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x853F58", Offset = "0x853F58", VA = "0x853F58")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x8540B4", Offset = "0x8540B4", VA = "0x8540B4")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x85415C", Offset = "0x85415C", VA = "0x85415C")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x8541D8", Offset = "0x8541D8", VA = "0x8541D8")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x854240", Offset = "0x854240", VA = "0x854240")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x8542C0", Offset = "0x8542C0", VA = "0x8542C0")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x854340", Offset = "0x854340", VA = "0x854340")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x8543BC", Offset = "0x8543BC", VA = "0x8543BC")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x85443C", Offset = "0x85443C", VA = "0x85443C")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x8544AC", Offset = "0x8544AC", VA = "0x8544AC")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x85452C", Offset = "0x85452C", VA = "0x85452C")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x8545B4", Offset = "0x8545B4", VA = "0x8545B4")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x854634", Offset = "0x854634", VA = "0x854634")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x8546A8", Offset = "0x8546A8", VA = "0x8546A8")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x854760", Offset = "0x854760", VA = "0x854760")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x854808", Offset = "0x854808", VA = "0x854808")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x85487C", Offset = "0x85487C", VA = "0x85487C")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x8548F0", Offset = "0x8548F0", VA = "0x8548F0")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x85496C", Offset = "0x85496C", VA = "0x85496C")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x8549E0", Offset = "0x8549E0", VA = "0x8549E0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x854A60", Offset = "0x854A60", VA = "0x854A60")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x854AE0", Offset = "0x854AE0", VA = "0x854AE0")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x854B60", Offset = "0x854B60", VA = "0x854B60")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x854BD4", Offset = "0x854BD4", VA = "0x854BD4")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x854C74", Offset = "0x854C74", VA = "0x854C74")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x854D14", Offset = "0x854D14", VA = "0x854D14")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x854D94", Offset = "0x854D94", VA = "0x854D94")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x854E4C", Offset = "0x854E4C", VA = "0x854E4C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x854F04", Offset = "0x854F04", VA = "0x854F04")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x854F84", Offset = "0x854F84", VA = "0x854F84")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x855004", Offset = "0x855004", VA = "0x855004")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x855094", Offset = "0x855094", VA = "0x855094")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x855108", Offset = "0x855108", VA = "0x855108")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x85517C", Offset = "0x85517C", VA = "0x85517C")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x8551FC", Offset = "0x8551FC", VA = "0x8551FC")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x85527C", Offset = "0x85527C", VA = "0x85527C")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x8552FC", Offset = "0x8552FC", VA = "0x8552FC")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x85537C", Offset = "0x85537C", VA = "0x85537C")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x84ECF4", Offset = "0x84ECF4", VA = "0x84ECF4")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x8553FC", Offset = "0x8553FC", VA = "0x8553FC")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x84EECC", Offset = "0x84EECC", VA = "0x84EECC")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x85548C", Offset = "0x85548C", VA = "0x85548C")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x84F0A8", Offset = "0x84F0A8", VA = "0x84F0A8")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x84F224", Offset = "0x84F224", VA = "0x84F224")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x84F3C4", Offset = "0x84F3C4", VA = "0x84F3C4")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x84F644", Offset = "0x84F644", VA = "0x84F644")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x84F8B0", Offset = "0x84F8B0", VA = "0x84F8B0")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x85551C", Offset = "0x85551C", VA = "0x85551C")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x85559C", Offset = "0x85559C", VA = "0x85559C")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x85562C", Offset = "0x85562C", VA = "0x85562C")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x8500CC", Offset = "0x8500CC", VA = "0x8500CC")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x8502DC", Offset = "0x8502DC", VA = "0x8502DC")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x8556A0", Offset = "0x8556A0", VA = "0x8556A0")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x855714", Offset = "0x855714", VA = "0x855714")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x855788", Offset = "0x855788", VA = "0x855788")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x855830", Offset = "0x855830", VA = "0x855830")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x85093C", Offset = "0x85093C", VA = "0x85093C")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x850AD4", Offset = "0x850AD4", VA = "0x850AD4")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x850C6C", Offset = "0x850C6C", VA = "0x850C6C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x8558B0", Offset = "0x8558B0", VA = "0x8558B0")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x850E2C", Offset = "0x850E2C", VA = "0x850E2C")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x850FC4", Offset = "0x850FC4", VA = "0x850FC4")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x85115C", Offset = "0x85115C", VA = "0x85115C")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x855930", Offset = "0x855930", VA = "0x855930")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x85131C", Offset = "0x85131C", VA = "0x85131C")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x8514B4", Offset = "0x8514B4", VA = "0x8514B4")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x85164C", Offset = "0x85164C", VA = "0x85164C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x8559B0", Offset = "0x8559B0", VA = "0x8559B0")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x8517FC", Offset = "0x8517FC", VA = "0x8517FC")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x851988", Offset = "0x851988", VA = "0x851988")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x851B20", Offset = "0x851B20", VA = "0x851B20")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x851CB8", Offset = "0x851CB8", VA = "0x851CB8")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x855A30", Offset = "0x855A30", VA = "0x855A30")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x855AB0", Offset = "0x855AB0", VA = "0x855AB0")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x855B84", Offset = "0x855B84", VA = "0x855B84")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x855C14", Offset = "0x855C14", VA = "0x855C14")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x855CC4", Offset = "0x855CC4", VA = "0x855CC4")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x855D64", Offset = "0x855D64", VA = "0x855D64")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x855E14", Offset = "0x855E14", VA = "0x855E14")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x855EE8", Offset = "0x855EE8", VA = "0x855EE8")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x855F78", Offset = "0x855F78", VA = "0x855F78")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x85604C", Offset = "0x85604C", VA = "0x85604C")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x8560DC", Offset = "0x8560DC", VA = "0x8560DC")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x856184", Offset = "0x856184", VA = "0x856184")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x856204", Offset = "0x856204", VA = "0x856204")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x8562D8", Offset = "0x8562D8", VA = "0x8562D8")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x856368", Offset = "0x856368", VA = "0x856368")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x856410", Offset = "0x856410", VA = "0x856410")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x856490", Offset = "0x856490", VA = "0x856490")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x856564", Offset = "0x856564", VA = "0x856564")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x8565F4", Offset = "0x8565F4", VA = "0x8565F4")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x8566E8", Offset = "0x8566E8", VA = "0x8566E8")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x856780", Offset = "0x856780", VA = "0x856780")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x856874", Offset = "0x856874", VA = "0x856874")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x85690C", Offset = "0x85690C", VA = "0x85690C")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x856A28", Offset = "0x856A28", VA = "0x856A28")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x856AF0", Offset = "0x856AF0", VA = "0x856AF0")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x856B64", Offset = "0x856B64", VA = "0x856B64")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x856BD8", Offset = "0x856BD8", VA = "0x856BD8")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x856C80", Offset = "0x856C80", VA = "0x856C80")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x856D00", Offset = "0x856D00", VA = "0x856D00")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x856DA8", Offset = "0x856DA8", VA = "0x856DA8")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x856E28", Offset = "0x856E28", VA = "0x856E28")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x856E9C", Offset = "0x856E9C", VA = "0x856E9C")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x856F44", Offset = "0x856F44", VA = "0x856F44")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x856FC4", Offset = "0x856FC4", VA = "0x856FC4")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x85706C", Offset = "0x85706C", VA = "0x85706C")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x8570E8", Offset = "0x8570E8", VA = "0x8570E8")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x857190", Offset = "0x857190", VA = "0x857190")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x857210", Offset = "0x857210", VA = "0x857210")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x8572E4", Offset = "0x8572E4", VA = "0x8572E4")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x857374", Offset = "0x857374", VA = "0x857374")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x8574D0", Offset = "0x8574D0", VA = "0x8574D0")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x85765C", Offset = "0x85765C", VA = "0x85765C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x857704", Offset = "0x857704", VA = "0x857704")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x857784", Offset = "0x857784", VA = "0x857784")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x85782C", Offset = "0x85782C", VA = "0x85782C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x8578AC", Offset = "0x8578AC", VA = "0x8578AC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x857A00", Offset = "0x857A00", VA = "0x857A00")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x857A74", Offset = "0x857A74", VA = "0x857A74")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x857AE8", Offset = "0x857AE8", VA = "0x857AE8")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x857B90", Offset = "0x857B90", VA = "0x857B90")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x857C10", Offset = "0x857C10", VA = "0x857C10")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x857C84", Offset = "0x857C84", VA = "0x857C84")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x857D2C", Offset = "0x857D2C", VA = "0x857D2C")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x857DAC", Offset = "0x857DAC", VA = "0x857DAC")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x857E7C", Offset = "0x857E7C", VA = "0x857E7C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x857F24", Offset = "0x857F24", VA = "0x857F24")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x857FE4", Offset = "0x857FE4", VA = "0x857FE4")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x85807C", Offset = "0x85807C", VA = "0x85807C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000570")]
		[Address(RVA = "0x8580FC", Offset = "0x8580FC", VA = "0x8580FC")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x85817C", Offset = "0x85817C", VA = "0x85817C")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x858254", Offset = "0x858254", VA = "0x858254")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x85830C", Offset = "0x85830C", VA = "0x85830C")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x858380", Offset = "0x858380", VA = "0x858380")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x858428", Offset = "0x858428", VA = "0x858428")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000576")]
		[Address(RVA = "0x8584A8", Offset = "0x8584A8", VA = "0x8584A8")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x85851C", Offset = "0x85851C", VA = "0x85851C")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000578")]
		[Address(RVA = "0x858590", Offset = "0x858590", VA = "0x858590")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x858604", Offset = "0x858604", VA = "0x858604")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x858694", Offset = "0x858694", VA = "0x858694")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x858708", Offset = "0x858708", VA = "0x858708")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x85877C", Offset = "0x85877C", VA = "0x85877C")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x8587FC", Offset = "0x8587FC", VA = "0x8587FC")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x85887C", Offset = "0x85887C", VA = "0x85887C")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x858934", Offset = "0x858934", VA = "0x858934")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x8589C4", Offset = "0x8589C4", VA = "0x8589C4")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x858A7C", Offset = "0x858A7C", VA = "0x858A7C")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x858B0C", Offset = "0x858B0C", VA = "0x858B0C")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x858BE0", Offset = "0x858BE0", VA = "0x858BE0")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x858C70", Offset = "0x858C70", VA = "0x858C70")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x858CE4", Offset = "0x858CE4", VA = "0x858CE4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x858DB4", Offset = "0x858DB4", VA = "0x858DB4")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x858E5C", Offset = "0x858E5C", VA = "0x858E5C")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x858F14", Offset = "0x858F14", VA = "0x858F14")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x858FA4", Offset = "0x858FA4", VA = "0x858FA4")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x859064", Offset = "0x859064", VA = "0x859064")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x8590FC", Offset = "0x8590FC", VA = "0x8590FC")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x8591B4", Offset = "0x8591B4", VA = "0x8591B4")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x859244", Offset = "0x859244", VA = "0x859244")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x8592FC", Offset = "0x8592FC", VA = "0x8592FC")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x85938C", Offset = "0x85938C", VA = "0x85938C")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x859444", Offset = "0x859444", VA = "0x859444")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x8594D4", Offset = "0x8594D4", VA = "0x8594D4")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x859564", Offset = "0x859564", VA = "0x859564")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x8595F4", Offset = "0x8595F4", VA = "0x8595F4")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x859668", Offset = "0x859668", VA = "0x859668")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x859728", Offset = "0x859728", VA = "0x859728")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x8597C0", Offset = "0x8597C0", VA = "0x8597C0")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x859850", Offset = "0x859850", VA = "0x859850")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x859904", Offset = "0x859904", VA = "0x859904")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x859A60", Offset = "0x859A60", VA = "0x859A60")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x859AE0", Offset = "0x859AE0", VA = "0x859AE0")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x859BBC", Offset = "0x859BBC", VA = "0x859BBC")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x859C54", Offset = "0x859C54", VA = "0x859C54")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x859CC8", Offset = "0x859CC8", VA = "0x859CC8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x859D48", Offset = "0x859D48", VA = "0x859D48")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x859DBC", Offset = "0x859DBC", VA = "0x859DBC")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x859E4C", Offset = "0x859E4C", VA = "0x859E4C")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x859ECC", Offset = "0x859ECC", VA = "0x859ECC")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x859F40", Offset = "0x859F40", VA = "0x859F40")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x859FC0", Offset = "0x859FC0", VA = "0x859FC0")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x85A04C", Offset = "0x85A04C", VA = "0x85A04C")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x85A0CC", Offset = "0x85A0CC", VA = "0x85A0CC")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x85A14C", Offset = "0x85A14C", VA = "0x85A14C")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x85A1C0", Offset = "0x85A1C0", VA = "0x85A1C0")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x85A234", Offset = "0x85A234", VA = "0x85A234")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x85A2B4", Offset = "0x85A2B4", VA = "0x85A2B4")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x85A34C", Offset = "0x85A34C", VA = "0x85A34C")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x85A3E4", Offset = "0x85A3E4", VA = "0x85A3E4")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x85A464", Offset = "0x85A464", VA = "0x85A464")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x85A4D8", Offset = "0x85A4D8", VA = "0x85A4D8")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x85A558", Offset = "0x85A558", VA = "0x85A558")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x85A5CC", Offset = "0x85A5CC", VA = "0x85A5CC")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x85A64C", Offset = "0x85A64C", VA = "0x85A64C")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x85A6C0", Offset = "0x85A6C0", VA = "0x85A6C0")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x85A740", Offset = "0x85A740", VA = "0x85A740")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x85A7FC", Offset = "0x85A7FC", VA = "0x85A7FC")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x85A88C", Offset = "0x85A88C", VA = "0x85A88C")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x85A91C", Offset = "0x85A91C", VA = "0x85A91C")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x85A9AC", Offset = "0x85A9AC", VA = "0x85A9AC")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x85AA40", Offset = "0x85AA40", VA = "0x85AA40")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x85AAC0", Offset = "0x85AAC0", VA = "0x85AAC0")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x85AB40", Offset = "0x85AB40", VA = "0x85AB40")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x85ABFC", Offset = "0x85ABFC", VA = "0x85ABFC")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x85AC8C", Offset = "0x85AC8C", VA = "0x85AC8C")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x85AD40", Offset = "0x85AD40", VA = "0x85AD40")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x85AE98", Offset = "0x85AE98", VA = "0x85AE98")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x85AF28", Offset = "0x85AF28", VA = "0x85AF28")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x85AFB8", Offset = "0x85AFB8", VA = "0x85AFB8")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x85B048", Offset = "0x85B048", VA = "0x85B048")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x85B0C8", Offset = "0x85B0C8", VA = "0x85B0C8")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x85B148", Offset = "0x85B148", VA = "0x85B148")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x85B1F0", Offset = "0x85B1F0", VA = "0x85B1F0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x85B270", Offset = "0x85B270", VA = "0x85B270")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x85B2F0", Offset = "0x85B2F0", VA = "0x85B2F0")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x85B364", Offset = "0x85B364", VA = "0x85B364")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x85B3E4", Offset = "0x85B3E4", VA = "0x85B3E4")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x85B458", Offset = "0x85B458", VA = "0x85B458")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x85B4CC", Offset = "0x85B4CC", VA = "0x85B4CC")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x85B540", Offset = "0x85B540", VA = "0x85B540")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x85B5C0", Offset = "0x85B5C0", VA = "0x85B5C0")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x85B640", Offset = "0x85B640", VA = "0x85B640")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x85B6B4", Offset = "0x85B6B4", VA = "0x85B6B4")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x85B728", Offset = "0x85B728", VA = "0x85B728")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x85B7A8", Offset = "0x85B7A8", VA = "0x85B7A8")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x85B828", Offset = "0x85B828", VA = "0x85B828")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x85B8A8", Offset = "0x85B8A8", VA = "0x85B8A8")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x85B928", Offset = "0x85B928", VA = "0x85B928")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x85B9B8", Offset = "0x85B9B8", VA = "0x85B9B8")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x85BA38", Offset = "0x85BA38", VA = "0x85BA38")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x85BAAC", Offset = "0x85BAAC", VA = "0x85BAAC")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x85BB20", Offset = "0x85BB20", VA = "0x85BB20")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x85BB94", Offset = "0x85BB94", VA = "0x85BB94")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x85BC08", Offset = "0x85BC08", VA = "0x85BC08")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x85BCC4", Offset = "0x85BCC4", VA = "0x85BCC4")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x85BD54", Offset = "0x85BD54", VA = "0x85BD54")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x85BE18", Offset = "0x85BE18", VA = "0x85BE18")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x85BEB0", Offset = "0x85BEB0", VA = "0x85BEB0")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x85BF70", Offset = "0x85BF70", VA = "0x85BF70")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x85C010", Offset = "0x85C010", VA = "0x85C010")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x85C090", Offset = "0x85C090", VA = "0x85C090")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x85C0F8", Offset = "0x85C0F8", VA = "0x85C0F8")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x85C178", Offset = "0x85C178", VA = "0x85C178")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x85C1F8", Offset = "0x85C1F8", VA = "0x85C1F8")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x85C260", Offset = "0x85C260", VA = "0x85C260")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x85C2E0", Offset = "0x85C2E0", VA = "0x85C2E0")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x85C360", Offset = "0x85C360", VA = "0x85C360")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x85C3E0", Offset = "0x85C3E0", VA = "0x85C3E0")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x85C470", Offset = "0x85C470", VA = "0x85C470")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x85C4D8", Offset = "0x85C4D8", VA = "0x85C4D8")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x85C558", Offset = "0x85C558", VA = "0x85C558")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x85C5D8", Offset = "0x85C5D8", VA = "0x85C5D8")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x85C660", Offset = "0x85C660", VA = "0x85C660")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x85C6C8", Offset = "0x85C6C8", VA = "0x85C6C8")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x85C748", Offset = "0x85C748", VA = "0x85C748")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x85C7C8", Offset = "0x85C7C8", VA = "0x85C7C8")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x85C850", Offset = "0x85C850", VA = "0x85C850")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x85C8B8", Offset = "0x85C8B8", VA = "0x85C8B8")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x85C938", Offset = "0x85C938", VA = "0x85C938")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x85C9A0", Offset = "0x85C9A0", VA = "0x85C9A0")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x85CA20", Offset = "0x85CA20", VA = "0x85CA20")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x85CAB0", Offset = "0x85CAB0", VA = "0x85CAB0")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x85CB18", Offset = "0x85CB18", VA = "0x85CB18")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x85CB98", Offset = "0x85CB98", VA = "0x85CB98")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x85CC18", Offset = "0x85CC18", VA = "0x85CC18")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x85CCA0", Offset = "0x85CCA0", VA = "0x85CCA0")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x85CD28", Offset = "0x85CD28", VA = "0x85CD28")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x85CD90", Offset = "0x85CD90", VA = "0x85CD90")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x85CE10", Offset = "0x85CE10", VA = "0x85CE10")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x85CE90", Offset = "0x85CE90", VA = "0x85CE90")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x85CF10", Offset = "0x85CF10", VA = "0x85CF10")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x85CF78", Offset = "0x85CF78", VA = "0x85CF78")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x85CFF8", Offset = "0x85CFF8", VA = "0x85CFF8")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x85D078", Offset = "0x85D078", VA = "0x85D078")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x85D0E0", Offset = "0x85D0E0", VA = "0x85D0E0")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x85D160", Offset = "0x85D160", VA = "0x85D160")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x85D1E0", Offset = "0x85D1E0", VA = "0x85D1E0")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x85D248", Offset = "0x85D248", VA = "0x85D248")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x85D2C8", Offset = "0x85D2C8", VA = "0x85D2C8")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x85D330", Offset = "0x85D330", VA = "0x85D330")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x85D3B0", Offset = "0x85D3B0", VA = "0x85D3B0")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x85D418", Offset = "0x85D418", VA = "0x85D418")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x85D498", Offset = "0x85D498", VA = "0x85D498")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x85D500", Offset = "0x85D500", VA = "0x85D500")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x85D580", Offset = "0x85D580", VA = "0x85D580")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x85D600", Offset = "0x85D600", VA = "0x85D600")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x85D668", Offset = "0x85D668", VA = "0x85D668")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x85D6E8", Offset = "0x85D6E8", VA = "0x85D6E8")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x85D778", Offset = "0x85D778", VA = "0x85D778")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x85D7F8", Offset = "0x85D7F8", VA = "0x85D7F8")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x85D878", Offset = "0x85D878", VA = "0x85D878")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x85D8F8", Offset = "0x85D8F8", VA = "0x85D8F8")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x85D960", Offset = "0x85D960", VA = "0x85D960")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x85D9E0", Offset = "0x85D9E0", VA = "0x85D9E0")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x85DA68", Offset = "0x85DA68", VA = "0x85DA68")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x85DAE8", Offset = "0x85DAE8", VA = "0x85DAE8")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x85DB68", Offset = "0x85DB68", VA = "0x85DB68")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x85DBD0", Offset = "0x85DBD0", VA = "0x85DBD0")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x85DC50", Offset = "0x85DC50", VA = "0x85DC50")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x85DCD8", Offset = "0x85DCD8", VA = "0x85DCD8")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x85DD58", Offset = "0x85DD58", VA = "0x85DD58")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x85DDC0", Offset = "0x85DDC0", VA = "0x85DDC0")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x85DE40", Offset = "0x85DE40", VA = "0x85DE40")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x85DEC0", Offset = "0x85DEC0", VA = "0x85DEC0")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x85DF40", Offset = "0x85DF40", VA = "0x85DF40")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x85DFC0", Offset = "0x85DFC0", VA = "0x85DFC0")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x85E040", Offset = "0x85E040", VA = "0x85E040")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x85E0C8", Offset = "0x85E0C8", VA = "0x85E0C8")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x85E148", Offset = "0x85E148", VA = "0x85E148")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x85E1C8", Offset = "0x85E1C8", VA = "0x85E1C8")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x85E230", Offset = "0x85E230", VA = "0x85E230")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x85E2B0", Offset = "0x85E2B0", VA = "0x85E2B0")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x85E330", Offset = "0x85E330", VA = "0x85E330")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x85E3B0", Offset = "0x85E3B0", VA = "0x85E3B0")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x85E418", Offset = "0x85E418", VA = "0x85E418")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x85E498", Offset = "0x85E498", VA = "0x85E498")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x85E528", Offset = "0x85E528", VA = "0x85E528")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x85E5A8", Offset = "0x85E5A8", VA = "0x85E5A8")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x85E610", Offset = "0x85E610", VA = "0x85E610")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x85E690", Offset = "0x85E690", VA = "0x85E690")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x85E710", Offset = "0x85E710", VA = "0x85E710")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x85E790", Offset = "0x85E790", VA = "0x85E790")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x85E7F8", Offset = "0x85E7F8", VA = "0x85E7F8")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x85E878", Offset = "0x85E878", VA = "0x85E878")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x85E974", Offset = "0x85E974", VA = "0x85E974")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x85E8F4", Offset = "0x85E8F4", VA = "0x85E8F4")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x85E9F4", Offset = "0x85E9F4", VA = "0x85E9F4")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x85EA5C", Offset = "0x85EA5C", VA = "0x85EA5C")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x85EADC", Offset = "0x85EADC", VA = "0x85EADC")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x85EB44", Offset = "0x85EB44", VA = "0x85EB44")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x85EBC4", Offset = "0x85EBC4", VA = "0x85EBC4")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x85EC44", Offset = "0x85EC44", VA = "0x85EC44")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x85ECC4", Offset = "0x85ECC4", VA = "0x85ECC4")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x85ED2C", Offset = "0x85ED2C", VA = "0x85ED2C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x85EDAC", Offset = "0x85EDAC", VA = "0x85EDAC")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x85EE14", Offset = "0x85EE14", VA = "0x85EE14")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x85EE94", Offset = "0x85EE94", VA = "0x85EE94")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x85EF14", Offset = "0x85EF14", VA = "0x85EF14")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x85EF94", Offset = "0x85EF94", VA = "0x85EF94")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x85EFFC", Offset = "0x85EFFC", VA = "0x85EFFC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x85F07C", Offset = "0x85F07C", VA = "0x85F07C")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x85F10C", Offset = "0x85F10C", VA = "0x85F10C")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x85F174", Offset = "0x85F174", VA = "0x85F174")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x85F1F4", Offset = "0x85F1F4", VA = "0x85F1F4")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x85F274", Offset = "0x85F274", VA = "0x85F274")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x85F2FC", Offset = "0x85F2FC", VA = "0x85F2FC")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000649")]
		[Address(RVA = "0x85F364", Offset = "0x85F364", VA = "0x85F364")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x85F3E4", Offset = "0x85F3E4", VA = "0x85F3E4")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x85F44C", Offset = "0x85F44C", VA = "0x85F44C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x85F4CC", Offset = "0x85F4CC", VA = "0x85F4CC")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x85F54C", Offset = "0x85F54C", VA = "0x85F54C")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600064E")]
		[Address(RVA = "0x85F5B4", Offset = "0x85F5B4", VA = "0x85F5B4")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x85F634", Offset = "0x85F634", VA = "0x85F634")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000650")]
		[Address(RVA = "0x85F6F0", Offset = "0x85F6F0", VA = "0x85F6F0")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x852714", Offset = "0x852714", VA = "0x852714")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x85F780", Offset = "0x85F780", VA = "0x85F780")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x852694", Offset = "0x852694", VA = "0x852694")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x85278C", Offset = "0x85278C", VA = "0x85278C")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x85F810", Offset = "0x85F810", VA = "0x85F810")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x85F8A0", Offset = "0x85F8A0", VA = "0x85F8A0")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000657")]
		[Address(RVA = "0x85F908", Offset = "0x85F908", VA = "0x85F908")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x85F988", Offset = "0x85F988", VA = "0x85F988")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x85F9F0", Offset = "0x85F9F0", VA = "0x85F9F0")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x85FA70", Offset = "0x85FA70", VA = "0x85FA70")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x85FAD8", Offset = "0x85FAD8", VA = "0x85FAD8")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x85FB58", Offset = "0x85FB58", VA = "0x85FB58")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x85FBE8", Offset = "0x85FBE8", VA = "0x85FBE8")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x85FC50", Offset = "0x85FC50", VA = "0x85FC50")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x85FCD0", Offset = "0x85FCD0", VA = "0x85FCD0")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x85FD50", Offset = "0x85FD50", VA = "0x85FD50")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x85FDD8", Offset = "0x85FDD8", VA = "0x85FDD8")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x85FE54", Offset = "0x85FE54", VA = "0x85FE54")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x85FEBC", Offset = "0x85FEBC", VA = "0x85FEBC")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x85FF3C", Offset = "0x85FF3C", VA = "0x85FF3C")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x85FFBC", Offset = "0x85FFBC", VA = "0x85FFBC")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x860024", Offset = "0x860024", VA = "0x860024")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x8600A4", Offset = "0x8600A4", VA = "0x8600A4")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x860124", Offset = "0x860124", VA = "0x860124")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x8601A4", Offset = "0x8601A4", VA = "0x8601A4")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x860224", Offset = "0x860224", VA = "0x860224")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x8602AC", Offset = "0x8602AC", VA = "0x8602AC")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x860314", Offset = "0x860314", VA = "0x860314")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x860394", Offset = "0x860394", VA = "0x860394")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x8603FC", Offset = "0x8603FC", VA = "0x8603FC")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x86047C", Offset = "0x86047C", VA = "0x86047C")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x8604E4", Offset = "0x8604E4", VA = "0x8604E4")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x860564", Offset = "0x860564", VA = "0x860564")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x8605E4", Offset = "0x8605E4", VA = "0x8605E4")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x86064C", Offset = "0x86064C", VA = "0x86064C")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x8606CC", Offset = "0x8606CC", VA = "0x8606CC")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x86075C", Offset = "0x86075C", VA = "0x86075C")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x8607DC", Offset = "0x8607DC", VA = "0x8607DC")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x860844", Offset = "0x860844", VA = "0x860844")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x8608C4", Offset = "0x8608C4", VA = "0x8608C4")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x86092C", Offset = "0x86092C", VA = "0x86092C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x8609AC", Offset = "0x8609AC", VA = "0x8609AC")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x860A14", Offset = "0x860A14", VA = "0x860A14")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x860A94", Offset = "0x860A94", VA = "0x860A94")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x860B1C", Offset = "0x860B1C", VA = "0x860B1C")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x860BA4", Offset = "0x860BA4", VA = "0x860BA4")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x860C0C", Offset = "0x860C0C", VA = "0x860C0C")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x860C8C", Offset = "0x860C8C", VA = "0x860C8C")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x860CF4", Offset = "0x860CF4", VA = "0x860CF4")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x860D74", Offset = "0x860D74", VA = "0x860D74")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x860DF4", Offset = "0x860DF4", VA = "0x860DF4")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x860E74", Offset = "0x860E74", VA = "0x860E74")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x860EF4", Offset = "0x860EF4", VA = "0x860EF4")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x860F7C", Offset = "0x860F7C", VA = "0x860F7C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x861004", Offset = "0x861004", VA = "0x861004")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x86108C", Offset = "0x86108C", VA = "0x86108C")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x86110C", Offset = "0x86110C", VA = "0x86110C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x861194", Offset = "0x861194", VA = "0x861194")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x86121C", Offset = "0x86121C", VA = "0x86121C")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x861318", Offset = "0x861318", VA = "0x861318")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x861298", Offset = "0x861298", VA = "0x861298")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x861398", Offset = "0x861398", VA = "0x861398")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x861418", Offset = "0x861418", VA = "0x861418")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x861498", Offset = "0x861498", VA = "0x861498")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x861500", Offset = "0x861500", VA = "0x861500")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x861580", Offset = "0x861580", VA = "0x861580")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x861600", Offset = "0x861600", VA = "0x861600")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x861690", Offset = "0x861690", VA = "0x861690")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x8616F8", Offset = "0x8616F8", VA = "0x8616F8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x861778", Offset = "0x861778", VA = "0x861778")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x8617E0", Offset = "0x8617E0", VA = "0x8617E0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x861860", Offset = "0x861860", VA = "0x861860")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x8618E0", Offset = "0x8618E0", VA = "0x8618E0")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x861960", Offset = "0x861960", VA = "0x861960")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x8619E8", Offset = "0x8619E8", VA = "0x8619E8")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x861A70", Offset = "0x861A70", VA = "0x861A70")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x861AF8", Offset = "0x861AF8", VA = "0x861AF8")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x861B60", Offset = "0x861B60", VA = "0x861B60")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x861BE0", Offset = "0x861BE0", VA = "0x861BE0")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x861C60", Offset = "0x861C60", VA = "0x861C60")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x861CC8", Offset = "0x861CC8", VA = "0x861CC8")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x861D48", Offset = "0x861D48", VA = "0x861D48")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x861DD8", Offset = "0x861DD8", VA = "0x861DD8")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x861E58", Offset = "0x861E58", VA = "0x861E58")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x861EE0", Offset = "0x861EE0", VA = "0x861EE0")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x861F60", Offset = "0x861F60", VA = "0x861F60")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x861FE8", Offset = "0x861FE8", VA = "0x861FE8")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x862070", Offset = "0x862070", VA = "0x862070")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x8620F8", Offset = "0x8620F8", VA = "0x8620F8")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x862178", Offset = "0x862178", VA = "0x862178")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x862200", Offset = "0x862200", VA = "0x862200")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x862280", Offset = "0x862280", VA = "0x862280")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x862300", Offset = "0x862300", VA = "0x862300")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x862368", Offset = "0x862368", VA = "0x862368")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x8623E8", Offset = "0x8623E8", VA = "0x8623E8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x862468", Offset = "0x862468", VA = "0x862468")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x8624E8", Offset = "0x8624E8", VA = "0x8624E8")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x862570", Offset = "0x862570", VA = "0x862570")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x8625F0", Offset = "0x8625F0", VA = "0x8625F0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x862670", Offset = "0x862670", VA = "0x862670")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x8626F0", Offset = "0x8626F0", VA = "0x8626F0")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x862758", Offset = "0x862758", VA = "0x862758")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x8627D8", Offset = "0x8627D8", VA = "0x8627D8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x862868", Offset = "0x862868", VA = "0x862868")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x8628E8", Offset = "0x8628E8", VA = "0x8628E8")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x862968", Offset = "0x862968", VA = "0x862968")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x8629E8", Offset = "0x8629E8", VA = "0x8629E8")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x862A50", Offset = "0x862A50", VA = "0x862A50")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x862AD0", Offset = "0x862AD0", VA = "0x862AD0")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x862B50", Offset = "0x862B50", VA = "0x862B50")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x862BE0", Offset = "0x862BE0", VA = "0x862BE0")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x862C48", Offset = "0x862C48", VA = "0x862C48")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x862CC8", Offset = "0x862CC8", VA = "0x862CC8")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x862D48", Offset = "0x862D48", VA = "0x862D48")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x862DD0", Offset = "0x862DD0", VA = "0x862DD0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x862E50", Offset = "0x862E50", VA = "0x862E50")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x862ED0", Offset = "0x862ED0", VA = "0x862ED0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x862F50", Offset = "0x862F50", VA = "0x862F50")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x862FD0", Offset = "0x862FD0", VA = "0x862FD0")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x863038", Offset = "0x863038", VA = "0x863038")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x8630B8", Offset = "0x8630B8", VA = "0x8630B8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x863138", Offset = "0x863138", VA = "0x863138")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x8631A0", Offset = "0x8631A0", VA = "0x8631A0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x863220", Offset = "0x863220", VA = "0x863220")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x8632A0", Offset = "0x8632A0", VA = "0x8632A0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x863320", Offset = "0x863320", VA = "0x863320")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x8633B0", Offset = "0x8633B0", VA = "0x8633B0")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x863430", Offset = "0x863430", VA = "0x863430")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x8634B0", Offset = "0x8634B0", VA = "0x8634B0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x863530", Offset = "0x863530", VA = "0x863530")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x8635C0", Offset = "0x8635C0", VA = "0x8635C0")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x863640", Offset = "0x863640", VA = "0x863640")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x8636C0", Offset = "0x8636C0", VA = "0x8636C0")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x863740", Offset = "0x863740", VA = "0x863740")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x8637A8", Offset = "0x8637A8", VA = "0x8637A8")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x863828", Offset = "0x863828", VA = "0x863828")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x8638A8", Offset = "0x8638A8", VA = "0x8638A8")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x863928", Offset = "0x863928", VA = "0x863928")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x8639B0", Offset = "0x8639B0", VA = "0x8639B0")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x863A40", Offset = "0x863A40", VA = "0x863A40")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x863AC0", Offset = "0x863AC0", VA = "0x863AC0")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x863B40", Offset = "0x863B40", VA = "0x863B40")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x863BC0", Offset = "0x863BC0", VA = "0x863BC0")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x863C40", Offset = "0x863C40", VA = "0x863C40")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x863CC0", Offset = "0x863CC0", VA = "0x863CC0")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x863D40", Offset = "0x863D40", VA = "0x863D40")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x863DC0", Offset = "0x863DC0", VA = "0x863DC0")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x863E40", Offset = "0x863E40", VA = "0x863E40")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x863EC0", Offset = "0x863EC0", VA = "0x863EC0")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x863F40", Offset = "0x863F40", VA = "0x863F40")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x863FC0", Offset = "0x863FC0", VA = "0x863FC0")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x864040", Offset = "0x864040", VA = "0x864040")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x8640C0", Offset = "0x8640C0", VA = "0x8640C0")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x864140", Offset = "0x864140", VA = "0x864140")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x8641C0", Offset = "0x8641C0", VA = "0x8641C0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x864240", Offset = "0x864240", VA = "0x864240")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x8642C0", Offset = "0x8642C0", VA = "0x8642C0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x864340", Offset = "0x864340", VA = "0x864340")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x8643C0", Offset = "0x8643C0", VA = "0x8643C0")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x864440", Offset = "0x864440", VA = "0x864440")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x8644C0", Offset = "0x8644C0", VA = "0x8644C0")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x864540", Offset = "0x864540", VA = "0x864540")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x8645C0", Offset = "0x8645C0", VA = "0x8645C0")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x864640", Offset = "0x864640", VA = "0x864640")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x8646C0", Offset = "0x8646C0", VA = "0x8646C0")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x864740", Offset = "0x864740", VA = "0x864740")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x8647C0", Offset = "0x8647C0", VA = "0x8647C0")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x864840", Offset = "0x864840", VA = "0x864840")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x8648C0", Offset = "0x8648C0", VA = "0x8648C0")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x864940", Offset = "0x864940", VA = "0x864940")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x8649C0", Offset = "0x8649C0", VA = "0x8649C0")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x864A40", Offset = "0x864A40", VA = "0x864A40")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x864AC0", Offset = "0x864AC0", VA = "0x864AC0")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x864B40", Offset = "0x864B40", VA = "0x864B40")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x864BC0", Offset = "0x864BC0", VA = "0x864BC0")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x864C40", Offset = "0x864C40", VA = "0x864C40")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x864CC0", Offset = "0x864CC0", VA = "0x864CC0")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x864D40", Offset = "0x864D40", VA = "0x864D40")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x864DC0", Offset = "0x864DC0", VA = "0x864DC0")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x864E40", Offset = "0x864E40", VA = "0x864E40")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x864EC0", Offset = "0x864EC0", VA = "0x864EC0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x864F40", Offset = "0x864F40", VA = "0x864F40")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x864FC0", Offset = "0x864FC0", VA = "0x864FC0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x865040", Offset = "0x865040", VA = "0x865040")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x8650C0", Offset = "0x8650C0", VA = "0x8650C0")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x865140", Offset = "0x865140", VA = "0x865140")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x8651C0", Offset = "0x8651C0", VA = "0x8651C0")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x865240", Offset = "0x865240", VA = "0x865240")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x8652C0", Offset = "0x8652C0", VA = "0x8652C0")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x865340", Offset = "0x865340", VA = "0x865340")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x8653C0", Offset = "0x8653C0", VA = "0x8653C0")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x865440", Offset = "0x865440", VA = "0x865440")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x8654C0", Offset = "0x8654C0", VA = "0x8654C0")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x865540", Offset = "0x865540", VA = "0x865540")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x8655C0", Offset = "0x8655C0", VA = "0x8655C0")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x865640", Offset = "0x865640", VA = "0x865640")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x8656C0", Offset = "0x8656C0", VA = "0x8656C0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x865740", Offset = "0x865740", VA = "0x865740")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x8657C0", Offset = "0x8657C0", VA = "0x8657C0")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x865840", Offset = "0x865840", VA = "0x865840")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x8658C0", Offset = "0x8658C0", VA = "0x8658C0")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x865940", Offset = "0x865940", VA = "0x865940")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x8659C0", Offset = "0x8659C0", VA = "0x8659C0")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x865A40", Offset = "0x865A40", VA = "0x865A40")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x865AC0", Offset = "0x865AC0", VA = "0x865AC0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x865B40", Offset = "0x865B40", VA = "0x865B40")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x865BA8", Offset = "0x865BA8", VA = "0x865BA8")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x865C28", Offset = "0x865C28", VA = "0x865C28")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x865CA8", Offset = "0x865CA8", VA = "0x865CA8")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x865D28", Offset = "0x865D28", VA = "0x865D28")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x865DA8", Offset = "0x865DA8", VA = "0x865DA8")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x865E28", Offset = "0x865E28", VA = "0x865E28")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x865EA8", Offset = "0x865EA8", VA = "0x865EA8")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x865F28", Offset = "0x865F28", VA = "0x865F28")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x865FA8", Offset = "0x865FA8", VA = "0x865FA8")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x866028", Offset = "0x866028", VA = "0x866028")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x8660B0", Offset = "0x8660B0", VA = "0x8660B0")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x866130", Offset = "0x866130", VA = "0x866130")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x8661B0", Offset = "0x8661B0", VA = "0x8661B0")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x866250", Offset = "0x866250", VA = "0x866250")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x8662F0", Offset = "0x8662F0", VA = "0x8662F0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x866390", Offset = "0x866390", VA = "0x866390")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x866420", Offset = "0x866420", VA = "0x866420")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x8664A0", Offset = "0x8664A0", VA = "0x8664A0")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x866520", Offset = "0x866520", VA = "0x866520")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x8665A0", Offset = "0x8665A0", VA = "0x8665A0")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x866620", Offset = "0x866620", VA = "0x866620")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x8666A0", Offset = "0x8666A0", VA = "0x8666A0")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x866720", Offset = "0x866720", VA = "0x866720")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x8667A0", Offset = "0x8667A0", VA = "0x8667A0")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x866820", Offset = "0x866820", VA = "0x866820")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x8668A0", Offset = "0x8668A0", VA = "0x8668A0")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x866920", Offset = "0x866920", VA = "0x866920")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x8669A0", Offset = "0x8669A0", VA = "0x8669A0")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x866A20", Offset = "0x866A20", VA = "0x866A20")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x866AA0", Offset = "0x866AA0", VA = "0x866AA0")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x866B1C", Offset = "0x866B1C", VA = "0x866B1C")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x866B9C", Offset = "0x866B9C", VA = "0x866B9C")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x866C18", Offset = "0x866C18", VA = "0x866C18")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x866C98", Offset = "0x866C98", VA = "0x866C98")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x866D18", Offset = "0x866D18", VA = "0x866D18")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x866D98", Offset = "0x866D98", VA = "0x866D98")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x866E00", Offset = "0x866E00", VA = "0x866E00")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x866E80", Offset = "0x866E80", VA = "0x866E80")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x866EE8", Offset = "0x866EE8", VA = "0x866EE8")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x866F68", Offset = "0x866F68", VA = "0x866F68")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x866FE8", Offset = "0x866FE8", VA = "0x866FE8")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x867050", Offset = "0x867050", VA = "0x867050")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x8670D0", Offset = "0x8670D0", VA = "0x8670D0")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x867138", Offset = "0x867138", VA = "0x867138")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x8671B8", Offset = "0x8671B8", VA = "0x8671B8")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x867248", Offset = "0x867248", VA = "0x867248")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x8672C8", Offset = "0x8672C8", VA = "0x8672C8")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x867348", Offset = "0x867348", VA = "0x867348")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x8673C8", Offset = "0x8673C8", VA = "0x8673C8")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x867450", Offset = "0x867450", VA = "0x867450")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x8674D0", Offset = "0x8674D0", VA = "0x8674D0")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x867550", Offset = "0x867550", VA = "0x867550")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x8675B8", Offset = "0x8675B8", VA = "0x8675B8")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x867638", Offset = "0x867638", VA = "0x867638")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x8676A0", Offset = "0x8676A0", VA = "0x8676A0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x867720", Offset = "0x867720", VA = "0x867720")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x867788", Offset = "0x867788", VA = "0x867788")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x867808", Offset = "0x867808", VA = "0x867808")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x867870", Offset = "0x867870", VA = "0x867870")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x8678F0", Offset = "0x8678F0", VA = "0x8678F0")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x867958", Offset = "0x867958", VA = "0x867958")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x8679D8", Offset = "0x8679D8", VA = "0x8679D8")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x867A40", Offset = "0x867A40", VA = "0x867A40")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x867AC0", Offset = "0x867AC0", VA = "0x867AC0")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x867B50", Offset = "0x867B50", VA = "0x867B50")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000760")]
		[Address(RVA = "0x867BB8", Offset = "0x867BB8", VA = "0x867BB8")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000761")]
		[Address(RVA = "0x867C38", Offset = "0x867C38", VA = "0x867C38")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000762")]
		[Address(RVA = "0x867CB8", Offset = "0x867CB8", VA = "0x867CB8")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x867D40", Offset = "0x867D40", VA = "0x867D40")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x867DA8", Offset = "0x867DA8", VA = "0x867DA8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x867E28", Offset = "0x867E28", VA = "0x867E28")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x867E90", Offset = "0x867E90", VA = "0x867E90")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x867F10", Offset = "0x867F10", VA = "0x867F10")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x867F90", Offset = "0x867F90", VA = "0x867F90")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x867FF8", Offset = "0x867FF8", VA = "0x867FF8")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x868078", Offset = "0x868078", VA = "0x868078")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x868108", Offset = "0x868108", VA = "0x868108")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x868170", Offset = "0x868170", VA = "0x868170")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x8681F0", Offset = "0x8681F0", VA = "0x8681F0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x868270", Offset = "0x868270", VA = "0x868270")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x8682F8", Offset = "0x8682F8", VA = "0x8682F8")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x868378", Offset = "0x868378", VA = "0x868378")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x8683F8", Offset = "0x8683F8", VA = "0x8683F8")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x868460", Offset = "0x868460", VA = "0x868460")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x8684E0", Offset = "0x8684E0", VA = "0x8684E0")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x868560", Offset = "0x868560", VA = "0x868560")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x8685E0", Offset = "0x8685E0", VA = "0x8685E0")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x868668", Offset = "0x868668", VA = "0x868668")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x8686E8", Offset = "0x8686E8", VA = "0x8686E8")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x868768", Offset = "0x868768", VA = "0x868768")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x8687E8", Offset = "0x8687E8", VA = "0x8687E8")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x868868", Offset = "0x868868", VA = "0x868868")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x8688D0", Offset = "0x8688D0", VA = "0x8688D0")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x868950", Offset = "0x868950", VA = "0x868950")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x8689CC", Offset = "0x8689CC", VA = "0x8689CC")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x868A48", Offset = "0x868A48", VA = "0x868A48")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x868AC8", Offset = "0x868AC8", VA = "0x868AC8")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x868B44", Offset = "0x868B44", VA = "0x868B44")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x868BC4", Offset = "0x868BC4", VA = "0x868BC4")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x868C54", Offset = "0x868C54", VA = "0x868C54")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x868CBC", Offset = "0x868CBC", VA = "0x868CBC")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x868D3C", Offset = "0x868D3C", VA = "0x868D3C")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x868DBC", Offset = "0x868DBC", VA = "0x868DBC")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x868E44", Offset = "0x868E44", VA = "0x868E44")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x868EC4", Offset = "0x868EC4", VA = "0x868EC4")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x868F44", Offset = "0x868F44", VA = "0x868F44")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x868FC4", Offset = "0x868FC4", VA = "0x868FC4")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x86902C", Offset = "0x86902C", VA = "0x86902C")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x8690AC", Offset = "0x8690AC", VA = "0x8690AC")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x86913C", Offset = "0x86913C", VA = "0x86913C")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x8691A4", Offset = "0x8691A4", VA = "0x8691A4")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x869224", Offset = "0x869224", VA = "0x869224")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x8692A4", Offset = "0x8692A4", VA = "0x8692A4")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000790")]
		[Address(RVA = "0x86932C", Offset = "0x86932C", VA = "0x86932C")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x8693AC", Offset = "0x8693AC", VA = "0x8693AC")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x86942C", Offset = "0x86942C", VA = "0x86942C")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x8694BC", Offset = "0x8694BC", VA = "0x8694BC")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x86953C", Offset = "0x86953C", VA = "0x86953C")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x8695BC", Offset = "0x8695BC", VA = "0x8695BC")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x869644", Offset = "0x869644", VA = "0x869644")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x8696C4", Offset = "0x8696C4", VA = "0x8696C4")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x869744", Offset = "0x869744", VA = "0x869744")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000799")]
		[Address(RVA = "0x8697C4", Offset = "0x8697C4", VA = "0x8697C4")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x869844", Offset = "0x869844", VA = "0x869844")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x8698C4", Offset = "0x8698C4", VA = "0x8698C4")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x869944", Offset = "0x869944", VA = "0x869944")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x8699AC", Offset = "0x8699AC", VA = "0x8699AC")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x869A2C", Offset = "0x869A2C", VA = "0x869A2C")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x869ABC", Offset = "0x869ABC", VA = "0x869ABC")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x869B3C", Offset = "0x869B3C", VA = "0x869B3C")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x869BA4", Offset = "0x869BA4", VA = "0x869BA4")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x869C24", Offset = "0x869C24", VA = "0x869C24")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x869CA4", Offset = "0x869CA4", VA = "0x869CA4")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x869D24", Offset = "0x869D24", VA = "0x869D24")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x869D8C", Offset = "0x869D8C", VA = "0x869D8C")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x869E0C", Offset = "0x869E0C", VA = "0x869E0C")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x869E8C", Offset = "0x869E8C", VA = "0x869E8C")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x869EF4", Offset = "0x869EF4", VA = "0x869EF4")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x869F74", Offset = "0x869F74", VA = "0x869F74")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x869FF4", Offset = "0x869FF4", VA = "0x869FF4")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x86A074", Offset = "0x86A074", VA = "0x86A074")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x86A0DC", Offset = "0x86A0DC", VA = "0x86A0DC")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x86A15C", Offset = "0x86A15C", VA = "0x86A15C")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x86A1DC", Offset = "0x86A1DC", VA = "0x86A1DC")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x86A25C", Offset = "0x86A25C", VA = "0x86A25C")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x86A2EC", Offset = "0x86A2EC", VA = "0x86A2EC")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x86A36C", Offset = "0x86A36C", VA = "0x86A36C")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x86A3EC", Offset = "0x86A3EC", VA = "0x86A3EC")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x86A454", Offset = "0x86A454", VA = "0x86A454")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x86A4D4", Offset = "0x86A4D4", VA = "0x86A4D4")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x86A53C", Offset = "0x86A53C", VA = "0x86A53C")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x86A5BC", Offset = "0x86A5BC", VA = "0x86A5BC")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x86A624", Offset = "0x86A624", VA = "0x86A624")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x86A6A4", Offset = "0x86A6A4", VA = "0x86A6A4")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x86A70C", Offset = "0x86A70C", VA = "0x86A70C")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x86A78C", Offset = "0x86A78C", VA = "0x86A78C")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x86A7F4", Offset = "0x86A7F4", VA = "0x86A7F4")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x86A874", Offset = "0x86A874", VA = "0x86A874")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x86A8F4", Offset = "0x86A8F4", VA = "0x86A8F4")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x86A95C", Offset = "0x86A95C", VA = "0x86A95C")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x86A9DC", Offset = "0x86A9DC", VA = "0x86A9DC")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x86AA5C", Offset = "0x86AA5C", VA = "0x86AA5C")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x86AADC", Offset = "0x86AADC", VA = "0x86AADC")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x86AB6C", Offset = "0x86AB6C", VA = "0x86AB6C")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x86ABD4", Offset = "0x86ABD4", VA = "0x86ABD4")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x86AC54", Offset = "0x86AC54", VA = "0x86AC54")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x86ACD4", Offset = "0x86ACD4", VA = "0x86ACD4")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x86AD5C", Offset = "0x86AD5C", VA = "0x86AD5C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x86ADEC", Offset = "0x86ADEC", VA = "0x86ADEC")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x86AE54", Offset = "0x86AE54", VA = "0x86AE54")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x86AED4", Offset = "0x86AED4", VA = "0x86AED4")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x86AF54", Offset = "0x86AF54", VA = "0x86AF54")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x86AFDC", Offset = "0x86AFDC", VA = "0x86AFDC")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x86B044", Offset = "0x86B044", VA = "0x86B044")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x86B0C4", Offset = "0x86B0C4", VA = "0x86B0C4")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x86B14C", Offset = "0x86B14C", VA = "0x86B14C")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x86B1CC", Offset = "0x86B1CC", VA = "0x86B1CC")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x86B26C", Offset = "0x86B26C", VA = "0x86B26C")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x86B30C", Offset = "0x86B30C", VA = "0x86B30C")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x86B3AC", Offset = "0x86B3AC", VA = "0x86B3AC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x86B44C", Offset = "0x86B44C", VA = "0x86B44C")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x84E7CC", Offset = "0x84E7CC", VA = "0x84E7CC")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x84EB54", Offset = "0x84EB54", VA = "0x84EB54")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x84E8B8", Offset = "0x84E8B8", VA = "0x84E8B8")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x84E9C0", Offset = "0x84E9C0", VA = "0x84E9C0")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x850558", Offset = "0x850558", VA = "0x850558")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x8507A4", Offset = "0x8507A4", VA = "0x8507A4")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x850644", Offset = "0x850644", VA = "0x850644")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x86B4CC", Offset = "0x86B4CC", VA = "0x86B4CC")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x86B55C", Offset = "0x86B55C", VA = "0x86B55C")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x86B5D0", Offset = "0x86B5D0", VA = "0x86B5D0")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x86B650", Offset = "0x86B650", VA = "0x86B650")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x86B71C", Offset = "0x86B71C", VA = "0x86B71C")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x86B7B4", Offset = "0x86B7B4", VA = "0x86B7B4")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x86B834", Offset = "0x86B834", VA = "0x86B834")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x86B8C4", Offset = "0x86B8C4", VA = "0x86B8C4")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x86B954", Offset = "0x86B954", VA = "0x86B954")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x86B9E4", Offset = "0x86B9E4", VA = "0x86B9E4")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x86BA64", Offset = "0x86BA64", VA = "0x86BA64")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x86BB18", Offset = "0x86BB18", VA = "0x86BB18")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x86BBB0", Offset = "0x86BBB0", VA = "0x86BBB0")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x86BC6C", Offset = "0x86BC6C", VA = "0x86BC6C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x86BD0C", Offset = "0x86BD0C", VA = "0x86BD0C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x86BDD8", Offset = "0x86BDD8", VA = "0x86BDD8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x86BE70", Offset = "0x86BE70", VA = "0x86BE70")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x86BEF0", Offset = "0x86BEF0", VA = "0x86BEF0")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x86BF80", Offset = "0x86BF80", VA = "0x86BF80")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x86C02C", Offset = "0x86C02C", VA = "0x86C02C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x86C0BC", Offset = "0x86C0BC", VA = "0x86C0BC")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x86C130", Offset = "0x86C130", VA = "0x86C130")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x86C1B0", Offset = "0x86C1B0", VA = "0x86C1B0")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x86C25C", Offset = "0x86C25C", VA = "0x86C25C")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x86C2EC", Offset = "0x86C2EC", VA = "0x86C2EC")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x86C3B8", Offset = "0x86C3B8", VA = "0x86C3B8")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x86C450", Offset = "0x86C450", VA = "0x86C450")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x86C4D0", Offset = "0x86C4D0", VA = "0x86C4D0")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x86C560", Offset = "0x86C560", VA = "0x86C560")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x86C60C", Offset = "0x86C60C", VA = "0x86C60C")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x86C69C", Offset = "0x86C69C", VA = "0x86C69C")]
		public static extern void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x86C6B8", Offset = "0x86C6B8", VA = "0x86C6B8")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x86C748", Offset = "0x86C748", VA = "0x86C748")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x86C7D8", Offset = "0x86C7D8", VA = "0x86C7D8")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x86C868", Offset = "0x86C868", VA = "0x86C868")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x86C914", Offset = "0x86C914", VA = "0x86C914")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x86C9A4", Offset = "0x86C9A4", VA = "0x86C9A4")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x86CA34", Offset = "0x86CA34", VA = "0x86CA34")]
		public static extern void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x86CA50", Offset = "0x86CA50", VA = "0x86CA50")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x86CAC4", Offset = "0x86CAC4", VA = "0x86CAC4")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x86CB44", Offset = "0x86CB44", VA = "0x86CB44")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x86CC10", Offset = "0x86CC10", VA = "0x86CC10")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x86CCA8", Offset = "0x86CCA8", VA = "0x86CCA8")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x86CD28", Offset = "0x86CD28", VA = "0x86CD28")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x86CDB8", Offset = "0x86CDB8", VA = "0x86CDB8")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x86CE48", Offset = "0x86CE48", VA = "0x86CE48")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x86CED8", Offset = "0x86CED8", VA = "0x86CED8")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x86CF68", Offset = "0x86CF68", VA = "0x86CF68")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x86CFF8", Offset = "0x86CFF8", VA = "0x86CFF8")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x86D088", Offset = "0x86D088", VA = "0x86D088")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x86D0FC", Offset = "0x86D0FC", VA = "0x86D0FC")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x86D17C", Offset = "0x86D17C", VA = "0x86D17C")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x86D20C", Offset = "0x86D20C", VA = "0x86D20C")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x86D29C", Offset = "0x86D29C", VA = "0x86D29C")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x86D31C", Offset = "0x86D31C", VA = "0x86D31C")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x86D3AC", Offset = "0x86D3AC", VA = "0x86D3AC")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x86D420", Offset = "0x86D420", VA = "0x86D420")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x86D4A0", Offset = "0x86D4A0", VA = "0x86D4A0")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x86D530", Offset = "0x86D530", VA = "0x86D530")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x86D5C0", Offset = "0x86D5C0", VA = "0x86D5C0")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public static class Callback
	{
		[Token(Token = "0x2000270")]
		private class RequestCallback
		{
			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x616DEC", Offset = "0x616DEC", VA = "0x616DEC")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x616684", Offset = "0x616684", VA = "0x616684")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x616DF4", Offset = "0x616DF4", VA = "0x616DF4", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x2000271")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6000EAC")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6000EAD")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000818")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x616580", Offset = "0x616580", VA = "0x616580")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x6166B8", Offset = "0x6166B8", VA = "0x6166B8")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x616744", Offset = "0x616744", VA = "0x616744")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x616A50", Offset = "0x616A50", VA = "0x616A50")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x616AE8", Offset = "0x616AE8", VA = "0x616AE8")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x616B84", Offset = "0x616B84", VA = "0x616B84")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x6168B4", Offset = "0x6168B4", VA = "0x6168B4")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x6171BC", Offset = "0x6171BC", VA = "0x6171BC")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x61722C", Offset = "0x61722C", VA = "0x61722C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x617328", Offset = "0x617328", VA = "0x617328")]
		private void Update()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x6173B4", Offset = "0x6173B4", VA = "0x6173B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x6173B8", Offset = "0x6173B8", VA = "0x6173B8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x617414", Offset = "0x617414", VA = "0x617414")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000504")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417374", Offset = "0x417374")]
		Unknown,
		[Token(Token = "0x4000505")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4173AC", Offset = "0x4173AC")]
		InSync,
		[Token(Token = "0x4000506")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4173E4", Offset = "0x4173E4")]
		NeedsDownload,
		[Token(Token = "0x4000507")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41741C", Offset = "0x41741C")]
		RemoteDownloading,
		[Token(Token = "0x4000508")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417454", Offset = "0x417454")]
		NeedsUpload,
		[Token(Token = "0x4000509")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41748C", Offset = "0x41748C")]
		LocalUploading,
		[Token(Token = "0x400050A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4174C4", Offset = "0x4174C4")]
		InConflict
	}
	[Token(Token = "0x20000EB")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x400050C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4174FC", Offset = "0x4174FC")]
		Unknown,
		[Token(Token = "0x400050D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417534", Offset = "0x417534")]
		Ok,
		[Token(Token = "0x400050E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41756C", Offset = "0x41756C")]
		BetterVersionStored,
		[Token(Token = "0x400050F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4175A4", Offset = "0x4175A4")]
		ManualMergeRequired
	}
	[Token(Token = "0x20000EC")]
	public interface IMicrophone
	{
		[Token(Token = "0x6000827")]
		void Start();

		[Token(Token = "0x6000828")]
		void Stop();

		[Token(Token = "0x6000829")]
		float[] Update();
	}
	[Token(Token = "0x20000ED")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x600082A")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x600082B")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x600082C")]
		void Update();

		[Token(Token = "0x600082D")]
		int PeekSizeElements();
	}
	[Token(Token = "0x20000EE")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000511")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4175DC", Offset = "0x4175DC")]
		String,
		[Token(Token = "0x4000512")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417614", Offset = "0x417614")]
		Int,
		[Token(Token = "0x4000513")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41764C", Offset = "0x41764C")]
		Double,
		[Token(Token = "0x4000514")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417684", Offset = "0x417684")]
		Unknown
	}
	[Token(Token = "0x20000EF")]
	public enum LaunchType
	{
		[Token(Token = "0x4000516")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4176BC", Offset = "0x4176BC")]
		Unknown,
		[Token(Token = "0x4000517")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4176F4", Offset = "0x4176F4")]
		Normal,
		[Token(Token = "0x4000518")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41772C", Offset = "0x41772C")]
		Invite,
		[Token(Token = "0x4000519")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417764", Offset = "0x417764")]
		Coordinated,
		[Token(Token = "0x400051A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41779C", Offset = "0x41779C")]
		Deeplink
	}
	[Token(Token = "0x20000F0")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x400051C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4177D4", Offset = "0x4177D4")]
		None,
		[Token(Token = "0x400051D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41780C", Offset = "0x41780C")]
		Friends,
		[Token(Token = "0x400051E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417844", Offset = "0x417844")]
		Unknown
	}
	[Token(Token = "0x20000F1")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4000520")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41787C", Offset = "0x41787C")]
		Top,
		[Token(Token = "0x4000521")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4178B4", Offset = "0x4178B4")]
		CenteredOnViewer,
		[Token(Token = "0x4000522")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4178EC", Offset = "0x4178EC")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000523")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417924", Offset = "0x417924")]
		Unknown
	}
	[Token(Token = "0x20000F2")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000525")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41795C", Offset = "0x41795C")]
		Unknown,
		[Token(Token = "0x4000526")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417994", Offset = "0x417994")]
		Public,
		[Token(Token = "0x4000527")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4179CC", Offset = "0x4179CC")]
		Friends,
		[Token(Token = "0x4000528")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417A04", Offset = "0x417A04")]
		OnlyMe
	}
	[Token(Token = "0x20000F3")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x400052A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417A3C", Offset = "0x417A3C")]
		Unknown,
		[Token(Token = "0x400052B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417A74", Offset = "0x417A74")]
		MicrophoneOn,
		[Token(Token = "0x400052C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417AAC", Offset = "0x417AAC")]
		MicrophoneOff
	}
	[Token(Token = "0x20000F4")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x400052E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417AE4", Offset = "0x417AE4")]
		Success = 1,
		[Token(Token = "0x400052F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417B1C", Offset = "0x417B1C")]
		Unknown = 0,
		[Token(Token = "0x4000530")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417B54", Offset = "0x417B54")]
		NoPackageSet = -1,
		[Token(Token = "0x4000531")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417B8C", Offset = "0x417B8C")]
		NoFbConnect = -2,
		[Token(Token = "0x4000532")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417BC4", Offset = "0x417BC4")]
		NoSessionId = -3,
		[Token(Token = "0x4000533")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417BFC", Offset = "0x417BFC")]
		MissingParameters = -4
	}
	[Token(Token = "0x20000F5")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000535")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417C34", Offset = "0x417C34")]
		Required,
		[Token(Token = "0x4000536")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417C6C", Offset = "0x417C6C")]
		High,
		[Token(Token = "0x4000537")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417CA4", Offset = "0x417CA4")]
		Medium,
		[Token(Token = "0x4000538")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417CDC", Offset = "0x417CDC")]
		Low,
		[Token(Token = "0x4000539")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417D14", Offset = "0x417D14")]
		Unknown
	}
	[Token(Token = "0x20000F6")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x61B9F4", Offset = "0x61B9F4", VA = "0x61B9F4")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x61BA6C", Offset = "0x61BA6C", VA = "0x61BA6C")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x61BAF0", Offset = "0x61BAF0", VA = "0x61BAF0")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x61BB5C", Offset = "0x61BB5C", VA = "0x61BB5C")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x61BBD8", Offset = "0x61BBD8", VA = "0x61BBD8")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x61BC54", Offset = "0x61BC54", VA = "0x61BC54")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x61BCD0", Offset = "0x61BCD0", VA = "0x61BCD0")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x61BD3C", Offset = "0x61BD3C", VA = "0x61BD3C")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x61BDC0", Offset = "0x61BDC0", VA = "0x61BDC0")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x61BE4C", Offset = "0x61BE4C", VA = "0x61BE4C")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x61BED0", Offset = "0x61BED0", VA = "0x61BED0")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x61BF3C", Offset = "0x61BF3C", VA = "0x61BF3C")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x61BFB8", Offset = "0x61BFB8", VA = "0x61BFB8")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x61A960", Offset = "0x61A960", VA = "0x61A960")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x61C034", Offset = "0x61C034", VA = "0x61C034", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x400053C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417D4C", Offset = "0x417D4C")]
		Unknown,
		[Token(Token = "0x400053D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417D84", Offset = "0x417D84")]
		Trailing,
		[Token(Token = "0x400053E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417DBC", Offset = "0x417DBC")]
		Swingy
	}
	[Token(Token = "0x20000F8")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000540")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417DF4", Offset = "0x417DF4")]
		Unknown,
		[Token(Token = "0x4000541")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417E2C", Offset = "0x417E2C")]
		Photo
	}
	[Token(Token = "0x20000F9")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x2000272")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700003D")]
		public T Data
		{
			[Token(Token = "0x600083E")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600083D")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x600083F")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20000FA")]
	public class Message
	{
		[Token(Token = "0x2000273")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000274")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000A0C")]
			Unknown = 0u,
			[Token(Token = "0x4000A0D")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000A0E")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000A0F")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000A10")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000A11")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000A12")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000A13")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000A14")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000A15")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000A16")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000A17")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000A18")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000A19")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000A1A")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000A1B")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000A1C")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000A1D")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000A1E")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000A1F")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000A20")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000A21")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000A22")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000A23")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000A24")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000A25")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000A26")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000A27")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000A28")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000A29")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000A2A")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000A2B")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000A2C")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000A2D")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000A2E")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000A2F")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000A30")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000A31")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000A32")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000A33")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000A34")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000A35")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000A36")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000A37")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000A38")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000A39")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4000A3A")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000A3B")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000A3C")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000A3D")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000A3E")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000A3F")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000A40")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000A41")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000A42")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000A43")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000A44")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000A45")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000A46")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000A47")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000A48")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000A49")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000A4A")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000A4B")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000A4C")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000A4D")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000A4E")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000A4F")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000A50")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000A51")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000A52")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000A53")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000A54")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000A55")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000A56")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000A57")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000A58")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000A59")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000A5A")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000A5B")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000A5C")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000A5D")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000A5E")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000A5F")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000A60")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000A61")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000A62")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000A63")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000A64")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000A65")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000A66")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000A67")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000A68")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000A69")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000A6A")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000A6B")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000A6C")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000A6D")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000A6E")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000A6F")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000A70")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000A71")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000A72")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000A73")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000A74")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000A75")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000A76")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000A77")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000A78")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000A79")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000A7A")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000A7B")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000A7C")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000A7D")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000A7E")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000A7F")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000A80")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000A81")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000A82")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000A83")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000A84")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000A85")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4000A86")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4000A87")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4000A88")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4000A89")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4000A8A")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4000A8B")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000A8C")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000A8D")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000A8E")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000A8F")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000A90")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000A91")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000A92")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000A93")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000A94")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000A95")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000275")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x417E64", Offset = "0x417E64")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700003E")]
		public MessageType Type
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x61C4D0", Offset = "0x61C4D0", VA = "0x61C4D0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700003F")]
		public bool IsError
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x61C4D8", Offset = "0x61C4D8", VA = "0x61C4D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000040")]
		public ulong RequestID
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x61C4E8", Offset = "0x61C4E8", VA = "0x61C4E8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000041")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x61F6D8", Offset = "0x61F6D8", VA = "0x61F6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B3CC", Offset = "0x41B3CC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x61F680", Offset = "0x61F680", VA = "0x61F680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B3BC", Offset = "0x41B3BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x61C220", Offset = "0x61C220", VA = "0x61C220")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x61C4C8", Offset = "0x61C4C8", VA = "0x61C4C8", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x61C4F0", Offset = "0x61C4F0", VA = "0x61C4F0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x61C4F8", Offset = "0x61C4F8", VA = "0x61C4F8", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x61C500", Offset = "0x61C500", VA = "0x61C500", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x61C508", Offset = "0x61C508", VA = "0x61C508", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x61C510", Offset = "0x61C510", VA = "0x61C510", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x61C518", Offset = "0x61C518", VA = "0x61C518", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x61C520", Offset = "0x61C520", VA = "0x61C520", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x61C528", Offset = "0x61C528", VA = "0x61C528", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x61C530", Offset = "0x61C530", VA = "0x61C530", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x61C538", Offset = "0x61C538", VA = "0x61C538", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x61C540", Offset = "0x61C540", VA = "0x61C540", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x61C548", Offset = "0x61C548", VA = "0x61C548", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x61C550", Offset = "0x61C550", VA = "0x61C550", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x61C558", Offset = "0x61C558", VA = "0x61C558", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x61C560", Offset = "0x61C560", VA = "0x61C560", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x61C568", Offset = "0x61C568", VA = "0x61C568", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x61C570", Offset = "0x61C570", VA = "0x61C570", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x61C578", Offset = "0x61C578", VA = "0x61C578", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x61C580", Offset = "0x61C580", VA = "0x61C580", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x61C588", Offset = "0x61C588", VA = "0x61C588", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x61C590", Offset = "0x61C590", VA = "0x61C590", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x61C598", Offset = "0x61C598", VA = "0x61C598", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x61C5A0", Offset = "0x61C5A0", VA = "0x61C5A0", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x61C5A8", Offset = "0x61C5A8", VA = "0x61C5A8", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x61C5B0", Offset = "0x61C5B0", VA = "0x61C5B0", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x61C5B8", Offset = "0x61C5B8", VA = "0x61C5B8", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x61C5C0", Offset = "0x61C5C0", VA = "0x61C5C0", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x61C5C8", Offset = "0x61C5C8", VA = "0x61C5C8", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x61C5D0", Offset = "0x61C5D0", VA = "0x61C5D0", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x61C5D8", Offset = "0x61C5D8", VA = "0x61C5D8", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x61C5E0", Offset = "0x61C5E0", VA = "0x61C5E0", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x61C5E8", Offset = "0x61C5E8", VA = "0x61C5E8", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x61C5F0", Offset = "0x61C5F0", VA = "0x61C5F0", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x61C5F8", Offset = "0x61C5F8", VA = "0x61C5F8", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x61C600", Offset = "0x61C600", VA = "0x61C600", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x61C608", Offset = "0x61C608", VA = "0x61C608", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x61C610", Offset = "0x61C610", VA = "0x61C610", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x61C618", Offset = "0x61C618", VA = "0x61C618", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x61C620", Offset = "0x61C620", VA = "0x61C620", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x61C628", Offset = "0x61C628", VA = "0x61C628", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x61C630", Offset = "0x61C630", VA = "0x61C630", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x61C638", Offset = "0x61C638", VA = "0x61C638", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x61C640", Offset = "0x61C640", VA = "0x61C640", Slot = "46")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x61C648", Offset = "0x61C648", VA = "0x61C648", Slot = "47")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x61C650", Offset = "0x61C650", VA = "0x61C650", Slot = "48")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x61C658", Offset = "0x61C658", VA = "0x61C658", Slot = "49")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x61C660", Offset = "0x61C660", VA = "0x61C660", Slot = "50")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x61C668", Offset = "0x61C668", VA = "0x61C668", Slot = "51")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x61C670", Offset = "0x61C670", VA = "0x61C670", Slot = "52")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x61C678", Offset = "0x61C678", VA = "0x61C678", Slot = "53")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x61C680", Offset = "0x61C680", VA = "0x61C680", Slot = "54")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x61C688", Offset = "0x61C688", VA = "0x61C688", Slot = "55")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x61C690", Offset = "0x61C690", VA = "0x61C690", Slot = "56")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x61C698", Offset = "0x61C698", VA = "0x61C698", Slot = "57")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x61C6A0", Offset = "0x61C6A0", VA = "0x61C6A0", Slot = "58")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x61C6A8", Offset = "0x61C6A8", VA = "0x61C6A8", Slot = "59")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x61C6B0", Offset = "0x61C6B0", VA = "0x61C6B0", Slot = "60")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x61C6B8", Offset = "0x61C6B8", VA = "0x61C6B8", Slot = "61")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x61C6C0", Offset = "0x61C6C0", VA = "0x61C6C0", Slot = "62")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x61C6C8", Offset = "0x61C6C8", VA = "0x61C6C8", Slot = "63")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x61C6D0", Offset = "0x61C6D0", VA = "0x61C6D0", Slot = "64")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x61C6D8", Offset = "0x61C6D8", VA = "0x61C6D8", Slot = "65")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x61C6E0", Offset = "0x61C6E0", VA = "0x61C6E0", Slot = "66")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x61C6E8", Offset = "0x61C6E8", VA = "0x61C6E8", Slot = "67")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x61C6F0", Offset = "0x61C6F0", VA = "0x61C6F0")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x6167C0", Offset = "0x6167C0", VA = "0x6167C0")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20000FB")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x61FABC", Offset = "0x61FABC", VA = "0x61FABC")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x61FB1C", Offset = "0x61FB1C", VA = "0x61FB1C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x61FB60", Offset = "0x61FB60", VA = "0x61FB60", Slot = "68")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FC")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x600088C")]
		[Address(RVA = "0x61DBDC", Offset = "0x61DBDC", VA = "0x61DBDC")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x61FC8C", Offset = "0x61FC8C", VA = "0x61FC8C", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x61FCD0", Offset = "0x61FCD0", VA = "0x61FCD0", Slot = "68")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FD")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0x61DC3C", Offset = "0x61DC3C", VA = "0x61DC3C")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x61FF8C", Offset = "0x61FF8C", VA = "0x61FF8C", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x61FFD0", Offset = "0x61FFD0", VA = "0x61FFD0", Slot = "68")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FE")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0x61DC9C", Offset = "0x61DC9C", VA = "0x61DC9C")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x62028C", Offset = "0x62028C", VA = "0x62028C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x6202D0", Offset = "0x6202D0", VA = "0x6202D0", Slot = "68")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FF")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x61DCFC", Offset = "0x61DCFC", VA = "0x61DCFC")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x620410", Offset = "0x620410", VA = "0x620410", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x620454", Offset = "0x620454", VA = "0x620454", Slot = "68")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000100")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x61DD5C", Offset = "0x61DD5C", VA = "0x61DD5C")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x6205BC", Offset = "0x6205BC", VA = "0x6205BC", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x620600", Offset = "0x620600", VA = "0x620600", Slot = "68")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000101")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x61DDBC", Offset = "0x61DDBC", VA = "0x61DDBC")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x620840", Offset = "0x620840", VA = "0x620840", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x620884", Offset = "0x620884", VA = "0x620884", Slot = "68")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000102")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x61DE1C", Offset = "0x61DE1C", VA = "0x61DE1C")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x620AF8", Offset = "0x620AF8", VA = "0x620AF8", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x620B3C", Offset = "0x620B3C", VA = "0x620B3C", Slot = "68")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000103")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x61DE7C", Offset = "0x61DE7C", VA = "0x61DE7C")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x620CA0", Offset = "0x620CA0", VA = "0x620CA0", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x620CE4", Offset = "0x620CE4", VA = "0x620CE4", Slot = "68")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x61DEDC", Offset = "0x61DEDC", VA = "0x61DEDC")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x620E48", Offset = "0x620E48", VA = "0x620E48", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x620E8C", Offset = "0x620E8C", VA = "0x620E8C", Slot = "68")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000105")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x61DF3C", Offset = "0x61DF3C", VA = "0x61DF3C")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x620FC8", Offset = "0x620FC8", VA = "0x620FC8", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x62100C", Offset = "0x62100C", VA = "0x62100C", Slot = "68")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000106")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x61DF9C", Offset = "0x61DF9C", VA = "0x61DF9C")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x621174", Offset = "0x621174", VA = "0x621174", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x6211B8", Offset = "0x6211B8", VA = "0x6211B8", Slot = "68")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000107")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x61DFFC", Offset = "0x61DFFC", VA = "0x61DFFC")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x621304", Offset = "0x621304", VA = "0x621304", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x621348", Offset = "0x621348", VA = "0x621348", Slot = "68")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000108")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x62146C", Offset = "0x62146C", VA = "0x62146C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x6214CC", Offset = "0x6214CC", VA = "0x6214CC", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x621510", Offset = "0x621510", VA = "0x621510", Slot = "68")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000109")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x61E05C", Offset = "0x61E05C", VA = "0x61E05C")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x621784", Offset = "0x621784", VA = "0x621784", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x6217C8", Offset = "0x6217C8", VA = "0x6217C8", Slot = "68")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010A")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x61E0BC", Offset = "0x61E0BC", VA = "0x61E0BC")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x621958", Offset = "0x621958", VA = "0x621958", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x62199C", Offset = "0x62199C", VA = "0x62199C", Slot = "68")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010B")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x61E11C", Offset = "0x61E11C", VA = "0x61E11C")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x621E10", Offset = "0x621E10", VA = "0x621E10", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x621E54", Offset = "0x621E54", VA = "0x621E54", Slot = "68")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010C")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x61E17C", Offset = "0x61E17C", VA = "0x61E17C")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x621B10", Offset = "0x621B10", VA = "0x621B10", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x621B54", Offset = "0x621B54", VA = "0x621B54", Slot = "68")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010D")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x61E1DC", Offset = "0x61E1DC", VA = "0x61E1DC")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x622014", Offset = "0x622014", VA = "0x622014", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x622058", Offset = "0x622058", VA = "0x622058", Slot = "68")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010E")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x61E23C", Offset = "0x61E23C", VA = "0x61E23C")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x6221CC", Offset = "0x6221CC", VA = "0x6221CC", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x622210", Offset = "0x622210", VA = "0x622210", Slot = "68")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010F")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x622700", Offset = "0x622700", VA = "0x622700")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x622760", Offset = "0x622760", VA = "0x622760", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x6227A4", Offset = "0x6227A4", VA = "0x6227A4", Slot = "68")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x622A18", Offset = "0x622A18", VA = "0x622A18")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x622A78", Offset = "0x622A78", VA = "0x622A78", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x622ABC", Offset = "0x622ABC", VA = "0x622ABC", Slot = "68")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000111")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x61E29C", Offset = "0x61E29C", VA = "0x61E29C")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x622BF8", Offset = "0x622BF8", VA = "0x622BF8", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x622C3C", Offset = "0x622C3C", VA = "0x622C3C", Slot = "68")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x622D78", Offset = "0x622D78", VA = "0x622D78")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x622DD8", Offset = "0x622DD8", VA = "0x622DD8", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x622E1C", Offset = "0x622E1C", VA = "0x622E1C", Slot = "68")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000113")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x622F54", Offset = "0x622F54", VA = "0x622F54")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x622FB4", Offset = "0x622FB4", VA = "0x622FB4", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x622FF8", Offset = "0x622FF8", VA = "0x622FF8", Slot = "68")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x61E2FC", Offset = "0x61E2FC", VA = "0x61E2FC")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x6231F0", Offset = "0x6231F0", VA = "0x6231F0", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x623234", Offset = "0x623234", VA = "0x623234", Slot = "68")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x623520", Offset = "0x623520", VA = "0x623520")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x623580", Offset = "0x623580", VA = "0x623580", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x6235C4", Offset = "0x6235C4", VA = "0x6235C4", Slot = "68")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x623838", Offset = "0x623838", VA = "0x623838")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x623898", Offset = "0x623898", VA = "0x623898", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x6238DC", Offset = "0x6238DC", VA = "0x6238DC", Slot = "68")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x623A04", Offset = "0x623A04", VA = "0x623A04")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x623A64", Offset = "0x623A64", VA = "0x623A64", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x623AA8", Offset = "0x623AA8", VA = "0x623AA8", Slot = "68")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x61E3BC", Offset = "0x61E3BC", VA = "0x61E3BC")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x623BCC", Offset = "0x623BCC", VA = "0x623BCC", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x623C10", Offset = "0x623C10", VA = "0x623C10", Slot = "68")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000119")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x623D84", Offset = "0x623D84", VA = "0x623D84")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x623DE4", Offset = "0x623DE4", VA = "0x623DE4", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x623E28", Offset = "0x623E28", VA = "0x623E28", Slot = "68")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x61E41C", Offset = "0x61E41C", VA = "0x61E41C")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x623F74", Offset = "0x623F74", VA = "0x623F74", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x623FB8", Offset = "0x623FB8", VA = "0x623FB8", Slot = "68")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x61E4DC", Offset = "0x61E4DC", VA = "0x61E4DC")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x62434C", Offset = "0x62434C", VA = "0x62434C", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x624390", Offset = "0x624390", VA = "0x624390", Slot = "68")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x61E53C", Offset = "0x61E53C", VA = "0x61E53C")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x6245AC", Offset = "0x6245AC", VA = "0x6245AC", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x6245F0", Offset = "0x6245F0", VA = "0x6245F0", Slot = "68")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011D")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x61E59C", Offset = "0x61E59C", VA = "0x61E59C")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x624C74", Offset = "0x624C74", VA = "0x624C74", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x624CB8", Offset = "0x624CB8", VA = "0x624CB8", Slot = "68")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x61E5FC", Offset = "0x61E5FC", VA = "0x61E5FC")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x624F6C", Offset = "0x624F6C", VA = "0x624F6C", Slot = "46")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x624FB0", Offset = "0x624FB0", VA = "0x624FB0", Slot = "68")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x6250D4", Offset = "0x6250D4", VA = "0x6250D4")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x625134", Offset = "0x625134", VA = "0x625134", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x625178", Offset = "0x625178", VA = "0x625178", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000120")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x61E65C", Offset = "0x61E65C", VA = "0x61E65C")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x625678", Offset = "0x625678", VA = "0x625678", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x6256BC", Offset = "0x6256BC", VA = "0x6256BC", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000121")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x6254B0", Offset = "0x6254B0", VA = "0x6254B0")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x625510", Offset = "0x625510", VA = "0x625510", Slot = "48")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x625554", Offset = "0x625554", VA = "0x625554", Slot = "68")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x61E6BC", Offset = "0x61E6BC", VA = "0x61E6BC")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x625758", Offset = "0x625758", VA = "0x625758", Slot = "49")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x62579C", Offset = "0x62579C", VA = "0x62579C", Slot = "68")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x61E71C", Offset = "0x61E71C", VA = "0x61E71C")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x625940", Offset = "0x625940", VA = "0x625940", Slot = "50")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x625984", Offset = "0x625984", VA = "0x625984", Slot = "68")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x61E77C", Offset = "0x61E77C", VA = "0x61E77C")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x625F00", Offset = "0x625F00", VA = "0x625F00", Slot = "51")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x625F44", Offset = "0x625F44", VA = "0x625F44", Slot = "68")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x61E7DC", Offset = "0x61E7DC", VA = "0x61E7DC")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x626200", Offset = "0x626200", VA = "0x626200", Slot = "52")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x626244", Offset = "0x626244", VA = "0x626244", Slot = "68")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x61E83C", Offset = "0x61E83C", VA = "0x61E83C")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x6263A0", Offset = "0x6263A0", VA = "0x6263A0", Slot = "53")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x6263E4", Offset = "0x6263E4", VA = "0x6263E4", Slot = "68")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000127")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x61E89C", Offset = "0x61E89C", VA = "0x61E89C")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x6266A0", Offset = "0x6266A0", VA = "0x6266A0", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x6266E4", Offset = "0x6266E4", VA = "0x6266E4", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000128")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x61E8FC", Offset = "0x61E8FC", VA = "0x61E8FC")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x626F18", Offset = "0x626F18", VA = "0x626F18", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x626F5C", Offset = "0x626F5C", VA = "0x626F5C", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x61E95C", Offset = "0x61E95C", VA = "0x61E95C")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x626FF8", Offset = "0x626FF8", VA = "0x626FF8", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x62703C", Offset = "0x62703C", VA = "0x62703C", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012A")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x61E9BC", Offset = "0x61E9BC", VA = "0x61E9BC")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x626C18", Offset = "0x626C18", VA = "0x626C18", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x626C5C", Offset = "0x626C5C", VA = "0x626C5C", Slot = "68")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0x61EA1C", Offset = "0x61EA1C", VA = "0x61EA1C")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x626780", Offset = "0x626780", VA = "0x626780", Slot = "55")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x6267C4", Offset = "0x6267C4", VA = "0x6267C4", Slot = "68")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012C")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x61EA7C", Offset = "0x61EA7C", VA = "0x61EA7C")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x626918", Offset = "0x626918", VA = "0x626918", Slot = "56")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x62695C", Offset = "0x62695C", VA = "0x62695C", Slot = "68")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x61EADC", Offset = "0x61EADC", VA = "0x61EADC")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x6270D8", Offset = "0x6270D8", VA = "0x6270D8", Slot = "58")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x62711C", Offset = "0x62711C", VA = "0x62711C", Slot = "68")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x61EB3C", Offset = "0x61EB3C", VA = "0x61EB3C")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x627390", Offset = "0x627390", VA = "0x627390", Slot = "59")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x6273D4", Offset = "0x6273D4", VA = "0x6273D4", Slot = "68")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x61EB9C", Offset = "0x61EB9C", VA = "0x61EB9C")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x6274F8", Offset = "0x6274F8", VA = "0x6274F8", Slot = "60")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x62753C", Offset = "0x62753C", VA = "0x62753C", Slot = "68")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000928")]
		[Address(RVA = "0x6275A4", Offset = "0x6275A4", VA = "0x6275A4")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x627604", Offset = "0x627604", VA = "0x627604", Slot = "61")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x627648", Offset = "0x627648", VA = "0x627648", Slot = "68")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x600092B")]
		[Address(RVA = "0x61EBFC", Offset = "0x61EBFC", VA = "0x61EBFC")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x627780", Offset = "0x627780", VA = "0x627780", Slot = "62")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x6277C4", Offset = "0x6277C4", VA = "0x6277C4", Slot = "68")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x61EC5C", Offset = "0x61EC5C", VA = "0x61EC5C")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x6278F8", Offset = "0x6278F8", VA = "0x6278F8", Slot = "63")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x62793C", Offset = "0x62793C", VA = "0x62793C", Slot = "68")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x61ECBC", Offset = "0x61ECBC", VA = "0x61ECBC")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x627B14", Offset = "0x627B14", VA = "0x627B14", Slot = "64")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x627B58", Offset = "0x627B58", VA = "0x627B58", Slot = "68")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000134")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x61ED1C", Offset = "0x61ED1C", VA = "0x61ED1C")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x627E14", Offset = "0x627E14", VA = "0x627E14", Slot = "65")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x627E58", Offset = "0x627E58", VA = "0x627E58", Slot = "68")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x61ED7C", Offset = "0x61ED7C", VA = "0x61ED7C")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x628114", Offset = "0x628114", VA = "0x628114", Slot = "66")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x628158", Offset = "0x628158", VA = "0x628158", Slot = "68")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x628284", Offset = "0x628284", VA = "0x628284")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x6282E4", Offset = "0x6282E4", VA = "0x6282E4", Slot = "67")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x628328", Offset = "0x628328", VA = "0x628328", Slot = "68")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x61EDDC", Offset = "0x61EDDC", VA = "0x61EDDC")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x624E2C", Offset = "0x624E2C", VA = "0x624E2C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x624E70", Offset = "0x624E70", VA = "0x624E70", Slot = "68")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000138")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x61EE3C", Offset = "0x61EE3C", VA = "0x61EE3C")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x625BF8", Offset = "0x625BF8", VA = "0x625BF8", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x625C3C", Offset = "0x625C3C", VA = "0x625C3C", Slot = "68")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x61E35C", Offset = "0x61E35C", VA = "0x61E35C")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x623134", Offset = "0x623134", VA = "0x623134", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x623178", Offset = "0x623178", VA = "0x623178", Slot = "68")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200013A")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x61EE9C", Offset = "0x61EE9C", VA = "0x61EE9C")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x624780", Offset = "0x624780", VA = "0x624780", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x6247C4", Offset = "0x6247C4", VA = "0x6247C4", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x61E47C", Offset = "0x61E47C", VA = "0x61E47C")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x62411C", Offset = "0x62411C", VA = "0x62411C", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x62416C", Offset = "0x62416C", VA = "0x62416C", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x6241BC", Offset = "0x6241BC", VA = "0x6241BC", Slot = "68")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x61EEFC", Offset = "0x61EEFC", VA = "0x61EEFC")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x6224CC", Offset = "0x6224CC", VA = "0x6224CC", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x622510", Offset = "0x622510", VA = "0x622510", Slot = "68")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x61EF5C", Offset = "0x61EF5C", VA = "0x61EF5C")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x625D98", Offset = "0x625D98", VA = "0x625D98", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x625DDC", Offset = "0x625DDC", VA = "0x625DDC", Slot = "68")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000042")]
		public ulong SenderID
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x62A9F0", Offset = "0x62A9F0", VA = "0x62A9F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000043")]
		public ulong Size
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x62AA5C", Offset = "0x62AA5C", VA = "0x62AA5C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000044")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x62AA64", Offset = "0x62AA64", VA = "0x62AA64")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x6299D0", Offset = "0x6299D0", VA = "0x6299D0")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x62A89C", Offset = "0x62A89C", VA = "0x62A89C")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x62AAD0", Offset = "0x62AAD0", VA = "0x62AAD0", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x62AB38", Offset = "0x62AB38", VA = "0x62AB38", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x400054A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417E74", Offset = "0x417E74")]
		Unknown,
		[Token(Token = "0x400054B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417EAC", Offset = "0x417EAC")]
		Join,
		[Token(Token = "0x400054C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417EE4", Offset = "0x417EE4")]
		Leave,
		[Token(Token = "0x400054D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417F1C", Offset = "0x417F1C")]
		Invite,
		[Token(Token = "0x400054E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417F54", Offset = "0x417F54")]
		Uninvite
	}
	[Token(Token = "0x2000140")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000550")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417F8C", Offset = "0x417F8C")]
		Unknown,
		[Token(Token = "0x4000551")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417FC4", Offset = "0x417FC4")]
		Connected,
		[Token(Token = "0x4000552")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x417FFC", Offset = "0x417FFC")]
		Timeout,
		[Token(Token = "0x4000553")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418034", Offset = "0x418034")]
		Closed
	}
	[Token(Token = "0x2000141")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000555")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41806C", Offset = "0x41806C")]
		Unknown,
		[Token(Token = "0x4000556")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4180A4", Offset = "0x4180A4")]
		Granted,
		[Token(Token = "0x4000557")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4180DC", Offset = "0x4180DC")]
		Denied,
		[Token(Token = "0x4000558")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418114", Offset = "0x418114")]
		Blocked
	}
	[Token(Token = "0x2000142")]
	public enum PermissionType
	{
		[Token(Token = "0x400055A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41814C", Offset = "0x41814C")]
		Unknown,
		[Token(Token = "0x400055B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418184", Offset = "0x418184")]
		Microphone,
		[Token(Token = "0x400055C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4181BC", Offset = "0x4181BC")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000143")]
	public sealed class Core
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x61813C", Offset = "0x61813C", VA = "0x61813C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x6181A4", Offset = "0x6181A4", VA = "0x6181A4")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x618210", Offset = "0x618210", VA = "0x618210")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x61840C", Offset = "0x61840C", VA = "0x61840C")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x6186C0", Offset = "0x6186C0", VA = "0x6186C0")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x6183C0", Offset = "0x6183C0", VA = "0x6183C0")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x6189D8", Offset = "0x6189D8", VA = "0x6189D8")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x85036C", Offset = "0x85036C", VA = "0x85036C")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x85046C", Offset = "0x85046C", VA = "0x85046C")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000145")]
	public static class Rooms
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x62C674", Offset = "0x62C674", VA = "0x62C674")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x62C92C", Offset = "0x62C92C", VA = "0x62C92C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x41B3DC", Offset = "0x41B3DC")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x62C9A8", Offset = "0x62C9A8", VA = "0x62C9A8")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x62CADC", Offset = "0x62CADC", VA = "0x62CADC")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x62CC3C", Offset = "0x62CC3C", VA = "0x62CC3C")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x62CD58", Offset = "0x62CD58", VA = "0x62CD58")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x62CE64", Offset = "0x62CE64", VA = "0x62CE64")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x62CF80", Offset = "0x62CF80", VA = "0x62CF80")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x62D08C", Offset = "0x62D08C", VA = "0x62D08C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x62D1D4", Offset = "0x62D1D4", VA = "0x62D1D4")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x62D2E0", Offset = "0x62D2E0", VA = "0x62D2E0")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x62D404", Offset = "0x62D404", VA = "0x62D404")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x62D528", Offset = "0x62D528", VA = "0x62D528")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x62D678", Offset = "0x62D678", VA = "0x62D678")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x62D7AC", Offset = "0x62D7AC", VA = "0x62D7AC")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x62D8C0", Offset = "0x62D8C0", VA = "0x62D8C0")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x62D9DC", Offset = "0x62D9DC", VA = "0x62D9DC")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x62DB00", Offset = "0x62DB00", VA = "0x62DB00")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x62DC24", Offset = "0x62DC24", VA = "0x62DC24")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x62DD40", Offset = "0x62DD40", VA = "0x62DD40")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x62C930", Offset = "0x62C930", VA = "0x62C930")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x62DE64", Offset = "0x62DE64", VA = "0x62DE64")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x62DEDC", Offset = "0x62DEDC", VA = "0x62DEDC")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x62DF54", Offset = "0x62DF54", VA = "0x62DF54")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000276")]
		public class CustomQuery
		{
			[Token(Token = "0x200029D")]
			public struct Criterion
			{
				[Token(Token = "0x4000B34")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000B35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000B36")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6000F02")]
				[Address(RVA = "0x46A630", Offset = "0x46A630", VA = "0x46A630")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x61A4D4", Offset = "0x61A4D4", VA = "0x61A4D4")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x61B9B4", Offset = "0x61B9B4", VA = "0x61B9B4")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x619FB0", Offset = "0x619FB0", VA = "0x619FB0")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x61A26C", Offset = "0x61A26C", VA = "0x61A26C")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x61A3A0", Offset = "0x61A3A0", VA = "0x61A3A0")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x61A810", Offset = "0x61A810", VA = "0x61A810")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x61A9B0", Offset = "0x61A9B0", VA = "0x61A9B0")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x61AACC", Offset = "0x61AACC", VA = "0x61AACC")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x61ABD0", Offset = "0x61ABD0", VA = "0x61ABD0")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x61AD1C", Offset = "0x61AD1C", VA = "0x61AD1C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x61AE6C", Offset = "0x61AE6C", VA = "0x61AE6C")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x61AFA0", Offset = "0x61AFA0", VA = "0x61AFA0")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x61B0F0", Offset = "0x61B0F0", VA = "0x61B0F0")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x61B224", Offset = "0x61B224", VA = "0x61B224")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x61B374", Offset = "0x61B374", VA = "0x61B374")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x61B4A8", Offset = "0x61B4A8", VA = "0x61B4A8")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x61B5F8", Offset = "0x61B5F8", VA = "0x61B5F8")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x61B704", Offset = "0x61B704", VA = "0x61B704")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x61B828", Offset = "0x61B828", VA = "0x61B828")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x61B93C", Offset = "0x61B93C", VA = "0x61B93C")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000147")]
	public static class Net
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x6298C0", Offset = "0x6298C0", VA = "0x6298C0")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x629A90", Offset = "0x629A90", VA = "0x629A90")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x629BDC", Offset = "0x629BDC", VA = "0x629BDC")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x629CC8", Offset = "0x629CC8", VA = "0x629CC8")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x629DB4", Offset = "0x629DB4", VA = "0x629DB4")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x629EA0", Offset = "0x629EA0", VA = "0x629EA0")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x629F90", Offset = "0x629F90", VA = "0x629F90")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x62A0C8", Offset = "0x62A0C8", VA = "0x62A0C8")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x62A1A4", Offset = "0x62A1A4", VA = "0x62A1A4")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x62A27C", Offset = "0x62A27C", VA = "0x62A27C")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x62A398", Offset = "0x62A398", VA = "0x62A398")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x62A410", Offset = "0x62A410", VA = "0x62A410")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x62A488", Offset = "0x62A488", VA = "0x62A488")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000148")]
	public static class Leaderboards
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x6195F4", Offset = "0x6195F4", VA = "0x6195F4")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x619724", Offset = "0x619724", VA = "0x619724")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x619854", Offset = "0x619854", VA = "0x619854")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x619990", Offset = "0x619990", VA = "0x619990")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x619AC4", Offset = "0x619AC4", VA = "0x619AC4")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public static class Voip
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x64B9B8", Offset = "0x64B9B8", VA = "0x64B9B8")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x64BAA4", Offset = "0x64BAA4", VA = "0x64BAA4")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x64BB90", Offset = "0x64BB90", VA = "0x64BB90")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x64BC7C", Offset = "0x64BC7C", VA = "0x64BC7C")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x64BDA0", Offset = "0x64BDA0", VA = "0x64BDA0")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x64BE8C", Offset = "0x64BE8C", VA = "0x64BE8C")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x64BF68", Offset = "0x64BF68", VA = "0x64BF68")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x64C044", Offset = "0x64C044", VA = "0x64C044")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x64C134", Offset = "0x64C134", VA = "0x64C134")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x64C224", Offset = "0x64C224", VA = "0x64C224")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x64C314", Offset = "0x64C314", VA = "0x64C314")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x64C47C", Offset = "0x64C47C", VA = "0x64C47C")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x64C598", Offset = "0x64C598", VA = "0x64C598")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x64C610", Offset = "0x64C610", VA = "0x64C610")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x64C688", Offset = "0x64C688", VA = "0x64C688")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public static class Achievements
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x84EBD4", Offset = "0x84EBD4", VA = "0x84EBD4")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x84EDAC", Offset = "0x84EDAC", VA = "0x84EDAC")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x84EFA0", Offset = "0x84EFA0", VA = "0x84EFA0")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x84F11C", Offset = "0x84F11C", VA = "0x84F11C")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x84F298", Offset = "0x84F298", VA = "0x84F298")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x84F518", Offset = "0x84F518", VA = "0x84F518")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x84F798", Offset = "0x84F798", VA = "0x84F798")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x84F958", Offset = "0x84F958", VA = "0x84F958")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x84FB78", Offset = "0x84FB78", VA = "0x84FB78")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	public static class Application
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x84FFC4", Offset = "0x84FFC4", VA = "0x84FFC4")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x850140", Offset = "0x850140", VA = "0x850140")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public static class AssetFile
	{
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x850824", Offset = "0x850824", VA = "0x850824")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8509BC", Offset = "0x8509BC", VA = "0x8509BC")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x850B54", Offset = "0x850B54", VA = "0x850B54")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x850D14", Offset = "0x850D14", VA = "0x850D14")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x850EAC", Offset = "0x850EAC", VA = "0x850EAC")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x851044", Offset = "0x851044", VA = "0x851044")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x851204", Offset = "0x851204", VA = "0x851204")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x85139C", Offset = "0x85139C", VA = "0x85139C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x851534", Offset = "0x851534", VA = "0x851534")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8516F4", Offset = "0x8516F4", VA = "0x8516F4")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x851870", Offset = "0x851870", VA = "0x851870")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x851A08", Offset = "0x851A08", VA = "0x851A08")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x851BA0", Offset = "0x851BA0", VA = "0x851BA0")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x851D60", Offset = "0x851D60", VA = "0x851D60")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200014D")]
	public static class Avatar
	{
	}
	[Token(Token = "0x200014E")]
	public static class Cal
	{
	}
	[Token(Token = "0x200014F")]
	public static class CloudStorage
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x617424", Offset = "0x617424", VA = "0x617424")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x617548", Offset = "0x617548", VA = "0x617548")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x61766C", Offset = "0x61766C", VA = "0x61766C")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x617788", Offset = "0x617788", VA = "0x617788")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x6178AC", Offset = "0x6178AC", VA = "0x6178AC")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x6179C8", Offset = "0x6179C8", VA = "0x6179C8")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x617AEC", Offset = "0x617AEC", VA = "0x617AEC")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x617C20", Offset = "0x617C20", VA = "0x617C20")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x617D54", Offset = "0x617D54", VA = "0x617D54")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x617EB4", Offset = "0x617EB4", VA = "0x617EB4")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public static class CloudStorage2
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x618030", Offset = "0x618030", VA = "0x618030")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x2000151")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000152")]
	public static class Entitlements
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x6189E4", Offset = "0x6189E4", VA = "0x6189E4")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000154")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000155")]
	public static class IAP
	{
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x618B14", Offset = "0x618B14", VA = "0x618B14")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x618C28", Offset = "0x618C28", VA = "0x618C28")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x618D58", Offset = "0x618D58", VA = "0x618D58")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x618E64", Offset = "0x618E64", VA = "0x618E64")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x618F70", Offset = "0x618F70", VA = "0x618F70")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x6190D4", Offset = "0x6190D4", VA = "0x6190D4")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x619250", Offset = "0x619250", VA = "0x619250")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	public static class LanguagePack
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x6193CC", Offset = "0x6193CC", VA = "0x6193CC")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x6194D8", Offset = "0x6194D8", VA = "0x6194D8")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public static class Livestreaming
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x619C14", Offset = "0x619C14", VA = "0x619C14")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x619D20", Offset = "0x619D20", VA = "0x619D20")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x619E2C", Offset = "0x619E2C", VA = "0x619E2C")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x619F38", Offset = "0x619F38", VA = "0x619F38")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public static class Media
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x61C0EC", Offset = "0x61C0EC", VA = "0x61C0EC")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public static class Notifications
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x62A500", Offset = "0x62A500", VA = "0x62A500")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x62A60C", Offset = "0x62A60C", VA = "0x62A60C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x62A720", Offset = "0x62A720", VA = "0x62A720")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public static class Parties
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x62ABD0", Offset = "0x62ABD0", VA = "0x62ABD0")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x62ACDC", Offset = "0x62ACDC", VA = "0x62ACDC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public static class RichPresence
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x62B508", Offset = "0x62B508", VA = "0x62B508")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x62B60C", Offset = "0x62B60C", VA = "0x62B60C")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x62B718", Offset = "0x62B718", VA = "0x62B718")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x62B8A8", Offset = "0x62B8A8", VA = "0x62B8A8")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200015C")]
	public static class Users
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x6D782C", Offset = "0x6D782C", VA = "0x6D782C")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x6EDF68", Offset = "0x6EDF68", VA = "0x6EDF68")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x6D7720", Offset = "0x6D7720", VA = "0x6D7720")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x6D7948", Offset = "0x6D7948", VA = "0x6D7948")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x6EE074", Offset = "0x6EE074", VA = "0x6EE074")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x6EE180", Offset = "0x6EE180", VA = "0x6EE180")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x6EE2C8", Offset = "0x6EE2C8", VA = "0x6EE2C8")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x6EE3E4", Offset = "0x6EE3E4", VA = "0x6EE3E4")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x6D7614", Offset = "0x6D7614", VA = "0x6D7614")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x6EE4F0", Offset = "0x6EE4F0", VA = "0x6EE4F0")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x6EE60C", Offset = "0x6EE60C", VA = "0x6EE60C")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x6EE720", Offset = "0x6EE720", VA = "0x6EE720")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x6EE89C", Offset = "0x6EE89C", VA = "0x6EE89C")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000560")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4181F4", Offset = "0x4181F4")]
		Success = 0,
		[Token(Token = "0x4000561")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41822C", Offset = "0x41822C")]
		Uninitialized = -1,
		[Token(Token = "0x4000562")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418264", Offset = "0x418264")]
		PreLoaded = -2,
		[Token(Token = "0x4000563")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41829C", Offset = "0x41829C")]
		FileInvalid = -3,
		[Token(Token = "0x4000564")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4182D4", Offset = "0x4182D4")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000565")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41830C", Offset = "0x41830C")]
		UnableToVerify = -5,
		[Token(Token = "0x4000566")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418344", Offset = "0x418344")]
		VersionMismatch = -6,
		[Token(Token = "0x4000567")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41837C", Offset = "0x41837C")]
		Unknown = -7,
		[Token(Token = "0x4000568")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4183B4", Offset = "0x4183B4")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000569")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4183EC", Offset = "0x4183EC")]
		NotEntitled = -9
	}
	[Token(Token = "0x200015E")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000277")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000A99")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000A9A")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000A9B")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000A9C")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000A9D")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000A9E")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000A9F")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000AA0")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000AA1")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000AA2")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000AA3")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000AA4")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000AA5")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000AA6")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000AA7")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000AA8")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000AA9")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000AAA")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000AAB")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000AAC")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000AAD")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000AAE")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000AAF")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000AB0")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000AB1")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000AB2")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000AB3")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000AB4")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000AB5")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000AB6")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000AB7")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000AB8")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000AB9")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000ABA")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000ABB")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000ABC")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000ABD")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000ABE")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000ABF")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000AC0")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000AC1")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000AC2")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000AC3")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000AC4")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000AC5")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000AC6")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000AC7")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000278")]
		public static class HTTP
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x62AEE4", Offset = "0x62AEE4", VA = "0x62AEE4")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x2000279")]
		public static class Users
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x62AF5C", Offset = "0x62AF5C", VA = "0x62AF5C")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x62AD54", Offset = "0x62AD54", VA = "0x62AD54")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x61EFBC", Offset = "0x61EFBC", VA = "0x61EFBC")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x62ADB4", Offset = "0x62ADB4", VA = "0x62ADB4")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200015F")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000045")]
		public static string AppID
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x6189B8", Offset = "0x6189B8", VA = "0x6189B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x62B22C", Offset = "0x62B22C", VA = "0x62B22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public static string MobileAppID
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x618998", Offset = "0x618998", VA = "0x618998")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x62B25C", Offset = "0x62B25C", VA = "0x62B25C")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x6186A0", Offset = "0x6186A0", VA = "0x6186A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x62B28C", Offset = "0x62B28C", VA = "0x62B28C")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x62B2BC", Offset = "0x62B2BC", VA = "0x62B2BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x62B2DC", Offset = "0x62B2DC", VA = "0x62B2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x62B100", Offset = "0x62B100", VA = "0x62B100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x62B30C", Offset = "0x62B30C", VA = "0x62B30C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x62B364", Offset = "0x62B364", VA = "0x62B364")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000A06")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000A07")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000A08")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class Request
	{
		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x418464", Offset = "0x418464")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700004A")]
		public ulong RequestID
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x62B3DC", Offset = "0x62B3DC", VA = "0x62B3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B414", Offset = "0x41B414")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x62B3E4", Offset = "0x62B3E4", VA = "0x62B3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B424", Offset = "0x41B424")]
			set
			{
			}
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x618AE8", Offset = "0x618AE8", VA = "0x618AE8")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x62B3EC", Offset = "0x62B3EC", VA = "0x62B3EC")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x62B474", Offset = "0x62B474", VA = "0x62B474", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x617330", Offset = "0x617330", VA = "0x617330")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000573")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418474", Offset = "0x418474")]
		Unknown,
		[Token(Token = "0x4000574")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4184AC", Offset = "0x4184AC")]
		None,
		[Token(Token = "0x4000575")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4184E4", Offset = "0x4184E4")]
		CurrentCapacity,
		[Token(Token = "0x4000576")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41851C", Offset = "0x41851C")]
		StartedAgo,
		[Token(Token = "0x4000577")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418554", Offset = "0x418554")]
		EndingIn,
		[Token(Token = "0x4000578")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41858C", Offset = "0x41858C")]
		LookingForAMatch
	}
	[Token(Token = "0x2000163")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x62BA24", Offset = "0x62BA24", VA = "0x62BA24")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x62BA9C", Offset = "0x62BA9C", VA = "0x62BA9C")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x62BB18", Offset = "0x62BB18", VA = "0x62BB18")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x62BB9C", Offset = "0x62BB9C", VA = "0x62BB9C")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x62BC08", Offset = "0x62BC08", VA = "0x62BC08")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x62BC84", Offset = "0x62BC84", VA = "0x62BC84")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x62BD00", Offset = "0x62BD00", VA = "0x62BD00")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x62BD7C", Offset = "0x62BD7C", VA = "0x62BD7C")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x62BDF8", Offset = "0x62BDF8", VA = "0x62BDF8")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x62BE74", Offset = "0x62BE74", VA = "0x62BE74")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x62BEF0", Offset = "0x62BEF0", VA = "0x62BEF0")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x62BF6C", Offset = "0x62BF6C", VA = "0x62BF6C")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x62BFE8", Offset = "0x62BFE8", VA = "0x62BFE8")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x62B858", Offset = "0x62B858", VA = "0x62B858")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x62C064", Offset = "0x62C064", VA = "0x62C064", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x400057B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4185C4", Offset = "0x4185C4")]
		None,
		[Token(Token = "0x400057C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4185FC", Offset = "0x4185FC")]
		Everyone,
		[Token(Token = "0x400057D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418634", Offset = "0x418634")]
		FriendsOfMembers,
		[Token(Token = "0x400057E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41866C", Offset = "0x41866C")]
		FriendsOfOwner,
		[Token(Token = "0x400057F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4186A4", Offset = "0x4186A4")]
		InvitedUsers,
		[Token(Token = "0x4000580")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4186DC", Offset = "0x4186DC")]
		Unknown
	}
	[Token(Token = "0x2000165")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000582")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418714", Offset = "0x418714")]
		Unknown,
		[Token(Token = "0x4000583")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41874C", Offset = "0x41874C")]
		AreIn,
		[Token(Token = "0x4000584")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418784", Offset = "0x418784")]
		AreKicked,
		[Token(Token = "0x4000585")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4187BC", Offset = "0x4187BC")]
		CanJoin,
		[Token(Token = "0x4000586")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4187F4", Offset = "0x4187F4")]
		IsFull,
		[Token(Token = "0x4000587")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41882C", Offset = "0x41882C")]
		NoViewer,
		[Token(Token = "0x4000588")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418864", Offset = "0x418864")]
		PolicyPrevents
	}
	[Token(Token = "0x2000166")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x400058A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41889C", Offset = "0x41889C")]
		Unknown,
		[Token(Token = "0x400058B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4188D4", Offset = "0x4188D4")]
		Lock,
		[Token(Token = "0x400058C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41890C", Offset = "0x41890C")]
		Unlock
	}
	[Token(Token = "0x2000167")]
	public class RoomOptions
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x62C11C", Offset = "0x62C11C", VA = "0x62C11C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x62C194", Offset = "0x62C194", VA = "0x62C194")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x62C218", Offset = "0x62C218", VA = "0x62C218")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x62C284", Offset = "0x62C284", VA = "0x62C284")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x62C300", Offset = "0x62C300", VA = "0x62C300")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x62C37C", Offset = "0x62C37C", VA = "0x62C37C")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x62C3F8", Offset = "0x62C3F8", VA = "0x62C3F8")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x62C474", Offset = "0x62C474", VA = "0x62C474")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x62C4F0", Offset = "0x62C4F0", VA = "0x62C4F0")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x62C56C", Offset = "0x62C56C", VA = "0x62C56C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x62C5BC", Offset = "0x62C5BC", VA = "0x62C5BC", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public enum RoomType
	{
		[Token(Token = "0x400058F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418944", Offset = "0x418944")]
		Unknown,
		[Token(Token = "0x4000590")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41897C", Offset = "0x41897C")]
		Matchmaking,
		[Token(Token = "0x4000591")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4189B4", Offset = "0x4189B4")]
		Moderated,
		[Token(Token = "0x4000592")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4189EC", Offset = "0x4189EC")]
		Private,
		[Token(Token = "0x4000593")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418A24", Offset = "0x418A24")]
		Solo
	}
	[Token(Token = "0x2000169")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4000595")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418A5C", Offset = "0x418A5C")]
		Unknown,
		[Token(Token = "0x4000596")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418A94", Offset = "0x418A94")]
		Oculus,
		[Token(Token = "0x4000597")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418ACC", Offset = "0x418ACC")]
		FacebookGameroom
	}
	[Token(Token = "0x200016A")]
	public enum SendPolicy
	{
		[Token(Token = "0x4000599")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418B04", Offset = "0x418B04")]
		Unreliable,
		[Token(Token = "0x400059A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418B3C", Offset = "0x418B3C")]
		Reliable,
		[Token(Token = "0x400059B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418B74", Offset = "0x418B74")]
		Unknown
	}
	[Token(Token = "0x200016B")]
	public enum ServiceProvider
	{
		[Token(Token = "0x400059D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418BAC", Offset = "0x418BAC")]
		Unknown,
		[Token(Token = "0x400059E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418BE4", Offset = "0x418BE4")]
		Dropbox,
		[Token(Token = "0x400059F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418C1C", Offset = "0x418C1C")]
		Facebook,
		[Token(Token = "0x40005A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418C54", Offset = "0x418C54")]
		Google,
		[Token(Token = "0x40005A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418C8C", Offset = "0x418C8C")]
		Instagram,
		[Token(Token = "0x40005A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418CC4", Offset = "0x418CC4")]
		RemoteMedia
	}
	[Token(Token = "0x200016C")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40005A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418CFC", Offset = "0x418CFC")]
		Unknown,
		[Token(Token = "0x40005A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418D34", Offset = "0x418D34")]
		Shared,
		[Token(Token = "0x40005A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418D6C", Offset = "0x418D6C")]
		Canceled
	}
	[Token(Token = "0x200016D")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x415318", Offset = "0x415318")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x6ED5BC", Offset = "0x6ED5BC", VA = "0x6ED5BC")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x6ED6FC", Offset = "0x6ED6FC", VA = "0x6ED6FC")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x6ED7C0", Offset = "0x6ED7C0", VA = "0x6ED7C0")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700004B")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x6EDB04", Offset = "0x6EDB04", VA = "0x6EDB04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x6EDB54", Offset = "0x6EDB54", VA = "0x6EDB54")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x6EDB58", Offset = "0x6EDB58", VA = "0x6EDB58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x6EDBA8", Offset = "0x6EDBA8", VA = "0x6EDBA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x6EDBAC", Offset = "0x6EDBAC", VA = "0x6EDBAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x6EDBFC", Offset = "0x6EDBFC", VA = "0x6EDBFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x6EDC00", Offset = "0x6EDC00", VA = "0x6EDC00")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40005A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418DA4", Offset = "0x418DA4")]
		Unknown,
		[Token(Token = "0x40005A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418DDC", Offset = "0x418DDC")]
		Unavailable,
		[Token(Token = "0x40005AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418E14", Offset = "0x418E14")]
		Suppressed,
		[Token(Token = "0x40005AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418E4C", Offset = "0x418E4C")]
		Active
	}
	[Token(Token = "0x2000170")]
	public enum TimeWindow
	{
		[Token(Token = "0x40005AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418E84", Offset = "0x418E84")]
		Unknown,
		[Token(Token = "0x40005AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418EBC", Offset = "0x418EBC")]
		OneHour,
		[Token(Token = "0x40005AF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418EF4", Offset = "0x418EF4")]
		OneDay,
		[Token(Token = "0x40005B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418F2C", Offset = "0x418F2C")]
		OneWeek,
		[Token(Token = "0x40005B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418F64", Offset = "0x418F64")]
		ThirtyDays,
		[Token(Token = "0x40005B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418F9C", Offset = "0x418F9C")]
		NinetyDays
	}
	[Token(Token = "0x2000171")]
	public class UserOptions
	{
		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x6EDC08", Offset = "0x6EDC08", VA = "0x6EDC08")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x6EDC80", Offset = "0x6EDC80", VA = "0x6EDC80")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x6EDCFC", Offset = "0x6EDCFC", VA = "0x6EDCFC")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x6EDD78", Offset = "0x6EDD78", VA = "0x6EDD78")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x6EDDE4", Offset = "0x6EDDE4", VA = "0x6EDDE4")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x6EDE60", Offset = "0x6EDE60", VA = "0x6EDE60")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x6EDEB0", Offset = "0x6EDEB0", VA = "0x6EDEB0", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public enum UserOrdering
	{
		[Token(Token = "0x40005B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x418FD4", Offset = "0x418FD4")]
		Unknown,
		[Token(Token = "0x40005B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41900C", Offset = "0x41900C")]
		None,
		[Token(Token = "0x40005B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419044", Offset = "0x419044")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000173")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40005B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41907C", Offset = "0x41907C")]
		Unknown,
		[Token(Token = "0x40005BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4190B4", Offset = "0x4190B4")]
		Online,
		[Token(Token = "0x40005BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4190EC", Offset = "0x4190EC")]
		Offline
	}
	[Token(Token = "0x2000174")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x200027B")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x64CECC", Offset = "0x64CECC", VA = "0x64CECC")]
			private void Awake()
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x64CF8C", Offset = "0x64CF8C", VA = "0x64CF8C")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x64D484", Offset = "0x64D484", VA = "0x64D484")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700004E")]
		public ulong senderID
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x64C700", Offset = "0x64C700", VA = "0x64C700")]
			set
			{
			}
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x64C7C4", Offset = "0x64C7C4", VA = "0x64C7C4")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x64C7C8", Offset = "0x64C7C8", VA = "0x64C7C8")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x64C804", Offset = "0x64C804", VA = "0x64C804")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x64CAC8", Offset = "0x64CAC8", VA = "0x64CAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x64CAE4", Offset = "0x64CAE4", VA = "0x64CAE4", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x64CB54", Offset = "0x64CB54", VA = "0x64CB54")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x64CBDC", Offset = "0x64CBDC", VA = "0x64CBDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x64CEC0", Offset = "0x64CEC0", VA = "0x64CEC0")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40005C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419124", Offset = "0x419124")]
		Unknown,
		[Token(Token = "0x40005C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41915C", Offset = "0x41915C")]
		B16000,
		[Token(Token = "0x40005C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419194", Offset = "0x419194")]
		B24000,
		[Token(Token = "0x40005C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4191CC", Offset = "0x4191CC")]
		B32000,
		[Token(Token = "0x40005C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419204", Offset = "0x419204")]
		B64000,
		[Token(Token = "0x40005C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41923C", Offset = "0x41923C")]
		B96000,
		[Token(Token = "0x40005C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419274", Offset = "0x419274")]
		B128000
	}
	[Token(Token = "0x2000176")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40005CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4192AC", Offset = "0x4192AC")]
		Unknown,
		[Token(Token = "0x40005CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4192E4", Offset = "0x4192E4")]
		Enabled,
		[Token(Token = "0x40005CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41931C", Offset = "0x41931C")]
		Disabled
	}
	[Token(Token = "0x2000177")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40005CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419354", Offset = "0x419354")]
		Unknown,
		[Token(Token = "0x40005D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41938C", Offset = "0x41938C")]
		Muted,
		[Token(Token = "0x40005D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4193C4", Offset = "0x4193C4")]
		Unmuted
	}
	[Token(Token = "0x2000178")]
	public class VoipOptions
	{
		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x64D48C", Offset = "0x64D48C", VA = "0x64D48C")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x64D504", Offset = "0x64D504", VA = "0x64D504")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x64D580", Offset = "0x64D580", VA = "0x64D580")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x64C42C", Offset = "0x64C42C", VA = "0x64C42C")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x64D5FC", Offset = "0x64D5FC", VA = "0x64D5FC", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x64D6B4", Offset = "0x64D6B4", VA = "0x64D6B4", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x64D774", Offset = "0x64D774", VA = "0x64D774", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x64D77C", Offset = "0x64D77C", VA = "0x64D77C", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x64D81C", Offset = "0x64D81C", VA = "0x64D81C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x64CB4C", Offset = "0x64CB4C", VA = "0x64CB4C")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40005D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4193FC", Offset = "0x4193FC")]
		Unknown,
		[Token(Token = "0x40005D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x419434", Offset = "0x419434")]
		HZ24000,
		[Token(Token = "0x40005D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x41946C", Offset = "0x41946C")]
		HZ44100,
		[Token(Token = "0x40005D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4194A4", Offset = "0x4194A4")]
		HZ48000
	}
	[Token(Token = "0x200017B")]
	public class WindowsPlatform
	{
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x41532C", Offset = "0x41532C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x64D820", Offset = "0x64D820", VA = "0x64D820")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x64D8F8", Offset = "0x64D8F8", VA = "0x64D8F8")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x64D938", Offset = "0x64D938", VA = "0x64D938")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x64DA1C", Offset = "0x64DA1C", VA = "0x64DA1C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x64DB30", Offset = "0x64DB30", VA = "0x64DB30")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x200017C")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x61FBFC", Offset = "0x61FBFC", VA = "0x61FBFC")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x628460", Offset = "0x628460", VA = "0x628460")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x61FD6C", Offset = "0x61FD6C", VA = "0x61FD6C")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class AchievementProgress
	{
		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x628524", Offset = "0x628524", VA = "0x628524")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x62006C", Offset = "0x62006C", VA = "0x62006C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x62036C", Offset = "0x62036C", VA = "0x62036C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x6204F0", Offset = "0x6204F0", VA = "0x6204F0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class AssetDetails
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4194DC", Offset = "0x4194DC")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x62069C", Offset = "0x62069C", VA = "0x62069C")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x620920", Offset = "0x620920", VA = "0x620920")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x620BD8", Offset = "0x620BD8", VA = "0x620BD8")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x620D80", Offset = "0x620D80", VA = "0x620D80")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x620F28", Offset = "0x620F28", VA = "0x620F28")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x6210A8", Offset = "0x6210A8", VA = "0x6210A8")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x621254", Offset = "0x621254", VA = "0x621254")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x6213E4", Offset = "0x6213E4", VA = "0x6213E4")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x6286D0", Offset = "0x6286D0", VA = "0x6286D0")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x6215AC", Offset = "0x6215AC", VA = "0x6215AC")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x621864", Offset = "0x621864", VA = "0x621864")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x621A38", Offset = "0x621A38", VA = "0x621A38")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x621EF0", Offset = "0x621EF0", VA = "0x621EF0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x621BF0", Offset = "0x621BF0", VA = "0x621BF0")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x6220F4", Offset = "0x6220F4", VA = "0x6220F4")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4150A4", Offset = "0x4150A4")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x1700004F")]
		public int Count
		{
			[Token(Token = "0x6000A69")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000050")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000A6A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public T Item
		{
			[Token(Token = "0x6000A6C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A6D")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x41C084", Offset = "0x41C084")]
		public List<T> Data
		{
			[Token(Token = "0x6000A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000A79")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000054")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000A7A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000055")]
		public string NextUrl
		{
			[Token(Token = "0x6000A7B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6B")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6E")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000A6F")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A70")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000A72")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000A74")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A75")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000A76")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A7D")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class Destination
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x628770", Offset = "0x628770", VA = "0x628770")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x6222AC", Offset = "0x6222AC", VA = "0x6222AC")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class Error
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x61C47C", Offset = "0x61C47C", VA = "0x61C47C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x6225AC", Offset = "0x6225AC", VA = "0x6225AC")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x628838", Offset = "0x628838", VA = "0x628838")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x622840", Offset = "0x622840", VA = "0x622840")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x628608", Offset = "0x628608", VA = "0x628608")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x622B58", Offset = "0x622B58", VA = "0x622B58")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class LaunchDetails
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419514", Offset = "0x419514")]
		public readonly UserList Users;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x62892C", Offset = "0x62892C", VA = "0x62892C")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x622CD8", Offset = "0x622CD8", VA = "0x622CD8")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x622EB8", Offset = "0x622EB8", VA = "0x622EB8")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x623094", Offset = "0x623094", VA = "0x623094")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x628A70", Offset = "0x628A70", VA = "0x628A70")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x6232D0", Offset = "0x6232D0", VA = "0x6232D0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x628B70", Offset = "0x628B70", VA = "0x628B70")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x623660", Offset = "0x623660", VA = "0x623660")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x623978", Offset = "0x623978", VA = "0x623978")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x623B44", Offset = "0x623B44", VA = "0x623B44")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x623CAC", Offset = "0x623CAC", VA = "0x623CAC")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x623EC4", Offset = "0x623EC4", VA = "0x623EC4")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x624054", Offset = "0x624054", VA = "0x624054")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x628E04", Offset = "0x628E04", VA = "0x628E04")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x628C2C", Offset = "0x628C2C", VA = "0x628C2C")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x624258", Offset = "0x624258", VA = "0x624258")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x41954C", Offset = "0x41954C")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x62442C", Offset = "0x62442C", VA = "0x62442C")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x62468C", Offset = "0x62468C", VA = "0x62468C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419584", Offset = "0x419584")]
		public readonly User User;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x628ED8", Offset = "0x628ED8", VA = "0x628ED8")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x628FE8", Offset = "0x628FE8", VA = "0x628FE8")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x624D54", Offset = "0x624D54", VA = "0x624D54")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4195BC", Offset = "0x4195BC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4195CC", Offset = "0x4195CC")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000057")]
		public ulong ID
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x6291C0", Offset = "0x6291C0", VA = "0x6291C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B434", Offset = "0x41B434")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x6291C8", Offset = "0x6291C8", VA = "0x6291C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B444", Offset = "0x41B444")]
			private set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x6291D0", Offset = "0x6291D0", VA = "0x6291D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B454", Offset = "0x41B454")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x6291D8", Offset = "0x6291D8", VA = "0x6291D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B464", Offset = "0x41B464")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x624F30", Offset = "0x624F30", VA = "0x624F30")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class OrgScopedID
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x62504C", Offset = "0x62504C", VA = "0x62504C")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class Party
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4195DC", Offset = "0x4195DC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419614", Offset = "0x419614")]
		public readonly User Leader;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x41964C", Offset = "0x41964C")]
		public readonly Room Room;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419684", Offset = "0x419684")]
		public readonly UserList Users;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x625214", Offset = "0x625214", VA = "0x625214")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class PartyID
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x6255F0", Offset = "0x6255F0", VA = "0x6255F0")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x625838", Offset = "0x625838", VA = "0x625838")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class Pid
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x6291E0", Offset = "0x6291E0", VA = "0x6291E0")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x625A20", Offset = "0x625A20", VA = "0x625A20")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class PingResult
	{
		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4196BC", Offset = "0x4196BC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x17000059")]
		public ulong ID
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x629270", Offset = "0x629270", VA = "0x629270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B474", Offset = "0x41B474")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x629278", Offset = "0x629278", VA = "0x629278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B484", Offset = "0x41B484")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x629280", Offset = "0x629280", VA = "0x629280")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700005B")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x6292E8", Offset = "0x6292E8", VA = "0x6292E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x625D58", Offset = "0x625D58", VA = "0x625D58")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x625E78", Offset = "0x625E78", VA = "0x625E78")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class Product
	{
		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x629334", Offset = "0x629334", VA = "0x629334")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x625FE0", Offset = "0x625FE0", VA = "0x625FE0")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class Purchase
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x6262E0", Offset = "0x6262E0", VA = "0x6262E0")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x626480", Offset = "0x626480", VA = "0x626480")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class Room
	{
		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4196CC", Offset = "0x4196CC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419704", Offset = "0x419704")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x41973C", Offset = "0x41973C")]
		public readonly User Owner;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x419774", Offset = "0x419774")]
		public readonly TeamList Teams;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4197AC", Offset = "0x4197AC")]
		public readonly UserList Users;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x624860", Offset = "0x624860", VA = "0x624860")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x626CF8", Offset = "0x626CF8", VA = "0x626CF8")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x626860", Offset = "0x626860", VA = "0x626860")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x6269F8", Offset = "0x6269F8", VA = "0x6269F8")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class SdkAccount
	{
		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x6295F0", Offset = "0x6295F0", VA = "0x6295F0")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x6271B8", Offset = "0x6271B8", VA = "0x6271B8")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x627470", Offset = "0x627470", VA = "0x627470")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class SystemPermission
	{
		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x6276E4", Offset = "0x6276E4", VA = "0x6276E4")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class SystemVoipState
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x627860", Offset = "0x627860", VA = "0x627860")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class Team
	{
		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x629688", Offset = "0x629688", VA = "0x629688")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x629418", Offset = "0x629418", VA = "0x629418")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class User
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x6279D8", Offset = "0x6279D8", VA = "0x6279D8")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x627EF4", Offset = "0x627EF4", VA = "0x627EF4")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class UserAndRoom
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4197E4", Offset = "0x4197E4")]
		public readonly Room Room;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x629778", Offset = "0x629778", VA = "0x629778")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x627BF4", Offset = "0x627BF4", VA = "0x627BF4")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class UserProof
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x6281F4", Offset = "0x6281F4", VA = "0x6281F4")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class UserReportID
	{
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x6283C4", Offset = "0x6283C4", VA = "0x6283C4")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x20001CE")]
	public class P2PManager
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x1700005C")]
		public bool Connected
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x6E950C", Offset = "0x6E950C", VA = "0x6E950C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x6E9AF4", Offset = "0x6E9AF4", VA = "0x6E9AF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x6E91FC", Offset = "0x6E91FC", VA = "0x6E91FC")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x6E936C", Offset = "0x6E936C", VA = "0x6E936C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x6E94D8", Offset = "0x6E94D8", VA = "0x6E94D8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x6E951C", Offset = "0x6E951C", VA = "0x6E951C")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x6E96B0", Offset = "0x6E96B0", VA = "0x6E96B0")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x6E9B38", Offset = "0x6E9B38", VA = "0x6E9B38")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x6E9CE0", Offset = "0x6E9CE0", VA = "0x6E9CE0")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x6E9D88", Offset = "0x6E9D88", VA = "0x6E9D88")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		public enum State
		{
			[Token(Token = "0x4000ACB")]
			INITIALIZING,
			[Token(Token = "0x4000ACC")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4000ACD")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4000ACE")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4000ACF")]
			HANGUP
		}

		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415340", Offset = "0x415340")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x6EBCCC", Offset = "0x6EBCCC", VA = "0x6EBCCC")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x6EBCE0", Offset = "0x6EBCE0", VA = "0x6EBCE0")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x1700005E")]
		public static State CurrentState
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x6EB088", Offset = "0x6EB088", VA = "0x6EB088")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700005F")]
		public static ulong MyID
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x6E9400", Offset = "0x6E9400", VA = "0x6E9400")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000060")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x6EB0FC", Offset = "0x6EB0FC", VA = "0x6EB0FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x6EA21C", Offset = "0x6EA21C", VA = "0x6EA21C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x6EA470", Offset = "0x6EA470", VA = "0x6EA470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x6EAB9C", Offset = "0x6EAB9C", VA = "0x6EAB9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x6EAC34", Offset = "0x6EAC34", VA = "0x6EAC34")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x6EADD0", Offset = "0x6EADD0", VA = "0x6EADD0")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x6EAF00", Offset = "0x6EAF00", VA = "0x6EAF00")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x6EAD24", Offset = "0x6EAD24", VA = "0x6EAD24")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x6EB210", Offset = "0x6EB210", VA = "0x6EB210")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x6EB348", Offset = "0x6EB348", VA = "0x6EB348")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x6EB360", Offset = "0x6EB360", VA = "0x6EB360")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x6EB368", Offset = "0x6EB368", VA = "0x6EB368")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x6EA698", Offset = "0x6EA698", VA = "0x6EA698")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x6E98B4", Offset = "0x6E98B4", VA = "0x6E98B4")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x6EB5F8", Offset = "0x6EB5F8", VA = "0x6EB5F8")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x6EBCD4", Offset = "0x6EBCD4", VA = "0x6EBCD4")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class RoomManager
	{
		[Token(Token = "0x200027F")]
		public struct Invite
		{
			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x4722B4", Offset = "0x4722B4", VA = "0x4722B4")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000061")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x6EB50C", Offset = "0x6EB50C", VA = "0x6EB50C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000062")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x6EBD48", Offset = "0x6EBD48", VA = "0x6EBD48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x6EA2D8", Offset = "0x6EA2D8", VA = "0x6EA2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x6EAA00", Offset = "0x6EAA00", VA = "0x6EAA00")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x6EBDAC", Offset = "0x6EBDAC", VA = "0x6EBDAC")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x6EAED8", Offset = "0x6EAED8", VA = "0x6EAED8")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x6EB294", Offset = "0x6EB294", VA = "0x6EB294")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x6EBEDC", Offset = "0x6EBEDC", VA = "0x6EBEDC")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x6EC00C", Offset = "0x6EC00C", VA = "0x6EC00C")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x6EA318", Offset = "0x6EA318", VA = "0x6EA318")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x6EC094", Offset = "0x6EC094", VA = "0x6EC094")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x6EC47C", Offset = "0x6EC47C", VA = "0x6EC47C")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x6EB458", Offset = "0x6EB458", VA = "0x6EB458")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x6EC608", Offset = "0x6EC608", VA = "0x6EC608")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x6ECAC4", Offset = "0x6ECAC4", VA = "0x6ECAC4")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x6EAF54", Offset = "0x6EAF54", VA = "0x6EAF54")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x6ECFF8", Offset = "0x6ECFF8", VA = "0x6ECFF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x6ED21C", Offset = "0x6ED21C", VA = "0x6ED21C")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class VoipManager
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000064")]
		public bool Connected
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x6EB5E8", Offset = "0x6EB5E8", VA = "0x6EB5E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x6EAAC8", Offset = "0x6EAAC8", VA = "0x6EAAC8")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x6EB524", Offset = "0x6EB524", VA = "0x6EB524")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x6EAFDC", Offset = "0x6EAFDC", VA = "0x6EAFDC")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x6ED224", Offset = "0x6ED224", VA = "0x6ED224")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x6ED3B8", Offset = "0x6ED3B8", VA = "0x6ED3B8")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20001D3")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x6DF424", Offset = "0x6DF424", VA = "0x6DF424")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x6DF71C", Offset = "0x6DF71C", VA = "0x6DF71C")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class AchievementsManager
	{
		[Token(Token = "0x40006DE")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000065")]
		public bool LikesToWin
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x6DF79C", Offset = "0x6DF79C", VA = "0x6DF79C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x6DF7A4", Offset = "0x6DF7A4", VA = "0x6DF7A4")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x6DF8C4", Offset = "0x6DF8C4", VA = "0x6DF8C4")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x6DF920", Offset = "0x6DF920", VA = "0x6DF920")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x6DF928", Offset = "0x6DF928", VA = "0x6DF928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B494", Offset = "0x41B494")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x6DFB70", Offset = "0x6DFB70", VA = "0x6DFB70")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x6DFB78", Offset = "0x6DFB78", VA = "0x6DFB78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x6DFDEC", Offset = "0x6DFDEC", VA = "0x6DFDEC")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x2000280")]
		private enum BasketPhase
		{
			[Token(Token = "0x4000AD4")]
			NONE,
			[Token(Token = "0x4000AD5")]
			TOP,
			[Token(Token = "0x4000AD6")]
			BOTH,
			[Token(Token = "0x4000AD7")]
			BOTTOM
		}

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x17000066")]
		public Player Player
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x6DFDF4", Offset = "0x6DFDF4", VA = "0x6DFDF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x6DFDFC", Offset = "0x6DFDFC", VA = "0x6DFDFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x6DFEDC", Offset = "0x6DFEDC", VA = "0x6DFEDC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x6E0094", Offset = "0x6E0094", VA = "0x6E0094")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40006E2")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x6E009C", Offset = "0x6E009C", VA = "0x6E009C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x6E0138", Offset = "0x6E0138", VA = "0x6E0138")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x6E0274", Offset = "0x6E0274", VA = "0x6E0274")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40006E7")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x17000067")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x6E0310", Offset = "0x6E0310", VA = "0x6E0310")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x6E031C", Offset = "0x6E031C", VA = "0x6E031C")]
			set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x6E0328", Offset = "0x6E0328", VA = "0x6E0328")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x6E0334", Offset = "0x6E0334", VA = "0x6E0334")]
			set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x6E0340", Offset = "0x6E0340", VA = "0x6E0340")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x6E034C", Offset = "0x6E034C", VA = "0x6E034C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x6E0358", Offset = "0x6E0358", VA = "0x6E0358")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x6E04E8", Offset = "0x6E04E8", VA = "0x6E04E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x6E0814", Offset = "0x6E0814", VA = "0x6E0814")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000281")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000282")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40006EB")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40006EC")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40006ED")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40006EE")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x1700006A")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x6E0AC8", Offset = "0x6E0AC8", VA = "0x6E0AC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x6E12CC", Offset = "0x6E12CC", VA = "0x6E12CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x6E0828", Offset = "0x6E0828", VA = "0x6E0828")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x6E0890", Offset = "0x6E0890", VA = "0x6E0890")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x6E0AD0", Offset = "0x6E0AD0", VA = "0x6E0AD0")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x6E09AC", Offset = "0x6E09AC", VA = "0x6E09AC")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x6E12D4", Offset = "0x6E12D4", VA = "0x6E12D4")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x6E1A24", Offset = "0x6E1A24", VA = "0x6E1A24")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x6E1AD8", Offset = "0x6E1AD8", VA = "0x6E1AD8")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x1700006C")]
		public override uint Score
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x6E1B68", Offset = "0x6E1B68", VA = "0x6E1B68", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x6E1E48", Offset = "0x6E1E48", VA = "0x6E1E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x6E1FC8", Offset = "0x6E1FC8", VA = "0x6E1FC8")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x2000283")]
		private enum State
		{
			[Token(Token = "0x4000AD9")]
			UNKNOWN,
			[Token(Token = "0x4000ADA")]
			NONE,
			[Token(Token = "0x4000ADB")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4000ADC")]
			PRACTICING,
			[Token(Token = "0x4000ADD")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4000ADE")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4000ADF")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4000AE0")]
			PLAYING_MATCH,
			[Token(Token = "0x4000AE1")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x1700006D")]
		public float MatchStartTime
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x6E2874", Offset = "0x6E2874", VA = "0x6E2874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x6E2894", Offset = "0x6E2894", VA = "0x6E2894")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x6E1FCC", Offset = "0x6E1FCC", VA = "0x6E1FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x6E25AC", Offset = "0x6E25AC", VA = "0x6E25AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x6E22CC", Offset = "0x6E22CC", VA = "0x6E22CC")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x6E25D0", Offset = "0x6E25D0", VA = "0x6E25D0")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x6E2674", Offset = "0x6E2674", VA = "0x6E2674")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x6E289C", Offset = "0x6E289C", VA = "0x6E289C")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x6E2B10", Offset = "0x6E2B10", VA = "0x6E2B10")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x6E31D8", Offset = "0x6E31D8", VA = "0x6E31D8")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x6E2948", Offset = "0x6E2948", VA = "0x6E2948")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x6E2C10", Offset = "0x6E2C10", VA = "0x6E2C10")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x6E3484", Offset = "0x6E3484", VA = "0x6E3484")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x6E349C", Offset = "0x6E349C", VA = "0x6E349C")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x6E364C", Offset = "0x6E364C", VA = "0x6E364C")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x6E3660", Offset = "0x6E3660", VA = "0x6E3660")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x6E3764", Offset = "0x6E3764", VA = "0x6E3764")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x6E3CB8", Offset = "0x6E3CB8", VA = "0x6E3CB8")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x6E2D94", Offset = "0x6E2D94", VA = "0x6E2D94")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x6E32E8", Offset = "0x6E32E8", VA = "0x6E32E8")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x6E42C0", Offset = "0x6E42C0", VA = "0x6E42C0")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000284")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000285")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4000707")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x1700006E")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x6E442C", Offset = "0x6E442C", VA = "0x6E442C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x6E4434", Offset = "0x6E4434", VA = "0x6E4434")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x6E443C", Offset = "0x6E443C", VA = "0x6E443C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x6E4444", Offset = "0x6E4444", VA = "0x6E4444")]
			set
			{
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x6E4338", Offset = "0x6E4338", VA = "0x6E4338")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x6E356C", Offset = "0x6E356C", VA = "0x6E356C")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x6E444C", Offset = "0x6E444C", VA = "0x6E444C")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x6E4790", Offset = "0x6E4790", VA = "0x6E4790")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x6E4860", Offset = "0x6E4860", VA = "0x6E4860")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x6E50A0", Offset = "0x6E50A0", VA = "0x6E50A0")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x6E30A8", Offset = "0x6E30A8", VA = "0x6E30A8")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x6E3624", Offset = "0x6E3624", VA = "0x6E3624")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class P2PManager
	{
		[Token(Token = "0x2000286")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x6E6998", Offset = "0x6E6998", VA = "0x6E6998")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x2000287")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x400070E")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x400070F")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000710")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000711")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4000712")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000713")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4000714")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4000715")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4000716")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4000717")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4000718")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4000719")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x17000070")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x6E7340", Offset = "0x6E7340", VA = "0x6E7340")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x6E7348", Offset = "0x6E7348", VA = "0x6E7348")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x6E572C", Offset = "0x6E572C", VA = "0x6E572C")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x6E58E0", Offset = "0x6E58E0", VA = "0x6E58E0")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x6E4EE8", Offset = "0x6E4EE8", VA = "0x6E4EE8")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x6E54D4", Offset = "0x6E54D4", VA = "0x6E54D4")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x6E6A14", Offset = "0x6E6A14", VA = "0x6E6A14")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x6E6BF4", Offset = "0x6E6BF4", VA = "0x6E6BF4")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x6E6E5C", Offset = "0x6E6E5C", VA = "0x6E6E5C")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x6E5ADC", Offset = "0x6E5ADC", VA = "0x6E5ADC")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x6E7298", Offset = "0x6E7298", VA = "0x6E7298")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x6E70DC", Offset = "0x6E70DC", VA = "0x6E70DC")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x6E60D4", Offset = "0x6E60D4", VA = "0x6E60D4")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x6E75F8", Offset = "0x6E75F8", VA = "0x6E75F8")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x6E6130", Offset = "0x6E6130", VA = "0x6E6130")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x6E1F30", Offset = "0x6E1F30", VA = "0x6E1F30")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x6E7A60", Offset = "0x6E7A60", VA = "0x6E7A60")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x6E6648", Offset = "0x6E6648", VA = "0x6E6648")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x6E626C", Offset = "0x6E626C", VA = "0x6E626C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x6E1CD0", Offset = "0x6E1CD0", VA = "0x6E1CD0")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x6E65A0", Offset = "0x6E65A0", VA = "0x6E65A0")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x6E77F0", Offset = "0x6E77F0", VA = "0x6E77F0")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x6E7840", Offset = "0x6E7840", VA = "0x6E7840")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x6E8168", Offset = "0x6E8168", VA = "0x6E8168")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x6E6FA8", Offset = "0x6E6FA8", VA = "0x6E6FA8")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x6E7050", Offset = "0x6E7050", VA = "0x6E7050")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x6E75C4", Offset = "0x6E75C4", VA = "0x6E75C4")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x6E7B50", Offset = "0x6E7B50", VA = "0x6E7B50")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x6E7C58", Offset = "0x6E7C58", VA = "0x6E7C58")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x6E8038", Offset = "0x6E8038", VA = "0x6E8038")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x6E80D8", Offset = "0x6E80D8", VA = "0x6E80D8")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x6E7B08", Offset = "0x6E7B08", VA = "0x6E7B08")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x6E7C0C", Offset = "0x6E7C0C", VA = "0x6E7C0C")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001DF")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x17000071")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x6E7BF0", Offset = "0x6E7BF0", VA = "0x6E7BF0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x6E828C", Offset = "0x6E828C", VA = "0x6E828C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x6E7ADC", Offset = "0x6E7ADC", VA = "0x6E7ADC")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x6E7ECC", Offset = "0x6E7ECC", VA = "0x6E7ECC")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x6E82FC", Offset = "0x6E82FC", VA = "0x6E82FC")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x6E8438", Offset = "0x6E8438", VA = "0x6E8438")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x6E8580", Offset = "0x6E8580", VA = "0x6E8580")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x6E85A8", Offset = "0x6E85A8", VA = "0x6E85A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x6E85E8", Offset = "0x6E85E8", VA = "0x6E85E8")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x17000072")]
		public bool SendUpdates
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x6E85F0", Offset = "0x6E85F0", VA = "0x6E85F0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x6E85FC", Offset = "0x6E85FC", VA = "0x6E85FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x6E866C", Offset = "0x6E866C", VA = "0x6E866C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x6E8748", Offset = "0x6E8748", VA = "0x6E8748")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x6E7898", Offset = "0x6E7898", VA = "0x6E7898")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x6E8804", Offset = "0x6E8804", VA = "0x6E8804")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000288")]
		public enum State
		{
			[Token(Token = "0x4000AE8")]
			INITIALIZING,
			[Token(Token = "0x4000AE9")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4000AEA")]
			MATCH_TRANSITION,
			[Token(Token = "0x4000AEB")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4000AEC")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x17000073")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x6E21D8", Offset = "0x6E21D8", VA = "0x6E21D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x6E1C74", Offset = "0x6E1C74", VA = "0x6E1C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x6E2270", Offset = "0x6E2270", VA = "0x6E2270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x6E4264", Offset = "0x6E4264", VA = "0x6E4264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		public static State CurrentState
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x6E0038", Offset = "0x6E0038", VA = "0x6E0038")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000078")]
		public static ulong MyID
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x6E0E70", Offset = "0x6E0E70", VA = "0x6E0E70")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000079")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x6E3124", Offset = "0x6E3124", VA = "0x6E3124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x6E880C", Offset = "0x6E880C", VA = "0x6E880C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x6E8840", Offset = "0x6E8840", VA = "0x6E8840")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x6E8A30", Offset = "0x6E8A30", VA = "0x6E8A30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x6E8AC8", Offset = "0x6E8AC8", VA = "0x6E8AC8")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x6E8B98", Offset = "0x6E8B98", VA = "0x6E8B98")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x6E5428", Offset = "0x6E5428", VA = "0x6E5428")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x6E8C48", Offset = "0x6E8C48", VA = "0x6E8C48")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x6E8C50", Offset = "0x6E8C50", VA = "0x6E8C50")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x6E2A60", Offset = "0x6E2A60", VA = "0x6E2A60")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x6E8C84", Offset = "0x6E8C84", VA = "0x6E8C84")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x400072C")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x400072D")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x400072E")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x1700007A")]
		public virtual uint Score
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x6E8C8C", Offset = "0x6E8C8C", VA = "0x6E8C8C", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x6E1BB0", Offset = "0x6E1BB0", VA = "0x6E1BB0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0x6E8C94", Offset = "0x6E8C94", VA = "0x6E8C94")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		protected bool HasBall
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x6DF488", Offset = "0x6DF488", VA = "0x6DF488")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x6E8C9C", Offset = "0x6E8C9C", VA = "0x6E8C9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x6E7CE4", Offset = "0x6E7CE4", VA = "0x6E7CE4")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x6DF690", Offset = "0x6DF690", VA = "0x6DF690")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x6DF4F8", Offset = "0x6DF4F8", VA = "0x6DF4F8")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x6E8D6C", Offset = "0x6E8D6C", VA = "0x6E8D6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x6DF720", Offset = "0x6DF720", VA = "0x6DF720")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x1700007D")]
		public Player Player
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x6E420C", Offset = "0x6E420C", VA = "0x6E420C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public Text NameText
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x6E8E98", Offset = "0x6E8E98", VA = "0x6E8E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x6E8EA0", Offset = "0x6E8EA0", VA = "0x6E8EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B8D")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x6E8FA8", Offset = "0x6E8FA8", VA = "0x6E8FA8")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x1700007F")]
		public User User
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x6E8FB0", Offset = "0x6E8FB0", VA = "0x6E8FB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public ulong ID
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x6E697C", Offset = "0x6E697C", VA = "0x6E697C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000081")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0x6E8FB8", Offset = "0x6E8FB8", VA = "0x6E8FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x6E8FC0", Offset = "0x6E8FC0", VA = "0x6E8FC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public override uint Score
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x6E8FC8", Offset = "0x6E8FC8", VA = "0x6E8FC8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x6E8164", Offset = "0x6E8164", VA = "0x6E8164")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x6E8FCC", Offset = "0x6E8FCC", VA = "0x6E8FCC")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x6E8FD0", Offset = "0x6E8FD0", VA = "0x6E8FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x6E91F4", Offset = "0x6E91F4", VA = "0x6E91F4")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20001E6")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41997C", Offset = "0x41997C")]
		public int x;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4199BC", Offset = "0x4199BC")]
		public int y;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x6DA0A8", Offset = "0x6DA0A8", VA = "0x6DA0A8")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x6DA0B0", Offset = "0x6DA0B0", VA = "0x6DA0B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x6DAA60", Offset = "0x6DAA60", VA = "0x6DAA60")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x2000289")]
		private struct PositionInfo
		{
			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000746")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000747")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000748")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x6DAA68", Offset = "0x6DAA68", VA = "0x6DAA68")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x6DAC44", Offset = "0x6DAC44", VA = "0x6DAC44")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x6DAD38", Offset = "0x6DAD38", VA = "0x6DAD38")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x6DADFC", Offset = "0x6DADFC", VA = "0x6DADFC")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x6DAEC0", Offset = "0x6DAEC0", VA = "0x6DAEC0")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x6DB484", Offset = "0x6DB484", VA = "0x6DB484")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x6DB564", Offset = "0x6DB564", VA = "0x6DB564")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x6DB724", Offset = "0x6DB724", VA = "0x6DB724")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x6DB0B8", Offset = "0x6DB0B8", VA = "0x6DB0B8")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x6DB860", Offset = "0x6DB860", VA = "0x6DB860")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x6DB234", Offset = "0x6DB234", VA = "0x6DB234")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x6DB89C", Offset = "0x6DB89C", VA = "0x6DB89C")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		private enum GameState
		{
			[Token(Token = "0x4000AF1")]
			None,
			[Token(Token = "0x4000AF2")]
			PracticingMyTurn,
			[Token(Token = "0x4000AF3")]
			PracticingAiTurn,
			[Token(Token = "0x4000AF4")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4000AF5")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x6DB9A0", Offset = "0x6DB9A0", VA = "0x6DB9A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x6DBAFC", Offset = "0x6DBAFC", VA = "0x6DBAFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x6DB9C8", Offset = "0x6DB9C8", VA = "0x6DB9C8")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x6DBF24", Offset = "0x6DBF24", VA = "0x6DBF24")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x6DBB00", Offset = "0x6DBB00", VA = "0x6DBB00")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x6DC668", Offset = "0x6DC668", VA = "0x6DC668")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x6DC1BC", Offset = "0x6DC1BC", VA = "0x6DC1BC")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x6DC79C", Offset = "0x6DC79C", VA = "0x6DC79C")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x6DC808", Offset = "0x6DC808", VA = "0x6DC808")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x6DC8AC", Offset = "0x6DC8AC", VA = "0x6DC8AC")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x6DC8C0", Offset = "0x6DC8C0", VA = "0x6DC8C0")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x6DA6D4", Offset = "0x6DA6D4", VA = "0x6DA6D4")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x6DA6A8", Offset = "0x6DA6A8", VA = "0x6DA6A8")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x6DA6FC", Offset = "0x6DA6FC", VA = "0x6DA6FC")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x6DA994", Offset = "0x6DA994", VA = "0x6DA994")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x6DC3CC", Offset = "0x6DC3CC", VA = "0x6DC3CC")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x6DC4E0", Offset = "0x6DC4E0", VA = "0x6DC4E0")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x6DCB40", Offset = "0x6DCB40", VA = "0x6DCB40")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x6DCB48", Offset = "0x6DCB48", VA = "0x6DCB48")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x6DB9D0", Offset = "0x6DB9D0", VA = "0x6DB9D0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x6DBBB8", Offset = "0x6DBBB8", VA = "0x6DBBB8")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x6DCC9C", Offset = "0x6DCC9C", VA = "0x6DCC9C")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x200028B")]
		public enum Piece
		{
			[Token(Token = "0x4000AF7")]
			A,
			[Token(Token = "0x4000AF8")]
			B,
			[Token(Token = "0x4000AF9")]
			PowerBall
		}

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x17000083")]
		public Piece Type
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x6DCD00", Offset = "0x6DCD00", VA = "0x6DCD00")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x17000084")]
		public BoardPosition Position
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x6DCD08", Offset = "0x6DCD08", VA = "0x6DCD08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x6DCD10", Offset = "0x6DCD10", VA = "0x6DCD10")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x6DC770", Offset = "0x6DC770", VA = "0x6DC770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x6DC884", Offset = "0x6DC884", VA = "0x6DC884")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x6DCD18", Offset = "0x6DCD18", VA = "0x6DCD18")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000767")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x6DCD20", Offset = "0x6DCD20", VA = "0x6DCD20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x6DCD44", Offset = "0x6DCD44", VA = "0x6DCD44")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x6DCF0C", Offset = "0x6DCF0C", VA = "0x6DCF0C")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x6DCE64", Offset = "0x6DCE64", VA = "0x6DCE64")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x6DD3E0", Offset = "0x6DD3E0", VA = "0x6DD3E0")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x6DD7F8", Offset = "0x6DD7F8", VA = "0x6DD7F8")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x6DD8AC", Offset = "0x6DD8AC", VA = "0x6DD8AC")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x6DD994", Offset = "0x6DD994", VA = "0x6DD994")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x200028C")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4000AFB")]
			None,
			[Token(Token = "0x4000AFC")]
			Queued,
			[Token(Token = "0x4000AFD")]
			Configuring,
			[Token(Token = "0x4000AFE")]
			MyTurn,
			[Token(Token = "0x4000AFF")]
			RemoteTurn
		}

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x400076B")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x400076F")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x6DD99C", Offset = "0x6DD99C", VA = "0x6DD99C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x6DDBF4", Offset = "0x6DDBF4", VA = "0x6DDBF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x6DDD1C", Offset = "0x6DDD1C", VA = "0x6DDD1C")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x6DC008", Offset = "0x6DC008", VA = "0x6DC008")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x6DDDD8", Offset = "0x6DDDD8", VA = "0x6DDDD8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x6DDA5C", Offset = "0x6DDA5C", VA = "0x6DDA5C")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x6DDE14", Offset = "0x6DDE14", VA = "0x6DDE14")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x6DE0D4", Offset = "0x6DE0D4", VA = "0x6DE0D4")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x6DE224", Offset = "0x6DE224", VA = "0x6DE224")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x6DE9F4", Offset = "0x6DE9F4", VA = "0x6DE9F4")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x6DE514", Offset = "0x6DE514", VA = "0x6DE514")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x6DED9C", Offset = "0x6DED9C", VA = "0x6DED9C")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x6DC91C", Offset = "0x6DC91C", VA = "0x6DC91C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x6DEF84", Offset = "0x6DEF84", VA = "0x6DEF84")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x6DED54", Offset = "0x6DED54", VA = "0x6DED54")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x6DEFB8", Offset = "0x6DEFB8", VA = "0x6DEFB8")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x6DF07C", Offset = "0x6DF07C", VA = "0x6DF07C")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x17000086")]
		public static ulong MyID
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x6DDD34", Offset = "0x6DDD34", VA = "0x6DDD34")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000087")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x6DCBE8", Offset = "0x6DCBE8", VA = "0x6DCBE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x6DF084", Offset = "0x6DF084", VA = "0x6DF084")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x6DF1CC", Offset = "0x6DF1CC", VA = "0x6DF1CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x6DF264", Offset = "0x6DF264", VA = "0x6DF264")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x6DF334", Offset = "0x6DF334", VA = "0x6DF334")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x6DD334", Offset = "0x6DD334", VA = "0x6DD334")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x6DF41C", Offset = "0x6DF41C", VA = "0x6DF41C")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20001EE")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x6D56A0", Offset = "0x6D56A0", VA = "0x6D56A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x6D57A8", Offset = "0x6D57A8", VA = "0x6D57A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x6D586C", Offset = "0x6D586C", VA = "0x6D586C")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x6D74A0", Offset = "0x6D74A0", VA = "0x6D74A0")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x6D7388", Offset = "0x6D7388", VA = "0x6D7388")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x6D72D0", Offset = "0x6D72D0", VA = "0x6D72D0")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x6D71EC", Offset = "0x6D71EC", VA = "0x6D71EC")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x6D713C", Offset = "0x6D713C", VA = "0x6D713C")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x6D7028", Offset = "0x6D7028", VA = "0x6D7028")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x6D6F14", Offset = "0x6D6F14", VA = "0x6D6F14")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x6D5710", Offset = "0x6D5710", VA = "0x6D5710")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x6D6E5C", Offset = "0x6D6E5C", VA = "0x6D6E5C")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x6D603C", Offset = "0x6D603C", VA = "0x6D603C")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x6D6148", Offset = "0x6D6148", VA = "0x6D6148")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x6D6204", Offset = "0x6D6204", VA = "0x6D6204")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x6D6300", Offset = "0x6D6300", VA = "0x6D6300")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x6D6400", Offset = "0x6D6400", VA = "0x6D6400")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x6D64FC", Offset = "0x6D64FC", VA = "0x6D64FC")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x6D6628", Offset = "0x6D6628", VA = "0x6D6628")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x6D66E0", Offset = "0x6D66E0", VA = "0x6D66E0")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x6D67D8", Offset = "0x6D67D8", VA = "0x6D67D8")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x6D6890", Offset = "0x6D6890", VA = "0x6D6890")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x6D694C", Offset = "0x6D694C", VA = "0x6D694C")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x6D6A60", Offset = "0x6D6A60", VA = "0x6D6A60")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x6D6B74", Offset = "0x6D6B74", VA = "0x6D6B74")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x6D755C", Offset = "0x6D755C", VA = "0x6D755C")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x6D7A54", Offset = "0x6D7A54", VA = "0x6D7A54")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x6D8048", Offset = "0x6D8048", VA = "0x6D8048")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x6D85BC", Offset = "0x6D85BC", VA = "0x6D85BC")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x6D8694", Offset = "0x6D8694", VA = "0x6D8694")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x6D8714", Offset = "0x6D8714", VA = "0x6D8714")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x6D8CF0", Offset = "0x6D8CF0", VA = "0x6D8CF0")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x6D8E10", Offset = "0x6D8E10", VA = "0x6D8E10")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x6D8ECC", Offset = "0x6D8ECC", VA = "0x6D8ECC")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x6D8F88", Offset = "0x6D8F88", VA = "0x6D8F88")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x6D9044", Offset = "0x6D9044", VA = "0x6D9044")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x6D93BC", Offset = "0x6D93BC", VA = "0x6D93BC")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x6D97AC", Offset = "0x6D97AC", VA = "0x6D97AC")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x6D9884", Offset = "0x6D9884", VA = "0x6D9884")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x6D995C", Offset = "0x6D995C", VA = "0x6D995C")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x6D9A34", Offset = "0x6D9A34", VA = "0x6D9A34")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x6D9B0C", Offset = "0x6D9B0C", VA = "0x6D9B0C")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x6D9E34", Offset = "0x6D9E34", VA = "0x6D9E34")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x6D9F0C", Offset = "0x6D9F0C", VA = "0x6D9F0C")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x6D9FE4", Offset = "0x6D9FE4", VA = "0x6D9FE4")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x6DA0A0", Offset = "0x6DA0A0", VA = "0x6DA0A0")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20001EF")]
	internal enum states
	{
		[Token(Token = "0x4000776")]
		NOT_INIT,
		[Token(Token = "0x4000777")]
		IDLE,
		[Token(Token = "0x4000778")]
		REQUEST_FIND,
		[Token(Token = "0x4000779")]
		FINDING_ROOM,
		[Token(Token = "0x400077A")]
		REQUEST_CREATE,
		[Token(Token = "0x400077B")]
		REQUEST_JOIN,
		[Token(Token = "0x400077C")]
		REQUEST_LEAVE,
		[Token(Token = "0x400077D")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x400077E")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20001F0")]
	public static class Constants
	{
		[Token(Token = "0x400077F")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000780")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000781")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20001F1")]
	public class chatPacket
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x419BAC", Offset = "0x419BAC")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x419BBC", Offset = "0x419BBC")]
		private string <textString>k__BackingField;

		[Token(Token = "0x17000088")]
		public int packetID
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x6D50C8", Offset = "0x6D50C8", VA = "0x6D50C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4A4", Offset = "0x41B4A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x6D50D0", Offset = "0x6D50D0", VA = "0x6D50D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4B4", Offset = "0x41B4B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public string textString
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x6D50D8", Offset = "0x6D50D8", VA = "0x6D50D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4C4", Offset = "0x41B4C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x6D50E0", Offset = "0x6D50E0", VA = "0x6D50E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4D4", Offset = "0x41B4D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x6D50E8", Offset = "0x6D50E8", VA = "0x6D50E8")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x6D53FC", Offset = "0x6D53FC", VA = "0x6D53FC")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x6D5698", Offset = "0x6D5698", VA = "0x6D5698")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x62E810", Offset = "0x62E810", VA = "0x62E810")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x62E9C8", Offset = "0x62E9C8", VA = "0x62E9C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x62EA90", Offset = "0x62EA90", VA = "0x62EA90")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x62FE38", Offset = "0x62FE38", VA = "0x62FE38")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x62E92C", Offset = "0x62E92C", VA = "0x62E92C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x62FEF0", Offset = "0x62FEF0", VA = "0x62FEF0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x62FFDC", Offset = "0x62FFDC", VA = "0x62FFDC")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x62EF78", Offset = "0x62EF78", VA = "0x62EF78")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x630104", Offset = "0x630104", VA = "0x630104")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x62F0F4", Offset = "0x62F0F4", VA = "0x62F0F4")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x62F4B4", Offset = "0x62F4B4", VA = "0x62F4B4")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x62F628", Offset = "0x62F628", VA = "0x62F628")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x630244", Offset = "0x630244", VA = "0x630244")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x63037C", Offset = "0x63037C", VA = "0x63037C")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x62F340", Offset = "0x62F340", VA = "0x62F340")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x630688", Offset = "0x630688", VA = "0x630688")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x630758", Offset = "0x630758", VA = "0x630758")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x62F93C", Offset = "0x62F93C", VA = "0x62F93C")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x62EDEC", Offset = "0x62EDEC", VA = "0x62EDEC")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x62FA44", Offset = "0x62FA44", VA = "0x62FA44")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x630AD4", Offset = "0x630AD4", VA = "0x630AD4")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x62FB6C", Offset = "0x62FB6C", VA = "0x62FB6C")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x630BC4", Offset = "0x630BC4", VA = "0x630BC4")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x62FC7C", Offset = "0x62FC7C", VA = "0x62FC7C")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x630C94", Offset = "0x630C94", VA = "0x630C94")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x630D50", Offset = "0x630D50", VA = "0x630D50")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20001F3")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x1400000E")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x62E0D0", Offset = "0x62E0D0", VA = "0x62E0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4E4", Offset = "0x41B4E4")]
			add
			{
			}
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x62E184", Offset = "0x62E184", VA = "0x62E184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B4F4", Offset = "0x41B4F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x62E238", Offset = "0x62E238", VA = "0x62E238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B504", Offset = "0x41B504")]
			add
			{
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x62E2F0", Offset = "0x62E2F0", VA = "0x62E2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x41B514", Offset = "0x41B514")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x62E3A8", Offset = "0x62E3A8", VA = "0x62E3A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x62E7E0", Offset = "0x62E7E0", VA = "0x62E7E0")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x62E564", Offset = "0x62E564", VA = "0x62E564")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x62E800", Offset = "0x62E800", VA = "0x62E800")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001F4")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400078E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400078F")]
		public const string Tab = "    ";

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x846728", Offset = "0x846728", VA = "0x846728")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B524", Offset = "0x41B524")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B524", Offset = "0x41B524")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x8467B0", Offset = "0x8467B0", VA = "0x8467B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B584", Offset = "0x41B584")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B584", Offset = "0x41B584")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x846848", Offset = "0x846848", VA = "0x846848")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B5E4", Offset = "0x41B5E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B5E4", Offset = "0x41B5E4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x8468D0", Offset = "0x8468D0", VA = "0x8468D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B644", Offset = "0x41B644")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B644", Offset = "0x41B644")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x846958", Offset = "0x846958", VA = "0x846958")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B6A4", Offset = "0x41B6A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x41B6A4", Offset = "0x41B6A4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class CAPI
	{
		[Token(Token = "0x200028D")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200028E")]
		public enum Result
		{
			[Token(Token = "0x4000B01")]
			Success = 0,
			[Token(Token = "0x4000B02")]
			Failure = -1000,
			[Token(Token = "0x4000B03")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000B04")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000B05")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000B06")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000B07")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000B08")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000B09")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200028F")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x84E1C8", Offset = "0x84E1C8", VA = "0x84E1C8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000790")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000798")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x846A58", Offset = "0x846A58", VA = "0x846A58")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x846AE8", Offset = "0x846AE8", VA = "0x846AE8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x846CB0", Offset = "0x846CB0", VA = "0x846CB0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x846D94", Offset = "0x846D94", VA = "0x846D94")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x846E04", Offset = "0x846E04", VA = "0x846E04")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x846E78", Offset = "0x846E78", VA = "0x846E78")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x846EF8", Offset = "0x846EF8", VA = "0x846EF8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x847010", Offset = "0x847010", VA = "0x847010")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x847090", Offset = "0x847090", VA = "0x847090")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8471A8", Offset = "0x8471A8", VA = "0x8471A8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x847228", Offset = "0x847228", VA = "0x847228")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x8472A8", Offset = "0x8472A8", VA = "0x8472A8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x847328", Offset = "0x847328", VA = "0x847328")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8473A8", Offset = "0x8473A8", VA = "0x8473A8")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x847438", Offset = "0x847438", VA = "0x847438")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x8474C8", Offset = "0x8474C8", VA = "0x8474C8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x847558", Offset = "0x847558", VA = "0x847558")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x8475D8", Offset = "0x8475D8", VA = "0x8475D8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x847658", Offset = "0x847658", VA = "0x847658")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x8476E8", Offset = "0x8476E8", VA = "0x8476E8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x847778", Offset = "0x847778", VA = "0x847778")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x847808", Offset = "0x847808", VA = "0x847808")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x847888", Offset = "0x847888", VA = "0x847888")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x847928", Offset = "0x847928", VA = "0x847928")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x8479A8", Offset = "0x8479A8", VA = "0x8479A8")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x847A48", Offset = "0x847A48", VA = "0x847A48")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x847B08", Offset = "0x847B08", VA = "0x847B08")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x847BD8", Offset = "0x847BD8", VA = "0x847BD8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x847C68", Offset = "0x847C68", VA = "0x847C68")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x847CF8", Offset = "0x847CF8", VA = "0x847CF8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x847D88", Offset = "0x847D88", VA = "0x847D88")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x847E18", Offset = "0x847E18", VA = "0x847E18")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x847EA8", Offset = "0x847EA8", VA = "0x847EA8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x847F28", Offset = "0x847F28", VA = "0x847F28")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x848048", Offset = "0x848048", VA = "0x848048")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x847FB8", Offset = "0x847FB8", VA = "0x847FB8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x848248", Offset = "0x848248", VA = "0x848248")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x848380", Offset = "0x848380", VA = "0x848380")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C66")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x848400", Offset = "0x848400", VA = "0x848400")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x848670", Offset = "0x848670", VA = "0x848670")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x8486F0", Offset = "0x8486F0", VA = "0x8486F0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x848828", Offset = "0x848828", VA = "0x848828")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x8488A8", Offset = "0x8488A8", VA = "0x8488A8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x8489E0", Offset = "0x8489E0", VA = "0x8489E0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x848A60", Offset = "0x848A60", VA = "0x848A60")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x848B98", Offset = "0x848B98", VA = "0x848B98")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x848C18", Offset = "0x848C18", VA = "0x848C18")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x848D50", Offset = "0x848D50", VA = "0x848D50")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x848DD0", Offset = "0x848DD0", VA = "0x848DD0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x848E50", Offset = "0x848E50", VA = "0x848E50")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x848EE8", Offset = "0x848EE8", VA = "0x848EE8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x848F68", Offset = "0x848F68", VA = "0x848F68")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x849114", Offset = "0x849114", VA = "0x849114")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x849240", Offset = "0x849240", VA = "0x849240")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x849094", Offset = "0x849094", VA = "0x849094")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x8492C0", Offset = "0x8492C0", VA = "0x8492C0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x849340", Offset = "0x849340", VA = "0x849340")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x8493D0", Offset = "0x8493D0", VA = "0x8493D0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x849450", Offset = "0x849450", VA = "0x849450")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x8494E0", Offset = "0x8494E0", VA = "0x8494E0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x849560", Offset = "0x849560", VA = "0x849560")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x8495E0", Offset = "0x8495E0", VA = "0x8495E0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x84981C", Offset = "0x84981C", VA = "0x84981C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x8498AC", Offset = "0x8498AC", VA = "0x8498AC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x849A98", Offset = "0x849A98", VA = "0x849A98")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x849B30", Offset = "0x849B30", VA = "0x849B30")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x849C54", Offset = "0x849C54", VA = "0x849C54")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x849CD4", Offset = "0x849CD4", VA = "0x849CD4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x849D54", Offset = "0x849D54", VA = "0x849D54")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x849E7C", Offset = "0x849E7C", VA = "0x849E7C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x849EFC", Offset = "0x849EFC", VA = "0x849EFC")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x84A024", Offset = "0x84A024", VA = "0x84A024")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x84A0A4", Offset = "0x84A0A4", VA = "0x84A0A4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x84A134", Offset = "0x84A134", VA = "0x84A134")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x84A1C4", Offset = "0x84A1C4", VA = "0x84A1C4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x84A254", Offset = "0x84A254", VA = "0x84A254")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x84A2D4", Offset = "0x84A2D4", VA = "0x84A2D4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x84A35C", Offset = "0x84A35C", VA = "0x84A35C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x84A3E4", Offset = "0x84A3E4", VA = "0x84A3E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x84A464", Offset = "0x84A464", VA = "0x84A464")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x84A4E4", Offset = "0x84A4E4", VA = "0x84A4E4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x84A598", Offset = "0x84A598", VA = "0x84A598")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x84A628", Offset = "0x84A628", VA = "0x84A628")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x84A6B8", Offset = "0x84A6B8", VA = "0x84A6B8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x84A738", Offset = "0x84A738", VA = "0x84A738")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x84A7B8", Offset = "0x84A7B8", VA = "0x84A7B8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x84A838", Offset = "0x84A838", VA = "0x84A838")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x84A8D0", Offset = "0x84A8D0", VA = "0x84A8D0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x84A960", Offset = "0x84A960", VA = "0x84A960")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x84A9F0", Offset = "0x84A9F0", VA = "0x84A9F0")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x84AA80", Offset = "0x84AA80", VA = "0x84AA80")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x84AB18", Offset = "0x84AB18", VA = "0x84AB18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x84ABB0", Offset = "0x84ABB0", VA = "0x84ABB0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x84AC30", Offset = "0x84AC30", VA = "0x84AC30")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x84ACB0", Offset = "0x84ACB0", VA = "0x84ACB0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x84ADD8", Offset = "0x84ADD8", VA = "0x84ADD8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x84AE58", Offset = "0x84AE58", VA = "0x84AE58")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x84AF80", Offset = "0x84AF80", VA = "0x84AF80")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x84B000", Offset = "0x84B000", VA = "0x84B000")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x84B128", Offset = "0x84B128", VA = "0x84B128")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x84B1A8", Offset = "0x84B1A8", VA = "0x84B1A8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x84B350", Offset = "0x84B350", VA = "0x84B350")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x84B5EC", Offset = "0x84B5EC", VA = "0x84B5EC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x84B2D0", Offset = "0x84B2D0", VA = "0x84B2D0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x84B67C", Offset = "0x84B67C", VA = "0x84B67C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x84B6FC", Offset = "0x84B6FC", VA = "0x84B6FC")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x84B78C", Offset = "0x84B78C", VA = "0x84B78C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x84B81C", Offset = "0x84B81C", VA = "0x84B81C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x84B8AC", Offset = "0x84B8AC", VA = "0x84B8AC")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x84B94C", Offset = "0x84B94C", VA = "0x84B94C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x84B9EC", Offset = "0x84B9EC", VA = "0x84B9EC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x84BA8C", Offset = "0x84BA8C", VA = "0x84BA8C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x84BB0C", Offset = "0x84BB0C", VA = "0x84BB0C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x84BB8C", Offset = "0x84BB8C", VA = "0x84BB8C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x84BC0C", Offset = "0x84BC0C", VA = "0x84BC0C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x84BC8C", Offset = "0x84BC8C", VA = "0x84BC8C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x84BD0C", Offset = "0x84BD0C", VA = "0x84BD0C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x84BE34", Offset = "0x84BE34", VA = "0x84BE34")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x84BECC", Offset = "0x84BECC", VA = "0x84BECC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x84BF4C", Offset = "0x84BF4C", VA = "0x84BF4C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x84BFB0", Offset = "0x84BFB0", VA = "0x84BFB0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x84C0CC", Offset = "0x84C0CC", VA = "0x84C0CC")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x84C15C", Offset = "0x84C15C", VA = "0x84C15C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x84C2A0", Offset = "0x84C2A0", VA = "0x84C2A0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x84C330", Offset = "0x84C330", VA = "0x84C330")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x84C3D0", Offset = "0x84C3D0", VA = "0x84C3D0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x84C768", Offset = "0x84C768", VA = "0x84C768")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x84C7E8", Offset = "0x84C7E8", VA = "0x84C7E8")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x84C880", Offset = "0x84C880", VA = "0x84C880")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x84D048", Offset = "0x84D048", VA = "0x84D048")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x84D0C8", Offset = "0x84D0C8", VA = "0x84D0C8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8469F0", Offset = "0x8469F0", VA = "0x8469F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x41B704", Offset = "0x41B704")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x84D160", Offset = "0x84D160", VA = "0x84D160")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x84D1E4", Offset = "0x84D1E4", VA = "0x84D1E4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x84D264", Offset = "0x84D264", VA = "0x84D264")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x84D2E4", Offset = "0x84D2E4", VA = "0x84D2E4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x84D364", Offset = "0x84D364", VA = "0x84D364")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x84DD44", Offset = "0x84DD44", VA = "0x84DD44")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x84DDC4", Offset = "0x84DDC4", VA = "0x84DDC4")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x84E2A4", Offset = "0x84E2A4", VA = "0x84E2A4")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x84E138", Offset = "0x84E138", VA = "0x84E138")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x84E318", Offset = "0x84E318", VA = "0x84E318")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001F6")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x419BEC", Offset = "0x419BEC")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x7A104C", Offset = "0x7A104C", VA = "0x7A104C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x7A1050", Offset = "0x7A1050", VA = "0x7A1050")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x7A1110", Offset = "0x7A1110", VA = "0x7A1110")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419C38", Offset = "0x419C38")]
		public bool autoRetrigger;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x419C70", Offset = "0x419C70")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419C94", Offset = "0x419C94")]
		public Transform[] playPositions;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x797CE8", Offset = "0x797CE8", VA = "0x797CE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x797E98", Offset = "0x797E98", VA = "0x797E98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x798074", Offset = "0x798074", VA = "0x798074")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x797EF8", Offset = "0x797EF8", VA = "0x797EF8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x7981B4", Offset = "0x7981B4", VA = "0x7981B4")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x798328", Offset = "0x798328", VA = "0x798328")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40007A7")]
		Default,
		[Token(Token = "0x40007A8")]
		Preload,
		[Token(Token = "0x40007A9")]
		ManualPreload
	}
	[Token(Token = "0x20001F9")]
	public enum Fade
	{
		[Token(Token = "0x40007AB")]
		In,
		[Token(Token = "0x40007AC")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001FA")]
	public class SoundGroup
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x419CCC", Offset = "0x419CCC")]
		public int maxPlayingSounds;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x7A0EDC", Offset = "0x7A0EDC", VA = "0x7A0EDC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x7A0F90", Offset = "0x7A0F90", VA = "0x7A0F90")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x79F89C", Offset = "0x79F89C", VA = "0x79F89C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x79F9DC", Offset = "0x79F9DC", VA = "0x79F9DC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x7A04F8", Offset = "0x7A04F8", VA = "0x7A04F8")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FB")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000290")]
		public enum Fade
		{
			[Token(Token = "0x4000B0C")]
			In,
			[Token(Token = "0x4000B0D")]
			Out
		}

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415350", Offset = "0x415350")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x79C6D8", Offset = "0x79C6D8", VA = "0x79C6D8")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x79F320", Offset = "0x79F320", VA = "0x79F320")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415360", Offset = "0x415360")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x79F288", Offset = "0x79F288", VA = "0x79F288")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x79F290", Offset = "0x79F290", VA = "0x79F290")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419CF8", Offset = "0x419CF8")]
		public bool makePersistent;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419D30", Offset = "0x419D30")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419D68", Offset = "0x419D68")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419DA0", Offset = "0x419DA0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419DD8", Offset = "0x419DD8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419E10", Offset = "0x419E10")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419E48", Offset = "0x419E48")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419E80", Offset = "0x419E80")]
		public bool verboseLogging;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419EB8", Offset = "0x419EB8")]
		public int maxSoundEmitters;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419EF0", Offset = "0x419EF0")]
		public float volumeSoundFX;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x419F28", Offset = "0x419F28")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700008A")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x798400", Offset = "0x798400", VA = "0x798400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x7984E0", Offset = "0x7984E0", VA = "0x7984E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x798548", Offset = "0x798548", VA = "0x798548")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008D")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x7985BC", Offset = "0x7985BC", VA = "0x7985BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008E")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x798630", Offset = "0x798630", VA = "0x798630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x7986A4", Offset = "0x7986A4", VA = "0x7986A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x798718", Offset = "0x798718", VA = "0x798718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x79A5BC", Offset = "0x79A5BC", VA = "0x79A5BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x79878C", Offset = "0x79878C", VA = "0x79878C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x7989C0", Offset = "0x7989C0", VA = "0x7989C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x798790", Offset = "0x798790", VA = "0x798790")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x7996E0", Offset = "0x7996E0", VA = "0x7996E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x798B18", Offset = "0x798B18", VA = "0x798B18")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x799D58", Offset = "0x799D58", VA = "0x799D58")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x799ED8", Offset = "0x799ED8", VA = "0x799ED8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x79A074", Offset = "0x79A074", VA = "0x79A074")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x79A174", Offset = "0x79A174", VA = "0x79A174")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x79A204", Offset = "0x79A204", VA = "0x79A204")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x798FCC", Offset = "0x798FCC", VA = "0x798FCC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x7996E4", Offset = "0x7996E4", VA = "0x7996E4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x79A870", Offset = "0x79A870", VA = "0x79A870")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x79A974", Offset = "0x79A974", VA = "0x79A974")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x79AA7C", Offset = "0x79AA7C", VA = "0x79AA7C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x79A738", Offset = "0x79A738", VA = "0x79A738")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x79ABF0", Offset = "0x79ABF0", VA = "0x79ABF0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x79AD44", Offset = "0x79AD44", VA = "0x79AD44")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x79AEF4", Offset = "0x79AEF4", VA = "0x79AEF4")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x798104", Offset = "0x798104", VA = "0x798104")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x798278", Offset = "0x798278", VA = "0x798278")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x79B0A0", Offset = "0x79B0A0", VA = "0x79B0A0")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x79B16C", Offset = "0x79B16C", VA = "0x79B16C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x79B200", Offset = "0x79B200", VA = "0x79B200")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x79B2C4", Offset = "0x79B2C4", VA = "0x79B2C4")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x79B368", Offset = "0x79B368", VA = "0x79B368")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x79B448", Offset = "0x79B448", VA = "0x79B448")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x79BFE0", Offset = "0x79BFE0", VA = "0x79BFE0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x79C6E0", Offset = "0x79C6E0", VA = "0x79C6E0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x79C8C0", Offset = "0x79C8C0", VA = "0x79C8C0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x79D6CC", Offset = "0x79D6CC", VA = "0x79D6CC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x79B650", Offset = "0x79B650", VA = "0x79B650")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x79D7EC", Offset = "0x79D7EC", VA = "0x79D7EC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x79D8E4", Offset = "0x79D8E4", VA = "0x79D8E4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x79DA28", Offset = "0x79DA28", VA = "0x79DA28")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x79DE28", Offset = "0x79DE28", VA = "0x79DE28")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x79E03C", Offset = "0x79E03C", VA = "0x79E03C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x79E158", Offset = "0x79E158", VA = "0x79E158")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x79E320", Offset = "0x79E320", VA = "0x79E320")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x79E3F8", Offset = "0x79E3F8", VA = "0x79E3F8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x79E540", Offset = "0x79E540", VA = "0x79E540")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x79E944", Offset = "0x79E944", VA = "0x79E944")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40007D4")]
		None = -1,
		[Token(Token = "0x40007D5")]
		Reserved,
		[Token(Token = "0x40007D6")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x79F41C", Offset = "0x79F41C", VA = "0x79F41C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x79F3C0", Offset = "0x79F3C0", VA = "0x79F3C0")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000293")]
		public enum FadeState
		{
			[Token(Token = "0x4000B12")]
			Null,
			[Token(Token = "0x4000B13")]
			FadingIn,
			[Token(Token = "0x4000B14")]
			FadingOut,
			[Token(Token = "0x4000B15")]
			Ducking
		}

		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415370", Offset = "0x415370")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EEF")]
				[Address(RVA = "0x79FEE0", Offset = "0x79FEE0", VA = "0x79FEE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF1")]
				[Address(RVA = "0x79FF48", Offset = "0x79FF48", VA = "0x79FF48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x79FB9C", Offset = "0x79FB9C", VA = "0x79FB9C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x79FDE4", Offset = "0x79FDE4", VA = "0x79FDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x79FDE8", Offset = "0x79FDE8", VA = "0x79FDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x79FEE8", Offset = "0x79FEE8", VA = "0x79FEE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415380", Offset = "0x415380")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF5")]
				[Address(RVA = "0x7A03B8", Offset = "0x7A03B8", VA = "0x7A03B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF7")]
				[Address(RVA = "0x7A0420", Offset = "0x7A0420", VA = "0x7A0420", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x79FD74", Offset = "0x79FD74", VA = "0x79FD74")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x7A0240", Offset = "0x7A0240", VA = "0x7A0240", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x7A0244", Offset = "0x7A0244", VA = "0x7A0244", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x7A03C0", Offset = "0x7A03C0", VA = "0x7A03C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x415390", Offset = "0x415390")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170000D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0x7A01D0", Offset = "0x7A01D0", VA = "0x7A01D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EFD")]
				[Address(RVA = "0x7A0238", Offset = "0x7A0238", VA = "0x7A0238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x79FDA0", Offset = "0x79FDA0", VA = "0x79FDA0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x79FF50", Offset = "0x79FF50", VA = "0x79FF50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x79FF54", Offset = "0x79FF54", VA = "0x79FF54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x7A01D8", Offset = "0x7A01D8", VA = "0x7A01D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000092")]
		public float volume
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x79D6B0", Offset = "0x79D6B0", VA = "0x79D6B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x79F4BC", Offset = "0x79F4BC", VA = "0x79F4BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float pitch
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x79F4D8", Offset = "0x79F4D8", VA = "0x79F4D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x79F4F4", Offset = "0x79F4F4", VA = "0x79F4F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public AudioClip clip
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x79F510", Offset = "0x79F510", VA = "0x79F510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x79F52C", Offset = "0x79F52C", VA = "0x79F52C")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float time
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x79F548", Offset = "0x79F548", VA = "0x79F548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x79B42C", Offset = "0x79B42C", VA = "0x79B42C")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float length
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x79F564", Offset = "0x79F564", VA = "0x79F564")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000097")]
		public bool loop
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x79F61C", Offset = "0x79F61C", VA = "0x79F61C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x79F638", Offset = "0x79F638", VA = "0x79F638")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool mute
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x79F658", Offset = "0x79F658", VA = "0x79F658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x79F674", Offset = "0x79F674", VA = "0x79F674")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x79F694", Offset = "0x79F694", VA = "0x79F694")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x79F6B0", Offset = "0x79F6B0", VA = "0x79F6B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool isPlaying
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x79F6CC", Offset = "0x79F6CC", VA = "0x79F6CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x79F6E8", Offset = "0x79F6E8", VA = "0x79F6E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x79D678", Offset = "0x79D678", VA = "0x79D678")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x79F92C", Offset = "0x79F92C", VA = "0x79F92C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x79D9F4", Offset = "0x79D9F4", VA = "0x79D9F4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x79F934", Offset = "0x79F934", VA = "0x79F934")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x79F93C", Offset = "0x79F93C", VA = "0x79F93C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x79E278", Offset = "0x79E278", VA = "0x79E278")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x79A804", Offset = "0x79A804", VA = "0x79A804")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x79F944", Offset = "0x79F944", VA = "0x79F944")]
		public void Play()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x79F9A4", Offset = "0x79F9A4", VA = "0x79F9A4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x79A624", Offset = "0x79A624", VA = "0x79A624")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x79FA6C", Offset = "0x79FA6C", VA = "0x79FA6C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x79DD1C", Offset = "0x79DD1C", VA = "0x79DD1C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x79DF6C", Offset = "0x79DF6C", VA = "0x79DF6C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x79ABA8", Offset = "0x79ABA8", VA = "0x79ABA8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x79FAC4", Offset = "0x79FAC4", VA = "0x79FAC4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x79FAF0", Offset = "0x79FAF0", VA = "0x79FAF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B768", Offset = "0x41B768")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x79FBC8", Offset = "0x79FBC8", VA = "0x79FBC8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x79AFAC", Offset = "0x79AFAC", VA = "0x79AFAC")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x79B028", Offset = "0x79B028", VA = "0x79B028")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x79AE5C", Offset = "0x79AE5C", VA = "0x79AE5C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x79ACA8", Offset = "0x79ACA8", VA = "0x79ACA8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x79FC30", Offset = "0x79FC30", VA = "0x79FC30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B7CC", Offset = "0x41B7CC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x79FCC0", Offset = "0x79FCC0", VA = "0x79FCC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x41B830", Offset = "0x41B830")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x79FDCC", Offset = "0x79FDCC", VA = "0x79FDCC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40007ED")]
		Random,
		[Token(Token = "0x40007EE")]
		Sequential
	}
	[Token(Token = "0x2000201")]
	public enum FreqHint
	{
		[Token(Token = "0x40007F0")]
		None,
		[Token(Token = "0x40007F1")]
		Wide,
		[Token(Token = "0x40007F2")]
		Narrow
	}
	[Token(Token = "0x2000202")]
	public enum SoundPriority
	{
		[Token(Token = "0x40007F4")]
		VeryLow = -2,
		[Token(Token = "0x40007F5")]
		Low,
		[Token(Token = "0x40007F6")]
		Default,
		[Token(Token = "0x40007F7")]
		High,
		[Token(Token = "0x40007F8")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class OSPProps
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A010", Offset = "0x41A010")]
		public bool enableSpatialization;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A048", Offset = "0x41A048")]
		public bool useFastOverride;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A080", Offset = "0x41A080")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A080", Offset = "0x41A080")]
		public float gain;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A0D4", Offset = "0x41A0D4")]
		public bool enableInvSquare;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A10C", Offset = "0x41A10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A10C", Offset = "0x41A10C")]
		public float volumetric;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A164", Offset = "0x41A164")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x41A164", Offset = "0x41A164")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x79F42C", Offset = "0x79F42C", VA = "0x79F42C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class SoundFX
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A1C4", Offset = "0x41A1C4")]
		public string name;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A1FC", Offset = "0x41A1FC")]
		public SoundFXNext playback;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A234", Offset = "0x41A234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A234", Offset = "0x41A234")]
		public float volume;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A288", Offset = "0x41A288")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x41A288", Offset = "0x41A288")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A2E4", Offset = "0x41A2E4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x41A2E4", Offset = "0x41A2E4")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A344", Offset = "0x41A344")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A37C", Offset = "0x41A37C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A3B4", Offset = "0x41A3B4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A3EC", Offset = "0x41A3EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A3EC", Offset = "0x41A3EC")]
		public float spread;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A444", Offset = "0x41A444")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x41A444", Offset = "0x41A444")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A498", Offset = "0x41A498")]
		public SoundPriority priority;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A4D0", Offset = "0x41A4D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x41A4D0", Offset = "0x41A4D0")]
		public Vector2 delay;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A52C", Offset = "0x41A52C")]
		public bool looping;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x41A564", Offset = "0x41A564")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700009B")]
		public int Length
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x7A0428", Offset = "0x7A0428", VA = "0x7A0428")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009C")]
		public bool IsValid
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x7A0444", Offset = "0x7A0444", VA = "0x7A0444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009D")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x7A04E8", Offset = "0x7A04E8", VA = "0x7A04E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x7A04F0", Offset = "0x7A04F0", VA = "0x7A04F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x79D580", Offset = "0x79D580", VA = "0x79D580")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009F")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x79D5B4", Offset = "0x79D5B4", VA = "0x79D5B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x79ECC4", Offset = "0x79ECC4", VA = "0x79ECC4")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x79D4B0", Offset = "0x79D4B0", VA = "0x79D4B0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x79D5D8", Offset = "0x79D5D8", VA = "0x79D5D8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x79D58C", Offset = "0x79D58C", VA = "0x79D58C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x7A0518", Offset = "0x7A0518", VA = "0x7A0518")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x79D5CC", Offset = "0x79D5CC", VA = "0x79D5CC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x7A0614", Offset = "0x7A0614", VA = "0x7A0614")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x7A06F0", Offset = "0x7A06F0", VA = "0x7A06F0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x7A0804", Offset = "0x7A0804", VA = "0x7A0804")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x7A0890", Offset = "0x7A0890", VA = "0x7A0890")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x7A0924", Offset = "0x7A0924", VA = "0x7A0924")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x7A09B0", Offset = "0x7A09B0", VA = "0x7A09B0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x7A0A3C", Offset = "0x7A0A3C", VA = "0x7A0A3C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000A0")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x7A0AB4", Offset = "0x7A0AB4", VA = "0x7A0AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		public string name
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x7A0BC8", Offset = "0x7A0BC8", VA = "0x7A0BC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x7A0BD0", Offset = "0x7A0BD0", VA = "0x7A0BD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public int Length
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x7A0BF8", Offset = "0x7A0BF8", VA = "0x7A0BF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A3")]
		public bool IsValid
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x7A0C3C", Offset = "0x7A0C3C", VA = "0x7A0C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x7A0AE4", Offset = "0x7A0AE4", VA = "0x7A0AE4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x7A0C74", Offset = "0x7A0C74", VA = "0x7A0C74")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x7A0CAC", Offset = "0x7A0CAC", VA = "0x7A0CAC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x7A0CEC", Offset = "0x7A0CEC", VA = "0x7A0CEC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x798084", Offset = "0x798084", VA = "0x798084")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x7A0D34", Offset = "0x7A0D34", VA = "0x7A0D34")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x7A0D74", Offset = "0x7A0D74", VA = "0x7A0D74")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x7A0DC4", Offset = "0x7A0DC4", VA = "0x7A0DC4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x7A0DFC", Offset = "0x7A0DFC", VA = "0x7A0DFC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x7A0E3C", Offset = "0x7A0E3C", VA = "0x7A0E3C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x7A0E74", Offset = "0x7A0E74", VA = "0x7A0E74")]
		public SoundFXRef()
		{
		}
	}
}
